
Current Proejct: /home/x/CryptoAPIDetect/dataset/cryptoapi-bench/build/libs/rigorityj-samples-1.0-SNAPSHOT.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 536.8 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 277 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 278
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.0

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 278
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.01

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 278
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.01

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 279
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.01

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 279
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.02

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 279
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.02

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 280
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.03

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 281
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.03

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 281
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.03

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 281
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.04

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 282
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.04

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 282
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.04

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 282
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.05

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 14 of 283
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.05

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 15 of 283
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.05

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 16 of 283
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.06

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 17 of 284
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.06

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 18 of 284
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.06

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 19 of 284
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.07

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 20 of 285
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.07

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 21 of 285
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.07

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 22 of 285
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.08

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 23 of 286
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.08

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 24 of 286
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.08

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 25 of 286
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.09

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 26 of 287
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.09

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 27 of 287
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.09

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 28 of 287
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.1

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 29 of 288
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.1

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 30 of 289
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.1

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 31 of 289
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.11

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 32 of 289
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.11

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 33 of 289
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.11

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 34 of 289
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.12

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 35 of 289
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.12

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 36 of 289
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.12

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 37 of 289
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.13

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 38 of 289
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.13

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 39 of 289
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.13

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 40 of 290
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.14

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 41 of 290
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.14

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 42 of 290
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.14

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 43 of 291
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.15

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 44 of 291
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.15

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 45 of 292
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.15

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 46 of 293
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.16

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 47 of 293
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.16

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 48 of 294
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.16

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 49 of 295
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.17

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 50 of 296
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.17

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 51 of 296
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.17

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 52 of 297
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.18

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 53 of 298
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.18

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 54 of 299
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.18

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 55 of 300
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.18

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 56 of 302
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.19

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 57 of 302
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.19

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 58 of 303
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.19

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 59 of 304
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.19

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 60 of 304
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.2

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 61 of 305
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.2

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 62 of 306
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.2

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 63 of 307
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.21

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 64 of 308
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.21

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 65 of 309
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.21

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 66 of 310
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.21

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 67 of 311
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.22

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 68 of 312
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.22

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 69 of 313
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.22

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 70 of 313
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.22

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 71 of 314
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.23

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 72 of 315
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.23

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 73 of 316
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.23

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 74 of 317
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.23

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 75 of 317
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.24

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 76 of 318
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.24

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 77 of 318
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.24

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 78 of 319
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.24

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 79 of 319
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.25

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 80 of 320
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.25

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 81 of 321
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.25

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 82 of 322
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.25

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 83 of 323
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.26

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 84 of 324
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.26

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 85 of 325
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.26

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 86 of 326
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.26

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 87 of 327
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.27

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 88 of 328
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.27

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 89 of 329
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.27

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 90 of 330
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.27

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 91 of 331
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.27

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 92 of 332
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.28

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 93 of 332
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.28

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 94 of 333
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.28

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 95 of 333
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.29

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 96 of 334
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.29

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 97 of 334
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.29

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 98 of 334
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.29

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 99 of 335
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.3

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 100 of 335
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.3

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 101 of 336
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.3

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 102 of 336
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.3

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 103 of 337
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.31

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 104 of 337
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.31

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 105 of 338
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.31

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 106 of 338
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.31

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 107 of 339
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.32

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 108 of 339
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.32

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 109 of 339
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.32

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 110 of 339
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.32

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 111 of 339
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 112 of 339
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 113 of 339
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 114 of 339
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.34

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 115 of 339
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.34

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 116 of 340
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.34

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 117 of 340
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.34

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 118 of 340
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.35

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 119 of 340
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.35

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 120 of 340
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.35

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 121 of 340
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.36

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 122 of 340
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.36

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 123 of 340
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.36

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 124 of 340
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.36

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 125 of 340
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.37

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 126 of 341
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.37

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 127 of 341
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.37

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 128 of 342
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.37

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 129 of 343
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.38

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 130 of 344
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.38

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 131 of 345
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.38

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 132 of 346
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.38

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 133 of 347
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.38

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 134 of 348
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.39

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 135 of 349
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.39

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 136 of 350
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.39

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 137 of 351
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.39

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 138 of 351
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.39

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 139 of 352
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.39

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 140 of 353
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.4

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 141 of 354
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.4

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 142 of 355
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.4

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 143 of 355
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.4

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 144 of 356
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.4

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 145 of 357
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.41

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 146 of 358
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.41

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 147 of 359
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.41

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 148 of 360
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.41

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 149 of 361
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.41

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 150 of 362
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.41

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 151 of 363
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.42

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 152 of 363
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.42

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 153 of 363
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.42

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 154 of 363
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.42

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 155 of 363
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.43

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 156 of 363
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.43

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 157 of 363
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.43

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 158 of 363
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.44

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 159 of 363
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.44

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 160 of 363
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.44

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 161 of 363
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.44

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 162 of 363
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.45

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 163 of 363
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.45

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 164 of 363
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.45

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 165 of 364
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.45

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 166 of 364
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.46

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 167 of 364
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.46

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 168 of 365
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.46

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 169 of 365
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.46

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 170 of 366
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.46

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 171 of 366
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.47

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 172 of 367
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.47

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 173 of 367
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.47

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 174 of 368
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.47

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 175 of 368
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.48

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 176 of 369
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.48

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 177 of 369
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.48

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 178 of 370
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.48

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 179 of 370
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.48

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 180 of 371
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.49

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 181 of 371
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.49

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 182 of 372
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.49

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 183 of 373
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.49

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 184 of 373
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.49

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 185 of 374
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.49

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 186 of 374
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 187 of 375
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 188 of 375
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 189 of 375
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 190 of 376
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.51

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 191 of 376
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.51

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 192 of 377
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.51

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 193 of 377
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.51

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 194 of 377
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.51

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 195 of 378
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.52

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 196 of 378
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.52

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 197 of 379
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.52

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 198 of 379
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.52

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 199 of 380
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.52

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 200 of 382
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.52

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 201 of 383
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.52

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 202 of 383
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.53

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 203 of 384
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.53

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 204 of 384
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.53

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 205 of 385
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.53

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 206 of 385
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.54

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 207 of 386
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.54

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 208 of 386
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.54

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 209 of 387
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.54

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 210 of 387
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.54

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 211 of 388
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.54

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 212 of 388
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.55

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 213 of 389
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.55

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 214 of 389
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.55

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 215 of 390
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.55

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 216 of 392
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.55

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 217 of 393
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.55

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 218 of 393
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.55

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 219 of 394
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.56

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 220 of 394
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.56

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 221 of 394
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.56

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 222 of 395
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.56

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 223 of 397
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.56

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 224 of 398
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.56

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 225 of 398
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.57

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 226 of 399
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.57

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 227 of 399
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.57

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 228 of 399
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.57

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 229 of 400
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.57

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 230 of 400
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.58

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 231 of 401
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.58

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 232 of 401
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.58

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 233 of 402
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.58

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 234 of 402
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.58

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 235 of 403
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.58

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 236 of 403
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.59

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 237 of 404
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.59

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 238 of 404
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.59

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 239 of 405
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.59

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 240 of 407
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.59

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 241 of 408
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.59

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 242 of 408
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.59

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 243 of 409
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.59

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 244 of 409
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.6

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 245 of 410
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.6

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 246 of 410
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.6

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 247 of 411
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.6

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 248 of 411
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.6

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 249 of 412
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.6

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 250 of 412
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.61

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 251 of 413
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.61

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 252 of 413
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.61

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 253 of 414
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.61

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 254 of 416
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.61

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 255 of 417
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.61

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 256 of 417
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.61

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 257 of 417
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.62

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 258 of 418
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.62

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 259 of 418
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.62

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 260 of 418
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.62

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 261 of 418
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.62

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 262 of 418
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.63

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 263 of 419
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.63

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 264 of 419
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.63

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 265 of 419
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.63

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 266 of 420
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.63

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 267 of 420
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.64

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 268 of 420
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.64

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 269 of 421
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.64

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 270 of 421
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.64

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 271 of 421
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.64

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 272 of 422
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.64

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 273 of 422
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.65

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 274 of 422
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.65

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 275 of 423
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.65

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 276 of 423
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.65

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 277 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.65

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 278 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.66

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 279 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.66

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 280 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.66

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 281 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.66

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 282 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 283 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 284 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 285 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 286 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 287 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.68

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 288 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.68

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 289 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.68

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 290 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.68

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 291 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.69

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 292 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.69

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 293 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.69

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 294 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.69

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 295 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.7

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 296 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.7

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 297 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.7

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 298 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.7

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 299 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.71

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 300 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.71

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 301 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.71

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 302 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.71

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 303 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.71

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 304 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.72

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 305 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.72

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 306 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.72

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 307 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.72

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 308 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.73

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 309 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.73

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 310 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.73

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 311 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.73

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 312 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.74

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 313 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.74

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 314 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.74

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 315 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.74

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 316 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.75

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 317 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.75

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 318 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.75

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 319 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.75

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 320 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.75

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 321 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.76

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 322 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.76

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 323 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.76

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 324 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.76

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 325 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.77

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 326 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.77

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 327 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.77

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 328 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.77

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 329 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.78

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 330 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.78

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 331 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.78

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 332 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.78

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 333 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.79

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 334 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.79

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 335 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.79

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 336 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.79

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 337 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.79

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 338 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.8

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 339 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.8

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 340 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.8

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 341 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.8

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 342 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.81

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 343 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.81

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 344 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.81

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 345 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.81

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 346 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.82

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 347 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.82

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 348 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.82

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 349 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.82

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 350 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.83

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 351 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.83

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 352 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.83

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 353 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.83

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 354 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.83

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 355 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.84

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 356 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.84

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 357 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.84

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 358 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.84

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 359 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.85

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 360 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.85

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 361 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.85

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 362 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.85

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 363 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.86

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 364 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.86

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 365 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.86

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 366 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.86

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 367 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.87

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 368 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.87

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 369 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.87

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 370 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.87

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 371 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.88

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 372 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.88

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 373 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.88

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 374 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.88

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 375 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.88

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 376 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.89

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 377 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.89

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 378 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.89

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 379 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.89

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 380 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.9

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 381 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.9

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 382 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.9

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 383 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.9

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 384 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.91

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 385 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.91

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 386 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.91

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 387 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.91

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 388 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.92

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 389 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.92

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 390 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.92

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 391 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.92

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 392 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.92

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 393 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.93

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 394 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.93

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 395 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.93

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 396 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.93

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 397 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.94

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 398 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.94

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 399 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.94

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 400 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.94

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 401 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.95

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 402 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.95

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 403 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.95

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 404 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.95

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 405 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.96

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 406 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.96

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 407 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.96

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 408 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.96

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 409 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.96

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 410 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.97

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 411 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.97

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 412 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.97

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 413 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.97

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 414 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.98

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 415 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.98

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 416 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.98

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 417 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.98

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 418 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.99

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 419 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.99

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 420 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.99

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 421 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.99

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 422 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 1.0

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 423 of 424
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 1.0

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.cryptoapi.bench.brokenhash.BrokenHashABPSCase3: void main(java.lang.String[])>
		SHA-256: 39639b274a62fd7aa6d0de3cbc29bdb1ee87550178899e4e7ac247b00e2ebf8a
		Secure: true
	Object:
		Variable: r1
		Type: javax.crypto.KeyGenerator
		Statement: r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer24)
		Method: <org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABHCase1: void go()>
		SHA-256: ad9fb84161c7f14b4e1111cfbf676465ee9c04fca437210d218c5fac35f251ef
		Secure: true
	Object:
		Variable: r2
		Type: javax.crypto.KeyGenerator
		Statement: r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(r1)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase11: void method1(java.lang.String,java.lang.String)>
		SHA-256: 8cc98e92fcb6c1185a8ab1bb0f51b8562bfba2624d2ff75eec67711fd212f6ba
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.PBEParameterSpec
		Statement: specialinvoke $r5.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>(r2, varReplacer44)
		Method: <org.cryptoapi.bench.staticsalts.StaticSaltsABPSCase1: void key2(int)>
		SHA-256: 567106005f4e20d634c27a8a007fc723324409a0574bd29b9b62a13d54293149
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.PBEParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>(r2, $i0)
		Method: <org.cryptoapi.bench.pbeiteration.LessThan1000IterationPBEABICase2: void key2()>
		SHA-256: 788f9173d1d53a948da75aba0a9c08a9ea055e659aa6ae191d57a9c1f13cd47a
		Secure: false
	Object:
		Variable: r3
		Type: java.security.KeyStore
		Statement: r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(r2)
		Method: <org.cryptoapi.bench.predictablekeystorepassword.PredictableKeyStorePasswordABICase1: void go(java.lang.String)>
		SHA-256: 765554a8af8fb873ba5705fc66618bcd781a98f1f8b3b64d97ab0d54dc93c014
		Secure: false
	Object:
		Variable: r2
		Type: java.security.MessageDigest
		Statement: r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer107)
		Method: <org.cryptoapi.bench.brokenhash.BrokenHashBBCase1: void main(java.lang.String[])>
		SHA-256: a8a082cce9713a969b02c8d06d0b14f2e7064149e0baf0bc3271696c191f00bd
		Secure: false
	Object:
		Variable: r2
		Type: javax.crypto.SecretKey
		Statement: r2 = virtualinvoke r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.cryptoapi.bench.ecbcrypto.EcbInSymmCryptoABICase2: void go()>
		SHA-256: ad8fba0910f5981961039a8ae0ddd9ca4688d23e56c6cc2edec97076cfee108b
		Secure: true
	Object:
		Variable: r2
		Type: javax.crypto.SecretKey
		Statement: r2 = virtualinvoke r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase8: void go()>
		SHA-256: f8dd9a0ab426bc3b3164cd72f373af09258078363d531fc9bfa57a26a07bfebb
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.cryptoapi.bench.brokenhash.BrokenHashBBCase3: void main(java.lang.String[])>
		SHA-256: 6379af8e4c15f3f5f131d625ae330ece4dc03509d9b1eb022bebfc4bf7fdd3d8
		Secure: false
	Object:
		Variable: r3
		Type: javax.crypto.Cipher
		Statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer273)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase5: void go(int)>
		SHA-256: 75c8c5b0b4f4e883974cc947e24db541bfe7f2ea9f3d880fb4bf381ea6d8844
		Secure: false
	Object:
		Variable: r3
		Type: javax.crypto.KeyGenerator
		Statement: r3 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(r2)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABMC1: void go(java.lang.String,java.lang.String)>
		SHA-256: e3717262e8cc33b22a62f64b73f689a5795606a6aa619febe4da4c17db613bc5
		Secure: false
	Object:
		Variable: r3
		Type: javax.crypto.SecretKey
		Statement: r3 = virtualinvoke r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABICase2: void go()>
		SHA-256: 919541ad0932fd56e46c81bb79243231ebb163db467e8550d5f22870855620d5
		Secure: true
	Object:
		Variable: r3
		Type: javax.crypto.Cipher
		Statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer130)
		Method: <org.cryptoapi.bench.ecbcrypto.EcbInSymmCryptoABPSCase1: void go(int)>
		SHA-256: 6c8d1f2115f3d53cd9cae09506afcea5e972f100fdca61ffcda320f2cdbb4ae7
		Secure: false
	Object:
		Variable: r3
		Type: javax.crypto.Cipher
		Statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer281)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase3: void go(int)>
		SHA-256: 656e6a856768c69a4bcec7d78783d84b3f3cd9904e874c18605c5c2e15cb49e8
		Secure: false
	Object:
		Variable: r1
		Type: javax.crypto.KeyGenerator
		Statement: r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer241)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase4: void go(int)>
		SHA-256: aecbd52d0a542050c041e20f8f5f12c711459e0c9d5b47b5fb5e43b421518ec7
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.PBEParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>(r1, s0)
		Method: <org.cryptoapi.bench.pbeiteration.LessThan1000IterationPBEABPSCase1: void main(java.lang.String[])>
		SHA-256: 81d9f3486167cc02059dc30d8bfbc5e081a4c712b1ec1c0d3e0ea9e3701aa7f4
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.PBEParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>(r3, varReplacer43)
		Method: <org.cryptoapi.bench.staticsalts.CryptoStaticSalt1: void method1(byte[])>
		SHA-256: 97930d945b552e30c5e2bfdc87b528a91bef98d7e52157029247bf5b6a5073c9
		Secure: false
	Object:
		Variable: r0
		Type: java.security.KeyPairGenerator
		Statement: r0 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer337)
		Method: <org.cryptoapi.bench.insecureasymmetriccrypto.InsecureAsymmetricCipherABICase3: void method1(int)>
		SHA-256: bb96127c56ef20a8bdefdc578f21c9b22e36536d939f4a161772494e2ea7acae
		Secure: false
	Object:
		Variable: r2
		Type: javax.crypto.SecretKey
		Statement: r2 = virtualinvoke r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase15: void method1(java.lang.String)>
		SHA-256: fdb89adef7e820b83a69c948bc53388cc792b1285cb00c88d4fd2cfe933be607
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.cryptoapi.bench.predictableseeds.CryptoPredictableSeed1: void method1(byte[])>
		SHA-256: a5151aaf92ec07766de7026472eaa8b2bd6f2cf5b13f0e060ca131254532d666
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.cryptoapi.bench.brokenhash.BrokenHashABICase8: void go(java.lang.String)>
		SHA-256: 106b0752f66186711422d34ae08561c9286bda1651e32d0577b58d1c42160335
		Secure: true
	Object:
		Variable: r3
		Type: javax.crypto.Cipher
		Statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r7)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase8: void go()>
		SHA-256: 6fda858dba412ea871f0a4aa693b979c73781d759e8c70686816d9b14f786d78
		Secure: false
	Object:
		Variable: r1
		Type: javax.crypto.KeyGenerator
		Statement: r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer295)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoCorrected: void go()>
		SHA-256: 8ff0cb2c2c23ce969d781c20b8b5ead17e5904715b7a9254e460d7d53fb9207c
		Secure: true
	Object:
		Variable: $r12
		Type: byte[]
		Statement: $r12 = virtualinvoke r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r11)
		Method: <org.cryptoapi.bench.predictablecryptographickey.PredictableCryptographicKeyCorrected: void main(java.lang.String[])>
		SHA-256: c21f895fbc997bfbac99c446a8dd7cc7e6d1edc4dde08e9671b3ccaa1e4d16ae
		Secure: false
	Object:
		Variable: r2
		Type: javax.crypto.KeyGenerator
		Statement: r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(r1)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABMC3: void go(java.lang.String)>
		SHA-256: f1614cd3d7e11aadadf23e16a76ce34d523ffa8594ecfe6f93bc8a365023a7db
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.PBEParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>(r1, varReplacer42)
		Method: <org.cryptoapi.bench.staticsalts.StaticSaltsBBCase1: void key2()>
		SHA-256: d6ebf36f32c52adb1f25265ff92f587a817d433aaeaa0f2ce9afea18e845e906
		Secure: false
	Object:
		Variable: r2
		Type: javax.crypto.SecretKey
		Statement: r2 = virtualinvoke r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase2: void go(int)>
		SHA-256: 4a1d0543dd4d5d10486513465db0a19c928ed37b16bb8fd95481ad338241f24a
		Secure: true
	Object:
		Variable: $r8
		Type: java.security.SecureRandom
		Statement: specialinvoke $r8.<java.security.SecureRandom: void <init>()>()
		Method: <org.cryptoapi.bench.predictablekeystorepassword.PredictableKeyStorePasswordABPSCase1: void go(int)>
		SHA-256: 490db0aeef9f44ca50b5a9a6c99bf8aa5024023bd522ccde40b150919c346ddf
		Secure: true
	Object:
		Variable: r1
		Type: javax.crypto.KeyGenerator
		Statement: r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(r0)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase15: void method1(java.lang.String)>
		SHA-256: 30cac82c09bfce9be60cab9cd17e735a8e4726e0751b135cc9e8df0bd130b2bc
		Secure: false
	Object:
		Variable: r3
		Type: java.security.KeyPair
		Statement: r3 = virtualinvoke r2.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <org.cryptoapi.bench.insecureasymmetriccrypto.InsecureAsymmetricCipherABICase2: void main(java.lang.String[])>
		SHA-256: e905a33652e104f8784e36f5468f00eefb0dd65399146c9e0cd5599a2088ea3d
		Secure: false
	Object:
		Variable: r2
		Type: byte[]
		Statement: virtualinvoke r3.<java.security.SecureRandom: void nextBytes(byte[])>(r2)
		Method: <org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1: void go(java.lang.String)>
		SHA-256: 8692c452993544c751efc6db8d429230d146d861e85bd2b6cd1d00003da4f98e
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, r2, s0, b1)
		Method: <org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase3: void method2(java.lang.String)>
		SHA-256: b3f4222a7301e5898d4e12950bbc1fb2e8107ced1a2e1d5e480e87921fdbb960
		Secure: false
	Object:
		Variable: r3
		Type: javax.crypto.Cipher
		Statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6)
		Method: <org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABHCase2: void go()>
		SHA-256: e0f943c176d1ee9f835552d39d8dca6deef82de979bb5d01a2f85119b16f5b05
		Secure: false
	Object:
		Variable: r2
		Type: java.security.KeyPairGenerator
		Statement: r2 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer332)
		Method: <org.cryptoapi.bench.insecureasymmetriccrypto.InsecureAsymmetricCipherABICase2: void main(java.lang.String[])>
		SHA-256: 36ccedac60725a8866a1e984c037c6b1db9d80aebc515ddd6b1b0ca994da4c2
		Secure: false
	Object:
		Variable: r3
		Type: javax.crypto.SecretKey
		Statement: r3 = virtualinvoke r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABMC4: void go(java.lang.String)>
		SHA-256: 1204ad30860ca7583f2bb80606c3e4d2c65a3f46a9cc45702539cfd17a697f2d
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.SecureRandom
		Statement: specialinvoke $r7.<java.security.SecureRandom: void <init>()>()
		Method: <org.cryptoapi.bench.predictablecryptographickey.PredictableCryptographicKeyCorrected: void main(java.lang.String[])>
		SHA-256: 9f093d0e4c7190726b90b367edad8bd65cd0d1ba0898bb6347c67b798964e1ca
		Secure: true
	Object:
		Variable: r2
		Type: java.security.MessageDigest
		Statement: r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer116)
		Method: <org.cryptoapi.bench.brokenhash.BrokenHashBBCase2: void main(java.lang.String[])>
		SHA-256: 34852da81e4ff7fa107b78edd0df3183dc7a84f4d32e226f1dfc5281618906f1
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.SecureRandom
		Statement: specialinvoke $r6.<java.security.SecureRandom: void <init>()>()
		Method: <org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABHCase1: void main(java.lang.String[])>
		SHA-256: 6ebabab276a94bea494b0e706df885a616639c89ee09f71df9f35e10190c91a3
		Secure: true
	Object:
		Variable: r1
		Type: java.security.KeyPairGenerator
		Statement: r1 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer314)
		Method: <org.cryptoapi.bench.insecureasymmetriccrypto.InsecureAsymmetricCipherABMC1: void go(int)>
		SHA-256: 1b5cba37db8a1e7cc6248e6a72903aaa076ba19033646bb6cb1181acfcb1bfe1
		Secure: false
	Object:
		Variable: r2
		Type: javax.crypto.SecretKey
		Statement: r2 = virtualinvoke r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase3: void go(int)>
		SHA-256: 46f7e7da63a95eceaddac69a01fc0c481d263310489a5d304bbcb45dd94e42df
		Secure: true
	Object:
		Variable: r5
		Type: java.security.KeyStore
		Statement: r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(r1)
		Method: <org.cryptoapi.bench.predictablekeystorepassword.PredictableKeyStorePasswordABHCase1: void go()>
		SHA-256: d7f9ce9ad221c5492e9917679b92a81b6411857d1e40515322c4f07ca817ca7e
		Secure: false
	Object:
		Variable: r3
		Type: javax.crypto.Cipher
		Statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer324)
		Method: <org.cryptoapi.bench.insecureasymmetriccrypto.InsecureAsymmetricCipherABICase1: void go(int)>
		SHA-256: 41c8a6bd75565d0b5cf732ae1292feb1850dc36dbc4e271ed8f98131ff583c90
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r7, r2, s0, b1)
		Method: <org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABHCase1: void key(byte[])>
		SHA-256: 65633f9266a7ebb0a333b3419339b771a9306c796333cdad349342141800c42e
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r5, r2, varReplacer178, varReplacer179)
		Method: <org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase2: void go()>
		SHA-256: 294c8cf57a7a9a2c9a1a6df2d23ed744fd15e9bef244f4ded275035ee238279b
		Secure: true
	Object:
		Variable: r5
		Type: byte[]
		Statement: $r8 = virtualinvoke r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r5)
		Method: <org.cryptoapi.bench.brokencrypto.Crypto3: byte[] encrypt(java.lang.String,java.lang.String)>
		SHA-256: b1377f01c3b3a0c1786978e359ac599c97359e6043cf1f005a6855430600ee5f
		Secure: false
	Object:
		Variable: b1
		Type: byte
		Statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, r2, s0, b1)
		Method: <org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABHCase2: void key(java.lang.String)>
		SHA-256: 37a4b354308799bcdab9afe973e8c1cee3c5964872bd93a55485baa69f4c9da4
		Secure: false
	Object:
		Variable: r4
		Type: javax.crypto.Cipher
		Statement: r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r1)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABMC2: void go(java.lang.String)>
		SHA-256: eac6c5bdafc6c83cb635909a35f13f05751e9a28c0f0dae1124ee329d4bad553
		Secure: false
	Object:
		Variable: r3
		Type: javax.crypto.Cipher
		Statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer275)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase5: void go(int)>
		SHA-256: 9580853d31f6fb8ef2836e0a1bd321f32b38876b4091dc15ba6b88bd16330ab6
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, r2, s0, b1)
		Method: <org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABMC1: void key(java.lang.String)>
		SHA-256: a59dca38173f6ecc3111a544c67f05b6a36562f20de4be01a4220996a44fcb28
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: virtualinvoke r0.<java.security.SecureRandom: void nextBytes(byte[])>(r1)
		Method: <org.cryptoapi.bench.pbeiteration.LessThan1000IterationPBEABICase3: void method1(int,java.security.SecureRandom,javax.crypto.spec.PBEParameterSpec)>
		SHA-256: 9b6c890ba07f41789cc04d96026257b416528025a0954807a91126d09575d564
		Secure: true
	Object:
		Variable: r2
		Type: javax.crypto.SecretKey
		Statement: r2 = virtualinvoke r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase13: void method1(java.lang.String)>
		SHA-256: 7bbf54fe3b70dff9792e072d211c1737a08cf4485af7fa2b32daa9681ab50997
		Secure: false
	Object:
		Variable: r5
		Type: java.security.MessageDigest
		Statement: r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer111)
		Method: <org.cryptoapi.bench.brokenhash.BrokenHashABPSCase4: void main(java.lang.String[])>
		SHA-256: 336a6c5768b605f2c8a260f68625fe95a46d683220d61999c28aecf2d29fccd1
		Secure: true
	Object:
		Variable: r3
		Type: javax.crypto.Cipher
		Statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer277)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoBBCase3: void go()>
		SHA-256: eb93a688e25ca6b679ec1820507263ef5db1749e322631c1d0be42c2e2461ff1
		Secure: false
	Object:
		Variable: r2
		Type: byte[]
		Statement: virtualinvoke r3.<java.security.SecureRandom: void nextBytes(byte[])>(r2)
		Method: <org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase3: void method2(java.lang.String)>
		SHA-256: 4d69bc2a7ebde438f856dbf364872c8876f61b829cc66a8985bcf569a4ea3388
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)
		Method: <org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABICase2: void go()>
		SHA-256: c4904876af1a3cc38f5434bb2ad3b48f77c4aa37cd92e58c507486328d1c1071
		Secure: false
	Object:
		Variable: r3
		Type: javax.crypto.Cipher
		Statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r0)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase15: void method1(java.lang.String)>
		SHA-256: c60184b26682b6511441d8460452f8120c7c6fe7d13df0b0f684b82be2ebbc4b
		Secure: false
	Object:
		Variable: r2
		Type: byte[]
		Statement: virtualinvoke r1.<java.security.SecureRandom: void nextBytes(byte[])>(r2)
		Method: <org.cryptoapi.bench.predictableseeds.PredictableSeedsABPSCase2: void main(java.lang.String[])>
		SHA-256: 251639c70ddbc0c93214eda67c514717234ceac56a1896090f4eb1f63f5e6161
		Secure: true
	Object:
		Variable: r3
		Type: javax.crypto.Cipher
		Statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer124)
		Method: <org.cryptoapi.bench.ecbcrypto.EcbInSymmCryptoCorrected: void go()>
		SHA-256: 2b402829e361b138424408ff10884a749a5a7111c3949becc257377a485c86a2
		Secure: false
	Object:
		Variable: r4
		Type: javax.crypto.Cipher
		Statement: r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r7)
		Method: <org.cryptoapi.bench.brokencrypto.Crypto3: byte[] encrypt(java.lang.String,java.lang.String)>
		SHA-256: 5abc24a5dbf0d490d88af14b187b2398492270b81b33719462f3bb5a1fa65352
		Secure: false
	Object:
		Variable: r2
		Type: byte[]
		Statement: virtualinvoke r1.<java.security.SecureRandom: void nextBytes(byte[])>(r2)
		Method: <org.cryptoapi.bench.pbeiteration.LessThan1000IterationPBEABMC1: void go(int)>
		SHA-256: e5e912fed5e44feaa6366a613c185da83c20f378ba5eaa78eea1709a034b853e
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.PBEParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>(r2, varReplacer55)
		Method: <org.cryptoapi.bench.staticsalts.StaticSaltsCorrected: void key2()>
		SHA-256: 87cb64b48b82ff4ded452a27fd8ed0eee9ab9cc48edaef45d5b972d4f161a688
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.PBEParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>(r2, varReplacer221)
		Method: <org.cryptoapi.bench.pbeiteration.LessThan1000IterationPBECorrected: void key2()>
		SHA-256: 4a74847d68c0bb787c206c6a76707bfbee1d70bdc8085cf700ad02454f955314
		Secure: false
	Object:
		Variable: r3
		Type: javax.crypto.Cipher
		Statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer142)
		Method: <org.cryptoapi.bench.ecbcrypto.EcbInSymmCryptoBBCase1: void go()>
		SHA-256: b11347bb7fd9ccb152783665bf7a2b1cffd91931ccdc413ce12345ae2db3f6fb
		Secure: false
	Object:
		Variable: r2
		Type: byte[]
		Statement: virtualinvoke r1.<java.security.SecureRandom: void nextBytes(byte[])>(r2)
		Method: <org.cryptoapi.bench.pbeiteration.CryptoPBEIteration1: void method1(int)>
		SHA-256: b8127d5ae3423aa284f054ddcd4035de19a97ec593963601857d0382a7288298
		Secure: true
	Object:
		Variable: r1
		Type: javax.crypto.KeyGenerator
		Statement: r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer137)
		Method: <org.cryptoapi.bench.ecbcrypto.EcbInSymmCryptoABICase2: void go()>
		SHA-256: 81a33269657518d5f0de0c4e294cb0b8b24ff0031b0ee11263e193633ffdc75b
		Secure: true
	Object:
		Variable: r4
		Type: javax.crypto.Cipher
		Statement: r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r1)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABMC3: void go(java.lang.String)>
		SHA-256: e3117455aec4a49150b5802ef37f1c629adab383eea1daa561c359776e97016e
		Secure: false
	Object:
		Variable: r3
		Type: javax.crypto.SecretKey
		Statement: r3 = virtualinvoke r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase11: void method1(java.lang.String,java.lang.String)>
		SHA-256: a846a2a5d57fca62999eb659612bcc5bcf5a026f2ca0400c2cc3e258a7e580e3
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.cryptoapi.bench.pbeiteration.LessThan1000IterationPBEBBCase1: void key2()>
		SHA-256: 3154eeef73e95930a5c837ef3024bbfa779892da89633d31e52bfb344834550d
		Secure: true
	Object:
		Variable: r3
		Type: javax.crypto.Cipher
		Statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer263)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoBBCase4: void go()>
		SHA-256: 538f01103ba880b0088766fb38f9ca0d4cf4b7640daab5f4654e96ecae44528d
		Secure: false
	Object:
		Variable: r3
		Type: javax.crypto.Cipher
		Statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r7)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase10: void go()>
		SHA-256: 1f76c97b9668b9cf4f3ee4a8702ef748fbd8371e8f4fe5b936603d50724b7cfa
		Secure: false
	Object:
		Variable: r2
		Type: byte[]
		Statement: virtualinvoke r1.<java.security.SecureRandom: void nextBytes(byte[])>(r2)
		Method: <org.cryptoapi.bench.staticsalts.StaticSaltsABPSCase1: void key2(int)>
		SHA-256: 79fe4d02f6e89e58e171bfad464d706b6247122ebfa2f70b36f91bea09948f40
		Secure: true
	Object:
		Variable: r3
		Type: javax.crypto.KeyGenerator
		Statement: r3 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(r2)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase1: void go(java.lang.String,java.lang.String)>
		SHA-256: ad407472dc08503be26a36ecdc2b0a1913b6ee6bd08e55e5959f05c3650c7db0
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, r2, s0, b1)
		Method: <org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABHCase2: void key(java.lang.String)>
		SHA-256: 7320a9b4c8839493586616888ff19f6e7248db405da27f81fddae63211779cff
		Secure: false
	Object:
		Variable: r1
		Type: javax.crypto.KeyGenerator
		Statement: r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(r0)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase14: void method1(java.lang.String)>
		SHA-256: e151465ac7a8adf2d9c3f2afac7bd662c4518bfacb4f2a685f35f0f5952b4c8
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.cryptoapi.bench.brokenhash.BrokenHashABICase12: void method1(java.lang.String,java.lang.String)>
		SHA-256: e64cadeafd2fc36763b796d250d9f50679bbf0b313c80680e7d8ec0047c43a8d
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABMC1: void key(java.lang.String)>
		SHA-256: 65ed837f5efd942441433043146512510ebed572c3c259d5cfd5f35fb2cd2edc
		Secure: true
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r5)
		Method: <org.cryptoapi.bench.brokencrypto.Crypto2: byte[] encrypt(java.lang.String,java.lang.String)>
		SHA-256: afa6097b7d35f1805bf48bffc5716f1c292271d15865e668d0c45348ca64cd22
		Secure: false
	Object:
		Variable: r3
		Type: java.security.KeyStore
		Statement: r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(r2)
		Method: <org.cryptoapi.bench.predictablekeystorepassword.PredictableKeyStorePasswordABICase3: void method2(java.lang.String)>
		SHA-256: a1b8d0a1103ff0a85fe4c5e315cf4d5b085ee5e6246b5db193cb771a730f2beb
		Secure: false
	Object:
		Variable: r3
		Type: javax.crypto.SecretKey
		Statement: r3 = virtualinvoke r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.cryptoapi.bench.brokencrypto.Crypto2: byte[] encrypt(java.lang.String,java.lang.String)>
		SHA-256: fa15a6c4c69f31a097b570ea8c0dce75128fe7a6bf934cedcf67efee5c835c55
		Secure: false
	Object:
		Variable: b1
		Type: byte
		Statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r5, r1, s0, b1)
		Method: <org.cryptoapi.bench.predictablepbepassword.CryptoPredictablePBE: void method1(java.lang.String)>
		SHA-256: 9f1d0fec2605ca6f139855c7a8b6d6c46ac09312c0c746fda23416fa551f095c
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.PBEParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>(r2, i0)
		Method: <org.cryptoapi.bench.pbeiteration.LessThan1000IterationPBEABICase1: void go(int)>
		SHA-256: d99d5eecbfc3910f2c9094cd1fce0731f1ea6cafb38f7cbecc46f3d5ff16025b
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.SecureRandom
		Statement: specialinvoke $r6.<java.security.SecureRandom: void <init>()>()
		Method: <org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABPSCase1: void go(int)>
		SHA-256: 404e3aaa6f3beb854692033e97a590ba4e4d353ec7dbbe5d7e3db1909f56db2
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <org.cryptoapi.bench.predictablecryptographickey.PredictableCryptographicKeyABHCase1: void main(java.lang.String[])>
		SHA-256: 5b587fc5aa004dda3dab172c69f6d7193e5ea06c5e24e63a6c298a7e213cf8d1
		Secure: true
	Object:
		Variable: r1
		Type: javax.crypto.KeyGenerator
		Statement: r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer143)
		Method: <org.cryptoapi.bench.ecbcrypto.EcbInSymmCryptoBBCase1: void go()>
		SHA-256: 15ddc527adf62a10f5bd40c72f68659c171d64faf597d503ca97f63260e8b9bc
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.cryptoapi.bench.brokenhash.CryptoHash3: void encrypt(java.lang.String,java.lang.String)>
		SHA-256: 26f0582f9c3cbd58a6817d98c971c7f8c888f6badc164713cf3b16703e099451
		Secure: false
	Object:
		Variable: r2
		Type: byte[]
		Statement: virtualinvoke r3.<java.security.SecureRandom: void nextBytes(byte[])>(r2)
		Method: <org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABMC1: void key(java.lang.String)>
		SHA-256: 50b4405286b48634ef065cd2ba6cda95037c59e1f2ec6c7957b63e4f1c487094
		Secure: true
	Object:
		Variable: b2
		Type: byte
		Statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, r9, s1, b2)
		Method: <org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABPSCase1: void key(int)>
		SHA-256: d33052de4fb4d3bd97c54af72afbd78b9fdc7ab9fe75ab8f89e14fca370dbb79
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.cryptoapi.bench.brokenhash.CryptoHash4: void encrypt(java.lang.String,java.lang.String)>
		SHA-256: 27f0f7889f0d54746b98a161ba36a986e3fdc81b70f0dec410e936f4114ce5c
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.cryptoapi.bench.brokenhash.BrokenHashBBCase4: void main(java.lang.String[])>
		SHA-256: af0e64ee8cd33633bf7eb9e888100a0ce2ce5530113c347e14f834e8b5bc574f
		Secure: false
	Object:
		Variable: r3
		Type: javax.crypto.Cipher
		Statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r7)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase5: void go()>
		SHA-256: be2a9895d6c8cdbcb7a6494295c64eff618d41ac8117c81d54c7f8d764c50d5
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.PBEParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>(r0, i0)
		Method: <org.cryptoapi.bench.staticsalts.StaticSaltsABICase3: void method2(byte[],int)>
		SHA-256: 702c648f9c5a93a639a90dd31c079a98314716da7f31cde5a1029b296b0f3dce
		Secure: false
	Object:
		Variable: r4
		Type: javax.crypto.SecretKey
		Statement: r4 = virtualinvoke r3.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABICase1: void go(byte[])>
		SHA-256: f8464f84b3cc7c78a20c1ca638ee38271b1b5063c0fd4c1d745f6746dc5cfad3
		Secure: true
	Object:
		Variable: r2
		Type: javax.crypto.SecretKey
		Statement: r2 = virtualinvoke r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoBBCase3: void go()>
		SHA-256: 57aebccb0250ab3bead8a38cb6139a9ae4a9c601f149e15df2e5dab8eab803cd
		Secure: false
	Object:
		Variable: r3
		Type: javax.crypto.Cipher
		Statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer246)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase2: void go(int)>
		SHA-256: 4a1a328ad48d36de2971815a925981bb48ca892478ff8533bab7dec5def0f651
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r8, varReplacer72)
		Method: <org.cryptoapi.bench.predictablecryptographickey.PredictableCryptographicKeyABHCase1: void main(java.lang.String[])>
		SHA-256: 1cac3b9c6df982c00ff0601164f945562f49ce4c19ab7372ad28fcd2214a0ac4
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.cryptoapi.bench.brokenhash.BrokenHashABMC1: void go(java.lang.String,java.lang.String)>
		SHA-256: 972903bf40f0518ba4231c30b8c4256bf39003ae2c684f74f2f106e4a93bb3e2
		Secure: false
	Object:
		Variable: varReplacer62
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r4, varReplacer62)
		Method: <org.cryptoapi.bench.predictablecryptographickey.PredictableCryptographicKeyABICase1: void go(java.lang.String)>
		SHA-256: 2ce10db225d3f14a2a2bad3c25f045fd9788001cc4cd4de9d195590811ea423f
		Secure: false
	Object:
		Variable: r3
		Type: javax.crypto.SecretKey
		Statement: r3 = virtualinvoke r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase4: void go(java.lang.String)>
		SHA-256: aa2fdf200b557da422c713d175386f96e9ff837c1f0c7cb4e704d7227abc6623
		Secure: false
	Object:
		Variable: r1
		Type: javax.crypto.KeyGenerator
		Statement: r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer303)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase1: void go(int)>
		SHA-256: 34a103086d8d4b81940e1fdad4b45409e07eac91a0e2b1ec8b82576ff4248c1e
		Secure: true
	Object:
		Variable: r1
		Type: javax.crypto.KeyGenerator
		Statement: r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer282)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase3: void go(int)>
		SHA-256: 63246e7dd7981a15bde96b254bed8ea441340b557aebc1d513a361d9609b5a43
		Secure: true
	Object:
		Variable: $r9
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r15, varReplacer92)
		Method: <org.cryptoapi.bench.predictablecryptographickey.PredictableCryptographicKeyCorrected: void main(java.lang.String[])>
		SHA-256: 8d6650c452d34ef005da7b12ed1e571df996864c0839e112572f4aca32afce6b
		Secure: false
	Object:
		Variable: r3
		Type: javax.crypto.Cipher
		Statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer340)
		Method: <org.cryptoapi.bench.insecureasymmetriccrypto.InsecureAsymmetricCipherABPSCase1: void go(int)>
		SHA-256: dee133d2a287db1112bd09eeea1bd28824fc26f024badfdfc10c9128ddb2852b
		Secure: false
	Object:
		Variable: $r19
		Type: java.security.SecureRandom
		Statement: specialinvoke $r19.<java.security.SecureRandom: void <init>(byte[])>($r20)
		Method: <org.cryptoapi.bench.predictableseeds.PredictableSeedsABHCase4: void main(java.lang.String[])>
		SHA-256: c17691313414e2499abb8b1cdfea67b3f9b055c5bd104776ef63d7e96b7c3365
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.SecureRandom
		Statement: specialinvoke $r6.<java.security.SecureRandom: void <init>()>()
		Method: <org.cryptoapi.bench.predictablekeystorepassword.PredictableKeyStorePasswordCorrected: void go()>
		SHA-256: ccbcee9e59c0aa87ca2ae138480fd7fd79efbce4e6acc699cb4932bf2173b71
		Secure: true
	Object:
		Variable: r4
		Type: javax.crypto.Cipher
		Statement: r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r0)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase11: void method1(java.lang.String,java.lang.String)>
		SHA-256: 625497398a38bc4095b05517d85aae39d55853ef5b69c8dc58f8034796450e0a
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r5, varReplacer67)
		Method: <org.cryptoapi.bench.predictablecryptographickey.PredictableCryptographicKeyBBCase1: void main(java.lang.String[])>
		SHA-256: 3f163b6789686c11cba61fb7f75265c4974e0727d72ec278874d3b0c6e039ded
		Secure: false
	Object:
		Variable: r6
		Type: javax.crypto.Cipher
		Statement: r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer312)
		Method: <org.cryptoapi.bench.insecureasymmetriccrypto.InsecureAsymmetricCipherBBCase1: void go()>
		SHA-256: 4b0ee53c0eca96e1eab3bee47bb27d7f86a62c5d7aa742b4de2ec4054f8a7c54
		Secure: false
	Object:
		Variable: $r15
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r15.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r7)
		Method: <org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABHCase2: void go()>
		SHA-256: a2da4f6548be812bb6d4fcf70dcfff15fc4f61c4222f6e8d6e650db746723252
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r5, r1, s0, b1)
		Method: <org.cryptoapi.bench.predictablepbepassword.CryptoPredictablePBE: void method1(java.lang.String)>
		SHA-256: 749f1e6e3954eaa6dea817670a969d170e4c0cec69fcc0129871d32cdcf6e2d8
		Secure: false
	Object:
		Variable: r2
		Type: byte[]
		Statement: virtualinvoke r1.<java.security.SecureRandom: void nextBytes(byte[])>(r2)
		Method: <org.cryptoapi.bench.pbeiteration.LessThan1000IterationPBECorrected: void key2()>
		SHA-256: 9db8e09f36c50f1fb7edfb1a54d204400569830e90ece88afaf93134dff70643
		Secure: true
	Object:
		Variable: r1
		Type: javax.crypto.KeyGenerator
		Statement: r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer261)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoBBCase1: void go()>
		SHA-256: 4d226d1cd266d9b8081c1e6184ee48f1160548514d97c440b834106be09af88e
		Secure: false
	Object:
		Variable: r1
		Type: javax.crypto.KeyGenerator
		Statement: r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>($r5)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase6: void go()>
		SHA-256: 9d0a4923d2c81c1e239a0ddc216c98fc6d829f55706d22d67ac8a4c09d6a9f41
		Secure: true
	Object:
		Variable: r5
		Type: java.security.MessageDigest
		Statement: r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer102)
		Method: <org.cryptoapi.bench.brokenhash.BrokenHashABPSCase1: void main(java.lang.String[])>
		SHA-256: 146f18a43a08848b07310a148711df51c0ef853aa62ce6a910f6db5972142fdc
		Secure: true
	Object:
		Variable: r3
		Type: javax.crypto.Cipher
		Statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r0)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase14: void method1(java.lang.String)>
		SHA-256: 1a06fdae3c5e34581f287856170543a8f13bafb8fb4cc6880004bd801479294c
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.cryptoapi.bench.untrustedprng.UntrustedPRNGCorrected: void main(java.lang.String[])>
		SHA-256: 93dfcd4c98650eefa05fc422b0cdc9917dc6055f9703c5a61f5f1c2ef5c9c1fb
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.cryptoapi.bench.brokenhash.BrokenHashABPSCase2: void main(java.lang.String[])>
		SHA-256: 4db3987aa0d8e9a952cd7483928668a5e1b70d2fcf8d70a076a97d61b37ce474
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.SecureRandom
		Statement: specialinvoke $r7.<java.security.SecureRandom: void <init>()>()
		Method: <org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorCorrected: void go()>
		SHA-256: e71c8383b1ab5a54a718eca099f37ef053aa98837e103854d0fd5f29c5370238
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.PBEParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>(r2, varReplacer224)
		Method: <org.cryptoapi.bench.pbeiteration.LessThan1000IterationPBEBBCase1: void key2()>
		SHA-256: d7642e5a5117b024db547b69673f92ba9c34526df652f51da24f8f7e3dece1f8
		Secure: false
	Object:
		Variable: r2
		Type: javax.crypto.KeyGenerator
		Statement: r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>($r6)
		Method: <org.cryptoapi.bench.brokencrypto.Crypto2: byte[] encrypt(java.lang.String,java.lang.String)>
		SHA-256: 5b0b7e43f2ba3ddd93f354b7730c7756243e814eb498cab62914a019a052ff00
		Secure: false
	Object:
		Variable: r6
		Type: javax.crypto.Cipher
		Statement: r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer330)
		Method: <org.cryptoapi.bench.insecureasymmetriccrypto.InsecureAsymmetricCipherABICase2: void go(java.security.KeyPairGenerator,java.security.KeyPair)>
		SHA-256: a8091fa48d07b269ca91ae44eb7ec56d6822748eb08f13d1835e522db7f2dc2e
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordBBCase1: void key()>
		SHA-256: 96f4a296a8feb626321bff096e168e7e6dfb3a60936562631875987710ee81d1
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordCorrected: void key()>
		SHA-256: 97e578d87b6c7bbf5f29eb06b94c8d85b116d8e2d001983d03e879d2e854804c
		Secure: true
	Object:
		Variable: r1
		Type: javax.crypto.KeyGenerator
		Statement: r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer300)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoBBCase5: void go()>
		SHA-256: 50be00869b5156b65f2927712e0ad56f3a2effa56ef7d85ba4eb69805fb3f64e
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.SecureRandom
		Statement: specialinvoke $r6.<java.security.SecureRandom: void <init>()>()
		Method: <org.cryptoapi.bench.predictableseeds.PredictableSeedsABHCase4: void main(java.lang.String[])>
		SHA-256: b0755e4399b523e138ee7cd3f865f243c0c994f35acbf90831264bbf7348f5ff
		Secure: true
	Object:
		Variable: b1
		Type: byte
		Statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, r2, s0, b1)
		Method: <org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1: void go(java.lang.String)>
		SHA-256: b5af75f595be28873045515472875db3b6a047359476f0f21402b3948aa338e3
		Secure: false
	Object:
		Variable: r5
		Type: java.security.MessageDigest
		Statement: r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer109)
		Method: <org.cryptoapi.bench.brokenhash.BrokenHashABPSCase2: void main(java.lang.String[])>
		SHA-256: 527575899e4b12850081adf8e611849f2a6ccb3bfc1eb9ad046b13fecc2591e8
		Secure: false
	Object:
		Variable: r5
		Type: byte[]
		Statement: $r8 = virtualinvoke r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r5)
		Method: <org.cryptoapi.bench.brokencrypto.Crypto4: byte[] encrypt(java.lang.String,java.lang.String)>
		SHA-256: 9b6f075fcd66575e9f0612c34cf9387b944c4b6f73b5ebf0f742bb1f8c63b7a7
		Secure: false
	Object:
		Variable: r3
		Type: javax.crypto.Cipher
		Statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer247)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase2: void go(int)>
		SHA-256: fad2c9be76b9c7f2de652c6c328cebe32b602f3b9fff882581ce66f63fee50c7
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.cryptoapi.bench.brokenhash.BrokenHashABICase4: void go(java.lang.String,java.lang.String)>
		SHA-256: 5c6dcce3eab4c7288bd6310f8e9bfe5cefca0656f78b9da8ecb562299476f499
		Secure: false
	Object:
		Variable: r4
		Type: javax.crypto.Cipher
		Statement: r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r1)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase3: void go(java.lang.String)>
		SHA-256: 374fdfd8c775168c8300042599570bdb73b552b73ddfa9b3342544897c00a2be
		Secure: false
	Object:
		Variable: r3
		Type: javax.crypto.SecretKey
		Statement: r3 = virtualinvoke r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase9: void go(java.lang.String)>
		SHA-256: e2c00539aadd3a7c381215c7192d9ad1bc14e2dd51afdeb3433250815d141470
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.spec.PBEParameterSpec
		Statement: specialinvoke $r10.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>(r3, i0)
		Method: <org.cryptoapi.bench.pbeiteration.LessThan1000IterationPBEABHCase1: void key2()>
		SHA-256: 45a6b6306b3365c9fbace4881b2ce08c1f9ffb28716fb2f9e38a01a8c8f6d40
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.cryptoapi.bench.predictableseeds.PredictableSeedsABICase5: void method2(byte[])>
		SHA-256: 2d98f100b33227ee91247a3de8e61e67d73a81303e4068b0f3e10fcb3f9dcc80
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1: void go(java.lang.String)>
		SHA-256: dd873e096518be79d94ba5f884f81eaf047aeffdcf0a2df24cbb0496c74f5b48
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r8, varReplacer63)
		Method: <org.cryptoapi.bench.predictablecryptographickey.PredictableCryptographicKeyABPSCase1: void main(java.lang.String[])>
		SHA-256: 37b371dedf67cfa7f98462968ac409511a04171f5091c440ebdd87391214bbc5
		Secure: false
	Object:
		Variable: r2
		Type: javax.crypto.SecretKey
		Statement: r2 = virtualinvoke r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase4: void go(int)>
		SHA-256: 5a1f39b7b00c7bac48eab3c3cd398f1348b66bf4eb02456304cf7e315706bdf3
		Secure: true
	Object:
		Variable: varReplacer65
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r5, varReplacer65)
		Method: <org.cryptoapi.bench.predictablecryptographickey.PredictableCryptographicKeyABMC1: void go(java.lang.String)>
		SHA-256: fca0bd30566c48d296344ac0fedb3f8431e280cda08e76b206d744d7923af614
		Secure: false
	Object:
		Variable: r3
		Type: javax.crypto.Cipher
		Statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer5)
		Method: <org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABPSCase1: void go(int)>
		SHA-256: d4b87887ca03467c9e22a01de5af0aef6dbd8fadd1b56dfabf01518bd670d8c8
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.cryptoapi.bench.predictableseeds.PredictableSeedsABMC1: void go(byte[])>
		SHA-256: bb98df5714e0c145771d806ac91fdb9b9dc229129c545d073306dbaa94e8ef06
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>(byte[])>($r3)
		Method: <org.cryptoapi.bench.predictableseeds.CryptoPredictableSeed2: void method1(byte)>
		SHA-256: 71398f39e05f9fd1871c9d26cb33aa4c663111756c023b8fcca3e445a728ffac
		Secure: true
	Object:
		Variable: r5
		Type: byte[]
		Statement: $r8 = virtualinvoke r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r5)
		Method: <org.cryptoapi.bench.brokencrypto.Crypto2: byte[] encrypt(java.lang.String,java.lang.String)>
		SHA-256: 87c833965ca91d8f8dc0741540b78ea35bd6e436bc342d726ba70c6619d1530e
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.PBEParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>(r1, i0)
		Method: <org.cryptoapi.bench.staticsalts.StaticSaltsABICase1: void key2(byte[],int)>
		SHA-256: 9b5fedb206dbed783695687351f7ac0e266051fcfdb22d6d47d33b1c6bbaa1c
		Secure: false
	Object:
		Variable: r2
		Type: java.security.MessageDigest
		Statement: r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r1)
		Method: <org.cryptoapi.bench.brokenhash.BrokenHashABICase11: void method1(java.lang.String,java.lang.String)>
		SHA-256: 19a28e63ce653bd515c65685b7b571924f12673afb8e4aa6e786d416d94d2470
		Secure: false
	Object:
		Variable: r3
		Type: javax.crypto.SecretKey
		Statement: r3 = virtualinvoke r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.cryptoapi.bench.brokencrypto.Crypto3: byte[] encrypt(java.lang.String,java.lang.String)>
		SHA-256: 5c72981d022ce4de9c6e6b4c15849c2c353ffc95783f7561c54d2933a9d7cd45
		Secure: false
	Object:
		Variable: r2
		Type: javax.crypto.KeyGenerator
		Statement: r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>($r6)
		Method: <org.cryptoapi.bench.brokencrypto.Crypto5: byte[] encrypt(java.lang.String,java.lang.String)>
		SHA-256: 297b643091bc1b1b9fca8d2a69820f9883ddf294a440823e96179210f45c151f
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.cryptoapi.bench.pbeiteration.LessThan1000IterationPBEABMC1: void go(int)>
		SHA-256: 3e258c082aa1b7409c3b568044abd8582dfb2a7cf1780d8e88baa7d6d46a1fbb
		Secure: true
	Object:
		Variable: r3
		Type: javax.crypto.SecretKey
		Statement: r3 = virtualinvoke r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABMC5: void go(java.lang.String)>
		SHA-256: 522788bd58e2cfa18ada629f01b6e36090842d7c7325d9411025c23b17e4d95d
		Secure: false
	Object:
		Variable: r1
		Type: java.security.KeyPairGenerator
		Statement: r1 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer339)
		Method: <org.cryptoapi.bench.insecureasymmetriccrypto.InsecureAsymmetricCipherABPSCase1: void go(int)>
		SHA-256: 2c8b1e8212ca5065f82de03cda4bbd97f56e343426ff710a0a63d44c18fe0250
		Secure: false
	Object:
		Variable: $r5
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r11, $r5)
		Method: <org.cryptoapi.bench.predictablecryptographickey.Crypto: byte[] method1(java.lang.String,java.lang.String)>
		SHA-256: f4363715d9512e8134472d80c02951acb8d80dd0e6ebbeb7e3d3a2ab859c968a
		Secure: false
	Object:
		Variable: r2
		Type: byte[]
		Statement: virtualinvoke r3.<java.security.SecureRandom: void nextBytes(byte[])>(r2)
		Method: <org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordBBCase2: void key()>
		SHA-256: e2adec780edb59f5595a9555d06a4237e42e3c7fd3ec43581e2d3e46b3156165
		Secure: true
	Object:
		Variable: r3
		Type: javax.crypto.Cipher
		Statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer262)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoBBCase1: void go()>
		SHA-256: 59bfac41b1eccd1151976811c59da0a9b57f8d2ee24be501fd9c3c98bc0fc830
		Secure: false
	Object:
		Variable: r1
		Type: javax.crypto.KeyGenerator
		Statement: r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer249)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase2: void go(int)>
		SHA-256: bb6fa8ebd1d27fceffe59162844606f51ba0a34583af154805f49b59602fa5d0
		Secure: true
	Object:
		Variable: r3
		Type: javax.crypto.SecretKey
		Statement: r3 = virtualinvoke r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.cryptoapi.bench.brokencrypto.Crypto4: byte[] encrypt(java.lang.String,java.lang.String)>
		SHA-256: 1f529fb6481929ee47c91930e75ebdf81782cf19783b1c3e97948ae4051a8efc
		Secure: false
	Object:
		Variable: r1
		Type: java.security.KeyPair
		Statement: r1 = virtualinvoke r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <org.cryptoapi.bench.insecureasymmetriccrypto.InsecureAsymmetricCipherABICase3: void method1(int)>
		SHA-256: 460d11ebdf6684fef0abd11ee9d3bec6330ed31afe6c1dee6c0affedae3a94a
		Secure: false
	Object:
		Variable: r2
		Type: java.security.MessageDigest
		Statement: r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)
		Method: <org.cryptoapi.bench.brokenhash.CryptoHash4: void encrypt(java.lang.String,java.lang.String)>
		SHA-256: d57652cce652dbdd0f26cf285332d0220cc96049d1cb2a13c2b8ce7a07382dfd
		Secure: false
	Object:
		Variable: r4
		Type: javax.crypto.Cipher
		Statement: r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer317)
		Method: <org.cryptoapi.bench.insecureasymmetriccrypto.InsecureAsymmetricCipherABMC1: void go(int)>
		SHA-256: 6f1cd6196e5945f1001af960a8d23bc1b77bd2438842a44b28bd3db0571df9ce
		Secure: false
	Object:
		Variable: b1
		Type: byte
		Statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, r2, s0, b1)
		Method: <org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase3: void method2(java.lang.String)>
		SHA-256: d76c9661fb2344d731da6f40b073c93ee557590a0043ffdc1bcb8e8eda429343
		Secure: false
	Object:
		Variable: r5
		Type: javax.crypto.Cipher
		Statement: r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer21)
		Method: <org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABICase1: void go(byte[])>
		SHA-256: aa46ec5f75073e36d59bb72b284a9a5c5b5e014f8b676af330d65a236609648
		Secure: false
	Object:
		Variable: b1
		Type: byte
		Statement: specialinvoke $r6.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>(r1, r2, s0, b1)
		Method: <org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordBBCase2: void key()>
		SHA-256: 8cf5ee04e4dfa186368182244bf72063525f7090646fbc6a21aa751cab2eab68
		Secure: true
	Object:
		Variable: r1
		Type: java.security.MessageDigest
		Statement: r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)
		Method: <org.cryptoapi.bench.brokenhash.BrokenHashABICase8: void go(java.lang.String)>
		SHA-256: e86c9089b6daf94f60e87d9ace22c89e2f68c9c2d9b20aabf337e92b188b481f
		Secure: true
	Object:
		Variable: r3
		Type: javax.crypto.Cipher
		Statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer280)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase3: void go(int)>
		SHA-256: a14f52c8287a10d0b09deb474bc9b75aa41bd43ec6be8102726f8bc1dd6f03c6
		Secure: false
	Object:
		Variable: r3
		Type: javax.crypto.SecretKey
		Statement: r3 = virtualinvoke r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase3: void go(java.lang.String)>
		SHA-256: ba3e2ebda176cc74f85b5431f6d9d63a2e0804cecd1aa84c48976d211b36d998
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.cryptoapi.bench.pbeiteration.LessThan1000IterationPBEABICase3: void main(java.lang.String[])>
		SHA-256: 21a636579d4ca6d181053f1c1d677d2ecee9f0c58025d1dfa5993d3d6d8497f9
		Secure: true
	Object:
		Variable: r2
		Type: javax.crypto.KeyGenerator
		Statement: r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer30)
		Method: <org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABICase3: void method2(byte[])>
		SHA-256: 1b0543372bf2dd059d57c82ea1ba7b0832ebdcc4bb1699d00773f2843499fa09
		Secure: true
	Object:
		Variable: r2
		Type: java.security.KeyPair
		Statement: r2 = virtualinvoke r1.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <org.cryptoapi.bench.insecureasymmetriccrypto.InsecureAsymmetricCipherBBCase1: void go()>
		SHA-256: a0cc7fffec5e3c09dd02019dcae91a1650da3bd889302380a369ff0942f47279
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.cryptoapi.bench.brokenhash.BrokenHashABPSCase1: void main(java.lang.String[])>
		SHA-256: 2b6c51a4f07a671c247c8f61555853e349daaeb109ab85c325e8dcd5bd8d80da
		Secure: true
	Object:
		Variable: r2
		Type: java.security.KeyPair
		Statement: r2 = virtualinvoke r1.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <org.cryptoapi.bench.insecureasymmetriccrypto.InsecureAsymmetricCipherABICase1: void go(int)>
		SHA-256: 8032a9b25863d71ae5b001173d23562c3b22be4d70e83ab1c20a6e61d11c48ea
		Secure: false
	Object:
		Variable: r9
		Type: byte[]
		Statement: virtualinvoke r1.<java.security.SecureRandom: void nextBytes(byte[])>(r9)
		Method: <org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABPSCase1: void key(int)>
		SHA-256: e06db882b8b1b4b080068d24f50ac024d401a9e38ac2c31c5e60e5ddf60b56a3
		Secure: true
	Object:
		Variable: r1
		Type: javax.crypto.KeyGenerator
		Statement: r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer10)
		Method: <org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABHCase2: void go()>
		SHA-256: a58158e9f96a61cd2d3d3a84f0f22ff1d573d72a2c38189b7438a36fd98d8543
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.cryptoapi.bench.brokenhash.BrokenHashABMC4: void go(java.lang.String,java.lang.String)>
		SHA-256: f5d45e118ca87cd21c8978c755359fa22cbc51e887aed6c3bd552f714b42628c
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.cryptoapi.bench.predictableseeds.PredictableSeedsCorrected: void main(java.lang.String[])>
		SHA-256: ec0145b82d6dfeb10bcd1e2c84cbf3ed9abcf23c87ad61ecd5e0911acddfd016
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: specialinvoke $r5.<java.security.SecureRandom: void <init>()>()
		Method: <org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABPSCase1: void key(int)>
		SHA-256: 3b1a03d1a2e44b329efa4fe7ccdd7622cb2d4a81b8f01aa2798c15debabfa0fc
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.PBEParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>(r1, i0)
		Method: <org.cryptoapi.bench.pbeiteration.LessThan1000IterationPBEABICase3: void method1(int,java.security.SecureRandom,javax.crypto.spec.PBEParameterSpec)>
		SHA-256: 47a05889a4990a69142258b598334e49d1fe2e602f19ea60d1174f4be2f92ee
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.cryptoapi.bench.predictableseeds.PredictableSeedsABPSCase1: void main(java.lang.String[])>
		SHA-256: a04267e986d13b704d3124a9c98ca169c213b86095398ff590bc80c66635b742
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.cryptoapi.bench.pbeiteration.CryptoPBEIteration1: void method1(int)>
		SHA-256: 8b753168109c3ed4e7d7385203b082ad8d7bff9a9ac9338ebe0b8cd360910914
		Secure: true
	Object:
		Variable: r1
		Type: javax.crypto.KeyGenerator
		Statement: r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(r0)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase12: void method1(java.lang.String)>
		SHA-256: a70bf9b3aaac20af6da5b572dcef276ee373a0657081e1524afe2f061f6a605
		Secure: false
	Object:
		Variable: varReplacer92
		Type: java.lang.String
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r15, varReplacer92)
		Method: <org.cryptoapi.bench.predictablecryptographickey.PredictableCryptographicKeyCorrected: void main(java.lang.String[])>
		SHA-256: 5a94690dd36b33436507297fc99293d3c025c4412f1dbda8dcca114706129df6
		Secure: false
	Object:
		Variable: r3
		Type: javax.crypto.Cipher
		Statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer308)
		Method: <org.cryptoapi.bench.insecureasymmetriccrypto.InsecureAsymmetricCipherBBCase1: void go()>
		SHA-256: f35250c75f58f30638612bcbcaf4ee658be28d74b9ca7bf0fe17edc2f25401f7
		Secure: false
	Object:
		Variable: r2
		Type: java.security.KeyStore
		Statement: r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(r1)
		Method: <org.cryptoapi.bench.predictablekeystorepassword.PredictableKeyStorePasswordABICase2: void go()>
		SHA-256: 683a3619f2d13a9ad642ce603e5e410bab89bad872c0a43a2b878c42d5d94b7c
		Secure: false
	Object:
		Variable: r4
		Type: javax.crypto.Cipher
		Statement: r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r1)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase9: void go(java.lang.String)>
		SHA-256: b9a86b5876c5bb1ae88033c32970c7c395882a7ea3df45d31419eb3d5631c3b3
		Secure: false
	Object:
		Variable: r3
		Type: javax.crypto.Cipher
		Statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r7)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase6: void go()>
		SHA-256: ae0a92d07fc658725f702740ac9a86ecc2c2fb83f6fa65bcc278598d47c7a697
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <org.cryptoapi.bench.predictableseeds.PredictableSeedsABICase3: void go()>
		SHA-256: 89695aefa29faac6137b49a929d1650e0209d6d4187181e8c0f30d5aed46fefa
		Secure: true
	Object:
		Variable: r3
		Type: javax.crypto.Cipher
		Statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer36)
		Method: <org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorCorrected: void go()>
		SHA-256: d6a25766fdae9a55af2e0378dcbc02762abf542d9980bf0c0b42d398a8d07521
		Secure: false
	Object:
		Variable: r1
		Type: javax.crypto.KeyGenerator
		Statement: r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>($r5)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase5: void go()>
		SHA-256: 51772b7eb5650ef30a94191eadbbdecd022bd74a66d2131d39a74e8e76201121
		Secure: true
	Object:
		Variable: r2
		Type: javax.crypto.KeyGenerator
		Statement: r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(r1)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABMC2: void go(java.lang.String)>
		SHA-256: 65a1e22783e76d26782a961ef944ea60603670e8f2fab0fabeeb7364ee5e59ef
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.cryptoapi.bench.pbeiteration.LessThan1000IterationPBEABPSCase1: void main(java.lang.String[])>
		SHA-256: 8ba9f023c009a2360fb4dc82fadf6e25133c0d65cc969f5abf9945e30929f9ad
		Secure: true
	Object:
		Variable: r4
		Type: javax.crypto.SecretKey
		Statement: r4 = virtualinvoke r3.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABMC1: void go(byte[])>
		SHA-256: f06034710fbaac89fecd8d926c72416b48893868256b9e10b0fd2c9418b597f1
		Secure: true
	Object:
		Variable: r2
		Type: javax.crypto.SecretKey
		Statement: r2 = virtualinvoke r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase7: void go()>
		SHA-256: 32a6725f1fe4bf00485e34017d8a55685e6b9575b6354a4bab0ede70c8f588e5
		Secure: true
	Object:
		Variable: r2
		Type: java.security.MessageDigest
		Statement: r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r1)
		Method: <org.cryptoapi.bench.brokenhash.BrokenHashABICase4: void go(java.lang.String,java.lang.String)>
		SHA-256: 333b02871b7ebd839efdadc83e43cf1354aa74e71fc499396bcabf7231b06da1
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.cryptoapi.bench.staticsalts.StaticSaltsABPSCase1: void key2(int)>
		SHA-256: 234c7fe145eee0ae093bda739eb1c764aa22509a98660255b59dbc36666e879
		Secure: true
	Object:
		Variable: r2
		Type: javax.crypto.SecretKey
		Statement: r2 = virtualinvoke r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase1: void go(int)>
		SHA-256: 6111c7d26a063296339d2041c257b0196a4cc8f85a5fccae3e0c045c7eefc68a
		Secure: true
	Object:
		Variable: r3
		Type: javax.crypto.Cipher
		Statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r0)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase13: void method1(java.lang.String)>
		SHA-256: 165e5e74c3a780737221b2e5efad079f03d56e4586891fe960582ef8f8493c9e
		Secure: false
	Object:
		Variable: r4
		Type: javax.crypto.SecretKey
		Statement: r4 = virtualinvoke r3.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABMC1: void go(java.lang.String,java.lang.String)>
		SHA-256: 1af98b052a55fa56b7915081f6b06c4ada8e5201bdb23ac5222f41090afb6e4
		Secure: false
	Object:
		Variable: b1
		Type: byte
		Statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, r2, s0, b1)
		Method: <org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordBBCase1: void key()>
		SHA-256: aab58ed242826001b90b7d08ca0f3e3692fb5f7110e1030b0888adea0fe99af
		Secure: false
	Object:
		Variable: r4
		Type: javax.crypto.Cipher
		Statement: r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer40)
		Method: <org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABICase2: void go()>
		SHA-256: b4734918d5552830c039b7f5d86f555c00729629a559b4a5992830c03d542550
		Secure: false
	Object:
		Variable: r2
		Type: javax.crypto.SecretKey
		Statement: r2 = virtualinvoke r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABHCase2: void go()>
		SHA-256: 11a4f83c7dae57a5f053df722c1971c65f8ebde15f69fa3908b3bbb197a9f68f
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.cryptoapi.bench.brokenhash.BrokenHashABICase7: void go(java.lang.String)>
		SHA-256: 9ba875f29322e02e43122bbbf03f75a2e035f283b083d6c47eccc3b72b1ad3d
		Secure: true
	Object:
		Variable: r2
		Type: java.security.MessageDigest
		Statement: r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)
		Method: <org.cryptoapi.bench.brokenhash.CryptoHash2: void encrypt(java.lang.String,java.lang.String)>
		SHA-256: 90e50838fe4f86532a91fac203c247232799f422d7749b824bca72e949162037
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>(byte[])>($r2)
		Method: <org.cryptoapi.bench.predictableseeds.PredictableSeedsABICase2: void go(byte)>
		SHA-256: 4c33537b613e926a802bda2443c4f34eb7343c3c6ced820c9549850bd0f1138d
		Secure: true
	Object:
		Variable: r5
		Type: java.security.MessageDigest
		Statement: r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer103)
		Method: <org.cryptoapi.bench.brokenhash.BrokenHashABPSCase1: void main(java.lang.String[])>
		SHA-256: bab03d4097155b22e8f5b08dc9e810199315407c67baff6dddffafea97997f5f
		Secure: false
	Object:
		Variable: r3
		Type: javax.crypto.KeyGenerator
		Statement: r3 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer1)
		Method: <org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABMC1: void go(byte[])>
		SHA-256: 52971307779b8e19779654d1f7f78bec949952ca6ccf2f108a41410d6a3bce36
		Secure: true
	Object:
		Variable: r1
		Type: javax.crypto.KeyGenerator
		Statement: r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer123)
		Method: <org.cryptoapi.bench.ecbcrypto.EcbInSymmCryptoCorrected: void go()>
		SHA-256: 1b33ae392ef3c028b427b20b6b24db5a7c8f0a9e5930fe66547745f63fd07af2
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.cryptoapi.bench.predictableseeds.PredictableSeedsBBCase1: void main(java.lang.String[])>
		SHA-256: 3d087f2b518b420bcaf0abfe4819346b0bb6d09ff7ce4be249d4315d94a1d8e6
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.cryptoapi.bench.brokenhash.CryptoHash2: void encrypt(java.lang.String,java.lang.String)>
		SHA-256: 2413bbeab51ea4a52e5db44ca4b59138915da1b937cb628eaec1ed60ed7a2ad6
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.cryptoapi.bench.brokenhash.BrokenHashABICase3: void go(java.lang.String,java.lang.String)>
		SHA-256: b14fcbc765262f9622aa2b3e90745734dc573d63e4c40c85ab0166da258ce73e
		Secure: false
	Object:
		Variable: r2
		Type: javax.crypto.SecretKey
		Statement: r2 = virtualinvoke r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase5: void go()>
		SHA-256: d12a1c6b4d4245706ff9813011202d50c302a16d6207f0a6e651e1fd984a9ced
		Secure: true
	Object:
		Variable: r2
		Type: java.security.KeyStore
		Statement: r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(r1)
		Method: <org.cryptoapi.bench.predictablekeystorepassword.PredictableKeyStorePasswordBBCase1: void go()>
		SHA-256: 6fa14c1b2d77a6ed4df2030455d5ba3927a930f8cc6a99ab62025f358df190b2
		Secure: false
	Object:
		Variable: r2
		Type: javax.crypto.SecretKey
		Statement: r2 = virtualinvoke r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase10: void go()>
		SHA-256: a256fe5d7ce698762016af0f738f8e7568a3d9010b23d77c56dda2d6d0dc6fd5
		Secure: true
	Object:
		Variable: r2
		Type: byte[]
		Statement: virtualinvoke r3.<java.security.SecureRandom: void nextBytes(byte[])>(r2)
		Method: <org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABHCase1: void key(byte[])>
		SHA-256: d4e9a681918e0d61f523ef8a4765e544a67d1bc5fda157cfafd5ea230498576c
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, r9, s1, b2)
		Method: <org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABPSCase1: void key(int)>
		SHA-256: e592a1969ca75b3ef2dc7183784c260b697ac529460caefae452d43575b0a900
		Secure: false
	Object:
		Variable: r2
		Type: javax.crypto.SecretKey
		Statement: r2 = virtualinvoke r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.cryptoapi.bench.ecbcrypto.EcbInSymmCryptoABICase3: void method1(java.lang.String)>
		SHA-256: cc7e964dd4e1505100fb77507e499e708814f6c1fa01973ac7cb71e6d55ca32
		Secure: true
	Object:
		Variable: r1
		Type: byte[]
		Statement: virtualinvoke r2.<java.security.SecureRandom: void nextBytes(byte[])>(r1)
		Method: <org.cryptoapi.bench.pbeiteration.LessThan1000IterationPBEABPSCase1: void main(java.lang.String[])>
		SHA-256: 6fdd0e2b4d4712a1fbb57ab966f91f07c23b00d681c5c530e1e18d4d1ecd765f
		Secure: true
	Object:
		Variable: r2
		Type: java.security.MessageDigest
		Statement: r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r1)
		Method: <org.cryptoapi.bench.brokenhash.BrokenHashABICase9: void method1(java.lang.String,java.lang.String)>
		SHA-256: caba7bc86c27bc9daa07b28f5bddcc68664ee9722333b1fd4612fd5faf16e585
		Secure: false
	Object:
		Variable: r2
		Type: byte[]
		Statement: virtualinvoke r1.<java.security.SecureRandom: void nextBytes(byte[])>(r2)
		Method: <org.cryptoapi.bench.predictableseeds.PredictableSeedsABPSCase1: void main(java.lang.String[])>
		SHA-256: 91fe50cd6a27cc5b09791a4e0ca2b52f189df278f3b64b5f534e23e2a7892e24
		Secure: false
	Object:
		Variable: r1
		Type: java.security.MessageDigest
		Statement: r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)
		Method: <org.cryptoapi.bench.brokenhash.BrokenHashABICase5: void go(java.lang.String)>
		SHA-256: ed016d56b71570c1981e61855d63ba8c3e088ee0998fee777a885380e23ec2d0
		Secure: true
	Object:
		Variable: r5
		Type: javax.crypto.Cipher
		Statement: r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer336)
		Method: <org.cryptoapi.bench.insecureasymmetriccrypto.InsecureAsymmetricCipherABICase3: void method1(int)>
		SHA-256: c511f80cb40997a7e1dba89326155603d13544d6569ef30e5fbad8672008e058
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r5)
		Method: <org.cryptoapi.bench.brokencrypto.Crypto6: byte[] encrypt(java.lang.String,java.lang.String)>
		SHA-256: a3ec9d2ec17fc6ed05f2c5744e375db344e29ef9a0eb73fed0a52172677f028
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r5, varReplacer65)
		Method: <org.cryptoapi.bench.predictablecryptographickey.PredictableCryptographicKeyABMC1: void go(java.lang.String)>
		SHA-256: f5e492fb4b600055acc6d17e9c04b74f948142646df217df0c025e08dc23332
		Secure: false
	Object:
		Variable: r3
		Type: javax.crypto.Cipher
		Statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r4)
		Method: <org.cryptoapi.bench.ecbcrypto.CryptoECB1: void method1(java.lang.String)>
		SHA-256: 93b7326c92ffbd8fb66c7c6fe6181f45304c766fa9c06f7ad64fc349c7c53c05
		Secure: false
	Object:
		Variable: r5
		Type: javax.crypto.Cipher
		Statement: r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r1)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase1: void go(java.lang.String,java.lang.String)>
		SHA-256: 330ecd50e2614391a443b11a27dbcf63af24512bf9be60e4f1a4801ebaba2a1f
		Secure: false
	Object:
		Variable: r3
		Type: javax.crypto.Cipher
		Statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer328)
		Method: <org.cryptoapi.bench.insecureasymmetriccrypto.InsecureAsymmetricCipherABICase2: void go(java.security.KeyPairGenerator,java.security.KeyPair)>
		SHA-256: 73b382c310693175a15e0240ca4187435f52ef7949cbcf15a9529c9930ccdbf8
		Secure: false
	Object:
		Variable: r2
		Type: java.security.MessageDigest
		Statement: r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)
		Method: <org.cryptoapi.bench.brokenhash.CryptoHash1: void encrypt(java.lang.String,java.lang.String)>
		SHA-256: 41813d5a7dcb1743ef01882d4b0710439e10fecd52f121da500f3e2b26956431
		Secure: false
	Object:
		Variable: r3
		Type: javax.crypto.SecretKey
		Statement: r3 = virtualinvoke r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase2: void go(java.lang.String)>
		SHA-256: 41fb3cce4d950008bb832f8c0574fd58bb4e76bb2ca852a4f88002b0416250d5
		Secure: false
	Object:
		Variable: r2
		Type: javax.crypto.SecretKey
		Statement: r2 = virtualinvoke r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorCorrected: void go()>
		SHA-256: 4c3d7e8446c02a124da638fc9b809431552d9a5406bfe31a7d2b7071705f2e46
		Secure: true
	Object:
		Variable: r3
		Type: javax.crypto.Cipher
		Statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer306)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase1: void go(int)>
		SHA-256: 94e68497cd73534d6fa5bc96f769376ef8106211850011efe96a9d1e525326aa
		Secure: false
	Object:
		Variable: r3
		Type: byte[]
		Statement: virtualinvoke r2.<java.security.SecureRandom: void nextBytes(byte[])>(r3)
		Method: <org.cryptoapi.bench.pbeiteration.LessThan1000IterationPBEABHCase1: void key2()>
		SHA-256: eea684ae258238ff44edb8230b68112d398bc7175f0896c3658365d675d486ee
		Secure: true
	Object:
		Variable: r5
		Type: java.security.MessageDigest
		Statement: r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer108)
		Method: <org.cryptoapi.bench.brokenhash.BrokenHashABPSCase2: void main(java.lang.String[])>
		SHA-256: 63eaca958d5564fe13468684e101d2ec79c881b5505d41d5dd9324ca9f4fc328
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABHCase1: void key(byte[])>
		SHA-256: 4a933ff85f88e3d82ff3e26fde221ae9ec8a3cb1d28d2a5d7738e58860623cbc
		Secure: true
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r5)
		Method: <org.cryptoapi.bench.brokencrypto.Crypto5: byte[] encrypt(java.lang.String,java.lang.String)>
		SHA-256: bc2298b023c5f73793629cdb28de29327459fc07c722ac340f0b26ad078630a
		Secure: false
	Object:
		Variable: r3
		Type: java.security.MessageDigest
		Statement: r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r2)
		Method: <org.cryptoapi.bench.brokenhash.BrokenHashABMC4: void go(java.lang.String,java.lang.String)>
		SHA-256: 52ef79045d9bd51c63d54546be7a2fec9e8d7c45559bca6bfe132258d2555660
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.cryptoapi.bench.predictablepbepassword.CryptoPredictablePBE: void method1(java.lang.String)>
		SHA-256: 3bea3f0c8897bb905972daaa82154c954287a357c0aa8fa073aeb936c443b77a
		Secure: true
	Object:
		Variable: r2
		Type: java.security.MessageDigest
		Statement: r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r1)
		Method: <org.cryptoapi.bench.brokenhash.BrokenHashABICase2: void go(java.lang.String,java.lang.String)>
		SHA-256: 9a201b557bcfdf2be22ff2ef73eb4224b305a858ea44a7b611e4da1b698c253b
		Secure: false
	Object:
		Variable: r2
		Type: javax.crypto.SecretKey
		Statement: r2 = virtualinvoke r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase14: void method1(java.lang.String)>
		SHA-256: 2c1561a91f22b09c7b4d1cf5233ef276faed92b12dbb0c63c5cfcddb765d9737
		Secure: false
	Object:
		Variable: r5
		Type: byte[]
		Statement: $r8 = virtualinvoke r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r5)
		Method: <org.cryptoapi.bench.brokencrypto.Crypto6: byte[] encrypt(java.lang.String,java.lang.String)>
		SHA-256: 4257ad7b9a27ad46827b17c72b8afe38f77aa52c3c6ccc9bc28259625a4320f4
		Secure: false
	Object:
		Variable: r3
		Type: java.security.MessageDigest
		Statement: r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r2)
		Method: <org.cryptoapi.bench.brokenhash.BrokenHashABMC3: void go(java.lang.String,java.lang.String)>
		SHA-256: 694890cf44285a2515ddd522d3393d6f6bf373626b9c9f208a46f670eea5b8a5
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.SecureRandom
		Statement: specialinvoke $r6.<java.security.SecureRandom: void <init>(byte[])>(r2)
		Method: <org.cryptoapi.bench.predictableseeds.PredictableSeedsABPSCase2: void main(java.lang.String[])>
		SHA-256: da331471fb92f2c300e30122ea58db2f769d7fdce00a0c78dc67a6457925b113
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.cryptoapi.bench.brokenhash.BrokenHashBBCase2: void main(java.lang.String[])>
		SHA-256: 60efe3af835909a683dd036889e40d3bff0500faca34215937ca5044a302f740
		Secure: false
	Object:
		Variable: r4
		Type: javax.crypto.Cipher
		Statement: r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r1)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABMC5: void go(java.lang.String)>
		SHA-256: 770cc402937a1c661c03c2dc91aa89e39c5e7b695bdc7c44885d227106ac56d0
		Secure: false
	Object:
		Variable: r3
		Type: javax.crypto.Cipher
		Statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer242)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase4: void go(int)>
		SHA-256: a8a507525a8ff4709a8f3dd4fc1e5194bff83a62272576a62d318a27adcfa5a0
		Secure: false
	Object:
		Variable: r3
		Type: javax.crypto.SecretKey
		Statement: r3 = virtualinvoke r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.cryptoapi.bench.ecbcrypto.EcbInSymmCryptoABMC1: void go(java.lang.String)>
		SHA-256: 320df2947714009b8019d094abb4c3d4c9624a49cdc296e63874c3cfd23f254a
		Secure: true
	Object:
		Variable: r3
		Type: javax.crypto.Cipher
		Statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r0)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase12: void method1(java.lang.String)>
		SHA-256: a19a90a9212d0467bc89fc0b3c1af96e5ea1b38147d20c18a312d0dd23fc55c
		Secure: false
	Object:
		Variable: r4
		Type: javax.crypto.Cipher
		Statement: r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r7)
		Method: <org.cryptoapi.bench.brokencrypto.Crypto6: byte[] encrypt(java.lang.String,java.lang.String)>
		SHA-256: 577883757a8d66417e747be38445492fe1d015ee7bedff697eafd2634c1de98f
		Secure: false
	Object:
		Variable: r2
		Type: javax.crypto.SecretKey
		Statement: r2 = virtualinvoke r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoBBCase1: void go()>
		SHA-256: d12cdb51f6190a47a8537a350ab71a00756d866e49a292889bc09521951f421b
		Secure: false
	Object:
		Variable: b1
		Type: byte
		Statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r7, r2, s0, b1)
		Method: <org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABHCase1: void key(byte[])>
		SHA-256: eaa260d4709dc9b165563c57fb6358552167b33b63990c0f666e4b5b09ba89ad
		Secure: false
	Object:
		Variable: r2
		Type: javax.crypto.SecretKey
		Statement: r2 = virtualinvoke r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoBBCase5: void go()>
		SHA-256: f5f5ea78ffffb5057baf5c515295dd4669182159afeade6fdf213794a3e730a9
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.PBEParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>(r1, i0)
		Method: <org.cryptoapi.bench.staticsalts.StaticSaltsABMC1: void key2(byte[],int)>
		SHA-256: 63f8864b5402036b1218d2d45733e2c5dc738e26b955fcb7ed25e21e91d3f681
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.cryptoapi.bench.staticsalts.StaticSaltsCorrected: void key2()>
		SHA-256: 79e135764d352eac28353d77df764918f82b307797296f933e4802a474ba5693
		Secure: true
	Object:
		Variable: r2
		Type: javax.crypto.SecretKey
		Statement: r2 = virtualinvoke r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoBBCase4: void go()>
		SHA-256: 12709fab2e6ef67b1b9970e0a618b72d41ae35e135025a37eb9729a294226c2d
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>(byte[])>($r2)
		Method: <org.cryptoapi.bench.predictableseeds.PredictableSeedsABICase6: void method2(byte)>
		SHA-256: 1a44ec38b7bf2bed164a2d57f1c5f4af8698b928d040584519c67d3d955cfeaf
		Secure: true
	Object:
		Variable: r3
		Type: java.security.MessageDigest
		Statement: r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r2)
		Method: <org.cryptoapi.bench.brokenhash.BrokenHashABMC2: void go(java.lang.String,java.lang.String)>
		SHA-256: dfa20d81a9eaebd9b18ffaf6b17b52f979abff10a2e564501874137605b9c212
		Secure: false
	Object:
		Variable: r4
		Type: javax.crypto.Cipher
		Statement: r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r1)
		Method: <org.cryptoapi.bench.ecbcrypto.EcbInSymmCryptoABMC1: void go(java.lang.String)>
		SHA-256: db9e0cf32d4a6472fb5dbe079ef18c4c680d86f38814866a7e0f59cad751c140
		Secure: false
	Object:
		Variable: r3
		Type: javax.crypto.Cipher
		Statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer315)
		Method: <org.cryptoapi.bench.insecureasymmetriccrypto.InsecureAsymmetricCipherABMC1: void go(int)>
		SHA-256: ab76c98e9f37ee7f8a434f118ef4c77733325d7c3dc3efc6a93148ccb97c9477
		Secure: false
	Object:
		Variable: r2
		Type: javax.crypto.SecretKey
		Statement: r2 = virtualinvoke r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.cryptoapi.bench.ecbcrypto.EcbInSymmCryptoCorrected: void go()>
		SHA-256: d804cd5d0d9563bd594faec00b6ed2b922f76b23bffbb03204a14939107d842e
		Secure: true
	Object:
		Variable: r2
		Type: java.security.MessageDigest
		Statement: r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r1)
		Method: <org.cryptoapi.bench.brokenhash.BrokenHashABICase1: void go(java.lang.String,java.lang.String)>
		SHA-256: 3df7a52b9ccdbc9cab1e6be7d2574e865431a048c19778b1361975761593a0e7
		Secure: false
	Object:
		Variable: r2
		Type: java.security.KeyStore
		Statement: r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(r1)
		Method: <org.cryptoapi.bench.predictablekeystorepassword.PredictableKeyStorePasswordCorrected: void go()>
		SHA-256: 332861808220e666674768fe8bf48f1369490191f3e545840b2f96f94ba0a86e
		Secure: false
	Object:
		Variable: r3
		Type: javax.crypto.SecretKey
		Statement: r3 = virtualinvoke r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.cryptoapi.bench.brokencrypto.Crypto5: byte[] encrypt(java.lang.String,java.lang.String)>
		SHA-256: 9141478b0efc690f889b77bb7f0fec65a40ac4d0d36acdb8417a29a49930ab4f
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r7)
		Method: <org.cryptoapi.bench.staticinitializationvector.CryptoStaticIV1: void method1(byte[])>
		SHA-256: 54e503892202fcf21fc353dd239d4c8b715ec5dfbcc455cff41d4b1859e58309
		Secure: false
	Object:
		Variable: r2
		Type: javax.crypto.KeyGenerator
		Statement: r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(r1)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase2: void go(java.lang.String)>
		SHA-256: 1989b357dd164067bd19fac966838d7d133299e7239804e0ded600ed6d24e4f3
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r11, $r5)
		Method: <org.cryptoapi.bench.predictablecryptographickey.Crypto: byte[] method1(java.lang.String,java.lang.String)>
		SHA-256: a4f30c445a9b325a29c10bbf9dd31ee8ecd675f53d6c9238009290400710d92
		Secure: false
	Object:
		Variable: r4
		Type: java.security.KeyStore
		Statement: r4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(r1)
		Method: <org.cryptoapi.bench.predictablekeystorepassword.PredictableKeyStorePasswordABHCase2: void go()>
		SHA-256: 67bb1cee4f77e3c10c06272c25388a161696016e89a865c1e7e55fcf3d9bd0e1
		Secure: false
	Object:
		Variable: r2
		Type: javax.crypto.SecretKey
		Statement: r2 = virtualinvoke r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.cryptoapi.bench.ecbcrypto.CryptoECB1: void method1(java.lang.String)>
		SHA-256: f28a6239d7a273690630abffcf7f97d1347e795c6e2a3fbac0b8bebefeb94283
		Secure: true
	Object:
		Variable: r2
		Type: javax.crypto.KeyGenerator
		Statement: r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer133)
		Method: <org.cryptoapi.bench.ecbcrypto.EcbInSymmCryptoABMC1: void go(java.lang.String)>
		SHA-256: e33cb5775ee218676f0af6d4e89e32092c2b8e73134f82aede8178797cac7ef3
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.PBEParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>(r2, i0)
		Method: <org.cryptoapi.bench.pbeiteration.LessThan1000IterationPBEABMC1: void go(int)>
		SHA-256: cdbd86e3700e94d9100808af649c2726ea441996039189794686b8bd04cfa3ca
		Secure: false
	Object:
		Variable: r3
		Type: javax.crypto.Cipher
		Statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer296)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoCorrected: void go()>
		SHA-256: 2384a6096a7c872e11dda5eb3745bca0c3817b8abf612ea5055c567f1604dba4
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r5)
		Method: <org.cryptoapi.bench.brokencrypto.Crypto3: byte[] encrypt(java.lang.String,java.lang.String)>
		SHA-256: cda5fd47ab495598045c54405b5c33800b0423fcd30ad12be790409963f4dc7b
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.cryptoapi.bench.brokenhash.BrokenHashBBCase1: void main(java.lang.String[])>
		SHA-256: a5a9df0929d35ab86257e463bf7e81824e4bf6a99f949d7e31e32121f4d27494
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, r2, s0, b1)
		Method: <org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1: void go(java.lang.String)>
		SHA-256: 8a6790b3d5baccdcd925f0727cc62d3112e21072984cb70cc598c64a704624c3
		Secure: false
	Object:
		Variable: r2
		Type: javax.crypto.SecretKey
		Statement: r2 = virtualinvoke r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorBBCase1: void go()>
		SHA-256: 86c415856de86486c4197a473864f71b538179106747c25992e64aa1e42e9aa2
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.cryptoapi.bench.pbeiteration.LessThan1000IterationPBEABICase2: void key2()>
		SHA-256: 932f8894aeaf714daaf4c4090d2461bbf41ee75f7d70f741bd6adc0b5e589134
		Secure: true
	Object:
		Variable: r3
		Type: javax.crypto.SecretKey
		Statement: r3 = virtualinvoke r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABMC2: void go(java.lang.String)>
		SHA-256: ac8796ee2bdda3977f9beeea167ed87f2f4d272135546dcdaaef1a478ec9cef6
		Secure: false
	Object:
		Variable: r2
		Type: javax.crypto.KeyGenerator
		Statement: r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer38)
		Method: <org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABICase2: void go()>
		SHA-256: 811bed736101caa89b599a366fbe92611154d76ccd402603e7704e27da50be8e
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.PBEParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>(r2, i1)
		Method: <org.cryptoapi.bench.pbeiteration.CryptoPBEIteration1: void method1(int)>
		SHA-256: ce15797ad4211f62cba9ad5d30a964f9bf385ece7723e0f2e2e7666beaa59ca
		Secure: false
	Object:
		Variable: r2
		Type: java.security.MessageDigest
		Statement: r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer120)
		Method: <org.cryptoapi.bench.brokenhash.BrokenHashBBCase3: void main(java.lang.String[])>
		SHA-256: 1aa2b01131f60deddef07d8657aad2d0304db2a0e8d1829135fc5d88c962a0b8
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.cryptoapi.bench.brokenhash.BrokenHashABMC3: void go(java.lang.String,java.lang.String)>
		SHA-256: be6c8078f81471c361646bb2eea739653f18b3248d7c01b1f489d05c0b27002d
		Secure: false
	Object:
		Variable: r5
		Type: javax.crypto.Cipher
		Statement: r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer0)
		Method: <org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABMC1: void go(byte[])>
		SHA-256: 2a0d1c5ccb44bb5bcfd3e0ec375017a7b0f0f26961a0607b93fa2ab21637dc54
		Secure: false
	Object:
		Variable: r2
		Type: java.security.MessageDigest
		Statement: r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer110)
		Method: <org.cryptoapi.bench.brokenhash.BrokenHashCorrected: void main(java.lang.String[])>
		SHA-256: 4789a156db253c4441bee943268832433fdbdee68afa5baeea90954977e55b10
		Secure: false
	Object:
		Variable: varReplacer63
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r8, varReplacer63)
		Method: <org.cryptoapi.bench.predictablecryptographickey.PredictableCryptographicKeyABPSCase1: void main(java.lang.String[])>
		SHA-256: 74a56d68100d14858281d05c3a2385c38c89e7483d8b89a28c652903954703e5
		Secure: false
	Object:
		Variable: varReplacer74
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r5, varReplacer74)
		Method: <org.cryptoapi.bench.predictablecryptographickey.PredictableCryptographicKeyABICase2: void go()>
		SHA-256: 355022aeae7aa6b1c898f503b608e9e31f4f0536971a224984be34e95de162bc
		Secure: false
	Object:
		Variable: r4
		Type: javax.crypto.Cipher
		Statement: r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer29)
		Method: <org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABICase3: void method2(byte[])>
		SHA-256: 59b1e6fd6a57a7006262c7f6b8b9d01a86f908daa0e4082c3cc7217412ae5a38
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.PBEParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r2, i0)
		Method: <org.cryptoapi.bench.staticsalts.StaticSaltsABICase2: void key2(int)>
		SHA-256: df87c2dd95d2d6ba3719672aff51ab8a6e2da33f8a097aa351267f2a5333aa02
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r2)
		Method: <org.cryptoapi.bench.predictablecryptographickey.Crypto: void <init>(java.lang.String)>
		SHA-256: 51384c72f0bac54a80f3f29c25ed17c1549cdc79ec5ce427651c67fd8ca9061d
		Secure: false
	Object:
		Variable: r5
		Type: byte[]
		Statement: virtualinvoke r4.<java.security.SecureRandom: void nextBytes(byte[])>(r5)
		Method: <org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorCorrected: void go()>
		SHA-256: 190b1eba08aa675bab008bbc01771d2494a76413faea06b2755ab8a4d5ace780
		Secure: true
	Object:
		Variable: r1
		Type: javax.crypto.KeyGenerator
		Statement: r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>($r5)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase10: void go()>
		SHA-256: f172617c0766f076fdb99129e24cc867f2abffa66c598f0c7623596313ac7df2
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.cryptoapi.bench.pbeiteration.LessThan1000IterationPBECorrected: void key2()>
		SHA-256: efc1b7a3b259ae95e2d72bb57e8bbe088d5858bbf8ad344de88ceebb90679c8
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r4, varReplacer62)
		Method: <org.cryptoapi.bench.predictablecryptographickey.PredictableCryptographicKeyABICase1: void go(java.lang.String)>
		SHA-256: 45d2d6816985e87e31ce787d34fcc4b3210b18031be389dff03acda60556a10e
		Secure: false
	Object:
		Variable: r2
		Type: byte[]
		Statement: virtualinvoke r1.<java.security.SecureRandom: void nextBytes(byte[])>(r2)
		Method: <org.cryptoapi.bench.pbeiteration.LessThan1000IterationPBEBBCase1: void key2()>
		SHA-256: 9f46a22e2a1fb5a12978a9afb012de05f3a63c1b466f285221a06a675b1c2212
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.cryptoapi.bench.pbeiteration.LessThan1000IterationPBEABICase1: void go(int)>
		SHA-256: b30b4877ea42581d823bd46b0b36eec2964d66cfc9b33c9e821b0d908b5e6cbc
		Secure: true
	Object:
		Variable: r4
		Type: javax.crypto.Cipher
		Statement: r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r7)
		Method: <org.cryptoapi.bench.brokencrypto.Crypto4: byte[] encrypt(java.lang.String,java.lang.String)>
		SHA-256: 160c8faa35c01a055a0957c71a7cbe53267171d0e80f5bc12a3da34f49fbc85b
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>(byte[])>($r2)
		Method: <org.cryptoapi.bench.predictableseeds.PredictableSeedsABICase4: void go()>
		SHA-256: 74d5b5d053a74570194449f1215bac713aa2bbc5f4b7427074cf35c4320a671c
		Secure: true
	Object:
		Variable: r6
		Type: javax.crypto.Cipher
		Statement: r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer322)
		Method: <org.cryptoapi.bench.insecureasymmetriccrypto.InsecureAsymmetricCipherABICase1: void go(int)>
		SHA-256: f8a044bd4a9e7625923a2f8328f8976a267f0d77c9b71e9cfb9c84efe633fa30
		Secure: false
	Object:
		Variable: r3
		Type: javax.crypto.SecretKey
		Statement: r3 = virtualinvoke r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.cryptoapi.bench.staticinitializationvector.CryptoStaticIV1: void method1(byte[])>
		SHA-256: 989b0ea18fe024cbcd96d97292be1eda777ba46fc4220a4a44fe7a9095caad1b
		Secure: true
	Object:
		Variable: r1
		Type: javax.crypto.KeyGenerator
		Statement: r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer126)
		Method: <org.cryptoapi.bench.ecbcrypto.CryptoECB1: void method1(java.lang.String)>
		SHA-256: 4134787ef67126eb90da7761b7e3419f1ff8aedb09fffce56af34e6b2f0e262a
		Secure: true
	Object:
		Variable: r1
		Type: javax.crypto.KeyGenerator
		Statement: r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer33)
		Method: <org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorBBCase1: void go()>
		SHA-256: 29c88f109cc541d778987363963126cff68df340fa598982d62cfbf83769c30a
		Secure: true
	Object:
		Variable: varReplacer67
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r5, varReplacer67)
		Method: <org.cryptoapi.bench.predictablecryptographickey.PredictableCryptographicKeyBBCase1: void main(java.lang.String[])>
		SHA-256: 8b7c10a6f472edee701e8689621b32286abb48e13f8ca1ed744c4f7d92e17244
		Secure: false
	Object:
		Variable: r1
		Type: javax.crypto.KeyGenerator
		Statement: r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>($r5)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase7: void go()>
		SHA-256: 91c7248cf857abee526a6f227afc51bb844beeb4a7ade6c935a8a874159c3ab9
		Secure: true
	Object:
		Variable: r1
		Type: javax.crypto.KeyGenerator
		Statement: r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer131)
		Method: <org.cryptoapi.bench.ecbcrypto.EcbInSymmCryptoABPSCase1: void go(int)>
		SHA-256: fb528a31a5cb46e7d7245df3eee2a95f4f2205902da28831dfe41c7411929cb2
		Secure: true
	Object:
		Variable: r2
		Type: javax.crypto.Cipher
		Statement: r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer335)
		Method: <org.cryptoapi.bench.insecureasymmetriccrypto.InsecureAsymmetricCipherABICase3: void method1(int)>
		SHA-256: b852f34aa16834ab6450e3d655b626f7a365e2637c5d7e0c527079cc6dc3a9ef
		Secure: false
	Object:
		Variable: r1
		Type: javax.crypto.KeyGenerator
		Statement: r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer278)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoBBCase3: void go()>
		SHA-256: 318ad35a93fae48f8b4c4233dac2376fc6c1ef3f8e947bbfb893fc58691040df
		Secure: false
	Object:
		Variable: r1
		Type: java.security.KeyPairGenerator
		Statement: r1 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer323)
		Method: <org.cryptoapi.bench.insecureasymmetriccrypto.InsecureAsymmetricCipherABICase1: void go(int)>
		SHA-256: c22eb098d6ba99196bfb6130bda6e44df4dd138a0962df362a878507bd35f921
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase2: void go()>
		SHA-256: 8d6820ae08a54ac0d7db0fa12ea2bddfe096a2a0305e036b78a0668a6bfefcd1
		Secure: true
	Object:
		Variable: r2
		Type: javax.crypto.SecretKey
		Statement: r2 = virtualinvoke r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABHCase1: void go()>
		SHA-256: e81308e0e480b5061d843d6b06e9973f48740784196f7ed9ad645307683f5110
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.cryptoapi.bench.brokenhash.BrokenHashABICase10: void method1(java.lang.String,java.lang.String)>
		SHA-256: dc4b5a093a0f32a5ee652c8da84944c7c9fbdc63484a8612d03cf95b6a02b6a0
		Secure: false
	Object:
		Variable: r3
		Type: javax.crypto.Cipher
		Statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r0)
		Method: <org.cryptoapi.bench.ecbcrypto.EcbInSymmCryptoABICase3: void method1(java.lang.String)>
		SHA-256: 82f3907da64978a5fee5bf105d91dfad596516d0502c88c05e3ca2a96553f0e8
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.cryptoapi.bench.brokenhash.BrokenHashABICase9: void method1(java.lang.String,java.lang.String)>
		SHA-256: d6d4eea4f0aaac22b91935d040a2f1fb8666d9968a8df31354555b2409d5f49b
		Secure: false
	Object:
		Variable: b1
		Type: byte
		Statement: specialinvoke $r6.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r7, r3, s0, b1)
		Method: <org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordCorrected: void key()>
		SHA-256: 3676f7757902290c834e20cfa4672f21e70cc623d0e2f4925440bd137e3be3b9
		Secure: false
	Object:
		Variable: varReplacer179
		Type: int
		Statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r5, r2, varReplacer178, varReplacer179)
		Method: <org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase2: void go()>
		SHA-256: 23450faa037be63ef0082a423d577a20871c2437e981d9194a1414fa77d285f5
		Secure: true
	Object:
		Variable: r2
		Type: javax.crypto.KeyGenerator
		Statement: r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(r1)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABMC5: void go(java.lang.String)>
		SHA-256: 751c0ac49cd460e33d5426e0f2f6d4256669e6d4bef13b23a5b5fae41e921bc4
		Secure: false
	Object:
		Variable: r2
		Type: java.security.MessageDigest
		Statement: r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r1)
		Method: <org.cryptoapi.bench.brokenhash.BrokenHashABICase12: void method1(java.lang.String,java.lang.String)>
		SHA-256: c582e65e282664bff6ef6af954e1609f7395a5f49b54ec17adc975c3a3c8242f
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r1)
		Method: <org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABMC1: void go(byte[])>
		SHA-256: 67b4c0129f639509eb652c140065500dcd6188ceea7697126d473978300f62de
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.SecureRandom
		Statement: specialinvoke $r9.<java.security.SecureRandom: void <init>()>()
		Method: <org.cryptoapi.bench.pbeiteration.LessThan1000IterationPBEABHCase1: void key2()>
		SHA-256: 13b194c1942f4893563d9d30b846ed186493fa4ed75c1d6ef4aa1d31da4a38b8
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.SecureRandom
		Statement: specialinvoke $r6.<java.security.SecureRandom: void <init>()>()
		Method: <org.cryptoapi.bench.predictablekeystorepassword.PredictableKeyStorePasswordABHCase1: void go()>
		SHA-256: 6acea8788b7342023313d9c8ba3c9b858e4ed3053d3dc5901e9f36a9cb7948b8
		Secure: true
	Object:
		Variable: r3
		Type: javax.crypto.SecretKey
		Statement: r3 = virtualinvoke r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.cryptoapi.bench.brokencrypto.Crypto6: byte[] encrypt(java.lang.String,java.lang.String)>
		SHA-256: 97a8506709366159824d31cb08e8bbc027de1be64e03e7daf1b59959d32bcf5c
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.cryptoapi.bench.brokenhash.BrokenHashABICase2: void go(java.lang.String,java.lang.String)>
		SHA-256: 9ce9703fad4a6f13488fbbc6237ae97535b0b0cef7df32830a6044f2f776ea0f
		Secure: false
	Object:
		Variable: r2
		Type: javax.crypto.KeyGenerator
		Statement: r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>($r6)
		Method: <org.cryptoapi.bench.brokencrypto.Crypto4: byte[] encrypt(java.lang.String,java.lang.String)>
		SHA-256: 23ad87df13727298e24388a0191c05383eb7f2b00d1ec24f5b1dd8de7575d977
		Secure: false
	Object:
		Variable: r2
		Type: byte[]
		Statement: virtualinvoke r1.<java.security.SecureRandom: void nextBytes(byte[])>(r2)
		Method: <org.cryptoapi.bench.staticsalts.StaticSaltsCorrected: void key2()>
		SHA-256: a2d36e20b64d7cc1881d592115b2a2a8c050039da95ce90e33125e53e148af0
		Secure: true
	Object:
		Variable: r1
		Type: javax.crypto.KeyGenerator
		Statement: r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>($r5)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase8: void go()>
		SHA-256: 1982b6807336268711a81bca75b90c9b22cc1107b9ac0588137405977ee6a1f6
		Secure: true
	Object:
		Variable: r2
		Type: javax.crypto.KeyGenerator
		Statement: r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>($r6)
		Method: <org.cryptoapi.bench.brokencrypto.Crypto3: byte[] encrypt(java.lang.String,java.lang.String)>
		SHA-256: 26ccc3e65886ceb1cb94c164ae7eb27a02232b74411ba7ff13cd93408ca3af1
		Secure: false
	Object:
		Variable: r3
		Type: javax.crypto.Cipher
		Statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r7)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase7: void go()>
		SHA-256: 1549bd2c079f16d79981ac7e559c5e5b4ad759c145bc12692bd7c47cf9811907
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r5, varReplacer74)
		Method: <org.cryptoapi.bench.predictablecryptographickey.PredictableCryptographicKeyABICase2: void go()>
		SHA-256: 4ba2468d521b5900e2b0e5b20c2a0cb9439593de810108185531fc2e80313e06
		Secure: false
	Object:
		Variable: r5
		Type: java.security.MessageDigest
		Statement: r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer112)
		Method: <org.cryptoapi.bench.brokenhash.BrokenHashABPSCase4: void main(java.lang.String[])>
		SHA-256: 7eee9e7f01f415728404043aa744ba8f937b4cddccd828f39709afb1568e634a
		Secure: false
	Object:
		Variable: r9
		Type: byte[]
		Statement: virtualinvoke r4.<java.security.SecureRandom: void nextBytes(byte[])>(r9)
		Method: <org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABPSCase1: void go(int)>
		SHA-256: 31ef87d529e13e00539e9ba54cfd9187637aa0f4aa7112e3188352b699a2419e
		Secure: true
	Object:
		Variable: r3
		Type: java.security.KeyStore
		Statement: r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(r2)
		Method: <org.cryptoapi.bench.predictablekeystorepassword.PredictableKeyStorePasswordABMC1: void go(java.lang.String)>
		SHA-256: 7e327c9cd5bb42a417c650f8ead3817a43a13d7e2e2c3f4122bbea3d3b4d686a
		Secure: false
	Object:
		Variable: r4
		Type: javax.crypto.Cipher
		Statement: r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r7)
		Method: <org.cryptoapi.bench.brokencrypto.Crypto2: byte[] encrypt(java.lang.String,java.lang.String)>
		SHA-256: 189419399682cc63a5d5d7def9a888b119ebff67f8efe33a2bf208bf0a816671
		Secure: false
	Object:
		Variable: r2
		Type: byte[]
		Statement: virtualinvoke r1.<java.security.SecureRandom: void nextBytes(byte[])>(r2)
		Method: <org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase2: void go()>
		SHA-256: dd9fb115651b728f52ef37369a4bf3d2077c361537df3d6468d704bea5b41670
		Secure: true
	Object:
		Variable: varReplacer77
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r4, varReplacer77)
		Method: <org.cryptoapi.bench.predictablecryptographickey.PredictableCryptographicKeyABICase3: void method2(java.lang.String)>
		SHA-256: 7506d97432e51786909b56e7ce6a032f15566ac7c40d66ab6c79713cd28f96a
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r5)
		Method: <org.cryptoapi.bench.brokencrypto.Crypto4: byte[] encrypt(java.lang.String,java.lang.String)>
		SHA-256: bb7af6811388eb730de6e882176e3dfc26eb35493cf2e58522c579eb27b1a52f
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r5)
		Method: <org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorCorrected: void go()>
		SHA-256: 20caaa7fc368a59964dc95ef17fc4611d769e09bd94edba796c34d7e83fe95c7
		Secure: true
	Object:
		Variable: r2
		Type: java.security.MessageDigest
		Statement: r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer98)
		Method: <org.cryptoapi.bench.brokenhash.BrokenHashBBCase4: void main(java.lang.String[])>
		SHA-256: 20bd9a7d11ad9d682839eed08469060cc562a863fdfd6acde421c489d6f9d81f
		Secure: false
	Object:
		Variable: r5
		Type: java.security.MessageDigest
		Statement: r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer97)
		Method: <org.cryptoapi.bench.brokenhash.BrokenHashABPSCase3: void main(java.lang.String[])>
		SHA-256: fcfb06355ea99ce1f4c374b949896becc140ebc3598b8c778fb5aa239bf045f2
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.cryptoapi.bench.predictableseeds.PredictableSeedsABICase1: void go(byte[])>
		SHA-256: da272843cd966e34289df6bd997cc3274b8f655e96e434528fbdc5589245906
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r9)
		Method: <org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABPSCase1: void go(int)>
		SHA-256: 574a8c4676ae24fe6b5ec4df0b44b2ff8602f5ada8c5fba09af8f6bf72ca7f42
		Secure: true
	Object:
		Variable: r3
		Type: java.security.MessageDigest
		Statement: r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r2)
		Method: <org.cryptoapi.bench.brokenhash.BrokenHashABMC1: void go(java.lang.String,java.lang.String)>
		SHA-256: 28684f6d1c8f62a41752f3c3cff0750627c565c7e295b55db249f68ce9dbdae
		Secure: false
	Object:
		Variable: r2
		Type: javax.crypto.SecretKey
		Statement: r2 = virtualinvoke r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABPSCase1: void go(int)>
		SHA-256: b04d2146290b741ed86403dff34d792e1fae41eb903976bf61cc31d225502b26
		Secure: true
	Object:
		Variable: r4
		Type: javax.crypto.Cipher
		Statement: r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r7)
		Method: <org.cryptoapi.bench.brokencrypto.Crypto5: byte[] encrypt(java.lang.String,java.lang.String)>
		SHA-256: 69364014d084d474d2bfe5068a4228344bf5cd5a014eb1dd64a46c82334acfc4
		Secure: false
	Object:
		Variable: r5
		Type: byte[]
		Statement: $r8 = virtualinvoke r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r5)
		Method: <org.cryptoapi.bench.brokencrypto.Crypto5: byte[] encrypt(java.lang.String,java.lang.String)>
		SHA-256: 4431be2e152d9f8d17d5359ea9fe00e6d52fb6be0d0cd20cf7f22c4a829ecee4
		Secure: false
	Object:
		Variable: r2
		Type: byte[]
		Statement: virtualinvoke r3.<java.security.SecureRandom: void nextBytes(byte[])>(r2)
		Method: <org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordBBCase1: void key()>
		SHA-256: ee2f155c24b91978bff0d100e0c561c24698e590f1744d26c0e3f4cbc66e00db
		Secure: true
	Object:
		Variable: varReplacer72
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r8, varReplacer72)
		Method: <org.cryptoapi.bench.predictablecryptographickey.PredictableCryptographicKeyABHCase1: void main(java.lang.String[])>
		SHA-256: 5c3226df3193388fdcea92971f820367d1f83065562acfaffc2723bded140c51
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.cryptoapi.bench.brokenhash.BrokenHashABMC2: void go(java.lang.String,java.lang.String)>
		SHA-256: 3d4180ca50b37d2564895f77881932d07c48bf662e0f6fea0584a2a395f407c6
		Secure: false
	Object:
		Variable: r2
		Type: javax.crypto.KeyGenerator
		Statement: r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer20)
		Method: <org.cryptoapi.bench.staticinitializationvector.CryptoStaticIV1: void method1(byte[])>
		SHA-256: 690c2b7f84b8cce213d97954551d9d97bfcdde98591b347570be2e6ed4805778
		Secure: true
	Object:
		Variable: r2
		Type: java.security.MessageDigest
		Statement: r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r1)
		Method: <org.cryptoapi.bench.brokenhash.BrokenHashABICase3: void go(java.lang.String,java.lang.String)>
		SHA-256: 1ed3d8e9a04ea480932a3e553d20871700141c8ae8a342175db2717451ff7a2a
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r12, varReplacer87)
		Method: <org.cryptoapi.bench.predictablecryptographickey.PredictableCryptographicKeyABHCase2: void main(java.lang.String[])>
		SHA-256: 25c8e8d698c61f2489d5fba8cf37831aceedbd9b6216fe92708eaa5a15cf467
		Secure: false
	Object:
		Variable: r4
		Type: javax.crypto.Cipher
		Statement: r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer19)
		Method: <org.cryptoapi.bench.staticinitializationvector.CryptoStaticIV1: void method1(byte[])>
		SHA-256: ee56c254df2d9bf8f3494213fae91c0482e319518112c0c6aab79d82ef3b52c2
		Secure: false
	Object:
		Variable: r3
		Type: javax.crypto.KeyGenerator
		Statement: r3 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer23)
		Method: <org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABICase1: void go(byte[])>
		SHA-256: 97f40a391b58d63661110f7d8c04344196f4fb3a7bee0d14f88800cb48bc3a77
		Secure: true
	Object:
		Variable: r3
		Type: javax.crypto.SecretKey
		Statement: r3 = virtualinvoke r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.cryptoapi.bench.ecbcrypto.EcbInSymmCryptoABICase1: void go(java.lang.String)>
		SHA-256: 99ecdcd4bb0afd093d1e24b54144fec34542fd23c247d8e8cbcb73bac74b5432
		Secure: true
	Object:
		Variable: r3
		Type: javax.crypto.Cipher
		Statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer27)
		Method: <org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABHCase1: void go()>
		SHA-256: 6476e54735fba03e387f5df364b2c54194e33e9f9c8b5573abec4968c8e68e06
		Secure: false
	Object:
		Variable: r4
		Type: javax.crypto.Cipher
		Statement: r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r1)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase4: void go(java.lang.String)>
		SHA-256: c5e3aa69ae4cd3f16d4796c6fee0a1f8f0a079bad6fe591508aa288f5a308c37
		Secure: false
	Object:
		Variable: r3
		Type: byte[]
		Statement: virtualinvoke r1.<java.security.SecureRandom: void nextBytes(byte[])>(r3)
		Method: <org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordCorrected: void key()>
		SHA-256: 88886ce0bfbde68da5e1fe5c27b01462961e4f379c2d035e51590dba5b81d683
		Secure: true
	Object:
		Variable: r5
		Type: javax.crypto.Cipher
		Statement: r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r1)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABMC1: void go(java.lang.String,java.lang.String)>
		SHA-256: 22826956e7bb07cbb7fe276e02b67699c942ec0a2c5c0691424b2affbf7fb58b
		Secure: false
	Object:
		Variable: r2
		Type: java.security.KeyStore
		Statement: r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(r1)
		Method: <org.cryptoapi.bench.predictablekeystorepassword.CryptoPredictableKeyStorePassword1: void method1(java.lang.String)>
		SHA-256: 2cb48526ac1735e89af5fd5b9e6ef6ffdba47d11f58949e308873bd29e5f7f9e
		Secure: false
	Object:
		Variable: r2
		Type: javax.crypto.SecretKey
		Statement: r2 = virtualinvoke r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoCorrected: void go()>
		SHA-256: ae9b9920076d0e43412b6a37805fa4a27c0f803ab4d09885023a562b1efff6c2
		Secure: true
	Object:
		Variable: r2
		Type: javax.crypto.SecretKey
		Statement: r2 = virtualinvoke r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.cryptoapi.bench.ecbcrypto.EcbInSymmCryptoABPSCase1: void go(int)>
		SHA-256: 51b7026ace2b74c975ab8ded9d28b1fe7d25f7943f64787daa20482f3f27c5a9
		Secure: true
	Object:
		Variable: $r11
		Type: javax.crypto.spec.PBEParameterSpec
		Statement: specialinvoke $r11.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>(r2, varReplacer48)
		Method: <org.cryptoapi.bench.staticsalts.StaticSaltsABHCase1: void key2()>
		SHA-256: bc3fb9ed3ed2ba2d12145e3f57beb59c53475191a401814e37d33abb038614c9
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABPSCase1: void key(int)>
		SHA-256: 1dff49b6cc773f8dfd176132a23245890636cbbc814c76ccde43c6af77ae0a26
		Secure: true
	Object:
		Variable: r5
		Type: java.security.MessageDigest
		Statement: r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer96)
		Method: <org.cryptoapi.bench.brokenhash.BrokenHashABPSCase3: void main(java.lang.String[])>
		SHA-256: 30b4acb838a1e27354ff1c4498eb91ef8a4536c64f457fb47ee912db14a3c239
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, r2, s0, b1)
		Method: <org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordBBCase1: void key()>
		SHA-256: d2825b80dbbafcd7b84749aac1abeb98ea5b65cba771382cf882243fb8f7a3c7
		Secure: false
	Object:
		Variable: r2
		Type: java.security.MessageDigest
		Statement: r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)
		Method: <org.cryptoapi.bench.brokenhash.CryptoHash3: void encrypt(java.lang.String,java.lang.String)>
		SHA-256: de58d5f196a0c1987f71a62be8427c9ac8da25e6a10d50a636fd13dd993fbc43
		Secure: false
	Object:
		Variable: $r16
		Type: java.security.SecureRandom
		Statement: specialinvoke $r16.<java.security.SecureRandom: void <init>()>()
		Method: <org.cryptoapi.bench.predictableseeds.PredictableSeedsABHCase2: void main(java.lang.String[])>
		SHA-256: e23c932213e30fb7ada5c3bf3bb31458a8cd7e957834b32f805c19b23aa6433a
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.cryptoapi.bench.brokenhash.CryptoHash1: void encrypt(java.lang.String,java.lang.String)>
		SHA-256: 1d39224f60c86da3ec3cac530c2a2fee1d2b6f3522f97422dee9ee070cf57d0e
		Secure: false
	Object:
		Variable: r1
		Type: java.security.MessageDigest
		Statement: r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)
		Method: <org.cryptoapi.bench.brokenhash.BrokenHashABICase6: void go(java.lang.String)>
		SHA-256: d356ad4c8056180ad9b6be5f563e02c58ca5851eb2cd573eb57dd083510a6af2
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <org.cryptoapi.bench.predictableseeds.PredictableSeedsABPSCase2: void main(java.lang.String[])>
		SHA-256: 950cb5f41d5d26adbce03f679bdc0a60b21c0060a5cc9a36083442e7fdff4269
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r4, varReplacer77)
		Method: <org.cryptoapi.bench.predictablecryptographickey.PredictableCryptographicKeyABICase3: void method2(java.lang.String)>
		SHA-256: 40089d9f81176b0da19160ce1adfe704b26688ee6ebbe7592c9a02fa3a0fab3f
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>(r1, r2, s0, b1)
		Method: <org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordBBCase2: void key()>
		SHA-256: 4de65d487850098a69f08f9baf36bb39d2e31bb1cf114d7c5f39f552f6bb8de1
		Secure: true
	Object:
		Variable: r1
		Type: javax.crypto.KeyGenerator
		Statement: r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer272)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase5: void go(int)>
		SHA-256: c83ab0a08b29c4ec23593bda5efdc730b06ba528f8a30e9a46a43680103a56be
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r4)
		Method: <org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABHCase1: void go()>
		SHA-256: fd83cd57fff222224b7bdec64c8c5363369581e6f1456c6ed9eaf1e44561255d
		Secure: false
	Object:
		Variable: r2
		Type: java.security.MessageDigest
		Statement: r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r1)
		Method: <org.cryptoapi.bench.brokenhash.BrokenHashABICase10: void method1(java.lang.String,java.lang.String)>
		SHA-256: 159f8d584b1c83dfe5bcbf4f24b9ff6c7fa2b544277e16c67e1cc778deba7307
		Secure: false
	Object:
		Variable: r3
		Type: javax.crypto.SecretKey
		Statement: r3 = virtualinvoke r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABICase3: void method2(byte[])>
		SHA-256: eb41bb7cf96dc9dc0a5de3f03634a1d7148b8f53c34f0796c81cedd070dc3f46
		Secure: true
	Object:
		Variable: r1
		Type: javax.crypto.KeyGenerator
		Statement: r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer4)
		Method: <org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABPSCase1: void go(int)>
		SHA-256: ef852ad7fa9ee92771d8550f72e2f3605e14ccb0069085ef6c9abdd778923633
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.cryptoapi.bench.brokenhash.BrokenHashABICase1: void go(java.lang.String,java.lang.String)>
		SHA-256: 29fca946d269838169b66251793d41846084a62f15b653d62ec7dff77a4dea75
		Secure: false
	Object:
		Variable: r1
		Type: java.security.KeyPairGenerator
		Statement: r1 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer311)
		Method: <org.cryptoapi.bench.insecureasymmetriccrypto.InsecureAsymmetricCipherBBCase1: void go()>
		SHA-256: 107a0726bc07d44ad3c9ecdcca00b9606601d5bb9883bfcf3f89dc735359654d
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABHCase2: void key(java.lang.String)>
		SHA-256: 5a010fd7fb3895e4d29665a0c79ed963012928dcba152511d312fe3273b7a7c2
		Secure: true
	Object:
		Variable: r3
		Type: javax.crypto.Cipher
		Statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r5)
		Method: <org.cryptoapi.bench.ecbcrypto.EcbInSymmCryptoABICase2: void go()>
		SHA-256: 51cfe795f2ddf3c0626768238bad1e9113f037c9237159456c09d35a5b84d861
		Secure: false
	Object:
		Variable: r2
		Type: javax.crypto.SecretKey
		Statement: r2 = virtualinvoke r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoBBCase2: void go()>
		SHA-256: da772c54c0bef5ebfa197dfa5c7a8067efc59b21c8f4bb8be23ca9f2a5e47535
		Secure: false
	Object:
		Variable: r1
		Type: javax.crypto.KeyGenerator
		Statement: r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(r0)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase13: void method1(java.lang.String)>
		SHA-256: e857a5609d1d3f2a986974179aafdba353cc6e373b2b18a3596912947224e6e8
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.cryptoapi.bench.brokenhash.BrokenHashABICase11: void method1(java.lang.String,java.lang.String)>
		SHA-256: bd6e6d55c9ab6f39eb34bc19c3d636fb463f2d3417e0ade57e863846cc792c54
		Secure: false
	Object:
		Variable: r2
		Type: java.security.KeyStore
		Statement: r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(r1)
		Method: <org.cryptoapi.bench.predictablekeystorepassword.PredictableKeyStorePasswordABPSCase1: void go(int)>
		SHA-256: 6db00541437c6a8e862928bcd68470af207c93ba2d97492a7503756ac4856cd
		Secure: false
	Object:
		Variable: r3
		Type: javax.crypto.Cipher
		Statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer132)
		Method: <org.cryptoapi.bench.ecbcrypto.EcbInSymmCryptoABPSCase1: void go(int)>
		SHA-256: dec8d06860e34385abdf1e4257d45d3c07a13d56bfd1aa151f1c629d2a7a9e0
		Secure: false
	Object:
		Variable: r2
		Type: byte[]
		Statement: virtualinvoke r3.<java.security.SecureRandom: void nextBytes(byte[])>(r2)
		Method: <org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABHCase2: void key(java.lang.String)>
		SHA-256: e7e521fbcb864ed896f330202d6e93baa6de10f0fc96bec139023251c037d451
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase3: void method2(java.lang.String)>
		SHA-256: f967b334fd4e010e88126d20bc8d9192cefe6b9f685fc63058f44d629c4fa1c8
		Secure: true
	Object:
		Variable: varReplacer87
		Type: java.lang.String
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r12, varReplacer87)
		Method: <org.cryptoapi.bench.predictablecryptographickey.PredictableCryptographicKeyABHCase2: void main(java.lang.String[])>
		SHA-256: 7d71cc0a929d5a026a4eb0ae827c0a709a124beddcbf9efde6a5d8f54c94ba58
		Secure: false
	Object:
		Variable: r2
		Type: byte[]
		Statement: virtualinvoke r1.<java.security.SecureRandom: void nextBytes(byte[])>(r2)
		Method: <org.cryptoapi.bench.pbeiteration.LessThan1000IterationPBEABICase2: void key2()>
		SHA-256: e81dc5f4616ffe918950c1761b824c872343dbcf55212e892ca1103150b6b4a
		Secure: true
	Object:
		Variable: r2
		Type: javax.crypto.KeyGenerator
		Statement: r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(r1)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABMC4: void go(java.lang.String)>
		SHA-256: bd89107993143482ada2bd1366daa67d2d7ea79e056e4c660be9c965eefe5fb1
		Secure: false
	Object:
		Variable: r2
		Type: javax.crypto.KeyGenerator
		Statement: r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>($r6)
		Method: <org.cryptoapi.bench.brokencrypto.Crypto6: byte[] encrypt(java.lang.String,java.lang.String)>
		SHA-256: 32f6cb3fc75d3956e5458e94d94365dcd63620865b3a25e0ad2ca731f5defa78
		Secure: false
	Object:
		Variable: r5
		Type: javax.crypto.Cipher
		Statement: r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer89)
		Method: <org.cryptoapi.bench.predictablecryptographickey.PredictableCryptographicKeyCorrected: void main(java.lang.String[])>
		SHA-256: f5607ac86a4103347d0bd4c3312fd2d3f6eccba8496a9f837bf2657edf80cd96
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>(byte[])>($r3)
		Method: <org.cryptoapi.bench.predictableseeds.PredictableSeedsBBCase2: void main(java.lang.String[])>
		SHA-256: 9324d02a0e1ebd005f164ad62319266994b62570999cabeceea6bebecac66e02
		Secure: true
	Object:
		Variable: r3
		Type: javax.crypto.Cipher
		Statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer292)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoBBCase2: void go()>
		SHA-256: 1bc908f564f7d07654c6a6378973b38bf1fcc50d62c025e5287fb93731896bed
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.cryptoapi.bench.predictablecryptographickey.PredictableCryptographicKeyABPSCase1: void main(java.lang.String[])>
		SHA-256: 52555a6d5e9cb16378b2a2df4a64c866edc52bb50ba5f698fa433d4e94558e77
		Secure: true
	Object:
		Variable: r2
		Type: javax.crypto.KeyGenerator
		Statement: r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(r1)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase4: void go(java.lang.String)>
		SHA-256: 3489218b9fe3ba9cfa2e685e0c6c65554e4d9f59ad1f2e35dc24722a3355d093
		Secure: false
	Object:
		Variable: r2
		Type: javax.crypto.SecretKey
		Statement: r2 = virtualinvoke r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase5: void go(int)>
		SHA-256: bf855df45a41bfdc40cda3449fb2a03d9ca2471b854acf99f410b5da91d8d018
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.cryptoapi.bench.brokenhash.BrokenHashABPSCase4: void main(java.lang.String[])>
		SHA-256: f54748f8f112175274dc2e7ff5b4d6daa67921bffeca7fd3b0b8717a42d8d254
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.cryptoapi.bench.brokenhash.BrokenHashABICase5: void go(java.lang.String)>
		SHA-256: 574837f63ad0a4489c99f7e35dcb19865a388bee22176099dd69f2dbfce236b0
		Secure: true
	Object:
		Variable: r4
		Type: javax.crypto.Cipher
		Statement: r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r1)
		Method: <org.cryptoapi.bench.ecbcrypto.EcbInSymmCryptoABICase1: void go(java.lang.String)>
		SHA-256: c9d80f1f46c888f9b25311309c74358d3f60a9beab9fede15e93e95735fcb462
		Secure: false
	Object:
		Variable: r4
		Type: javax.crypto.SecretKey
		Statement: r4 = virtualinvoke r3.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase1: void go(java.lang.String,java.lang.String)>
		SHA-256: 742829c13bb26e9f2917be9bc69f6b9d5a961bbbbbded181ccc4c12c3fcd2e07
		Secure: false
	Object:
		Variable: r2
		Type: byte[]
		Statement: virtualinvoke r1.<java.security.SecureRandom: void nextBytes(byte[])>(r2)
		Method: <org.cryptoapi.bench.pbeiteration.LessThan1000IterationPBEABICase1: void go(int)>
		SHA-256: 1a81c025705cd8c210fda52dca97e804acd5bcf7f73fdb7d3743f471453fa47e
		Secure: true
	Object:
		Variable: r1
		Type: java.security.MessageDigest
		Statement: r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)
		Method: <org.cryptoapi.bench.brokenhash.BrokenHashABICase7: void go(java.lang.String)>
		SHA-256: a24755b85bd565744b9398fb39516fe6d875e7acd726fee49216385ede1901c0
		Secure: true
	Object:
		Variable: r2
		Type: javax.crypto.SecretKey
		Statement: r2 = virtualinvoke r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.cryptoapi.bench.ecbcrypto.EcbInSymmCryptoBBCase1: void go()>
		SHA-256: 240a6ee210536b4a789b9d00f5a6f076d166a93bc840fa2531f9ed4099bb59a9
		Secure: true
	Object:
		Variable: r2
		Type: javax.crypto.SecretKey
		Statement: r2 = virtualinvoke r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase6: void go()>
		SHA-256: baaafa67a1b59f1b4bf6f9419a2b89a6134d169ade8e128d5918ed2cd85301b
		Secure: true
	Object:
		Variable: r2
		Type: javax.crypto.KeyGenerator
		Statement: r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(r1)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase3: void go(java.lang.String)>
		SHA-256: 8e30f07816abfd972780a34e9fba653d3e82a13c9f36f76b5c8d2813b52a9dc7
		Secure: false
	Object:
		Variable: r3
		Type: javax.crypto.Cipher
		Statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer31)
		Method: <org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorBBCase1: void go()>
		SHA-256: 935dd287616907bbf019d74a513cc4dfc360d6e039d9979d03383267b0293228
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r4)
		Method: <org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorBBCase1: void go()>
		SHA-256: ec884ba9c09fedcb23d855214a417ae4d79f71f14642947b2cc7da0cdf6a5dc4
		Secure: false
	Object:
		Variable: r1
		Type: javax.crypto.KeyGenerator
		Statement: r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer264)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoBBCase4: void go()>
		SHA-256: dc9d5e8a28d8f7aac4609a376a8f000ffbb6b30474da2be1ef9456f39625439a
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>(byte[])>($r3)
		Method: <org.cryptoapi.bench.predictableseeds.PredictableSeedsABMC2: void go(byte)>
		SHA-256: 35c6015fcf7989feeccadddee1380015468d34c7673c7556a5353b61533c0296
		Secure: true
	Object:
		Variable: r2
		Type: javax.crypto.KeyGenerator
		Statement: r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer139)
		Method: <org.cryptoapi.bench.ecbcrypto.EcbInSymmCryptoABICase1: void go(java.lang.String)>
		SHA-256: 48674d977a72f9f52fa21d715abe39e7be8bf12c7ad39721ae5d1e5a2bf7b8b3
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r1)
		Method: <org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABICase1: void go(byte[])>
		SHA-256: d1a5932a726b32af5966ca9d054677850c292e5e4fec6ec3896b2cd382455b3d
		Secure: false
	Object:
		Variable: r4
		Type: javax.crypto.Cipher
		Statement: r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r1)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABMC4: void go(java.lang.String)>
		SHA-256: c1b3e569e93a62744f9fc0394abe9b06b2838abe5d5f5edca51213180e42890e
		Secure: false
	Object:
		Variable: r2
		Type: javax.crypto.SecretKey
		Statement: r2 = virtualinvoke r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase12: void method1(java.lang.String)>
		SHA-256: 6fe66c3ac1dc3673f7a344c0120a8d1d1d9488c3d69a1004f625a3d98c453b07
		Secure: false
	Object:
		Variable: r3
		Type: javax.crypto.Cipher
		Statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer243)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase4: void go(int)>
		SHA-256: 1eb3bf566d6850d78a3f22746f404eeb6543f7cce2e92c19f608328443351fc2
		Secure: false
	Object:
		Variable: r1
		Type: javax.crypto.KeyGenerator
		Statement: r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer290)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoBBCase2: void go()>
		SHA-256: 53a88e604e0eea80bf74b03bdd952740e0558c0f592697916490a43afb8fa69c
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r7, r3, s0, b1)
		Method: <org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordCorrected: void key()>
		SHA-256: 95e027092fe51368570e192820c5e71e38897a5366717ab0cd792297086803de
		Secure: false
	Object:
		Variable: r4
		Type: javax.crypto.Cipher
		Statement: r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r1)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase2: void go(java.lang.String)>
		SHA-256: a5d67583084dce74794fa3b631aeb26f19d69f42c86dcbe517ee5faeae7c8bef
		Secure: false
	Object:
		Variable: r2
		Type: java.security.KeyPair
		Statement: r2 = virtualinvoke r1.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <org.cryptoapi.bench.insecureasymmetriccrypto.InsecureAsymmetricCipherABMC1: void go(int)>
		SHA-256: 518924391f624e65104d19f4bfa2b0d0c9d0784ae33fa86c4dbbf5b1070ff9af
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: specialinvoke $r5.<java.security.SecureRandom: void <init>()>()
		Method: <org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordBBCase2: void key()>
		SHA-256: 11faa4f55d5e54bcf8a38ebd78e92fdfb2c34484c979eb80010eeeac743c043c
		Secure: true
	Object:
		Variable: r2
		Type: javax.crypto.KeyGenerator
		Statement: r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(r1)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase9: void go(java.lang.String)>
		SHA-256: c3d3adb15f175e7a91de1c3732a831cc5589f71685c32f0d076ec844c008668f
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.cryptoapi.bench.brokenhash.BrokenHashABICase6: void go(java.lang.String)>
		SHA-256: 97e8bf3ace970b5cf60516959ce1589bc3cba874531aa375f2a2f6f69c5662e7
		Secure: true
	Object:
		Variable: r1
		Type: byte[]
		Statement: virtualinvoke r2.<java.security.SecureRandom: void nextBytes(byte[])>(r1)
		Method: <org.cryptoapi.bench.predictablepbepassword.CryptoPredictablePBE: void method1(java.lang.String)>
		SHA-256: 640a40a7a36b7ae61e01d55ca618ca529cd702be796d8c9968fb0cc9164c7cdf
		Secure: true
	Object:
		Variable: r3
		Type: javax.crypto.Cipher
		Statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer304)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase1: void go(int)>
		SHA-256: 8e213f3b8f778af767d9c9157dbb283535c25df7ab0e2d333d9e8544f5a32319
		Secure: false
	Object:
		Variable: r3
		Type: javax.crypto.Cipher
		Statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer301)
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoBBCase5: void go()>
		SHA-256: 865b1656c11cdc6af014b0eea92341f0d0b597a0070399b308626fad3b8b62e7
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r0)
		Method: <org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABICase3: void method2(byte[])>
		SHA-256: cb51c56857b073cf10541471c7b42aa800e1d95c1e9f4bf62133e97325592ee6
		Secure: false
	Object:
		Variable: r1
		Type: javax.crypto.KeyGenerator
		Statement: r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer34)
		Method: <org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorCorrected: void go()>
		SHA-256: 6cddd3baaf4f032c50a80b5601c0166a56d323aa8f1af3c4678ba6bd3dab9530
		Secure: true
	Object:
		Variable: b1
		Type: byte
		Statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, r2, s0, b1)
		Method: <org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABMC1: void key(java.lang.String)>
		SHA-256: 44bf40596994c6e74796d8ceb937de632bb242cbce0743e55a844b551a3f1955
		Secure: false
	Object:
		Variable: r1
		Type: javax.crypto.KeyGenerator
		Statement: r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer136)
		Method: <org.cryptoapi.bench.ecbcrypto.EcbInSymmCryptoABICase3: void method1(java.lang.String)>
		SHA-256: 7fca452d71738c05d11a4e2c3d260056aa19453e3c9cec9cc130eb48900d0719
		Secure: true
	Object:
		Variable: $r11
		Type: byte[]
		Statement: $r12 = virtualinvoke r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r11)
		Method: <org.cryptoapi.bench.predictablecryptographickey.PredictableCryptographicKeyCorrected: void main(java.lang.String[])>
		SHA-256: 98615894e91439a8a3d6669e3f6e7583a20ed11800d550056b6a735aeb44a5dd
		Secure: false
	Object:
		Variable: r3
		Type: javax.crypto.SecretKey
		Statement: r3 = virtualinvoke r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.cryptoapi.bench.brokencrypto.BrokenCryptoABMC3: void go(java.lang.String)>
		SHA-256: 7c716e53fb7bf5a62f8a658df8ec6f7623b612d372c23784daf5647427938eb6
		Secure: false
	Object:
		Variable: r2
		Type: java.security.KeyPair
		Statement: r2 = virtualinvoke r1.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <org.cryptoapi.bench.insecureasymmetriccrypto.InsecureAsymmetricCipherABPSCase1: void go(int)>
		SHA-256: b839de4d1ee7ac914c775dbaebb9d6eb1d707f66a56dfa1fba51004a0c37cb53
		Secure: false

Findings in Java Class: org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABMC1

	 in Method: void go(byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #2a0d1c5ccb44bb5bcfd3e0ec375017a7b0f0f26961a0607b93fa2ab21637dc54)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2, r4, r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r1)


Findings in Java Class: org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABPSCase1

	 in Method: void go(int)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #d4b87887ca03467c9e22a01de5af0aef6dbd8fadd1b56dfabf01518bd670d8c8)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer3, r2, r5)


Findings in Java Class: org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABHCase2

	 in Method: void go()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r15.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r7)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #e0f943c176d1ee9f835552d39d8dca6deef82de979bb5d01a2f85119b16f5b05)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer15, r2, r8)


Findings in Java Class: org.cryptoapi.bench.staticinitializationvector.CryptoStaticIV1

	 in Method: void method1(byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #ee56c254df2d9bf8f3494213fae91c0482e319518112c0c6aab79d82ef3b52c2)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer18, r3, r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r7)


Findings in Java Class: org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABICase1

	 in Method: void go(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #aa46ec5f75073e36d59bb72b284a9a5c5b5e014f8b676af330d65a236609648)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer22, r4, r2)


Findings in Java Class: org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABHCase1

	 in Method: void go()
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #6476e54735fba03e387f5df364b2c54194e33e9f9c8b5573abec4968c8e68e06)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer26, r2, r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r4)


Findings in Java Class: org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABICase3

	 in Method: void method2(byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #59b1e6fd6a57a7006262c7f6b8b9d01a86f908daa0e4082c3cc7217412ae5a38)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer28, r3, r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r0)


Findings in Java Class: org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorBBCase1

	 in Method: void go()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r4)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #935dd287616907bbf019d74a513cc4dfc360d6e039d9979d03383267b0293228)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer32, r2, r5)


Findings in Java Class: org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorCorrected

	 in Method: void go()
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #d6a25766fdae9a55af2e0378dcbc02762abf542d9980bf0c0b42d398a8d07521)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer35, r2, r6)


Findings in Java Class: org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABICase2

	 in Method: void go()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #b4734918d5552830c039b7f5d86f555c00729629a559b4a5992830c03d542550)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer39, r3, r1)


Findings in Java Class: org.cryptoapi.bench.staticsalts.StaticSaltsABICase1

	 in Method: void key2(byte[],int)
		ConstraintError violating CrySL rule for javax.crypto.spec.PBEParameterSpec (on Object #9b5fedb206dbed783695687351f7ac0e266051fcfdb22d6d47d33b1c6bbaa1c)
			Second parameter (with value 1020)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r2.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>(r1, i0)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>(r1, i0)


Findings in Java Class: org.cryptoapi.bench.staticsalts.StaticSaltsABMC1

	 in Method: void key2(byte[],int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>(r1, i0)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEParameterSpec (on Object #63f8864b5402036b1218d2d45733e2c5dc738e26b955fcb7ed25e21e91d3f681)
			Second parameter (with value 1020)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r2.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>(r1, i0)


Findings in Java Class: org.cryptoapi.bench.staticsalts.StaticSaltsBBCase1

	 in Method: void key2()
		ConstraintError violating CrySL rule for javax.crypto.spec.PBEParameterSpec (on Object #d6ebf36f32c52adb1f25265ff92f587a817d433aaeaa0f2ce9afea18e845e906)
			Second parameter (with value 1020)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>(r1, varReplacer42)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>(r1, varReplacer42)


Findings in Java Class: org.cryptoapi.bench.staticsalts.StaticSaltsABICase3

	 in Method: void method2(byte[],int)
		ConstraintError violating CrySL rule for javax.crypto.spec.PBEParameterSpec (on Object #702c648f9c5a93a639a90dd31c079a98314716da7f31cde5a1029b296b0f3dce)
			Second parameter (with value 1020)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r1.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>(r0, i0)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r1.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>(r0, i0)


Findings in Java Class: org.cryptoapi.bench.staticsalts.StaticSaltsABICase2

	 in Method: void key2(int)
		ConstraintError violating CrySL rule for javax.crypto.spec.PBEParameterSpec (on Object #df87c2dd95d2d6ba3719672aff51ab8a6e2da33f8a097aa351267f2a5333aa02)
			Second parameter (with value 1020)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r1.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r2, i0)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r1.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r2, i0)


Findings in Java Class: org.cryptoapi.bench.staticsalts.CryptoStaticSalt1

	 in Method: void method1(byte[])
		ConstraintError violating CrySL rule for javax.crypto.spec.PBEParameterSpec (on Object #97930d945b552e30c5e2bfdc87b528a91bef98d7e52157029247bf5b6a5073c9)
			Second parameter (with value 1020)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r1.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>(r3, varReplacer43)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r1.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>(r3, varReplacer43)


Findings in Java Class: org.cryptoapi.bench.staticsalts.StaticSaltsABPSCase1

	 in Method: void key2(int)
		ConstraintError violating CrySL rule for javax.crypto.spec.PBEParameterSpec (on Object #567106005f4e20d634c27a8a007fc723324409a0574bd29b9b62a13d54293149)
			Second parameter (with value 1020)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r5.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>(r2, varReplacer44)


Findings in Java Class: org.cryptoapi.bench.staticsalts.StaticSaltsABHCase1

	 in Method: void key2()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r11.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>(r2, varReplacer48)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEParameterSpec (on Object #bc3fb9ed3ed2ba2d12145e3f57beb59c53475191a401814e37d33abb038614c9)
			Second parameter (with value 1020)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r11.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>(r2, varReplacer48)


Findings in Java Class: org.cryptoapi.bench.staticsalts.StaticSaltsCorrected

	 in Method: void key2()
		ConstraintError violating CrySL rule for javax.crypto.spec.PBEParameterSpec (on Object #87cb64b48b82ff4ded452a27fd8ed0eee9ab9cc48edaef45d5b972d4f161a688)
			Second parameter (with value 1020)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r4.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>(r2, varReplacer55)


Findings in Java Class: org.cryptoapi.bench.predictablecryptographickey.PredictableCryptographicKeyABSCase1

	 in Method: void <init>()
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #51384c72f0bac54a80f3f29c25ed17c1549cdc79ec5ce427651c67fd8ca9061d)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: specialinvoke $r2.<org.cryptoapi.bench.predictablecryptographickey.Crypto: void <init>(java.lang.String)>(r1)


Findings in Java Class: org.cryptoapi.bench.brokenhash.BrokenHashABPSCase3

	 in Method: void main(java.lang.String[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #30b4acb838a1e27354ff1c4498eb91ef8a4536c64f457fb47ee912db14a3c239)
			First parameter (with value "MD4") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer96)


Findings in Java Class: org.cryptoapi.bench.brokenhash.BrokenHashBBCase4

	 in Method: void main(java.lang.String[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #20bd9a7d11ad9d682839eed08469060cc562a863fdfd6acde421c489d6f9d81f)
			First parameter (with value "MD2") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer98)


Findings in Java Class: org.cryptoapi.bench.brokenhash.BrokenHashABMC1

	 in Method: void go(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #28684f6d1c8f62a41752f3c3cff0750627c565c7e295b55db249f68ce9dbdae)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r2)


Findings in Java Class: org.cryptoapi.bench.brokenhash.BrokenHashABMC4

	 in Method: void go(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #52ef79045d9bd51c63d54546be7a2fec9e8d7c45559bca6bfe132258d2555660)
			First parameter (with value "MD2") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r2)


Findings in Java Class: org.cryptoapi.bench.brokenhash.CryptoHash1

	 in Method: void encrypt(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #41813d5a7dcb1743ef01882d4b0710439e10fecd52f121da500f3e2b26956431)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)


Findings in Java Class: org.cryptoapi.bench.brokenhash.BrokenHashABICase11

	 in Method: void method1(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #19a28e63ce653bd515c65685b7b571924f12673afb8e4aa6e786d416d94d2470)
			First parameter (with value "MD4") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r1)


Findings in Java Class: org.cryptoapi.bench.brokenhash.BrokenHashABICase2

	 in Method: void go(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #9a201b557bcfdf2be22ff2ef73eb4224b305a858ea44a7b611e4da1b698c253b)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r1)


Findings in Java Class: org.cryptoapi.bench.brokenhash.BrokenHashABICase4

	 in Method: void go(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #333b02871b7ebd839efdadc83e43cf1354aa74e71fc499396bcabf7231b06da1)
			First parameter (with value "MD2") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r1)


Findings in Java Class: org.cryptoapi.bench.brokenhash.BrokenHashABPSCase1

	 in Method: void main(java.lang.String[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #bab03d4097155b22e8f5b08dc9e810199315407c67baff6dddffafea97997f5f)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer103)


Findings in Java Class: org.cryptoapi.bench.brokenhash.BrokenHashABMC3

	 in Method: void go(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #694890cf44285a2515ddd522d3393d6f6bf373626b9c9f208a46f670eea5b8a5)
			First parameter (with value "MD4") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r2)


Findings in Java Class: org.cryptoapi.bench.brokenhash.BrokenHashBBCase1

	 in Method: void main(java.lang.String[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #a8a082cce9713a969b02c8d06d0b14f2e7064149e0baf0bc3271696c191f00bd)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer107)


Findings in Java Class: org.cryptoapi.bench.brokenhash.BrokenHashABICase12

	 in Method: void method1(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #c582e65e282664bff6ef6af954e1609f7395a5f49b54ec17adc975c3a3c8242f)
			First parameter (with value "MD2") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r1)


Findings in Java Class: org.cryptoapi.bench.brokenhash.BrokenHashABPSCase2

	 in Method: void main(java.lang.String[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #527575899e4b12850081adf8e611849f2a6ccb3bfc1eb9ad046b13fecc2591e8)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer109)


Findings in Java Class: org.cryptoapi.bench.brokenhash.BrokenHashABICase1

	 in Method: void go(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #3df7a52b9ccdbc9cab1e6be7d2574e865431a048c19778b1361975761593a0e7)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r1)


Findings in Java Class: org.cryptoapi.bench.brokenhash.BrokenHashCorrected

	 in Method: void main(java.lang.String[])
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #4789a156db253c4441bee943268832433fdbdee68afa5baeea90954977e55b10)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer110)


Findings in Java Class: org.cryptoapi.bench.brokenhash.BrokenHashABPSCase4

	 in Method: void main(java.lang.String[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #7eee9e7f01f415728404043aa744ba8f937b4cddccd828f39709afb1568e634a)
			First parameter (with value "MD2") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer112)


Findings in Java Class: org.cryptoapi.bench.brokenhash.CryptoHash4

	 in Method: void encrypt(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #d57652cce652dbdd0f26cf285332d0220cc96049d1cb2a13c2b8ce7a07382dfd)
			First parameter (with value "MD2") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)


Findings in Java Class: org.cryptoapi.bench.brokenhash.BrokenHashABICase9

	 in Method: void method1(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #caba7bc86c27bc9daa07b28f5bddcc68664ee9722333b1fd4612fd5faf16e585)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r1)


Findings in Java Class: org.cryptoapi.bench.brokenhash.BrokenHashBBCase2

	 in Method: void main(java.lang.String[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #34852da81e4ff7fa107b78edd0df3183dc7a84f4d32e226f1dfc5281618906f1)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer116)


Findings in Java Class: org.cryptoapi.bench.brokenhash.CryptoHash3

	 in Method: void encrypt(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #de58d5f196a0c1987f71a62be8427c9ac8da25e6a10d50a636fd13dd993fbc43)
			First parameter (with value "MD4") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)


Findings in Java Class: org.cryptoapi.bench.brokenhash.BrokenHashABMC2

	 in Method: void go(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #dfa20d81a9eaebd9b18ffaf6b17b52f979abff10a2e564501874137605b9c212)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r2)


Findings in Java Class: org.cryptoapi.bench.brokenhash.BrokenHashABICase3

	 in Method: void go(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #1ed3d8e9a04ea480932a3e553d20871700141c8ae8a342175db2717451ff7a2a)
			First parameter (with value "MD4") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r1)


Findings in Java Class: org.cryptoapi.bench.brokenhash.BrokenHashBBCase3

	 in Method: void main(java.lang.String[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #1aa2b01131f60deddef07d8657aad2d0304db2a0e8d1829135fc5d88c962a0b8)
			First parameter (with value "MD4") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer120)


Findings in Java Class: org.cryptoapi.bench.brokenhash.BrokenHashABICase10

	 in Method: void method1(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #159f8d584b1c83dfe5bcbf4f24b9ff6c7fa2b544277e16c67e1cc778deba7307)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r1)


Findings in Java Class: org.cryptoapi.bench.brokenhash.CryptoHash2

	 in Method: void encrypt(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #90e50838fe4f86532a91fac203c247232799f422d7749b824bca72e949162037)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)


Findings in Java Class: org.cryptoapi.bench.ecbcrypto.EcbInSymmCryptoCorrected

	 in Method: void go()
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #2b402829e361b138424408ff10884a749a5a7111c3949becc257377a485c86a2)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer125, r2)


Findings in Java Class: org.cryptoapi.bench.ecbcrypto.CryptoECB1

	 in Method: void method1(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #93b7326c92ffbd8fb66c7c6fe6181f45304c766fa9c06f7ad64fc349c7c53c05)
			First parameter (with value "AES/ECB/PKCS5Padding") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r4)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #93b7326c92ffbd8fb66c7c6fe6181f45304c766fa9c06f7ad64fc349c7c53c05)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer127, r2)


Findings in Java Class: org.cryptoapi.bench.ecbcrypto.EcbInSymmCryptoABPSCase1

	 in Method: void go(int)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #6c8d1f2115f3d53cd9cae09506afcea5e972f100fdca61ffcda320f2cdbb4ae7)
			First parameter (with value "AES/ECB/PKCS5Padding") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer130)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #6c8d1f2115f3d53cd9cae09506afcea5e972f100fdca61ffcda320f2cdbb4ae7)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer129, r2)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #dec8d06860e34385abdf1e4257d45d3c07a13d56bfd1aa151f1c629d2a7a9e0)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer129, r2)


Findings in Java Class: org.cryptoapi.bench.ecbcrypto.EcbInSymmCryptoABMC1

	 in Method: void go(java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #db9e0cf32d4a6472fb5dbe079ef18c4c680d86f38814866a7e0f59cad751c140)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer134, r3)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #db9e0cf32d4a6472fb5dbe079ef18c4c680d86f38814866a7e0f59cad751c140)
			First parameter (with value "AES/ECB/PKCS5Padding") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r1)


Findings in Java Class: org.cryptoapi.bench.ecbcrypto.EcbInSymmCryptoABICase3

	 in Method: void method1(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #82f3907da64978a5fee5bf105d91dfad596516d0502c88c05e3ca2a96553f0e8)
			First parameter (with value "AES/ECB/PKCS5Padding") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r0)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #82f3907da64978a5fee5bf105d91dfad596516d0502c88c05e3ca2a96553f0e8)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer135, r2)


Findings in Java Class: org.cryptoapi.bench.ecbcrypto.EcbInSymmCryptoABICase2

	 in Method: void go()
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #51cfe795f2ddf3c0626768238bad1e9113f037c9237159456c09d35a5b84d861)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer138, r2)


Findings in Java Class: org.cryptoapi.bench.ecbcrypto.EcbInSymmCryptoABICase1

	 in Method: void go(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #c9d80f1f46c888f9b25311309c74358d3f60a9beab9fede15e93e95735fcb462)
			First parameter (with value "AES/ECB/PKCS5Padding") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #c9d80f1f46c888f9b25311309c74358d3f60a9beab9fede15e93e95735fcb462)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer140, r3)


Findings in Java Class: org.cryptoapi.bench.ecbcrypto.EcbInSymmCryptoBBCase1

	 in Method: void go()
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #b11347bb7fd9ccb152783665bf7a2b1cffd91931ccdc413ce12345ae2db3f6fb)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer141, r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #b11347bb7fd9ccb152783665bf7a2b1cffd91931ccdc413ce12345ae2db3f6fb)
			First parameter (with value "AES/ECB/PKCS5Padding") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer142)


Findings in Java Class: org.cryptoapi.bench.predictableseeds.PredictableSeedsABPSCase1

	 in Method: void main(java.lang.String[])
		TypestateError violating CrySL rule for java.security.SecureRandom (on Object #a04267e986d13b704d3124a9c98ca169c213b86095398ff590bc80c66635b742)
			Unexpected call to method setSeed on object of type java.security.SecureRandom. Expect a call to one of the following methods next,generateSeed,nextBytes
			at statement: virtualinvoke r1.<java.security.SecureRandom: void setSeed(byte[])>(r2)


Findings in Java Class: org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordBBCase2

	 in Method: void main(java.lang.String[])
		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #4de65d487850098a69f08f9baf36bb39d2e31bb1cf114d7c5f39f552f6bb8de1)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: virtualinvoke r1.<org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordBBCase2: void key()>()


Findings in Java Class: org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1

	 in Method: void go(java.lang.String)
		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #8a6790b3d5baccdcd925f0727cc62d3112e21072984cb70cc598c64a704624c3)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, r2, s0, b1)


	 in Method: void main(java.lang.String[])
		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #8a6790b3d5baccdcd925f0727cc62d3112e21072984cb70cc598c64a704624c3)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: virtualinvoke r1.<org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase1: void go(java.lang.String)>(r2)


Findings in Java Class: org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase3

	 in Method: void method2(java.lang.String)
		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #b3f4222a7301e5898d4e12950bbc1fb2e8107ced1a2e1d5e480e87921fdbb960)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, r2, s0, b1)


	 in Method: void main(java.lang.String[])
		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #b3f4222a7301e5898d4e12950bbc1fb2e8107ced1a2e1d5e480e87921fdbb960)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: virtualinvoke r1.<org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase3: void method1(java.lang.String)>(r2)


Findings in Java Class: org.cryptoapi.bench.predictablepbepassword.CryptoPredictablePBE

	 in Method: void method1(java.lang.String)
		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #749f1e6e3954eaa6dea817670a969d170e4c0cec69fcc0129871d32cdcf6e2d8)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r5, r1, s0, b1)


Findings in Java Class: org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABSCase1

	 in Method: void <init>()
		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #749f1e6e3954eaa6dea817670a969d170e4c0cec69fcc0129871d32cdcf6e2d8)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: virtualinvoke $r3.<org.cryptoapi.bench.predictablepbepassword.CryptoPredictablePBE: void method1(java.lang.String)>(varReplacer163)


Findings in Java Class: org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABMC1

	 in Method: void key(java.lang.String)
		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #a59dca38173f6ecc3111a544c67f05b6a36562f20de4be01a4220996a44fcb28)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, r2, s0, b1)


Findings in Java Class: org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABMCCase1

	 in Method: void main(java.lang.String[])
		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #a59dca38173f6ecc3111a544c67f05b6a36562f20de4be01a4220996a44fcb28)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: virtualinvoke r1.<org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABMC1: void key(java.lang.String)>(r2)


Findings in Java Class: org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABPSCase1

	 in Method: void key(int)
		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #e592a1969ca75b3ef2dc7183784c260b697ac529460caefae452d43575b0a900)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, r9, s1, b2)


	 in Method: void main(java.lang.String[])
		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #e592a1969ca75b3ef2dc7183784c260b697ac529460caefae452d43575b0a900)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: virtualinvoke r1.<org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABPSCase1: void key(int)>(b0)


Findings in Java Class: org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase2

	 in Method: void main(java.lang.String[])
		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #294c8cf57a7a9a2c9a1a6df2d23ed744fd15e9bef244f4ded275035ee238279b)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: specialinvoke r1.<org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABICase2: void go()>()


Findings in Java Class: org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABHCase1

	 in Method: void key(byte[])
		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #65633f9266a7ebb0a333b3419339b771a9306c796333cdad349342141800c42e)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r7, r2, s0, b1)


	 in Method: void main(java.lang.String[])
		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #65633f9266a7ebb0a333b3419339b771a9306c796333cdad349342141800c42e)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: virtualinvoke r1.<org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABHCase1: void key(byte[])>(r4)


Findings in Java Class: org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordBBCase1

	 in Method: void key()
		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #d2825b80dbbafcd7b84749aac1abeb98ea5b65cba771382cf882243fb8f7a3c7)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, r2, s0, b1)


	 in Method: void main(java.lang.String[])
		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #d2825b80dbbafcd7b84749aac1abeb98ea5b65cba771382cf882243fb8f7a3c7)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: virtualinvoke r1.<org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordBBCase1: void key()>()


Findings in Java Class: org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABHCase2

	 in Method: void key(java.lang.String)
		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #7320a9b4c8839493586616888ff19f6e7248db405da27f81fddae63211779cff)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, r2, s0, b1)


	 in Method: void main(java.lang.String[])
		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #7320a9b4c8839493586616888ff19f6e7248db405da27f81fddae63211779cff)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: virtualinvoke r1.<org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordABHCase2: void key(java.lang.String)>(r3)


Findings in Java Class: org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordCorrected

	 in Method: void key()
		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #95e027092fe51368570e192820c5e71e38897a5366717ab0cd792297086803de)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r6.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r7, r3, s0, b1)


	 in Method: void main(java.lang.String[])
		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #95e027092fe51368570e192820c5e71e38897a5366717ab0cd792297086803de)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: virtualinvoke r1.<org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordCorrected: void key()>()


Findings in Java Class: org.cryptoapi.bench.predictablekeystorepassword.PredictableKeyStorePasswordABICase3

	 in Method: void method2(java.lang.String)
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #a1b8d0a1103ff0a85fe4c5e315cf4d5b085ee5e6246b5db193cb771a730f2beb)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r3.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r6, $r7)


Findings in Java Class: org.cryptoapi.bench.predictablekeystorepassword.PredictableKeyStorePasswordABHCase2

	 in Method: void go()
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #67bb1cee4f77e3c10c06272c25388a161696016e89a865c1e7e55fcf3d9bd0e1)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r4.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r13, $r14)


Findings in Java Class: org.cryptoapi.bench.predictablekeystorepassword.PredictableKeyStorePasswordBBCase1

	 in Method: void go()
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #6fa14c1b2d77a6ed4df2030455d5ba3927a930f8cc6a99ab62025f358df190b2)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r2.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r6, $r7)


Findings in Java Class: org.cryptoapi.bench.predictablekeystorepassword.PredictableKeyStorePasswordABMC1

	 in Method: void go(java.lang.String)
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #7e327c9cd5bb42a417c650f8ead3817a43a13d7e2e2c3f4122bbea3d3b4d686a)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r3.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r6, $r7)


Findings in Java Class: org.cryptoapi.bench.predictablekeystorepassword.PredictableKeyStorePasswordABPSCase1

	 in Method: void go(int)
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #6db00541437c6a8e862928bcd68470af207c93ba2d97492a7503756ac4856cd)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r2.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r6, $r7)


Findings in Java Class: org.cryptoapi.bench.predictablekeystorepassword.PredictableKeyStorePasswordCorrected

	 in Method: void go()
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #332861808220e666674768fe8bf48f1369490191f3e545840b2f96f94ba0a86e)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r2.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r9, $r10)


Findings in Java Class: org.cryptoapi.bench.predictablekeystorepassword.PredictableKeyStorePasswordABICase1

	 in Method: void go(java.lang.String)
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #765554a8af8fb873ba5705fc66618bcd781a98f1f8b3b64d97ab0d54dc93c014)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r3.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r6, $r7)


Findings in Java Class: org.cryptoapi.bench.predictablekeystorepassword.PredictableKeyStorePasswordABICase2

	 in Method: void go()
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #683a3619f2d13a9ad642ce603e5e410bab89bad872c0a43a2b878c42d5d94b7c)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r2.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r5, $r6)


Findings in Java Class: org.cryptoapi.bench.predictablekeystorepassword.CryptoPredictableKeyStorePassword1

	 in Method: void method1(java.lang.String)
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #2cb48526ac1735e89af5fd5b9e6ef6ffdba47d11f58949e308873bd29e5f7f9e)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r2.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r5, $r6)


Findings in Java Class: org.cryptoapi.bench.predictablekeystorepassword.PredictableKeyStorePasswordABHCase1

	 in Method: void go()
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #d7f9ce9ad221c5492e9917679b92a81b6411857d1e40515322c4f07ca817ca7e)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r5.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r10, $r12)


Findings in Java Class: org.cryptoapi.bench.pbeiteration.LessThan1000IterationPBEABICase3

	 in Method: void method1(int,java.security.SecureRandom,javax.crypto.spec.PBEParameterSpec)
		ConstraintError violating CrySL rule for javax.crypto.spec.PBEParameterSpec (on Object #47a05889a4990a69142258b598334e49d1fe2e602f19ea60d1174f4be2f92ee)
			Second parameter (with value 20)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r2.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>(r1, i0)


Findings in Java Class: org.cryptoapi.bench.pbeiteration.LessThan1000IterationPBECorrected

	 in Method: void key2()
		ConstraintError violating CrySL rule for javax.crypto.spec.PBEParameterSpec (on Object #4a74847d68c0bb787c206c6a76707bfbee1d70bdc8085cf700ad02454f955314)
			Second parameter (with value 1020)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r4.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>(r2, varReplacer221)


Findings in Java Class: org.cryptoapi.bench.pbeiteration.LessThan1000IterationPBEBBCase1

	 in Method: void key2()
		ConstraintError violating CrySL rule for javax.crypto.spec.PBEParameterSpec (on Object #d7642e5a5117b024db547b69673f92ba9c34526df652f51da24f8f7e3dece1f8)
			Second parameter (with value 20)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r4.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>(r2, varReplacer224)


Findings in Java Class: org.cryptoapi.bench.pbeiteration.LessThan1000IterationPBEABPSCase1

	 in Method: void main(java.lang.String[])
		ConstraintError violating CrySL rule for javax.crypto.spec.PBEParameterSpec (on Object #81d9f3486167cc02059dc30d8bfbc5e081a4c712b1ec1c0d3e0ea9e3701aa7f4)
			Second parameter (with value 5)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r4.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>(r1, s0)


Findings in Java Class: org.cryptoapi.bench.pbeiteration.LessThan1000IterationPBEABICase1

	 in Method: void go(int)
		ConstraintError violating CrySL rule for javax.crypto.spec.PBEParameterSpec (on Object #d99d5eecbfc3910f2c9094cd1fce0731f1ea6cafb38f7cbecc46f3d5ff16025b)
			Second parameter (with value 20)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r4.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>(r2, i0)


Findings in Java Class: org.cryptoapi.bench.pbeiteration.CryptoPBEIteration1

	 in Method: void method1(int)
		ConstraintError violating CrySL rule for javax.crypto.spec.PBEParameterSpec (on Object #ce15797ad4211f62cba9ad5d30a964f9bf385ece7723e0f2e2e7666beaa59ca)
			Second parameter (with value 20)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r4.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>(r2, i1)


Findings in Java Class: org.cryptoapi.bench.pbeiteration.LessThan1000IterationPBEABMC1

	 in Method: void go(int)
		ConstraintError violating CrySL rule for javax.crypto.spec.PBEParameterSpec (on Object #cdbd86e3700e94d9100808af649c2726ea441996039189794686b8bd04cfa3ca)
			Second parameter (with value 20)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r4.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>(r2, i0)


Findings in Java Class: org.cryptoapi.bench.pbeiteration.LessThan1000IterationPBEABICase2

	 in Method: void key2()
		ConstraintError violating CrySL rule for javax.crypto.spec.PBEParameterSpec (on Object #788f9173d1d53a948da75aba0a9c08a9ea055e659aa6ae191d57a9c1f13cd47a)
			Second parameter (with value 0)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r4.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>(r2, $i0)


Findings in Java Class: org.cryptoapi.bench.brokencrypto.BrokenCryptoABMC2

	 in Method: void go(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #eac6c5bdafc6c83cb635909a35f13f05751e9a28c0f0dae1124ee329d4bad553)
			First parameter (with value "Blowfish") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r1)

		ConstraintError violating CrySL rule for javax.crypto.KeyGenerator (on Object #65a1e22783e76d26782a961ef944ea60603670e8f2fab0fabeeb7364ee5e59ef)
			First parameter (with value "Blowfish") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #eac6c5bdafc6c83cb635909a35f13f05751e9a28c0f0dae1124ee329d4bad553)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer230, r3)


Findings in Java Class: org.cryptoapi.bench.brokencrypto.BrokenCryptoABMC4

	 in Method: void go(java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #c1b3e569e93a62744f9fc0394abe9b06b2838abe5d5f5edca51213180e42890e)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer234, r3)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #c1b3e569e93a62744f9fc0394abe9b06b2838abe5d5f5edca51213180e42890e)
			First parameter (with value "RC2") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r1)

		ConstraintError violating CrySL rule for javax.crypto.KeyGenerator (on Object #bd89107993143482ada2bd1366daa67d2d7ea79e056e4c660be9c965eefe5fb1)
			First parameter (with value "RC2") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(r1)


Findings in Java Class: org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase4

	 in Method: void go(int)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #1eb3bf566d6850d78a3f22746f404eeb6543f7cce2e92c19f608328443351fc2)
			First parameter (with value "RC2") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer243)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #1eb3bf566d6850d78a3f22746f404eeb6543f7cce2e92c19f608328443351fc2)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer244, r2)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #a8a507525a8ff4709a8f3dd4fc1e5194bff83a62272576a62d318a27adcfa5a0)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer244, r2)


Findings in Java Class: org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase14

	 in Method: void method1(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.KeyGenerator (on Object #e151465ac7a8adf2d9c3f2afac7bd662c4518bfacb4f2a685f35f0f5952b4c8)
			First parameter (with value "RC2") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(r0)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #1a06fdae3c5e34581f287856170543a8f13bafb8fb4cc6880004bd801479294c)
			First parameter (with value "RC2") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r0)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #1a06fdae3c5e34581f287856170543a8f13bafb8fb4cc6880004bd801479294c)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer245, r2)


Findings in Java Class: org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase2

	 in Method: void go(int)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #4a1a328ad48d36de2971815a925981bb48ca892478ff8533bab7dec5def0f651)
			First parameter (with value "Blowfish") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer246)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #4a1a328ad48d36de2971815a925981bb48ca892478ff8533bab7dec5def0f651)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer248, r2)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #fad2c9be76b9c7f2de652c6c328cebe32b602f3b9fff882581ce66f63fee50c7)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer248, r2)


Findings in Java Class: org.cryptoapi.bench.brokencrypto.BrokenCryptoABMC5

	 in Method: void go(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.KeyGenerator (on Object #751c0ac49cd460e33d5426e0f2f6d4256669e6d4bef13b23a5b5fae41e921bc4)
			First parameter (with value "IDEA") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(r1)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #770cc402937a1c661c03c2dc91aa89e39c5e7b695bdc7c44885d227106ac56d0)
			First parameter (with value "IDEA") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #770cc402937a1c661c03c2dc91aa89e39c5e7b695bdc7c44885d227106ac56d0)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer250, r3)


Findings in Java Class: org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase9

	 in Method: void go(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.KeyGenerator (on Object #c3d3adb15f175e7a91de1c3732a831cc5589f71685c32f0d076ec844c008668f)
			First parameter (with value "IDEA") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(r1)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #b9a86b5876c5bb1ae88033c32970c7c395882a7ea3df45d31419eb3d5631c3b3)
			First parameter (with value "IDEA") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #b9a86b5876c5bb1ae88033c32970c7c395882a7ea3df45d31419eb3d5631c3b3)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer251, r3)


Findings in Java Class: org.cryptoapi.bench.brokencrypto.Crypto6

	 in Method: byte[] encrypt(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer258, r3)

		ConstraintError violating CrySL rule for javax.crypto.KeyGenerator (on Object #32f6cb3fc75d3956e5458e94d94365dcd63620865b3a25e0ad2ca731f5defa78)
			First parameter (with value "IDEA") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>($r6)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #577883757a8d66417e747be38445492fe1d015ee7bedff697eafd2634c1de98f)
			First parameter (with value "IDEA") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r7)


Findings in Java Class: org.cryptoapi.bench.brokencrypto.BrokenCryptoABMC1

	 in Method: void go(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.KeyGenerator (on Object #e3717262e8cc33b22a62f64b73f689a5795606a6aa619febe4da4c17db613bc5)
			First parameter (with value "DES") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: r3 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #22826956e7bb07cbb7fe276e02b67699c942ec0a2c5c0691424b2affbf7fb58b)
			First parameter (with value "DES/ECB/PKCS5Padding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #22826956e7bb07cbb7fe276e02b67699c942ec0a2c5c0691424b2affbf7fb58b)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer259, r4)


Findings in Java Class: org.cryptoapi.bench.brokencrypto.BrokenCryptoBBCase1

	 in Method: void go()
		ConstraintError violating CrySL rule for javax.crypto.KeyGenerator (on Object #4d226d1cd266d9b8081c1e6184ee48f1160548514d97c440b834106be09af88e)
			First parameter (with value "DES") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer261)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #59bfac41b1eccd1151976811c59da0a9b57f8d2ee24be501fd9c3c98bc0fc830)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer260, r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #59bfac41b1eccd1151976811c59da0a9b57f8d2ee24be501fd9c3c98bc0fc830)
			First parameter (with value "DES/ECB/PKCS5Padding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer262)


Findings in Java Class: org.cryptoapi.bench.brokencrypto.BrokenCryptoBBCase4

	 in Method: void go()
		ConstraintError violating CrySL rule for javax.crypto.KeyGenerator (on Object #dc9d5e8a28d8f7aac4609a376a8f000ffbb6b30474da2be1ef9456f39625439a)
			First parameter (with value "RC2") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer264)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #538f01103ba880b0088766fb38f9ca0d4cf4b7640daab5f4654e96ecae44528d)
			First parameter (with value "RC2") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer263)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #538f01103ba880b0088766fb38f9ca0d4cf4b7640daab5f4654e96ecae44528d)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer265, r2)


Findings in Java Class: org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase15

	 in Method: void method1(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #c60184b26682b6511441d8460452f8120c7c6fe7d13df0b0f684b82be2ebbc4b)
			First parameter (with value "IDEA") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r0)

		ConstraintError violating CrySL rule for javax.crypto.KeyGenerator (on Object #30cac82c09bfce9be60cab9cd17e735a8e4726e0751b135cc9e8df0bd130b2bc)
			First parameter (with value "IDEA") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(r0)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #c60184b26682b6511441d8460452f8120c7c6fe7d13df0b0f684b82be2ebbc4b)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer266, r2)


Findings in Java Class: org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase12

	 in Method: void method1(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.KeyGenerator (on Object #a70bf9b3aaac20af6da5b572dcef276ee373a0657081e1524afe2f061f6a605)
			First parameter (with value "Blowfish") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(r0)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #a19a90a9212d0467bc89fc0b3c1af96e5ea1b38147d20c18a312d0dd23fc55c)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer267, r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #a19a90a9212d0467bc89fc0b3c1af96e5ea1b38147d20c18a312d0dd23fc55c)
			First parameter (with value "Blowfish") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r0)


Findings in Java Class: org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase10

	 in Method: void go()
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #1f76c97b9668b9cf4f3ee4a8702ef748fbd8371e8f4fe5b936603d50724b7cfa)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer268, r2)


Findings in Java Class: org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase3

	 in Method: void go(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.KeyGenerator (on Object #8e30f07816abfd972780a34e9fba653d3e82a13c9f36f76b5c8d2813b52a9dc7)
			First parameter (with value "RC4") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(r1)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #374fdfd8c775168c8300042599570bdb73b552b73ddfa9b3342544897c00a2be)
			First parameter (with value "RC4") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #374fdfd8c775168c8300042599570bdb73b552b73ddfa9b3342544897c00a2be)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer269, r3)


Findings in Java Class: org.cryptoapi.bench.brokencrypto.Crypto5

	 in Method: byte[] encrypt(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.KeyGenerator (on Object #297b643091bc1b1b9fca8d2a69820f9883ddf294a440823e96179210f45c151f)
			First parameter (with value "RC2") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>($r6)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #69364014d084d474d2bfe5068a4228344bf5cd5a014eb1dd64a46c82334acfc4)
			First parameter (with value "RC2") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer270, r3)


Findings in Java Class: org.cryptoapi.bench.brokencrypto.BrokenCryptoABMC3

	 in Method: void go(java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #e3117455aec4a49150b5802ef37f1c629adab383eea1daa561c359776e97016e)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer271, r3)

		ConstraintError violating CrySL rule for javax.crypto.KeyGenerator (on Object #f1614cd3d7e11aadadf23e16a76ce34d523ffa8594ecfe6f93bc8a365023a7db)
			First parameter (with value "RC4") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(r1)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #e3117455aec4a49150b5802ef37f1c629adab383eea1daa561c359776e97016e)
			First parameter (with value "RC4") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r1)


Findings in Java Class: org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase5

	 in Method: void go(int)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #9580853d31f6fb8ef2836e0a1bd321f32b38876b4091dc15ba6b88bd16330ab6)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer274, r2)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #75c8c5b0b4f4e883974cc947e24db541bfe7f2ea9f3d880fb4bf381ea6d8844)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer274, r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #9580853d31f6fb8ef2836e0a1bd321f32b38876b4091dc15ba6b88bd16330ab6)
			First parameter (with value "IDEA") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer275)


Findings in Java Class: org.cryptoapi.bench.brokencrypto.Crypto4

	 in Method: byte[] encrypt(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #160c8faa35c01a055a0957c71a7cbe53267171d0e80f5bc12a3da34f49fbc85b)
			First parameter (with value "RC4") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r7)

		ConstraintError violating CrySL rule for javax.crypto.KeyGenerator (on Object #23ad87df13727298e24388a0191c05383eb7f2b00d1ec24f5b1dd8de7575d977)
			First parameter (with value "RC4") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>($r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer276, r3)


Findings in Java Class: org.cryptoapi.bench.brokencrypto.BrokenCryptoBBCase3

	 in Method: void go()
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #eb93a688e25ca6b679ec1820507263ef5db1749e322631c1d0be42c2e2461ff1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer279, r2)

		ConstraintError violating CrySL rule for javax.crypto.KeyGenerator (on Object #318ad35a93fae48f8b4c4233dac2376fc6c1ef3f8e947bbfb893fc58691040df)
			First parameter (with value "RC4") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer278)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #eb93a688e25ca6b679ec1820507263ef5db1749e322631c1d0be42c2e2461ff1)
			First parameter (with value "RC4") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer277)


Findings in Java Class: org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase3

	 in Method: void go(int)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #656e6a856768c69a4bcec7d78783d84b3f3cd9904e874c18605c5c2e15cb49e8)
			First parameter (with value "RC4") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer281)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #a14f52c8287a10d0b09deb474bc9b75aa41bd43ec6be8102726f8bc1dd6f03c6)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer283, r2)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #656e6a856768c69a4bcec7d78783d84b3f3cd9904e874c18605c5c2e15cb49e8)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer283, r2)


Findings in Java Class: org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase5

	 in Method: void go()
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #be2a9895d6c8cdbcb7a6494295c64eff618d41ac8117c81d54c7f8d764c50d5)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer284, r2)


Findings in Java Class: org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase8

	 in Method: void go()
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #6fda858dba412ea871f0a4aa693b979c73781d759e8c70686816d9b14f786d78)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer285, r2)


Findings in Java Class: org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase7

	 in Method: void go()
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #1549bd2c079f16d79981ac7e559c5e5b4ad759c145bc12692bd7c47cf9811907)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer286, r2)


Findings in Java Class: org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase11

	 in Method: void method1(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #625497398a38bc4095b05517d85aae39d55853ef5b69c8dc58f8034796450e0a)
			First parameter (with value "DES/ECB/PKCS5Padding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r0)

		ConstraintError violating CrySL rule for javax.crypto.KeyGenerator (on Object #8cc98e92fcb6c1185a8ab1bb0f51b8562bfba2624d2ff75eec67711fd212f6ba)
			First parameter (with value "DES") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #625497398a38bc4095b05517d85aae39d55853ef5b69c8dc58f8034796450e0a)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer287, r3)


Findings in Java Class: org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase6

	 in Method: void go()
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #ae0a92d07fc658725f702740ac9a86ecc2c2fb83f6fa65bcc278598d47c7a697)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer288, r2)


Findings in Java Class: org.cryptoapi.bench.brokencrypto.Crypto2

	 in Method: byte[] encrypt(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.KeyGenerator (on Object #5b0b7e43f2ba3ddd93f354b7730c7756243e814eb498cab62914a019a052ff00)
			First parameter (with value "DES/ECB/PKCS5Padding") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>($r6)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #189419399682cc63a5d5d7def9a888b119ebff67f8efe33a2bf208bf0a816671)
			First parameter (with value "DES/ECB/PKCS5Padding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer289, r3)


Findings in Java Class: org.cryptoapi.bench.brokencrypto.BrokenCryptoBBCase2

	 in Method: void go()
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #1bc908f564f7d07654c6a6378973b38bf1fcc50d62c025e5287fb93731896bed)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer291, r2)

		ConstraintError violating CrySL rule for javax.crypto.KeyGenerator (on Object #53a88e604e0eea80bf74b03bdd952740e0558c0f592697916490a43afb8fa69c)
			First parameter (with value "Blowfish") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer290)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #1bc908f564f7d07654c6a6378973b38bf1fcc50d62c025e5287fb93731896bed)
			First parameter (with value "Blowfish") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer292)


Findings in Java Class: org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase2

	 in Method: void go(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #a5d67583084dce74794fa3b631aeb26f19d69f42c86dcbe517ee5faeae7c8bef)
			First parameter (with value "Blowfish") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r1)

		ConstraintError violating CrySL rule for javax.crypto.KeyGenerator (on Object #1989b357dd164067bd19fac966838d7d133299e7239804e0ded600ed6d24e4f3)
			First parameter (with value "Blowfish") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #a5d67583084dce74794fa3b631aeb26f19d69f42c86dcbe517ee5faeae7c8bef)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer293, r3)


Findings in Java Class: org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase13

	 in Method: void method1(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.KeyGenerator (on Object #e857a5609d1d3f2a986974179aafdba353cc6e373b2b18a3596912947224e6e8)
			First parameter (with value "RC4") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(r0)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #165e5e74c3a780737221b2e5efad079f03d56e4586891fe960582ef8f8493c9e)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer294, r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #165e5e74c3a780737221b2e5efad079f03d56e4586891fe960582ef8f8493c9e)
			First parameter (with value "RC4") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r0)


Findings in Java Class: org.cryptoapi.bench.brokencrypto.BrokenCryptoCorrected

	 in Method: void go()
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #2384a6096a7c872e11dda5eb3745bca0c3817b8abf612ea5055c567f1604dba4)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer297, r2)


Findings in Java Class: org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase1

	 in Method: void go(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #330ecd50e2614391a443b11a27dbcf63af24512bf9be60e4f1a4801ebaba2a1f)
			First parameter (with value "DES/ECB/PKCS5Padding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #330ecd50e2614391a443b11a27dbcf63af24512bf9be60e4f1a4801ebaba2a1f)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer298, r4)

		ConstraintError violating CrySL rule for javax.crypto.KeyGenerator (on Object #ad407472dc08503be26a36ecdc2b0a1913b6ee6bd08e55e5959f05c3650c7db0)
			First parameter (with value "DES") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: r3 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(r2)


Findings in Java Class: org.cryptoapi.bench.brokencrypto.BrokenCryptoBBCase5

	 in Method: void go()
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #865b1656c11cdc6af014b0eea92341f0d0b597a0070399b308626fad3b8b62e7)
			First parameter (with value "IDEA") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer301)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #865b1656c11cdc6af014b0eea92341f0d0b597a0070399b308626fad3b8b62e7)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer299, r2)

		ConstraintError violating CrySL rule for javax.crypto.KeyGenerator (on Object #50be00869b5156b65f2927712e0ad56f3a2effa56ef7d85ba4eb69805fb3f64e)
			First parameter (with value "IDEA") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer300)


Findings in Java Class: org.cryptoapi.bench.brokencrypto.Crypto3

	 in Method: byte[] encrypt(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #5abc24a5dbf0d490d88af14b187b2398492270b81b33719462f3bb5a1fa65352)
			First parameter (with value "Blowfish") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer302, r3)

		ConstraintError violating CrySL rule for javax.crypto.KeyGenerator (on Object #26ccc3e65886ceb1cb94c164ae7eb27a02232b74411ba7ff13cd93408ca3af1)
			First parameter (with value "Blowfish") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>($r6)


Findings in Java Class: org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase1

	 in Method: void go(int)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #8e213f3b8f778af767d9c9157dbb283535c25df7ab0e2d333d9e8544f5a32319)
			First parameter (with value "DES/ECB/PKCS5Padding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer304)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #8e213f3b8f778af767d9c9157dbb283535c25df7ab0e2d333d9e8544f5a32319)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer305, r2)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #94e68497cd73534d6fa5bc96f769376ef8106211850011efe96a9d1e525326aa)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer305, r2)


Findings in Java Class: org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase4

	 in Method: void go(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.KeyGenerator (on Object #3489218b9fe3ba9cfa2e685e0c6c65554e4d9f59ad1f2e35dc24722a3355d093)
			First parameter (with value "RC2") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(r1)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #c5e3aa69ae4cd3f16d4796c6fee0a1f8f0a079bad6fe591508aa288f5a308c37)
			First parameter (with value "RC2") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #c5e3aa69ae4cd3f16d4796c6fee0a1f8f0a079bad6fe591508aa288f5a308c37)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer307, r3)


Findings in Java Class: org.cryptoapi.bench.insecureasymmetriccrypto.InsecureAsymmetricCipherBBCase1

	 in Method: void go()
		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #107a0726bc07d44ad3c9ecdcca00b9606601d5bb9883bfcf3f89dc735359654d)
			First parameter (with value 1024) should be any of {4096, 3072, 2048}
			at statement: virtualinvoke r1.<java.security.KeyPairGenerator: void initialize(int)>(s0)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f35250c75f58f30638612bcbcaf4ee658be28d74b9ca7bf0fe17edc2f25401f7)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: specialinvoke $r10.<javax.crypto.SealedObject: void <init>(java.io.Serializable,javax.crypto.Cipher)>(r4, r3)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #4b0ee53c0eca96e1eab3bee47bb27d7f86a62c5d7aa742b4de2ec4054f8a7c54)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: $r12 = virtualinvoke r5.<javax.crypto.SealedObject: java.lang.Object getObject(javax.crypto.Cipher)>(r6)


Findings in Java Class: org.cryptoapi.bench.insecureasymmetriccrypto.InsecureAsymmetricCipherABMC1

	 in Method: void go(int)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #ab76c98e9f37ee7f8a434f118ef4c77733325d7c3dc3efc6a93148ccb97c9477)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: specialinvoke $r10.<javax.crypto.SealedObject: void <init>(java.io.Serializable,javax.crypto.Cipher)>(r5, r3)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #6f1cd6196e5945f1001af960a8d23bc1b77bd2438842a44b28bd3db0571df9ce)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: $r12 = virtualinvoke r6.<javax.crypto.SealedObject: java.lang.Object getObject(javax.crypto.Cipher)>(r4)

		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #1b5cba37db8a1e7cc6248e6a72903aaa076ba19033646bb6cb1181acfcb1bfe1)
			First parameter (with value 1024) should be any of {4096, 3072, 2048}
			at statement: virtualinvoke r1.<java.security.KeyPairGenerator: void initialize(int)>(i0)


Findings in Java Class: org.cryptoapi.bench.insecureasymmetriccrypto.InsecureAsymmetricCipherABICase1

	 in Method: void go(int)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #41c8a6bd75565d0b5cf732ae1292feb1850dc36dbc4e271ed8f98131ff583c90)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: specialinvoke $r10.<javax.crypto.SealedObject: void <init>(java.io.Serializable,javax.crypto.Cipher)>(r4, r3)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f8a044bd4a9e7625923a2f8328f8976a267f0d77c9b71e9cfb9c84efe633fa30)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: $r12 = virtualinvoke r5.<javax.crypto.SealedObject: java.lang.Object getObject(javax.crypto.Cipher)>(r6)

		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #c22eb098d6ba99196bfb6130bda6e44df4dd138a0962df362a878507bd35f921)
			First parameter (with value 1024) should be any of {4096, 3072, 2048}
			at statement: virtualinvoke r1.<java.security.KeyPairGenerator: void initialize(int)>(i0)


Findings in Java Class: org.cryptoapi.bench.insecureasymmetriccrypto.InsecureAsymmetricCipherABICase2

	 in Method: void go(java.security.KeyPairGenerator,java.security.KeyPair)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #73b382c310693175a15e0240ca4187435f52ef7949cbcf15a9529c9930ccdbf8)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: specialinvoke $r10.<javax.crypto.SealedObject: void <init>(java.io.Serializable,javax.crypto.Cipher)>(r4, r3)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #a8091fa48d07b269ca91ae44eb7ec56d6822748eb08f13d1835e522db7f2dc2e)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: $r12 = virtualinvoke r5.<javax.crypto.SealedObject: java.lang.Object getObject(javax.crypto.Cipher)>(r6)


	 in Method: void main(java.lang.String[])
		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #36ccedac60725a8866a1e984c037c6b1db9d80aebc515ddd6b1b0ca994da4c2)
			First parameter (with value 1024) should be any of {4096, 3072, 2048}
			at statement: virtualinvoke r2.<java.security.KeyPairGenerator: void initialize(int)>($i0)


Findings in Java Class: org.cryptoapi.bench.insecureasymmetriccrypto.InsecureAsymmetricCipherABICase3

	 in Method: void method1(int)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #c511f80cb40997a7e1dba89326155603d13544d6569ef30e5fbad8672008e058)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: $r11 = virtualinvoke r4.<javax.crypto.SealedObject: java.lang.Object getObject(javax.crypto.Cipher)>(r5)

		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #bb96127c56ef20a8bdefdc578f21c9b22e36536d939f4a161772494e2ea7acae)
			First parameter (with value 1024) should be any of {4096, 3072, 2048}
			at statement: virtualinvoke r0.<java.security.KeyPairGenerator: void initialize(int)>(i0)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #b852f34aa16834ab6450e3d655b626f7a365e2637c5d7e0c527079cc6dc3a9ef)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: specialinvoke $r9.<javax.crypto.SealedObject: void <init>(java.io.Serializable,javax.crypto.Cipher)>(r3, r2)


Findings in Java Class: org.cryptoapi.bench.insecureasymmetriccrypto.InsecureAsymmetricCipherABPSCase1

	 in Method: void go(int)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #dee133d2a287db1112bd09eeea1bd28824fc26f024badfdfc10c9128ddb2852b)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: specialinvoke $r8.<javax.crypto.SealedObject: void <init>(java.io.Serializable,javax.crypto.Cipher)>(r4, r3)

		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #2c8b1e8212ca5065f82de03cda4bbd97f56e343426ff710a0a63d44c18fe0250)
			First parameter (with value 1024) should be any of {4096, 3072, 2048}
			at statement: virtualinvoke r1.<java.security.KeyPairGenerator: void initialize(int)>(s1)


Findings in Java Class: org.cryptoapi.bench.predictablecryptographickey.PredictableCryptographicKeyABMC1

	 in Method: void go(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r5, varReplacer65)


Findings in Java Class: org.cryptoapi.bench.predictablecryptographickey.Crypto

	 in Method: byte[] method1(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r11, $r5)


Findings in Java Class: org.cryptoapi.bench.predictablecryptographickey.PredictableCryptographicKeyABICase1

	 in Method: void go(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r4, varReplacer62)


Findings in Java Class: org.cryptoapi.bench.predictablecryptographickey.PredictableCryptographicKeyABICase2

	 in Method: void go()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r5, varReplacer74)


Findings in Java Class: org.cryptoapi.bench.predictablecryptographickey.PredictableCryptographicKeyABHCase1

	 in Method: void main(java.lang.String[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r8, varReplacer72)


Findings in Java Class: org.cryptoapi.bench.predictablecryptographickey.PredictableCryptographicKeyCorrected

	 in Method: void main(java.lang.String[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r15, varReplacer92)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer93, r4)


Findings in Java Class: org.cryptoapi.bench.predictablecryptographickey.PredictableCryptographicKeyBBCase1

	 in Method: void main(java.lang.String[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r5, varReplacer67)


Findings in Java Class: org.cryptoapi.bench.predictablecryptographickey.PredictableCryptographicKeyABHCase2

	 in Method: void main(java.lang.String[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r12, varReplacer87)


Findings in Java Class: org.cryptoapi.bench.predictablecryptographickey.PredictableCryptographicKeyABICase3

	 in Method: void method2(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r4, varReplacer77)


Findings in Java Class: org.cryptoapi.bench.predictablecryptographickey.PredictableCryptographicKeyABPSCase1

	 in Method: void main(java.lang.String[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r8, varReplacer63)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 424

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 108
	TypestateError: 1
	NeverTypeOfError: 19
	RequiredPredicateError: 31
	IncompleteOperationError: 79
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 3 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 4.637 s
