<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>SpotBugs Report</title>
<style type="text/css">
		.tablerow0 {
			background: #EEEEEE;
		}

		.tablerow1 {
			background: white;
		}

		.detailrow0 {
			background: #EEEEEE;
		}

		.detailrow1 {
			background: white;
		}

		.tableheader {
			background: #b9b9fe;
			font-size: larger;
		}

		.tablerow0:hover, .tablerow1:hover {
			background: #aaffaa;
		}

		.priority-1 {
		    color: red;
		    font-weight: bold;
		}
		.priority-2 {
		    color: orange;
		    font-weight: bold;
		}
		.priority-3 {
		    color: green;
		    font-weight: bold;
		}
		.priority-4 {
		    color: blue;
		    font-weight: bold;
		}
		</style>
<script type="text/javascript">
			function toggleRow(elid) {
				if (document.getElementById) {
					element = document.getElementById(elid);
					if (element) {
						if (element.style.display == 'none') {
							element.style.display = 'block';
							//window.status = 'Toggle on!';
						} else {
							element.style.display = 'none';
							//window.status = 'Toggle off!';
						}
					}
				}
			}
		</script>
</head>
<body>
<h1>
<a href="https://spotbugs.github.io/">SpotBugs</a> Report</h1>
<h2>Project Information</h2>
<p>Project: 
		</p>
<p>SpotBugs version: 3.1.12</p>
<p>Code analyzed:</p>
<ul>
<li>/home/x/CryptoAPIDetect/dataset/cryptoapi-bench/build/libs/rigorityj-samples-1.0-SNAPSHOT.jar</li>
</ul>
<p>
<br/>
<br/>
</p>
<h2>Metrics</h2>
<p>2979 lines of code analyzed,
	in 215 classes, 
	in 16 packages.</p>
<table width="500" cellpadding="5" cellspacing="2">
<tr class="tableheader">
<th align="left">Metric</th>
<th align="right">Total</th>
<th align="right">Density*</th>
</tr>
<tr class="tablerow0">
<td>High Priority Warnings</td>
<td align="right">65</td>
<td align="right">21.82</td>
</tr>
<tr class="tablerow1">
<td>Medium Priority Warnings</td>
<td align="right">46</td>
<td align="right">15.44</td>
</tr>
<tr class="$totalClass">
<td>
<b>Total Warnings</b>
</td>
<td align="right">
<b>111</b>
</td>
<td align="right">
<b>37.26</b>
</td>
</tr>
</table>
<p>
<i>(* Defects per Thousand lines of non-commenting source statements)</i>
</p>
<p>
<br/>
<br/>
</p>
<h2>Contents</h2>
<ul>
<li>
<a href="#Warnings_SECURITY">Security Warnings</a>
</li>
<li>
<a href="#Details">Details</a>
</li>
</ul>
<h1>Summary</h1>
<table width="500" cellpadding="5" cellspacing="2">
<tr class="tableheader">
<th align="left">Warning Type</th>
<th align="right">Number</th>
</tr>
<tr class="tablerow0">
<td>
<a href="#Warnings_SECURITY">Security Warnings</a>
</td>
<td align="right">111</td>
</tr>
<tr class="tablerow1">
<td>
<b>Total</b>
</td>
<td align="right">
<b>111</b>
</td>
</tr>
</table>
<h1>Warnings</h1>
<p>Click on a warning row to see full context information.</p>
<h2>
<a name="Warnings_SECURITY">Security Warnings</a>
</h2>
<table class="warningtable" width="100%" cellspacing="0">
<tr class="tableheader">
<th align="left">Code</th>
<th align="left">Warning</th>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65779');">
<td>
<span class="priority-1">CIPINT</span>
</td>
<td>The cipher does not provide data integrity</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65779" style="display: none;">
<a href="#CIPHER_INTEGRITY">Bug type CIPHER_INTEGRITY (click for details)</a>
<br/>In class org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase1<br/>In method org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase1.go(int)<br/>At BrokenCryptoABPSCase1.java:[line 14]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65833');">
<td>
<span class="priority-1">CIPINT</span>
</td>
<td>The cipher does not provide data integrity</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65833" style="display: none;">
<a href="#CIPHER_INTEGRITY">Bug type CIPHER_INTEGRITY (click for details)</a>
<br/>In class org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase1<br/>In method org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase1.go(int)<br/>At BrokenCryptoABPSCase1.java:[line 16]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66059');">
<td>
<span class="priority-1">CIPINT</span>
</td>
<td>The cipher does not provide data integrity</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66059" style="display: none;">
<a href="#CIPHER_INTEGRITY">Bug type CIPHER_INTEGRITY (click for details)</a>
<br/>In class org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase2<br/>In method org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase2.go(int)<br/>At BrokenCryptoABPSCase2.java:[line 13]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66113');">
<td>
<span class="priority-1">CIPINT</span>
</td>
<td>The cipher does not provide data integrity</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66113" style="display: none;">
<a href="#CIPHER_INTEGRITY">Bug type CIPHER_INTEGRITY (click for details)</a>
<br/>In class org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase2<br/>In method org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase2.go(int)<br/>At BrokenCryptoABPSCase2.java:[line 15]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66221');">
<td>
<span class="priority-1">CIPINT</span>
</td>
<td>The cipher does not provide data integrity</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66221" style="display: none;">
<a href="#CIPHER_INTEGRITY">Bug type CIPHER_INTEGRITY (click for details)</a>
<br/>In class org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase3<br/>In method org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase3.go(int)<br/>At BrokenCryptoABPSCase3.java:[line 14]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66275');">
<td>
<span class="priority-1">CIPINT</span>
</td>
<td>The cipher does not provide data integrity</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66275" style="display: none;">
<a href="#CIPHER_INTEGRITY">Bug type CIPHER_INTEGRITY (click for details)</a>
<br/>In class org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase3<br/>In method org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase3.go(int)<br/>At BrokenCryptoABPSCase3.java:[line 16]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66383');">
<td>
<span class="priority-1">CIPINT</span>
</td>
<td>The cipher does not provide data integrity</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66383" style="display: none;">
<a href="#CIPHER_INTEGRITY">Bug type CIPHER_INTEGRITY (click for details)</a>
<br/>In class org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase4<br/>In method org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase4.go(int)<br/>At BrokenCryptoABPSCase4.java:[line 14]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66437');">
<td>
<span class="priority-1">CIPINT</span>
</td>
<td>The cipher does not provide data integrity</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66437" style="display: none;">
<a href="#CIPHER_INTEGRITY">Bug type CIPHER_INTEGRITY (click for details)</a>
<br/>In class org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase4<br/>In method org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase4.go(int)<br/>At BrokenCryptoABPSCase4.java:[line 16]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66545');">
<td>
<span class="priority-1">CIPINT</span>
</td>
<td>The cipher does not provide data integrity</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66545" style="display: none;">
<a href="#CIPHER_INTEGRITY">Bug type CIPHER_INTEGRITY (click for details)</a>
<br/>In class org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase5<br/>In method org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase5.go(int)<br/>At BrokenCryptoABPSCase5.java:[line 13]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66599');">
<td>
<span class="priority-1">CIPINT</span>
</td>
<td>The cipher does not provide data integrity</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66599" style="display: none;">
<a href="#CIPHER_INTEGRITY">Bug type CIPHER_INTEGRITY (click for details)</a>
<br/>In class org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase5<br/>In method org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase5.go(int)<br/>At BrokenCryptoABPSCase5.java:[line 15]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66707');">
<td>
<span class="priority-1">CIPINT</span>
</td>
<td>The cipher does not provide data integrity</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66707" style="display: none;">
<a href="#CIPHER_INTEGRITY">Bug type CIPHER_INTEGRITY (click for details)</a>
<br/>In class org.cryptoapi.bench.brokencrypto.BrokenCryptoBBCase1<br/>In method org.cryptoapi.bench.brokencrypto.BrokenCryptoBBCase1.go()<br/>At BrokenCryptoBBCase1.java:[line 15]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66943');">
<td>
<span class="priority-1">CIPINT</span>
</td>
<td>The cipher does not provide data integrity</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66943" style="display: none;">
<a href="#CIPHER_INTEGRITY">Bug type CIPHER_INTEGRITY (click for details)</a>
<br/>In class org.cryptoapi.bench.brokencrypto.BrokenCryptoBBCase2<br/>In method org.cryptoapi.bench.brokencrypto.BrokenCryptoBBCase2.go()<br/>At BrokenCryptoBBCase2.java:[line 14]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66997');">
<td>
<span class="priority-1">CIPINT</span>
</td>
<td>The cipher does not provide data integrity</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66997" style="display: none;">
<a href="#CIPHER_INTEGRITY">Bug type CIPHER_INTEGRITY (click for details)</a>
<br/>In class org.cryptoapi.bench.brokencrypto.BrokenCryptoBBCase3<br/>In method org.cryptoapi.bench.brokencrypto.BrokenCryptoBBCase3.go()<br/>At BrokenCryptoBBCase3.java:[line 14]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67051');">
<td>
<span class="priority-1">CIPINT</span>
</td>
<td>The cipher does not provide data integrity</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67051" style="display: none;">
<a href="#CIPHER_INTEGRITY">Bug type CIPHER_INTEGRITY (click for details)</a>
<br/>In class org.cryptoapi.bench.brokencrypto.BrokenCryptoBBCase4<br/>In method org.cryptoapi.bench.brokencrypto.BrokenCryptoBBCase4.go()<br/>At BrokenCryptoBBCase4.java:[line 14]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67105');">
<td>
<span class="priority-1">CIPINT</span>
</td>
<td>The cipher does not provide data integrity</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67105" style="display: none;">
<a href="#CIPHER_INTEGRITY">Bug type CIPHER_INTEGRITY (click for details)</a>
<br/>In class org.cryptoapi.bench.brokencrypto.BrokenCryptoBBCase5<br/>In method org.cryptoapi.bench.brokencrypto.BrokenCryptoBBCase5.go()<br/>At BrokenCryptoBBCase5.java:[line 14]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67159');">
<td>
<span class="priority-1">CIPINT</span>
</td>
<td>The cipher does not provide data integrity</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67159" style="display: none;">
<a href="#CIPHER_INTEGRITY">Bug type CIPHER_INTEGRITY (click for details)</a>
<br/>In class org.cryptoapi.bench.brokencrypto.BrokenCryptoCorrected<br/>In method org.cryptoapi.bench.brokencrypto.BrokenCryptoCorrected.go()<br/>At BrokenCryptoCorrected.java:[line 14]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68437');">
<td>
<span class="priority-1">CIPINT</span>
</td>
<td>The cipher does not provide data integrity</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68437" style="display: none;">
<a href="#CIPHER_INTEGRITY">Bug type CIPHER_INTEGRITY (click for details)</a>
<br/>In class org.cryptoapi.bench.ecbcrypto.EcbInSymmCryptoABPSCase1<br/>In method org.cryptoapi.bench.ecbcrypto.EcbInSymmCryptoABPSCase1.go(int)<br/>At EcbInSymmCryptoABPSCase1.java:[line 13]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68491');">
<td>
<span class="priority-1">CIPINT</span>
</td>
<td>The cipher does not provide data integrity</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68491" style="display: none;">
<a href="#CIPHER_INTEGRITY">Bug type CIPHER_INTEGRITY (click for details)</a>
<br/>In class org.cryptoapi.bench.ecbcrypto.EcbInSymmCryptoABPSCase1<br/>In method org.cryptoapi.bench.ecbcrypto.EcbInSymmCryptoABPSCase1.go(int)<br/>At EcbInSymmCryptoABPSCase1.java:[line 15]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68653');">
<td>
<span class="priority-1">CIPINT</span>
</td>
<td>The cipher does not provide data integrity</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68653" style="display: none;">
<a href="#CIPHER_INTEGRITY">Bug type CIPHER_INTEGRITY (click for details)</a>
<br/>In class org.cryptoapi.bench.ecbcrypto.EcbInSymmCryptoBBCase1<br/>In method org.cryptoapi.bench.ecbcrypto.EcbInSymmCryptoBBCase1.go()<br/>At EcbInSymmCryptoBBCase1.java:[line 14]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68761');">
<td>
<span class="priority-1">CIPINT</span>
</td>
<td>The cipher does not provide data integrity</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68761" style="display: none;">
<a href="#CIPHER_INTEGRITY">Bug type CIPHER_INTEGRITY (click for details)</a>
<br/>In class org.cryptoapi.bench.ecbcrypto.EcbInSymmCryptoCorrected<br/>In method org.cryptoapi.bench.ecbcrypto.EcbInSymmCryptoCorrected.go()<br/>At EcbInSymmCryptoCorrected.java:[line 14]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68869');">
<td>
<span class="priority-1">CIPINT</span>
</td>
<td>The cipher does not provide data integrity</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68869" style="display: none;">
<a href="#CIPHER_INTEGRITY">Bug type CIPHER_INTEGRITY (click for details)</a>
<br/>In class org.cryptoapi.bench.predictablecryptographickey.Crypto<br/>In method new org.cryptoapi.bench.predictablecryptographickey.Crypto(String)<br/>At PredictableCryptographicKeyABSCase1.java:[line 40]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69021');">
<td>
<span class="priority-1">CIPINT</span>
</td>
<td>The cipher does not provide data integrity</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69021" style="display: none;">
<a href="#CIPHER_INTEGRITY">Bug type CIPHER_INTEGRITY (click for details)</a>
<br/>In class org.cryptoapi.bench.predictablecryptographickey.PredictableCryptographicKeyCorrected<br/>In method org.cryptoapi.bench.predictablecryptographickey.PredictableCryptographicKeyCorrected.main(String[])<br/>At PredictableCryptographicKeyCorrected.java:[line 22]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70256');">
<td>
<span class="priority-1">CIPINT</span>
</td>
<td>The cipher does not provide data integrity</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70256" style="display: none;">
<a href="#CIPHER_INTEGRITY">Bug type CIPHER_INTEGRITY (click for details)</a>
<br/>In class org.cryptoapi.bench.staticinitializationvector.CryptoStaticIV1<br/>In method org.cryptoapi.bench.staticinitializationvector.CryptoStaticIV1.method1(byte[])<br/>At StaticInitializationVectorABSCase1.java:[line 35]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70418');">
<td>
<span class="priority-1">CIPINT</span>
</td>
<td>The cipher does not provide data integrity</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70418" style="display: none;">
<a href="#CIPHER_INTEGRITY">Bug type CIPHER_INTEGRITY (click for details)</a>
<br/>In class org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABHCase1<br/>In method org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABHCase1.go()<br/>At StaticInitializationVectorABHCase1.java:[line 17]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70580');">
<td>
<span class="priority-1">CIPINT</span>
</td>
<td>The cipher does not provide data integrity</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70580" style="display: none;">
<a href="#CIPHER_INTEGRITY">Bug type CIPHER_INTEGRITY (click for details)</a>
<br/>In class org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABHCase2<br/>In method org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABHCase2.go()<br/>At StaticInitializationVectorABHCase2.java:[line 18]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70742');">
<td>
<span class="priority-1">CIPINT</span>
</td>
<td>The cipher does not provide data integrity</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70742" style="display: none;">
<a href="#CIPHER_INTEGRITY">Bug type CIPHER_INTEGRITY (click for details)</a>
<br/>In class org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABICase1<br/>In method org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABICase1.go(byte[])<br/>At StaticInitializationVectorABICase1.java:[line 15]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70904');">
<td>
<span class="priority-1">CIPINT</span>
</td>
<td>The cipher does not provide data integrity</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70904" style="display: none;">
<a href="#CIPHER_INTEGRITY">Bug type CIPHER_INTEGRITY (click for details)</a>
<br/>In class org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABICase2<br/>In method org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABICase2.go()<br/>At StaticInitializationVectorABICase2.java:[line 20]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71066');">
<td>
<span class="priority-1">CIPINT</span>
</td>
<td>The cipher does not provide data integrity</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71066" style="display: none;">
<a href="#CIPHER_INTEGRITY">Bug type CIPHER_INTEGRITY (click for details)</a>
<br/>In class org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABICase3<br/>In method org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABICase3.method2(byte[])<br/>At StaticInitializationVectorABICase3.java:[line 15]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71228');">
<td>
<span class="priority-1">CIPINT</span>
</td>
<td>The cipher does not provide data integrity</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71228" style="display: none;">
<a href="#CIPHER_INTEGRITY">Bug type CIPHER_INTEGRITY (click for details)</a>
<br/>In class org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABMC1<br/>In method org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABMC1.go(byte[])<br/>At StaticInitializationVectorABMC1.java:[line 17]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71390');">
<td>
<span class="priority-1">CIPINT</span>
</td>
<td>The cipher does not provide data integrity</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71390" style="display: none;">
<a href="#CIPHER_INTEGRITY">Bug type CIPHER_INTEGRITY (click for details)</a>
<br/>In class org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABPSCase1<br/>In method org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABPSCase1.go(int)<br/>At StaticInitializationVectorABPSCase1.java:[line 14]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71552');">
<td>
<span class="priority-1">CIPINT</span>
</td>
<td>The cipher does not provide data integrity</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71552" style="display: none;">
<a href="#CIPHER_INTEGRITY">Bug type CIPHER_INTEGRITY (click for details)</a>
<br/>In class org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorBBCase1<br/>In method org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorBBCase1.go()<br/>At StaticInitializationVectorBBCase1.java:[line 14]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71714');">
<td>
<span class="priority-1">CIPINT</span>
</td>
<td>The cipher does not provide data integrity</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71714" style="display: none;">
<a href="#CIPHER_INTEGRITY">Bug type CIPHER_INTEGRITY (click for details)</a>
<br/>In class org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorCorrected<br/>In method org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorCorrected.go()<br/>At StaticInitializationVectorCorrected.java:[line 41]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66005');">
<td>
<span class="priority-1">PADORA</span>
</td>
<td>The cipher is susceptible to padding oracle attacks</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66005" style="display: none;">
<a href="#PADDING_ORACLE">Bug type PADDING_ORACLE (click for details)</a>
<br/>In class org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase1<br/>In method org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase1.go(int)<br/>At BrokenCryptoABPSCase1.java:[line 16]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66167');">
<td>
<span class="priority-1">PADORA</span>
</td>
<td>The cipher is susceptible to padding oracle attacks</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66167" style="display: none;">
<a href="#PADDING_ORACLE">Bug type PADDING_ORACLE (click for details)</a>
<br/>In class org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase2<br/>In method org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase2.go(int)<br/>At BrokenCryptoABPSCase2.java:[line 15]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66329');">
<td>
<span class="priority-1">PADORA</span>
</td>
<td>The cipher is susceptible to padding oracle attacks</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66329" style="display: none;">
<a href="#PADDING_ORACLE">Bug type PADDING_ORACLE (click for details)</a>
<br/>In class org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase3<br/>In method org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase3.go(int)<br/>At BrokenCryptoABPSCase3.java:[line 16]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66491');">
<td>
<span class="priority-1">PADORA</span>
</td>
<td>The cipher is susceptible to padding oracle attacks</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66491" style="display: none;">
<a href="#PADDING_ORACLE">Bug type PADDING_ORACLE (click for details)</a>
<br/>In class org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase4<br/>In method org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase4.go(int)<br/>At BrokenCryptoABPSCase4.java:[line 16]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66653');">
<td>
<span class="priority-1">PADORA</span>
</td>
<td>The cipher is susceptible to padding oracle attacks</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66653" style="display: none;">
<a href="#PADDING_ORACLE">Bug type PADDING_ORACLE (click for details)</a>
<br/>In class org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase5<br/>In method org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase5.go(int)<br/>At BrokenCryptoABPSCase5.java:[line 15]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67213');">
<td>
<span class="priority-1">PADORA</span>
</td>
<td>The cipher is susceptible to padding oracle attacks</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67213" style="display: none;">
<a href="#PADDING_ORACLE">Bug type PADDING_ORACLE (click for details)</a>
<br/>In class org.cryptoapi.bench.brokencrypto.BrokenCryptoCorrected<br/>In method org.cryptoapi.bench.brokencrypto.BrokenCryptoCorrected.go()<br/>At BrokenCryptoCorrected.java:[line 14]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68599');">
<td>
<span class="priority-1">PADORA</span>
</td>
<td>The cipher is susceptible to padding oracle attacks</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68599" style="display: none;">
<a href="#PADDING_ORACLE">Bug type PADDING_ORACLE (click for details)</a>
<br/>In class org.cryptoapi.bench.ecbcrypto.EcbInSymmCryptoABPSCase1<br/>In method org.cryptoapi.bench.ecbcrypto.EcbInSymmCryptoABPSCase1.go(int)<br/>At EcbInSymmCryptoABPSCase1.java:[line 15]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68815');">
<td>
<span class="priority-1">PADORA</span>
</td>
<td>The cipher is susceptible to padding oracle attacks</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68815" style="display: none;">
<a href="#PADDING_ORACLE">Bug type PADDING_ORACLE (click for details)</a>
<br/>In class org.cryptoapi.bench.ecbcrypto.EcbInSymmCryptoCorrected<br/>In method org.cryptoapi.bench.ecbcrypto.EcbInSymmCryptoCorrected.go()<br/>At EcbInSymmCryptoCorrected.java:[line 14]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68923');">
<td>
<span class="priority-1">PADORA</span>
</td>
<td>The cipher is susceptible to padding oracle attacks</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68923" style="display: none;">
<a href="#PADDING_ORACLE">Bug type PADDING_ORACLE (click for details)</a>
<br/>In class org.cryptoapi.bench.predictablecryptographickey.Crypto<br/>In method new org.cryptoapi.bench.predictablecryptographickey.Crypto(String)<br/>At PredictableCryptographicKeyABSCase1.java:[line 40]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70310');">
<td>
<span class="priority-1">PADORA</span>
</td>
<td>The cipher is susceptible to padding oracle attacks</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70310" style="display: none;">
<a href="#PADDING_ORACLE">Bug type PADDING_ORACLE (click for details)</a>
<br/>In class org.cryptoapi.bench.staticinitializationvector.CryptoStaticIV1<br/>In method org.cryptoapi.bench.staticinitializationvector.CryptoStaticIV1.method1(byte[])<br/>At StaticInitializationVectorABSCase1.java:[line 35]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70472');">
<td>
<span class="priority-1">PADORA</span>
</td>
<td>The cipher is susceptible to padding oracle attacks</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70472" style="display: none;">
<a href="#PADDING_ORACLE">Bug type PADDING_ORACLE (click for details)</a>
<br/>In class org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABHCase1<br/>In method org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABHCase1.go()<br/>At StaticInitializationVectorABHCase1.java:[line 17]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70634');">
<td>
<span class="priority-1">PADORA</span>
</td>
<td>The cipher is susceptible to padding oracle attacks</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70634" style="display: none;">
<a href="#PADDING_ORACLE">Bug type PADDING_ORACLE (click for details)</a>
<br/>In class org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABHCase2<br/>In method org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABHCase2.go()<br/>At StaticInitializationVectorABHCase2.java:[line 18]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70796');">
<td>
<span class="priority-1">PADORA</span>
</td>
<td>The cipher is susceptible to padding oracle attacks</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70796" style="display: none;">
<a href="#PADDING_ORACLE">Bug type PADDING_ORACLE (click for details)</a>
<br/>In class org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABICase1<br/>In method org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABICase1.go(byte[])<br/>At StaticInitializationVectorABICase1.java:[line 15]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70958');">
<td>
<span class="priority-1">PADORA</span>
</td>
<td>The cipher is susceptible to padding oracle attacks</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70958" style="display: none;">
<a href="#PADDING_ORACLE">Bug type PADDING_ORACLE (click for details)</a>
<br/>In class org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABICase2<br/>In method org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABICase2.go()<br/>At StaticInitializationVectorABICase2.java:[line 20]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71120');">
<td>
<span class="priority-1">PADORA</span>
</td>
<td>The cipher is susceptible to padding oracle attacks</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71120" style="display: none;">
<a href="#PADDING_ORACLE">Bug type PADDING_ORACLE (click for details)</a>
<br/>In class org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABICase3<br/>In method org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABICase3.method2(byte[])<br/>At StaticInitializationVectorABICase3.java:[line 15]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71282');">
<td>
<span class="priority-1">PADORA</span>
</td>
<td>The cipher is susceptible to padding oracle attacks</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71282" style="display: none;">
<a href="#PADDING_ORACLE">Bug type PADDING_ORACLE (click for details)</a>
<br/>In class org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABMC1<br/>In method org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABMC1.go(byte[])<br/>At StaticInitializationVectorABMC1.java:[line 17]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71444');">
<td>
<span class="priority-1">PADORA</span>
</td>
<td>The cipher is susceptible to padding oracle attacks</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71444" style="display: none;">
<a href="#PADDING_ORACLE">Bug type PADDING_ORACLE (click for details)</a>
<br/>In class org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABPSCase1<br/>In method org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABPSCase1.go(int)<br/>At StaticInitializationVectorABPSCase1.java:[line 14]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71606');">
<td>
<span class="priority-1">PADORA</span>
</td>
<td>The cipher is susceptible to padding oracle attacks</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71606" style="display: none;">
<a href="#PADDING_ORACLE">Bug type PADDING_ORACLE (click for details)</a>
<br/>In class org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorBBCase1<br/>In method org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorBBCase1.go()<br/>At StaticInitializationVectorBBCase1.java:[line 14]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71768');">
<td>
<span class="priority-1">PADORA</span>
</td>
<td>The cipher is susceptible to padding oracle attacks</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71768" style="display: none;">
<a href="#PADDING_ORACLE">Bug type PADDING_ORACLE (click for details)</a>
<br/>In class org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorCorrected<br/>In method org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorCorrected.go()<br/>At StaticInitializationVectorCorrected.java:[line 41]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65887');">
<td>
<span class="priority-2">SECDU</span>
</td>
<td>DES should be replaced with AES</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65887" style="display: none;">
<a href="#DES_USAGE">Bug type DES_USAGE (click for details)</a>
<br/>In class org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase1<br/>In method org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase1.go(int)<br/>At BrokenCryptoABPSCase1.java:[line 14]<br/>Sink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher;<br/>Sink parameter 0</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66761');">
<td>
<span class="priority-2">SECDU</span>
</td>
<td>DES should be replaced with AES</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66761" style="display: none;">
<a href="#DES_USAGE">Bug type DES_USAGE (click for details)</a>
<br/>In class org.cryptoapi.bench.brokencrypto.BrokenCryptoBBCase1<br/>In method org.cryptoapi.bench.brokencrypto.BrokenCryptoBBCase1.go()<br/>At BrokenCryptoBBCase1.java:[line 13]<br/>Sink method javax/crypto/KeyGenerator.getInstance(Ljava/lang/String;)Ljavax/crypto/KeyGenerator;<br/>Sink parameter 0</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66825');">
<td>
<span class="priority-2">SECDU</span>
</td>
<td>DES should be replaced with AES</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66825" style="display: none;">
<a href="#DES_USAGE">Bug type DES_USAGE (click for details)</a>
<br/>In class org.cryptoapi.bench.brokencrypto.BrokenCryptoBBCase1<br/>In method org.cryptoapi.bench.brokencrypto.BrokenCryptoBBCase1.go()<br/>At BrokenCryptoBBCase1.java:[line 15]<br/>Sink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher;<br/>Sink parameter 0</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65951');">
<td>
<span class="priority-1">SECECB</span>
</td>
<td>The cipher uses ECB mode, which provides poor confidentiality for encrypted data</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65951" style="display: none;">
<a href="#ECB_MODE">Bug type ECB_MODE (click for details)</a>
<br/>In class org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase1<br/>In method org.cryptoapi.bench.brokencrypto.BrokenCryptoABPSCase1.go(int)<br/>At BrokenCryptoABPSCase1.java:[line 14]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66889');">
<td>
<span class="priority-1">SECECB</span>
</td>
<td>The cipher uses ECB mode, which provides poor confidentiality for encrypted data</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66889" style="display: none;">
<a href="#ECB_MODE">Bug type ECB_MODE (click for details)</a>
<br/>In class org.cryptoapi.bench.brokencrypto.BrokenCryptoBBCase1<br/>In method org.cryptoapi.bench.brokencrypto.BrokenCryptoBBCase1.go()<br/>At BrokenCryptoBBCase1.java:[line 15]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68545');">
<td>
<span class="priority-1">SECECB</span>
</td>
<td>The cipher uses ECB mode, which provides poor confidentiality for encrypted data</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68545" style="display: none;">
<a href="#ECB_MODE">Bug type ECB_MODE (click for details)</a>
<br/>In class org.cryptoapi.bench.ecbcrypto.EcbInSymmCryptoABPSCase1<br/>In method org.cryptoapi.bench.ecbcrypto.EcbInSymmCryptoABPSCase1.go(int)<br/>At EcbInSymmCryptoABPSCase1.java:[line 13]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68707');">
<td>
<span class="priority-1">SECECB</span>
</td>
<td>The cipher uses ECB mode, which provides poor confidentiality for encrypted data</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68707" style="display: none;">
<a href="#ECB_MODE">Bug type ECB_MODE (click for details)</a>
<br/>In class org.cryptoapi.bench.ecbcrypto.EcbInSymmCryptoBBCase1<br/>In method org.cryptoapi.bench.ecbcrypto.EcbInSymmCryptoBBCase1.go()<br/>At EcbInSymmCryptoBBCase1.java:[line 14]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65551');">
<td>
<span class="priority-2">SECHCP</span>
</td>
<td>Hard coded password found</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65551" style="display: none;">
<a href="#HARD_CODE_PASSWORD">Bug type HARD_CODE_PASSWORD (click for details)</a>
<br/>In class org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase10<br/>Value is hard coded in field org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase10.crypto[C with suspicious name<br/>Value is hard coded in field org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase10.CRYPTO[C with suspicious name<br/>At BrokenCryptoABICase10.java:[lines 10-32]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65595');">
<td>
<span class="priority-2">SECHCP</span>
</td>
<td>Hard coded password found</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65595" style="display: none;">
<a href="#HARD_CODE_PASSWORD">Bug type HARD_CODE_PASSWORD (click for details)</a>
<br/>In class org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase5<br/>Value is hard coded in field org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase5.CRYPTO_ALGO[C with suspicious name<br/>Value is hard coded in field org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase5.CRYPTO[C with suspicious name<br/>Value is hard coded in field org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase5.crypto_algo[C with suspicious name<br/>Value is hard coded in field org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase5.crypto[C with suspicious name<br/>At BrokenCryptoABICase5.java:[lines 10-41]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65647');">
<td>
<span class="priority-2">SECHCP</span>
</td>
<td>Hard coded password found</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65647" style="display: none;">
<a href="#HARD_CODE_PASSWORD">Bug type HARD_CODE_PASSWORD (click for details)</a>
<br/>In class org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase6<br/>Value is hard coded in field org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase6.crypto[C with suspicious name<br/>Value is hard coded in field org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase6.CRYPTO[C with suspicious name<br/>At BrokenCryptoABICase6.java:[lines 10-32]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65691');">
<td>
<span class="priority-2">SECHCP</span>
</td>
<td>Hard coded password found</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65691" style="display: none;">
<a href="#HARD_CODE_PASSWORD">Bug type HARD_CODE_PASSWORD (click for details)</a>
<br/>In class org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase7<br/>Value is hard coded in field org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase7.CRYPTO[C with suspicious name<br/>Value is hard coded in field org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase7.crypto[C with suspicious name<br/>At BrokenCryptoABICase7.java:[lines 10-32]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65735');">
<td>
<span class="priority-2">SECHCP</span>
</td>
<td>Hard coded password found</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65735" style="display: none;">
<a href="#HARD_CODE_PASSWORD">Bug type HARD_CODE_PASSWORD (click for details)</a>
<br/>In class org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase8<br/>Value is hard coded in field org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase8.crypto[C with suspicious name<br/>Value is hard coded in field org.cryptoapi.bench.brokencrypto.BrokenCryptoABICase8.CRYPTO[C with suspicious name<br/>At BrokenCryptoABICase8.java:[lines 10-32]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67267');">
<td>
<span class="priority-2">SECHCP</span>
</td>
<td>Hard coded password found</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67267" style="display: none;">
<a href="#HARD_CODE_PASSWORD">Bug type HARD_CODE_PASSWORD (click for details)</a>
<br/>In class org.cryptoapi.bench.brokenhash.BrokenHashABICase5<br/>Value is hard coded in field org.cryptoapi.bench.brokenhash.BrokenHashABICase5.crypto[C with suspicious name<br/>Value is hard coded in field org.cryptoapi.bench.brokenhash.BrokenHashABICase5.CRYPTO[C with suspicious name<br/>At BrokenHashABICase5.java:[lines 6-28]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67311');">
<td>
<span class="priority-2">SECHCP</span>
</td>
<td>Hard coded password found</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67311" style="display: none;">
<a href="#HARD_CODE_PASSWORD">Bug type HARD_CODE_PASSWORD (click for details)</a>
<br/>In class org.cryptoapi.bench.brokenhash.BrokenHashABICase6<br/>Value is hard coded in field org.cryptoapi.bench.brokenhash.BrokenHashABICase6.CRYPTO[C with suspicious name<br/>Value is hard coded in field org.cryptoapi.bench.brokenhash.BrokenHashABICase6.crypto[C with suspicious name<br/>At BrokenHashABICase6.java:[lines 6-28]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67355');">
<td>
<span class="priority-2">SECHCP</span>
</td>
<td>Hard coded password found</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67355" style="display: none;">
<a href="#HARD_CODE_PASSWORD">Bug type HARD_CODE_PASSWORD (click for details)</a>
<br/>In class org.cryptoapi.bench.brokenhash.BrokenHashABICase7<br/>Value is hard coded in field org.cryptoapi.bench.brokenhash.BrokenHashABICase7.CRYPTO[C with suspicious name<br/>Value is hard coded in field org.cryptoapi.bench.brokenhash.BrokenHashABICase7.crypto[C with suspicious name<br/>At BrokenHashABICase7.java:[lines 6-28]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67399');">
<td>
<span class="priority-2">SECHCP</span>
</td>
<td>Hard coded password found</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67399" style="display: none;">
<a href="#HARD_CODE_PASSWORD">Bug type HARD_CODE_PASSWORD (click for details)</a>
<br/>In class org.cryptoapi.bench.brokenhash.BrokenHashABICase8<br/>Value is hard coded in field org.cryptoapi.bench.brokenhash.BrokenHashABICase8.CRYPTO[C with suspicious name<br/>Value is hard coded in field org.cryptoapi.bench.brokenhash.BrokenHashABICase8.crypto[C with suspicious name<br/>At BrokenHashABICase8.java:[lines 6-28]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68393');">
<td>
<span class="priority-2">SECHCP</span>
</td>
<td>Hard coded password found</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68393" style="display: none;">
<a href="#HARD_CODE_PASSWORD">Bug type HARD_CODE_PASSWORD (click for details)</a>
<br/>In class org.cryptoapi.bench.ecbcrypto.EcbInSymmCryptoABICase2<br/>Value is hard coded in field org.cryptoapi.bench.ecbcrypto.EcbInSymmCryptoABICase2.CRYPTO[C with suspicious name<br/>Value is hard coded in field org.cryptoapi.bench.ecbcrypto.EcbInSymmCryptoABICase2.crypto[C with suspicious name<br/>At EcbInSymmCryptoABICase2.java:[lines 10-32]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68977');">
<td>
<span class="priority-2">SECHCP</span>
</td>
<td>Hard coded password found</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68977" style="display: none;">
<a href="#HARD_CODE_PASSWORD">Bug type HARD_CODE_PASSWORD (click for details)</a>
<br/>In class org.cryptoapi.bench.predictablecryptographickey.PredictableCryptographicKeyABICase2<br/>Value is hard coded in field org.cryptoapi.bench.predictablecryptographickey.PredictableCryptographicKeyABICase2.encryptKey[C with suspicious name<br/>Value is hard coded in field org.cryptoapi.bench.predictablecryptographickey.PredictableCryptographicKeyABICase2.ENCRYPT_KEY[C with suspicious name<br/>At PredictableCryptographicKeyABICase2.java:[lines 7-28]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69391');">
<td>
<span class="priority-1">SECHCP</span>
</td>
<td>Hard coded password found</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69391" style="display: none;">
<a href="#HARD_CODE_PASSWORD">Bug type HARD_CODE_PASSWORD (click for details)</a>
<br/>In class org.cryptoapi.bench.predictablekeystorepassword.PredictableKeyStorePasswordABICase2<br/>In method org.cryptoapi.bench.predictablekeystorepassword.PredictableKeyStorePasswordABICase2.go()<br/>At PredictableKeyStorePasswordABICase2.java:[line 33]<br/>Called method java.security.KeyStore.load(InputStream, char[])<br/>Hard coded parameter number (in reverse order) is 1<br/>Value loaded from field org.cryptoapi.bench.predictablekeystorepassword.PredictableKeyStorePasswordABICase2.encryptKey</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69481');">
<td>
<span class="priority-2">SECHCP</span>
</td>
<td>Hard coded password found</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69481" style="display: none;">
<a href="#HARD_CODE_PASSWORD">Bug type HARD_CODE_PASSWORD (click for details)</a>
<br/>In class org.cryptoapi.bench.predictablekeystorepassword.PredictableKeyStorePasswordABICase2<br/>Value is hard coded in field org.cryptoapi.bench.predictablekeystorepassword.PredictableKeyStorePasswordABICase2.ENCRYPT_KEY[C with suspicious name<br/>At PredictableKeyStorePasswordABICase2.java:[lines 10-34]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69837');">
<td>
<span class="priority-1">SECHCP</span>
</td>
<td>Hard coded password found</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69837" style="display: none;">
<a href="#HARD_CODE_PASSWORD">Bug type HARD_CODE_PASSWORD (click for details)</a>
<br/>In class org.cryptoapi.bench.predictablekeystorepassword.PredictableKeyStorePasswordBBCase1<br/>In method org.cryptoapi.bench.predictablekeystorepassword.PredictableKeyStorePasswordBBCase1.go()<br/>At PredictableKeyStorePasswordBBCase1.java:[line 23]<br/>Called method java.security.KeyStore.load(InputStream, char[])<br/>Hard coded parameter number (in reverse order) is 1<br/>Return value of String.toCharArray() of type char[]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70086');">
<td>
<span class="priority-1">SECHCP</span>
</td>
<td>Hard coded password found</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70086" style="display: none;">
<a href="#HARD_CODE_PASSWORD">Bug type HARD_CODE_PASSWORD (click for details)</a>
<br/>In class org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordBBCase1<br/>In method org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordBBCase1.key()<br/>At PredictablePBEPasswordBBCase1.java:[line 22]<br/>Called method new javax.crypto.spec.PBEKeySpec(char[], byte[], int, int)<br/>Hard coded parameter number (in reverse order) is 4<br/>Return value of String.toCharArray() of type char[]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70177');">
<td>
<span class="priority-1">SECHCP</span>
</td>
<td>Hard coded password found</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70177" style="display: none;">
<a href="#HARD_CODE_PASSWORD">Bug type HARD_CODE_PASSWORD (click for details)</a>
<br/>In class org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordBBCase2<br/>In method org.cryptoapi.bench.predictablepbepassword.PredictablePBEPasswordBBCase2.key()<br/>At PredictablePBEPasswordBBCase2.java:[line 22]<br/>Called method new javax.crypto.spec.PBEKeySpec(char[], byte[], int, int)<br/>Hard coded parameter number (in reverse order) is 4<br/>Value 1</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67501');">
<td>
<span class="priority-1">SECMD5</span>
</td>
<td>This API MD5 (MDX) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67501" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_MD5">Bug type WEAK_MESSAGE_DIGEST_MD5 (click for details)</a>
<br/>In class org.cryptoapi.bench.brokenhash.BrokenHashABPSCase2<br/>In method org.cryptoapi.bench.brokenhash.BrokenHashABPSCase2.main(String[])<br/>At BrokenHashABPSCase2.java:[line 9]<br/>Value MD5</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67559');">
<td>
<span class="priority-1">SECMD5</span>
</td>
<td>This API MD4 (MDX) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67559" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_MD5">Bug type WEAK_MESSAGE_DIGEST_MD5 (click for details)</a>
<br/>In class org.cryptoapi.bench.brokenhash.BrokenHashABPSCase3<br/>In method org.cryptoapi.bench.brokenhash.BrokenHashABPSCase3.main(String[])<br/>At BrokenHashABPSCase3.java:[line 9]<br/>Value MD4</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67617');">
<td>
<span class="priority-1">SECMD5</span>
</td>
<td>This API MD2 (MDX) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67617" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_MD5">Bug type WEAK_MESSAGE_DIGEST_MD5 (click for details)</a>
<br/>In class org.cryptoapi.bench.brokenhash.BrokenHashABPSCase4<br/>In method org.cryptoapi.bench.brokenhash.BrokenHashABPSCase4.main(String[])<br/>At BrokenHashABPSCase4.java:[line 9]<br/>Value MD2</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67733');">
<td>
<span class="priority-1">SECMD5</span>
</td>
<td>This API MD5 (MDX) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67733" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_MD5">Bug type WEAK_MESSAGE_DIGEST_MD5 (click for details)</a>
<br/>In class org.cryptoapi.bench.brokenhash.BrokenHashBBCase2<br/>In method org.cryptoapi.bench.brokenhash.BrokenHashBBCase2.main(String[])<br/>At BrokenHashBBCase2.java:[line 9]<br/>Value MD5</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67791');">
<td>
<span class="priority-1">SECMD5</span>
</td>
<td>This API MD4 (MDX) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67791" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_MD5">Bug type WEAK_MESSAGE_DIGEST_MD5 (click for details)</a>
<br/>In class org.cryptoapi.bench.brokenhash.BrokenHashBBCase3<br/>In method org.cryptoapi.bench.brokenhash.BrokenHashBBCase3.main(String[])<br/>At BrokenHashBBCase3.java:[line 9]<br/>Value MD4</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67849');">
<td>
<span class="priority-1">SECMD5</span>
</td>
<td>This API MD2 (MDX) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67849" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_MD5">Bug type WEAK_MESSAGE_DIGEST_MD5 (click for details)</a>
<br/>In class org.cryptoapi.bench.brokenhash.BrokenHashBBCase4<br/>In method org.cryptoapi.bench.brokenhash.BrokenHashBBCase4.main(String[])<br/>At BrokenHashBBCase4.java:[line 9]<br/>Value MD2</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71822');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71822" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.cryptoapi.bench.untrustedprng.UntrustedPRNGCase1<br/>In method org.cryptoapi.bench.untrustedprng.UntrustedPRNGCase1.main(String[])<br/>At UntrustedPRNGCase1.java:[line 8]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67443');">
<td>
<span class="priority-2">SECSHA1</span>
</td>
<td>This API SHA1 (SHA-1) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67443" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_SHA1">Bug type WEAK_MESSAGE_DIGEST_SHA1 (click for details)</a>
<br/>In class org.cryptoapi.bench.brokenhash.BrokenHashABPSCase1<br/>In method org.cryptoapi.bench.brokenhash.BrokenHashABPSCase1.main(String[])<br/>At BrokenHashABPSCase1.java:[line 9]<br/>Value SHA1</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67675');">
<td>
<span class="priority-2">SECSHA1</span>
</td>
<td>This API SHA1 (SHA-1) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67675" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_SHA1">Bug type WEAK_MESSAGE_DIGEST_SHA1 (click for details)</a>
<br/>In class org.cryptoapi.bench.brokenhash.BrokenHashBBCase1<br/>In method org.cryptoapi.bench.brokenhash.BrokenHashBBCase1.main(String[])<br/>At BrokenHashBBCase1.java:[line 9]<br/>Value SHA1</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69075');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69075" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.cryptoapi.bench.predictablekeystorepassword.CryptoPredictableKeyStorePassword1<br/>In method org.cryptoapi.bench.predictablekeystorepassword.CryptoPredictableKeyStorePassword1.method1(String)<br/>At PredictableKeyStorePasswordABSCase1.java:[line 34]<br/>Sink method java/net/URL.openStream()Ljava/io/InputStream;<br/>Sink parameter 0<br/>Unknown source org/cryptoapi/bench/predictablekeystorepassword/CryptoPredictableKeyStorePassword1.cacerts<br/>At PredictableKeyStorePasswordABSCase1.java:[line 34]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69154');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69154" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.cryptoapi.bench.predictablekeystorepassword.PredictableKeyStorePasswordABHCase1<br/>In method org.cryptoapi.bench.predictablekeystorepassword.PredictableKeyStorePasswordABHCase1.go()<br/>At PredictableKeyStorePasswordABHCase1.java:[line 26]<br/>Sink method java/net/URL.openStream()Ljava/io/InputStream;<br/>Sink parameter 0<br/>Unknown source org/cryptoapi/bench/predictablekeystorepassword/PredictableKeyStorePasswordABHCase1.cacerts<br/>At PredictableKeyStorePasswordABHCase1.java:[line 26]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69233');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69233" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.cryptoapi.bench.predictablekeystorepassword.PredictableKeyStorePasswordABHCase2<br/>In method org.cryptoapi.bench.predictablekeystorepassword.PredictableKeyStorePasswordABHCase2.go()<br/>At PredictableKeyStorePasswordABHCase2.java:[line 31]<br/>Sink method java/net/URL.openStream()Ljava/io/InputStream;<br/>Sink parameter 0<br/>Unknown source org/cryptoapi/bench/predictablekeystorepassword/PredictableKeyStorePasswordABHCase2.cacerts<br/>At PredictableKeyStorePasswordABHCase2.java:[line 31]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69312');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69312" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.cryptoapi.bench.predictablekeystorepassword.PredictableKeyStorePasswordABICase1<br/>In method org.cryptoapi.bench.predictablekeystorepassword.PredictableKeyStorePasswordABICase1.go(String)<br/>At PredictableKeyStorePasswordABICase1.java:[line 22]<br/>Sink method java/net/URL.openStream()Ljava/io/InputStream;<br/>Sink parameter 0<br/>Unknown source org/cryptoapi/bench/predictablekeystorepassword/PredictableKeyStorePasswordABICase1.cacerts<br/>At PredictableKeyStorePasswordABICase1.java:[line 22]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69521');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69521" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.cryptoapi.bench.predictablekeystorepassword.PredictableKeyStorePasswordABICase2<br/>In method org.cryptoapi.bench.predictablekeystorepassword.PredictableKeyStorePasswordABICase2.go()<br/>At PredictableKeyStorePasswordABICase2.java:[line 33]<br/>Sink method java/net/URL.openStream()Ljava/io/InputStream;<br/>Sink parameter 0<br/>Unknown source org/cryptoapi/bench/predictablekeystorepassword/PredictableKeyStorePasswordABICase2.cacerts<br/>At PredictableKeyStorePasswordABICase2.java:[line 33]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69600');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69600" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.cryptoapi.bench.predictablekeystorepassword.PredictableKeyStorePasswordABICase3<br/>In method org.cryptoapi.bench.predictablekeystorepassword.PredictableKeyStorePasswordABICase3.method2(String)<br/>At PredictableKeyStorePasswordABICase3.java:[line 27]<br/>Sink method java/net/URL.openStream()Ljava/io/InputStream;<br/>Sink parameter 0<br/>Unknown source org/cryptoapi/bench/predictablekeystorepassword/PredictableKeyStorePasswordABICase3.cacerts<br/>At PredictableKeyStorePasswordABICase3.java:[line 27]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69679');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69679" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.cryptoapi.bench.predictablekeystorepassword.PredictableKeyStorePasswordABMC1<br/>In method org.cryptoapi.bench.predictablekeystorepassword.PredictableKeyStorePasswordABMC1.go(String)<br/>At PredictableKeyStorePasswordABMC1.java:[line 17]<br/>Sink method java/net/URL.openStream()Ljava/io/InputStream;<br/>Sink parameter 0<br/>Unknown source org/cryptoapi/bench/predictablekeystorepassword/PredictableKeyStorePasswordABMC1.cacerts<br/>At PredictableKeyStorePasswordABMC1.java:[line 17]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69758');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69758" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.cryptoapi.bench.predictablekeystorepassword.PredictableKeyStorePasswordABPSCase1<br/>In method org.cryptoapi.bench.predictablekeystorepassword.PredictableKeyStorePasswordABPSCase1.go(int)<br/>At PredictableKeyStorePasswordABPSCase1.java:[line 28]<br/>Sink method java/net/URL.openStream()Ljava/io/InputStream;<br/>Sink parameter 0<br/>Unknown source org/cryptoapi/bench/predictablekeystorepassword/PredictableKeyStorePasswordABPSCase1.cacerts<br/>At PredictableKeyStorePasswordABPSCase1.java:[line 28]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69928');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69928" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.cryptoapi.bench.predictablekeystorepassword.PredictableKeyStorePasswordBBCase1<br/>In method org.cryptoapi.bench.predictablekeystorepassword.PredictableKeyStorePasswordBBCase1.go()<br/>At PredictableKeyStorePasswordBBCase1.java:[line 23]<br/>Sink method java/net/URL.openStream()Ljava/io/InputStream;<br/>Sink parameter 0<br/>Unknown source org/cryptoapi/bench/predictablekeystorepassword/PredictableKeyStorePasswordBBCase1.cacerts<br/>At PredictableKeyStorePasswordBBCase1.java:[line 23]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70007');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70007" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.cryptoapi.bench.predictablekeystorepassword.PredictableKeyStorePasswordCorrected<br/>In method org.cryptoapi.bench.predictablekeystorepassword.PredictableKeyStorePasswordCorrected.go()<br/>At PredictableKeyStorePasswordCorrected.java:[line 26]<br/>Sink method java/net/URL.openStream()Ljava/io/InputStream;<br/>Sink parameter 0<br/>Unknown source org/cryptoapi/bench/predictablekeystorepassword/PredictableKeyStorePasswordCorrected.cacerts<br/>At PredictableKeyStorePasswordCorrected.java:[line 26]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68339');">
<td>
<span class="priority-2">SECWHV</span>
</td>
<td>HostnameVerifier that accept any signed certificates makes communication vulnerable to a MITM attack</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68339" style="display: none;">
<a href="#WEAK_HOSTNAME_VERIFIER">Bug type WEAK_HOSTNAME_VERIFIER (click for details)</a>
<br/>In class org.cryptoapi.bench.dummyhostnameverifier.DummyHostNameVerifierCase1<br/>In method org.cryptoapi.bench.dummyhostnameverifier.DummyHostNameVerifierCase1.verify(String, SSLSession)<br/>At DummyHostNameVerifierCase1.java:[line 8]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67907');">
<td>
<span class="priority-2">SECWTM</span>
</td>
<td>TrustManager that accept any certificates makes communication vulnerable to a MITM attack</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67907" style="display: none;">
<a href="#WEAK_TRUST_MANAGER">Bug type WEAK_TRUST_MANAGER (click for details)</a>
<br/>In class org.cryptoapi.bench.dummycertvalidation.DummyCertValidationCase1<br/>In method org.cryptoapi.bench.dummycertvalidation.DummyCertValidationCase1.checkServerTrusted(X509Certificate[], String)<br/>At DummyCertValidationCase1.java:[line 19]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67961');">
<td>
<span class="priority-2">SECWTM</span>
</td>
<td>TrustManager that accept any certificates makes communication vulnerable to a MITM attack</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67961" style="display: none;">
<a href="#WEAK_TRUST_MANAGER">Bug type WEAK_TRUST_MANAGER (click for details)</a>
<br/>In class org.cryptoapi.bench.dummycertvalidation.DummyCertValidationCase1<br/>In method org.cryptoapi.bench.dummycertvalidation.DummyCertValidationCase1.getAcceptedIssuers()<br/>At DummyCertValidationCase1.java:[line 25]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68015');">
<td>
<span class="priority-2">SECWTM</span>
</td>
<td>TrustManager that accept any certificates makes communication vulnerable to a MITM attack</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68015" style="display: none;">
<a href="#WEAK_TRUST_MANAGER">Bug type WEAK_TRUST_MANAGER (click for details)</a>
<br/>In class org.cryptoapi.bench.dummycertvalidation.DummyCertValidationCase2<br/>In method org.cryptoapi.bench.dummycertvalidation.DummyCertValidationCase2.checkClientTrusted(X509Certificate[], String)<br/>At DummyCertValidationCase2.java:[line 12]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68069');">
<td>
<span class="priority-2">SECWTM</span>
</td>
<td>TrustManager that accept any certificates makes communication vulnerable to a MITM attack</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68069" style="display: none;">
<a href="#WEAK_TRUST_MANAGER">Bug type WEAK_TRUST_MANAGER (click for details)</a>
<br/>In class org.cryptoapi.bench.dummycertvalidation.DummyCertValidationCase2<br/>In method org.cryptoapi.bench.dummycertvalidation.DummyCertValidationCase2.checkServerTrusted(X509Certificate[], String)<br/>At DummyCertValidationCase2.java:[line 16]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68123');">
<td>
<span class="priority-2">SECWTM</span>
</td>
<td>TrustManager that accept any certificates makes communication vulnerable to a MITM attack</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68123" style="display: none;">
<a href="#WEAK_TRUST_MANAGER">Bug type WEAK_TRUST_MANAGER (click for details)</a>
<br/>In class org.cryptoapi.bench.dummycertvalidation.DummyCertValidationCase2<br/>In method org.cryptoapi.bench.dummycertvalidation.DummyCertValidationCase2.getAcceptedIssuers()<br/>At DummyCertValidationCase2.java:[line 20]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68177');">
<td>
<span class="priority-2">SECWTM</span>
</td>
<td>TrustManager that accept any certificates makes communication vulnerable to a MITM attack</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68177" style="display: none;">
<a href="#WEAK_TRUST_MANAGER">Bug type WEAK_TRUST_MANAGER (click for details)</a>
<br/>In class org.cryptoapi.bench.dummycertvalidation.DummyCertValidationCase3<br/>In method org.cryptoapi.bench.dummycertvalidation.DummyCertValidationCase3.checkClientTrusted(X509Certificate[], String)<br/>At DummyCertValidationCase3.java:[line 11]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68231');">
<td>
<span class="priority-2">SECWTM</span>
</td>
<td>TrustManager that accept any certificates makes communication vulnerable to a MITM attack</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68231" style="display: none;">
<a href="#WEAK_TRUST_MANAGER">Bug type WEAK_TRUST_MANAGER (click for details)</a>
<br/>In class org.cryptoapi.bench.dummycertvalidation.DummyCertValidationCase3<br/>In method org.cryptoapi.bench.dummycertvalidation.DummyCertValidationCase3.checkServerTrusted(X509Certificate[], String)<br/>At DummyCertValidationCase3.java:[line 16]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68285');">
<td>
<span class="priority-2">SECWTM</span>
</td>
<td>TrustManager that accept any certificates makes communication vulnerable to a MITM attack</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68285" style="display: none;">
<a href="#WEAK_TRUST_MANAGER">Bug type WEAK_TRUST_MANAGER (click for details)</a>
<br/>In class org.cryptoapi.bench.dummycertvalidation.DummyCertValidationCase3<br/>In method org.cryptoapi.bench.dummycertvalidation.DummyCertValidationCase3.getAcceptedIssuers()<br/>At DummyCertValidationCase3.java:[line 20]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70364');">
<td>
<span class="priority-2">STAIV</span>
</td>
<td>The initialization vector (IV) is not properly generated</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70364" style="display: none;">
<a href="#STATIC_IV">Bug type STATIC_IV (click for details)</a>
<br/>In class org.cryptoapi.bench.staticinitializationvector.CryptoStaticIV1<br/>In method org.cryptoapi.bench.staticinitializationvector.CryptoStaticIV1.method1(byte[])<br/>At StaticInitializationVectorABSCase1.java:[line 32]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70526');">
<td>
<span class="priority-2">STAIV</span>
</td>
<td>The initialization vector (IV) is not properly generated</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70526" style="display: none;">
<a href="#STATIC_IV">Bug type STATIC_IV (click for details)</a>
<br/>In class org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABHCase1<br/>In method org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABHCase1.go()<br/>At StaticInitializationVectorABHCase1.java:[line 21]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70688');">
<td>
<span class="priority-2">STAIV</span>
</td>
<td>The initialization vector (IV) is not properly generated</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70688" style="display: none;">
<a href="#STATIC_IV">Bug type STATIC_IV (click for details)</a>
<br/>In class org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABHCase2<br/>In method org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABHCase2.go()<br/>At StaticInitializationVectorABHCase2.java:[line 31]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70850');">
<td>
<span class="priority-2">STAIV</span>
</td>
<td>The initialization vector (IV) is not properly generated</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70850" style="display: none;">
<a href="#STATIC_IV">Bug type STATIC_IV (click for details)</a>
<br/>In class org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABICase1<br/>In method org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABICase1.go(byte[])<br/>At StaticInitializationVectorABICase1.java:[line 12]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71012');">
<td>
<span class="priority-2">STAIV</span>
</td>
<td>The initialization vector (IV) is not properly generated</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71012" style="display: none;">
<a href="#STATIC_IV">Bug type STATIC_IV (click for details)</a>
<br/>In class org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABICase2<br/>In method org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABICase2.go()<br/>At StaticInitializationVectorABICase2.java:[line 17]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71174');">
<td>
<span class="priority-2">STAIV</span>
</td>
<td>The initialization vector (IV) is not properly generated</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71174" style="display: none;">
<a href="#STATIC_IV">Bug type STATIC_IV (click for details)</a>
<br/>In class org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABICase3<br/>In method org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABICase3.method2(byte[])<br/>At StaticInitializationVectorABICase3.java:[line 12]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71336');">
<td>
<span class="priority-2">STAIV</span>
</td>
<td>The initialization vector (IV) is not properly generated</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71336" style="display: none;">
<a href="#STATIC_IV">Bug type STATIC_IV (click for details)</a>
<br/>In class org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABMC1<br/>In method org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABMC1.go(byte[])<br/>At StaticInitializationVectorABMC1.java:[line 14]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71498');">
<td>
<span class="priority-2">STAIV</span>
</td>
<td>The initialization vector (IV) is not properly generated</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71498" style="display: none;">
<a href="#STATIC_IV">Bug type STATIC_IV (click for details)</a>
<br/>In class org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABPSCase1<br/>In method org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorABPSCase1.go(int)<br/>At StaticInitializationVectorABPSCase1.java:[line 24]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71660');">
<td>
<span class="priority-2">STAIV</span>
</td>
<td>The initialization vector (IV) is not properly generated</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71660" style="display: none;">
<a href="#STATIC_IV">Bug type STATIC_IV (click for details)</a>
<br/>In class org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorBBCase1<br/>In method org.cryptoapi.bench.staticinitializationvector.StaticInitializationVectorBBCase1.go()<br/>At StaticInitializationVectorBBCase1.java:[line 18]</p>
</td>
</tr>
</table>
<h1>
<a name="Details">Details</a>
</h1>
<h2>
<a name="CIPHER_INTEGRITY">CIPHER_INTEGRITY: Cipher with no integrity</a>
</h2>
            
<p>
    The ciphertext produced is susceptible to alteration by an adversary. This mean that the cipher provides no way to detect that the
    data has been tampered with. If the ciphertext can be controlled by an attacker, it could be altered without detection.
</p>
<p>
    The solution is to use a cipher that includes a Hash based Message Authentication Code (HMAC) to sign the data. Combining a HMAC function to the
    existing cipher is prone to error <sup><a href="https://moxie.org/blog/the-cryptographic-doom-principle/">[1]</a></sup>. Specifically,
    it is always recommended that you be able to verify the HMAC first, and only if the data is unmodified, do you then perform any cryptographic
    functions on the data.
</p>
<p>The following modes are vulnerable because they don't provide a HMAC:<br/>
    - CBC<br/>
    - OFB<br/>
    - CTR<br/>
    - ECB<br/><br/>
    The following snippets code are some examples of vulnerable code.<br/><br/>
    <b>Code at risk:</b><br/>
    <i>AES in CBC mode</i><br/>

    <pre>Cipher c = Cipher.getInstance("AES/CBC/PKCS5Padding");
c.init(Cipher.ENCRYPT_MODE, k, iv);
byte[] cipherText = c.doFinal(plainText);</pre>
    <br/>
    <i>Triple DES with ECB mode</i><br/>

<pre>Cipher c = Cipher.getInstance("DESede/ECB/PKCS5Padding");
c.init(Cipher.ENCRYPT_MODE, k, iv);
byte[] cipherText = c.doFinal(plainText);</pre>
</p>
<p>
    <b>Solution:</b>
    <pre>Cipher c = Cipher.getInstance("AES/GCM/NoPadding");
c.init(Cipher.ENCRYPT_MODE, k, iv);
byte[] cipherText = c.doFinal(plainText);</pre>
</p>
<p>
In the example solution above, the GCM mode introduces an HMAC into the resulting encrypted data, providing integrity of the result.
</p>
<br/>
<p>
    <b>References</b><br/>
    <a href="https://en.wikipedia.org/wiki/Authenticated_encryption">Wikipedia: Authenticated encryption</a><br/>
    <a href="https://csrc.nist.gov/projects/block-cipher-techniques/bcm/modes-develoment#01">NIST: Authenticated Encryption Modes</a><br/>
    <a href="https://moxie.org/blog/the-cryptographic-doom-principle/">Moxie Marlinspike's blog: The Cryptographic Doom Principle</a><br/>
    <a href="https://cwe.mitre.org/data/definitions/353.html">CWE-353: Missing Support for Integrity Check</a>
</p>

        
<h2>
<a name="PADDING_ORACLE">PADDING_ORACLE: Cipher is susceptible to Padding Oracle</a>
</h2>
            
<p>
    This specific mode of CBC with PKCS5Padding is susceptible to padding oracle attacks. An adversary could potentially decrypt the
    message if the system exposed the difference between plaintext with invalid padding or valid padding. The distinction between
    valid and invalid padding is usually revealed through distinct error messages being returned for each condition.
</p>
<p>
    <b>Code at risk:</b>
    <pre>Cipher c = Cipher.getInstance("AES/CBC/PKCS5Padding");
c.init(Cipher.ENCRYPT_MODE, k, iv);
byte[] cipherText = c.doFinal(plainText);</pre>
</p>
<p>
    <b>Solution:</b>
    <pre>Cipher c = Cipher.getInstance("AES/GCM/NoPadding");
c.init(Cipher.ENCRYPT_MODE, k, iv);
byte[] cipherText = c.doFinal(plainText);</pre>
</p>
<br/>
<p>
    <b>References</b><br/>
    <a href="http://www.infobytesec.com/down/paddingoracle_openjam.pdf">Padding Oracles for the masses (by Matias Soler)</a><br/>
    <a href="https://en.wikipedia.org/wiki/Authenticated_encryption">Wikipedia: Authenticated encryption</a><br/>
    <a href="https://csrc.nist.gov/projects/block-cipher-techniques/bcm/modes-develoment#01">NIST: Authenticated Encryption Modes</a><br/>
    <a href="https://capec.mitre.org/data/definitions/463.html">CAPEC: Padding Oracle Crypto Attack</a><br/>
    <a href="https://cwe.mitre.org/data/definitions/696.html">CWE-696: Incorrect Behavior Order</a>
</p>

        
<h2>
<a name="DES_USAGE">DES_USAGE: DES is insecure</a>
</h2>
            
<p>
DES is considered strong ciphers for modern applications. Currently, NIST recommends the
usage of AES block ciphers instead of DES.
</p>
<p>
    <b>Example weak code:</b>
<pre>Cipher c = Cipher.getInstance("DES/ECB/PKCS5Padding");
c.init(Cipher.ENCRYPT_MODE, k, iv);
byte[] cipherText = c.doFinal(plainText);</pre>
</p>
<p>
    <b>Example solution:</b>
    <pre>Cipher c = Cipher.getInstance("AES/GCM/NoPadding");
c.init(Cipher.ENCRYPT_MODE, k, iv);
byte[] cipherText = c.doFinal(plainText);</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard">NIST Withdraws Outdated Data Encryption Standard</a><br/>
<a href="https://cwe.mitre.org/data/definitions/326.html">CWE-326: Inadequate Encryption Strength</a>
</p>

        
<h2>
<a name="ECB_MODE">ECB_MODE: ECB mode is insecure</a>
</h2>
            
<p>An authentication cipher mode which provides better confidentiality of the encrypted data should be used instead of Electronic Code Book (ECB) mode,
which does not provide good confidentiality. Specifically, ECB mode produces the same output for the same input each time. So,
for example, if a user is sending a password, the encrypted value is the same each time. This allows an attacker to intercept
and replay the data.</p>
<p>
To fix this, something like Galois/Counter Mode (GCM) should be used instead.
</p>
<p>
<b>Code at risk:</b>
    <pre>Cipher c = Cipher.getInstance("AES/ECB/NoPadding");
c.init(Cipher.ENCRYPT_MODE, k, iv);
byte[] cipherText = c.doFinal(plainText);</pre>
</p>
<p>
    <b>Solution:</b>
    <pre>Cipher c = Cipher.getInstance("AES/GCM/NoPadding");
c.init(Cipher.ENCRYPT_MODE, k, iv);
byte[] cipherText = c.doFinal(plainText);</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://en.wikipedia.org/wiki/Authenticated_encryption">Wikipedia: Authenticated encryption</a><br/>
<a href="https://csrc.nist.gov/projects/block-cipher-techniques/bcm/modes-develoment#01">NIST: Authenticated Encryption Modes</a><br/>
<a href="https://en.wikipedia.org/wiki/Block_cipher_modes_of_operation#Electronic_codebook_.28ECB.29">Wikipedia: Block cipher modes of operation</a><br/>
<a href="https://csrc.nist.gov/publications/detail/sp/800-38a/final">NIST: Recommendation for Block Cipher Modes of Operation</a>
</p>

        
<h2>
<a name="HARD_CODE_PASSWORD">HARD_CODE_PASSWORD: Hard coded password</a>
</h2>
            
<p>
Passwords should not be kept in the source code. The source code can be widely shared in an enterprise environment, and is
certainly shared in open source. To be managed safely, passwords and secret keys should be stored in separate configuration files or keystores.
(Hard coded keys are reported separately by <i>Hard Coded Key</i> pattern)
</p>
<p>
<p><b>Vulnerable Code:</b><br/>

<pre>private String SECRET_PASSWORD = "letMeIn!";

Properties props = new Properties();
props.put(Context.SECURITY_CREDENTIALS, "p@ssw0rd");</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/259.html">CWE-259: Use of Hard-coded Password</a>
</p>

        
<h2>
<a name="WEAK_MESSAGE_DIGEST_MD5">WEAK_MESSAGE_DIGEST_MD5: MD2, MD4 and MD5 are weak hash functions</a>
</h2>
            
<p>The algorithms MD2, MD4 and MD5 are not a recommended MessageDigest. <b>PBKDF2</b> should be used to hash password for example.</p>

<blockquote>
    "The security of the MD5 hash function is severely compromised. A collision attack exists that can find collisions
    within seconds on a computer with a 2.6 GHz Pentium 4 processor (complexity of 2<sup>24.1</sup>).[1] Further, there is also a
    chosen-prefix collision attack that can produce a collision for two inputs with specified prefixes within hours, using
    off-the-shelf computing hardware (complexity 2<sup>39</sup>).[2]"<br/>
    - <a href="https://en.wikipedia.org/wiki/MD5#Security">Wikipedia: MD5 - Security</a>
</blockquote>

<blockquote>
    "<b>SHA-224, SHA-256, SHA-384, SHA-512, SHA-512/224, and SHA-512/256</b>:<br/>
    The use of these hash functions is acceptable for all hash function applications."<br/>
    - <a href="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-131Ar2.pdf">NIST: Transitioning the Use of Cryptographic Algorithms and Key Lengths p.15</a>
</blockquote>
<blockquote>
    "The main idea of a PBKDF is to slow dictionary or brute force attacks on the passwords by increasing the time
    needed to test each password. An attacker with a list of likely passwords can evaluate the PBKDF using the known
    iteration counter and the salt. Since an attacker has to spend a significant amount of computing time for each try,
    it becomes harder to apply the dictionary or brute force attacks."<br/>
- <a href="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-132.pdf">NIST: Recommendation for Password-Based Key Derivation  p.12</a>
</blockquote>
<br/>
<p>
    <b>Vulnerable Code:</b><br/>
    <pre>MessageDigest md5Digest = MessageDigest.getInstance("MD5");
    md5Digest.update(password.getBytes());
    byte[] hashValue = md5Digest.digest();</pre>
    <br/>
    <pre>byte[] hashValue = DigestUtils.getMd5Digest().digest(password.getBytes());</pre>
</p>
<br/>
<p>
    <b>Solution (Using bouncy castle):</b><br/>
    <pre>public static byte[] getEncryptedPassword(String password, byte[] salt) throws NoSuchAlgorithmException, InvalidKeySpecException {
    PKCS5S2ParametersGenerator gen = new PKCS5S2ParametersGenerator(new SHA256Digest());
    gen.init(password.getBytes("UTF-8"), salt.getBytes(), 4096);
    return ((KeyParameter) gen.generateDerivedParameters(256)).getKey();
}</pre>
    <br/>
    <b>Solution (Java 8 and later):</b><br/>
    <pre>public static byte[] getEncryptedPassword(String password, byte[] salt) throws NoSuchAlgorithmException, InvalidKeySpecException {
    KeySpec spec = new PBEKeySpec(password.toCharArray(), salt, 4096, 256 * 8);
    SecretKeyFactory f = SecretKeyFactory.getInstance("PBKDF2WithHmacSHA256");
    return f.generateSecret(spec).getEncoded();
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
[1] <a href="https://www.win.tue.nl/hashclash/On%20Collisions%20for%20MD5%20-%20M.M.J.%20Stevens.pdf">On Collisions for MD5</a>: Master Thesis by M.M.J. Stevens<br/>
[2] <a href="https://homepages.cwi.nl/~stevens/papers/stJOC%20-%20Chosen-Prefix%20Collisions%20for%20MD5%20and%20Applications.pdf">Chosen-prefix collisions for MD5 and applications</a>: Paper written by Marc Stevens<br/>
<a href="https://en.wikipedia.org/wiki/MD5">Wikipedia: MD5</a><br/>
<a href="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-131Ar2.pdf">NIST: Transitioning the Use of Cryptographic Algorithms and Key Lengths</a><br/>
<a href="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-132.pdf">NIST: Recommendation for Password-Based Key Derivation</a><br/>
<a href="https://stackoverflow.com/q/22580853/89769">Stackoverflow: Reliable implementation of PBKDF2-HMAC-SHA256 for Java</a><br/>
<a href="https://cwe.mitre.org/data/definitions/327.html">CWE-327: Use of a Broken or Risky Cryptographic Algorithm</a>
</p>

        
<h2>
<a name="PREDICTABLE_RANDOM">PREDICTABLE_RANDOM: Predictable pseudorandom number generator</a>
</h2>
            
<p>The use of a predictable random value can lead to vulnerabilities when used in certain security critical contexts. For example, when the value is used as:</p>
<ul>
<li>a CSRF token: a predictable token can lead to a CSRF attack as an attacker will know the value of the token</li>
<li>a password reset token (sent by email): a predictable password token can lead to an account takeover, since an attacker will guess the URL of the "change password" form</li>
<li>any other secret value</li>
</ul>
<p>
A quick fix could be to replace the use of <code>java.util.Random</code> with something stronger, such as <code>java.security.SecureRandom</code>.
</p>
<p>
<b>Vulnerable Code:</b><br/>
<pre>String generateSecretToken() {
    Random r = new Random();
    return Long.toHexString(r.nextLong());
}</pre>
</p>
<p>
<b>Solution:</b>
<pre>import org.apache.commons.codec.binary.Hex;

String generateSecretToken() {
    SecureRandom secRandom = new SecureRandom();

    byte[] result = new byte[32];
    secRandom.nextBytes(result);
    return Hex.encodeHexString(result);
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://jazzy.id.au/2010/09/20/cracking_random_number_generators_part_1.html">Cracking Random Number Generators - Part 1 (https://jazzy.id.au)</a><br/>
<a href="https://www.securecoding.cert.org/confluence/display/java/MSC02-J.+Generate+strong+random+numbers">CERT: MSC02-J. Generate strong random numbers</a><br/>
<a href="https://cwe.mitre.org/data/definitions/330.html">CWE-330: Use of Insufficiently Random Values</a><br/>
<a href="https://blog.h3xstream.com/2014/12/predicting-struts-csrf-token-cve-2014.html">Predicting Struts CSRF Token (Example of real-life vulnerability and exploitation)</a>
</p>

        
<h2>
<a name="WEAK_MESSAGE_DIGEST_SHA1">WEAK_MESSAGE_DIGEST_SHA1: SHA-1 is a weak hash function</a>
</h2>
            
<p>The algorithms SHA-1 is not a recommended algorithm for hash password, for signature verification and other
uses. <b>PBKDF2</b> should be used to hash password for example.</p>

<blockquote>
    "<b>SHA-1 for digital signature generation:</b><br/>
    SHA-1 may only be used for digital signature generation where specifically allowed by NIST protocol-specific guidance.
    For all other applications, <u>SHA-1 shall not be used for digital signature generation</u>.<br/>
    <b>SHA-1 for digital signature verification:</b><br/>
    For digital signature verification, <u>SHA-1 is allowed for legacy-use</u>.<br/>
    [...]<br/>
    <b>SHA-224, SHA-256, SHA-384, SHA-512, SHA-512/224, and SHA-512/256</b>:<br/>
    The use of these hash functions is acceptable for all hash function applications."<br/>
    - <a href="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-131Ar2.pdf">NIST: Transitioning the Use of Cryptographic Algorithms and Key Lengths p.15</a>
</blockquote>
<blockquote>
    "The main idea of a PBKDF is to slow dictionary or brute force attacks on the passwords by increasing the time
    needed to test each password. An attacker with a list of likely passwords can evaluate the PBKDF using the known
    iteration counter and the salt. Since an attacker has to spend a significant amount of computing time for each try,
    it becomes harder to apply the dictionary or brute force attacks."<br/>
- <a href="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-132.pdf">NIST: Recommendation for Password-Based Key Derivation  p.12</a>

</blockquote>
<br/>
<p>
    <b>Vulnerable Code:</b><br/>
    <pre>MessageDigest sha1Digest = MessageDigest.getInstance("SHA1");
    sha1Digest.update(password.getBytes());
    byte[] hashValue = sha1Digest.digest();</pre>
    <br/>
    <pre>byte[] hashValue = DigestUtils.getSha1Digest().digest(password.getBytes());</pre>
</p>
<br/>
<p>
    <b>Solution (Using bouncy castle):</b><br/>
    <pre>public static byte[] getEncryptedPassword(String password, byte[] salt) throws NoSuchAlgorithmException, InvalidKeySpecException {
    PKCS5S2ParametersGenerator gen = new PKCS5S2ParametersGenerator(new SHA256Digest());
    gen.init(password.getBytes("UTF-8"), salt.getBytes(), 4096);
    return ((KeyParameter) gen.generateDerivedParameters(256)).getKey();
}</pre>
    <br/>
    <b>Solution (Java 8 and later):</b><br/>
    <pre>public static byte[] getEncryptedPassword(String password, byte[] salt) throws NoSuchAlgorithmException, InvalidKeySpecException {
    KeySpec spec = new PBEKeySpec(password.toCharArray(), salt, 4096, 256 * 8);
    SecretKeyFactory f = SecretKeyFactory.getInstance("PBKDF2WithHmacSHA256");
    return f.generateSecret(spec).getEncoded();
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://community.qualys.com/blogs/securitylabs/2014/09/09/sha1-deprecation-what-you-need-to-know">Qualys blog: SHA1 Deprecation: What You Need to Know</a><br/>
<a href="https://googleonlinesecurity.blogspot.ca/2014/09/gradually-sunsetting-sha-1.html">Google Online Security Blog: Gradually sunsetting SHA-1</a><br/>
<a href="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-131Ar2.pdf">NIST: Transitioning the Use of Cryptographic Algorithms and Key Lengths</a><br/>
<a href="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-132.pdf">NIST: Recommendation for Password-Based Key Derivation</a><br/>
<a href="https://stackoverflow.com/q/22580853/89769">Stackoverflow: Reliable implementation of PBKDF2-HMAC-SHA256 for Java</a><br/>
<a href="https://cwe.mitre.org/data/definitions/327.html">CWE-327: Use of a Broken or Risky Cryptographic Algorithm</a>
</p>

        
<h2>
<a name="URLCONNECTION_SSRF_FD">URLCONNECTION_SSRF_FD: URLConnection Server-Side Request Forgery (SSRF) and File Disclosure</a>
</h2>
            
<p>
    Server-Side Request Forgery occur when a web server executes a request to a user supplied destination
    parameter that is not validated. Such vulnerabilities could allow an attacker to access internal services
    or to launch attacks from your web server.
</p>
<p>
    URLConnection can be used with file:// protocol or other protocols to access local filesystem and potentially other services.
<p>
    <b>Vulnerable Code:</b>
<pre>
new URL(String url).openConnection()
</pre>

<pre>
new URL(String url).openStream()
</pre>

<pre>
new URL(String url).getContent()
</pre>
</p>
<p>
    <b>Solution/Countermeasures:</b><br/>
    <ul>
        <li>Don't accept URL destinations from users</li>
        <li>Accept a destination key, and use it to look up the target destination associate with the key</li>
        <li>White list URLs (if possible)</li>
        <li>Validate that the beginning of the URL is part of a white list</li>
    </ul>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a><br/>
<a href="https://www.bishopfox.com/blog/2015/04/vulnerable-by-design-understanding-server-side-request-forgery/">Understanding Server-Side Request Forgery</a><br/>
<a href="https://cwe.mitre.org/data/definitions/73.html">CWE-73: External Control of File Name or Path</a><br/>
<a href="https://www.pwntester.com/blog/2013/11/28/abusing-jar-downloads/">Abusing jar:// downloads</a><br />
</p>
            
<h2>
<a name="WEAK_HOSTNAME_VERIFIER">WEAK_HOSTNAME_VERIFIER: HostnameVerifier that accept any signed certificates</a>
</h2>
            
<p>A <code>HostnameVerifier</code> that accept any host are often use because of certificate reuse on many hosts.
As a consequence, this is vulnerable to
<a href="https://en.wikipedia.org/wiki/Man-in-the-middle_attack">Man-in-the-middle attacks</a>
since the client will trust any certificate.
</p>
<p>
A TrustManager allowing specific certificates (based on a truststore for example) should be built.
Wildcard certificates should be created for reused on multiples subdomains.
Detailed information for a proper implementation is available at:
<a href="https://stackoverflow.com/a/6378872/89769">[1]</a>
<a href="https://stackoverflow.com/a/5493452/89769">[2]</a>
</p>
<br/>
<p>
    <b>Vulnerable Code:</b><br/>
<pre>public class AllHosts implements HostnameVerifier {
    public boolean verify(final String hostname, final SSLSession session) {
        return true;
    }
}</pre>
</p>
<br/>
<p>
    <b>Solution (TrustMangager based on a keystore):</b><br/>
<pre>KeyStore ks = //Load keystore containing the certificates trusted

SSLContext sc = SSLContext.getInstance("TLS");

TrustManagerFactory tmf = TrustManagerFactory.getInstance("SunX509");
tmf.init(ks);

sc.init(kmf.getKeyManagers(), tmf.getTrustManagers(),null);
</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="http://projects.webappsec.org/w/page/13246945/Insufficient%20Transport%20Layer%20Protection">WASC-04: Insufficient Transport Layer Protection</a><br/>
<a href="https://cwe.mitre.org/data/definitions/295.html">CWE-295: Improper Certificate Validation</a>
</p>

        
<h2>
<a name="WEAK_TRUST_MANAGER">WEAK_TRUST_MANAGER: TrustManager that accept any certificates</a>
</h2>
            
<p>Empty TrustManager implementations are often used to connect easily to a host that is not signed by a root
<a href="https://en.wikipedia.org/wiki/Certificate_authority">certificate authority</a>. As a consequence, this is vulnerable to
<a href="https://en.wikipedia.org/wiki/Man-in-the-middle_attack">Man-in-the-middle attacks</a>
since the client will trust any certificate.
</p>
<p>
A TrustManager allowing specific certificates (based on a TrustStore for example) should be built.
Detailed information for a proper implementation is available at:
<a href="https://stackoverflow.com/a/6378872/89769">[1]</a>
<a href="https://stackoverflow.com/a/5493452/89769">[2]</a>
</p>
<br/>
<p>
    <b>Vulnerable Code:</b><br/>
<pre>class TrustAllManager implements X509TrustManager {

    @Override
    public void checkClientTrusted(X509Certificate[] x509Certificates, String s) throws CertificateException {
        //Trust any client connecting (no certificate validation)
    }

    @Override
    public void checkServerTrusted(X509Certificate[] x509Certificates, String s) throws CertificateException {
        //Trust any remote server (no certificate validation)
    }

    @Override
    public X509Certificate[] getAcceptedIssuers() {
        return null;
    }
}</pre>
</p>
<br/>
<p>
    <b>Solution (TrustMangager based on a keystore):</b><br/>
<pre>KeyStore ks = //Load keystore containing the certificates trusted

SSLContext sc = SSLContext.getInstance("TLS");

TrustManagerFactory tmf = TrustManagerFactory.getInstance("SunX509");
tmf.init(ks);

sc.init(kmf.getKeyManagers(), tmf.getTrustManagers(),null);
</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="http://projects.webappsec.org/w/page/13246945/Insufficient%20Transport%20Layer%20Protection">WASC-04: Insufficient Transport Layer Protection</a><br/>
<a href="https://cwe.mitre.org/data/definitions/295.html">CWE-295: Improper Certificate Validation</a>
</p>

        
<h2>
<a name="STATIC_IV">STATIC_IV: Static IV</a>
</h2>
            
<p>
    Initialization vector must be regenerated for each message to be encrypted.
</p>
<p><b>Vulnerable Code:</b></p>
<p>
<pre>
private static byte[] IV = new byte[16] {(byte)0,(byte)1,(byte)2,[...]};

public void encrypt(String message) throws Exception {

    IvParameterSpec ivSpec = new IvParameterSpec(IV);
[...]
</pre>
<p><b>Solution:</b></p>
<p>
<pre>
public void encrypt(String message) throws Exception {

    byte[] iv = new byte[16];
    new SecureRandom().nextBytes(iv);

    IvParameterSpec ivSpec = new IvParameterSpec(iv);
[...]
</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://en.wikipedia.org/wiki/Initialization_vector">Wikipedia: Initialization vector</a><br/>
<a href="https://cwe.mitre.org/data/definitions/329.html">CWE-329: Not Using a Random IV with CBC Mode</a><br/>
<a href="https://defuse.ca/cbcmodeiv.htm">Encryption - CBC Mode IV: Secret or Not?</a>
</p>
            
        </body>
</html>
