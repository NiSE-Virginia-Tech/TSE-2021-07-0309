<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>SpotBugs Report</title>
<style type="text/css">
		.tablerow0 {
			background: #EEEEEE;
		}

		.tablerow1 {
			background: white;
		}

		.detailrow0 {
			background: #EEEEEE;
		}

		.detailrow1 {
			background: white;
		}

		.tableheader {
			background: #b9b9fe;
			font-size: larger;
		}

		.tablerow0:hover, .tablerow1:hover {
			background: #aaffaa;
		}

		.priority-1 {
		    color: red;
		    font-weight: bold;
		}
		.priority-2 {
		    color: orange;
		    font-weight: bold;
		}
		.priority-3 {
		    color: green;
		    font-weight: bold;
		}
		.priority-4 {
		    color: blue;
		    font-weight: bold;
		}
		</style>
<script type="text/javascript">
			function toggleRow(elid) {
				if (document.getElementById) {
					element = document.getElementById(elid);
					if (element) {
						if (element.style.display == 'none') {
							element.style.display = 'block';
							//window.status = 'Toggle on!';
						} else {
							element.style.display = 'none';
							//window.status = 'Toggle off!';
						}
					}
				}
			}
		</script>
</head>
<body>
<h1>
<a href="https://spotbugs.github.io/">SpotBugs</a> Report</h1>
<h2>Project Information</h2>
<p>Project: 
		</p>
<p>SpotBugs version: 3.1.12</p>
<p>Code analyzed:</p>
<ul>
<li>/home/x/CryptoAPIDetect/dataset/MUBench/ha-bridge/target/ha-bridge-5.2.2.jar</li>
</ul>
<p>
<br/>
<br/>
</p>
<h2>Metrics</h2>
<p>248714 lines of code analyzed,
	in 5408 classes, 
	in 328 packages.</p>
<table width="500" cellpadding="5" cellspacing="2">
<tr class="tableheader">
<th align="left">Metric</th>
<th align="right">Total</th>
<th align="right">Density*</th>
</tr>
<tr class="tablerow0">
<td>High Priority Warnings</td>
<td align="right">52</td>
<td align="right">0.21</td>
</tr>
<tr class="tablerow1">
<td>Medium Priority Warnings</td>
<td align="right">179</td>
<td align="right">0.72</td>
</tr>
<tr class="$totalClass">
<td>
<b>Total Warnings</b>
</td>
<td align="right">
<b>231</b>
</td>
<td align="right">
<b>0.93</b>
</td>
</tr>
</table>
<p>
<i>(* Defects per Thousand lines of non-commenting source statements)</i>
</p>
<p>
<br/>
<br/>
</p>
<h2>Contents</h2>
<ul>
<li>
<a href="#Warnings_SECURITY">Security Warnings</a>
</li>
<li>
<a href="#Details">Details</a>
</li>
</ul>
<h1>Summary</h1>
<table width="500" cellpadding="5" cellspacing="2">
<tr class="tableheader">
<th align="left">Warning Type</th>
<th align="right">Number</th>
</tr>
<tr class="tablerow0">
<td>
<a href="#Warnings_SECURITY">Security Warnings</a>
</td>
<td align="right">230</td>
</tr>
<tr class="tablerow1">
<td>
<b>Total</b>
</td>
<td align="right">
<b>230</b>
</td>
</tr>
</table>
<h1>Warnings</h1>
<p>Click on a warning row to see full context information.</p>
<h2>
<a name="Warnings_SECURITY">Security Warnings</a>
</h2>
<table class="warningtable" width="100%" cellspacing="0">
<tr class="tableheader">
<th align="left">Code</th>
<th align="left">Warning</th>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67078');">
<td>
<span class="priority-1">CIPINT</span>
</td>
<td>The cipher does not provide data integrity</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67078" style="display: none;">
<a href="#CIPHER_INTEGRITY">Bug type CIPHER_INTEGRITY (click for details)</a>
<br/>In class com.bwssystems.HABridge.BridgeSecurity<br/>In method com.bwssystems.HABridge.BridgeSecurity.decrypt(String)<br/>At BridgeSecurity.java:[line 342]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67132');">
<td>
<span class="priority-1">CIPINT</span>
</td>
<td>The cipher does not provide data integrity</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67132" style="display: none;">
<a href="#CIPHER_INTEGRITY">Bug type CIPHER_INTEGRITY (click for details)</a>
<br/>In class com.bwssystems.HABridge.BridgeSecurity<br/>In method com.bwssystems.HABridge.BridgeSecurity.encrypt(String)<br/>At BridgeSecurity.java:[line 330]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70903');">
<td>
<span class="priority-1">CIPINT</span>
</td>
<td>The cipher does not provide data integrity</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70903" style="display: none;">
<a href="#CIPHER_INTEGRITY">Bug type CIPHER_INTEGRITY (click for details)</a>
<br/>In class com.github.mob41.blapi.pkt.auth.AES<br/>In method com.github.mob41.blapi.pkt.auth.AES.decrypt(byte[])<br/>At AES.java:[line 57]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70957');">
<td>
<span class="priority-1">CIPINT</span>
</td>
<td>The cipher does not provide data integrity</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70957" style="display: none;">
<a href="#CIPHER_INTEGRITY">Bug type CIPHER_INTEGRITY (click for details)</a>
<br/>In class com.github.mob41.blapi.pkt.auth.AES<br/>In method com.github.mob41.blapi.pkt.auth.AES.encrypt(byte[])<br/>At AES.java:[line 51]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N74832');">
<td>
<span class="priority-1">CIPINT</span>
</td>
<td>The cipher does not provide data integrity</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N74832" style="display: none;">
<a href="#CIPHER_INTEGRITY">Bug type CIPHER_INTEGRITY (click for details)</a>
<br/>In class org.apache.http.impl.auth.NTLMEngineImpl<br/>In method org.apache.http.impl.auth.NTLMEngineImpl.RC4(byte[], byte[])<br/>At NTLMEngineImpl.java:[line 538]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N74886');">
<td>
<span class="priority-1">CIPINT</span>
</td>
<td>The cipher does not provide data integrity</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N74886" style="display: none;">
<a href="#CIPHER_INTEGRITY">Bug type CIPHER_INTEGRITY (click for details)</a>
<br/>In class org.apache.http.impl.auth.NTLMEngineImpl<br/>In method org.apache.http.impl.auth.NTLMEngineImpl.lmHash(String)<br/>At NTLMEngineImpl.java:[line 591]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N74940');">
<td>
<span class="priority-1">CIPINT</span>
</td>
<td>The cipher does not provide data integrity</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N74940" style="display: none;">
<a href="#CIPHER_INTEGRITY">Bug type CIPHER_INTEGRITY (click for details)</a>
<br/>In class org.apache.http.impl.auth.NTLMEngineImpl<br/>In method org.apache.http.impl.auth.NTLMEngineImpl.lmResponse(byte[], byte[])<br/>At NTLMEngineImpl.java:[line 681]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N75288');">
<td>
<span class="priority-1">CIPINT</span>
</td>
<td>The cipher does not provide data integrity</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N75288" style="display: none;">
<a href="#CIPHER_INTEGRITY">Bug type CIPHER_INTEGRITY (click for details)</a>
<br/>In class org.apache.http.impl.auth.NTLMEngineImpl$CipherGen<br/>In method org.apache.http.impl.auth.NTLMEngineImpl$CipherGen.getLanManagerSessionKey()<br/>At NTLMEngineImpl.java:[line 509]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N75342');">
<td>
<span class="priority-1">CIPINT</span>
</td>
<td>The cipher does not provide data integrity</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N75342" style="display: none;">
<a href="#CIPHER_INTEGRITY">Bug type CIPHER_INTEGRITY (click for details)</a>
<br/>In class org.apache.http.impl.auth.NTLMEngineImpl$CipherGen<br/>In method org.apache.http.impl.auth.NTLMEngineImpl$CipherGen.getLanManagerSessionKey()<br/>At NTLMEngineImpl.java:[line 512]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71065');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71065" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class com.google.common.base.Throwables<br/>In method com.google.common.base.Throwables.getStackTraceAsString(Throwable)<br/>At Throwables.java:[line 294]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N72608');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N72608" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class net.whistlingfish.harmony.Main<br/>In method net.whistlingfish.harmony.Main.execute(String[])<br/>At Main.java:[line 62]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N74449');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N74449" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class org.apache.commons.logging.impl.Jdk13LumberjackLogger<br/>In method org.apache.commons.logging.impl.Jdk13LumberjackLogger.getClassAndMethod()<br/>At Jdk13LumberjackLogger.java:[line 101]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N74503');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N74503" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class org.apache.commons.logging.impl.LogFactoryImpl<br/>In method org.apache.commons.logging.impl.LogFactoryImpl.handleFlawedDiscovery(String, ClassLoader, Throwable)<br/>At LogFactoryImpl.java:[line 1281]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N74557');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N74557" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class org.apache.commons.logging.impl.SimpleLog<br/>In method org.apache.commons.logging.impl.SimpleLog.log(int, Object, Throwable)<br/>At SimpleLog.java:[line 321]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N76884');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N76884" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class org.eclipse.jetty.server.handler.ErrorHandler<br/>In method org.eclipse.jetty.server.handler.ErrorHandler.writeErrorPageStacks(HttpServletRequest, Writer)<br/>At ErrorHandler.java:[line 330]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N76471');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N76471" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class org.eclipse.jetty.server.ShutdownMonitor<br/>In method org.eclipse.jetty.server.ShutdownMonitor.debug(Throwable)<br/>At ShutdownMonitor.java:[line 146]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N77734');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N77734" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class org.eclipse.jetty.util.log.Log<br/>In method org.eclipse.jetty.util.log.Log.initStandardLogging(Throwable)<br/>At Log.java:[line 202]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N77788');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N77788" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class org.eclipse.jetty.util.log.StdErrLog<br/>In method org.eclipse.jetty.util.log.StdErrLog.&lt;static initializer for StdErrLog&gt;()<br/>At StdErrLog.java:[line 125]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N80133');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N80133" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class org.eclipse.paho.client.mqttv3.logging.SimpleLogFormatter<br/>In method org.eclipse.paho.client.mqttv3.logging.SimpleLogFormatter.format(LogRecord)<br/>At SimpleLogFormatter.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N80829');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N80829" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class org.jivesoftware.smack.debugger.ConsoleDebugger<br/>In method org.jivesoftware.smack.debugger.ConsoleDebugger.log(String, Throwable)<br/>At ConsoleDebugger.java:[line 62]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N82250');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N82250" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class org.xmlpull.v1.builder.XmlBuilderException<br/>In method org.xmlpull.v1.builder.XmlBuilderException.printStackTrace(PrintStream)<br/>At XmlBuilderException.java:[line 47]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N82304');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N82304" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class org.xmlpull.v1.builder.XmlBuilderException<br/>In method org.xmlpull.v1.builder.XmlBuilderException.printStackTrace(PrintWriter)<br/>At XmlBuilderException.java:[line 63]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67918');">
<td>
<span class="priority-2">SECCI</span>
</td>
<td>This usage of java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process; can be vulnerable to Command Injection</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67918" style="display: none;">
<a href="#COMMAND_INJECTION">Bug type COMMAND_INJECTION (click for details)</a>
<br/>In class com.bwssystems.HABridge.plugins.exec.CommandHome<br/>In method com.bwssystems.HABridge.plugins.exec.CommandHome.doExecRequest(String, String)<br/>At CommandHome.java:[line 64]<br/>Sink method java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process;<br/>Sink parameter 0<br/>Unknown source com/bwssystems/HABridge/plugins/exec/CommandHome.doExecRequest(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>At DeviceDescriptor.java:[line 88]<br/>At DeviceDescriptor.java:[line 96]<br/>At DeviceDescriptor.java:[line 104]<br/>At DeviceDescriptor.java:[line 112]<br/>At DeviceDescriptor.java:[line 120]<br/>At DeviceDescriptor.java:[line 160]<br/>At DeviceDescriptor.java:[line 168]<br/>At DeviceDescriptor.java:[line 258]<br/>At DeviceDescriptor.java:[line 266]<br/>At DeviceDescriptor.java:[line 274]<br/>At BrightnessDecode.java:[line 64]<br/>At BrightnessDecode.java:[line 71]<br/>At BrightnessDecode.java:[line 76]<br/>At BrightnessDecode.java:[line 83]<br/>At BrightnessDecode.java:[line 100]<br/>At BrightnessDecode.java:[line 114]<br/>At BrightnessDecode.java:[line 120]<br/>At BrightnessDecode.java:[line 127]<br/>At BrightnessDecode.java:[line 138]<br/>At ColorDecode.java:[line 168]<br/>At ColorDecode.java:[line 173]<br/>At ColorDecode.java:[line 178]<br/>At ColorDecode.java:[line 183]<br/>At ColorDecode.java:[line 188]<br/>At ColorDecode.java:[line 193]<br/>At ColorDecode.java:[line 198]<br/>At ColorDecode.java:[line 202]<br/>At ColorDecode.java:[line 206]<br/>At ColorDecode.java:[line 209]<br/>At DeviceDataDecode.java:[line 30]<br/>At DeviceDataDecode.java:[line 35]<br/>At DeviceDataDecode.java:[line 40]<br/>At DeviceDataDecode.java:[line 45]<br/>At DeviceDataDecode.java:[line 50]<br/>At DeviceDataDecode.java:[line 55]<br/>At DeviceDataDecode.java:[line 60]<br/>At DeviceDataDecode.java:[line 65]<br/>At DeviceDataDecode.java:[line 70]<br/>At DeviceDataDecode.java:[line 75]<br/>At DeviceDataDecode.java:[line 79]<br/>At TimeDecode.java:[line 36]<br/>At TimeDecode.java:[line 43]<br/>At CommandHome.java:[line 38]<br/>At CommandHome.java:[line 41]<br/>At CommandHome.java:[line 43]<br/>At CommandHome.java:[line 45]<br/>At CommandHome.java:[line 46]<br/>At CommandHome.java:[line 52]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67804');">
<td>
<span class="priority-2">SECCRLFLOG</span>
</td>
<td>This use of org/slf4j/Logger.debug(Ljava/lang/String;)V might be used to include CRLF characters into log messages</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67804" style="display: none;">
<a href="#CRLF_INJECTION_LOGS">Bug type CRLF_INJECTION_LOGS (click for details)</a>
<br/>In class com.bwssystems.HABridge.hue.HueMulator<br/>In method com.bwssystems.HABridge.hue.HueMulator.lambda$setupServer$0(Request, Response)<br/>At HueMulator.java:[line 84]<br/>Sink method org/slf4j/Logger.debug(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source spark/Request.body<br/>Tainted source spark/Request.pathInfo()Ljava/lang/String;<br/>Unknown source spark/Request.body()Ljava/lang/String;<br/>Tainted source javax/servlet/http/HttpServletRequest.getPathInfo()Ljava/lang/String;<br/>At HueMulator.java:[line 84]<br/>At Request.java:[line 203]<br/>At Request.java:[line 250]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69171');">
<td>
<span class="priority-2">SECCRLFLOG</span>
</td>
<td>This use of org/slf4j/Logger.debug(Ljava/lang/String;)V might be used to include CRLF characters into log messages</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69171" style="display: none;">
<a href="#CRLF_INJECTION_LOGS">Bug type CRLF_INJECTION_LOGS (click for details)</a>
<br/>In class com.bwssystems.HABridge.plugins.fibaro.FibaroInfo<br/>In method com.bwssystems.HABridge.plugins.fibaro.FibaroInfo.getDevices()<br/>At FibaroInfo.java:[line 116]<br/>Sink method org/slf4j/Logger.debug(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Tainted source java/io/BufferedReader.readLine()Ljava/lang/String;<br/>Tainted source com/bwssystems/HABridge/plugins/fibaro/FibaroInfo.request(Ljava/lang/String;)Ljava/lang/String;<br/>At FibaroInfo.java:[line 69]<br/>At FibaroInfo.java:[line 71]<br/>At FibaroInfo.java:[line 74]<br/>At FibaroInfo.java:[line 115]<br/>At FibaroInfo.java:[line 116]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69295');">
<td>
<span class="priority-2">SECCRLFLOG</span>
</td>
<td>This use of org/slf4j/Logger.debug(Ljava/lang/String;)V might be used to include CRLF characters into log messages</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69295" style="display: none;">
<a href="#CRLF_INJECTION_LOGS">Bug type CRLF_INJECTION_LOGS (click for details)</a>
<br/>In class com.bwssystems.HABridge.plugins.fibaro.FibaroInfo<br/>In method com.bwssystems.HABridge.plugins.fibaro.FibaroInfo.getRooms()<br/>At FibaroInfo.java:[line 97]<br/>Sink method org/slf4j/Logger.debug(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Tainted source java/io/BufferedReader.readLine()Ljava/lang/String;<br/>Tainted source com/bwssystems/HABridge/plugins/fibaro/FibaroInfo.request(Ljava/lang/String;)Ljava/lang/String;<br/>At FibaroInfo.java:[line 69]<br/>At FibaroInfo.java:[line 71]<br/>At FibaroInfo.java:[line 74]<br/>At FibaroInfo.java:[line 96]<br/>At FibaroInfo.java:[line 97]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69419');">
<td>
<span class="priority-2">SECCRLFLOG</span>
</td>
<td>This use of org/slf4j/Logger.debug(Ljava/lang/String;)V might be used to include CRLF characters into log messages</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69419" style="display: none;">
<a href="#CRLF_INJECTION_LOGS">Bug type CRLF_INJECTION_LOGS (click for details)</a>
<br/>In class com.bwssystems.HABridge.plugins.fibaro.FibaroInfo<br/>In method com.bwssystems.HABridge.plugins.fibaro.FibaroInfo.getScenes()<br/>At FibaroInfo.java:[line 160]<br/>Sink method org/slf4j/Logger.debug(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Tainted source java/io/BufferedReader.readLine()Ljava/lang/String;<br/>Tainted source com/bwssystems/HABridge/plugins/fibaro/FibaroInfo.request(Ljava/lang/String;)Ljava/lang/String;<br/>At FibaroInfo.java:[line 69]<br/>At FibaroInfo.java:[line 71]<br/>At FibaroInfo.java:[line 74]<br/>At FibaroInfo.java:[line 159]<br/>At FibaroInfo.java:[line 160]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N84070');">
<td>
<span class="priority-2">SECCRLFLOG</span>
</td>
<td>This use of org/slf4j/Logger.info(Ljava/lang/String;[Ljava/lang/Object;)V might be used to include CRLF characters into log messages</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N84070" style="display: none;">
<a href="#CRLF_INJECTION_LOGS">Bug type CRLF_INJECTION_LOGS (click for details)</a>
<br/>In class spark.http.matching.MatcherFilter<br/>In method spark.http.matching.MatcherFilter.doFilter(ServletRequest, ServletResponse, FilterChain)<br/>At MatcherFilter.java:[line 162]<br/>Sink method org/slf4j/Logger.info(Ljava/lang/String;[Ljava/lang/Object;)V<br/>Sink parameter 0<br/>Tainted source javax/servlet/http/HttpServletRequest.getRequestURI()Ljava/lang/String;<br/>Tainted source javax/servlet/http/HttpServletRequest.getHeader(Ljava/lang/String;)Ljava/lang/String;<br/>At MatcherFilter.java:[line 103]<br/>At MatcherFilter.java:[line 104]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N85089');">
<td>
<span class="priority-2">SECCRLFLOG</span>
</td>
<td>This use of org/slf4j/Logger.warn(Ljava/lang/String;)V might be used to include CRLF characters into log messages</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N85089" style="display: none;">
<a href="#CRLF_INJECTION_LOGS">Bug type CRLF_INJECTION_LOGS (click for details)</a>
<br/>In class spark.staticfiles.StaticFilesConfiguration<br/>In method spark.staticfiles.StaticFilesConfiguration.consume(HttpServletRequest, HttpServletResponse)<br/>At StaticFilesConfiguration.java:[line 78]<br/>Sink method org/slf4j/Logger.warn(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source spark/staticfiles/DirectoryTraversal$DirectoryTraversalDetection.getMessage()Ljava/lang/String;<br/>Tainted source javax/servlet/http/HttpServletRequest.getPathInfo()Ljava/lang/String;<br/>At StaticFilesConfiguration.java:[line 78]<br/>At StaticFilesConfiguration.java:[line 79]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70729');">
<td>
<span class="priority-2">SECDESGAD</span>
</td>
<td>This class could make application using serialization vulnerable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70729" style="display: none;">
<a href="#DESERIALIZATION_GADGET">Bug type DESERIALIZATION_GADGET (click for details)</a>
<br/>In class com.fasterxml.jackson.databind.introspect.AnnotatedConstructor<br/>At AnnotatedConstructor.java:[lines 8-203]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70765');">
<td>
<span class="priority-2">SECDESGAD</span>
</td>
<td>This class could make application using serialization vulnerable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70765" style="display: none;">
<a href="#DESERIALIZATION_GADGET">Bug type DESERIALIZATION_GADGET (click for details)</a>
<br/>In class com.fasterxml.jackson.databind.introspect.AnnotatedMethod<br/>At AnnotatedMethod.java:[lines 8-288]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N74994');">
<td>
<span class="priority-2">SECDU</span>
</td>
<td>DES should be replaced with AES</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N74994" style="display: none;">
<a href="#DES_USAGE">Bug type DES_USAGE (click for details)</a>
<br/>In class org.apache.http.impl.auth.NTLMEngineImpl<br/>In method org.apache.http.impl.auth.NTLMEngineImpl.lmHash(String)<br/>At NTLMEngineImpl.java:[line 591]<br/>Sink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher;<br/>Sink parameter 0</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N75058');">
<td>
<span class="priority-2">SECDU</span>
</td>
<td>DES should be replaced with AES</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N75058" style="display: none;">
<a href="#DES_USAGE">Bug type DES_USAGE (click for details)</a>
<br/>In class org.apache.http.impl.auth.NTLMEngineImpl<br/>In method org.apache.http.impl.auth.NTLMEngineImpl.lmResponse(byte[], byte[])<br/>At NTLMEngineImpl.java:[line 681]<br/>Sink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher;<br/>Sink parameter 0</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N75396');">
<td>
<span class="priority-2">SECDU</span>
</td>
<td>DES should be replaced with AES</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N75396" style="display: none;">
<a href="#DES_USAGE">Bug type DES_USAGE (click for details)</a>
<br/>In class org.apache.http.impl.auth.NTLMEngineImpl$CipherGen<br/>In method org.apache.http.impl.auth.NTLMEngineImpl$CipherGen.getLanManagerSessionKey()<br/>At NTLMEngineImpl.java:[line 509]<br/>Sink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher;<br/>Sink parameter 0</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N75460');">
<td>
<span class="priority-2">SECDU</span>
</td>
<td>DES should be replaced with AES</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N75460" style="display: none;">
<a href="#DES_USAGE">Bug type DES_USAGE (click for details)</a>
<br/>In class org.apache.http.impl.auth.NTLMEngineImpl$CipherGen<br/>In method org.apache.http.impl.auth.NTLMEngineImpl$CipherGen.getLanManagerSessionKey()<br/>At NTLMEngineImpl.java:[line 512]<br/>Sink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher;<br/>Sink parameter 0</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N75122');">
<td>
<span class="priority-1">SECECB</span>
</td>
<td>The cipher uses ECB mode, which provides poor confidentiality for encrypted data</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N75122" style="display: none;">
<a href="#ECB_MODE">Bug type ECB_MODE (click for details)</a>
<br/>In class org.apache.http.impl.auth.NTLMEngineImpl<br/>In method org.apache.http.impl.auth.NTLMEngineImpl.lmHash(String)<br/>At NTLMEngineImpl.java:[line 591]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N75176');">
<td>
<span class="priority-1">SECECB</span>
</td>
<td>The cipher uses ECB mode, which provides poor confidentiality for encrypted data</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N75176" style="display: none;">
<a href="#ECB_MODE">Bug type ECB_MODE (click for details)</a>
<br/>In class org.apache.http.impl.auth.NTLMEngineImpl<br/>In method org.apache.http.impl.auth.NTLMEngineImpl.lmResponse(byte[], byte[])<br/>At NTLMEngineImpl.java:[line 681]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N75524');">
<td>
<span class="priority-1">SECECB</span>
</td>
<td>The cipher uses ECB mode, which provides poor confidentiality for encrypted data</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N75524" style="display: none;">
<a href="#ECB_MODE">Bug type ECB_MODE (click for details)</a>
<br/>In class org.apache.http.impl.auth.NTLMEngineImpl$CipherGen<br/>In method org.apache.http.impl.auth.NTLMEngineImpl$CipherGen.getLanManagerSessionKey()<br/>At NTLMEngineImpl.java:[line 509]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N75578');">
<td>
<span class="priority-1">SECECB</span>
</td>
<td>The cipher uses ECB mode, which provides poor confidentiality for encrypted data</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N75578" style="display: none;">
<a href="#ECB_MODE">Bug type ECB_MODE (click for details)</a>
<br/>In class org.apache.http.impl.auth.NTLMEngineImpl$CipherGen<br/>In method org.apache.http.impl.auth.NTLMEngineImpl$CipherGen.getLanManagerSessionKey()<br/>At NTLMEngineImpl.java:[line 512]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70801');">
<td>
<span class="priority-2">SECHCK</span>
</td>
<td>Hard coded cryptographic key found</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70801" style="display: none;">
<a href="#HARD_CODE_KEY">Bug type HARD_CODE_KEY (click for details)</a>
<br/>In class com.github.mob41.blapi.BLDevice<br/>Value is hard coded in field com.github.mob41.blapi.BLDevice.INITIAL_KEY[B with suspicious name<br/>Value is hard coded in field com.github.mob41.blapi.BLDevice.key[B with suspicious name<br/>At BLDevice.java:[lines 65-1054]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N79455');">
<td>
<span class="priority-2">SECHCK</span>
</td>
<td>Hard coded cryptographic key found</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N79455" style="display: none;">
<a href="#HARD_CODE_KEY">Bug type HARD_CODE_KEY (click for details)</a>
<br/>In class org.eclipse.paho.client.mqttv3.internal.security.SSLSocketFactoryFactory<br/>Value is hard coded in field org.eclipse.paho.client.mqttv3.internal.security.SSLSocketFactoryFactory.key[B with suspicious name<br/>At SSLSocketFactoryFactory.java:[lines 134-1351]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67186');">
<td>
<span class="priority-2">SECHCP</span>
</td>
<td>Hard coded password found</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67186" style="display: none;">
<a href="#HARD_CODE_PASSWORD">Bug type HARD_CODE_PASSWORD (click for details)</a>
<br/>In class com.bwssystems.HABridge.BridgeSettings<br/>In method com.bwssystems.HABridge.BridgeSettings.buildSettings()<br/>At BridgeSettings.java:[line 166]<br/>Sink method com/bwssystems/HABridge/BridgeSettingsDescriptor.setNestpwd(Ljava/lang/String;)V<br/>Sink parameter 0</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N79868');">
<td>
<span class="priority-2">SECHCP</span>
</td>
<td>Hard coded password found</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N79868" style="display: none;">
<a href="#HARD_CODE_PASSWORD">Bug type HARD_CODE_PASSWORD (click for details)</a>
<br/>In class org.eclipse.paho.client.mqttv3.internal.security.SimpleBase64Encoder<br/>Value is hard coded in field org.eclipse.paho.client.mqttv3.internal.security.SimpleBase64Encoder.PWDCHARS_ARRAY[C with suspicious name<br/>At SimpleBase64Encoder.java:[lines 18-124]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N76364');">
<td>
<span class="priority-2">SECHOC</span>
</td>
<td>Cookie without the HttpOnly flag could be read by a malicious script in the browser</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N76364" style="display: none;">
<a href="#HTTPONLY_COOKIE">Bug type HTTPONLY_COOKIE (click for details)</a>
<br/>In class org.eclipse.jetty.server.CookieCutter<br/>In method org.eclipse.jetty.server.CookieCutter.parseFields()<br/>At CookieCutter.java:[line 372]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N82610');">
<td>
<span class="priority-2">SECHOC</span>
</td>
<td>Cookie without the HttpOnly flag could be read by a malicious script in the browser</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N82610" style="display: none;">
<a href="#HTTPONLY_COOKIE">Bug type HTTPONLY_COOKIE (click for details)</a>
<br/>In class spark.Response<br/>In method spark.Response.cookie(String, String, String, String, int, boolean, boolean)<br/>At Response.java:[line 245]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N82663');">
<td>
<span class="priority-2">SECHOC</span>
</td>
<td>Cookie without the HttpOnly flag could be read by a malicious script in the browser</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N82663" style="display: none;">
<a href="#HTTPONLY_COOKIE">Bug type HTTPONLY_COOKIE (click for details)</a>
<br/>In class spark.Response<br/>In method spark.Response.removeCookie(String, String)<br/>At Response.java:[line 270]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70095');">
<td>
<span class="priority-2">SECHPP</span>
</td>
<td>Concatenating user-controlled input into a URL</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70095" style="display: none;">
<a href="#HTTP_PARAMETER_POLLUTION">Bug type HTTP_PARAMETER_POLLUTION (click for details)</a>
<br/>In class com.bwssystems.nest.controller.Nest<br/>In method com.bwssystems.nest.controller.Nest._getStatus()<br/>At Nest.java:[line 51]<br/>Sink method org/apache/http/client/methods/HttpGet.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/bwssystems/nest/protocol/auth/SessionAuthorization.userid<br/>Unknown source com/bwssystems/nest/controller/NestSession.getUserid()Ljava/lang/String;<br/>Unknown source com/bwssystems/nest/protocol/auth/SessionAuthorization.getUserid()Ljava/lang/String;<br/>Unknown source com/bwssystems/nest/controller/NestSession.getTransport_url()Ljava/lang/String;<br/>Unknown source com/bwssystems/nest/protocol/auth/Urls.getTransport_url()Ljava/lang/String;<br/>Unknown source com/bwssystems/nest/protocol/auth/Urls.transport_url<br/>At Nest.java:[line 49]<br/>At NestSession.java:[line 148]<br/>At NestSession.java:[line 152]<br/>At SessionAuthorization.java:[line 76]<br/>At Urls.java:[line 11]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N82716');">
<td>
<span class="priority-2">SECHRS</span>
</td>
<td>This use of javax/servlet/http/HttpServletResponse.addHeader(Ljava/lang/String;Ljava/lang/String;)V might be used to include CRLF characters into HTTP headers</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N82716" style="display: none;">
<a href="#HTTP_RESPONSE_SPLITTING">Bug type HTTP_RESPONSE_SPLITTING (click for details)</a>
<br/>In class spark.Response<br/>In method spark.Response.header(String, String)<br/>At Response.java:[line 155]<br/>Sink method javax/servlet/http/HttpServletResponse.addHeader(Ljava/lang/String;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source spark/Response.header(Ljava/lang/String;Ljava/lang/String;)V parameter 0<br/>Method usage with tainted arguments detected<br/>At SystemControl.java:[line 134]<br/>At SystemControl.java:[line 136]<br/>At SystemControl.java:[line 163]<br/>At SystemControl.java:[line 165]<br/>At SystemControl.java:[line 198]<br/>At SystemControl.java:[line 200]<br/>At SystemControl.java:[line 227]<br/>At SystemControl.java:[line 229]<br/>At SystemControl.java:[line 249]<br/>At SystemControl.java:[line 251]<br/>At SystemControl.java:[line 289]<br/>At SystemControl.java:[line 291]<br/>At SystemControl.java:[line 318]<br/>At SystemControl.java:[line 320]<br/>At SystemControl.java:[line 340]<br/>At SystemControl.java:[line 342]<br/>At SystemControl.java:[line 372]<br/>At SystemControl.java:[line 374]<br/>At SystemControl.java:[line 393]<br/>At SystemControl.java:[line 395]<br/>At SystemControl.java:[line 409]<br/>At SystemControl.java:[line 411]<br/>At SystemControl.java:[line 433]<br/>At SystemControl.java:[line 435]<br/>At SystemControl.java:[line 452]<br/>At SystemControl.java:[line 454]<br/>At SystemControl.java:[line 473]<br/>At SystemControl.java:[line 475]<br/>At DeviceResource.java:[line 79]<br/>At DeviceResource.java:[line 81]<br/>At DeviceResource.java:[line 147]<br/>At DeviceResource.java:[line 156]<br/>At DeviceResource.java:[line 158]<br/>At DeviceResource.java:[line 352]<br/>At DeviceResource.java:[line 354]<br/>At DeviceResource.java:[line 373]<br/>At DeviceResource.java:[line 375]<br/>At DeviceResource.java:[line 390]<br/>At DeviceResource.java:[line 392]<br/>At DeviceResource.java:[line 409]<br/>At DeviceResource.java:[line 411]<br/>At HueMulator.java:[line 103]<br/>At HueMulator.java:[line 111]<br/>At HueMulator.java:[line 119]<br/>At HueMulator.java:[line 121]<br/>At HueMulator.java:[line 128]<br/>At HueMulator.java:[line 136]<br/>At HueMulator.java:[line 144]<br/>At HueMulator.java:[line 152]<br/>At HueMulator.java:[line 160]<br/>At HueMulator.java:[line 168]<br/>At HueMulator.java:[line 170]<br/>At HueMulator.java:[line 177]<br/>At HueMulator.java:[line 186]<br/>At HueMulator.java:[line 194]<br/>At HueMulator.java:[line 196]<br/>At HueMulator.java:[line 203]<br/>At HueMulator.java:[line 212]<br/>At HueMulator.java:[line 220]<br/>At HueMulator.java:[line 222]<br/>At HueMulator.java:[line 229]<br/>At HueMulator.java:[line 238]<br/>At HueMulator.java:[line 246]<br/>At HueMulator.java:[line 248]<br/>At HueMulator.java:[line 255]<br/>At HueMulator.java:[line 264]<br/>At HueMulator.java:[line 272]<br/>At HueMulator.java:[line 274]<br/>At HueMulator.java:[line 281]<br/>At HueMulator.java:[line 290]<br/>At HueMulator.java:[line 299]<br/>At HueMulator.java:[line 308]<br/>At HueMulator.java:[line 310]<br/>At HueMulator.java:[line 317]<br/>At HueMulator.java:[line 326]<br/>At HueMulator.java:[line 328]<br/>At HueMulator.java:[line 335]<br/>At HueMulator.java:[line 344]<br/>At HueMulator.java:[line 353]<br/>At HueMulator.java:[line 361]<br/>At HueMulator.java:[line 363]<br/>At HueMulator.java:[line 370]<br/>At HueMulator.java:[line 384]<br/>At HueMulator.java:[line 393]<br/>At HueMulator.java:[line 402]<br/>At HueMulator.java:[line 412]<br/>At HueMulator.java:[line 414]<br/>At HueMulator.java:[line 423]<br/>At HueMulator.java:[line 432]<br/>At HueMulator.java:[line 434]<br/>At HueMulator.java:[line 441]<br/>At Request.java:[line 317]<br/>At ResponseWrapper.java:[line 101]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N76417');">
<td>
<span class="priority-2">SECIC</span>
</td>
<td>Cookie without the secure flag could be sent in clear text if a HTTP URL is visited</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N76417" style="display: none;">
<a href="#INSECURE_COOKIE">Bug type INSECURE_COOKIE (click for details)</a>
<br/>In class org.eclipse.jetty.server.CookieCutter<br/>In method org.eclipse.jetty.server.CookieCutter.parseFields()<br/>At CookieCutter.java:[line 372]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N83720');">
<td>
<span class="priority-2">SECIC</span>
</td>
<td>Cookie without the secure flag could be sent in clear text if a HTTP URL is visited</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N83720" style="display: none;">
<a href="#INSECURE_COOKIE">Bug type INSECURE_COOKIE (click for details)</a>
<br/>In class spark.Response<br/>In method spark.Response.cookie(String, String, String, String, int, boolean, boolean)<br/>At Response.java:[line 245]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N83774');">
<td>
<span class="priority-2">SECIC</span>
</td>
<td>Cookie without the secure flag could be sent in clear text if a HTTP URL is visited</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N83774" style="display: none;">
<a href="#INSECURE_COOKIE">Bug type INSECURE_COOKIE (click for details)</a>
<br/>In class spark.Response<br/>In method spark.Response.removeCookie(String, String)<br/>At Response.java:[line 270]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N74723');">
<td>
<span class="priority-2">SECLDAPI</span>
</td>
<td>This use of javax/naming/ldap/LdapName.&lt;init&gt;(Ljava/lang/String;)V can be vulnerable to LDAP injection</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N74723" style="display: none;">
<a href="#LDAP_INJECTION">Bug type LDAP_INJECTION (click for details)</a>
<br/>In class org.apache.http.conn.ssl.DefaultHostnameVerifier<br/>In method org.apache.http.conn.ssl.DefaultHostnameVerifier.extractCN(String)<br/>At DefaultHostnameVerifier.java:[line 238]<br/>Sink method javax/naming/ldap/LdapName.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/http/conn/ssl/DefaultHostnameVerifier.extractCN(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>At AbstractVerifier.java:[line 139]<br/>At AbstractVerifier.java:[line 221]<br/>At AbstractVerifier.java:[line 223]<br/>At DefaultHostnameVerifier.java:[line 115]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N79254');">
<td>
<span class="priority-2">SECLDAPI</span>
</td>
<td>This use of javax/naming/ldap/LdapName.&lt;init&gt;(Ljava/lang/String;)V can be vulnerable to LDAP injection</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N79254" style="display: none;">
<a href="#LDAP_INJECTION">Bug type LDAP_INJECTION (click for details)</a>
<br/>In class org.eclipse.jetty.util.ssl.X509<br/>In method new org.eclipse.jetty.util.ssl.X509(String, X509Certificate)<br/>At X509.java:[line 97]<br/>Sink method javax/naming/ldap/LdapName.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source javax/security/auth/x500/X500Principal.getName(Ljava/lang/String;)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N80883');">
<td>
<span class="priority-2">SECLDAPI</span>
</td>
<td>This use of javax/naming/ldap/LdapName.&lt;init&gt;(Ljava/lang/String;)V can be vulnerable to LDAP injection</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N80883" style="display: none;">
<a href="#LDAP_INJECTION">Bug type LDAP_INJECTION (click for details)</a>
<br/>In class org.jivesoftware.smack.java7.XmppHostnameVerifier<br/>In method org.jivesoftware.smack.java7.XmppHostnameVerifier.matchDns(String, X509Certificate)<br/>At XmppHostnameVerifier.java:[line 167]<br/>Sink method javax/naming/ldap/LdapName.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source javax/security/auth/x500/X500Principal.getName()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N72662');">
<td>
<span class="priority-1">SECMD5</span>
</td>
<td>This API MD2 (MDX) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N72662" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_MD5">Bug type WEAK_MESSAGE_DIGEST_MD5 (click for details)</a>
<br/>In class org.apache.commons.codec.digest.DigestUtils<br/>In method org.apache.commons.codec.digest.DigestUtils.getMd2Digest()<br/>At DigestUtils.java:[line 85]<br/>Value MD2</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N72720');">
<td>
<span class="priority-1">SECMD5</span>
</td>
<td>This API MD5 (MDX) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N72720" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_MD5">Bug type WEAK_MESSAGE_DIGEST_MD5 (click for details)</a>
<br/>In class org.apache.commons.codec.digest.DigestUtils<br/>In method org.apache.commons.codec.digest.DigestUtils.getMd5Digest()<br/>At DigestUtils.java:[line 98]<br/>Value MD5</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N72778');">
<td>
<span class="priority-1">SECMD5</span>
</td>
<td>This API MD2 (MDX) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N72778" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_MD5">Bug type WEAK_MESSAGE_DIGEST_MD5 (click for details)</a>
<br/>In class org.apache.commons.codec.digest.DigestUtils<br/>In method org.apache.commons.codec.digest.DigestUtils.md2(InputStream)<br/>At DigestUtils.java:[line 199]<br/>Value MD2</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N72836');">
<td>
<span class="priority-1">SECMD5</span>
</td>
<td>This API MD2 (MDX) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N72836" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_MD5">Bug type WEAK_MESSAGE_DIGEST_MD5 (click for details)</a>
<br/>In class org.apache.commons.codec.digest.DigestUtils<br/>In method org.apache.commons.codec.digest.DigestUtils.md2(String)<br/>At DigestUtils.java:[line 211]<br/>Value MD2</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N72894');">
<td>
<span class="priority-1">SECMD5</span>
</td>
<td>This API MD2 (MDX) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N72894" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_MD5">Bug type WEAK_MESSAGE_DIGEST_MD5 (click for details)</a>
<br/>In class org.apache.commons.codec.digest.DigestUtils<br/>In method org.apache.commons.codec.digest.DigestUtils.md2(byte[])<br/>At DigestUtils.java:[line 185]<br/>Value MD2</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N72952');">
<td>
<span class="priority-1">SECMD5</span>
</td>
<td>This API MD2 (MDX) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N72952" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_MD5">Bug type WEAK_MESSAGE_DIGEST_MD5 (click for details)</a>
<br/>In class org.apache.commons.codec.digest.DigestUtils<br/>In method org.apache.commons.codec.digest.DigestUtils.md2Hex(InputStream)<br/>At DigestUtils.java:[line 237]<br/>Value MD2</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N73010');">
<td>
<span class="priority-1">SECMD5</span>
</td>
<td>This API MD2 (MDX) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N73010" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_MD5">Bug type WEAK_MESSAGE_DIGEST_MD5 (click for details)</a>
<br/>In class org.apache.commons.codec.digest.DigestUtils<br/>In method org.apache.commons.codec.digest.DigestUtils.md2Hex(String)<br/>At DigestUtils.java:[line 249]<br/>Value MD2</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N73068');">
<td>
<span class="priority-1">SECMD5</span>
</td>
<td>This API MD2 (MDX) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N73068" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_MD5">Bug type WEAK_MESSAGE_DIGEST_MD5 (click for details)</a>
<br/>In class org.apache.commons.codec.digest.DigestUtils<br/>In method org.apache.commons.codec.digest.DigestUtils.md2Hex(byte[])<br/>At DigestUtils.java:[line 223]<br/>Value MD2</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N73126');">
<td>
<span class="priority-1">SECMD5</span>
</td>
<td>This API MD5 (MDX) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N73126" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_MD5">Bug type WEAK_MESSAGE_DIGEST_MD5 (click for details)</a>
<br/>In class org.apache.commons.codec.digest.DigestUtils<br/>In method org.apache.commons.codec.digest.DigestUtils.md5(InputStream)<br/>At DigestUtils.java:[line 274]<br/>Value MD5</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N73184');">
<td>
<span class="priority-1">SECMD5</span>
</td>
<td>This API MD5 (MDX) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N73184" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_MD5">Bug type WEAK_MESSAGE_DIGEST_MD5 (click for details)</a>
<br/>In class org.apache.commons.codec.digest.DigestUtils<br/>In method org.apache.commons.codec.digest.DigestUtils.md5(String)<br/>At DigestUtils.java:[line 285]<br/>Value MD5</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N73242');">
<td>
<span class="priority-1">SECMD5</span>
</td>
<td>This API MD5 (MDX) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N73242" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_MD5">Bug type WEAK_MESSAGE_DIGEST_MD5 (click for details)</a>
<br/>In class org.apache.commons.codec.digest.DigestUtils<br/>In method org.apache.commons.codec.digest.DigestUtils.md5(byte[])<br/>At DigestUtils.java:[line 260]<br/>Value MD5</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N73300');">
<td>
<span class="priority-1">SECMD5</span>
</td>
<td>This API MD5 (MDX) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N73300" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_MD5">Bug type WEAK_MESSAGE_DIGEST_MD5 (click for details)</a>
<br/>In class org.apache.commons.codec.digest.DigestUtils<br/>In method org.apache.commons.codec.digest.DigestUtils.md5Hex(InputStream)<br/>At DigestUtils.java:[line 310]<br/>Value MD5</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N73358');">
<td>
<span class="priority-1">SECMD5</span>
</td>
<td>This API MD5 (MDX) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N73358" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_MD5">Bug type WEAK_MESSAGE_DIGEST_MD5 (click for details)</a>
<br/>In class org.apache.commons.codec.digest.DigestUtils<br/>In method org.apache.commons.codec.digest.DigestUtils.md5Hex(String)<br/>At DigestUtils.java:[line 321]<br/>Value MD5</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N73416');">
<td>
<span class="priority-1">SECMD5</span>
</td>
<td>This API MD5 (MDX) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N73416" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_MD5">Bug type WEAK_MESSAGE_DIGEST_MD5 (click for details)</a>
<br/>In class org.apache.commons.codec.digest.DigestUtils<br/>In method org.apache.commons.codec.digest.DigestUtils.md5Hex(byte[])<br/>At DigestUtils.java:[line 296]<br/>Value MD5</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N75230');">
<td>
<span class="priority-1">SECMD5</span>
</td>
<td>This API MD5 (MDX) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N75230" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_MD5">Bug type WEAK_MESSAGE_DIGEST_MD5 (click for details)</a>
<br/>In class org.apache.http.impl.auth.NTLMEngineImpl<br/>In method org.apache.http.impl.auth.NTLMEngineImpl.ntlm2SessionResponse(byte[], byte[], byte[])<br/>At NTLMEngineImpl.java:[line 557]<br/>Value MD5</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N75632');">
<td>
<span class="priority-1">SECMD5</span>
</td>
<td>This API MD5 (MDX) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N75632" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_MD5">Bug type WEAK_MESSAGE_DIGEST_MD5 (click for details)</a>
<br/>In class org.apache.http.impl.auth.NTLMEngineImpl$HMACMD5<br/>In method new org.apache.http.impl.auth.NTLMEngineImpl$HMACMD5(byte[])<br/>At NTLMEngineImpl.java:[line 1568]<br/>Value MD5</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N75981');">
<td>
<span class="priority-1">SECMD5</span>
</td>
<td>This API MD5 (MDX) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N75981" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_MD5">Bug type WEAK_MESSAGE_DIGEST_MD5 (click for details)</a>
<br/>In class org.eclipse.jetty.security.authentication.DigestAuthenticator$Digest<br/>In method org.eclipse.jetty.security.authentication.DigestAuthenticator$Digest.check(Object)<br/>At DigestAuthenticator.java:[line 339]<br/>Value MD5</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N78976');">
<td>
<span class="priority-1">SECMD5</span>
</td>
<td>This API MD5 (MDX) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N78976" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_MD5">Bug type WEAK_MESSAGE_DIGEST_MD5 (click for details)</a>
<br/>In class org.eclipse.jetty.util.security.Credential$MD5<br/>In method org.eclipse.jetty.util.security.Credential$MD5.check(Object)<br/>At Credential.java:[line 212]<br/>Value MD5</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N79034');">
<td>
<span class="priority-1">SECMD5</span>
</td>
<td>This API MD5 (MDX) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N79034" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_MD5">Bug type WEAK_MESSAGE_DIGEST_MD5 (click for details)</a>
<br/>In class org.eclipse.jetty.util.security.Credential$MD5<br/>In method org.eclipse.jetty.util.security.Credential$MD5.digest(String)<br/>At Credential.java:[line 261]<br/>Value MD5</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N81162');">
<td>
<span class="priority-1">SECMD5</span>
</td>
<td>This API MD5 (MDX) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N81162" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_MD5">Bug type WEAK_MESSAGE_DIGEST_MD5 (click for details)</a>
<br/>In class org.jivesoftware.smack.util.MD5<br/>In method org.jivesoftware.smack.util.MD5.&lt;static initializer for MD5&gt;()<br/>At MD5.java:[line 31]<br/>Value MD5</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71177');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy.readEntries(ObjectInputStream)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71177" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy<br/>In method com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy.readEntries(ObjectInputStream)<br/>At MapMakerInternalMap.java:[line 2688]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71231');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy.readEntries(ObjectInputStream)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71231" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy<br/>In method com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy.readEntries(ObjectInputStream)<br/>At MapMakerInternalMap.java:[line 2692]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71285');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in com.google.common.collect.Serialization.populateMap(Map, ObjectInputStream, int)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71285" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class com.google.common.collect.Serialization<br/>In method com.google.common.collect.Serialization.populateMap(Map, ObjectInputStream, int)<br/>At Serialization.java:[line 87]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71339');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in com.google.common.collect.Serialization.populateMap(Map, ObjectInputStream, int)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71339" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class com.google.common.collect.Serialization<br/>In method com.google.common.collect.Serialization.populateMap(Map, ObjectInputStream, int)<br/>At Serialization.java:[line 89]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71393');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in com.google.common.collect.Serialization.populateMultimap(Multimap, ObjectInputStream, int)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71393" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class com.google.common.collect.Serialization<br/>In method com.google.common.collect.Serialization.populateMultimap(Multimap, ObjectInputStream, int)<br/>At Serialization.java:[line 180]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71447');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in com.google.common.collect.Serialization.populateMultimap(Multimap, ObjectInputStream, int)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71447" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class com.google.common.collect.Serialization<br/>In method com.google.common.collect.Serialization.populateMultimap(Multimap, ObjectInputStream, int)<br/>At Serialization.java:[line 185]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71501');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in com.google.common.collect.Serialization.populateMultiset(Multiset, ObjectInputStream, int)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71501" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class com.google.common.collect.Serialization<br/>In method com.google.common.collect.Serialization.populateMultiset(Multiset, ObjectInputStream, int)<br/>At Serialization.java:[line 132]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N75690');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in org.apache.http.impl.client.BasicAuthCache.get(HttpHost)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N75690" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class org.apache.http.impl.client.BasicAuthCache<br/>In method org.apache.http.impl.client.BasicAuthCache.get(HttpHost)<br/>At BasicAuthCache.java:[line 130]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N81616');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in org.jivesoftware.smack.util.stringencoder.java7.Base64.decodeToObject(String)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N81616" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class org.jivesoftware.smack.util.stringencoder.java7.Base64<br/>In method org.jivesoftware.smack.util.stringencoder.java7.Base64.decodeToObject(String)<br/>At Base64.java:[line 970]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70845');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70845" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class com.github.mob41.blapi.BLDevice<br/>In method new com.github.mob41.blapi.BLDevice(short, String, String, Mac)<br/>At BLDevice.java:[line 302]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71119');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71119" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class com.google.common.cache.Striped64<br/>In method com.google.common.cache.Striped64.&lt;static initializer for Striped64&gt;()<br/>At Striped64.java:[line 132]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N77167');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N77167" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.eclipse.jetty.server.session.DefaultSessionIdManager<br/>In method org.eclipse.jetty.server.session.DefaultSessionIdManager.initRandom()<br/>At DefaultSessionIdManager.java:[line 411]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N76525');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.lang.Math.random()) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N76525" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.eclipse.jetty.server.ShutdownMonitor<br/>In method org.eclipse.jetty.server.ShutdownMonitor.listen()<br/>At ShutdownMonitor.java:[line 285]<br/>Value java.lang.Math.random()</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N79908');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N79908" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.eclipse.paho.client.mqttv3.internal.websocket.WebSocketFrame<br/>In method org.eclipse.paho.client.mqttv3.internal.websocket.WebSocketFrame.generateMaskingKey()<br/>At WebSocketFrame.java:[line 294]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N80771');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N80771" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.jivesoftware.smack.ReconnectionManager<br/>In method new org.jivesoftware.smack.ReconnectionManager(AbstractXMPPConnection)<br/>At ReconnectionManager.java:[line 105]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N81046');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.lang.Math.random()) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N81046" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.jivesoftware.smack.util.DNSUtil<br/>In method org.jivesoftware.smack.util.DNSUtil.sortSRVRecords(List)<br/>At DNSUtil.java:[line 277]<br/>Value java.lang.Math.random()</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N81104');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.lang.Math.random()) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N81104" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.jivesoftware.smack.util.DNSUtil<br/>In method org.jivesoftware.smack.util.DNSUtil.sortSRVRecords(List)<br/>At DNSUtil.java:[line 279]<br/>Value java.lang.Math.random()</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N81278');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N81278" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.jivesoftware.smack.util.StringUtils$1<br/>In method org.jivesoftware.smack.util.StringUtils$1.initialValue()<br/>At StringUtils.java:[line 277]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65551');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65551" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class ch.qos.logback.classic.jmx.JMXConfigurator<br/>In method ch.qos.logback.classic.jmx.JMXConfigurator.reloadByFileName(String)<br/>At JMXConfigurator.java:[line 104]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source ch/qos/logback/classic/jmx/JMXConfigurator.reloadByFileName(Ljava/lang/String;)V parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65625');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65625" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class ch.qos.logback.core.FileAppender<br/>In method ch.qos.logback.core.FileAppender.openFile(String)<br/>At FileAppender.java:[line 198]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source ch/qos/logback/core/FileAppender.openFile(Ljava/lang/String;)V parameter 0<br/>At FileAppender.java:[line 100]<br/>At FileAppender.java:[line 127]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66027');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66027" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class ch.qos.logback.core.joran.action.IncludeAction<br/>In method ch.qos.logback.core.joran.action.IncludeAction.filePathAsURL(String)<br/>At IncludeAction.java:[line 150]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source ch/qos/logback/core/joran/action/IncludeAction.filePathAsURL(Ljava/lang/String;)Ljava/net/URL; parameter 0<br/>At IncludeAction.java:[line 167]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66235');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66235" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class ch.qos.logback.core.joran.action.PropertyAction<br/>In method ch.qos.logback.core.joran.action.PropertyAction.begin(InterpretationContext, String, Attributes)<br/>At PropertyAction.java:[line 69]<br/>Sink method java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source ch/qos/logback/core/util/OptionHelper.substVars(Ljava/lang/String;Lch/qos/logback/core/spi/PropertyContainer;Lch/qos/logback/core/spi/PropertyContainer;)Ljava/lang/String;<br/>Unknown source ch/qos/logback/core/joran/spi/InterpretationContext.subst(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source ch/qos/logback/core/subst/NodeToStringTransformer.substituteVariable(Ljava/lang/String;Lch/qos/logback/core/spi/PropertyContainer;Lch/qos/logback/core/spi/PropertyContainer;)Ljava/lang/String;<br/>At PropertyAction.java:[line 67]<br/>At InterpretationContext.java:[line 157]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65714');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65714" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class ch.qos.logback.core.joran.GenericConfigurator<br/>In method ch.qos.logback.core.joran.GenericConfigurator.doConfigure(String)<br/>At GenericConfigurator.java:[line 72]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source ch/qos/logback/core/joran/GenericConfigurator.doConfigure(Ljava/lang/String;)V parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66392');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66392" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class ch.qos.logback.core.joran.spi.ConfigurationWatchList<br/>In method ch.qos.logback.core.joran.spi.ConfigurationWatchList.convertToFile(URL)<br/>At ConfigurationWatchList.java:[line 95]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source ch/qos/logback/core/joran/spi/ConfigurationWatchList.convertToFile(Ljava/net/URL;)Ljava/io/File; parameter 0<br/>Unknown source java/net/URLDecoder.decode(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source java/net/URL.getFile()Ljava/lang/String;<br/>At JMXConfigurator.java:[line 99]<br/>At JMXConfigurator.java:[line 100]<br/>At JMXConfigurator.java:[line 108]<br/>At JMXConfigurator.java:[line 109]<br/>At JMXConfigurator.java:[line 145]<br/>At ReconfigureOnChangeTask.java:[line 58]<br/>At ReconfigureOnChangeTask.java:[line 65]<br/>At ReconfigureOnChangeTask.java:[line 114]<br/>At ContextJNDISelector.java:[line 158]<br/>At ContextInitializer.java:[line 75]<br/>At ContextInitializer.java:[line 84]<br/>At ContextInitializer.java:[line 104]<br/>At ContextInitializer.java:[line 120]<br/>At ContextInitializer.java:[line 148]<br/>At ContextInitializer.java:[line 150]<br/>At GenericConfigurator.java:[line 46]<br/>At GenericConfigurator.java:[line 78]<br/>At GenericConfigurator.java:[line 79]<br/>At GenericConfigurator.java:[line 100]<br/>At IncludeAction.java:[line 117]<br/>At IncludeAction.java:[line 152]<br/>At IncludeAction.java:[line 167]<br/>At IncludeAction.java:[line 172]<br/>At IncludeAction.java:[line 185]<br/>At IncludeAction.java:[line 189]<br/>At ConfigurationWatchList.java:[line 55]<br/>At ConfigurationWatchList.java:[line 59]<br/>At ConfigurationWatchList.java:[line 67]<br/>At ConfigurationWatchList.java:[line 71]<br/>At ConfigurationWatchList.java:[line 95]<br/>At ConfigurationWatchListUtil.java:[line 50]<br/>At ConfigurationWatchListUtil.java:[line 67]<br/>At ConfigurationWatchListUtil.java:[line 68]<br/>At OptionHelper.java:[line 177]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66930');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66930" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class ch.qos.logback.core.util.FileUtil<br/>In method ch.qos.logback.core.util.FileUtil.copy(String, String)<br/>At FileUtil.java:[line 101]<br/>Sink method java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source ch/qos/logback/core/util/FileUtil.copy(Ljava/lang/String;Ljava/lang/String;)V parameter 1<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67250');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67250" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class com.bwssystems.HABridge.BridgeSettings<br/>In method com.bwssystems.HABridge.BridgeSettings._loadConfig()<br/>At BridgeSettings.java:[line 237]<br/>Sink method java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;<br/>Sink parameter 1<br/>Unknown source com/bwssystems/HABridge/BridgeSettingsDescriptor.configfile<br/>Unknown source com/bwssystems/HABridge/BridgeSettingsDescriptor.getConfigfile()Ljava/lang/String;<br/>At BridgeSettings.java:[line 237]<br/>At BridgeSettingsDescriptor.java:[line 315]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67344');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67344" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class com.bwssystems.HABridge.BridgeSettings<br/>In method com.bwssystems.HABridge.BridgeSettings.buildSettings()<br/>At BridgeSettings.java:[line 222]<br/>Sink method java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;<br/>Sink parameter 1<br/>Unknown source com/bwssystems/HABridge/BridgeSettingsDescriptor.configfile<br/>Unknown source com/bwssystems/HABridge/BridgeSettingsDescriptor.getConfigfile()Ljava/lang/String;<br/>At BridgeSettings.java:[line 222]<br/>At BridgeSettingsDescriptor.java:[line 315]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67438');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67438" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class com.bwssystems.HABridge.BridgeSettings<br/>In method com.bwssystems.HABridge.BridgeSettings.save(BridgeSettingsDescriptor)<br/>At BridgeSettings.java:[line 256]<br/>Sink method java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;<br/>Sink parameter 1<br/>Unknown source com/bwssystems/HABridge/BridgeSettingsDescriptor.configfile<br/>Unknown source com/bwssystems/HABridge/BridgeSettingsDescriptor.getConfigfile()Ljava/lang/String;<br/>At BridgeSettings.java:[line 256]<br/>At BridgeSettingsDescriptor.java:[line 315]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67532');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67532" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class com.bwssystems.HABridge.BridgeSettings<br/>In method com.bwssystems.HABridge.BridgeSettings.updateConfigFile()<br/>At BridgeSettings.java:[line 278]<br/>Sink method java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;<br/>Sink parameter 1<br/>Unknown source com/bwssystems/HABridge/BridgeSettingsDescriptor.configfile<br/>Unknown source com/bwssystems/HABridge/BridgeSettingsDescriptor.getConfigfile()Ljava/lang/String;<br/>At BridgeSettings.java:[line 278]<br/>At BridgeSettingsDescriptor.java:[line 315]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67626');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67626" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class com.bwssystems.HABridge.dao.DeviceRepository<br/>In method new com.bwssystems.HABridge.dao.DeviceRepository(String)<br/>At DeviceRepository.java:[line 54]<br/>Sink method java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;<br/>Sink parameter 1<br/>Unknown source com/bwssystems/HABridge/dao/DeviceRepository.&lt;init&gt;(Ljava/lang/String;)V parameter 0<br/>At BridgeSettingsDescriptor.java:[line 207]<br/>At DeviceResource.java:[line 50]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67715');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67715" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class com.bwssystems.HABridge.dao.GroupRepository<br/>In method new com.bwssystems.HABridge.dao.GroupRepository(String)<br/>At GroupRepository.java:[line 45]<br/>Sink method java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;<br/>Sink parameter 1<br/>Unknown source com/bwssystems/HABridge/dao/GroupRepository.&lt;init&gt;(Ljava/lang/String;)V parameter 0<br/>At BridgeSettingsDescriptor.java:[line 213]<br/>At DeviceResource.java:[line 51]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68467');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68467" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class com.bwssystems.HABridge.plugins.exec.CommandHome<br/>In method com.bwssystems.HABridge.plugins.exec.CommandHome.deviceHandler(CallItem, MultiCommandUtil, String, int, Integer, Integer, ColorData, DeviceDescriptor, String)<br/>At CommandHome.java:[line 49]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/bwssystems/HABridge/hue/BrightnessDecode.convertToHex(I)Ljava/lang/String;<br/>Unknown source com/bwssystems/HABridge/hue/TimeDecode.replaceTimeValue(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source com/bwssystems/HABridge/dao/DeviceDescriptor.deviceType<br/>Unknown source com/bwssystems/HABridge/dao/DeviceDescriptor.getComments()Ljava/lang/String;<br/>Unknown source com/bwssystems/HABridge/hue/BrightnessDecode.replaceIntensityValue(Ljava/lang/String;IZ)Ljava/lang/String; parameter 2<br/>Unknown source com/bwssystems/HABridge/dao/DeviceDescriptor.mapId<br/>Unknown source com/bwssystems/HABridge/dao/DeviceDescriptor.comments<br/>Unknown source com/bwssystems/HABridge/dao/DeviceDescriptor.getId()Ljava/lang/String;<br/>Unknown source com/bwssystems/HABridge/dao/DeviceDescriptor.name<br/>Unknown source com/bwssystems/HABridge/dao/DeviceDescriptor.targetDevice<br/>Unknown source com/bwssystems/HABridge/hue/ColorDecode.replaceColorData(Ljava/lang/String;Lcom/bwssystems/HABridge/hue/ColorData;IZ)Ljava/lang/String;<br/>Unknown source com/bwssystems/HABridge/dao/DeviceDescriptor.getDescription()Ljava/lang/String;<br/>Unknown source com/bwssystems/HABridge/hue/BrightnessDecode.replaceIntensityValue(Ljava/lang/String;IZ)Ljava/lang/String;<br/>Unknown source java/util/regex/Matcher.replaceFirst(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source com/bwssystems/HABridge/hue/ColorDecode.replaceColorData(Ljava/lang/String;Lcom/bwssystems/HABridge/hue/ColorData;IZ)Ljava/lang/String; parameter 3<br/>Unknown source com/bwssystems/HABridge/hue/TimeDecode.replaceTimeValue(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source com/bwssystems/HABridge/dao/DeviceDescriptor.mapType<br/>Unknown source com/bwssystems/HABridge/dao/DeviceDescriptor.getUniqueid()Ljava/lang/String;<br/>Unknown source com/bwssystems/HABridge/dao/DeviceDescriptor.getRequesterAddress()Ljava/lang/String;<br/>Unknown source com/bwssystems/HABridge/dao/DeviceDescriptor.id<br/>Unknown source com/bwssystems/HABridge/dao/DeviceDescriptor.getName()Ljava/lang/String;<br/>Unknown source com/google/gson/JsonElement.getAsString()Ljava/lang/String;<br/>Unknown source com/bwssystems/HABridge/hue/BrightnessDecode.calculateReplaceIntensityValue(Ljava/lang/String;ILjava/lang/Integer;Ljava/lang/Integer;Z)Ljava/lang/String;<br/>Unknown source com/bwssystems/HABridge/dao/DeviceDescriptor.description<br/>Unknown source com/bwssystems/HABridge/dao/DeviceDescriptor.requesterAddress<br/>Unknown source java/text/SimpleDateFormat.format(Ljava/util/Date;)Ljava/lang/String;<br/>Unknown source com/bwssystems/HABridge/dao/DeviceDescriptor.getDeviceType()Ljava/lang/String;<br/>Unknown source com/bwssystems/HABridge/dao/DeviceDescriptor.getTargetDevice()Ljava/lang/String;<br/>Unknown source com/bwssystems/HABridge/hue/DeviceDataDecode.replaceDeviceData(Ljava/lang/String;Lcom/bwssystems/HABridge/dao/DeviceDescriptor;)Ljava/lang/String;<br/>Unknown source com/bwssystems/HABridge/hue/DeviceDataDecode.replaceDeviceData(Ljava/lang/String;Lcom/bwssystems/HABridge/dao/DeviceDescriptor;)Ljava/lang/String; parameter 1<br/>Unknown source com/bwssystems/HABridge/dao/DeviceDescriptor.getMapId()Ljava/lang/String;<br/>Unknown source com/bwssystems/HABridge/dao/DeviceDescriptor.getMapType()Ljava/lang/String;<br/>Unknown source com/bwssystems/HABridge/hue/BrightnessDecode.calculateReplaceIntensityValue(Ljava/lang/String;ILjava/lang/Integer;Ljava/lang/Integer;Z)Ljava/lang/String; parameter 4<br/>Unknown source com/bwssystems/HABridge/dao/DeviceDescriptor.uniqueid<br/>At DeviceDescriptor.java:[line 88]<br/>At DeviceDescriptor.java:[line 96]<br/>At DeviceDescriptor.java:[line 104]<br/>At DeviceDescriptor.java:[line 112]<br/>At DeviceDescriptor.java:[line 120]<br/>At DeviceDescriptor.java:[line 160]<br/>At DeviceDescriptor.java:[line 168]<br/>At DeviceDescriptor.java:[line 258]<br/>At DeviceDescriptor.java:[line 266]<br/>At DeviceDescriptor.java:[line 274]<br/>At BrightnessDecode.java:[line 64]<br/>At BrightnessDecode.java:[line 71]<br/>At BrightnessDecode.java:[line 76]<br/>At BrightnessDecode.java:[line 83]<br/>At BrightnessDecode.java:[line 100]<br/>At BrightnessDecode.java:[line 114]<br/>At BrightnessDecode.java:[line 120]<br/>At BrightnessDecode.java:[line 127]<br/>At BrightnessDecode.java:[line 138]<br/>At ColorDecode.java:[line 168]<br/>At ColorDecode.java:[line 173]<br/>At ColorDecode.java:[line 178]<br/>At ColorDecode.java:[line 183]<br/>At ColorDecode.java:[line 188]<br/>At ColorDecode.java:[line 193]<br/>At ColorDecode.java:[line 198]<br/>At ColorDecode.java:[line 202]<br/>At ColorDecode.java:[line 206]<br/>At ColorDecode.java:[line 209]<br/>At DeviceDataDecode.java:[line 30]<br/>At DeviceDataDecode.java:[line 35]<br/>At DeviceDataDecode.java:[line 40]<br/>At DeviceDataDecode.java:[line 45]<br/>At DeviceDataDecode.java:[line 50]<br/>At DeviceDataDecode.java:[line 55]<br/>At DeviceDataDecode.java:[line 60]<br/>At DeviceDataDecode.java:[line 65]<br/>At DeviceDataDecode.java:[line 70]<br/>At DeviceDataDecode.java:[line 75]<br/>At DeviceDataDecode.java:[line 79]<br/>At TimeDecode.java:[line 36]<br/>At TimeDecode.java:[line 43]<br/>At CommandHome.java:[line 38]<br/>At CommandHome.java:[line 41]<br/>At CommandHome.java:[line 43]<br/>At CommandHome.java:[line 45]<br/>At CommandHome.java:[line 46]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69907');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69907" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class com.bwssystems.logservices.LoggingUtil<br/>In method com.bwssystems.logservices.LoggingUtil.getLogFile(String)<br/>At LoggingUtil.java:[line 185]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source ch/qos/logback/core/FileAppender.getFile()Ljava/lang/String;<br/>Unknown source ch/qos/logback/core/FileAppender.fileName<br/>At FileAppender.java:[line 100]<br/>At LoggingUtil.java:[line 185]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70001');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70001" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class com.bwssystems.logservices.LoggingUtil<br/>In method com.bwssystems.logservices.LoggingUtil.getLogFileInfos()<br/>At LoggingUtil.java:[line 145]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source ch/qos/logback/core/FileAppender.getFile()Ljava/lang/String;<br/>Unknown source ch/qos/logback/core/FileAppender.fileName<br/>At FileAppender.java:[line 100]<br/>At LoggingUtil.java:[line 145]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70238');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70238" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class com.fasterxml.jackson.core.JsonFactory<br/>In method com.fasterxml.jackson.core.JsonFactory._optimizedStreamFromURL(URL)<br/>At JsonFactory.java:[line 1541]<br/>Sink method java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/fasterxml/jackson/core/JsonFactory._optimizedStreamFromURL(Ljava/net/URL;)Ljava/io/InputStream; parameter 0<br/>Unknown source java/net/URL.getPath()Ljava/lang/String;<br/>Method usage not detected<br/>At JsonFactory.java:[line 783]<br/>At JsonFactory.java:[line 976]<br/>At JsonFactory.java:[line 1541]<br/>At ObjectMapper.java:[line 2458]<br/>At ObjectMapper.java:[line 2797]<br/>At ObjectMapper.java:[line 2816]<br/>At ObjectMapper.java:[line 2823]<br/>At ObjectReader.java:[line 1283]<br/>At ObjectReader.java:[line 1515]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70655');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70655" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std<br/>In method com.fasterxml.jackson.databind.deser.std.FromStringDeserializer$Std._deserialize(String, DeserializationContext)<br/>At FromStringDeserializer.java:[line 219]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/fasterxml/jackson/databind/deser/std/FromStringDeserializer$Std._deserialize(Ljava/lang/String;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object; parameter 1<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71555');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71555" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class com.google.inject.internal.cglib.core.$DebuggingClassWriter$1<br/>In method com.google.inject.internal.cglib.core.$DebuggingClassWriter$1.run()<br/>At DebuggingClassWriter.java:[line 82]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/google/inject/internal/cglib/core/$DebuggingClassWriter.debugLocation<br/>Unknown source com/google/inject/internal/cglib/core/$DebuggingClassWriter.access$100()Ljava/lang/String;<br/>Unknown source com/google/inject/internal/cglib/core/$DebuggingClassWriter.className<br/>At DebuggingClassWriter.java:[line 26]<br/>At DebuggingClassWriter.java:[line 80]<br/>At DebuggingClassWriter.java:[line 82]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71664');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71664" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class com.google.inject.internal.cglib.core.$DebuggingClassWriter$1<br/>In method com.google.inject.internal.cglib.core.$DebuggingClassWriter$1.run()<br/>At DebuggingClassWriter.java:[line 84]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/google/inject/internal/cglib/core/$DebuggingClassWriter.className<br/>At DebuggingClassWriter.java:[line 80]<br/>At DebuggingClassWriter.java:[line 84]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71753');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71753" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class com.google.inject.internal.cglib.core.$DebuggingClassWriter$1<br/>In method com.google.inject.internal.cglib.core.$DebuggingClassWriter$1.run()<br/>At DebuggingClassWriter.java:[line 84]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/google/inject/internal/cglib/core/$DebuggingClassWriter.debugLocation<br/>Unknown source com/google/inject/internal/cglib/core/$DebuggingClassWriter.access$100()Ljava/lang/String;<br/>At DebuggingClassWriter.java:[line 26]<br/>At DebuggingClassWriter.java:[line 84]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71847');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71847" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class com.google.inject.internal.cglib.core.$DebuggingClassWriter$1<br/>In method com.google.inject.internal.cglib.core.$DebuggingClassWriter$1.run()<br/>At DebuggingClassWriter.java:[line 93]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/google/inject/internal/cglib/core/$DebuggingClassWriter.className<br/>At DebuggingClassWriter.java:[line 80]<br/>At DebuggingClassWriter.java:[line 93]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71936');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71936" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class com.google.inject.internal.cglib.core.$DebuggingClassWriter$1<br/>In method com.google.inject.internal.cglib.core.$DebuggingClassWriter$1.run()<br/>At DebuggingClassWriter.java:[line 93]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/google/inject/internal/cglib/core/$DebuggingClassWriter.debugLocation<br/>Unknown source com/google/inject/internal/cglib/core/$DebuggingClassWriter.access$100()Ljava/lang/String;<br/>At DebuggingClassWriter.java:[line 26]<br/>At DebuggingClassWriter.java:[line 93]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N76938');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N76938" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.eclipse.jetty.server.handler.gzip.GzipHandler<br/>In method org.eclipse.jetty.server.handler.gzip.GzipHandler.handle(String, Request, HttpServletRequest, HttpServletResponse)<br/>At GzipHandler.java:[line 486]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/eclipse/jetty/util/URIUtil.addPaths(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/eclipse/jetty/server/Request._servletPath<br/>Unknown source org/eclipse/jetty/server/Request._pathInfo<br/>Unknown source org/eclipse/jetty/server/Request.getPathInfo()Ljava/lang/String;<br/>Unknown source javax/servlet/ServletContext.getRealPath(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/eclipse/jetty/http/HttpURI._path<br/>Unknown source org/eclipse/jetty/util/URIUtil.addPaths(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/eclipse/jetty/server/Request.getServletPath()Ljava/lang/String;<br/>Unknown source org/eclipse/jetty/http/HttpURI.getPath()Ljava/lang/String;<br/>Unknown source org/eclipse/jetty/server/Request.getRequestURI()Ljava/lang/String;<br/>Unknown source org/eclipse/jetty/util/URIUtil.addPaths(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At HttpURI.java:[line 575]<br/>At Request.java:[line 1083]<br/>At Request.java:[line 1310]<br/>At Request.java:[line 1486]<br/>At GzipHandler.java:[line 413]<br/>At GzipHandler.java:[line 483]<br/>At GzipHandler.java:[line 486]<br/>At URIUtil.java:[line 560]<br/>At URIUtil.java:[line 570]<br/>At URIUtil.java:[line 572]<br/>At URIUtil.java:[line 574]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N77225');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N77225" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.eclipse.jetty.servlet.ServletHolder<br/>In method org.eclipse.jetty.servlet.ServletHolder.initJspServlet()<br/>At ServletHolder.java:[line 699]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/util/Map.get(Ljava/lang/Object;)Ljava/lang/Object;<br/>Unknown source org/eclipse/jetty/servlet/Holder._initParams<br/>Unknown source org/eclipse/jetty/servlet/ServletHolder.getInitParameter(Ljava/lang/String;)Ljava/lang/String;<br/>At Holder.java:[line 89]<br/>At ServletHolder.java:[line 699]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N77324');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N77324" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.eclipse.jetty.util.IO<br/>In method org.eclipse.jetty.util.IO.copyDir(File, File)<br/>At IO.java:[line 265]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.getName()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N77393');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N77393" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.eclipse.jetty.util.MultiPartInputStreamParser<br/>In method org.eclipse.jetty.util.MultiPartInputStreamParser.parse()<br/>At MultiPartInputStreamParser.java:[line 518]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source javax/servlet/MultipartConfigElement.location<br/>Unknown source javax/servlet/MultipartConfigElement.getLocation()Ljava/lang/String;<br/>At MultipartConfigElement.java:[line 113]<br/>At MultiPartInputStreamParser.java:[line 518]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N77487');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N77487" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.eclipse.jetty.util.MultiPartInputStreamParser<br/>In method org.eclipse.jetty.util.MultiPartInputStreamParser.parse()<br/>At MultiPartInputStreamParser.java:[line 522]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source javax/servlet/MultipartConfigElement.location<br/>Unknown source javax/servlet/MultipartConfigElement.getLocation()Ljava/lang/String;<br/>At MultipartConfigElement.java:[line 113]<br/>At MultiPartInputStreamParser.java:[line 522]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N77581');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N77581" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.eclipse.jetty.util.MultiPartInputStreamParser$MultiPart<br/>In method org.eclipse.jetty.util.MultiPartInputStreamParser$MultiPart.createFile()<br/>At MultiPartInputStreamParser.java:[line 163]<br/>Sink method java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;<br/>Sink parameter 0<br/>Unknown source org/eclipse/jetty/util/MultiPartInputStreamParser._tmpDir<br/>At MultiPartInputStreamParser.java:[line 163]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N77660');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N77660" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.eclipse.jetty.util.MultiPartInputStreamParser$MultiPart<br/>In method org.eclipse.jetty.util.MultiPartInputStreamParser$MultiPart.write(String)<br/>At MultiPartInputStreamParser.java:[line 284]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/eclipse/jetty/util/MultiPartInputStreamParser$MultiPart.write(Ljava/lang/String;)V parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N77842');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N77842" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.eclipse.jetty.util.resource.JarFileResource<br/>In method org.eclipse.jetty.util.resource.JarFileResource.newConnection()<br/>At JarFileResource.java:[line 131]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/util/jar/JarFile.getName()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N78079');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N78079" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.eclipse.jetty.util.resource.JarResource<br/>In method org.eclipse.jetty.util.resource.JarResource.copyTo(File)<br/>At JarResource.java:[line 224]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/util/jar/JarEntry.getName()Ljava/lang/String;<br/>At JarResource.java:[line 184]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N78158');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N78158" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.eclipse.jetty.util.resource.JarResource<br/>In method org.eclipse.jetty.util.resource.JarResource.copyTo(File)<br/>At JarResource.java:[line 235]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.getParent()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N78425');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N78425" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.eclipse.jetty.util.resource.Resource<br/>In method org.eclipse.jetty.util.resource.Resource.newResource(String, boolean)<br/>At Resource.java:[line 179]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/eclipse/jetty/util/resource/Resource.newResource(Ljava/lang/String;Z)Lorg/eclipse/jetty/util/resource/Resource; parameter 1<br/>At ClientCertAuthenticator.java:[line 101]<br/>At ClientCertAuthenticator.java:[line 104]<br/>At ClientCertAuthenticator.java:[line 145]<br/>At ClientCertAuthenticator.java:[line 164]<br/>At ClientCertAuthenticator.java:[line 181]<br/>At ContextHandler.java:[line 1573]<br/>At ContextHandler.java:[line 1881]<br/>At ContextHandlerCollection.java:[line 252]<br/>At JarFileResource.java:[line 148]<br/>At JarFileResource.java:[line 149]<br/>At JarResource.java:[line 272]<br/>At Resource.java:[line 149]<br/>At Resource.java:[line 178]<br/>At CertificateUtils.java:[line 69]<br/>At SslContextFactory.java:[line 199]<br/>At SslContextFactory.java:[line 208]<br/>At SslContextFactory.java:[line 257]<br/>At SslContextFactory.java:[line 550]<br/>At SslContextFactory.java:[line 619]<br/>At SslContextFactory.java:[line 939]<br/>At SslContextFactory.java:[line 1058]<br/>At SocketConnectorFactory.java:[line 72]<br/>At SocketConnectorFactory.java:[line 79]<br/>At SslStores.java:[line 82]<br/>At SslStores.java:[line 96]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N78744');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N78744" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.eclipse.jetty.util.resource.URLResource<br/>In method org.eclipse.jetty.util.resource.URLResource.getFile()<br/>At URLResource.java:[line 179]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/security/Permission.getName()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N78813');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N78813" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.eclipse.jetty.util.resource.URLResource<br/>In method org.eclipse.jetty.util.resource.URLResource.getFile()<br/>At URLResource.java:[line 183]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/net/URL.getFile()Ljava/lang/String;<br/>Unknown source org/eclipse/jetty/util/resource/URLResource._url<br/>At URLResource.java:[line 183]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N79495');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N79495" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.eclipse.paho.client.mqttv3.internal.security.SSLSocketFactoryFactory<br/>In method org.eclipse.paho.client.mqttv3.internal.security.SSLSocketFactoryFactory.getSSLContext(String)<br/>At SSLSocketFactoryFactory.java:[line 1193]<br/>Sink method java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/eclipse/paho/client/mqttv3/internal/security/SSLSocketFactoryFactory.getProperty(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source java/util/Hashtable.get(Ljava/lang/Object;)Ljava/lang/Object;<br/>Unknown source org/eclipse/paho/client/mqttv3/internal/security/SSLSocketFactoryFactory.defaultProperties<br/>Unknown source org/eclipse/paho/client/mqttv3/internal/security/SSLSocketFactoryFactory.getProperty(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/util/Properties.getProperty(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source java/lang/System.getProperty(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/eclipse/paho/client/mqttv3/internal/security/SSLSocketFactoryFactory.configs<br/>Unknown source org/eclipse/paho/client/mqttv3/internal/security/SSLSocketFactoryFactory.getPropertyFromConfig(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At SSLSocketFactoryFactory.java:[line 792]<br/>At SSLSocketFactoryFactory.java:[line 798]<br/>At SSLSocketFactoryFactory.java:[line 818]<br/>At SSLSocketFactoryFactory.java:[line 821]<br/>At SSLSocketFactoryFactory.java:[line 826]<br/>At SSLSocketFactoryFactory.java:[line 828]<br/>At SSLSocketFactoryFactory.java:[line 1134]<br/>At SSLSocketFactoryFactory.java:[line 1158]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N79679');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N79679" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.eclipse.paho.client.mqttv3.internal.security.SSLSocketFactoryFactory<br/>In method org.eclipse.paho.client.mqttv3.internal.security.SSLSocketFactoryFactory.getSSLContext(String)<br/>At SSLSocketFactoryFactory.java:[line 1259]<br/>Sink method java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/eclipse/paho/client/mqttv3/internal/security/SSLSocketFactoryFactory.getTrustStore(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/eclipse/paho/client/mqttv3/internal/security/SSLSocketFactoryFactory.defaultProperties<br/>Unknown source org/eclipse/paho/client/mqttv3/internal/security/SSLSocketFactoryFactory.getProperty(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/lang/System.getProperty(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/eclipse/paho/client/mqttv3/internal/security/SSLSocketFactoryFactory.getPropertyFromConfig(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/eclipse/paho/client/mqttv3/internal/security/SSLSocketFactoryFactory.getProperty(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source java/util/Hashtable.get(Ljava/lang/Object;)Ljava/lang/Object;<br/>Unknown source java/util/Properties.getProperty(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/eclipse/paho/client/mqttv3/internal/security/SSLSocketFactoryFactory.configs<br/>At SSLSocketFactoryFactory.java:[line 792]<br/>At SSLSocketFactoryFactory.java:[line 798]<br/>At SSLSocketFactoryFactory.java:[line 818]<br/>At SSLSocketFactoryFactory.java:[line 821]<br/>At SSLSocketFactoryFactory.java:[line 826]<br/>At SSLSocketFactoryFactory.java:[line 828]<br/>At SSLSocketFactoryFactory.java:[line 1004]<br/>At SSLSocketFactoryFactory.java:[line 1224]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N80187');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N80187" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.eclipse.paho.client.mqttv3.persist.MqttDefaultFilePersistence<br/>In method org.eclipse.paho.client.mqttv3.persist.MqttDefaultFilePersistence.containsKey(String)<br/>At MqttDefaultFilePersistence.java:[line 288]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/lang/StringBuffer.&lt;init&gt;(Ljava/lang/String;)V<br/>Unknown source java/lang/StringBuffer.toString()Ljava/lang/String;<br/>Unknown source java/lang/StringBuffer.append(Ljava/lang/String;)Ljava/lang/StringBuffer;<br/>Unknown source org/eclipse/paho/client/mqttv3/persist/MqttDefaultFilePersistence.containsKey(Ljava/lang/String;)Z parameter 0<br/>Method usage not detected<br/>At MqttDefaultFilePersistence.java:[line 288]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N80286');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N80286" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.eclipse.paho.client.mqttv3.persist.MqttDefaultFilePersistence<br/>In method org.eclipse.paho.client.mqttv3.persist.MqttDefaultFilePersistence.get(String)<br/>At MqttDefaultFilePersistence.java:[line 200]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/lang/StringBuffer.&lt;init&gt;(Ljava/lang/String;)V<br/>Unknown source java/lang/StringBuffer.toString()Ljava/lang/String;<br/>Unknown source java/lang/StringBuffer.append(Ljava/lang/String;)Ljava/lang/StringBuffer;<br/>Unknown source org/eclipse/paho/client/mqttv3/persist/MqttDefaultFilePersistence.get(Ljava/lang/String;)Lorg/eclipse/paho/client/mqttv3/MqttPersistable; parameter 0<br/>Method usage not detected<br/>At MqttDefaultFilePersistence.java:[line 200]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N80385');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N80385" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.eclipse.paho.client.mqttv3.persist.MqttDefaultFilePersistence<br/>In method org.eclipse.paho.client.mqttv3.persist.MqttDefaultFilePersistence.put(String, MqttPersistable)<br/>At MqttDefaultFilePersistence.java:[line 157]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/lang/StringBuffer.&lt;init&gt;(Ljava/lang/String;)V<br/>Unknown source java/lang/StringBuffer.toString()Ljava/lang/String;<br/>Unknown source java/lang/StringBuffer.append(Ljava/lang/String;)Ljava/lang/StringBuffer;<br/>Unknown source org/eclipse/paho/client/mqttv3/persist/MqttDefaultFilePersistence.put(Ljava/lang/String;Lorg/eclipse/paho/client/mqttv3/MqttPersistable;)V parameter 1<br/>Method usage not detected<br/>At MqttDefaultFilePersistence.java:[line 157]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N80484');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N80484" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.eclipse.paho.client.mqttv3.persist.MqttDefaultFilePersistence<br/>In method org.eclipse.paho.client.mqttv3.persist.MqttDefaultFilePersistence.put(String, MqttPersistable)<br/>At MqttDefaultFilePersistence.java:[line 158]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/lang/StringBuffer.&lt;init&gt;(Ljava/lang/String;)V<br/>Unknown source java/lang/StringBuffer.toString()Ljava/lang/String;<br/>Unknown source java/lang/StringBuffer.append(Ljava/lang/String;)Ljava/lang/StringBuffer;<br/>Unknown source org/eclipse/paho/client/mqttv3/persist/MqttDefaultFilePersistence.put(Ljava/lang/String;Lorg/eclipse/paho/client/mqttv3/MqttPersistable;)V parameter 1<br/>Method usage not detected<br/>At MqttDefaultFilePersistence.java:[line 157]<br/>At MqttDefaultFilePersistence.java:[line 158]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N80593');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N80593" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.eclipse.paho.client.mqttv3.persist.MqttDefaultFilePersistence<br/>In method org.eclipse.paho.client.mqttv3.persist.MqttDefaultFilePersistence.remove(String)<br/>At MqttDefaultFilePersistence.java:[line 223]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/lang/StringBuffer.&lt;init&gt;(Ljava/lang/String;)V<br/>Unknown source java/lang/StringBuffer.toString()Ljava/lang/String;<br/>Unknown source java/lang/StringBuffer.append(Ljava/lang/String;)Ljava/lang/StringBuffer;<br/>Unknown source org/eclipse/paho/client/mqttv3/persist/MqttDefaultFilePersistence.remove(Ljava/lang/String;)V parameter 0<br/>Method usage not detected<br/>At MqttDefaultFilePersistence.java:[line 223]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N80692');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N80692" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.eclipse.paho.client.mqttv3.persist.MqttDefaultFilePersistence<br/>In method org.eclipse.paho.client.mqttv3.persist.MqttDefaultFilePersistence.restoreBackups(File)<br/>At MqttDefaultFilePersistence.java:[line 277]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.getName()Ljava/lang/String;<br/>At MqttDefaultFilePersistence.java:[line 277]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N80952');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N80952" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.jivesoftware.smack.tcp.XMPPTCPConnection<br/>In method org.jivesoftware.smack.tcp.XMPPTCPConnection.proceedTLSReceived()<br/>At XMPPTCPConnection.java:[line 735]<br/>Sink method java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/jivesoftware/smack/ConnectionConfiguration.keystorePath<br/>Unknown source org/jivesoftware/smack/tcp/XMPPTCPConnectionConfiguration.getKeystorePath()Ljava/lang/String;<br/>At ConnectionConfiguration.java:[line 219]<br/>At XMPPTCPConnection.java:[line 705]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N81670');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N81670" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.jivesoftware.smack.util.stringencoder.java7.Base64<br/>In method org.jivesoftware.smack.util.stringencoder.java7.Base64.decodeFromFile(String)<br/>At Base64.java:[line 1076]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/jivesoftware/smack/util/stringencoder/java7/Base64.decodeFromFile(Ljava/lang/String;)[B parameter 0<br/>Method usage not detected<br/>At Base64.java:[line 1198]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N81754');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N81754" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.jivesoftware.smack.util.stringencoder.java7.Base64<br/>In method org.jivesoftware.smack.util.stringencoder.java7.Base64.encodeFromFile(String)<br/>At Base64.java:[line 1133]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/jivesoftware/smack/util/stringencoder/java7/Base64.encodeFromFile(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Method usage not detected<br/>At Base64.java:[line 1172]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N82447');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N82447" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.xmlpull.v1.sax2.Driver<br/>In method org.xmlpull.v1.sax2.Driver.parse(InputSource)<br/>At Driver.java:[line 296]<br/>Sink method java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/xmlpull/v1/sax2/Driver.systemId<br/>At Driver.java:[line 296]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N84371');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N84371" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class spark.resource.ExternalResource<br/>In method new spark.resource.ExternalResource(String)<br/>At ExternalResource.java:[line 40]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source spark/utils/StringUtils.collectionToDelimitedString(Ljava/util/Collection;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source spark/utils/StringUtils.collectionToDelimitedString(Ljava/util/Collection;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source spark/utils/StringUtils.collectionToDelimitedString(Ljava/util/Collection;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source spark/utils/StringUtils.collectionToDelimitedString(Ljava/util/Collection;Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source spark/utils/StringUtils.cleanPath(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source spark/utils/StringUtils.replace(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source spark/utils/StringUtils.collectionToDelimitedString(Ljava/util/Collection;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 3<br/>Unknown source spark/utils/StringUtils.replace(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/util/Iterator.next()Ljava/lang/Object;<br/>Unknown source spark/utils/StringUtils.toStringArray(Ljava/util/Collection;)[Ljava/lang/String; parameter 0<br/>Unknown source spark/utils/StringUtils.delimitedListToStringArray(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; parameter 2<br/>Unknown source spark/utils/StringUtils.collectionToDelimitedString(Ljava/util/Collection;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source spark/utils/StringUtils.collectionToDelimitedString(Ljava/util/Collection;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source spark/utils/StringUtils.toStringArray(Ljava/util/Collection;)[Ljava/lang/String;<br/>Unknown source spark/utils/StringUtils.delimitedListToStringArray(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; parameter 1<br/>Unknown source spark/utils/StringUtils.delimitedListToStringArray(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;<br/>Unknown source spark/utils/StringUtils.replace(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source java/util/Collection.iterator()Ljava/util/Iterator;<br/>Unknown source spark/utils/StringUtils.deleteAny(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source spark/resource/ExternalResource.&lt;init&gt;(Ljava/lang/String;)V parameter 0<br/>Unknown source spark/utils/StringUtils.collectionToDelimitedString(Ljava/util/Collection;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source spark/utils/StringUtils.cleanPath(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/util/Collection.toArray([Ljava/lang/Object;)[Ljava/lang/Object;<br/>Unknown source spark/utils/StringUtils.deleteAny(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source spark/utils/StringUtils.delimitedListToStringArray(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;<br/>At Service.java:[line 285]<br/>At Service.java:[line 645]<br/>At Spark.java:[line 1108]<br/>At AbstractResourceHandler.java:[line 96]<br/>At AbstractResourceHandler.java:[line 103]<br/>At AbstractResourceHandler.java:[line 107]<br/>At AbstractResourceHandler.java:[line 108]<br/>At AbstractResourceHandler.java:[line 110]<br/>At AbstractResourceHandler.java:[line 114]<br/>At AbstractResourceHandler.java:[line 117]<br/>At AbstractResourceHandler.java:[line 121]<br/>At ExternalResource.java:[line 40]<br/>At ExternalResourceHandler.java:[line 66]<br/>At ExternalResourceHandler.java:[line 68]<br/>At ExternalResourceHandler.java:[line 70]<br/>At ExternalResourceHandler.java:[line 74]<br/>At UriPath.java:[line 64]<br/>At UriPath.java:[line 141]<br/>At UriPath.java:[line 158]<br/>At UriPath.java:[line 161]<br/>At StaticFilesConfiguration.java:[line 166]<br/>At StringUtils.java:[line 141]<br/>At StringUtils.java:[line 142]<br/>At StringUtils.java:[line 146]<br/>At StringUtils.java:[line 148]<br/>At StringUtils.java:[line 222]<br/>At StringUtils.java:[line 231]<br/>At StringUtils.java:[line 232]<br/>At StringUtils.java:[line 235]<br/>At StringUtils.java:[line 236]<br/>At StringUtils.java:[line 239]<br/>At StringUtils.java:[line 256]<br/>At StringUtils.java:[line 263]<br/>At StringUtils.java:[line 266]<br/>At StringUtils.java:[line 281]<br/>At StringUtils.java:[line 296]<br/>At StringUtils.java:[line 322]<br/>At StringUtils.java:[line 328]<br/>At StringUtils.java:[line 333]<br/>At StringUtils.java:[line 336]<br/>At StringUtils.java:[line 354]<br/>At StringUtils.java:[line 356]<br/>At StringUtils.java:[line 358]<br/>At StringUtils.java:[line 361]<br/>At StringUtils.java:[line 373]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N85010');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N85010" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class spark.staticfiles.DirectoryTraversal<br/>In method spark.staticfiles.DirectoryTraversal.protectAgainstForExternal(String)<br/>At DirectoryTraversal.java:[line 19]<br/>Sink method java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;<br/>Sink parameter 1<br/>Unknown source spark/staticfiles/DirectoryTraversal.protectAgainstForExternal(Ljava/lang/String;)V parameter 0<br/>At ExternalResourceHandler.java:[line 82]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N85183');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N85183" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class spark.staticfiles.StaticFilesFolder<br/>In method spark.staticfiles.StaticFilesFolder.externalConfiguredTo(String)<br/>At StaticFilesFolder.java:[line 26]<br/>Sink method java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;<br/>Sink parameter 1<br/>Unknown source spark/staticfiles/StaticFilesFolder.externalConfiguredTo(Ljava/lang/String;)V parameter 0<br/>Method usage not detected<br/>At Service.java:[line 285]<br/>At Service.java:[line 645]<br/>At Spark.java:[line 1108]<br/>At StaticFilesConfiguration.java:[line 181]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N85297');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N85297" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class spark.utils.ResourceUtils<br/>In method spark.utils.ResourceUtils.getFile(String)<br/>At ResourceUtils.java:[line 182]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source spark/utils/ResourceUtils.getFile(Ljava/lang/String;)Ljava/io/File; parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N85371');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N85371" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class spark.utils.ResourceUtils<br/>In method spark.utils.ResourceUtils.getFile(URI, String)<br/>At ResourceUtils.java:[line 258]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source spark/utils/ResourceUtils.getFile(Ljava/net/URI;Ljava/lang/String;)Ljava/io/File; parameter 1<br/>Unknown source java/net/URI.getSchemeSpecificPart()Ljava/lang/String;<br/>Method usage not detected<br/>At ResourceUtils.java:[line 236]<br/>At ResourceUtils.java:[line 258]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N85470');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N85470" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class spark.utils.ResourceUtils<br/>In method spark.utils.ResourceUtils.getFile(URL, String)<br/>At ResourceUtils.java:[line 219]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source spark/utils/StringUtils.replace(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source spark/utils/ResourceUtils.toURI(Ljava/net/URL;)Ljava/net/URI;<br/>Unknown source java/net/URI.getSchemeSpecificPart()Ljava/lang/String;<br/>Unknown source java/net/URL.toString()Ljava/lang/String;<br/>Unknown source spark/utils/StringUtils.replace(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source spark/utils/StringUtils.replace(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source spark/utils/ResourceUtils.toURI(Ljava/lang/String;)Ljava/net/URI;<br/>Unknown source spark/utils/ResourceUtils.toURI(Ljava/lang/String;)Ljava/net/URI; parameter 0<br/>Unknown source spark/utils/ResourceUtils.getFile(Ljava/net/URL;Ljava/lang/String;)Ljava/io/File; parameter 1<br/>Unknown source java/net/URI.&lt;init&gt;(Ljava/lang/String;)V<br/>Unknown source spark/utils/ResourceUtils.toURI(Ljava/net/URL;)Ljava/net/URI; parameter 0<br/>At AbstractFileResolvingResource.java:[line 46]<br/>At AbstractFileResolvingResource.java:[line 57]<br/>At AbstractFileResolvingResource.java:[line 58]<br/>At ResourceUtils.java:[line 196]<br/>At ResourceUtils.java:[line 219]<br/>At ResourceUtils.java:[line 296]<br/>At ResourceUtils.java:[line 299]<br/>At ResourceUtils.java:[line 301]<br/>At ResourceUtils.java:[line 306]<br/>At ResourceUtils.java:[line 308]<br/>At ResourceUtils.java:[line 327]<br/>At ResourceUtils.java:[line 339]<br/>At StringUtils.java:[line 141]<br/>At StringUtils.java:[line 142]<br/>At StringUtils.java:[line 146]<br/>At StringUtils.java:[line 148]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N85749');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N85749" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class spark.utils.ResourceUtils<br/>In method spark.utils.ResourceUtils.getFile(URL, String)<br/>At ResourceUtils.java:[line 222]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source spark/utils/ResourceUtils.getFile(Ljava/net/URL;Ljava/lang/String;)Ljava/io/File; parameter 1<br/>Unknown source java/net/URL.getFile()Ljava/lang/String;<br/>At AbstractFileResolvingResource.java:[line 46]<br/>At AbstractFileResolvingResource.java:[line 57]<br/>At AbstractFileResolvingResource.java:[line 58]<br/>At ResourceUtils.java:[line 196]<br/>At ResourceUtils.java:[line 222]<br/>At ResourceUtils.java:[line 296]<br/>At ResourceUtils.java:[line 299]<br/>At ResourceUtils.java:[line 301]<br/>At ResourceUtils.java:[line 306]<br/>At ResourceUtils.java:[line 308]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N85923');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N85923" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class spark.utils.ResourceUtils<br/>In method spark.utils.ResourceUtils.getURL(String)<br/>At ResourceUtils.java:[line 143]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source spark/utils/ResourceUtils.getURL(Ljava/lang/String;)Ljava/net/URL; parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67004');">
<td>
<span class="priority-2">SECPTO</span>
</td>
<td>This API (java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V) writes to a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67004" style="display: none;">
<a href="#PATH_TRAVERSAL_OUT">Bug type PATH_TRAVERSAL_OUT (click for details)</a>
<br/>In class ch.qos.logback.core.util.FileUtil<br/>In method ch.qos.logback.core.util.FileUtil.copy(String, String)<br/>At FileUtil.java:[line 102]<br/>Sink method java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source ch/qos/logback/core/util/FileUtil.copy(Ljava/lang/String;Ljava/lang/String;)V parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N74286');">
<td>
<span class="priority-2">SECPTO</span>
</td>
<td>This API (java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;Z)V) writes to a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N74286" style="display: none;">
<a href="#PATH_TRAVERSAL_OUT">Bug type PATH_TRAVERSAL_OUT (click for details)</a>
<br/>In class org.apache.commons.logging.LogFactory<br/>In method org.apache.commons.logging.LogFactory.initDiagnostics()<br/>At LogFactory.java:[line 1476]<br/>Sink method java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;Z)V<br/>Sink parameter 1<br/>Unknown source org/apache/commons/logging/LogFactory.getSystemProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source java/security/AccessController.doPrivileged(Ljava/security/PrivilegedAction;)Ljava/lang/Object;<br/>At LogFactory.java:[line 1459]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N81838');">
<td>
<span class="priority-2">SECPTO</span>
</td>
<td>This API (java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V) writes to a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N81838" style="display: none;">
<a href="#PATH_TRAVERSAL_OUT">Bug type PATH_TRAVERSAL_OUT (click for details)</a>
<br/>In class org.jivesoftware.smack.util.stringencoder.java7.Base64<br/>In method org.jivesoftware.smack.util.stringencoder.java7.Base64.decodeFileToFile(String, String)<br/>At Base64.java:[line 1201]<br/>Sink method java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/jivesoftware/smack/util/stringencoder/java7/Base64.decodeFileToFile(Ljava/lang/String;Ljava/lang/String;)V parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N81912');">
<td>
<span class="priority-2">SECPTO</span>
</td>
<td>This API (java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V) writes to a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N81912" style="display: none;">
<a href="#PATH_TRAVERSAL_OUT">Bug type PATH_TRAVERSAL_OUT (click for details)</a>
<br/>In class org.jivesoftware.smack.util.stringencoder.java7.Base64<br/>In method org.jivesoftware.smack.util.stringencoder.java7.Base64.decodeToFile(String, String)<br/>At Base64.java:[line 1040]<br/>Sink method java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/jivesoftware/smack/util/stringencoder/java7/Base64.decodeToFile(Ljava/lang/String;Ljava/lang/String;)Z parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N81986');">
<td>
<span class="priority-2">SECPTO</span>
</td>
<td>This API (java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V) writes to a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N81986" style="display: none;">
<a href="#PATH_TRAVERSAL_OUT">Bug type PATH_TRAVERSAL_OUT (click for details)</a>
<br/>In class org.jivesoftware.smack.util.stringencoder.java7.Base64<br/>In method org.jivesoftware.smack.util.stringencoder.java7.Base64.encodeFileToFile(String, String)<br/>At Base64.java:[line 1175]<br/>Sink method java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/jivesoftware/smack/util/stringencoder/java7/Base64.encodeFileToFile(Ljava/lang/String;Ljava/lang/String;)V parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N82060');">
<td>
<span class="priority-2">SECPTO</span>
</td>
<td>This API (java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V) writes to a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N82060" style="display: none;">
<a href="#PATH_TRAVERSAL_OUT">Bug type PATH_TRAVERSAL_OUT (click for details)</a>
<br/>In class org.jivesoftware.smack.util.stringencoder.java7.Base64<br/>In method org.jivesoftware.smack.util.stringencoder.java7.Base64.encodeToFile(byte[], String)<br/>At Base64.java:[line 1006]<br/>Sink method java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/jivesoftware/smack/util/stringencoder/java7/Base64.encodeToFile([BLjava/lang/String;)Z parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N76039');">
<td>
<span class="priority-2">SECSFDR</span>
</td>
<td>RequestDispatcher populated with user controlled parameters</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N76039" style="display: none;">
<a href="#REQUESTDISPATCHER_FILE_DISCLOSURE">Bug type REQUESTDISPATCHER_FILE_DISCLOSURE (click for details)</a>
<br/>In class org.eclipse.jetty.security.authentication.FormAuthenticator<br/>In method org.eclipse.jetty.security.authentication.FormAuthenticator.validateRequest(ServletRequest, ServletResponse, boolean)<br/>At FormAuthenticator.java:[line 327]<br/>Sink method javax/servlet/RequestDispatcher.forward(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V<br/>Sink parameter 2<br/>Unknown source org/eclipse/jetty/security/authentication/FormAuthenticator._formErrorPage<br/>Unknown source javax/servlet/http/HttpServletRequest.getRequestDispatcher(Ljava/lang/String;)Ljavax/servlet/RequestDispatcher;<br/>At FormAuthenticator.java:[line 324]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N76122');">
<td>
<span class="priority-2">SECSFDR</span>
</td>
<td>RequestDispatcher populated with user controlled parameters</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N76122" style="display: none;">
<a href="#REQUESTDISPATCHER_FILE_DISCLOSURE">Bug type REQUESTDISPATCHER_FILE_DISCLOSURE (click for details)</a>
<br/>In class org.eclipse.jetty.security.authentication.FormAuthenticator<br/>In method org.eclipse.jetty.security.authentication.FormAuthenticator.validateRequest(ServletRequest, ServletResponse, boolean)<br/>At FormAuthenticator.java:[line 419]<br/>Sink method javax/servlet/RequestDispatcher.forward(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V<br/>Sink parameter 2<br/>Unknown source org/eclipse/jetty/security/authentication/FormAuthenticator._formLoginPage<br/>Unknown source javax/servlet/http/HttpServletRequest.getRequestDispatcher(Ljava/lang/String;)Ljavax/servlet/RequestDispatcher;<br/>At FormAuthenticator.java:[line 416]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69791');">
<td>
<span class="priority-2">SECSHA1</span>
</td>
<td>This API SHA1 (SHA-1) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69791" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_SHA1">Bug type WEAK_MESSAGE_DIGEST_SHA1 (click for details)</a>
<br/>In class com.bwssystems.HABridge.plugins.homewizard.HomeWizzardSmartPlugInfo<br/>In method new com.bwssystems.HABridge.plugins.homewizard.HomeWizzardSmartPlugInfo(NamedIP, String)<br/>At HomeWizzardSmartPlugInfo.java:[line 49]<br/>Value SHA1</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N73474');">
<td>
<span class="priority-2">SECSHA1</span>
</td>
<td>This API SHA-1 (SHA-1) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N73474" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_SHA1">Bug type WEAK_MESSAGE_DIGEST_SHA1 (click for details)</a>
<br/>In class org.apache.commons.codec.digest.DigestUtils<br/>In method org.apache.commons.codec.digest.DigestUtils.getSha1Digest()<br/>At DigestUtils.java:[line 112]<br/>Value SHA-1</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N73532');">
<td>
<span class="priority-2">SECSHA1</span>
</td>
<td>This API SHA1 (SHA-1) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N73532" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_SHA1">Bug type WEAK_MESSAGE_DIGEST_SHA1 (click for details)</a>
<br/>In class org.apache.commons.codec.digest.DigestUtils<br/>In method org.apache.commons.codec.digest.DigestUtils.getShaDigest()<br/>At DigestUtils.java:[line 173]<br/>Value SHA1</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N73590');">
<td>
<span class="priority-2">SECSHA1</span>
</td>
<td>This API SHA1 (SHA-1) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N73590" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_SHA1">Bug type WEAK_MESSAGE_DIGEST_SHA1 (click for details)</a>
<br/>In class org.apache.commons.codec.digest.DigestUtils<br/>In method org.apache.commons.codec.digest.DigestUtils.sha(InputStream)<br/>At DigestUtils.java:[line 350]<br/>Value SHA1</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N73648');">
<td>
<span class="priority-2">SECSHA1</span>
</td>
<td>This API SHA1 (SHA-1) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N73648" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_SHA1">Bug type WEAK_MESSAGE_DIGEST_SHA1 (click for details)</a>
<br/>In class org.apache.commons.codec.digest.DigestUtils<br/>In method org.apache.commons.codec.digest.DigestUtils.sha(String)<br/>At DigestUtils.java:[line 363]<br/>Value SHA1</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N73706');">
<td>
<span class="priority-2">SECSHA1</span>
</td>
<td>This API SHA1 (SHA-1) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N73706" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_SHA1">Bug type WEAK_MESSAGE_DIGEST_SHA1 (click for details)</a>
<br/>In class org.apache.commons.codec.digest.DigestUtils<br/>In method org.apache.commons.codec.digest.DigestUtils.sha(byte[])<br/>At DigestUtils.java:[line 334]<br/>Value SHA1</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N73764');">
<td>
<span class="priority-2">SECSHA1</span>
</td>
<td>This API SHA1 (SHA-1) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N73764" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_SHA1">Bug type WEAK_MESSAGE_DIGEST_SHA1 (click for details)</a>
<br/>In class org.apache.commons.codec.digest.DigestUtils<br/>In method org.apache.commons.codec.digest.DigestUtils.sha1(InputStream)<br/>At DigestUtils.java:[line 389]<br/>Value SHA1</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N73822');">
<td>
<span class="priority-2">SECSHA1</span>
</td>
<td>This API SHA1 (SHA-1) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N73822" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_SHA1">Bug type WEAK_MESSAGE_DIGEST_SHA1 (click for details)</a>
<br/>In class org.apache.commons.codec.digest.DigestUtils<br/>In method org.apache.commons.codec.digest.DigestUtils.sha1(String)<br/>At DigestUtils.java:[line 400]<br/>Value SHA1</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N73880');">
<td>
<span class="priority-2">SECSHA1</span>
</td>
<td>This API SHA1 (SHA-1) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N73880" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_SHA1">Bug type WEAK_MESSAGE_DIGEST_SHA1 (click for details)</a>
<br/>In class org.apache.commons.codec.digest.DigestUtils<br/>In method org.apache.commons.codec.digest.DigestUtils.sha1(byte[])<br/>At DigestUtils.java:[line 375]<br/>Value SHA1</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N73938');">
<td>
<span class="priority-2">SECSHA1</span>
</td>
<td>This API SHA1 (SHA-1) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N73938" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_SHA1">Bug type WEAK_MESSAGE_DIGEST_SHA1 (click for details)</a>
<br/>In class org.apache.commons.codec.digest.DigestUtils<br/>In method org.apache.commons.codec.digest.DigestUtils.sha1Hex(InputStream)<br/>At DigestUtils.java:[line 426]<br/>Value SHA1</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N73996');">
<td>
<span class="priority-2">SECSHA1</span>
</td>
<td>This API SHA1 (SHA-1) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N73996" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_SHA1">Bug type WEAK_MESSAGE_DIGEST_SHA1 (click for details)</a>
<br/>In class org.apache.commons.codec.digest.DigestUtils<br/>In method org.apache.commons.codec.digest.DigestUtils.sha1Hex(String)<br/>At DigestUtils.java:[line 438]<br/>Value SHA1</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N74054');">
<td>
<span class="priority-2">SECSHA1</span>
</td>
<td>This API SHA1 (SHA-1) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N74054" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_SHA1">Bug type WEAK_MESSAGE_DIGEST_SHA1 (click for details)</a>
<br/>In class org.apache.commons.codec.digest.DigestUtils<br/>In method org.apache.commons.codec.digest.DigestUtils.sha1Hex(byte[])<br/>At DigestUtils.java:[line 412]<br/>Value SHA1</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N74112');">
<td>
<span class="priority-2">SECSHA1</span>
</td>
<td>This API SHA1 (SHA-1) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N74112" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_SHA1">Bug type WEAK_MESSAGE_DIGEST_SHA1 (click for details)</a>
<br/>In class org.apache.commons.codec.digest.DigestUtils<br/>In method org.apache.commons.codec.digest.DigestUtils.shaHex(InputStream)<br/>At DigestUtils.java:[line 749]<br/>Value SHA1</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N74170');">
<td>
<span class="priority-2">SECSHA1</span>
</td>
<td>This API SHA1 (SHA-1) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N74170" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_SHA1">Bug type WEAK_MESSAGE_DIGEST_SHA1 (click for details)</a>
<br/>In class org.apache.commons.codec.digest.DigestUtils<br/>In method org.apache.commons.codec.digest.DigestUtils.shaHex(String)<br/>At DigestUtils.java:[line 762]<br/>Value SHA1</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N74228');">
<td>
<span class="priority-2">SECSHA1</span>
</td>
<td>This API SHA1 (SHA-1) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N74228" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_SHA1">Bug type WEAK_MESSAGE_DIGEST_SHA1 (click for details)</a>
<br/>In class org.apache.commons.codec.digest.DigestUtils<br/>In method org.apache.commons.codec.digest.DigestUtils.shaHex(byte[])<br/>At DigestUtils.java:[line 733]<br/>Value SHA1</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N79323');">
<td>
<span class="priority-2">SECSHA1</span>
</td>
<td>This API SHA1 (SHA-1) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N79323" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_SHA1">Bug type WEAK_MESSAGE_DIGEST_SHA1 (click for details)</a>
<br/>In class org.eclipse.jetty.websocket.common.AcceptHash<br/>In method org.eclipse.jetty.websocket.common.AcceptHash.hashKey(String)<br/>At AcceptHash.java:[line 51]<br/>Value SHA1</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N80075');">
<td>
<span class="priority-2">SECSHA1</span>
</td>
<td>This API SHA1 (SHA-1) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N80075" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_SHA1">Bug type WEAK_MESSAGE_DIGEST_SHA1 (click for details)</a>
<br/>In class org.eclipse.paho.client.mqttv3.internal.websocket.WebSocketHandshake<br/>In method org.eclipse.paho.client.mqttv3.internal.websocket.WebSocketHandshake.sha1(String)<br/>At WebSocketHandshake.java:[line 196]<br/>Value SHA1</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N81220');">
<td>
<span class="priority-2">SECSHA1</span>
</td>
<td>This API SHA-1 (SHA-1) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N81220" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_SHA1">Bug type WEAK_MESSAGE_DIGEST_SHA1 (click for details)</a>
<br/>In class org.jivesoftware.smack.util.SHA1<br/>In method org.jivesoftware.smack.util.SHA1.&lt;static initializer for SHA1&gt;()<br/>At SHA1.java:[line 31]<br/>Value SHA-1</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66106');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66106" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class ch.qos.logback.core.joran.action.IncludeAction<br/>In method ch.qos.logback.core.joran.action.IncludeAction.openURL(URL)<br/>At IncludeAction.java:[line 127]<br/>Sink method java/net/URL.openStream()Ljava/io/InputStream;<br/>Sink parameter 0<br/>Unknown source ch/qos/logback/core/joran/action/IncludeAction.openURL(Ljava/net/URL;)Ljava/io/InputStream; parameter 0<br/>At IncludeAction.java:[line 117]<br/>At IncludeAction.java:[line 152]<br/>At IncludeAction.java:[line 167]<br/>At IncludeAction.java:[line 172]<br/>At IncludeAction.java:[line 185]<br/>At IncludeAction.java:[line 190]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65788');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65788" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class ch.qos.logback.core.joran.GenericConfigurator<br/>In method ch.qos.logback.core.joran.GenericConfigurator.doConfigure(URL)<br/>At GenericConfigurator.java:[line 47]<br/>Sink method java/net/URL.openConnection()Ljava/net/URLConnection;<br/>Sink parameter 0<br/>Unknown source ch/qos/logback/core/joran/GenericConfigurator.doConfigure(Ljava/net/URL;)V parameter 0<br/>At JMXConfigurator.java:[line 99]<br/>At JMXConfigurator.java:[line 100]<br/>At JMXConfigurator.java:[line 108]<br/>At JMXConfigurator.java:[line 109]<br/>At JMXConfigurator.java:[line 145]<br/>At ReconfigureOnChangeTask.java:[line 58]<br/>At ReconfigureOnChangeTask.java:[line 65]<br/>At ReconfigureOnChangeTask.java:[line 114]<br/>At ContextJNDISelector.java:[line 158]<br/>At ContextInitializer.java:[line 75]<br/>At ContextInitializer.java:[line 84]<br/>At ContextInitializer.java:[line 104]<br/>At ContextInitializer.java:[line 120]<br/>At ContextInitializer.java:[line 148]<br/>At ContextInitializer.java:[line 150]<br/>At ConfigurationWatchList.java:[line 71]<br/>At OptionHelper.java:[line 177]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66811');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66811" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class ch.qos.logback.core.net.ssl.KeyStoreFactoryBean<br/>In method ch.qos.logback.core.net.ssl.KeyStoreFactoryBean.createKeyStore()<br/>At KeyStoreFactoryBean.java:[line 63]<br/>Sink method java/net/URL.openStream()Ljava/io/InputStream;<br/>Sink parameter 0<br/>Unknown source java/net/URL.&lt;init&gt;(Ljava/lang/String;)V<br/>Unknown source ch/qos/logback/core/util/LocationUtil.urlForResource(Ljava/lang/String;)Ljava/net/URL;<br/>Unknown source ch/qos/logback/core/net/ssl/KeyStoreFactoryBean.getLocation()Ljava/lang/String;<br/>Unknown source ch/qos/logback/core/util/LocationUtil.urlForResource(Ljava/lang/String;)Ljava/net/URL; parameter 0<br/>Unknown source ch/qos/logback/core/net/ssl/KeyStoreFactoryBean.location<br/>At KeyStoreFactoryBean.java:[line 62]<br/>At KeyStoreFactoryBean.java:[line 100]<br/>At LocationUtil.java:[line 61]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69543');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69543" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class com.bwssystems.HABridge.plugins.fibaro.FibaroInfo<br/>In method com.bwssystems.HABridge.plugins.fibaro.FibaroInfo.request(String)<br/>At FibaroInfo.java:[line 61]<br/>Sink method java/net/URL.openConnection()Ljava/net/URLConnection;<br/>Sink parameter 0<br/>Unknown source com/bwssystems/HABridge/plugins/fibaro/FibaroInfo.request(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source com/bwssystems/HABridge/NamedIP.getPort()Ljava/lang/String;<br/>Unknown source java/net/URL.&lt;init&gt;(Ljava/lang/String;)V<br/>Unknown source com/bwssystems/HABridge/NamedIP.ip<br/>Unknown source com/bwssystems/HABridge/NamedIP.getIp()Ljava/lang/String;<br/>Unknown source com/bwssystems/HABridge/NamedIP.port<br/>At NamedIP.java:[line 22]<br/>At NamedIP.java:[line 34]<br/>At FibaroInfo.java:[line 60]<br/>At FibaroInfo.java:[line 96]<br/>At FibaroInfo.java:[line 115]<br/>At FibaroInfo.java:[line 159]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69697');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69697" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class com.bwssystems.HABridge.plugins.homewizard.HomeWizzardSmartPlugInfo<br/>In method com.bwssystems.HABridge.plugins.homewizard.HomeWizzardSmartPlugInfo.sendAction(String, String)<br/>At HomeWizzardSmartPlugInfo.java:[line 142]<br/>Sink method java/net/URL.openConnection()Ljava/net/URLConnection;<br/>Sink parameter 0<br/>Unknown source java/net/URL.&lt;init&gt;(Ljava/lang/String;)V<br/>Unknown source com/bwssystems/HABridge/plugins/homewizard/HomeWizzardSmartPlugInfo.sendAction(Ljava/lang/String;Ljava/lang/String;)Z parameter 1<br/>At HomeWizzardSmartPlugInfo.java:[line 141]<br/>At HomeWizzardSmartPlugInfo.java:[line 229]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70407');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70407" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class com.fasterxml.jackson.core.JsonFactory<br/>In method com.fasterxml.jackson.core.JsonFactory._optimizedStreamFromURL(URL)<br/>At JsonFactory.java:[line 1547]<br/>Sink method java/net/URL.openStream()Ljava/io/InputStream;<br/>Sink parameter 0<br/>Unknown source com/fasterxml/jackson/core/JsonFactory._optimizedStreamFromURL(Ljava/net/URL;)Ljava/io/InputStream; parameter 0<br/>Method usage not detected<br/>At JsonFactory.java:[line 783]<br/>At JsonFactory.java:[line 976]<br/>At ObjectMapper.java:[line 2458]<br/>At ObjectMapper.java:[line 2797]<br/>At ObjectMapper.java:[line 2816]<br/>At ObjectMapper.java:[line 2823]<br/>At ObjectReader.java:[line 1283]<br/>At ObjectReader.java:[line 1515]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70561');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70561" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class com.fasterxml.jackson.databind.ObjectReader<br/>In method com.fasterxml.jackson.databind.ObjectReader._inputStream(URL)<br/>At ObjectReader.java:[line 1824]<br/>Sink method java/net/URL.openStream()Ljava/io/InputStream;<br/>Sink parameter 0<br/>Unknown source com/fasterxml/jackson/databind/ObjectReader._inputStream(Ljava/net/URL;)Ljava/io/InputStream; parameter 0<br/>Method usage not detected<br/>At ObjectReader.java:[line 1280]<br/>At ObjectReader.java:[line 1512]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N74370');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N74370" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.apache.commons.logging.LogFactory$5<br/>In method org.apache.commons.logging.LogFactory$5.run()<br/>At LogFactory.java:[line 1303]<br/>Sink method java/net/URL.openConnection()Ljava/net/URLConnection;<br/>Sink parameter 0<br/>Unknown source org/apache/commons/logging/LogFactory$5.val$url<br/>At LogFactory.java:[line 1303]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N75744');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N75744" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.apache.http.ssl.SSLContextBuilder<br/>In method org.apache.http.ssl.SSLContextBuilder.loadKeyMaterial(URL, char[], char[], PrivateKeyStrategy)<br/>At SSLContextBuilder.java:[line 243]<br/>Sink method java/net/URL.openStream()Ljava/io/InputStream;<br/>Sink parameter 0<br/>Unknown source org/apache/http/ssl/SSLContextBuilder.loadKeyMaterial(Ljava/net/URL;[C[CLorg/apache/http/ssl/PrivateKeyStrategy;)Lorg/apache/http/ssl/SSLContextBuilder; parameter 3<br/>Method usage not detected<br/>At SSLContextBuilder.java:[line 256]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N75828');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N75828" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.apache.http.ssl.SSLContextBuilder<br/>In method org.apache.http.ssl.SSLContextBuilder.loadTrustMaterial(URL, char[], TrustStrategy)<br/>At SSLContextBuilder.java:[line 167]<br/>Sink method java/net/URL.openStream()Ljava/io/InputStream;<br/>Sink parameter 0<br/>Unknown source org/apache/http/ssl/SSLContextBuilder.loadTrustMaterial(Ljava/net/URL;[CLorg/apache/http/ssl/TrustStrategy;)Lorg/apache/http/ssl/SSLContextBuilder; parameter 2<br/>Method usage not detected<br/>At SSLContextBuilder.java:[line 179]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N77911');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N77911" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.eclipse.jetty.util.resource.JarFileResource<br/>In method org.eclipse.jetty.util.resource.JarFileResource.exists()<br/>At JarFileResource.java:[line 175]<br/>Sink method java/net/URL.openConnection()Ljava/net/URLConnection;<br/>Sink parameter 0<br/>Unknown source java/net/URL.&lt;init&gt;(Ljava/lang/String;)V<br/>Unknown source org/eclipse/jetty/util/resource/JarFileResource._jarUrl<br/>At JarFileResource.java:[line 175]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N77995');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N77995" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.eclipse.jetty.util.resource.JarFileResource<br/>In method org.eclipse.jetty.util.resource.JarFileResource.listEntries()<br/>At JarFileResource.java:[line 311]<br/>Sink method java/net/URL.openConnection()Ljava/net/URLConnection;<br/>Sink parameter 0<br/>Unknown source java/net/URL.&lt;init&gt;(Ljava/lang/String;)V<br/>Unknown source org/eclipse/jetty/util/resource/JarFileResource._jarUrl<br/>At JarFileResource.java:[line 311]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N78227');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N78227" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.eclipse.jetty.util.resource.JarResource<br/>In method org.eclipse.jetty.util.resource.JarResource.copyTo(File)<br/>At JarResource.java:[line 160]<br/>Sink method java/net/URL.openConnection()Ljava/net/URLConnection;<br/>Sink parameter 0<br/>Unknown source java/net/URL.&lt;init&gt;(Ljava/lang/String;)V<br/>Unknown source java/net/URL.toExternalForm()Ljava/lang/String;<br/>Unknown source org/eclipse/jetty/util/resource/URLResource._url<br/>Unknown source org/eclipse/jetty/util/resource/JarResource.getURL()Ljava/net/URL;<br/>At JarResource.java:[line 147]<br/>At JarResource.java:[line 154]<br/>At URLResource.java:[line 162]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N78341');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N78341" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.eclipse.jetty.util.resource.JarResource<br/>In method org.eclipse.jetty.util.resource.JarResource.getInputStream()<br/>At JarResource.java:[line 129]<br/>Sink method java/net/URL.openStream()Ljava/io/InputStream;<br/>Sink parameter 0<br/>Unknown source java/net/URL.&lt;init&gt;(Ljava/lang/String;)V<br/>Unknown source org/eclipse/jetty/util/resource/JarResource._urlString<br/>At JarResource.java:[line 128]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N78897');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N78897" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.eclipse.jetty.util.resource.URLResource<br/>In method org.eclipse.jetty.util.resource.URLResource.checkConnection()<br/>At URLResource.java:[line 68]<br/>Sink method java/net/URL.openConnection()Ljava/net/URLConnection;<br/>Sink parameter 0<br/>Unknown source org/eclipse/jetty/util/resource/URLResource._url<br/>At URLResource.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N82358');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N82358" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl<br/>In method org.xmlpull.v1.builder.impl.XmlInfosetBuilderImpl.parseLocation(String)<br/>At XmlInfosetBuilderImpl.java:[line 221]<br/>Sink method java/net/URL.openStream()Ljava/io/InputStream;<br/>Sink parameter 0<br/>Unknown source java/net/URL.&lt;init&gt;(Ljava/lang/String;)V<br/>Unknown source org/xmlpull/v1/builder/impl/XmlInfosetBuilderImpl.parseLocation(Ljava/lang/String;)Lorg/xmlpull/v1/builder/XmlDocument; parameter 0<br/>Method usage not detected<br/>At XmlInfosetBuilderImpl.java:[line 216]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N82526');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N82526" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.xmlpull.v1.sax2.Driver<br/>In method org.xmlpull.v1.sax2.Driver.parse(InputSource)<br/>At Driver.java:[line 293]<br/>Sink method java/net/URL.openStream()Ljava/io/InputStream;<br/>Sink parameter 0<br/>Unknown source java/net/URL.&lt;init&gt;(Ljava/lang/String;)V<br/>Unknown source org/xmlpull/v1/sax2/Driver.systemId<br/>At Driver.java:[line 292]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N84164');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N84164" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class spark.resource.AbstractFileResolvingResource<br/>In method spark.resource.AbstractFileResolvingResource.contentLength()<br/>At AbstractFileResolvingResource.java:[line 129]<br/>Sink method java/net/URL.openConnection()Ljava/net/URLConnection;<br/>Sink parameter 0<br/>Unknown source spark/resource/AbstractFileResolvingResource.getURL()Ljava/net/URL;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N84233');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N84233" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class spark.resource.AbstractFileResolvingResource<br/>In method spark.resource.AbstractFileResolvingResource.exists()<br/>At AbstractFileResolvingResource.java:[line 74]<br/>Sink method java/net/URL.openConnection()Ljava/net/URLConnection;<br/>Sink parameter 0<br/>Unknown source spark/resource/AbstractFileResolvingResource.getURL()Ljava/net/URL;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N84302');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N84302" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class spark.resource.AbstractFileResolvingResource<br/>In method spark.resource.AbstractFileResolvingResource.lastModified()<br/>At AbstractFileResolvingResource.java:[line 143]<br/>Sink method java/net/URL.openConnection()Ljava/net/URLConnection;<br/>Sink parameter 0<br/>Unknown source spark/resource/AbstractFileResolvingResource.getURL()Ljava/net/URL;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N79966');">
<td>
<span class="priority-2">SECUHE</span>
</td>
<td>Unsafe comparison of hash that are susceptible to timing attack</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N79966" style="display: none;">
<a href="#UNSAFE_HASH_EQUALS">Bug type UNSAFE_HASH_EQUALS (click for details)</a>
<br/>In class org.eclipse.paho.client.mqttv3.internal.websocket.WebSocketHandshake<br/>In method org.eclipse.paho.client.mqttv3.internal.websocket.WebSocketHandshake.verifyWebSocketKey(String, String)<br/>At WebSocketHandshake.java:[line 184]<br/>Sink method java/lang/String.equals(Ljava/lang/Object;)Z<br/>Sink parameter 0<br/>Unknown source org/eclipse/paho/client/mqttv3/internal/websocket/Base64$Base64Encoder.base64String<br/>Unknown source org/eclipse/paho/client/mqttv3/internal/websocket/Base64.encodeBytes([B)Ljava/lang/String;<br/>Unknown source org/eclipse/paho/client/mqttv3/internal/websocket/Base64$Base64Encoder.getBase64String()Ljava/lang/String;<br/>At Base64.java:[line 34]<br/>At Base64.java:[line 53]<br/>At WebSocketHandshake.java:[line 183]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N81336');">
<td>
<span class="priority-2">SECUHE</span>
</td>
<td>Unsafe comparison of hash that are susceptible to timing attack</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N81336" style="display: none;">
<a href="#UNSAFE_HASH_EQUALS">Bug type UNSAFE_HASH_EQUALS (click for details)</a>
<br/>In class org.jivesoftware.smack.util.TLSUtils<br/>In method org.jivesoftware.smack.util.TLSUtils.getChannelBindingTlsServerEndPoint(SSLSession)<br/>At TLSUtils.java:[line 192]<br/>Sink method java/lang/String.equals(Ljava/lang/Object;)Z<br/>Sink parameter 0</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N72174');">
<td>
<span class="priority-2">SECUR</span>
</td>
<td>The following redirection could be used by an attacker to redirect users to a phishing website.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N72174" style="display: none;">
<a href="#UNVALIDATED_REDIRECT">Bug type UNVALIDATED_REDIRECT (click for details)</a>
<br/>In class javax.servlet.http.HttpServletResponseWrapper<br/>In method javax.servlet.http.HttpServletResponseWrapper.sendRedirect(String)<br/>At HttpServletResponseWrapper.java:[line 176]<br/>Sink method javax/servlet/http/HttpServletResponse.sendRedirect(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source javax/servlet/http/HttpServletResponseWrapper.sendRedirect(Ljava/lang/String;)V parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N76721');">
<td>
<span class="priority-1">SECUR</span>
</td>
<td>The following redirection could be used by an attacker to redirect users to a phishing website.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N76721" style="display: none;">
<a href="#UNVALIDATED_REDIRECT">Bug type UNVALIDATED_REDIRECT (click for details)</a>
<br/>In class org.eclipse.jetty.server.handler.ContextHandler<br/>In method org.eclipse.jetty.server.handler.ContextHandler.checkContext(String, Request, HttpServletResponse)<br/>At ContextHandler.java:[line 1046]<br/>Sink method javax/servlet/http/HttpServletResponse.sendRedirect(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Tainted source org/eclipse/jetty/server/Request.getRequestURI()Ljava/lang/String;<br/>Tainted source org/eclipse/jetty/server/Request.getQueryString()Ljava/lang/String;<br/>At ContextHandler.java:[line 1046]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N76805');">
<td>
<span class="priority-1">SECUR</span>
</td>
<td>The following redirection could be used by an attacker to redirect users to a phishing website.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N76805" style="display: none;">
<a href="#UNVALIDATED_REDIRECT">Bug type UNVALIDATED_REDIRECT (click for details)</a>
<br/>In class org.eclipse.jetty.server.handler.ContextHandler<br/>In method org.eclipse.jetty.server.handler.ContextHandler.checkContext(String, Request, HttpServletResponse)<br/>At ContextHandler.java:[line 1048]<br/>Sink method javax/servlet/http/HttpServletResponse.sendRedirect(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Tainted source org/eclipse/jetty/server/Request.getRequestURI()Ljava/lang/String;<br/>At ContextHandler.java:[line 1048]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N83828');">
<td>
<span class="priority-2">SECUR</span>
</td>
<td>The following redirection could be used by an attacker to redirect users to a phishing website.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N83828" style="display: none;">
<a href="#UNVALIDATED_REDIRECT">Bug type UNVALIDATED_REDIRECT (click for details)</a>
<br/>In class spark.Response<br/>In method spark.Response.redirect(String)<br/>At Response.java:[line 122]<br/>Sink method javax/servlet/http/HttpServletResponse.sendRedirect(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source spark/Response.redirect(Ljava/lang/String;)V parameter 0<br/>Method usage not detected<br/>At Redirect.java:[line 176]<br/>At ResponseWrapper.java:[line 83]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N83922');">
<td>
<span class="priority-2">SECUR</span>
</td>
<td>The following redirection could be used by an attacker to redirect users to a phishing website.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N83922" style="display: none;">
<a href="#UNVALIDATED_REDIRECT">Bug type UNVALIDATED_REDIRECT (click for details)</a>
<br/>In class spark.Response<br/>In method spark.Response.redirect(String, int)<br/>At Response.java:[line 139]<br/>Sink method javax/servlet/http/HttpServletResponse.setHeader(Ljava/lang/String;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source spark/Response.redirect(Ljava/lang/String;I)V parameter 1<br/>Method usage not detected<br/>At Redirect.java:[line 174]<br/>At ResponseWrapper.java:[line 89]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N72248');">
<td>
<span class="priority-1">SECURLR</span>
</td>
<td>Method rewriting session ID into the URL</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N72248" style="display: none;">
<a href="#URL_REWRITING">Bug type URL_REWRITING (click for details)</a>
<br/>In class javax.servlet.http.HttpServletResponseWrapper<br/>In method javax.servlet.http.HttpServletResponseWrapper.encodeRedirectURL(String)<br/>At HttpServletResponseWrapper.java:[line 125]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N72301');">
<td>
<span class="priority-1">SECURLR</span>
</td>
<td>Method rewriting session ID into the URL</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N72301" style="display: none;">
<a href="#URL_REWRITING">Bug type URL_REWRITING (click for details)</a>
<br/>In class javax.servlet.http.HttpServletResponseWrapper<br/>In method javax.servlet.http.HttpServletResponseWrapper.encodeRedirectUrl(String)<br/>At HttpServletResponseWrapper.java:[line 149]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N72354');">
<td>
<span class="priority-1">SECURLR</span>
</td>
<td>Method rewriting session ID into the URL</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N72354" style="display: none;">
<a href="#URL_REWRITING">Bug type URL_REWRITING (click for details)</a>
<br/>In class javax.servlet.http.HttpServletResponseWrapper<br/>In method javax.servlet.http.HttpServletResponseWrapper.encodeURL(String)<br/>At HttpServletResponseWrapper.java:[line 116]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N72407');">
<td>
<span class="priority-1">SECURLR</span>
</td>
<td>Method rewriting session ID into the URL</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N72407" style="display: none;">
<a href="#URL_REWRITING">Bug type URL_REWRITING (click for details)</a>
<br/>In class javax.servlet.http.HttpServletResponseWrapper<br/>In method javax.servlet.http.HttpServletResponseWrapper.encodeUrl(String)<br/>At HttpServletResponseWrapper.java:[line 137]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N76205');">
<td>
<span class="priority-1">SECURLR</span>
</td>
<td>Method rewriting session ID into the URL</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N76205" style="display: none;">
<a href="#URL_REWRITING">Bug type URL_REWRITING (click for details)</a>
<br/>In class org.eclipse.jetty.security.authentication.FormAuthenticator<br/>In method org.eclipse.jetty.security.authentication.FormAuthenticator.validateRequest(ServletRequest, ServletResponse, boolean)<br/>At FormAuthenticator.java:[line 308]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N76258');">
<td>
<span class="priority-1">SECURLR</span>
</td>
<td>Method rewriting session ID into the URL</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N76258" style="display: none;">
<a href="#URL_REWRITING">Bug type URL_REWRITING (click for details)</a>
<br/>In class org.eclipse.jetty.security.authentication.FormAuthenticator<br/>In method org.eclipse.jetty.security.authentication.FormAuthenticator.validateRequest(ServletRequest, ServletResponse, boolean)<br/>At FormAuthenticator.java:[line 333]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N76311');">
<td>
<span class="priority-1">SECURLR</span>
</td>
<td>Method rewriting session ID into the URL</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N76311" style="display: none;">
<a href="#URL_REWRITING">Bug type URL_REWRITING (click for details)</a>
<br/>In class org.eclipse.jetty.security.authentication.FormAuthenticator<br/>In method org.eclipse.jetty.security.authentication.FormAuthenticator.validateRequest(ServletRequest, ServletResponse, boolean)<br/>At FormAuthenticator.java:[line 425]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69849');">
<td>
<span class="priority-2">SECUS</span>
</td>
<td>Unencrypted socket to com.bwssystems.HABridge.plugins.tcp.TCPHome (instead of SSLSocket)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69849" style="display: none;">
<a href="#UNENCRYPTED_SOCKET">Bug type UNENCRYPTED_SOCKET (click for details)</a>
<br/>In class com.bwssystems.HABridge.plugins.tcp.TCPHome<br/>In method com.bwssystems.HABridge.plugins.tcp.TCPHome.deviceHandler(CallItem, MultiCommandUtil, String, int, Integer, Integer, ColorData, DeviceDescriptor, String)<br/>At TCPHome.java:[line 77]<br/>Value remote host</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N74611');">
<td>
<span class="priority-2">SECUS</span>
</td>
<td>Unencrypted socket to org.apache.http.conn.socket.PlainConnectionSocketFactory (instead of SSLSocket)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N74611" style="display: none;">
<a href="#UNENCRYPTED_SOCKET">Bug type UNENCRYPTED_SOCKET (click for details)</a>
<br/>In class org.apache.http.conn.socket.PlainConnectionSocketFactory<br/>In method org.apache.http.conn.socket.PlainConnectionSocketFactory.createSocket(HttpContext)<br/>At PlainConnectionSocketFactory.java:[line 58]<br/>Value remote host</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N76583');">
<td>
<span class="priority-2">SECUSS</span>
</td>
<td>Unencrypted server socket (instead of SSLServerSocket)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N76583" style="display: none;">
<a href="#UNENCRYPTED_SERVER_SOCKET">Bug type UNENCRYPTED_SERVER_SOCKET (click for details)</a>
<br/>In class org.eclipse.jetty.server.ShutdownMonitor<br/>In method org.eclipse.jetty.server.ShutdownMonitor.listen()<br/>At ShutdownMonitor.java:[line 273]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N84016');">
<td>
<span class="priority-2">SECUSS</span>
</td>
<td>Unencrypted server socket (instead of SSLServerSocket)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N84016" style="display: none;">
<a href="#UNENCRYPTED_SERVER_SOCKET">Bug type UNENCRYPTED_SERVER_SOCKET (click for details)</a>
<br/>In class spark.embeddedserver.jetty.EmbeddedJettyServer<br/>In method spark.embeddedserver.jetty.EmbeddedJettyServer.ignite(String, int, SslStores, int, int, int)<br/>At EmbeddedJettyServer.java:[line 90]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N74669');">
<td>
<span class="priority-2">SECWHV</span>
</td>
<td>HostnameVerifier that accept any signed certificates makes communication vulnerable to a MITM attack</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N74669" style="display: none;">
<a href="#WEAK_HOSTNAME_VERIFIER">Bug type WEAK_HOSTNAME_VERIFIER (click for details)</a>
<br/>In class org.apache.http.conn.ssl.AllowAllHostnameVerifier<br/>In method org.apache.http.conn.ssl.AllowAllHostnameVerifier.verify(String, String[], String[])<br/>At AllowAllHostnameVerifier.java:[line 53]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N81400');">
<td>
<span class="priority-2">SECWHV</span>
</td>
<td>HostnameVerifier that accept any signed certificates makes communication vulnerable to a MITM attack</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N81400" style="display: none;">
<a href="#WEAK_HOSTNAME_VERIFIER">Bug type WEAK_HOSTNAME_VERIFIER (click for details)</a>
<br/>In class org.jivesoftware.smack.util.TLSUtils$1<br/>In method org.jivesoftware.smack.util.TLSUtils$1.verify(String, SSLSession)<br/>At TLSUtils.java:[line 110]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N79092');">
<td>
<span class="priority-2">SECWTM</span>
</td>
<td>TrustManager that accept any certificates makes communication vulnerable to a MITM attack</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N79092" style="display: none;">
<a href="#WEAK_TRUST_MANAGER">Bug type WEAK_TRUST_MANAGER (click for details)</a>
<br/>In class org.eclipse.jetty.util.ssl.SslContextFactory$1<br/>In method org.eclipse.jetty.util.ssl.SslContextFactory$1.checkClientTrusted(X509Certificate[], String)<br/>At SslContextFactory.java:[line 101]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N79146');">
<td>
<span class="priority-2">SECWTM</span>
</td>
<td>TrustManager that accept any certificates makes communication vulnerable to a MITM attack</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N79146" style="display: none;">
<a href="#WEAK_TRUST_MANAGER">Bug type WEAK_TRUST_MANAGER (click for details)</a>
<br/>In class org.eclipse.jetty.util.ssl.SslContextFactory$1<br/>In method org.eclipse.jetty.util.ssl.SslContextFactory$1.checkServerTrusted(X509Certificate[], String)<br/>At SslContextFactory.java:[line 105]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N79200');">
<td>
<span class="priority-2">SECWTM</span>
</td>
<td>TrustManager that accept any certificates makes communication vulnerable to a MITM attack</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N79200" style="display: none;">
<a href="#WEAK_TRUST_MANAGER">Bug type WEAK_TRUST_MANAGER (click for details)</a>
<br/>In class org.eclipse.jetty.util.ssl.SslContextFactory$1<br/>In method org.eclipse.jetty.util.ssl.SslContextFactory$1.getAcceptedIssuers()<br/>At SslContextFactory.java:[line 96]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N81454');">
<td>
<span class="priority-2">SECWTM</span>
</td>
<td>TrustManager that accept any certificates makes communication vulnerable to a MITM attack</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N81454" style="display: none;">
<a href="#WEAK_TRUST_MANAGER">Bug type WEAK_TRUST_MANAGER (click for details)</a>
<br/>In class org.jivesoftware.smack.util.TLSUtils$AcceptAllTrustManager<br/>In method org.jivesoftware.smack.util.TLSUtils$AcceptAllTrustManager.checkClientTrusted(X509Certificate[], String)<br/>At TLSUtils.java:[line 222]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N81508');">
<td>
<span class="priority-2">SECWTM</span>
</td>
<td>TrustManager that accept any certificates makes communication vulnerable to a MITM attack</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N81508" style="display: none;">
<a href="#WEAK_TRUST_MANAGER">Bug type WEAK_TRUST_MANAGER (click for details)</a>
<br/>In class org.jivesoftware.smack.util.TLSUtils$AcceptAllTrustManager<br/>In method org.jivesoftware.smack.util.TLSUtils$AcceptAllTrustManager.checkServerTrusted(X509Certificate[], String)<br/>At TLSUtils.java:[line 228]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N81562');">
<td>
<span class="priority-2">SECWTM</span>
</td>
<td>TrustManager that accept any certificates makes communication vulnerable to a MITM attack</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N81562" style="display: none;">
<a href="#WEAK_TRUST_MANAGER">Bug type WEAK_TRUST_MANAGER (click for details)</a>
<br/>In class org.jivesoftware.smack.util.TLSUtils$AcceptAllTrustManager<br/>In method org.jivesoftware.smack.util.TLSUtils$AcceptAllTrustManager.getAcceptedIssuers()<br/>At TLSUtils.java:[line 232]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N72030');">
<td>
<span class="priority-1">SECXSS2</span>
</td>
<td>This use of javax/servlet/ServletOutputStream.print(Ljava/lang/String;)V could be vulnerable to XSS in the Servlet</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N72030" style="display: none;">
<a href="#XSS_SERVLET">Bug type XSS_SERVLET (click for details)</a>
<br/>In class javax.servlet.http.HttpServlet<br/>In method javax.servlet.http.HttpServlet.doTrace(HttpServletRequest, HttpServletResponse)<br/>At HttpServlet.java:[line 648]<br/>Sink method javax/servlet/ServletOutputStream.print(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Tainted source javax/servlet/http/HttpServletRequest.getRequestURI()Ljava/lang/String;<br/>Tainted source javax/servlet/http/HttpServletRequest.getHeaderNames()Ljava/util/Enumeration;<br/>Tainted source javax/servlet/http/HttpServletRequest.getHeader(Ljava/lang/String;)Ljava/lang/String;<br/>Tainted source java/util/Enumeration.nextElement()Ljava/lang/Object;<br/>At HttpServlet.java:[line 630]<br/>At HttpServlet.java:[line 633]<br/>At HttpServlet.java:[line 636]<br/>At HttpServlet.java:[line 637]<br/>At HttpServlet.java:[line 641]<br/>At HttpServlet.java:[line 648]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N72460');">
<td>
<span class="priority-2">SECXSS2</span>
</td>
<td>This use of javax/servlet/http/HttpServletResponse.sendError(ILjava/lang/String;)V could be vulnerable to XSS in the Servlet</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N72460" style="display: none;">
<a href="#XSS_SERVLET">Bug type XSS_SERVLET (click for details)</a>
<br/>In class javax.servlet.http.HttpServletResponseWrapper<br/>In method javax.servlet.http.HttpServletResponseWrapper.sendError(int, String)<br/>At HttpServletResponseWrapper.java:[line 158]<br/>Sink method javax/servlet/http/HttpServletResponse.sendError(ILjava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source javax/servlet/http/HttpServletResponseWrapper.sendError(ILjava/lang/String;)V parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N72534');">
<td>
<span class="priority-2">SECXSS2</span>
</td>
<td>This use of javax/servlet/http/HttpServletResponse.setStatus(ILjava/lang/String;)V could be vulnerable to XSS in the Servlet</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N72534" style="display: none;">
<a href="#XSS_SERVLET">Bug type XSS_SERVLET (click for details)</a>
<br/>In class javax.servlet.http.HttpServletResponseWrapper<br/>In method javax.servlet.http.HttpServletResponseWrapper.setStatus(int, String)<br/>At HttpServletResponseWrapper.java:[line 253]<br/>Sink method javax/servlet/http/HttpServletResponse.setStatus(ILjava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source javax/servlet/http/HttpServletResponseWrapper.setStatus(ILjava/lang/String;)V parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N75912');">
<td>
<span class="priority-2">SECXSS2</span>
</td>
<td>This use of javax/servlet/http/HttpServletResponse.sendError(ILjava/lang/String;)V could be vulnerable to XSS in the Servlet</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N75912" style="display: none;">
<a href="#XSS_SERVLET">Bug type XSS_SERVLET (click for details)</a>
<br/>In class org.eclipse.jetty.security.SecurityHandler<br/>In method org.eclipse.jetty.security.SecurityHandler.handle(String, Request, HttpServletRequest, HttpServletResponse)<br/>At SecurityHandler.java:[line 557]<br/>Sink method javax/servlet/http/HttpServletResponse.sendError(ILjava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/eclipse/jetty/security/ServerAuthException.getMessage()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N76637');">
<td>
<span class="priority-2">SECXSS2</span>
</td>
<td>This use of javax/servlet/http/HttpServletResponse.sendError(ILjava/lang/String;)V could be vulnerable to XSS in the Servlet</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N76637" style="display: none;">
<a href="#XSS_SERVLET">Bug type XSS_SERVLET (click for details)</a>
<br/>In class org.eclipse.jetty.server.handler.AbstractHandler<br/>In method org.eclipse.jetty.server.handler.AbstractHandler.doError(String, Request, HttpServletRequest, HttpServletResponse)<br/>At AbstractHandler.java:[line 100]<br/>Sink method javax/servlet/http/HttpServletResponse.sendError(ILjava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/lang/Object.toString()Ljava/lang/String;<br/>Unknown source javax/servlet/http/HttpServletRequest.getAttribute(Ljava/lang/String;)Ljava/lang/Object;<br/>At AbstractHandler.java:[line 98]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N79381');">
<td>
<span class="priority-2">SECXSS2</span>
</td>
<td>This use of javax/servlet/http/HttpServletResponse.sendError(ILjava/lang/String;)V could be vulnerable to XSS in the Servlet</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N79381" style="display: none;">
<a href="#XSS_SERVLET">Bug type XSS_SERVLET (click for details)</a>
<br/>In class org.eclipse.jetty.websocket.servlet.ServletUpgradeResponse<br/>In method org.eclipse.jetty.websocket.servlet.ServletUpgradeResponse.sendForbidden(String)<br/>At ServletUpgradeResponse.java:[line 233]<br/>Sink method javax/servlet/http/HttpServletResponse.sendError(ILjava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/eclipse/jetty/websocket/servlet/ServletUpgradeResponse.sendForbidden(Ljava/lang/String;)V parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66334');">
<td>
<span class="priority-2">SECXXESAX</span>
</td>
<td>The use of SAXParser.parse(...) (SAXParser) is vulnerable to XML External Entity attacks</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66334" style="display: none;">
<a href="#XXE_SAXPARSER">Bug type XXE_SAXPARSER (click for details)</a>
<br/>In class ch.qos.logback.core.joran.event.SaxEventRecorder<br/>In method ch.qos.logback.core.joran.event.SaxEventRecorder.recordEvents(InputSource)<br/>At SaxEventRecorder.java:[line 59]<br/>Value SAXParser.parse(...)</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N82134');">
<td>
<span class="priority-2">SECXXETFDTD</span>
</td>
<td>The use of TransformerFactory.newInstance(...) (TransformerFactory) is vulnerable to XML External Entity attacks</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N82134" style="display: none;">
<a href="#XXE_DTD_TRANSFORM_FACTORY">Bug type XXE_DTD_TRANSFORM_FACTORY (click for details)</a>
<br/>In class org.jivesoftware.smackx.debugger.EnhancedDebugger<br/>In method org.jivesoftware.smackx.debugger.EnhancedDebugger.formatXML(String)<br/>At EnhancedDebugger.java:[line 963]<br/>Value TransformerFactory.newInstance(...)</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N82192');">
<td>
<span class="priority-2">SECXXETFXSLT</span>
</td>
<td>The use of TransformerFactory.newInstance(...) is vulnerable to XSLT External Entity attacks</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N82192" style="display: none;">
<a href="#XXE_XSLT_TRANSFORM_FACTORY">Bug type XXE_XSLT_TRANSFORM_FACTORY (click for details)</a>
<br/>In class org.jivesoftware.smackx.debugger.EnhancedDebugger<br/>In method org.jivesoftware.smackx.debugger.EnhancedDebugger.formatXML(String)<br/>At EnhancedDebugger.java:[line 963]<br/>Value TransformerFactory.newInstance(...)</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71011');">
<td>
<span class="priority-2">STAIV</span>
</td>
<td>The initialization vector (IV) is not properly generated</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71011" style="display: none;">
<a href="#STATIC_IV">Bug type STATIC_IV (click for details)</a>
<br/>In class com.github.mob41.blapi.pkt.auth.AES<br/>In method com.github.mob41.blapi.pkt.auth.AES.encrypt(byte[])<br/>At AES.java:[line 52]</p>
</td>
</tr>
</table>
<h1>
<a name="Details">Details</a>
</h1>
<h2>
<a name="CIPHER_INTEGRITY">CIPHER_INTEGRITY: Cipher with no integrity</a>
</h2>
            
<p>
    The ciphertext produced is susceptible to alteration by an adversary. This mean that the cipher provides no way to detect that the
    data has been tampered with. If the ciphertext can be controlled by an attacker, it could be altered without detection.
</p>
<p>
    The solution is to use a cipher that includes a Hash based Message Authentication Code (HMAC) to sign the data. Combining a HMAC function to the
    existing cipher is prone to error <sup><a href="https://moxie.org/blog/the-cryptographic-doom-principle/">[1]</a></sup>. Specifically,
    it is always recommended that you be able to verify the HMAC first, and only if the data is unmodified, do you then perform any cryptographic
    functions on the data.
</p>
<p>The following modes are vulnerable because they don't provide a HMAC:<br/>
    - CBC<br/>
    - OFB<br/>
    - CTR<br/>
    - ECB<br/><br/>
    The following snippets code are some examples of vulnerable code.<br/><br/>
    <b>Code at risk:</b><br/>
    <i>AES in CBC mode</i><br/>

    <pre>Cipher c = Cipher.getInstance("AES/CBC/PKCS5Padding");
c.init(Cipher.ENCRYPT_MODE, k, iv);
byte[] cipherText = c.doFinal(plainText);</pre>
    <br/>
    <i>Triple DES with ECB mode</i><br/>

<pre>Cipher c = Cipher.getInstance("DESede/ECB/PKCS5Padding");
c.init(Cipher.ENCRYPT_MODE, k, iv);
byte[] cipherText = c.doFinal(plainText);</pre>
</p>
<p>
    <b>Solution:</b>
    <pre>Cipher c = Cipher.getInstance("AES/GCM/NoPadding");
c.init(Cipher.ENCRYPT_MODE, k, iv);
byte[] cipherText = c.doFinal(plainText);</pre>
</p>
<p>
In the example solution above, the GCM mode introduces an HMAC into the resulting encrypted data, providing integrity of the result.
</p>
<br/>
<p>
    <b>References</b><br/>
    <a href="https://en.wikipedia.org/wiki/Authenticated_encryption">Wikipedia: Authenticated encryption</a><br/>
    <a href="https://csrc.nist.gov/projects/block-cipher-techniques/bcm/modes-develoment#01">NIST: Authenticated Encryption Modes</a><br/>
    <a href="https://moxie.org/blog/the-cryptographic-doom-principle/">Moxie Marlinspike's blog: The Cryptographic Doom Principle</a><br/>
    <a href="https://cwe.mitre.org/data/definitions/353.html">CWE-353: Missing Support for Integrity Check</a>
</p>

        
<h2>
<a name="INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE: Information Exposure Through An Error Message</a>
</h2>
            
<p>
The sensitive information may be valuable information on its own (such as a password), or it may be useful for launching other, more deadly attacks. If an attack fails, an attacker may use error information provided by the server to launch another more focused attack. For example, an attempt to exploit a path traversal weakness (CWE-22) might yield the full pathname of the installed application. In turn, this could be used to select the proper number of ".." sequences to navigate to the targeted file. An attack using SQL injection (CWE-89) might not initially succeed, but an error message could reveal the malformed query, which would expose query logic and possibly even passwords or other sensitive information used within the query.
</p>
<p>
    <b>Vulnerable Code:</b><br/>
<pre>try {
  out = httpResponse.getOutputStream()
} catch (Exception e) {
  e.printStackTrace(out);
}</pre>
</p>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/209.html">CWE-209: Information Exposure Through an Error Message</a><br/>
<a href="https://cwe.mitre.org/data/definitions/211.html">CWE-211: Information Exposure Through Externally-Generated Error Message</a><br/>
</p>
            
        
<h2>
<a name="COMMAND_INJECTION">COMMAND_INJECTION: Potential Command Injection</a>
</h2>
            
<p>The highlighted API is used to execute a system command. If unfiltered input is passed to this API, it can lead to arbitrary command execution.</p>
<br/>
<p>
    <b>Vulnerable Code:</b><br/>
<pre>import java.lang.Runtime;

Runtime r = Runtime.getRuntime();
r.exec("/bin/sh -c some_tool" + input);</pre>
</p>
<p>
<b>References</b><br/>
<a href="https://www.owasp.org/index.php/Command_Injection">OWASP: Command Injection</a><br/>
<a href="https://www.owasp.org/index.php/Top_10_2013-A1-Injection">OWASP: Top 10 2013-A1-Injection</a><br/>
<a href="https://cwe.mitre.org/data/definitions/78.html">CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')</a>
</p>

        
<h2>
<a name="CRLF_INJECTION_LOGS">CRLF_INJECTION_LOGS: Potential CRLF Injection for logs</a>
</h2>
            
<p>
    When data from an untrusted source is put into a logger and not neutralized correctly,
    an attacker could forge log entries or include malicious content.
    Inserted false entries could be used to skew statistics, distract the administrator
    or even to implicate another party in the commission of a malicious act.
    If the log file is processed automatically, the attacker can render the file unusable
    by corrupting the format of the file or injecting unexpected characters.
    An attacker may also inject code or other commands into the log file and take advantage
    of a vulnerability in the log processing utility (e.g. command injection or XSS).
</p>
<br/>
<p>
<b>Code at risk:</b><br/>
<pre>String val = request.getParameter("user");
String metadata = request.getParameter("metadata");
[...]
if(authenticated) {
    log.info("User " + val + " (" + metadata + ") was authenticated successfully");
}
else {
    log.info("User " + val + " (" + metadata + ") was not authenticated");
}
</pre>

A malicious user could send the metadata parameter with the value: <code>"Firefox) was authenticated successfully\r\n[INFO] User bbb (Internet Explorer"</code>.
</p>

<b>Solution:</b><br/>
<p>
You can manually sanitize each parameter.
<pre>
log.info("User " + val.replaceAll("[\r\n]","") + " (" + userAgent.replaceAll("[\r\n]","") + ") was not authenticated");
</pre>
</p>

<p>
You can also configure your logger service to replace new line for all message events. Here is sample configuration for LogBack <a href="https://logback.qos.ch/manual/layouts.html#replace">using the <code>replace</code> function</a>.
<pre>
&lt;pattern&gt;%-5level - %replace(%msg){'[\r\n]', ''}%n&lt;/pattern&gt;
</pre>
</p>

<p>
Finally, you can use a logger implementation that replace new line by spaces.
The project <a href="https://github.com/javabeanz/owasp-security-logging">OWASP Security Logging</a> has an implementation for Logback and Log4j.
</p>

<br/>
<p>
    <b>References</b><br/>
    <a href="https://cwe.mitre.org/data/definitions/117.html">CWE-117: Improper Output Neutralization for Logs</a><br/>
    <a href="https://cwe.mitre.org/data/definitions/93.html">CWE-93: Improper Neutralization of CRLF Sequences ('CRLF Injection')</a><br/>
    <a href="https://logback.qos.ch/manual/layouts.html#replace">CWE-93: Improper Neutralization of CRLF Sequences ('CRLF Injection')</a><br/>
    <a href="https://github.com/javabeanz/owasp-security-logging">OWASP Security Logging</a><br/>
</p>


        
<h2>
<a name="DESERIALIZATION_GADGET">DESERIALIZATION_GADGET: This class could be used as deserialization gadget</a>
</h2>
            
<p>
Deserialization gadget are class that could be used by an attacker to take advantage of a remote API using Native Serialization.
This class is either adding custom behavior to deserialization with the <code>readObject</code> method (Serializable) or can be called
 from a serialized object (InvocationHandler).
</p>
<p>
This detector is intended to be used mostly by researcher. The real issue is using deserialization for remote operation.
Removing gadget is a hardening practice to reduce the risk of being exploited.
</p>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/502.html">CWE-502: Deserialization of Untrusted Data</a><br/>
<a href="https://www.owasp.org/index.php/Deserialization_of_untrusted_data">Deserialization of untrusted data</a><br/>
<a href="https://www.oracle.com/technetwork/java/seccodeguide-139067.html#8">Serialization and Deserialization </a><br/>
<a href="https://github.com/frohoff/ysoserial">A tool for generating payloads that exploit unsafe Java object deserialization</a><br/>
[1] <a href="https://gist.github.com/coekie/a27cc406fc9f3dc7a70d">Example of Denial of Service using the class <code>java.util.HashSet</code></a><br/>
[2] <a href="https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2015-2590">OpenJDK: Deserialization issue in ObjectInputStream.readSerialData() (CVE-2015-2590)</a><br/>
[3] <a href="https://www.rapid7.com/db/modules/exploit/multi/browser/java_calendar_deserialize">Rapid7: Sun Java Calendar Deserialization Privilege Escalation (CVE-2008-5353)</a>
</p>

        
<h2>
<a name="DES_USAGE">DES_USAGE: DES is insecure</a>
</h2>
            
<p>
DES is considered strong ciphers for modern applications. Currently, NIST recommends the
usage of AES block ciphers instead of DES.
</p>
<p>
    <b>Example weak code:</b>
<pre>Cipher c = Cipher.getInstance("DES/ECB/PKCS5Padding");
c.init(Cipher.ENCRYPT_MODE, k, iv);
byte[] cipherText = c.doFinal(plainText);</pre>
</p>
<p>
    <b>Example solution:</b>
    <pre>Cipher c = Cipher.getInstance("AES/GCM/NoPadding");
c.init(Cipher.ENCRYPT_MODE, k, iv);
byte[] cipherText = c.doFinal(plainText);</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard">NIST Withdraws Outdated Data Encryption Standard</a><br/>
<a href="https://cwe.mitre.org/data/definitions/326.html">CWE-326: Inadequate Encryption Strength</a>
</p>

        
<h2>
<a name="ECB_MODE">ECB_MODE: ECB mode is insecure</a>
</h2>
            
<p>An authentication cipher mode which provides better confidentiality of the encrypted data should be used instead of Electronic Code Book (ECB) mode,
which does not provide good confidentiality. Specifically, ECB mode produces the same output for the same input each time. So,
for example, if a user is sending a password, the encrypted value is the same each time. This allows an attacker to intercept
and replay the data.</p>
<p>
To fix this, something like Galois/Counter Mode (GCM) should be used instead.
</p>
<p>
<b>Code at risk:</b>
    <pre>Cipher c = Cipher.getInstance("AES/ECB/NoPadding");
c.init(Cipher.ENCRYPT_MODE, k, iv);
byte[] cipherText = c.doFinal(plainText);</pre>
</p>
<p>
    <b>Solution:</b>
    <pre>Cipher c = Cipher.getInstance("AES/GCM/NoPadding");
c.init(Cipher.ENCRYPT_MODE, k, iv);
byte[] cipherText = c.doFinal(plainText);</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://en.wikipedia.org/wiki/Authenticated_encryption">Wikipedia: Authenticated encryption</a><br/>
<a href="https://csrc.nist.gov/projects/block-cipher-techniques/bcm/modes-develoment#01">NIST: Authenticated Encryption Modes</a><br/>
<a href="https://en.wikipedia.org/wiki/Block_cipher_modes_of_operation#Electronic_codebook_.28ECB.29">Wikipedia: Block cipher modes of operation</a><br/>
<a href="https://csrc.nist.gov/publications/detail/sp/800-38a/final">NIST: Recommendation for Block Cipher Modes of Operation</a>
</p>

        
<h2>
<a name="HARD_CODE_KEY">HARD_CODE_KEY: Hard coded key</a>
</h2>
            
<p>
Cryptographic keys should not be kept in the source code. The source code can be widely shared in an enterprise environment, and is
certainly shared in open source. To be managed safely, passwords and secret keys should be stored in separate configuration files or keystores.
(Hard coded passwords are reported separately by the <i>Hard coded password</i> pattern)
</p>
<p>
<p><b>Vulnerable Code:</b><br/>

<pre>byte[] key = {1, 2, 3, 4, 5, 6, 7, 8};
SecretKeySpec spec = new SecretKeySpec(key, "AES");
Cipher aes = Cipher.getInstance("AES");
aes.init(Cipher.ENCRYPT_MODE, spec);
return aesCipher.doFinal(secretData);</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/321.html">CWE-321: Use of Hard-coded Cryptographic Key</a><br/>
</p>

        
<h2>
<a name="HARD_CODE_PASSWORD">HARD_CODE_PASSWORD: Hard coded password</a>
</h2>
            
<p>
Passwords should not be kept in the source code. The source code can be widely shared in an enterprise environment, and is
certainly shared in open source. To be managed safely, passwords and secret keys should be stored in separate configuration files or keystores.
(Hard coded keys are reported separately by <i>Hard Coded Key</i> pattern)
</p>
<p>
<p><b>Vulnerable Code:</b><br/>

<pre>private String SECRET_PASSWORD = "letMeIn!";

Properties props = new Properties();
props.put(Context.SECURITY_CREDENTIALS, "p@ssw0rd");</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/259.html">CWE-259: Use of Hard-coded Password</a>
</p>

        
<h2>
<a name="HTTPONLY_COOKIE">HTTPONLY_COOKIE: Cookie without the HttpOnly flag</a>
</h2>
            
<p>
A new cookie is created without the <code>HttpOnly</code> flag set.
The <code>HttpOnly</code> flag is a directive to the browser to make sure that the cookie can not be red by
malicious script. When a user is the target of a "Cross-Site Scripting", the attacker would benefit greatly from getting
the session id for example.
</p>

<p>
<b>Code at risk:</b><br/>
<pre>
Cookie cookie = new Cookie("email",userName);
response.addCookie(cookie);
</pre>
</p>

<p>
<b>Solution (Specific configuration):</b><br/>
<pre>
Cookie cookie = new Cookie("email",userName);
cookie.setSecure(true);
cookie.setHttpOnly(true); //HttpOnly flag
</pre>
</p>

<p>
<b>Solution (Servlet 3.0 configuration):</b><br/>
<pre>
&lt;web-app xmlns="http://java.sun.com/xml/ns/javaee" version="3.0"&gt;
[...]
&lt;session-config&gt;
 &lt;cookie-config&gt;
  &lt;http-only&gt;true&lt;/http-only&gt;
  &lt;secure&gt;true&lt;/secure&gt;
 &lt;/cookie-config&gt;
&lt;/session-config&gt;
&lt;/web-app&gt;
</pre>
</p>
<br/>
<p>
<b>Reference</b><br/>
<a href="https://blog.codinghorror.com/protecting-your-cookies-httponly/">Coding Horror blog: Protecting Your Cookies: HttpOnly</a><br/>
<a href="https://www.owasp.org/index.php/HttpOnly">OWASP: HttpOnly</a><br/>
<a href="https://www.rapid7.com/db/vulnerabilities/http-cookie-http-only-flag">Rapid7: Missing HttpOnly Flag From Cookie</a>
</p>

        
<h2>
<a name="HTTP_PARAMETER_POLLUTION">HTTP_PARAMETER_POLLUTION: HTTP Parameter Pollution</a>
</h2>
            
<p>
Concatenating unvalidated user input into a URL can allow an attacker to override the value of a request parameter. Attacker may be able to override existing parameter values, inject a new parameter or exploit variables out of a direct reach. HTTP Parameter Pollution (HPP) attacks consist of injecting encoded query string delimiters into other existing parameters. If a web application does not properly sanitize the user input, a malicious user may compromise the logic of the application to perform either client-side or server-side attacks.<br/>
In the following example the programmer has not considered the possibility that an attacker could provide a parameter <code>lang</code> such as <code>en&user_id=1</code>, which would enable him to change the <code>user_id</code> at will.
</p>
<p>
    <b>Vulnerable Code:</b><br/>
<pre>String lang = request.getParameter("lang");
GetMethod get = new GetMethod("http://www.host.com");
get.setQueryString("lang=" + lang + "&user_id=" + user_id);
get.execute();</pre>
<p>
    <b>Solution:</b><br/>
Sanitize user input before using it in HTTP parameters.
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://capec.mitre.org/data/definitions/460.html">CAPEC-460: HTTP Parameter Pollution (HPP)</a>
</p>
            
        
<h2>
<a name="HTTP_RESPONSE_SPLITTING">HTTP_RESPONSE_SPLITTING: Potential HTTP Response Splitting</a>
</h2>
            
<p>
    When an HTTP request contains unexpected <code>CR</code> and <code>LF</code> characters, the server may respond with an output stream
    that is interpreted as two different HTTP responses (instead of one).
    An attacker can control the second response and mount attacks such as cross-site scripting and cache poisoning attacks.
    According to OWASP, the issue has been fixed in virtually all modern Java EE application servers, but it is still better to validate the input.
    If you are concerned about this risk, you should test on the platform of concern to see
    if the underlx platform allows for <code>CR</code> or <code>LF</code> characters to be injected into headers.
    This weakness is reported with low priority because it requires the web container to be vulnerable.
</p>
<br/>
<p>
<b>Code at risk:</b><br/>
<pre>String author = request.getParameter(AUTHOR_PARAMETER);
// ...
Cookie cookie = new Cookie("author", author);
response.addCookie(cookie);</pre>
</p>
<br/>
<p>
    <b>References</b><br/>
    <a href="https://www.owasp.org/index.php/HTTP_Response_Splitting">OWASP: HTTP Response Splitting</a><br/>
    <a href="https://cwe.mitre.org/data/definitions/113.html">CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Response Splitting')</a>
    <a href="https://cwe.mitre.org/data/definitions/93.html">CWE-93: Improper Neutralization of CRLF Sequences ('CRLF Injection')</a><br/>
</p>


        
<h2>
<a name="INSECURE_COOKIE">INSECURE_COOKIE: Cookie without the secure flag</a>
</h2>
            
<p>
A new cookie is created without the <code>Secure</code> flag set.
The <code>Secure</code> flag is a directive to the browser to make sure that the cookie is not sent for insecure
communication (<code>http://</code>).
</p>

<p>
<b>Code at risk:</b><br/>
<pre>
Cookie cookie = new Cookie("userName",userName);
response.addCookie(cookie);
</pre>
</p>

<p>
<b>Solution (Specific configuration):</b><br/>
<pre>
Cookie cookie = new Cookie("userName",userName);
cookie.setSecure(true); // Secure flag
cookie.setHttpOnly(true);
</pre>
</p>

<p>
<b>Solution (Servlet 3.0 configuration):</b><br/>
<pre>
&lt;web-app xmlns="http://java.sun.com/xml/ns/javaee" version="3.0"&gt;
[...]
&lt;session-config&gt;
 &lt;cookie-config&gt;
  &lt;http-only&gt;true&lt;/http-only&gt;
  &lt;secure&gt;true&lt;/secure&gt;
 &lt;/cookie-config&gt;
&lt;/session-config&gt;
&lt;/web-app&gt;
</pre>
</p>
<br/>
<p>
<b>Reference</b><br/>
<a href="https://cwe.mitre.org/data/definitions/614.html">CWE-614: Sensitive Cookie in HTTPS Session Without 'Secure' Attribute</a><br/>
<a href="https://cwe.mitre.org/data/definitions/315.html">CWE-315: Cleartext Storage of Sensitive Information in a Cookie</a><br/>
<a href="https://cwe.mitre.org/data/definitions/311.html">CWE-311: Missing Encryption of Sensitive Data</a><br/>
<a href="https://www.owasp.org/index.php/SecureFlag">OWASP: Secure Flag</a><br/>
<a href="https://www.rapid7.com/db/vulnerabilities/http-cookie-secure-flag">Rapid7: Missing Secure Flag From SSL Cookie</a>
</p>

        
<h2>
<a name="LDAP_INJECTION">LDAP_INJECTION: Potential LDAP Injection</a>
</h2>
            
<p>
Just like SQL, all inputs passed to an LDAP query need to be passed in safely. Unfortunately, LDAP doesn't have prepared statement interfaces like SQL.
Therefore, the primary defense against LDAP injection is strong input validation of any untrusted data before including it in an LDAP query.
</p>
<p>
    <b>Code at risk:</b><br/>
    <pre>NamingEnumeration&lt;SearchResult&gt; answers = context.search("dc=People,dc=example,dc=com",
        "(uid=" + username + ")", ctrls);</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="http://projects.webappsec.org/w/page/13246947/LDAP%20Injection">WASC-29: LDAP Injection</a><br/>
<a href="https://www.owasp.org/index.php/Top_10_2013-A1-Injection">OWASP: Top 10 2013-A1-Injection</a><br/>
<a href="https://cwe.mitre.org/data/definitions/90.html">CWE-90: Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')</a><br/>
<a href="https://www.veracode.com/security/ldap-injection">LDAP Injection Guide: Learn How to Detect LDAP Injections and Improve LDAP Security</a>
</p>

        
<h2>
<a name="WEAK_MESSAGE_DIGEST_MD5">WEAK_MESSAGE_DIGEST_MD5: MD2, MD4 and MD5 are weak hash functions</a>
</h2>
            
<p>The algorithms MD2, MD4 and MD5 are not a recommended MessageDigest. <b>PBKDF2</b> should be used to hash password for example.</p>

<blockquote>
    "The security of the MD5 hash function is severely compromised. A collision attack exists that can find collisions
    within seconds on a computer with a 2.6 GHz Pentium 4 processor (complexity of 2<sup>24.1</sup>).[1] Further, there is also a
    chosen-prefix collision attack that can produce a collision for two inputs with specified prefixes within hours, using
    off-the-shelf computing hardware (complexity 2<sup>39</sup>).[2]"<br/>
    - <a href="https://en.wikipedia.org/wiki/MD5#Security">Wikipedia: MD5 - Security</a>
</blockquote>

<blockquote>
    "<b>SHA-224, SHA-256, SHA-384, SHA-512, SHA-512/224, and SHA-512/256</b>:<br/>
    The use of these hash functions is acceptable for all hash function applications."<br/>
    - <a href="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-131Ar2.pdf">NIST: Transitioning the Use of Cryptographic Algorithms and Key Lengths p.15</a>
</blockquote>
<blockquote>
    "The main idea of a PBKDF is to slow dictionary or brute force attacks on the passwords by increasing the time
    needed to test each password. An attacker with a list of likely passwords can evaluate the PBKDF using the known
    iteration counter and the salt. Since an attacker has to spend a significant amount of computing time for each try,
    it becomes harder to apply the dictionary or brute force attacks."<br/>
- <a href="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-132.pdf">NIST: Recommendation for Password-Based Key Derivation  p.12</a>
</blockquote>
<br/>
<p>
    <b>Vulnerable Code:</b><br/>
    <pre>MessageDigest md5Digest = MessageDigest.getInstance("MD5");
    md5Digest.update(password.getBytes());
    byte[] hashValue = md5Digest.digest();</pre>
    <br/>
    <pre>byte[] hashValue = DigestUtils.getMd5Digest().digest(password.getBytes());</pre>
</p>
<br/>
<p>
    <b>Solution (Using bouncy castle):</b><br/>
    <pre>public static byte[] getEncryptedPassword(String password, byte[] salt) throws NoSuchAlgorithmException, InvalidKeySpecException {
    PKCS5S2ParametersGenerator gen = new PKCS5S2ParametersGenerator(new SHA256Digest());
    gen.init(password.getBytes("UTF-8"), salt.getBytes(), 4096);
    return ((KeyParameter) gen.generateDerivedParameters(256)).getKey();
}</pre>
    <br/>
    <b>Solution (Java 8 and later):</b><br/>
    <pre>public static byte[] getEncryptedPassword(String password, byte[] salt) throws NoSuchAlgorithmException, InvalidKeySpecException {
    KeySpec spec = new PBEKeySpec(password.toCharArray(), salt, 4096, 256 * 8);
    SecretKeyFactory f = SecretKeyFactory.getInstance("PBKDF2WithHmacSHA256");
    return f.generateSecret(spec).getEncoded();
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
[1] <a href="https://www.win.tue.nl/hashclash/On%20Collisions%20for%20MD5%20-%20M.M.J.%20Stevens.pdf">On Collisions for MD5</a>: Master Thesis by M.M.J. Stevens<br/>
[2] <a href="https://homepages.cwi.nl/~stevens/papers/stJOC%20-%20Chosen-Prefix%20Collisions%20for%20MD5%20and%20Applications.pdf">Chosen-prefix collisions for MD5 and applications</a>: Paper written by Marc Stevens<br/>
<a href="https://en.wikipedia.org/wiki/MD5">Wikipedia: MD5</a><br/>
<a href="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-131Ar2.pdf">NIST: Transitioning the Use of Cryptographic Algorithms and Key Lengths</a><br/>
<a href="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-132.pdf">NIST: Recommendation for Password-Based Key Derivation</a><br/>
<a href="https://stackoverflow.com/q/22580853/89769">Stackoverflow: Reliable implementation of PBKDF2-HMAC-SHA256 for Java</a><br/>
<a href="https://cwe.mitre.org/data/definitions/327.html">CWE-327: Use of a Broken or Risky Cryptographic Algorithm</a>
</p>

        
<h2>
<a name="OBJECT_DESERIALIZATION">OBJECT_DESERIALIZATION: Object deserialization is used in {1}</a>
</h2>
            
<p>
    Object deserialization of untrusted data can lead to remote code execution, if there is a class in classpath that allows
    the trigger of malicious operation.
</p>
<p>
    Libraries developers tend to fix class that provided potential malicious trigger. There are still classes that are
    known to trigger Denial of Service<sup>[1]</sup>.
</p>
<p>
    Deserialization is a sensible operation that has a great history of vulnerabilities. The web application might
    become vulnerable as soon as a new vulnerability is found in the Java Virtual Machine<sup>[2] [3]</sup>.
</p>

<p>
<b>Code at risk:</b><br/>
<pre>
public UserData deserializeObject(InputStream receivedFile) throws IOException, ClassNotFoundException {

    try (ObjectInputStream in = new ObjectInputStream(receivedFile)) {
        return (UserData) in.readObject();
    }
}
</pre>
</p>

<p>
<b>Solutions:</b><br/>
<p>
Avoid deserializing object provided by remote users.
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/502.html">CWE-502: Deserialization of Untrusted Data</a><br/>
<a href="https://www.owasp.org/index.php/Deserialization_of_untrusted_data">Deserialization of untrusted data</a><br/>
<a href="https://www.oracle.com/technetwork/java/seccodeguide-139067.html#8">Serialization and Deserialization </a><br/>
<a href="https://github.com/frohoff/ysoserial">A tool for generating payloads that exploit unsafe Java object deserialization</a><br/>
[1] <a href="https://gist.github.com/coekie/a27cc406fc9f3dc7a70d">Example of Denial of Service using the class <code>java.util.HashSet</code></a><br/>
[2] <a href="https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2015-2590">OpenJDK: Deserialization issue in ObjectInputStream.readSerialData() (CVE-2015-2590)</a><br/>
[3] <a href="https://www.rapid7.com/db/modules/exploit/multi/browser/java_calendar_deserialize">Rapid7: Sun Java Calendar Deserialization Privilege Escalation (CVE-2008-5353)</a>
</p>

        
<h2>
<a name="PREDICTABLE_RANDOM">PREDICTABLE_RANDOM: Predictable pseudorandom number generator</a>
</h2>
            
<p>The use of a predictable random value can lead to vulnerabilities when used in certain security critical contexts. For example, when the value is used as:</p>
<ul>
<li>a CSRF token: a predictable token can lead to a CSRF attack as an attacker will know the value of the token</li>
<li>a password reset token (sent by email): a predictable password token can lead to an account takeover, since an attacker will guess the URL of the "change password" form</li>
<li>any other secret value</li>
</ul>
<p>
A quick fix could be to replace the use of <code>java.util.Random</code> with something stronger, such as <code>java.security.SecureRandom</code>.
</p>
<p>
<b>Vulnerable Code:</b><br/>
<pre>String generateSecretToken() {
    Random r = new Random();
    return Long.toHexString(r.nextLong());
}</pre>
</p>
<p>
<b>Solution:</b>
<pre>import org.apache.commons.codec.binary.Hex;

String generateSecretToken() {
    SecureRandom secRandom = new SecureRandom();

    byte[] result = new byte[32];
    secRandom.nextBytes(result);
    return Hex.encodeHexString(result);
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://jazzy.id.au/2010/09/20/cracking_random_number_generators_part_1.html">Cracking Random Number Generators - Part 1 (https://jazzy.id.au)</a><br/>
<a href="https://www.securecoding.cert.org/confluence/display/java/MSC02-J.+Generate+strong+random+numbers">CERT: MSC02-J. Generate strong random numbers</a><br/>
<a href="https://cwe.mitre.org/data/definitions/330.html">CWE-330: Use of Insufficiently Random Values</a><br/>
<a href="https://blog.h3xstream.com/2014/12/predicting-struts-csrf-token-cve-2014.html">Predicting Struts CSRF Token (Example of real-life vulnerability and exploitation)</a>
</p>

        
<h2>
<a name="PATH_TRAVERSAL_IN">PATH_TRAVERSAL_IN: Potential Path Traversal (file read)</a>
</h2>
            
<p>A file is opened to read its content. The filename comes from an <b>input</b> parameter.
If an unfiltered parameter is passed to this file API, files from an arbitrary filesystem location could be read.</p>
<p>This rule identifies <b>potential</b> path traversal vulnerabilities. In many cases, the constructed file path cannot be controlled
by the user. If that is the case, the reported instance is a false positive.</p>
<br/>

<p>
    <b>Vulnerable Code:</b><br/>
<pre>@GET
@Path("/images/{image}")
@Produces("images/*")
public Response getImage(@javax.ws.rs.PathParam("image") String image) {
    File file = new File("resources/images/", image); //Weak point

    if (!file.exists()) {
        return Response.status(Status.NOT_FOUND).build();
    }

    return Response.ok().entity(new FileInputStream(file)).build();
}</pre>
</p>
<br/>

<p>
    <b>Solution:</b><br/>
<pre>import org.apache.commons.io.FilenameUtils;

@GET
@Path("/images/{image}")
@Produces("images/*")
public Response getImage(@javax.ws.rs.PathParam("image") String image) {
    File file = new File("resources/images/", FilenameUtils.getName(image)); //Fix

    if (!file.exists()) {
        return Response.status(Status.NOT_FOUND).build();
    }

    return Response.ok().entity(new FileInputStream(file)).build();
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="http://projects.webappsec.org/w/page/13246952/Path%20Traversal">WASC: Path Traversal</a><br/>
<a href="https://www.owasp.org/index.php/Path_Traversal">OWASP: Path Traversal</a><br/>
<a href="https://capec.mitre.org/data/definitions/126.html">CAPEC-126: Path Traversal</a><br/>
<a href="https://cwe.mitre.org/data/definitions/22.html">CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')</a>
</p>

        
<h2>
<a name="PATH_TRAVERSAL_OUT">PATH_TRAVERSAL_OUT: Potential Path Traversal (file write)</a>
</h2>
            
<p>A file is opened to write to its contents. The filename comes from an <b>input</b> parameter.
If an unfiltered parameter is passed to this file API, files at an arbitrary filesystem location could be modified.</p>
<p>This rule identifies <b>potential</b> path traversal vulnerabilities. In many cases, the constructed file path cannot be controlled
by the user. If that is the case, the reported instance is a false positive.</p>
<br/>
<p>
<b>References</b><br/>
<a href="http://projects.webappsec.org/w/page/13246952/Path%20Traversal">WASC-33: Path Traversal</a><br/>
<a href="https://www.owasp.org/index.php/Path_Traversal">OWASP: Path Traversal</a><br/>
<a href="https://capec.mitre.org/data/definitions/126.html">CAPEC-126: Path Traversal</a><br/>
<a href="https://cwe.mitre.org/data/definitions/22.html">CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')</a>
</p>

        
<h2>
<a name="REQUESTDISPATCHER_FILE_DISCLOSURE">REQUESTDISPATCHER_FILE_DISCLOSURE: RequestDispatcher File Disclosure</a>
</h2>
            
<p>
Constructing a server-side redirect path with user input could allow an attacker to download application binaries (including application classes or jar files) or view arbitrary files within protected directories.<br/>
An attacker may be able to forge a request parameter to match sensitive file locations. For example, requesting <code>"http://example.com/?jspFile=../applicationContext.xml%3F"</code> would display the application's <code>applicationContext.xml</code> file. The attacker would be able to locate and download the <code>applicationContext.xml</code> referenced in the other configuration files, and even class files or jar files, obtaining sensitive information and launching other types of attacks.
</p>
<p>
    <b>Vulnerable Code:</b><br/>
<pre>...
String jspFile = request.getParameter("jspFile");
request.getRequestDispatcher("/WEB-INF/jsps/" + jspFile + ".jsp").include(request, response);
...</pre>
</p>
<p>
    <b>Solution:</b><br/>
Avoid constructing server-side redirects using user controlled input.
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/552.html">CWE-552: Files or Directories Accessible to External Parties</a><br/>
</p>
            
        
<h2>
<a name="WEAK_MESSAGE_DIGEST_SHA1">WEAK_MESSAGE_DIGEST_SHA1: SHA-1 is a weak hash function</a>
</h2>
            
<p>The algorithms SHA-1 is not a recommended algorithm for hash password, for signature verification and other
uses. <b>PBKDF2</b> should be used to hash password for example.</p>

<blockquote>
    "<b>SHA-1 for digital signature generation:</b><br/>
    SHA-1 may only be used for digital signature generation where specifically allowed by NIST protocol-specific guidance.
    For all other applications, <u>SHA-1 shall not be used for digital signature generation</u>.<br/>
    <b>SHA-1 for digital signature verification:</b><br/>
    For digital signature verification, <u>SHA-1 is allowed for legacy-use</u>.<br/>
    [...]<br/>
    <b>SHA-224, SHA-256, SHA-384, SHA-512, SHA-512/224, and SHA-512/256</b>:<br/>
    The use of these hash functions is acceptable for all hash function applications."<br/>
    - <a href="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-131Ar2.pdf">NIST: Transitioning the Use of Cryptographic Algorithms and Key Lengths p.15</a>
</blockquote>
<blockquote>
    "The main idea of a PBKDF is to slow dictionary or brute force attacks on the passwords by increasing the time
    needed to test each password. An attacker with a list of likely passwords can evaluate the PBKDF using the known
    iteration counter and the salt. Since an attacker has to spend a significant amount of computing time for each try,
    it becomes harder to apply the dictionary or brute force attacks."<br/>
- <a href="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-132.pdf">NIST: Recommendation for Password-Based Key Derivation  p.12</a>

</blockquote>
<br/>
<p>
    <b>Vulnerable Code:</b><br/>
    <pre>MessageDigest sha1Digest = MessageDigest.getInstance("SHA1");
    sha1Digest.update(password.getBytes());
    byte[] hashValue = sha1Digest.digest();</pre>
    <br/>
    <pre>byte[] hashValue = DigestUtils.getSha1Digest().digest(password.getBytes());</pre>
</p>
<br/>
<p>
    <b>Solution (Using bouncy castle):</b><br/>
    <pre>public static byte[] getEncryptedPassword(String password, byte[] salt) throws NoSuchAlgorithmException, InvalidKeySpecException {
    PKCS5S2ParametersGenerator gen = new PKCS5S2ParametersGenerator(new SHA256Digest());
    gen.init(password.getBytes("UTF-8"), salt.getBytes(), 4096);
    return ((KeyParameter) gen.generateDerivedParameters(256)).getKey();
}</pre>
    <br/>
    <b>Solution (Java 8 and later):</b><br/>
    <pre>public static byte[] getEncryptedPassword(String password, byte[] salt) throws NoSuchAlgorithmException, InvalidKeySpecException {
    KeySpec spec = new PBEKeySpec(password.toCharArray(), salt, 4096, 256 * 8);
    SecretKeyFactory f = SecretKeyFactory.getInstance("PBKDF2WithHmacSHA256");
    return f.generateSecret(spec).getEncoded();
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://community.qualys.com/blogs/securitylabs/2014/09/09/sha1-deprecation-what-you-need-to-know">Qualys blog: SHA1 Deprecation: What You Need to Know</a><br/>
<a href="https://googleonlinesecurity.blogspot.ca/2014/09/gradually-sunsetting-sha-1.html">Google Online Security Blog: Gradually sunsetting SHA-1</a><br/>
<a href="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-131Ar2.pdf">NIST: Transitioning the Use of Cryptographic Algorithms and Key Lengths</a><br/>
<a href="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-132.pdf">NIST: Recommendation for Password-Based Key Derivation</a><br/>
<a href="https://stackoverflow.com/q/22580853/89769">Stackoverflow: Reliable implementation of PBKDF2-HMAC-SHA256 for Java</a><br/>
<a href="https://cwe.mitre.org/data/definitions/327.html">CWE-327: Use of a Broken or Risky Cryptographic Algorithm</a>
</p>

        
<h2>
<a name="URLCONNECTION_SSRF_FD">URLCONNECTION_SSRF_FD: URLConnection Server-Side Request Forgery (SSRF) and File Disclosure</a>
</h2>
            
<p>
    Server-Side Request Forgery occur when a web server executes a request to a user supplied destination
    parameter that is not validated. Such vulnerabilities could allow an attacker to access internal services
    or to launch attacks from your web server.
</p>
<p>
    URLConnection can be used with file:// protocol or other protocols to access local filesystem and potentially other services.
<p>
    <b>Vulnerable Code:</b>
<pre>
new URL(String url).openConnection()
</pre>

<pre>
new URL(String url).openStream()
</pre>

<pre>
new URL(String url).getContent()
</pre>
</p>
<p>
    <b>Solution/Countermeasures:</b><br/>
    <ul>
        <li>Don't accept URL destinations from users</li>
        <li>Accept a destination key, and use it to look up the target destination associate with the key</li>
        <li>White list URLs (if possible)</li>
        <li>Validate that the beginning of the URL is part of a white list</li>
    </ul>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a><br/>
<a href="https://www.bishopfox.com/blog/2015/04/vulnerable-by-design-understanding-server-side-request-forgery/">Understanding Server-Side Request Forgery</a><br/>
<a href="https://cwe.mitre.org/data/definitions/73.html">CWE-73: External Control of File Name or Path</a><br/>
<a href="https://www.pwntester.com/blog/2013/11/28/abusing-jar-downloads/">Abusing jar:// downloads</a><br />
</p>
            
<h2>
<a name="UNSAFE_HASH_EQUALS">UNSAFE_HASH_EQUALS: Unsafe hash equals</a>
</h2>
            
<p>
An attacker might be able to detect the value of the secret hash due to the exposure of comparison timing. When the
functions <code>Arrays.equals()</code> or <code>String.equals()</code> are called, they will exit earlier if fewer
bytes are matched.
</p>
<p>
<p><b>Vulnerable Code:</b><br/>

<pre>
String actualHash = ...

if(userInput.equals(actualHash)) {
    ...
}</pre>
</p>
<p><b>Solution:</b><br/>

<pre>
String actualHash = ...

if(MessageDigest.isEqual(userInput.getBytes(),actualHash.getBytes())) {
    ...
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/203.html">CWE-203: Information Exposure Through DiscrepancyKey</a><br/>
</p>

        
<h2>
<a name="UNVALIDATED_REDIRECT">UNVALIDATED_REDIRECT: Unvalidated Redirect</a>
</h2>
            
<p>
    Unvalidated redirects occur when an application redirects a user to a destination URL specified by a user supplied
    parameter that is not validated. Such vulnerabilities can be used to facilitate phishing attacks.
</p>
<p>
    <b>Scenario</b><br/>
    1. A user is tricked into visiting the malicious URL: <code>http://website.com/login?redirect=http://evil.vvebsite.com/fake/login</code><br/>
    2. The user is redirected to a fake login page that looks like a site they trust. (<code>http://evil.vvebsite.com/fake/login</code>)<br/>
    3. The user enters his credentials.<br/>
    4. The evil site steals the user's credentials and redirects him to the original website.<br/>
    <br/>
    This attack is plausible because most users don't double check the URL after the redirection. Also, redirection to
    an authentication page is very common.
</p>
<p>
    <b>Vulnerable Code:</b></br/>
    <pre>protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
    [...]
    resp.sendRedirect(req.getParameter("redirectUrl"));
    [...]
}</pre>
</p>
<p>
    <b>Solution/Countermeasures:</b><br/>
    <ul>
        <li>Don't accept redirection destinations from users</li>
        <li>Accept a destination key, and use it to look up the target (legal) destination</li>
        <li>Accept only relative paths</li>
        <li>White list URLs (if possible)</li>
        <li>Validate that the beginning of the URL is part of a white list</li>
    </ul>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="http://projects.webappsec.org/w/page/13246981/URL%20Redirector%20Abuse">WASC-38: URL Redirector Abuse</a><br/>
<a href="https://www.owasp.org/index.php/Top_10_2013-A10-Unvalidated_Redirects_and_Forwards">OWASP: Top 10 2013-A10: Unvalidated Redirects and Forwards</a><br/>
<a href="https://www.owasp.org/index.php/Unvalidated_Redirects_and_Forwards_Cheat_Sheet">OWASP: Unvalidated Redirects and Forwards Cheat Sheet</a><br/>
<a href="https://cwe.mitre.org/data/definitions/601.html">CWE-601: URL Redirection to Untrusted Site ('Open Redirect')</a>
</p>
            
        
<h2>
<a name="URL_REWRITING">URL_REWRITING: URL rewriting method</a>
</h2>
            
<p>
The implementation of this method includes the logic to determine whether the session ID needs to be encoded in the URL.<br/>
URL rewriting has significant security risks. Since session ID appears in the URL, it may be easily seen by third parties. Session ID in the URL can be disclosed in many ways, for example:<br/>
<ul>
    <li>Log files,</li>
    <li>The browser history,</li>
    <li>By copy-and-pasting it into an e-mail or posting,</li>
    <li>The HTTP Referrer.</li>
</ul>
</p>
<p>
    <b>Vulnerable Code:</b><br/>
<pre>out.println("Click &lt;a href=" +
                res.encodeURL(HttpUtils.getRequestURL(req).toString()) +
                "&gt;here&lt;/a&gt;");</pre>
</p>
<p>
    <b>Solution:</b><br/>
Avoid using those methods. If you are looking to encode a URL String or form parameters do not confuse the URL rewriting methods with the URLEncoder class.
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://www.owasp.org/index.php/Top_10_2010-A3-Broken_Authentication_and_Session_Management">OWASP Top 10 2010-A3-Broken Authentication and Session Management</a><br/>
</p>
            
        
<h2>
<a name="UNENCRYPTED_SOCKET">UNENCRYPTED_SOCKET: Unencrypted Socket</a>
</h2>
            
<p>
The communication channel used is not encrypted. The traffic could be read by an attacker intercepting the network traffic.
</p>
<p>
<b>Vulnerable Code:</b><br/>
Plain socket (Cleartext communication):
<pre>Socket soc = new Socket("www.google.com",80);</pre>
</p>
<p>
<b>Solution:</b><br/>
SSL Socket (Secure communication):
<pre>Socket soc = SSLSocketFactory.getDefault().createSocket("www.google.com", 443);</pre>
</p>
<p>Beyond using an SSL socket, you need to make sure your use of SSLSocketFactory does all the appropriate certificate validation checks to
make sure you are not subject to man-in-the-middle attacks. Please read the OWASP Transport Layer Protection Cheat Sheet for details on how
to do this correctly.
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://www.owasp.org/index.php/Top_10_2010-A9">OWASP: Top 10 2010-A9-Insufficient Transport Layer Protection</a><br/>
<a href="https://www.owasp.org/index.php/Top_10_2013-A6-Sensitive_Data_Exposure">OWASP: Top 10 2013-A6-Sensitive Data Exposure</a><br/>
<a href="https://www.owasp.org/index.php/Transport_Layer_Protection_Cheat_Sheet">OWASP: Transport Layer Protection Cheat Sheet</a><br/>
<a href="http://projects.webappsec.org/w/page/13246945/Insufficient%20Transport%20Layer%20Protection">WASC-04: Insufficient Transport Layer Protection</a><br/>
<a href="https://cwe.mitre.org/data/definitions/319.html">CWE-319: Cleartext Transmission of Sensitive Information</a>
</p>

        
<h2>
<a name="UNENCRYPTED_SERVER_SOCKET">UNENCRYPTED_SERVER_SOCKET: Unencrypted Server Socket</a>
</h2>
            
<p>
The communication channel used is not encrypted. The traffic could be read by an attacker intercepting the network traffic.
</p>
<p>
<b>Vulnerable Code:</b><br/>
Plain server socket (Cleartext communication):
<pre>ServerSocket soc = new ServerSocket(1234);</pre>
</p>
<p>
<b>Solution:</b><br/>
SSL Server Socket (Secure communication):
<pre>ServerSocket soc = SSLServerSocketFactory.getDefault().createServerSocket(1234);</pre>
</p>
<p>Beyond using an SSL server socket, you need to make sure your use of SSLServerSocketFactory does all the appropriate certificate validation checks to
make sure you are not subject to man-in-the-middle attacks. Please read the OWASP Transport Layer Protection Cheat Sheet for details on how
to do this correctly.
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://www.owasp.org/index.php/Top_10_2010-A9">OWASP: Top 10 2010-A9-Insufficient Transport Layer Protection</a><br/>
<a href="https://www.owasp.org/index.php/Top_10_2013-A6-Sensitive_Data_Exposure">OWASP: Top 10 2013-A6-Sensitive Data Exposure</a><br/>
<a href="https://www.owasp.org/index.php/Transport_Layer_Protection_Cheat_Sheet">OWASP: Transport Layer Protection Cheat Sheet</a><br/>
<a href="http://projects.webappsec.org/w/page/13246945/Insufficient%20Transport%20Layer%20Protection">WASC-04: Insufficient Transport Layer Protection</a><br/>
<a href="https://cwe.mitre.org/data/definitions/319.html">CWE-319: Cleartext Transmission of Sensitive Information</a>
</p>

        
<h2>
<a name="WEAK_HOSTNAME_VERIFIER">WEAK_HOSTNAME_VERIFIER: HostnameVerifier that accept any signed certificates</a>
</h2>
            
<p>A <code>HostnameVerifier</code> that accept any host are often use because of certificate reuse on many hosts.
As a consequence, this is vulnerable to
<a href="https://en.wikipedia.org/wiki/Man-in-the-middle_attack">Man-in-the-middle attacks</a>
since the client will trust any certificate.
</p>
<p>
A TrustManager allowing specific certificates (based on a truststore for example) should be built.
Wildcard certificates should be created for reused on multiples subdomains.
Detailed information for a proper implementation is available at:
<a href="https://stackoverflow.com/a/6378872/89769">[1]</a>
<a href="https://stackoverflow.com/a/5493452/89769">[2]</a>
</p>
<br/>
<p>
    <b>Vulnerable Code:</b><br/>
<pre>public class AllHosts implements HostnameVerifier {
    public boolean verify(final String hostname, final SSLSession session) {
        return true;
    }
}</pre>
</p>
<br/>
<p>
    <b>Solution (TrustMangager based on a keystore):</b><br/>
<pre>KeyStore ks = //Load keystore containing the certificates trusted

SSLContext sc = SSLContext.getInstance("TLS");

TrustManagerFactory tmf = TrustManagerFactory.getInstance("SunX509");
tmf.init(ks);

sc.init(kmf.getKeyManagers(), tmf.getTrustManagers(),null);
</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="http://projects.webappsec.org/w/page/13246945/Insufficient%20Transport%20Layer%20Protection">WASC-04: Insufficient Transport Layer Protection</a><br/>
<a href="https://cwe.mitre.org/data/definitions/295.html">CWE-295: Improper Certificate Validation</a>
</p>

        
<h2>
<a name="WEAK_TRUST_MANAGER">WEAK_TRUST_MANAGER: TrustManager that accept any certificates</a>
</h2>
            
<p>Empty TrustManager implementations are often used to connect easily to a host that is not signed by a root
<a href="https://en.wikipedia.org/wiki/Certificate_authority">certificate authority</a>. As a consequence, this is vulnerable to
<a href="https://en.wikipedia.org/wiki/Man-in-the-middle_attack">Man-in-the-middle attacks</a>
since the client will trust any certificate.
</p>
<p>
A TrustManager allowing specific certificates (based on a TrustStore for example) should be built.
Detailed information for a proper implementation is available at:
<a href="https://stackoverflow.com/a/6378872/89769">[1]</a>
<a href="https://stackoverflow.com/a/5493452/89769">[2]</a>
</p>
<br/>
<p>
    <b>Vulnerable Code:</b><br/>
<pre>class TrustAllManager implements X509TrustManager {

    @Override
    public void checkClientTrusted(X509Certificate[] x509Certificates, String s) throws CertificateException {
        //Trust any client connecting (no certificate validation)
    }

    @Override
    public void checkServerTrusted(X509Certificate[] x509Certificates, String s) throws CertificateException {
        //Trust any remote server (no certificate validation)
    }

    @Override
    public X509Certificate[] getAcceptedIssuers() {
        return null;
    }
}</pre>
</p>
<br/>
<p>
    <b>Solution (TrustMangager based on a keystore):</b><br/>
<pre>KeyStore ks = //Load keystore containing the certificates trusted

SSLContext sc = SSLContext.getInstance("TLS");

TrustManagerFactory tmf = TrustManagerFactory.getInstance("SunX509");
tmf.init(ks);

sc.init(kmf.getKeyManagers(), tmf.getTrustManagers(),null);
</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="http://projects.webappsec.org/w/page/13246945/Insufficient%20Transport%20Layer%20Protection">WASC-04: Insufficient Transport Layer Protection</a><br/>
<a href="https://cwe.mitre.org/data/definitions/295.html">CWE-295: Improper Certificate Validation</a>
</p>

        
<h2>
<a name="XSS_SERVLET">XSS_SERVLET: Potential XSS in Servlet</a>
</h2>
            
<p>
A potential XSS was found. It could be used to execute unwanted JavaScript in a client's browser. (See references)
</p>
<p>
    <b>Vulnerable Code:</b>
<pre>protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
    String input1 = req.getParameter("input1");
    [...]
    resp.getWriter().write(input1);
}</pre>
</p>
<p>
    <b>Solution:</b>
<pre>protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
    String input1 = req.getParameter("input1");
    [...]
    resp.getWriter().write(Encode.forHtml(input1));
}</pre>
</p>
<p>
The best defense against XSS is context sensitive output encoding like the example above. There are typically 4 contexts to consider:
HTML, JavaScript, CSS (styles), and URLs. Please follow the XSS protection rules defined in the OWASP XSS Prevention Cheat Sheet,
which explains these defenses in significant detail.
</p>
<p>Note that this XSS in Servlet rule looks for similar issues, but looks for them in a different way than the existing
'XSS: Servlet reflected cross site scripting vulnerability' and 'XSS: Servlet reflected cross site scripting vulnerability in error page' rules in FindBugs.
</p>
<br/>
<p>
<b>References</b><br/>
<a href="http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting">WASC-8: Cross Site Scripting</a><br/>
<a href="https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet">OWASP: XSS Prevention Cheat Sheet</a><br/>
<a href="https://www.owasp.org/index.php/Top_10_2013-A3-Cross-Site_Scripting_%28XSS%29">OWASP: Top 10 2013-A3: Cross-Site Scripting (XSS)</a><br/>
<a href="https://cwe.mitre.org/data/definitions/79.html">CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')</a><br/>
<a href="https://code.google.com/p/owasp-java-encoder/">OWASP Java Encoder</a><br/>
</p>
            
        
<h2>
<a name="XXE_SAXPARSER">XXE_SAXPARSER: XML parsing vulnerable to XXE (SAXParser)</a>
</h2>
            
<!--XXE_GENERIC_START-->
<h3>Attack</h3>
<p>XML External Entity (XXE) attacks can occur when an XML parser supports XML entities while processing XML received
from an untrusted source.</p>
<p><b>Risk 1: Expose local file content (XXE: <u>X</u>ML E<u>x</u>ternal <u>E</u>ntity)</b></p>
<p>
<pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;
&lt;!DOCTYPE foo [
   &lt;!ENTITY xxe SYSTEM &quot;file:///etc/passwd&quot; &gt; ]&gt;
&lt;foo&gt;&amp;xxe;&lt;/foo&gt;</pre>
</p>
<b>Risk 2: Denial of service (XEE: <u>X</u>ML <u>E</u>ntity <u>E</u>xpansion)</b>
<p>
<pre>
&lt;?xml version=&quot;1.0&quot;?&gt;
&lt;!DOCTYPE lolz [
 &lt;!ENTITY lol &quot;lol&quot;&gt;
 &lt;!ELEMENT lolz (#PCDATA)&gt;
 &lt;!ENTITY lol1 &quot;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&quot;&gt;
 &lt;!ENTITY lol2 &quot;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&quot;&gt;
 &lt;!ENTITY lol3 &quot;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&quot;&gt;
[...]
 &lt;!ENTITY lol9 &quot;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&quot;&gt;
]&gt;
&lt;lolz&gt;&amp;lol9;&lt;/lolz&gt;</pre>
</p>

<h3>Solution</h3>
<p>
In order to avoid exposing dangerous feature of the XML parser, you can do the following change to the code.
</p>
<!--XXE_GENERIC_END-->

<p><b>Vulnerable Code:</b></p>
<p>
<pre>
SAXParser parser = SAXParserFactory.newInstance().newSAXParser();

parser.parse(inputStream, customHandler);</pre>
</p>
<br/>
<p>
The following snippets show two available solutions. You can set one feature or both.
</p>

<p><b>Solution using "Secure processing" mode:</b></p>
<p>
This setting will protect you against Denial of Service attack and remote file access.
<pre>
SAXParserFactory spf = SAXParserFactory.newInstance();
spf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
SAXParser parser = spf.newSAXParser();

parser.parse(inputStream, customHandler);</pre>
</p>

<p><b>Solution disabling DTD:</b></p>
<p>
By disabling DTD, almost all XXE attacks will be prevented.
<pre>
SAXParserFactory spf = SAXParserFactory.newInstance();
spf.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true);
SAXParser parser = spf.newSAXParser();

parser.parse(inputStream, customHandler);</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<!--XXE_GENERIC_START-->
<a href="https://cwe.mitre.org/data/definitions/611.html">CWE-611: Improper Restriction of XML External Entity Reference ('XXE')</a><br/>
<a href="https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=61702260">CERT: IDS10-J. Prevent XML external entity attacks</a><br/>
<a href="https://www.owasp.org/index.php/XML_External_Entity_%28XXE%29_Processing">OWASP.org: XML External Entity (XXE) Processing</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_Entity_Expansion">WS-Attacks.org: XML Entity Expansion</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_External_Entity_DOS">WS-Attacks.org: XML External Entity DOS</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_Entity_Reference_Attack">WS-Attacks.org: XML Entity Reference Attack</a><br/>
<a href="https://blog.h3xstream.com/2014/06/identifx-xml-external-entity.html">Identifx XML External Entity vulnerability (XXE)</a><br/>
<!--XXE_GENERIC_END-->
<a href="https://xerces.apache.org/xerces-j/features.html">Xerces complete features list</a>
</p>

        
<h2>
<a name="XXE_DTD_TRANSFORM_FACTORY">XXE_DTD_TRANSFORM_FACTORY: XML parsing vulnerable to XXE (TransformerFactory)</a>
</h2>
            
<!--XXE_GENERIC_START-->
<h3>Attack</h3>
<p>XML External Entity (XXE) attacks can occur when an XML parser supports XML entities while processing XML received
from an untrusted source.</p>
<p><b>Risk 1: Expose local file content (XXE: <u>X</u>ML E<u>x</u>ternal <u>E</u>ntity)</b></p>
<p>
<pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;
&lt;!DOCTYPE foo [
   &lt;!ENTITY xxe SYSTEM &quot;file:///etc/passwd&quot; &gt; ]&gt;
&lt;foo&gt;&amp;xxe;&lt;/foo&gt;</pre>
</p>
<b>Risk 2: Denial of service (XEE: <u>X</u>ML <u>E</u>ntity <u>E</u>xpansion)</b>
<p>
<pre>
&lt;?xml version=&quot;1.0&quot;?&gt;
&lt;!DOCTYPE lolz [
 &lt;!ENTITY lol &quot;lol&quot;&gt;
 &lt;!ELEMENT lolz (#PCDATA)&gt;
 &lt;!ENTITY lol1 &quot;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&quot;&gt;
 &lt;!ENTITY lol2 &quot;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&quot;&gt;
 &lt;!ENTITY lol3 &quot;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&quot;&gt;
[...]
 &lt;!ENTITY lol9 &quot;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&quot;&gt;
]&gt;
&lt;lolz&gt;&amp;lol9;&lt;/lolz&gt;</pre>
</p>

<h3>Solution</h3>
<p>
In order to avoid exposing dangerous feature of the XML parser, you can do the following change to the code.
</p>
<!--XXE_GENERIC_END-->

<p><b>Vulnerable Code:</b></p>
<p>
<pre>
Transformer transformer = TransformerFactory.newInstance().newTransformer();
transformer.transform(input, result);</pre>
</p>
<br/>
<p>
The following snippets show two available solutions. You can set one feature or both.
</p>

<p><b>Solution using "Secure processing" mode:</b></p>
<p>
This setting will protect you against remote file access but not denial of service.
<pre>
TransformerFactory factory = TransformerFactory.newInstance();
factory.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "all");
factory.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "all");

Transformer transformer = factory.newTransformer();
transformer.setOutputProperty(OutputKeys.INDENT, "yes");

transformer.transform(input, result);</pre>
</p>

<p><b>Solution disabling DTD:</b></p>
<p>
This setting will protect you against remote file access but not denial of service.
<pre>
TransformerFactory factory = TransformerFactory.newInstance();
factory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);

Transformer transformer = factory.newTransformer();
transformer.setOutputProperty(OutputKeys.INDENT, "yes");

transformer.transform(input, result);</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<!--XXE_GENERIC_START-->
<a href="https://cwe.mitre.org/data/definitions/611.html">CWE-611: Improper Restriction of XML External Entity Reference ('XXE')</a><br/>
<a href="https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=61702260">CERT: IDS10-J. Prevent XML external entity attacks</a><br/>
<a href="https://www.owasp.org/index.php/XML_External_Entity_%28XXE%29_Processing">OWASP.org: XML External Entity (XXE) Processing</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_Entity_Expansion">WS-Attacks.org: XML Entity Expansion</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_External_Entity_DOS">WS-Attacks.org: XML External Entity DOS</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_Entity_Reference_Attack">WS-Attacks.org: XML Entity Reference Attack</a><br/>
<a href="https://blog.h3xstream.com/2014/06/identifx-xml-external-entity.html">Identifx XML External Entity vulnerability (XXE)</a><br/>
<!--XXE_GENERIC_END-->
</p>

        
<h2>
<a name="XXE_XSLT_TRANSFORM_FACTORY">XXE_XSLT_TRANSFORM_FACTORY: XSLT parsing vulnerable to XXE (TransformerFactory)</a>
</h2>
            
<!--XXE_GENERIC_START-->
<h3>Attack</h3>
<p>XSLT External Entity (XXE) attacks can occur when an XSLT parser supports external entities while processing XSLT received
from an untrusted source.</p>
<p><b>Risk: Expose local file content (XXE: <u>X</u>ML E<u>x</u>ternal <u>E</u>ntity)</b></p>
<p>
<pre>
&lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;&gt;
   &lt;xsl:template match=&quot;/&quot;&gt;
       &lt;xsl:value-of select=&quot;document(&apos;/etc/passwd&apos;)&quot;&gt;
   &lt;/xsl:value-of&gt;&lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;</pre>
</p>

<h3>Solution</h3>
<p>
In order to avoid exposing dangerous feature of the XML parser, you can do the following change to the code.
</p>
<!--XXE_GENERIC_END-->

<p><b>Vulnerable Code:</b></p>
<p>
<pre>
Transformer transformer = TransformerFactory.newInstance().newTransformer();
transformer.transform(input, result);</pre>
</p>
<br/>
<p>
The following snippets show two available solutions. You can set one feature or both.
</p>
<p><b>Solution using "Secure processing" mode:</b></p>
<p>
This setting will protect you against remote file access but not denial of service.
<pre>
TransformerFactory factory = TransformerFactory.newInstance();
factory.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "all");
factory.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "all");

Transformer transformer = factory.newTransformer();
transformer.setOutputProperty(OutputKeys.INDENT, "yes");

transformer.transform(input, result);</pre>
</p>

<p><b>Solution disabling DTD:</b></p>
<p>
This setting will protect you against remote file access but not denial of service.
<pre>
TransformerFactory factory = TransformerFactory.newInstance();
factory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);

Transformer transformer = factory.newTransformer();
transformer.setOutputProperty(OutputKeys.INDENT, "yes");

transformer.transform(input, result);</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<!--XXE_GENERIC_START-->
<a href="https://cwe.mitre.org/data/definitions/611.html">CWE-611: Improper Restriction of XML External Entity Reference ('XXE')</a><br/>
<a href="https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=61702260">CERT: IDS10-J. Prevent XML external entity attacks</a><br/>
<a href="https://www.owasp.org/index.php/XML_External_Entity_%28XXE%29_Processing">OWASP.org: XML External Entity (XXE) Processing</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_Entity_Expansion">WS-Attacks.org: XML Entity Expansion</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_External_Entity_DOS">WS-Attacks.org: XML External Entity DOS</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_Entity_Reference_Attack">WS-Attacks.org: XML Entity Reference Attack</a><br/>
<a href="https://blog.h3xstream.com/2014/06/identifx-xml-external-entity.html">Identifx XML External Entity vulnerability (XXE)</a><br/>
<!--XXE_GENERIC_END-->
</p>

        
<h2>
<a name="STATIC_IV">STATIC_IV: Static IV</a>
</h2>
            
<p>
    Initialization vector must be regenerated for each message to be encrypted.
</p>
<p><b>Vulnerable Code:</b></p>
<p>
<pre>
private static byte[] IV = new byte[16] {(byte)0,(byte)1,(byte)2,[...]};

public void encrypt(String message) throws Exception {

    IvParameterSpec ivSpec = new IvParameterSpec(IV);
[...]
</pre>
<p><b>Solution:</b></p>
<p>
<pre>
public void encrypt(String message) throws Exception {

    byte[] iv = new byte[16];
    new SecureRandom().nextBytes(iv);

    IvParameterSpec ivSpec = new IvParameterSpec(iv);
[...]
</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://en.wikipedia.org/wiki/Initialization_vector">Wikipedia: Initialization vector</a><br/>
<a href="https://cwe.mitre.org/data/definitions/329.html">CWE-329: Not Using a Random IV with CBC Mode</a><br/>
<a href="https://defuse.ca/cbcmodeiv.htm">Encryption - CBC Mode IV: Secret or Not?</a>
</p>
            
        </body>
</html>
