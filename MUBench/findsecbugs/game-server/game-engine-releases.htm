<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>SpotBugs Report</title>
<style type="text/css">
		.tablerow0 {
			background: #EEEEEE;
		}

		.tablerow1 {
			background: white;
		}

		.detailrow0 {
			background: #EEEEEE;
		}

		.detailrow1 {
			background: white;
		}

		.tableheader {
			background: #b9b9fe;
			font-size: larger;
		}

		.tablerow0:hover, .tablerow1:hover {
			background: #aaffaa;
		}

		.priority-1 {
		    color: red;
		    font-weight: bold;
		}
		.priority-2 {
		    color: orange;
		    font-weight: bold;
		}
		.priority-3 {
		    color: green;
		    font-weight: bold;
		}
		.priority-4 {
		    color: blue;
		    font-weight: bold;
		}
		</style>
<script type="text/javascript">
			function toggleRow(elid) {
				if (document.getElementById) {
					element = document.getElementById(elid);
					if (element) {
						if (element.style.display == 'none') {
							element.style.display = 'block';
							//window.status = 'Toggle on!';
						} else {
							element.style.display = 'none';
							//window.status = 'Toggle off!';
						}
					}
				}
			}
		</script>
</head>
<body>
<h1>
<a href="https://spotbugs.github.io/">SpotBugs</a> Report</h1>
<h2>Project Information</h2>
<p>Project: 
		</p>
<p>SpotBugs version: 3.1.12</p>
<p>Code analyzed:</p>
<ul>
<li>/home/x/CryptoAPIDetect/dataset/MUBench/game-server/game-engine/target/game-engine-releases.jar</li>
</ul>
<p>
<br/>
<br/>
</p>
<h2>Metrics</h2>
<p>11311 lines of code analyzed,
	in 218 classes, 
	in 34 packages.</p>
<table width="500" cellpadding="5" cellspacing="2">
<tr class="tableheader">
<th align="left">Metric</th>
<th align="right">Total</th>
<th align="right">Density*</th>
</tr>
<tr class="tablerow0">
<td>High Priority Warnings</td>
<td align="right">4</td>
<td align="right">0.35</td>
</tr>
<tr class="tablerow1">
<td>Medium Priority Warnings</td>
<td align="right">31</td>
<td align="right">2.74</td>
</tr>
<tr class="$totalClass">
<td>
<b>Total Warnings</b>
</td>
<td align="right">
<b>35</b>
</td>
<td align="right">
<b>3.09</b>
</td>
</tr>
</table>
<p>
<i>(* Defects per Thousand lines of non-commenting source statements)</i>
</p>
<p>
<br/>
<br/>
</p>
<h2>Contents</h2>
<ul>
<li>
<a href="#Warnings_SECURITY">Security Warnings</a>
</li>
<li>
<a href="#Details">Details</a>
</li>
</ul>
<h1>Summary</h1>
<table width="500" cellpadding="5" cellspacing="2">
<tr class="tableheader">
<th align="left">Warning Type</th>
<th align="right">Number</th>
</tr>
<tr class="tablerow0">
<td>
<a href="#Warnings_SECURITY">Security Warnings</a>
</td>
<td align="right">35</td>
</tr>
<tr class="tablerow1">
<td>
<b>Total</b>
</td>
<td align="right">
<b>35</b>
</td>
</tr>
</table>
<h1>Warnings</h1>
<p>Click on a warning row to see full context information.</p>
<h2>
<a name="Warnings_SECURITY">Security Warnings</a>
</h2>
<table class="warningtable" width="100%" cellspacing="0">
<tr class="tableheader">
<th align="left">Code</th>
<th align="left">Warning</th>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65957');">
<td>
<span class="priority-1">CIPINT</span>
</td>
<td>The cipher does not provide data integrity</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65957" style="display: none;">
<a href="#CIPHER_INTEGRITY">Bug type CIPHER_INTEGRITY (click for details)</a>
<br/>In class com.jzy.game.engine.mina.code.ClientProtocolDecoder<br/>In method com.jzy.game.engine.mina.code.ClientProtocolDecoder.decryptAES(byte[])<br/>At ClientProtocolDecoder.java:[line 154]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66011');">
<td>
<span class="priority-1">SECHCK</span>
</td>
<td>Hard coded cryptographic key found</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66011" style="display: none;">
<a href="#HARD_CODE_KEY">Bug type HARD_CODE_KEY (click for details)</a>
<br/>In class com.jzy.game.engine.mina.code.ClientProtocolDecoder<br/>In method com.jzy.game.engine.mina.code.ClientProtocolDecoder.decryptAES(byte[])<br/>At ClientProtocolDecoder.java:[line 155]<br/>Called method new javax.crypto.spec.SecretKeySpec(byte[], String)<br/>Hard coded parameter number (in reverse order) is 2<br/>Value loaded from field com.jzy.game.engine.mina.code.ClientProtocolDecoder.AES_KEY</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66101');">
<td>
<span class="priority-2">SECHCK</span>
</td>
<td>Hard coded cryptographic key found</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66101" style="display: none;">
<a href="#HARD_CODE_KEY">Bug type HARD_CODE_KEY (click for details)</a>
<br/>In class com.jzy.game.engine.mina.code.ClientProtocolDecoder<br/>Value is hard coded in field com.jzy.game.engine.mina.code.ClientProtocolDecoder.AES_IV[B with suspicious name<br/>At ClientProtocolDecoder.java:[lines 39-204]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67073');">
<td>
<span class="priority-1">SECMD5</span>
</td>
<td>This API MD5 (MDX) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67073" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_MD5">Bug type WEAK_MESSAGE_DIGEST_MD5 (click for details)</a>
<br/>In class com.jzy.game.engine.util.CipherUtil<br/>In method com.jzy.game.engine.util.CipherUtil.md5(byte[])<br/>At CipherUtil.java:[line 16]<br/>Value MD5</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66141');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in com.jzy.game.engine.mina.websocket.Base64.decodeToObject(String, int, ClassLoader)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66141" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class com.jzy.game.engine.mina.websocket.Base64<br/>In method com.jzy.game.engine.mina.websocket.Base64.decodeToObject(String, int, ClassLoader)<br/>At Base64.java:[line 1381]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65551');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.lang.Math.random()) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65551" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class com.jzy.game.engine.math.MathUtil<br/>In method com.jzy.game.engine.math.MathUtil.random(Collection)<br/>At MathUtil.java:[line 257]<br/>Value java.lang.Math.random()</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65609');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.lang.Math.random()) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65609" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class com.jzy.game.engine.math.MathUtil<br/>In method com.jzy.game.engine.math.MathUtil.randomList(Collection, int)<br/>At MathUtil.java:[line 284]<br/>Value java.lang.Math.random()</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65667');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.lang.Math.random()) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65667" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class com.jzy.game.engine.math.MathUtil<br/>In method com.jzy.game.engine.math.MathUtil.randomRemove(Collection)<br/>At MathUtil.java:[line 310]<br/>Value java.lang.Math.random()</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65725');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65725" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class com.jzy.game.engine.math.RandomXS128<br/>In method new com.jzy.game.engine.math.RandomXS128()<br/>At RandomXS128.java:[line 34]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65783');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65783" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class com.jzy.game.engine.math.RandomXS128<br/>In method new com.jzy.game.engine.math.RandomXS128()<br/>At RandomXS128.java:[line 35]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65841');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65841" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class com.jzy.game.engine.math.RandomXS128<br/>In method new com.jzy.game.engine.math.RandomXS128(long)<br/>At RandomXS128.java:[line 40]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65899');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65899" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class com.jzy.game.engine.math.RandomXS128<br/>In method new com.jzy.game.engine.math.RandomXS128(long, long)<br/>At RandomXS128.java:[line 47]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66195');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66195" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class com.jzy.game.engine.mina.websocket.Base64<br/>In method com.jzy.game.engine.mina.websocket.Base64.decodeFromFile(String)<br/>At Base64.java:[line 1492]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/jzy/game/engine/mina/websocket/Base64.decodeFromFile(Ljava/lang/String;)[B parameter 0<br/>Method usage not detected<br/>At Base64.java:[line 1621]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66279');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66279" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class com.jzy.game.engine.mina.websocket.Base64<br/>In method com.jzy.game.engine.mina.websocket.Base64.encodeFromFile(String)<br/>At Base64.java:[line 1553]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/jzy/game/engine/mina/websocket/Base64.encodeFromFile(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Method usage not detected<br/>At Base64.java:[line 1593]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66717');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66717" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class com.jzy.game.engine.script.ScriptPool<br/>In method com.jzy.game.engine.script.ScriptPool.compile(List)<br/>At ScriptPool.java:[line 266]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/jzy/game/engine/script/ScriptPool.outDir<br/>At ScriptPool.java:[line 266]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66796');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66796" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class com.jzy.game.engine.script.ScriptPool$ScriptClassLoader<br/>In method com.jzy.game.engine.script.ScriptPool$ScriptClassLoader.classNameToPath(String)<br/>At ScriptPool.java:[line 572]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/jzy/game/engine/script/ScriptPool.outDir<br/>Unknown source com/jzy/game/engine/script/ScriptPool$ScriptClassLoader.classNameToPath(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Method usage not detected<br/>At ScriptPool.java:[line 463]<br/>At ScriptPool.java:[line 535]<br/>At ScriptPool.java:[line 570]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66905');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66905" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class com.jzy.game.engine.script.ScriptPool$ScriptClassLoader<br/>In method com.jzy.game.engine.script.ScriptPool$ScriptClassLoader.getClassData(String)<br/>At ScriptPool.java:[line 539]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.getPath()Ljava/lang/String;<br/>Unknown source com/jzy/game/engine/script/ScriptPool$ScriptClassLoader.classNameToPath(Ljava/lang/String;)Ljava/lang/String;<br/>At ScriptPool.java:[line 535]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66989');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66989" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class com.jzy.game.engine.script.ScriptPool$ScriptClassLoader<br/>In method com.jzy.game.engine.script.ScriptPool$ScriptClassLoader.getClassData(String)<br/>At ScriptPool.java:[line 541]<br/>Sink method java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.getPath()Ljava/lang/String;<br/>Unknown source com/jzy/game/engine/script/ScriptPool$ScriptClassLoader.classNameToPath(Ljava/lang/String;)Ljava/lang/String;<br/>At ScriptPool.java:[line 535]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67131');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67131" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class com.jzy.game.engine.util.ClassUtil<br/>In method com.jzy.game.engine.util.ClassUtil.findAndAddClassesInPackageByFile(String, String, boolean, Set)<br/>At ClassUtil.java:[line 133]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/jzy/game/engine/util/ClassUtil.findAndAddClassesInPackageByFile(Ljava/lang/String;Ljava/lang/String;ZLjava/util/Set;)V parameter 2<br/>At ClassUtil.java:[line 151]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67210');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67210" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class com.jzy.game.engine.util.ClassUtil<br/>In method com.jzy.game.engine.util.ClassUtil.loadJar(String)<br/>At ClassUtil.java:[line 169]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/jzy/game/engine/util/ClassUtil.loadJar(Ljava/lang/String;)V parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67284');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67284" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class com.jzy.game.engine.util.FileUtil<br/>In method com.jzy.game.engine.util.FileUtil.deleteDirectory(String)<br/>At FileUtil.java:[line 188]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/jzy/game/engine/util/FileUtil.deleteDirectory(Ljava/lang/String;)Z parameter 0<br/>At ScriptPool.java:[line 234]<br/>At ScriptPool.java:[line 376]<br/>At FileUtil.java:[line 186]<br/>At FileUtil.java:[line 206]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67393');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67393" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class com.jzy.game.engine.util.FileUtil<br/>In method com.jzy.game.engine.util.FileUtil.deleteFile(String)<br/>At FileUtil.java:[line 233]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/jzy/game/engine/util/FileUtil.deleteFile(Ljava/lang/String;)Z parameter 0<br/>At FileUtil.java:[line 200]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67472');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67472" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class com.jzy.game.engine.util.FileUtil<br/>In method com.jzy.game.engine.util.FileUtil.getConfigXML(String, String, Class)<br/>At FileUtil.java:[line 137]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/jzy/game/engine/util/FileUtil.getConfigXML(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object; parameter 2<br/>Unknown source com/jzy/game/engine/util/FileUtil.getConfigXML(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object; parameter 1<br/>Method usage not detected<br/>At MailManager.java:[line 54]<br/>At AbsMongoManager.java:[line 31]<br/>At MQConsumer.java:[line 33]<br/>At MQService.java:[line 29]<br/>At JedisManager.java:[line 50]<br/>At JedisManager.java:[line 82]<br/>At RedissonManager.java:[line 52]<br/>At FileUtil.java:[line 136]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67631');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67631" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class com.jzy.game.engine.util.FileUtil<br/>In method com.jzy.game.engine.util.FileUtil.getConfigXML(String, String, Class)<br/>At FileUtil.java:[line 142]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/jzy/game/engine/util/FileUtil.getConfigXML(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object; parameter 2<br/>Unknown source com/jzy/game/engine/util/FileUtil.getConfigXML(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object; parameter 1<br/>Method usage not detected<br/>At MailManager.java:[line 54]<br/>At AbsMongoManager.java:[line 31]<br/>At MQConsumer.java:[line 33]<br/>At MQService.java:[line 29]<br/>At JedisManager.java:[line 50]<br/>At JedisManager.java:[line 82]<br/>At RedissonManager.java:[line 52]<br/>At FileUtil.java:[line 136]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67790');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67790" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class com.jzy.game.engine.util.FileUtil<br/>In method com.jzy.game.engine.util.FileUtil.getFileInputStream(String)<br/>At FileUtil.java:[line 259]<br/>Sink method java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/jzy/game/engine/util/FileUtil.getFileInputStream(Ljava/lang/String;)Ljava/io/InputStream; parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67864');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67864" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class com.jzy.game.engine.util.FileUtil<br/>In method com.jzy.game.engine.util.FileUtil.getFiles(String, List, String, Predicate)<br/>At FileUtil.java:[line 88]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/jzy/game/engine/util/FileUtil.getFiles(Ljava/lang/String;Ljava/util/List;Ljava/lang/String;Ljava/util/function/Predicate;)V parameter 3<br/>At JedisManager.java:[line 113]<br/>At JedisManager.java:[line 115]<br/>At ScriptPool.java:[line 236]<br/>At ScriptPool.java:[line 288]<br/>At ScriptPool.java:[line 341]<br/>At ScriptPool.java:[line 378]<br/>At ScriptPool.java:[line 393]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68003');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68003" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class com.jzy.game.engine.util.FileUtil<br/>In method com.jzy.game.engine.util.FileUtil.readTxtFile(String)<br/>At FileUtil.java:[line 156]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/jzy/game/engine/util/FileUtil.readTxtFile(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Method usage not detected<br/>At JedisManager.java:[line 113]<br/>At JedisManager.java:[line 121]<br/>At JedisManager.java:[line 123]<br/>At JedisManager.java:[line 150]<br/>At FileUtil.java:[line 150]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66363');">
<td>
<span class="priority-2">SECPTO</span>
</td>
<td>This API (java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V) writes to a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66363" style="display: none;">
<a href="#PATH_TRAVERSAL_OUT">Bug type PATH_TRAVERSAL_OUT (click for details)</a>
<br/>In class com.jzy.game.engine.mina.websocket.Base64<br/>In method com.jzy.game.engine.mina.websocket.Base64.decodeFileToFile(String, String)<br/>At Base64.java:[line 1624]<br/>Sink method java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/jzy/game/engine/mina/websocket/Base64.decodeFileToFile(Ljava/lang/String;Ljava/lang/String;)V parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66437');">
<td>
<span class="priority-2">SECPTO</span>
</td>
<td>This API (java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V) writes to a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66437" style="display: none;">
<a href="#PATH_TRAVERSAL_OUT">Bug type PATH_TRAVERSAL_OUT (click for details)</a>
<br/>In class com.jzy.game.engine.mina.websocket.Base64<br/>In method com.jzy.game.engine.mina.websocket.Base64.decodeToFile(String, String)<br/>At Base64.java:[line 1454]<br/>Sink method java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/jzy/game/engine/mina/websocket/Base64.decodeToFile(Ljava/lang/String;Ljava/lang/String;)V parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66511');">
<td>
<span class="priority-2">SECPTO</span>
</td>
<td>This API (java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V) writes to a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66511" style="display: none;">
<a href="#PATH_TRAVERSAL_OUT">Bug type PATH_TRAVERSAL_OUT (click for details)</a>
<br/>In class com.jzy.game.engine.mina.websocket.Base64<br/>In method com.jzy.game.engine.mina.websocket.Base64.encodeFileToFile(String, String)<br/>At Base64.java:[line 1596]<br/>Sink method java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/jzy/game/engine/mina/websocket/Base64.encodeFileToFile(Ljava/lang/String;Ljava/lang/String;)V parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66585');">
<td>
<span class="priority-2">SECPTO</span>
</td>
<td>This API (java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V) writes to a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66585" style="display: none;">
<a href="#PATH_TRAVERSAL_OUT">Bug type PATH_TRAVERSAL_OUT (click for details)</a>
<br/>In class com.jzy.game.engine.mina.websocket.Base64<br/>In method com.jzy.game.engine.mina.websocket.Base64.encodeToFile(byte[], String)<br/>At Base64.java:[line 1422]<br/>Sink method java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/jzy/game/engine/mina/websocket/Base64.encodeToFile([BLjava/lang/String;)V parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66659');">
<td>
<span class="priority-2">SECSHA1</span>
</td>
<td>This API SHA-1 (SHA-1) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66659" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_SHA1">Bug type WEAK_MESSAGE_DIGEST_SHA1 (click for details)</a>
<br/>In class com.jzy.game.engine.mina.websocket.WebSocketUtils<br/>In method com.jzy.game.engine.mina.websocket.WebSocketUtils.getWebSocketKeyChallengeResponse(String)<br/>At WebSocketUtils.java:[line 52]<br/>Value SHA-1</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68127');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68127" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class com.jzy.game.engine.util.HttpUtil<br/>In method com.jzy.game.engine.util.HttpUtil.URLGet(String, int)<br/>At HttpUtil.java:[line 131]<br/>Sink method java/net/URL.openConnection()Ljava/net/URLConnection;<br/>Sink parameter 0<br/>Unknown source com/jzy/game/engine/util/HttpUtil.URLGet(Ljava/lang/String;I)Ljava/io/ByteArrayOutputStream; parameter 1<br/>Unknown source java/net/URL.&lt;init&gt;(Ljava/lang/String;)V<br/>Method usage not detected<br/>At HttpUtil.java:[line 108]<br/>At HttpUtil.java:[line 130]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68226');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68226" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class com.jzy.game.engine.util.HttpUtil<br/>In method com.jzy.game.engine.util.HttpUtil.URLGetByRecharge(String)<br/>At HttpUtil.java:[line 171]<br/>Sink method java/net/URL.openConnection()Ljava/net/URLConnection;<br/>Sink parameter 0<br/>Unknown source java/net/URL.&lt;init&gt;(Ljava/lang/String;)V<br/>Unknown source com/jzy/game/engine/util/HttpUtil.URLGetByRecharge(Ljava/lang/String;)Ljava/io/ByteArrayOutputStream; parameter 0<br/>Method usage not detected<br/>At HttpUtil.java:[line 170]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68315');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68315" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class com.jzy.game.engine.util.HttpUtil<br/>In method com.jzy.game.engine.util.HttpUtil.URLPost(String, String, byte[])<br/>At HttpUtil.java:[line 55]<br/>Sink method java/net/URL.openConnection()Ljava/net/URLConnection;<br/>Sink parameter 0<br/>Unknown source com/jzy/game/engine/util/HttpUtil.URLPost(Ljava/lang/String;Ljava/lang/String;[B)Ljava/io/ByteArrayOutputStream; parameter 2<br/>Unknown source java/net/URL.&lt;init&gt;(Ljava/lang/String;)V<br/>Method usage not detected<br/>At HttpUtil.java:[line 36]<br/>At HttpUtil.java:[line 40]<br/>At HttpUtil.java:[line 54]</p>
</td>
</tr>
</table>
<h1>
<a name="Details">Details</a>
</h1>
<h2>
<a name="CIPHER_INTEGRITY">CIPHER_INTEGRITY: Cipher with no integrity</a>
</h2>
            
<p>
    The ciphertext produced is susceptible to alteration by an adversary. This mean that the cipher provides no way to detect that the
    data has been tampered with. If the ciphertext can be controlled by an attacker, it could be altered without detection.
</p>
<p>
    The solution is to use a cipher that includes a Hash based Message Authentication Code (HMAC) to sign the data. Combining a HMAC function to the
    existing cipher is prone to error <sup><a href="https://moxie.org/blog/the-cryptographic-doom-principle/">[1]</a></sup>. Specifically,
    it is always recommended that you be able to verify the HMAC first, and only if the data is unmodified, do you then perform any cryptographic
    functions on the data.
</p>
<p>The following modes are vulnerable because they don't provide a HMAC:<br/>
    - CBC<br/>
    - OFB<br/>
    - CTR<br/>
    - ECB<br/><br/>
    The following snippets code are some examples of vulnerable code.<br/><br/>
    <b>Code at risk:</b><br/>
    <i>AES in CBC mode</i><br/>

    <pre>Cipher c = Cipher.getInstance("AES/CBC/PKCS5Padding");
c.init(Cipher.ENCRYPT_MODE, k, iv);
byte[] cipherText = c.doFinal(plainText);</pre>
    <br/>
    <i>Triple DES with ECB mode</i><br/>

<pre>Cipher c = Cipher.getInstance("DESede/ECB/PKCS5Padding");
c.init(Cipher.ENCRYPT_MODE, k, iv);
byte[] cipherText = c.doFinal(plainText);</pre>
</p>
<p>
    <b>Solution:</b>
    <pre>Cipher c = Cipher.getInstance("AES/GCM/NoPadding");
c.init(Cipher.ENCRYPT_MODE, k, iv);
byte[] cipherText = c.doFinal(plainText);</pre>
</p>
<p>
In the example solution above, the GCM mode introduces an HMAC into the resulting encrypted data, providing integrity of the result.
</p>
<br/>
<p>
    <b>References</b><br/>
    <a href="https://en.wikipedia.org/wiki/Authenticated_encryption">Wikipedia: Authenticated encryption</a><br/>
    <a href="https://csrc.nist.gov/projects/block-cipher-techniques/bcm/modes-develoment#01">NIST: Authenticated Encryption Modes</a><br/>
    <a href="https://moxie.org/blog/the-cryptographic-doom-principle/">Moxie Marlinspike's blog: The Cryptographic Doom Principle</a><br/>
    <a href="https://cwe.mitre.org/data/definitions/353.html">CWE-353: Missing Support for Integrity Check</a>
</p>

        
<h2>
<a name="HARD_CODE_KEY">HARD_CODE_KEY: Hard coded key</a>
</h2>
            
<p>
Cryptographic keys should not be kept in the source code. The source code can be widely shared in an enterprise environment, and is
certainly shared in open source. To be managed safely, passwords and secret keys should be stored in separate configuration files or keystores.
(Hard coded passwords are reported separately by the <i>Hard coded password</i> pattern)
</p>
<p>
<p><b>Vulnerable Code:</b><br/>

<pre>byte[] key = {1, 2, 3, 4, 5, 6, 7, 8};
SecretKeySpec spec = new SecretKeySpec(key, "AES");
Cipher aes = Cipher.getInstance("AES");
aes.init(Cipher.ENCRYPT_MODE, spec);
return aesCipher.doFinal(secretData);</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/321.html">CWE-321: Use of Hard-coded Cryptographic Key</a><br/>
</p>

        
<h2>
<a name="WEAK_MESSAGE_DIGEST_MD5">WEAK_MESSAGE_DIGEST_MD5: MD2, MD4 and MD5 are weak hash functions</a>
</h2>
            
<p>The algorithms MD2, MD4 and MD5 are not a recommended MessageDigest. <b>PBKDF2</b> should be used to hash password for example.</p>

<blockquote>
    "The security of the MD5 hash function is severely compromised. A collision attack exists that can find collisions
    within seconds on a computer with a 2.6 GHz Pentium 4 processor (complexity of 2<sup>24.1</sup>).[1] Further, there is also a
    chosen-prefix collision attack that can produce a collision for two inputs with specified prefixes within hours, using
    off-the-shelf computing hardware (complexity 2<sup>39</sup>).[2]"<br/>
    - <a href="https://en.wikipedia.org/wiki/MD5#Security">Wikipedia: MD5 - Security</a>
</blockquote>

<blockquote>
    "<b>SHA-224, SHA-256, SHA-384, SHA-512, SHA-512/224, and SHA-512/256</b>:<br/>
    The use of these hash functions is acceptable for all hash function applications."<br/>
    - <a href="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-131Ar2.pdf">NIST: Transitioning the Use of Cryptographic Algorithms and Key Lengths p.15</a>
</blockquote>
<blockquote>
    "The main idea of a PBKDF is to slow dictionary or brute force attacks on the passwords by increasing the time
    needed to test each password. An attacker with a list of likely passwords can evaluate the PBKDF using the known
    iteration counter and the salt. Since an attacker has to spend a significant amount of computing time for each try,
    it becomes harder to apply the dictionary or brute force attacks."<br/>
- <a href="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-132.pdf">NIST: Recommendation for Password-Based Key Derivation  p.12</a>
</blockquote>
<br/>
<p>
    <b>Vulnerable Code:</b><br/>
    <pre>MessageDigest md5Digest = MessageDigest.getInstance("MD5");
    md5Digest.update(password.getBytes());
    byte[] hashValue = md5Digest.digest();</pre>
    <br/>
    <pre>byte[] hashValue = DigestUtils.getMd5Digest().digest(password.getBytes());</pre>
</p>
<br/>
<p>
    <b>Solution (Using bouncy castle):</b><br/>
    <pre>public static byte[] getEncryptedPassword(String password, byte[] salt) throws NoSuchAlgorithmException, InvalidKeySpecException {
    PKCS5S2ParametersGenerator gen = new PKCS5S2ParametersGenerator(new SHA256Digest());
    gen.init(password.getBytes("UTF-8"), salt.getBytes(), 4096);
    return ((KeyParameter) gen.generateDerivedParameters(256)).getKey();
}</pre>
    <br/>
    <b>Solution (Java 8 and later):</b><br/>
    <pre>public static byte[] getEncryptedPassword(String password, byte[] salt) throws NoSuchAlgorithmException, InvalidKeySpecException {
    KeySpec spec = new PBEKeySpec(password.toCharArray(), salt, 4096, 256 * 8);
    SecretKeyFactory f = SecretKeyFactory.getInstance("PBKDF2WithHmacSHA256");
    return f.generateSecret(spec).getEncoded();
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
[1] <a href="https://www.win.tue.nl/hashclash/On%20Collisions%20for%20MD5%20-%20M.M.J.%20Stevens.pdf">On Collisions for MD5</a>: Master Thesis by M.M.J. Stevens<br/>
[2] <a href="https://homepages.cwi.nl/~stevens/papers/stJOC%20-%20Chosen-Prefix%20Collisions%20for%20MD5%20and%20Applications.pdf">Chosen-prefix collisions for MD5 and applications</a>: Paper written by Marc Stevens<br/>
<a href="https://en.wikipedia.org/wiki/MD5">Wikipedia: MD5</a><br/>
<a href="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-131Ar2.pdf">NIST: Transitioning the Use of Cryptographic Algorithms and Key Lengths</a><br/>
<a href="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-132.pdf">NIST: Recommendation for Password-Based Key Derivation</a><br/>
<a href="https://stackoverflow.com/q/22580853/89769">Stackoverflow: Reliable implementation of PBKDF2-HMAC-SHA256 for Java</a><br/>
<a href="https://cwe.mitre.org/data/definitions/327.html">CWE-327: Use of a Broken or Risky Cryptographic Algorithm</a>
</p>

        
<h2>
<a name="OBJECT_DESERIALIZATION">OBJECT_DESERIALIZATION: Object deserialization is used in {1}</a>
</h2>
            
<p>
    Object deserialization of untrusted data can lead to remote code execution, if there is a class in classpath that allows
    the trigger of malicious operation.
</p>
<p>
    Libraries developers tend to fix class that provided potential malicious trigger. There are still classes that are
    known to trigger Denial of Service<sup>[1]</sup>.
</p>
<p>
    Deserialization is a sensible operation that has a great history of vulnerabilities. The web application might
    become vulnerable as soon as a new vulnerability is found in the Java Virtual Machine<sup>[2] [3]</sup>.
</p>

<p>
<b>Code at risk:</b><br/>
<pre>
public UserData deserializeObject(InputStream receivedFile) throws IOException, ClassNotFoundException {

    try (ObjectInputStream in = new ObjectInputStream(receivedFile)) {
        return (UserData) in.readObject();
    }
}
</pre>
</p>

<p>
<b>Solutions:</b><br/>
<p>
Avoid deserializing object provided by remote users.
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/502.html">CWE-502: Deserialization of Untrusted Data</a><br/>
<a href="https://www.owasp.org/index.php/Deserialization_of_untrusted_data">Deserialization of untrusted data</a><br/>
<a href="https://www.oracle.com/technetwork/java/seccodeguide-139067.html#8">Serialization and Deserialization </a><br/>
<a href="https://github.com/frohoff/ysoserial">A tool for generating payloads that exploit unsafe Java object deserialization</a><br/>
[1] <a href="https://gist.github.com/coekie/a27cc406fc9f3dc7a70d">Example of Denial of Service using the class <code>java.util.HashSet</code></a><br/>
[2] <a href="https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2015-2590">OpenJDK: Deserialization issue in ObjectInputStream.readSerialData() (CVE-2015-2590)</a><br/>
[3] <a href="https://www.rapid7.com/db/modules/exploit/multi/browser/java_calendar_deserialize">Rapid7: Sun Java Calendar Deserialization Privilege Escalation (CVE-2008-5353)</a>
</p>

        
<h2>
<a name="PREDICTABLE_RANDOM">PREDICTABLE_RANDOM: Predictable pseudorandom number generator</a>
</h2>
            
<p>The use of a predictable random value can lead to vulnerabilities when used in certain security critical contexts. For example, when the value is used as:</p>
<ul>
<li>a CSRF token: a predictable token can lead to a CSRF attack as an attacker will know the value of the token</li>
<li>a password reset token (sent by email): a predictable password token can lead to an account takeover, since an attacker will guess the URL of the "change password" form</li>
<li>any other secret value</li>
</ul>
<p>
A quick fix could be to replace the use of <code>java.util.Random</code> with something stronger, such as <code>java.security.SecureRandom</code>.
</p>
<p>
<b>Vulnerable Code:</b><br/>
<pre>String generateSecretToken() {
    Random r = new Random();
    return Long.toHexString(r.nextLong());
}</pre>
</p>
<p>
<b>Solution:</b>
<pre>import org.apache.commons.codec.binary.Hex;

String generateSecretToken() {
    SecureRandom secRandom = new SecureRandom();

    byte[] result = new byte[32];
    secRandom.nextBytes(result);
    return Hex.encodeHexString(result);
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://jazzy.id.au/2010/09/20/cracking_random_number_generators_part_1.html">Cracking Random Number Generators - Part 1 (https://jazzy.id.au)</a><br/>
<a href="https://www.securecoding.cert.org/confluence/display/java/MSC02-J.+Generate+strong+random+numbers">CERT: MSC02-J. Generate strong random numbers</a><br/>
<a href="https://cwe.mitre.org/data/definitions/330.html">CWE-330: Use of Insufficiently Random Values</a><br/>
<a href="https://blog.h3xstream.com/2014/12/predicting-struts-csrf-token-cve-2014.html">Predicting Struts CSRF Token (Example of real-life vulnerability and exploitation)</a>
</p>

        
<h2>
<a name="PATH_TRAVERSAL_IN">PATH_TRAVERSAL_IN: Potential Path Traversal (file read)</a>
</h2>
            
<p>A file is opened to read its content. The filename comes from an <b>input</b> parameter.
If an unfiltered parameter is passed to this file API, files from an arbitrary filesystem location could be read.</p>
<p>This rule identifies <b>potential</b> path traversal vulnerabilities. In many cases, the constructed file path cannot be controlled
by the user. If that is the case, the reported instance is a false positive.</p>
<br/>

<p>
    <b>Vulnerable Code:</b><br/>
<pre>@GET
@Path("/images/{image}")
@Produces("images/*")
public Response getImage(@javax.ws.rs.PathParam("image") String image) {
    File file = new File("resources/images/", image); //Weak point

    if (!file.exists()) {
        return Response.status(Status.NOT_FOUND).build();
    }

    return Response.ok().entity(new FileInputStream(file)).build();
}</pre>
</p>
<br/>

<p>
    <b>Solution:</b><br/>
<pre>import org.apache.commons.io.FilenameUtils;

@GET
@Path("/images/{image}")
@Produces("images/*")
public Response getImage(@javax.ws.rs.PathParam("image") String image) {
    File file = new File("resources/images/", FilenameUtils.getName(image)); //Fix

    if (!file.exists()) {
        return Response.status(Status.NOT_FOUND).build();
    }

    return Response.ok().entity(new FileInputStream(file)).build();
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="http://projects.webappsec.org/w/page/13246952/Path%20Traversal">WASC: Path Traversal</a><br/>
<a href="https://www.owasp.org/index.php/Path_Traversal">OWASP: Path Traversal</a><br/>
<a href="https://capec.mitre.org/data/definitions/126.html">CAPEC-126: Path Traversal</a><br/>
<a href="https://cwe.mitre.org/data/definitions/22.html">CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')</a>
</p>

        
<h2>
<a name="PATH_TRAVERSAL_OUT">PATH_TRAVERSAL_OUT: Potential Path Traversal (file write)</a>
</h2>
            
<p>A file is opened to write to its contents. The filename comes from an <b>input</b> parameter.
If an unfiltered parameter is passed to this file API, files at an arbitrary filesystem location could be modified.</p>
<p>This rule identifies <b>potential</b> path traversal vulnerabilities. In many cases, the constructed file path cannot be controlled
by the user. If that is the case, the reported instance is a false positive.</p>
<br/>
<p>
<b>References</b><br/>
<a href="http://projects.webappsec.org/w/page/13246952/Path%20Traversal">WASC-33: Path Traversal</a><br/>
<a href="https://www.owasp.org/index.php/Path_Traversal">OWASP: Path Traversal</a><br/>
<a href="https://capec.mitre.org/data/definitions/126.html">CAPEC-126: Path Traversal</a><br/>
<a href="https://cwe.mitre.org/data/definitions/22.html">CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')</a>
</p>

        
<h2>
<a name="WEAK_MESSAGE_DIGEST_SHA1">WEAK_MESSAGE_DIGEST_SHA1: SHA-1 is a weak hash function</a>
</h2>
            
<p>The algorithms SHA-1 is not a recommended algorithm for hash password, for signature verification and other
uses. <b>PBKDF2</b> should be used to hash password for example.</p>

<blockquote>
    "<b>SHA-1 for digital signature generation:</b><br/>
    SHA-1 may only be used for digital signature generation where specifically allowed by NIST protocol-specific guidance.
    For all other applications, <u>SHA-1 shall not be used for digital signature generation</u>.<br/>
    <b>SHA-1 for digital signature verification:</b><br/>
    For digital signature verification, <u>SHA-1 is allowed for legacy-use</u>.<br/>
    [...]<br/>
    <b>SHA-224, SHA-256, SHA-384, SHA-512, SHA-512/224, and SHA-512/256</b>:<br/>
    The use of these hash functions is acceptable for all hash function applications."<br/>
    - <a href="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-131Ar2.pdf">NIST: Transitioning the Use of Cryptographic Algorithms and Key Lengths p.15</a>
</blockquote>
<blockquote>
    "The main idea of a PBKDF is to slow dictionary or brute force attacks on the passwords by increasing the time
    needed to test each password. An attacker with a list of likely passwords can evaluate the PBKDF using the known
    iteration counter and the salt. Since an attacker has to spend a significant amount of computing time for each try,
    it becomes harder to apply the dictionary or brute force attacks."<br/>
- <a href="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-132.pdf">NIST: Recommendation for Password-Based Key Derivation  p.12</a>

</blockquote>
<br/>
<p>
    <b>Vulnerable Code:</b><br/>
    <pre>MessageDigest sha1Digest = MessageDigest.getInstance("SHA1");
    sha1Digest.update(password.getBytes());
    byte[] hashValue = sha1Digest.digest();</pre>
    <br/>
    <pre>byte[] hashValue = DigestUtils.getSha1Digest().digest(password.getBytes());</pre>
</p>
<br/>
<p>
    <b>Solution (Using bouncy castle):</b><br/>
    <pre>public static byte[] getEncryptedPassword(String password, byte[] salt) throws NoSuchAlgorithmException, InvalidKeySpecException {
    PKCS5S2ParametersGenerator gen = new PKCS5S2ParametersGenerator(new SHA256Digest());
    gen.init(password.getBytes("UTF-8"), salt.getBytes(), 4096);
    return ((KeyParameter) gen.generateDerivedParameters(256)).getKey();
}</pre>
    <br/>
    <b>Solution (Java 8 and later):</b><br/>
    <pre>public static byte[] getEncryptedPassword(String password, byte[] salt) throws NoSuchAlgorithmException, InvalidKeySpecException {
    KeySpec spec = new PBEKeySpec(password.toCharArray(), salt, 4096, 256 * 8);
    SecretKeyFactory f = SecretKeyFactory.getInstance("PBKDF2WithHmacSHA256");
    return f.generateSecret(spec).getEncoded();
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://community.qualys.com/blogs/securitylabs/2014/09/09/sha1-deprecation-what-you-need-to-know">Qualys blog: SHA1 Deprecation: What You Need to Know</a><br/>
<a href="https://googleonlinesecurity.blogspot.ca/2014/09/gradually-sunsetting-sha-1.html">Google Online Security Blog: Gradually sunsetting SHA-1</a><br/>
<a href="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-131Ar2.pdf">NIST: Transitioning the Use of Cryptographic Algorithms and Key Lengths</a><br/>
<a href="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-132.pdf">NIST: Recommendation for Password-Based Key Derivation</a><br/>
<a href="https://stackoverflow.com/q/22580853/89769">Stackoverflow: Reliable implementation of PBKDF2-HMAC-SHA256 for Java</a><br/>
<a href="https://cwe.mitre.org/data/definitions/327.html">CWE-327: Use of a Broken or Risky Cryptographic Algorithm</a>
</p>

        
<h2>
<a name="URLCONNECTION_SSRF_FD">URLCONNECTION_SSRF_FD: URLConnection Server-Side Request Forgery (SSRF) and File Disclosure</a>
</h2>
            
<p>
    Server-Side Request Forgery occur when a web server executes a request to a user supplied destination
    parameter that is not validated. Such vulnerabilities could allow an attacker to access internal services
    or to launch attacks from your web server.
</p>
<p>
    URLConnection can be used with file:// protocol or other protocols to access local filesystem and potentially other services.
<p>
    <b>Vulnerable Code:</b>
<pre>
new URL(String url).openConnection()
</pre>

<pre>
new URL(String url).openStream()
</pre>

<pre>
new URL(String url).getContent()
</pre>
</p>
<p>
    <b>Solution/Countermeasures:</b><br/>
    <ul>
        <li>Don't accept URL destinations from users</li>
        <li>Accept a destination key, and use it to look up the target destination associate with the key</li>
        <li>White list URLs (if possible)</li>
        <li>Validate that the beginning of the URL is part of a white list</li>
    </ul>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a><br/>
<a href="https://www.bishopfox.com/blog/2015/04/vulnerable-by-design-understanding-server-side-request-forgery/">Understanding Server-Side Request Forgery</a><br/>
<a href="https://cwe.mitre.org/data/definitions/73.html">CWE-73: External Control of File Name or Path</a><br/>
<a href="https://www.pwntester.com/blog/2013/11/28/abusing-jar-downloads/">Abusing jar:// downloads</a><br />
</p>
            </body>
</html>
