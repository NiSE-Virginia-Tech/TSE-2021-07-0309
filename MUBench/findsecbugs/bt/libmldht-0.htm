<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>SpotBugs Report</title>
<style type="text/css">
		.tablerow0 {
			background: #EEEEEE;
		}

		.tablerow1 {
			background: white;
		}

		.detailrow0 {
			background: #EEEEEE;
		}

		.detailrow1 {
			background: white;
		}

		.tableheader {
			background: #b9b9fe;
			font-size: larger;
		}

		.tablerow0:hover, .tablerow1:hover {
			background: #aaffaa;
		}

		.priority-1 {
		    color: red;
		    font-weight: bold;
		}
		.priority-2 {
		    color: orange;
		    font-weight: bold;
		}
		.priority-3 {
		    color: green;
		    font-weight: bold;
		}
		.priority-4 {
		    color: blue;
		    font-weight: bold;
		}
		</style>
<script type="text/javascript">
			function toggleRow(elid) {
				if (document.getElementById) {
					element = document.getElementById(elid);
					if (element) {
						if (element.style.display == 'none') {
							element.style.display = 'block';
							//window.status = 'Toggle on!';
						} else {
							element.style.display = 'none';
							//window.status = 'Toggle off!';
						}
					}
				}
			}
		</script>
</head>
<body>
<h1>
<a href="https://spotbugs.github.io/">SpotBugs</a> Report</h1>
<h2>Project Information</h2>
<p>Project: 
		</p>
<p>SpotBugs version: 3.1.12</p>
<p>Code analyzed:</p>
<ul>
<li>/home/x/CryptoAPIDetect/dataset/MUBench/bt/bt-dht/the8472/mldht/target/libmldht-0.1.0.jar</li>
</ul>
<p>
<br/>
<br/>
</p>
<h2>Metrics</h2>
<p>12983 lines of code analyzed,
	in 242 classes, 
	in 16 packages.</p>
<table width="500" cellpadding="5" cellspacing="2">
<tr class="tableheader">
<th align="left">Metric</th>
<th align="right">Total</th>
<th align="right">Density*</th>
</tr>
<tr class="tablerow0">
<td>High Priority Warnings</td>
<td align="right"/>
<td align="right">0.00</td>
</tr>
<tr class="tablerow1">
<td>Medium Priority Warnings</td>
<td align="right">29</td>
<td align="right">2.23</td>
</tr>
<tr class="$totalClass">
<td>
<b>Total Warnings</b>
</td>
<td align="right">
<b>29</b>
</td>
<td align="right">
<b>2.23</b>
</td>
</tr>
</table>
<p>
<i>(* Defects per Thousand lines of non-commenting source statements)</i>
</p>
<p>
<br/>
<br/>
</p>
<h2>Contents</h2>
<ul>
<li>
<a href="#Warnings_SECURITY">Security Warnings</a>
</li>
<li>
<a href="#Details">Details</a>
</li>
</ul>
<h1>Summary</h1>
<table width="500" cellpadding="5" cellspacing="2">
<tr class="tableheader">
<th align="left">Warning Type</th>
<th align="right">Number</th>
</tr>
<tr class="tablerow0">
<td>
<a href="#Warnings_SECURITY">Security Warnings</a>
</td>
<td align="right">29</td>
</tr>
<tr class="tablerow1">
<td>
<b>Total</b>
</td>
<td align="right">
<b>29</b>
</td>
</tr>
</table>
<h1>Warnings</h1>
<p>Click on a warning row to see full context information.</p>
<h2>
<a name="Warnings_SECURITY">Security Warnings</a>
</h2>
<table class="warningtable" width="100%" cellspacing="0">
<tr class="tableheader">
<th align="left">Code</th>
<th align="left">Warning</th>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65609');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65609" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class lbms.plugins.mldht.kad.DHT<br/>In method lbms.plugins.mldht.kad.DHT.printDiagnostics(PrintWriter)<br/>At DHT.java:[line 1177]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66608');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66608" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class the8472.mldht.cli.CommandProcessor<br/>In method the8472.mldht.cli.CommandProcessor.handleException(Throwable)<br/>At CommandProcessor.java:[line 79]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66438');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66438" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class the8472.mldht.Launcher$1<br/>In method the8472.mldht.Launcher$1.log(Throwable, DHT$LogLevel)<br/>At Launcher.java:[line 204]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65663');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.concurrent.ThreadLocalRandom) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65663" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class lbms.plugins.mldht.kad.Database<br/>In method lbms.plugins.mldht.kad.Database.fill(List, PeerAddressDBItem[], int)<br/>At Database.java:[line 313]<br/>Value java.util.concurrent.ThreadLocalRandom</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65721');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.concurrent.ThreadLocalRandom) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65721" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class lbms.plugins.mldht.kad.Database<br/>In method lbms.plugins.mldht.kad.Database.insertForKeyAllowed(Key)<br/>At Database.java:[line 402]<br/>Value java.util.concurrent.ThreadLocalRandom</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65779');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.concurrent.ThreadLocalRandom) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65779" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class lbms.plugins.mldht.kad.Database<br/>In method lbms.plugins.mldht.kad.Database.sample(Key, int, DHT$DHTtype, boolean)<br/>At Database.java:[line 289]<br/>Value java.util.concurrent.ThreadLocalRandom</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65837');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.concurrent.ThreadLocalRandom) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65837" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class lbms.plugins.mldht.kad.IDMismatchDetector<br/>In method lbms.plugins.mldht.kad.IDMismatchDetector.activeCheck(RPCCall)<br/>At IDMismatchDetector.java:[line 110]<br/>Value java.util.concurrent.ThreadLocalRandom</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65895');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.concurrent.ThreadLocalRandom) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65895" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class lbms.plugins.mldht.kad.IDMismatchDetector<br/>In method lbms.plugins.mldht.kad.IDMismatchDetector.activeCheck(RPCCall)<br/>At IDMismatchDetector.java:[line 123]<br/>Value java.util.concurrent.ThreadLocalRandom</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65953');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.concurrent.ThreadLocalRandom) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65953" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class lbms.plugins.mldht.kad.KBucket<br/>In method lbms.plugins.mldht.kad.KBucket.lambda$randomEntry$4(List)<br/>At KBucket.java:[line 415]<br/>Value java.util.concurrent.ThreadLocalRandom</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66011');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.concurrent.ThreadLocalRandom) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66011" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class lbms.plugins.mldht.kad.Node<br/>In method lbms.plugins.mldht.kad.Node.getRandomEntry()<br/>At Node.java:[line 1055]<br/>Value java.util.concurrent.ThreadLocalRandom</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66069');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.concurrent.ThreadLocalRandom) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66069" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class lbms.plugins.mldht.kad.RPCCall<br/>In method lbms.plugins.mldht.kad.RPCCall.sent(RPCServer)<br/>At RPCCall.java:[line 157]<br/>Value java.util.concurrent.ThreadLocalRandom</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66127');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.concurrent.ThreadLocalRandom) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66127" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class lbms.plugins.mldht.kad.RPCServer<br/>In method lbms.plugins.mldht.kad.RPCServer.drainQueue()<br/>At RPCServer.java:[line 254]<br/>Value java.util.concurrent.ThreadLocalRandom</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66185');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.concurrent.ThreadLocalRandom) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66185" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class lbms.plugins.mldht.kad.RPCServerManager<br/>In method lbms.plugins.mldht.kad.RPCServerManager.refresh(long)<br/>At RPCServerManager.java:[line 63]<br/>Value java.util.concurrent.ThreadLocalRandom</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66243');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.concurrent.ThreadLocalRandom) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66243" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class lbms.plugins.mldht.kad.tasks.IterativeLookupCandidates<br/>In method lbms.plugins.mldht.kad.tasks.IterativeLookupCandidates.lambda$addCandidates$1(KBucketEntry, IterativeLookupCandidates$LookupGraphNode, KBucketEntry, IterativeLookupCandidates$LookupGraphNode)<br/>At IterativeLookupCandidates.java:[line 218]<br/>Value java.util.concurrent.ThreadLocalRandom</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66810');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.concurrent.ThreadLocalRandom) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66810" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class the8472.mldht.cli.commands.Burst<br/>In method the8472.mldht.cli.commands.Burst.lambda$process$3()<br/>At Burst.java:[line 39]<br/>Value java.util.concurrent.ThreadLocalRandom</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67016');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.concurrent.ThreadLocalRandom) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67016" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class the8472.mldht.indexing.OpentrackerLiveSync<br/>In method new the8472.mldht.indexing.OpentrackerLiveSync()<br/>At OpentrackerLiveSync.java:[line 42]<br/>Value java.util.concurrent.ThreadLocalRandom</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66492');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.concurrent.ThreadLocalRandom) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66492" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class the8472.mldht.TorrentFetcher<br/>In method the8472.mldht.TorrentFetcher.startConnections()<br/>At TorrentFetcher.java:[line 249]<br/>Value java.util.concurrent.ThreadLocalRandom</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66550');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.concurrent.ThreadLocalRandom) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66550" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class the8472.mldht.TorrentFetcher<br/>In method the8472.mldht.TorrentFetcher.startDHTTasks()<br/>At TorrentFetcher.java:[line 220]<br/>Value java.util.concurrent.ThreadLocalRandom</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67216');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.concurrent.ThreadLocalRandom) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67216" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class the8472.utils.ShufflingBag<br/>In method the8472.utils.ShufflingBag.add(Object)<br/>At ShufflingBag.java:[line 61]<br/>Value java.util.concurrent.ThreadLocalRandom</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66868');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66868" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class the8472.mldht.cli.commands.Put<br/>In method the8472.mldht.cli.commands.Put.lambda$loadData$2(String)<br/>At Put.java:[line 73]<br/>Sink method java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;<br/>Sink parameter 1<br/>Unknown source the8472/mldht/cli/commands/Put.lambda$loadData$2(Ljava/lang/String;)Ljava/nio/file/Path; parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66942');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66942" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class the8472.mldht.cli.commands.Put<br/>In method the8472.mldht.cli.commands.Put.lambda$process$0(String)<br/>At Put.java:[line 48]<br/>Sink method java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;<br/>Sink parameter 1<br/>Unknown source the8472/mldht/cli/commands/Put.lambda$process$0(Ljava/lang/String;)Ljava/nio/file/Path; parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66662');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66662" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class the8472.mldht.cli.Server$2<br/>In method the8472.mldht.cli.Server$2.process(ByteBuffer)<br/>At Server.java:[line 174]<br/>Sink method java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;<br/>Sink parameter 1<br/>At Server.java:[line 174]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66736');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66736" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class the8472.mldht.cli.TorrentInfo<br/>In method the8472.mldht.cli.TorrentInfo.lambda$main$5(String)<br/>At TorrentInfo.java:[line 123]<br/>Sink method java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;<br/>Sink parameter 1<br/>Unknown source the8472/mldht/cli/TorrentInfo.lambda$main$5(Ljava/lang/String;)Ljava/nio/file/Path; parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67074');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/nio/file/Files.createTempFile(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67074" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class the8472.mldht.indexing.TorrentDumper<br/>In method the8472.mldht.indexing.TorrentDumper.lambda$dumpStats$9(long, ByteBuffer, Map$Entry)<br/>At TorrentDumper.java:[line 409]<br/>Sink method java/nio/file/Files.createTempFile(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;<br/>Sink parameter 2<br/>Unknown source java/nio/file/Path.getFileName()Ljava/nio/file/Path;<br/>Unknown source java/nio/file/Path.toString()Ljava/lang/String;<br/>At TorrentDumper.java:[line 409]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67274');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/nio/file/Files.createTempFile(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67274" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class the8472.utils.io.FileIO<br/>In method the8472.utils.io.FileIO.writeAndAtomicMove(Path, Consumer)<br/>At FileIO.java:[line 19]<br/>Sink method java/nio/file/Files.createTempFile(Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;[Ljava/nio/file/attribute/FileAttribute;)Ljava/nio/file/Path;<br/>Sink parameter 2<br/>Unknown source java/nio/file/Path.getFileName()Ljava/nio/file/Path;<br/>Unknown source java/nio/file/Path.toString()Ljava/lang/String;<br/>At FileIO.java:[line 19]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65551');">
<td>
<span class="priority-2">SECSHA1</span>
</td>
<td>This API SHA1 (SHA-1) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65551" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_SHA1">Bug type WEAK_MESSAGE_DIGEST_SHA1 (click for details)</a>
<br/>In class lbms.plugins.mldht.kad.BloomFilterBEP33<br/>In method new lbms.plugins.mldht.kad.BloomFilterBEP33()<br/>At BloomFilterBEP33.java:[line 33]<br/>Value SHA1</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66301');">
<td>
<span class="priority-2">SECSHA1</span>
</td>
<td>This API SHA (SHA-1) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66301" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_SHA1">Bug type WEAK_MESSAGE_DIGEST_SHA1 (click for details)</a>
<br/>In class lbms.plugins.mldht.kad.utils.ThreadLocalUtils<br/>In method lbms.plugins.mldht.kad.utils.ThreadLocalUtils.lambda$static$1()<br/>At ThreadLocalUtils.java:[line 28]<br/>Value SHA</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66359');">
<td>
<span class="priority-2">SECUHE</span>
</td>
<td>Unsafe comparison of hash that are susceptible to timing attack</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66359" style="display: none;">
<a href="#UNSAFE_HASH_EQUALS">Bug type UNSAFE_HASH_EQUALS (click for details)</a>
<br/>In class the8472.bt.MetadataPool<br/>In method the8472.bt.MetadataPool.checkComletion(byte[])<br/>At MetadataPool.java:[line 82]<br/>Sink method java/util/Arrays.equals([B[B)Z<br/>Sink parameter 0<br/>Unknown source the8472/bt/MetadataPool.checkComletion([B)V parameter 0<br/>At PullMetaDataConnection.java:[line 683]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67158');">
<td>
<span class="priority-2">SECXXEDOC</span>
</td>
<td>The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67158" style="display: none;">
<a href="#XXE_DOCUMENT">Bug type XXE_DOCUMENT (click for details)</a>
<br/>In class the8472.utils.ConfigReader<br/>In method the8472.utils.ConfigReader.readFile(Path)<br/>At ConfigReader.java:[line 173]<br/>Value DocumentBuilder.parse(...)</p>
</td>
</tr>
</table>
<h1>
<a name="Details">Details</a>
</h1>
<h2>
<a name="INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE: Information Exposure Through An Error Message</a>
</h2>
            
<p>
The sensitive information may be valuable information on its own (such as a password), or it may be useful for launching other, more deadly attacks. If an attack fails, an attacker may use error information provided by the server to launch another more focused attack. For example, an attempt to exploit a path traversal weakness (CWE-22) might yield the full pathname of the installed application. In turn, this could be used to select the proper number of ".." sequences to navigate to the targeted file. An attack using SQL injection (CWE-89) might not initially succeed, but an error message could reveal the malformed query, which would expose query logic and possibly even passwords or other sensitive information used within the query.
</p>
<p>
    <b>Vulnerable Code:</b><br/>
<pre>try {
  out = httpResponse.getOutputStream()
} catch (Exception e) {
  e.printStackTrace(out);
}</pre>
</p>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/209.html">CWE-209: Information Exposure Through an Error Message</a><br/>
<a href="https://cwe.mitre.org/data/definitions/211.html">CWE-211: Information Exposure Through Externally-Generated Error Message</a><br/>
</p>
            
        
<h2>
<a name="PREDICTABLE_RANDOM">PREDICTABLE_RANDOM: Predictable pseudorandom number generator</a>
</h2>
            
<p>The use of a predictable random value can lead to vulnerabilities when used in certain security critical contexts. For example, when the value is used as:</p>
<ul>
<li>a CSRF token: a predictable token can lead to a CSRF attack as an attacker will know the value of the token</li>
<li>a password reset token (sent by email): a predictable password token can lead to an account takeover, since an attacker will guess the URL of the "change password" form</li>
<li>any other secret value</li>
</ul>
<p>
A quick fix could be to replace the use of <code>java.util.Random</code> with something stronger, such as <code>java.security.SecureRandom</code>.
</p>
<p>
<b>Vulnerable Code:</b><br/>
<pre>String generateSecretToken() {
    Random r = new Random();
    return Long.toHexString(r.nextLong());
}</pre>
</p>
<p>
<b>Solution:</b>
<pre>import org.apache.commons.codec.binary.Hex;

String generateSecretToken() {
    SecureRandom secRandom = new SecureRandom();

    byte[] result = new byte[32];
    secRandom.nextBytes(result);
    return Hex.encodeHexString(result);
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://jazzy.id.au/2010/09/20/cracking_random_number_generators_part_1.html">Cracking Random Number Generators - Part 1 (https://jazzy.id.au)</a><br/>
<a href="https://www.securecoding.cert.org/confluence/display/java/MSC02-J.+Generate+strong+random+numbers">CERT: MSC02-J. Generate strong random numbers</a><br/>
<a href="https://cwe.mitre.org/data/definitions/330.html">CWE-330: Use of Insufficiently Random Values</a><br/>
<a href="https://blog.h3xstream.com/2014/12/predicting-struts-csrf-token-cve-2014.html">Predicting Struts CSRF Token (Example of real-life vulnerability and exploitation)</a>
</p>

        
<h2>
<a name="PATH_TRAVERSAL_IN">PATH_TRAVERSAL_IN: Potential Path Traversal (file read)</a>
</h2>
            
<p>A file is opened to read its content. The filename comes from an <b>input</b> parameter.
If an unfiltered parameter is passed to this file API, files from an arbitrary filesystem location could be read.</p>
<p>This rule identifies <b>potential</b> path traversal vulnerabilities. In many cases, the constructed file path cannot be controlled
by the user. If that is the case, the reported instance is a false positive.</p>
<br/>

<p>
    <b>Vulnerable Code:</b><br/>
<pre>@GET
@Path("/images/{image}")
@Produces("images/*")
public Response getImage(@javax.ws.rs.PathParam("image") String image) {
    File file = new File("resources/images/", image); //Weak point

    if (!file.exists()) {
        return Response.status(Status.NOT_FOUND).build();
    }

    return Response.ok().entity(new FileInputStream(file)).build();
}</pre>
</p>
<br/>

<p>
    <b>Solution:</b><br/>
<pre>import org.apache.commons.io.FilenameUtils;

@GET
@Path("/images/{image}")
@Produces("images/*")
public Response getImage(@javax.ws.rs.PathParam("image") String image) {
    File file = new File("resources/images/", FilenameUtils.getName(image)); //Fix

    if (!file.exists()) {
        return Response.status(Status.NOT_FOUND).build();
    }

    return Response.ok().entity(new FileInputStream(file)).build();
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="http://projects.webappsec.org/w/page/13246952/Path%20Traversal">WASC: Path Traversal</a><br/>
<a href="https://www.owasp.org/index.php/Path_Traversal">OWASP: Path Traversal</a><br/>
<a href="https://capec.mitre.org/data/definitions/126.html">CAPEC-126: Path Traversal</a><br/>
<a href="https://cwe.mitre.org/data/definitions/22.html">CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')</a>
</p>

        
<h2>
<a name="WEAK_MESSAGE_DIGEST_SHA1">WEAK_MESSAGE_DIGEST_SHA1: SHA-1 is a weak hash function</a>
</h2>
            
<p>The algorithms SHA-1 is not a recommended algorithm for hash password, for signature verification and other
uses. <b>PBKDF2</b> should be used to hash password for example.</p>

<blockquote>
    "<b>SHA-1 for digital signature generation:</b><br/>
    SHA-1 may only be used for digital signature generation where specifically allowed by NIST protocol-specific guidance.
    For all other applications, <u>SHA-1 shall not be used for digital signature generation</u>.<br/>
    <b>SHA-1 for digital signature verification:</b><br/>
    For digital signature verification, <u>SHA-1 is allowed for legacy-use</u>.<br/>
    [...]<br/>
    <b>SHA-224, SHA-256, SHA-384, SHA-512, SHA-512/224, and SHA-512/256</b>:<br/>
    The use of these hash functions is acceptable for all hash function applications."<br/>
    - <a href="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-131Ar2.pdf">NIST: Transitioning the Use of Cryptographic Algorithms and Key Lengths p.15</a>
</blockquote>
<blockquote>
    "The main idea of a PBKDF is to slow dictionary or brute force attacks on the passwords by increasing the time
    needed to test each password. An attacker with a list of likely passwords can evaluate the PBKDF using the known
    iteration counter and the salt. Since an attacker has to spend a significant amount of computing time for each try,
    it becomes harder to apply the dictionary or brute force attacks."<br/>
- <a href="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-132.pdf">NIST: Recommendation for Password-Based Key Derivation  p.12</a>

</blockquote>
<br/>
<p>
    <b>Vulnerable Code:</b><br/>
    <pre>MessageDigest sha1Digest = MessageDigest.getInstance("SHA1");
    sha1Digest.update(password.getBytes());
    byte[] hashValue = sha1Digest.digest();</pre>
    <br/>
    <pre>byte[] hashValue = DigestUtils.getSha1Digest().digest(password.getBytes());</pre>
</p>
<br/>
<p>
    <b>Solution (Using bouncy castle):</b><br/>
    <pre>public static byte[] getEncryptedPassword(String password, byte[] salt) throws NoSuchAlgorithmException, InvalidKeySpecException {
    PKCS5S2ParametersGenerator gen = new PKCS5S2ParametersGenerator(new SHA256Digest());
    gen.init(password.getBytes("UTF-8"), salt.getBytes(), 4096);
    return ((KeyParameter) gen.generateDerivedParameters(256)).getKey();
}</pre>
    <br/>
    <b>Solution (Java 8 and later):</b><br/>
    <pre>public static byte[] getEncryptedPassword(String password, byte[] salt) throws NoSuchAlgorithmException, InvalidKeySpecException {
    KeySpec spec = new PBEKeySpec(password.toCharArray(), salt, 4096, 256 * 8);
    SecretKeyFactory f = SecretKeyFactory.getInstance("PBKDF2WithHmacSHA256");
    return f.generateSecret(spec).getEncoded();
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://community.qualys.com/blogs/securitylabs/2014/09/09/sha1-deprecation-what-you-need-to-know">Qualys blog: SHA1 Deprecation: What You Need to Know</a><br/>
<a href="https://googleonlinesecurity.blogspot.ca/2014/09/gradually-sunsetting-sha-1.html">Google Online Security Blog: Gradually sunsetting SHA-1</a><br/>
<a href="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-131Ar2.pdf">NIST: Transitioning the Use of Cryptographic Algorithms and Key Lengths</a><br/>
<a href="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-132.pdf">NIST: Recommendation for Password-Based Key Derivation</a><br/>
<a href="https://stackoverflow.com/q/22580853/89769">Stackoverflow: Reliable implementation of PBKDF2-HMAC-SHA256 for Java</a><br/>
<a href="https://cwe.mitre.org/data/definitions/327.html">CWE-327: Use of a Broken or Risky Cryptographic Algorithm</a>
</p>

        
<h2>
<a name="UNSAFE_HASH_EQUALS">UNSAFE_HASH_EQUALS: Unsafe hash equals</a>
</h2>
            
<p>
An attacker might be able to detect the value of the secret hash due to the exposure of comparison timing. When the
functions <code>Arrays.equals()</code> or <code>String.equals()</code> are called, they will exit earlier if fewer
bytes are matched.
</p>
<p>
<p><b>Vulnerable Code:</b><br/>

<pre>
String actualHash = ...

if(userInput.equals(actualHash)) {
    ...
}</pre>
</p>
<p><b>Solution:</b><br/>

<pre>
String actualHash = ...

if(MessageDigest.isEqual(userInput.getBytes(),actualHash.getBytes())) {
    ...
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/203.html">CWE-203: Information Exposure Through DiscrepancyKey</a><br/>
</p>

        
<h2>
<a name="XXE_DOCUMENT">XXE_DOCUMENT: XML parsing vulnerable to XXE (DocumentBuilder)</a>
</h2>
            
<!--XXE_GENERIC_START-->
<h3>Attack</h3>
<p>XML External Entity (XXE) attacks can occur when an XML parser supports XML entities while processing XML received
from an untrusted source.</p>
<p><b>Risk 1: Expose local file content (XXE: <u>X</u>ML E<u>x</u>ternal <u>E</u>ntity)</b></p>
<p>
<pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;
&lt;!DOCTYPE foo [
   &lt;!ENTITY xxe SYSTEM &quot;file:///etc/passwd&quot; &gt; ]&gt;
&lt;foo&gt;&amp;xxe;&lt;/foo&gt;</pre>
</p>
<b>Risk 2: Denial of service (XEE: <u>X</u>ML <u>E</u>ntity <u>E</u>xpansion)</b>
<p>
<pre>
&lt;?xml version=&quot;1.0&quot;?&gt;
&lt;!DOCTYPE lolz [
 &lt;!ENTITY lol &quot;lol&quot;&gt;
 &lt;!ELEMENT lolz (#PCDATA)&gt;
 &lt;!ENTITY lol1 &quot;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&quot;&gt;
 &lt;!ENTITY lol2 &quot;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&quot;&gt;
 &lt;!ENTITY lol3 &quot;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&quot;&gt;
[...]
 &lt;!ENTITY lol9 &quot;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&quot;&gt;
]&gt;
&lt;lolz&gt;&amp;lol9;&lt;/lolz&gt;</pre>
</p>

<h3>Solution</h3>
<p>
In order to avoid exposing dangerous feature of the XML parser, you can do the following change to the code.
</p>
<!--XXE_GENERIC_END-->

<p><b>Vulnerable Code:</b></p>
<p>
<pre>
DocumentBuilder db = DocumentBuilderFactory.newInstance().newDocumentBuilder();

Document doc = db.parse(input);</pre>
</p>
<br/>
<p>
The following snippets show two available solutions. You can set one feature or both.
</p>

<p><b>Solution using "Secure processing" mode:</b></p>
<p>
This setting will protect you against Denial of Service attack and remote file access.
<pre>
DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
DocumentBuilder db = dbf.newDocumentBuilder();

Document doc = db.parse(input);</pre>
</p>

<p><b>Solution disabling DTD:</b></p>
<p>
By disabling DTD, almost all XXE attacks will be prevented.
<pre>
DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true);
DocumentBuilder db = dbf.newDocumentBuilder();

Document doc = db.parse(input);</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<!--XXE_GENERIC_START-->
<a href="https://cwe.mitre.org/data/definitions/611.html">CWE-611: Improper Restriction of XML External Entity Reference ('XXE')</a><br/>
<a href="https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=61702260">CERT: IDS10-J. Prevent XML external entity attacks</a><br/>
<a href="https://www.owasp.org/index.php/XML_External_Entity_%28XXE%29_Processing">OWASP.org: XML External Entity (XXE) Processing</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_Entity_Expansion">WS-Attacks.org: XML Entity Expansion</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_External_Entity_DOS">WS-Attacks.org: XML External Entity DOS</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_Entity_Reference_Attack">WS-Attacks.org: XML Entity Reference Attack</a><br/>
<a href="https://blog.h3xstream.com/2014/06/identifx-xml-external-entity.html">Identifx XML External Entity vulnerability (XXE)</a><br/>
<!--XXE_GENERIC_END-->
<a href="http://xerces.apache.org/xerces2-j/features.html">Xerces2 complete features list</a>
</p>

        </body>
</html>
