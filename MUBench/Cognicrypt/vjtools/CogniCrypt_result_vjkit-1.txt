
Current Proejct: /home/x/CryptoAPIDetect/dataset/MUBench/vjtools/vjkit/target/vjkit-1.0.3-SNAPSHOT.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 416.8 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 13 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 13
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.08

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 13
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.15

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 13
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.23

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 13
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.31

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 15
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 16
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.38

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.41

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 19
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.42

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 20
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.45

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 20
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 22
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.52

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 24
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.54

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 14 of 24
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.58

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 15 of 24
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.63

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 16 of 24
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 17 of 24
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.71

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 18 of 24
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.75

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 19 of 24
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.79

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 20 of 24
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.83

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 21 of 24
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.88

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 22 of 24
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.92

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 23 of 24
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.96

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 24 of 25
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.96

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r4
		Type: javax.crypto.KeyGenerator
		Statement: r4 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer733)
		Method: <com.vip.vjtools.vjkit.security.CryptoUtil: byte[] generateHmacSha1Key()>
		SHA-256: 70ffdd98442e3ce1565ee456d9aa5a49c9297466d39303d0d86db394456e3b99
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer739)
		Method: <com.vip.vjtools.vjkit.security.CryptoUtil: byte[] aes(byte[],byte[],int)>
		SHA-256: 3fce793ebc3b59b8a789e9daae309cae45bff6444cca576cae866f402fb0b87c
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <com.vip.vjtools.vjkit.number.RandomUtil: java.security.SecureRandom secureRandom()>
		SHA-256: 805f08259004dc4acffa68e84d404a49031e2463210afbb98c85a58eb6287659
		Secure: true
	Object:
		Variable: varReplacer732
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer732)
		Method: <com.vip.vjtools.vjkit.security.CryptoUtil: byte[] hmacSha1(byte[],byte[])>
		SHA-256: 3cd4ec9eaceed4201ee7afcc7e9905ea8e354a89ad48053888572db1985399d6
		Secure: false
	Object:
		Variable: r4
		Type: javax.crypto.KeyGenerator
		Statement: r4 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer744)
		Method: <com.vip.vjtools.vjkit.security.CryptoUtil: byte[] generateAesKey(int)>
		SHA-256: 60378a844aebebdd3d1159d8afb50613793011fa6db1e1058d7ce940d972b276
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: $r1 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer262)
		Method: <com.vip.vjtools.vjkit.number.RandomUtil: java.security.SecureRandom secureRandom()>
		SHA-256: 571a72e3b7e622af351638cefe7e1929b969d950a5c929da4b68728db33dcfa5
		Secure: true
	Object:
		Variable: varReplacer742
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer742)
		Method: <com.vip.vjtools.vjkit.security.CryptoUtil: byte[] aes(byte[],byte[],byte[],int)>
		SHA-256: ec0fc7bb39faedf6fb4ba927b4b28d2d607d0f9a192beda2745d4bc800bea5ba
		Secure: false
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r4 = virtualinvoke r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r0)
		Method: <com.vip.vjtools.vjkit.security.CryptoUtil: byte[] aes(byte[],byte[],int)>
		SHA-256: 14fce5b46e279921ccaab1c642c0c3d7c1081907f93e9d4be6cbd1e78e4ed7fc
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r0)
		Method: <com.vip.vjtools.vjkit.security.CryptoUtil: byte[] aes(byte[],byte[],byte[],int)>
		SHA-256: 4ef35848db854cac7e4ca9e1565558fa048b3be41ee0d2a18c66a715af6998a0
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r2)
		Method: <com.vip.vjtools.vjkit.security.CryptoUtil: byte[] aes(byte[],byte[],byte[],int)>
		SHA-256: 5ec487411b1fa19bdf1a535ce42b28d8a7b7fb348b6b3c5665e3b8e860d20a31
		Secure: false
	Object:
		Variable: varReplacer739
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer739)
		Method: <com.vip.vjtools.vjkit.security.CryptoUtil: byte[] aes(byte[],byte[],int)>
		SHA-256: d1d1f0d2a3ecb436631d468878eba9ebfb7fcfd9656eda75cd2b15ce12d60215
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer742)
		Method: <com.vip.vjtools.vjkit.security.CryptoUtil: byte[] aes(byte[],byte[],byte[],int)>
		SHA-256: 3f3de111ca36f1717121f0511c1743a825cd63beba7bad195905bd39710665c3
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <com.vip.vjtools.vjkit.text.HashUtil$1: java.security.MessageDigest initialValue()>
		SHA-256: 23e3851234f4c329513122f40bda34c4478025972deef54f7ca8e76e0fbe1e01
		Secure: false
	Object:
		Variable: r2
		Type: javax.crypto.Mac
		Statement: r2 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer731)
		Method: <com.vip.vjtools.vjkit.security.CryptoUtil: byte[] hmacSha1(byte[],byte[])>
		SHA-256: 12a90bcca50ec21423d341cb03e98b1a18a70604e55033537b0a14fd5842c064
		Secure: true
	Object:
		Variable: r4
		Type: javax.crypto.Cipher
		Statement: r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer741)
		Method: <com.vip.vjtools.vjkit.security.CryptoUtil: byte[] aes(byte[],byte[],byte[],int)>
		SHA-256: 52bd5ca6766f114aded119d1a0c6b92480157eada1ba04ff94b8f112ecb6246c
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer732)
		Method: <com.vip.vjtools.vjkit.security.CryptoUtil: byte[] hmacSha1(byte[],byte[])>
		SHA-256: afa7577af1734d3551b314ec3fc74cb8d52fbb3db4260f51b07d769a13dfa6a4
		Secure: false
	Object:
		Variable: r0
		Type: javax.crypto.SecretKey
		Statement: r0 = virtualinvoke r4.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.vip.vjtools.vjkit.security.CryptoUtil: byte[] generateAesKey(int)>
		SHA-256: 4802fe357a8bfc113b748c70d69cf026fdd624b42b5215e1f5ffbd25605e86c3
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <com.vip.vjtools.vjkit.text.HashUtil: void <clinit>()>
		SHA-256: 80502925d440b2f321197127332597cb8d5c14b678905a58ebfb8de6edf174ac
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = interfaceinvoke r0.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <com.vip.vjtools.vjkit.security.CryptoUtil: byte[] generateAesKey(int)>
		SHA-256: 6bd6b93c5a233b61c1bf70e6ed619fe4ade0bfb70a3b7beac5498ed272eed21
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke r2.<javax.crypto.Mac: byte[] doFinal(byte[])>(r0)
		Method: <com.vip.vjtools.vjkit.security.CryptoUtil: byte[] hmacSha1(byte[],byte[])>
		SHA-256: 976826a46139a8b5f59474c0772488b691399c130bd37288400e167582b8500a
		Secure: true
	Object:
		Variable: r2
		Type: javax.crypto.Cipher
		Statement: r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer740)
		Method: <com.vip.vjtools.vjkit.security.CryptoUtil: byte[] aes(byte[],byte[],int)>
		SHA-256: b586844841eaf9b13662219548a204f407b102ac9cfa56b707010632ea300bb0
		Secure: false
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r4 = virtualinvoke r2.<javax.crypto.Mac: byte[] doFinal(byte[])>(r0)
		Method: <com.vip.vjtools.vjkit.security.CryptoUtil: byte[] hmacSha1(byte[],byte[])>
		SHA-256: 80c8bf40637ed7b9d34596caf54ed00339c74ff95db3ab862f3e4b0d23899881
		Secure: true
	Object:
		Variable: r0
		Type: javax.crypto.SecretKey
		Statement: r0 = virtualinvoke r4.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.vip.vjtools.vjkit.security.CryptoUtil: byte[] generateHmacSha1Key()>
		SHA-256: 374d5634ed90e78f9b44be03755fd70435eda72ecf5f98b13994894a1aa825dd
		Secure: false
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r7 = virtualinvoke r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r0)
		Method: <com.vip.vjtools.vjkit.security.CryptoUtil: byte[] aes(byte[],byte[],byte[],int)>
		SHA-256: aab2c9085f2bb3482bce1561f7c6d7a44e1b285cd85a4ee6abfee25550ac3f93
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r0)
		Method: <com.vip.vjtools.vjkit.security.CryptoUtil: byte[] aes(byte[],byte[],int)>
		SHA-256: bd3e12cd7587f747063e7ec033b97c9ed441ce3a91a40eac5bc1b13d20c1a6b6
		Secure: false

Findings in Java Class: com.vip.vjtools.vjkit.text.HashUtil$1

	 in Method: java.lang.Object initialValue()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #23e3851234f4c329513122f40bda34c4478025972deef54f7ca8e76e0fbe1e01)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: return $r1


Findings in Java Class: com.vip.vjtools.vjkit.security.CryptoUtil

	 in Method: byte[] hmacSha1(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer732)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #afa7577af1734d3551b314ec3fc74cb8d52fbb3db4260f51b07d769a13dfa6a4)
			Second parameter (with value "HmacSHA1") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer732)


	 in Method: byte[] generateHmacSha1Key()
		ConstraintError violating CrySL rule for javax.crypto.KeyGenerator (on Object #70ffdd98442e3ce1565ee456d9aa5a49c9297466d39303d0d86db394456e3b99)
			First parameter (with value "HmacSHA1") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: r4 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer733)


	 in Method: byte[] aes(byte[],byte[],int)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #b586844841eaf9b13662219548a204f407b102ac9cfa56b707010632ea300bb0)
			First parameter (with value "AES") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer740)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(i0, r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer739)


	 in Method: byte[] aes(byte[],byte[],byte[],int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer742)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(i0, r10, r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r2)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 25

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 3
	RequiredPredicateError: 6
	IncompleteOperationError: 1
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 24 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 25.93 s
