
Current Proejct: /home/x/CryptoAPIDetect/dataset/MUBench/bt/bt-core/target/bt-core-1.8-SNAPSHOT.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 425.0 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 8 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 9
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.11

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 10
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.2

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.18

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.17

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.22

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 27
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.22

[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.net.InetSocketAddress: java.net.InetAddress getAddress()> for class bt.net.ConnectionResult
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.net.InetSocketAddress: java.net.InetAddress getAddress()> for class bt.net.ConnectionResult
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.net.InetSocketAddress: java.net.InetAddress getAddress()> for class bt.net.ConnectionResult
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.net.InetSocketAddress: int getPort()> for class bt.net.ConnectionResult
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.net.InetSocketAddress: int getPort()> for class bt.net.ConnectionResult
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.net.InetSocketAddress: int getPort()> for class bt.net.ConnectionResult
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.util.Collection: boolean addAll(java.util.Collection)> for class bt.net.ConnectionResult
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.util.Collection: boolean addAll(java.util.Collection)> for class bt.net.ConnectionResult
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.util.Collection: boolean addAll(java.util.Collection)> for class bt.net.ConnectionResult
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.util.Collection: java.util.Iterator iterator()> for class bt.net.ConnectionResult
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.util.Collection: java.util.Iterator iterator()> for class bt.net.ConnectionResult
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.util.Collection: java.util.Iterator iterator()> for class bt.net.ConnectionResult
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 28
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.25

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.27

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.3

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.37

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.4

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.43

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 14 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.47

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 15 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 16 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.53

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 17 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.57

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 18 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.6

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 19 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.63

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 20 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 21 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.7

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 22 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.73

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 23 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.77

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 24 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.8

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 25 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.83

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 26 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.87

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 27 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.9

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 28 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.93

[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.net.InetSocketAddress: java.net.InetAddress getAddress()> for class bt.metainfo.DefaultTorrent
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.util.Collection: boolean addAll(java.util.Collection)> for class bt.metainfo.DefaultTorrent
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.util.Collection: java.util.Iterator iterator()> for class bt.metainfo.DefaultTorrent
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.net.InetSocketAddress: int getPort()> for class bt.metainfo.DefaultTorrent
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 29 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.97

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r15
		Type: byte[]
		Statement: $r61 = virtualinvoke $r60.<javax.crypto.Cipher: byte[] update(byte[])>(r15)
		Method: <bt.net.crypto.MSEHandshakeProcessor: java.util.Optional negotiateIncoming(bt.net.Peer,java.nio.channels.ByteChannel,java.nio.ByteBuffer,java.nio.ByteBuffer)>
		SHA-256: 6a6c1c8b08a9ec96f1906ab6c2a0ee6ac51894fa9bdc035678df7537e18fa8d1
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.SecureRandom
		Statement: specialinvoke $r7.<java.security.SecureRandom: void <init>()>()
		Method: <bt.net.crypto.MSEKeyPairGenerator: void <init>(int)>
		SHA-256: 9703ed264ae2aacf97d5dd6374b6bd440d0e38745619c9e88c95cab3725a7f74
		Secure: true
	Object:
		Variable: $r66
		Type: byte[]
		Statement: r17 = virtualinvoke $r65.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r66)
		Method: <bt.net.crypto.MSEHandshakeProcessor: java.util.Optional negotiateOutgoing(bt.net.Peer,java.nio.channels.ByteChannel,bt.metainfo.TorrentId,java.nio.ByteBuffer,java.nio.ByteBuffer)>
		SHA-256: e4f179be83eaa2793c123cf7cd9e5a04d8ef39652826e3f1f8c81503bd01684d
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <bt.protocol.crypto.MSECipher: java.security.Key getEncryptionKey(java.lang.String,byte[],byte[])>
		SHA-256: 388414ed9dd2ddac80900a35d16d254f3a39efde74cb9349d3f402fe6d18824e
		Secure: false
	Object:
		Variable: $r21
		Type: java.security.PublicKey
		Statement: $r21 = virtualinvoke r7.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <bt.net.crypto.MSEHandshakeProcessor: java.util.Optional negotiateOutgoing(bt.net.Peer,java.nio.channels.ByteChannel,bt.metainfo.TorrentId,java.nio.ByteBuffer,java.nio.ByteBuffer)>
		SHA-256: 6555e30d59b2067af522823bbe20c61c6f856c79b2564ec4e4c22542345d489c
		Secure: false
	Object:
		Variable: varReplacer27
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer27)
		Method: <bt.protocol.crypto.MSECipher: java.security.Key getEncryptionKey(java.lang.String,byte[],byte[])>
		SHA-256: b4f7c77848323c8358fa2ca80bbe5e6a73057d63e2d9cbfb86b3f514aa6779a7
		Secure: false
	Object:
		Variable: r13
		Type: byte[]
		Statement: r13 = virtualinvoke r10.<java.security.MessageDigest: byte[] digest()>()
		Method: <bt.net.crypto.MSEHandshakeProcessor: java.util.Optional negotiateIncoming(bt.net.Peer,java.nio.channels.ByteChannel,java.nio.ByteBuffer,java.nio.ByteBuffer)>
		SHA-256: 4d831b3859c7a704292c7401eaf7dfaf6a5175c2f55eaa15b2ffde92e28b8f90
		Secure: false
	Object:
		Variable: $r39
		Type: java.security.PrivateKey
		Statement: $r39 = virtualinvoke r8.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <bt.net.crypto.MSEHandshakeProcessor: java.util.Optional negotiateIncoming(bt.net.Peer,java.nio.channels.ByteChannel,java.nio.ByteBuffer,java.nio.ByteBuffer)>
		SHA-256: f78fd37ec2ea7fecaa84038fb8dbb1772c0b3e1b8b709c083a71824ebc1089dd
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer27)
		Method: <bt.protocol.crypto.MSECipher: java.security.Key getEncryptionKey(java.lang.String,byte[],byte[])>
		SHA-256: bb35ed11c49233173e00924d23a7c7c70d63960868f31aaea5f60200062d56a3
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.KeyPair
		Statement: specialinvoke $r5.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>(r2, r1)
		Method: <bt.net.crypto.MSEKeyPairGenerator: java.security.KeyPair generateKeyPair()>
		SHA-256: b2784ed20c3157f0fb860c99d0a8b1043322744a2f3abdae1d9c43042515845a
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <bt.data.digest.JavaSecurityDigester: java.security.MessageDigest createDigest()>
		SHA-256: dc10ba525a5cad44b2c806e0c081af8fb92f4205c0b60e8756725ca788e1f2d1
		Secure: false
	Object:
		Variable: r11
		Type: byte[]
		Statement: r12 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] update(byte[])>(r11)
		Method: <bt.net.crypto.EncryptedChannel: int write(java.nio.ByteBuffer)>
		SHA-256: 1f8b7f08be18dc9b307d09941477780d24cf74077313b31a6735147d5861725c
		Secure: false
	Object:
		Variable: r3
		Type: javax.crypto.Cipher
		Statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r1)
		Method: <bt.protocol.crypto.MSECipher: javax.crypto.Cipher createCipher(int,java.lang.String,java.security.Key)>
		SHA-256: 614e47fc0daa9809f4d210ae4875fe979943cea83e983a2faf6bd9bfab99191
		Secure: false
	Object:
		Variable: r11
		Type: byte[]
		Statement: r11 = virtualinvoke r10.<java.security.MessageDigest: byte[] digest()>()
		Method: <bt.net.crypto.MSEHandshakeProcessor: java.util.Optional negotiateOutgoing(bt.net.Peer,java.nio.channels.ByteChannel,bt.metainfo.TorrentId,java.nio.ByteBuffer,java.nio.ByteBuffer)>
		SHA-256: 294170172e72de459226d9d4730d0a8a1dca3e0e3fe520c69723b738c86646ef
		Secure: false
	Object:
		Variable: r12
		Type: byte[]
		Statement: r12 = virtualinvoke r10.<java.security.MessageDigest: byte[] digest()>()
		Method: <bt.net.crypto.MSEHandshakeProcessor: java.util.Optional negotiateOutgoing(bt.net.Peer,java.nio.channels.ByteChannel,bt.metainfo.TorrentId,java.nio.ByteBuffer,java.nio.ByteBuffer)>
		SHA-256: a764469e7d10537e4771d6566fdb0090ad26b878414d3605fa56468e00655447
		Secure: false
	Object:
		Variable: $r61
		Type: byte[]
		Statement: $r61 = virtualinvoke $r60.<javax.crypto.Cipher: byte[] update(byte[])>(r15)
		Method: <bt.net.crypto.MSEHandshakeProcessor: java.util.Optional negotiateIncoming(bt.net.Peer,java.nio.channels.ByteChannel,java.nio.ByteBuffer,java.nio.ByteBuffer)>
		SHA-256: e101714cf30d8c9ba12f53bfdfa1a82af42eb551de15c033191b4846cadfef1
		Secure: false
	Object:
		Variable: r12
		Type: byte[]
		Statement: r12 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] update(byte[])>(r11)
		Method: <bt.net.crypto.EncryptedChannel: int write(java.nio.ByteBuffer)>
		SHA-256: aa67a3550dc3051f6024b274ceb424ff8543d40693f2d617d05e182c58eab6d4
		Secure: false
	Object:
		Variable: $r31
		Type: java.security.PublicKey
		Statement: $r31 = virtualinvoke r8.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <bt.net.crypto.MSEHandshakeProcessor: java.util.Optional negotiateIncoming(bt.net.Peer,java.nio.channels.ByteChannel,java.nio.ByteBuffer,java.nio.ByteBuffer)>
		SHA-256: 3d55b8d637c0a3cbf10adecc890ab0fa50b7be119e46b9ff0536ed7f1a141500
		Secure: false
	Object:
		Variable: $r38
		Type: byte[]
		Statement: $r38 = virtualinvoke r10.<java.security.MessageDigest: byte[] digest()>()
		Method: <bt.net.crypto.MSEHandshakeProcessor: java.util.Optional negotiateOutgoing(bt.net.Peer,java.nio.channels.ByteChannel,bt.metainfo.TorrentId,java.nio.ByteBuffer,java.nio.ByteBuffer)>
		SHA-256: a3bb0ef7dfb8286599de8c760b89fce51f067710616667ec6dda1992cdc8a57f
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <bt.data.digest.JavaSecurityDigester: byte[] digest(bt.data.range.Range)>
		SHA-256: 9b50b11b1261e970dfab51c059ebe356ee1a21ab0800e9e6503190322f42bff1
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r1)
		Method: <bt.net.crypto.MSEHandshakeProcessor: java.security.MessageDigest getDigest(java.lang.String)>
		SHA-256: 666da974b8b40f87d28e2871292e2548de0255325e437ad8b8d33c70a1f09f47
		Secure: false
	Object:
		Variable: $r33
		Type: java.security.PrivateKey
		Statement: $r33 = virtualinvoke r7.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <bt.net.crypto.MSEHandshakeProcessor: java.util.Optional negotiateOutgoing(bt.net.Peer,java.nio.channels.ByteChannel,bt.metainfo.TorrentId,java.nio.ByteBuffer,java.nio.ByteBuffer)>
		SHA-256: d223c84c4e5786bb416415b15ffb87e8b55332c1535a4f9b27b85873da6c48db
		Secure: false
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r3 = virtualinvoke r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <bt.service.CryptoUtil: byte[] getSha1Digest(byte[])>
		SHA-256: c30b2a2f872ace661b63ffdf8df015f6a3761ba30536dda7c1d74cbffb986c22
		Secure: false
	Object:
		Variable: r1
		Type: java.security.MessageDigest
		Statement: r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1468)
		Method: <bt.service.CryptoUtil: byte[] getSha1Digest(byte[])>
		SHA-256: f2db3528fc0cae9b2a3dcd551adcfadb8144c48dcc3a689006dc60f4a87fe608
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r1)
		Method: <bt.protocol.crypto.MSECipher: java.security.MessageDigest getDigest(java.lang.String)>
		SHA-256: ae6214777113c847c8846fb4db50472005243b6086a815b36ab60ef61c1d851d
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <bt.service.CryptoUtil: byte[] getSha1Digest(byte[])>
		SHA-256: 41d4fed396ffc9aaa09a84712f9f8506eaea7ce6fe8018073381de3d49bbece5
		Secure: false
	Object:
		Variable: r12
		Type: byte[]
		Statement: r12 = virtualinvoke r10.<java.security.MessageDigest: byte[] digest()>()
		Method: <bt.net.crypto.MSEHandshakeProcessor: java.util.Optional negotiateIncoming(bt.net.Peer,java.nio.channels.ByteChannel,java.nio.ByteBuffer,java.nio.ByteBuffer)>
		SHA-256: d1f8d0bd1855939c042e5ac99793d1a66b8fffbc3a8de5e1eddc836f94e2a032
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: virtualinvoke r3.<javax.crypto.Cipher: byte[] update(byte[])>($r5)
		Method: <bt.protocol.crypto.MSECipher: javax.crypto.Cipher createCipher(int,java.lang.String,java.security.Key)>
		SHA-256: 7bff368ce272579f8810f81baa5ecc81489b5ea45e9d242ead2609292b0c1170
		Secure: false
	Object:
		Variable: r17
		Type: byte[]
		Statement: r17 = virtualinvoke $r65.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r66)
		Method: <bt.net.crypto.MSEHandshakeProcessor: java.util.Optional negotiateOutgoing(bt.net.Peer,java.nio.channels.ByteChannel,bt.metainfo.TorrentId,java.nio.ByteBuffer,java.nio.ByteBuffer)>
		SHA-256: 88fd950b4a5da5d1dde09098e47371713ce13b277655836fe227c595cf1ccfff
		Secure: false
	Object:
		Variable: r136
		Type: byte[]
		Statement: r136 = virtualinvoke r10.<java.security.MessageDigest: byte[] digest()>()
		Method: <bt.net.crypto.MSEHandshakeProcessor: java.util.Optional negotiateIncoming(bt.net.Peer,java.nio.channels.ByteChannel,java.nio.ByteBuffer,java.nio.ByteBuffer)>
		SHA-256: fcdf7dac5a356d9c446c27479452a661e7fe28ba339d48ad0a43e90573d70956
		Secure: false

Findings in Java Class: bt.protocol.crypto.MSECipher

	 in Method: java.security.Key getEncryptionKey(java.lang.String,byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #bb35ed11c49233173e00924d23a7c7c70d63960868f31aaea5f60200062d56a3)
			Second parameter (with value "ARCFOUR") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer27)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer27)


	 in Method: java.security.MessageDigest getDigest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ae6214777113c847c8846fb4db50472005243b6086a815b36ab60ef61c1d851d)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r1)


	 in Method: javax.crypto.Cipher createCipher(int,java.lang.String,java.security.Key)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(i0, r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #614e47fc0daa9809f4d210ae4875fe979943cea83e983a2faf6bd9bfab99191)
			First parameter (with value "ARCFOUR/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r1)


Findings in Java Class: bt.net.crypto.MSEHandshakeProcessor

	 in Method: java.util.Optional negotiateOutgoing(bt.net.Peer,java.nio.channels.ByteChannel,bt.metainfo.TorrentId,java.nio.ByteBuffer,java.nio.ByteBuffer)
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #614e47fc0daa9809f4d210ae4875fe979943cea83e983a2faf6bd9bfab99191)
			Unexpected call to method update on object of type javax.crypto.Cipher.
			at statement: virtualinvoke $r69.<javax.crypto.Cipher: byte[] update(byte[])>($r71)


	 in Method: java.util.Optional negotiateIncoming(bt.net.Peer,java.nio.channels.ByteChannel,java.nio.ByteBuffer,java.nio.ByteBuffer)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #614e47fc0daa9809f4d210ae4875fe979943cea83e983a2faf6bd9bfab99191)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to doFinal
			at statement: interfaceinvoke r140.<java.nio.channels.ByteChannel: int write(java.nio.ByteBuffer)>(r4)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #614e47fc0daa9809f4d210ae4875fe979943cea83e983a2faf6bd9bfab99191)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to doFinal
			at statement: $r80 = staticinvoke <java.util.Optional: java.util.Optional of(java.lang.Object)>(r139)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #614e47fc0daa9809f4d210ae4875fe979943cea83e983a2faf6bd9bfab99191)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to doFinal
			at statement: $r61 = virtualinvoke $r60.<javax.crypto.Cipher: byte[] update(byte[])>(r15)


	 in Method: java.security.MessageDigest getDigest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #666da974b8b40f87d28e2871292e2548de0255325e437ad8b8d33c70a1f09f47)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r1)


Findings in Java Class: bt.data.digest.JavaSecurityDigester

	 in Method: byte[] digest(bt.data.DataRange)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #dc10ba525a5cad44b2c806e0c081af8fb92f4205c0b60e8756725ca788e1f2d1)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r4 = virtualinvoke r2.<java.security.MessageDigest: byte[] digest()>()


	 in Method: byte[] digest(bt.data.range.Range)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #dc10ba525a5cad44b2c806e0c081af8fb92f4205c0b60e8756725ca788e1f2d1)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r3 = virtualinvoke r2.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: bt.service.CryptoUtil

	 in Method: byte[] getSha1Digest(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #f2db3528fc0cae9b2a3dcd551adcfadb8144c48dcc3a689006dc60f4a87fe608)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1468)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 30

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 5
	TypestateError: 3
	IncompleteOperationError: 3
	RequiredPredicateError: 2
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 7 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 9.809 s
