
Current Proejct: /home/x/CryptoAPIDetect/dataset/MUBench/spring-boot-student/spring-boot-student-encode/target/spring-boot-student-encode-0.0.1-SNAPSHOT.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 364.7 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 18 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 19
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.05

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 21
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.1

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 22
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.14

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 24
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.17

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 24
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.21

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 25
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.24

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 26
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.27

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 28
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.29

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 28
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.32

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 29
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.34

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.37

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 32
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.38

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 32
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.41

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 14 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.42

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 15 of 34
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.44

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 16 of 36
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.44

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 17 of 36
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.47

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 18 of 37
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.49

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 19 of 37
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.51

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 20 of 37
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.54

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 21 of 37
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.57

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 22 of 37
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.59

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 23 of 37
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.62

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 24 of 37
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.65

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 25 of 37
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.68

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 26 of 37
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.7

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 27 of 37
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.73

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 28 of 37
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.76

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 29 of 37
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.78

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 30 of 37
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.81

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 31 of 37
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.84

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 32 of 37
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.86

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 33 of 37
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.89

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 34 of 37
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.92

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 35 of 37
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.95

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 36 of 37
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.97

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r22
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r22.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r3, varReplacer27)
		Method: <BOOT-INF.classes.com.xiaolyuh.utils.AESUtil: byte[] decrypt(byte[],java.lang.String)>
		SHA-256: 1372096e87262353990a9249c624b99a9a837a64c01be1518896b9f8e8e3f828
		Secure: false
	Object:
		Variable: r0
		Type: byte[]
		Statement: r6 = virtualinvoke r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r0)
		Method: <BOOT-INF.classes.com.xiaolyuh.utils.AESUtil: byte[] decrypt(byte[],java.lang.String)>
		SHA-256: 6ca8e212115b5f18bc3f12dccef20d0a423662ec78a9de3e53e736a5af671d26
		Secure: false
	Object:
		Variable: r2
		Type: javax.crypto.SecretKey
		Statement: r2 = virtualinvoke r17.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <BOOT-INF.classes.com.xiaolyuh.utils.AESUtil: byte[] encrypt(java.lang.String,java.lang.String)>
		SHA-256: c849662a7d8cc644a9aff56eb119638107614739c656505a6e4686c4b648f605
		Secure: false
	Object:
		Variable: r6
		Type: byte[]
		Statement: r7 = virtualinvoke r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r6)
		Method: <BOOT-INF.classes.com.xiaolyuh.utils.AESUtil: java.lang.String encryptString(java.lang.String,java.lang.String)>
		SHA-256: 3c4839df64b9a16cc946d0524c005270e021c4187787c7f7905c57a4c41629c1
		Secure: false
	Object:
		Variable: r15
		Type: javax.crypto.KeyGenerator
		Statement: r15 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer28)
		Method: <BOOT-INF.classes.com.xiaolyuh.utils.AESUtil: byte[] decrypt(byte[],java.lang.String)>
		SHA-256: 3476d909961c04bfe722c8390e3642154cc5038baad39009efaeb84d458ab2ae
		Secure: false
	Object:
		Variable: r24
		Type: java.security.SecureRandom
		Statement: specialinvoke r24.<java.security.SecureRandom: void <init>(byte[])>($r9)
		Method: <BOOT-INF.classes.com.xiaolyuh.utils.AESUtil: byte[] encrypt(java.lang.String,java.lang.String)>
		SHA-256: 38e0c2af3d7688f1c3fbd14aa71ff0adf29697501f583f10c54e14f48e27f160
		Secure: true
	Object:
		Variable: r25
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r25.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r3, varReplacer14)
		Method: <BOOT-INF.classes.com.xiaolyuh.utils.AESUtil: byte[] encrypt(java.lang.String,java.lang.String)>
		SHA-256: ccb91fe176b1ba850214010c7e73b66177aca123823be364eabd857721dbfb42
		Secure: false
	Object:
		Variable: varReplacer27
		Type: java.lang.String
		Statement: specialinvoke r22.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r3, varReplacer27)
		Method: <BOOT-INF.classes.com.xiaolyuh.utils.AESUtil: byte[] decrypt(byte[],java.lang.String)>
		SHA-256: 920d5f85d5ddbcb2ae03e0ea715d479b13d4f4cc23ae67fe95f69b5efc0eb77a
		Secure: false
	Object:
		Variable: r7
		Type: byte[]
		Statement: r7 = virtualinvoke r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r6)
		Method: <BOOT-INF.classes.com.xiaolyuh.utils.AESUtil: java.lang.String decrypt(java.lang.String,java.lang.String)>
		SHA-256: bc1e80318a8c8407974b8ad587af8b29585b642859ee0e8e4c7a8fcb791106ce
		Secure: false
	Object:
		Variable: r21
		Type: java.security.SecureRandom
		Statement: specialinvoke r21.<java.security.SecureRandom: void <init>(byte[])>($r8)
		Method: <BOOT-INF.classes.com.xiaolyuh.utils.AESUtil: byte[] decrypt(byte[],java.lang.String)>
		SHA-256: 500da1d7113ec45a8c89803220adc201a011f2b4b2f12d3a1b750f244ae3e67b
		Secure: true
	Object:
		Variable: r5
		Type: javax.crypto.Cipher
		Statement: r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer18)
		Method: <BOOT-INF.classes.com.xiaolyuh.utils.AESUtil: byte[] encrypt(java.lang.String,java.lang.String)>
		SHA-256: 5612604f0dd3c20407753c64fa85a76cd678b11ab50cb069c69cb6a5652c7c92
		Secure: false
	Object:
		Variable: r5
		Type: javax.crypto.Cipher
		Statement: r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer32)
		Method: <BOOT-INF.classes.com.xiaolyuh.utils.AESUtil: byte[] decrypt(byte[],java.lang.String)>
		SHA-256: bc139faef4fcdee1926a6bfcf2729e72dcd60304ffc39bc1d86469a4daf5afc2
		Secure: false
	Object:
		Variable: r17
		Type: javax.crypto.KeyGenerator
		Statement: r17 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer37)
		Method: <BOOT-INF.classes.com.xiaolyuh.utils.AESUtil: java.lang.String decrypt(java.lang.String,java.lang.String)>
		SHA-256: 32e8869cc7e83466fc5db4c92795788de13c21849282ba63ed407f15963bb2af
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: r1 = virtualinvoke r11.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <BOOT-INF.classes.com.xiaolyuh.utils.EncodeUtil: java.lang.String md5(java.lang.String)>
		SHA-256: 666d29af4ab92d275f80f7588e896526f15bdbb6a6511acb0ae4b44969f38ffb
		Secure: false
	Object:
		Variable: r18
		Type: javax.crypto.KeyGenerator
		Statement: r18 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer20)
		Method: <BOOT-INF.classes.com.xiaolyuh.utils.AESUtil: java.lang.String encryptString(java.lang.String,java.lang.String)>
		SHA-256: ef4c4156b604959b1be681459170c391dae5e2b11c1c22f040b82bbde0b828d4
		Secure: false
	Object:
		Variable: r25
		Type: java.security.SecureRandom
		Statement: specialinvoke r25.<java.security.SecureRandom: void <init>(byte[])>($r10)
		Method: <BOOT-INF.classes.com.xiaolyuh.utils.AESUtil: java.lang.String encryptString(java.lang.String,java.lang.String)>
		SHA-256: d2313c3801ecfea9710b18033c52e74974caaf36c5424ebe4c65531c0dbea871
		Secure: true
	Object:
		Variable: r6
		Type: byte[]
		Statement: r7 = virtualinvoke r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r6)
		Method: <BOOT-INF.classes.com.xiaolyuh.utils.AESUtil: byte[] encrypt(java.lang.String,java.lang.String)>
		SHA-256: 974c9ddeb568ed8338f92e994a2d1409a59226d2146c603fded0b59baa7f5bab
		Secure: false
	Object:
		Variable: r17
		Type: javax.crypto.KeyGenerator
		Statement: r17 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer13)
		Method: <BOOT-INF.classes.com.xiaolyuh.utils.AESUtil: byte[] encrypt(java.lang.String,java.lang.String)>
		SHA-256: 829a6b7a2dff44b7cf28b09400992d2c19917a15ac117214f14791f56d73e7ad
		Secure: false
	Object:
		Variable: r6
		Type: byte[]
		Statement: r7 = virtualinvoke r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r6)
		Method: <BOOT-INF.classes.com.xiaolyuh.utils.AESUtil: java.lang.String decrypt(java.lang.String,java.lang.String)>
		SHA-256: 5d7cecdc641c04227c88a53546dfff8d7ff36ffe4a89c0456d846ab248ae978f
		Secure: false
	Object:
		Variable: r11
		Type: java.security.MessageDigest
		Statement: r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10)
		Method: <BOOT-INF.classes.com.xiaolyuh.utils.EncodeUtil: java.lang.String md5(java.lang.String)>
		SHA-256: b9173edf31577bb48a525e12c1ea7e05670383fabc64ed2fd99ddf6149e2532e
		Secure: false
	Object:
		Variable: r6
		Type: java.security.MessageDigest
		Statement: r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2)
		Method: <BOOT-INF.classes.com.xiaolyuh.utils.EncodeUtil: java.lang.String sha(java.lang.String)>
		SHA-256: a423f84435ef9ee522ac88f68c8e035a81eba46a12b230a09ffb1bfc7cc1f9f9
		Secure: false
	Object:
		Variable: r23
		Type: java.security.SecureRandom
		Statement: specialinvoke r23.<java.security.SecureRandom: void <init>(byte[])>($r9)
		Method: <BOOT-INF.classes.com.xiaolyuh.utils.AESUtil: java.lang.String decrypt(java.lang.String,java.lang.String)>
		SHA-256: b69819def8da3e9ea4ed3f5f2193b1ffd36d7de573615487a4f34c9366ecd033
		Secure: true
	Object:
		Variable: r2
		Type: javax.crypto.SecretKey
		Statement: r2 = virtualinvoke r18.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <BOOT-INF.classes.com.xiaolyuh.utils.AESUtil: java.lang.String encryptString(java.lang.String,java.lang.String)>
		SHA-256: 299c3a19649201f47ce242c7b8186601d972f626576ab18477d0dfb50ef9b227
		Secure: false
	Object:
		Variable: r7
		Type: byte[]
		Statement: r7 = virtualinvoke r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r6)
		Method: <BOOT-INF.classes.com.xiaolyuh.utils.AESUtil: java.lang.String encryptString(java.lang.String,java.lang.String)>
		SHA-256: b0009c7be10ef5f2da27983a93b72f6cb98b5114d529528bc9ddb9614c61cbb9
		Secure: false
	Object:
		Variable: varReplacer24
		Type: java.lang.String
		Statement: specialinvoke r26.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r3, varReplacer24)
		Method: <BOOT-INF.classes.com.xiaolyuh.utils.AESUtil: java.lang.String encryptString(java.lang.String,java.lang.String)>
		SHA-256: afc416669b2040fc738da42a7f1e191218866f29cc021cf38dbae5197e8578c9
		Secure: false
	Object:
		Variable: r5
		Type: javax.crypto.Cipher
		Statement: r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer26)
		Method: <BOOT-INF.classes.com.xiaolyuh.utils.AESUtil: java.lang.String encryptString(java.lang.String,java.lang.String)>
		SHA-256: 7cbfa5e48cfe12a71456ed9394ebd94ce469fde58dfebb32533e9fff89c5e6c5
		Secure: false
	Object:
		Variable: r24
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r24.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r3, varReplacer34)
		Method: <BOOT-INF.classes.com.xiaolyuh.utils.AESUtil: java.lang.String decrypt(java.lang.String,java.lang.String)>
		SHA-256: 1af470f7cfc99640464500f01793acfa4e0da88553f06b21a4440d86088fdd3a
		Secure: false
	Object:
		Variable: r7
		Type: byte[]
		Statement: r7 = virtualinvoke r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r6)
		Method: <BOOT-INF.classes.com.xiaolyuh.utils.AESUtil: byte[] encrypt(java.lang.String,java.lang.String)>
		SHA-256: 49c40159210c2c6f5ca6d624556846b18500a02c84ed28ea850450108a95d13c
		Secure: false
	Object:
		Variable: r26
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r26.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r3, varReplacer24)
		Method: <BOOT-INF.classes.com.xiaolyuh.utils.AESUtil: java.lang.String encryptString(java.lang.String,java.lang.String)>
		SHA-256: f131157fe916e89d4c16a218a6548e129e63d698717c44561a7103cba7c97935
		Secure: false
	Object:
		Variable: r5
		Type: javax.crypto.Cipher
		Statement: r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer33)
		Method: <BOOT-INF.classes.com.xiaolyuh.utils.AESUtil: java.lang.String decrypt(java.lang.String,java.lang.String)>
		SHA-256: b04baccabf5b302d35bbc091874dc7f7cc6b88b1839805287f89cbc0351b3a0f
		Secure: false
	Object:
		Variable: r6
		Type: byte[]
		Statement: r6 = virtualinvoke r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r0)
		Method: <BOOT-INF.classes.com.xiaolyuh.utils.AESUtil: byte[] decrypt(byte[],java.lang.String)>
		SHA-256: f8322945a0396dc6b41e527b01b539f4ff94e159c2dedfc5aeb158e11386b783
		Secure: false
	Object:
		Variable: r2
		Type: javax.crypto.SecretKey
		Statement: r2 = virtualinvoke r17.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <BOOT-INF.classes.com.xiaolyuh.utils.AESUtil: java.lang.String decrypt(java.lang.String,java.lang.String)>
		SHA-256: 1b07ee2518e46d34de244cabb367283fc4b6e5e0b802d0fb6bf284bf8fa5022c
		Secure: false
	Object:
		Variable: varReplacer34
		Type: java.lang.String
		Statement: specialinvoke r24.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r3, varReplacer34)
		Method: <BOOT-INF.classes.com.xiaolyuh.utils.AESUtil: java.lang.String decrypt(java.lang.String,java.lang.String)>
		SHA-256: 84cd689e0e5fcda695a0d5daa8aa1d9a1c1f9aedb7c97536bd8bf224a1a79559
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: r1 = virtualinvoke r11.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <BOOT-INF.classes.com.xiaolyuh.utils.EncodeUtil: java.lang.String md5(java.lang.String)>
		SHA-256: a893d3c067aef753785926c8b7d9bcc6998b11896dc06ea27408d1b7d57a1dba
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: r1 = virtualinvoke r6.<java.security.MessageDigest: byte[] digest()>()
		Method: <BOOT-INF.classes.com.xiaolyuh.utils.EncodeUtil: java.lang.String sha(java.lang.String)>
		SHA-256: 5db1fcd1a7d191d9ef383d1d85b8040d2a772223dff199df1853a816d0e87a42
		Secure: false
	Object:
		Variable: varReplacer14
		Type: java.lang.String
		Statement: specialinvoke r25.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r3, varReplacer14)
		Method: <BOOT-INF.classes.com.xiaolyuh.utils.AESUtil: byte[] encrypt(java.lang.String,java.lang.String)>
		SHA-256: f17702f2907f54b8da34f9d8bbed2cb07e3a1b4da2662bfb4ab633598a6fad31
		Secure: false
	Object:
		Variable: r2
		Type: javax.crypto.SecretKey
		Statement: r2 = virtualinvoke r15.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <BOOT-INF.classes.com.xiaolyuh.utils.AESUtil: byte[] decrypt(byte[],java.lang.String)>
		SHA-256: e91019519f88b5c17e1c6eec93465bd75c394e8dbfc8e8a02adaa849d55e9dad
		Secure: false

Findings in Java Class: BOOT-INF.classes.com.xiaolyuh.utils.EncodeUtil

	 in Method: java.lang.String sha(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #a423f84435ef9ee522ac88f68c8e035a81eba46a12b230a09ffb1bfc7cc1f9f9)
			First parameter (with value "SHA") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2)


	 in Method: java.lang.String md5(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b9173edf31577bb48a525e12c1ea7e05670383fabc64ed2fd99ddf6149e2532e)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10)


Findings in Java Class: BOOT-INF.classes.com.xiaolyuh.utils.AESUtil

	 in Method: byte[] encrypt(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #5612604f0dd3c20407753c64fa85a76cd678b11ab50cb069c69cb6a5652c7c92)
			First parameter (with value "AES") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer18)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r25.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r3, varReplacer14)

		RequiredPredicateError violating CrySL rule for javax.crypto.KeyGenerator
			Second parameter was not properly generated as randomized
			at statement: virtualinvoke r17.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(varReplacer19, r24)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer16, r4)


	 in Method: java.lang.String encryptString(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer22, r4)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #7cbfa5e48cfe12a71456ed9394ebd94ce469fde58dfebb32533e9fff89c5e6c5)
			First parameter (with value "AES") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer26)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r26.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r3, varReplacer24)

		RequiredPredicateError violating CrySL rule for javax.crypto.KeyGenerator
			Second parameter was not properly generated as randomized
			at statement: virtualinvoke r18.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(varReplacer23, r25)


	 in Method: byte[] decrypt(byte[],java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r22.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r3, varReplacer27)

		RequiredPredicateError violating CrySL rule for javax.crypto.KeyGenerator
			Second parameter was not properly generated as randomized
			at statement: virtualinvoke r15.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(varReplacer30, r21)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #bc139faef4fcdee1926a6bfcf2729e72dcd60304ffc39bc1d86469a4daf5afc2)
			First parameter (with value "AES") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer32)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer31, r4)


	 in Method: java.lang.String decrypt(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #b04baccabf5b302d35bbc091874dc7f7cc6b88b1839805287f89cbc0351b3a0f)
			First parameter (with value "AES") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer33)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer36, r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.KeyGenerator
			Second parameter was not properly generated as randomized
			at statement: virtualinvoke r17.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>(varReplacer35, r23)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r24.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r3, varReplacer34)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 37

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 6
	RequiredPredicateError: 12
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.390 s
