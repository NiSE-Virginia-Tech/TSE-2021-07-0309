
Current Proejct: /home/x/CryptoAPIDetect/dataset/MUBench/j360-dubbo-app-all/j360-dubbo-modules/target/j360-dubbo-modules-1.2-SNAPSHOT.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 432.3 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 14 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 14
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.07

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 14
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.14

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 14
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.21

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 14
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.29

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 16
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.31

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.35

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 18
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.39

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 20
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.4

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 21
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.43

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 21
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.48

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.48

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 24
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 25
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.52

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 14 of 25
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.56

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 15 of 25
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.6

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 16 of 25
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.64

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 17 of 25
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.68

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 18 of 25
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.72

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 19 of 25
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.76

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 20 of 25
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.8

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 21 of 25
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.84

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 22 of 25
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.88

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 23 of 25
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.92

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 24 of 25
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.96

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 25 of 26
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.96

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = interfaceinvoke r0.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <me.j360.dubbo.modules.util.security.CryptoUtil: byte[] generateAesKey(int)>
		SHA-256: 6bd6b93c5a233b61c1bf70e6ed619fe4ade0bfb70a3b7beac5498ed272eed21
		Secure: true
	Object:
		Variable: varReplacer1217
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer1217)
		Method: <me.j360.dubbo.modules.util.security.CryptoUtil: byte[] aes(byte[],byte[],byte[],int)>
		SHA-256: 983fe4736c3c8a216554be7508c30cf704a72297c5c53a2d6f9782d8995e56e3
		Secure: false
	Object:
		Variable: r2
		Type: javax.crypto.Cipher
		Statement: r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1216)
		Method: <me.j360.dubbo.modules.util.security.CryptoUtil: byte[] aes(byte[],byte[],int)>
		SHA-256: b1bb1e261ed93966beccfb9d0b34e01d5e48aef5799c06e0b44560bb42826f0d
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r0)
		Method: <me.j360.dubbo.modules.util.security.CryptoUtil: byte[] aes(byte[],byte[],byte[],int)>
		SHA-256: 4ef35848db854cac7e4ca9e1565558fa048b3be41ee0d2a18c66a715af6998a0
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke r2.<javax.crypto.Mac: byte[] doFinal(byte[])>(r0)
		Method: <me.j360.dubbo.modules.util.security.CryptoUtil: byte[] hmacSha1(byte[],byte[])>
		SHA-256: 976826a46139a8b5f59474c0772488b691399c130bd37288400e167582b8500a
		Secure: true
	Object:
		Variable: varReplacer1215
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer1215)
		Method: <me.j360.dubbo.modules.util.security.CryptoUtil: byte[] aes(byte[],byte[],int)>
		SHA-256: e4aedea7a40c8e2903b816a185a623e63d9a2988525992ba2cb0774ac95c1894
		Secure: false
	Object:
		Variable: r0
		Type: javax.crypto.SecretKey
		Statement: r0 = virtualinvoke r4.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <me.j360.dubbo.modules.util.security.CryptoUtil: byte[] generateAesKey(int)>
		SHA-256: 4802fe357a8bfc113b748c70d69cf026fdd624b42b5215e1f5ffbd25605e86c3
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <me.j360.dubbo.modules.util.number.RandomUtil: java.security.SecureRandom secureRandom()>
		SHA-256: 805f08259004dc4acffa68e84d404a49031e2463210afbb98c85a58eb6287659
		Secure: true
	Object:
		Variable: r4
		Type: javax.crypto.KeyGenerator
		Statement: r4 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer1220)
		Method: <me.j360.dubbo.modules.util.security.CryptoUtil: byte[] generateAesKey(int)>
		SHA-256: 8e2f7307941cf5e7ce6ff468db0c6a0a0ff79f74cbc4ecc2451232ff571a9c8e
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r0)
		Method: <me.j360.dubbo.modules.util.security.CryptoUtil: byte[] aes(byte[],byte[],int)>
		SHA-256: bd3e12cd7587f747063e7ec033b97c9ed441ce3a91a40eac5bc1b13d20c1a6b6
		Secure: false
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r7 = virtualinvoke r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r0)
		Method: <me.j360.dubbo.modules.util.security.CryptoUtil: byte[] aes(byte[],byte[],byte[],int)>
		SHA-256: aab2c9085f2bb3482bce1561f7c6d7a44e1b285cd85a4ee6abfee25550ac3f93
		Secure: false
	Object:
		Variable: r0
		Type: javax.crypto.SecretKey
		Statement: r0 = virtualinvoke r4.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <me.j360.dubbo.modules.util.security.CryptoUtil: byte[] generateHmacSha1Key()>
		SHA-256: 374d5634ed90e78f9b44be03755fd70435eda72ecf5f98b13994894a1aa825dd
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer1208)
		Method: <me.j360.dubbo.modules.util.security.CryptoUtil: byte[] hmacSha1(byte[],byte[])>
		SHA-256: 53b2984fc8b804b5be20d3939ce27586bbb32eac32ff20cc1e0d649d3b3661bf
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer1217)
		Method: <me.j360.dubbo.modules.util.security.CryptoUtil: byte[] aes(byte[],byte[],byte[],int)>
		SHA-256: 2f6a6421669db73e2fa5c9812f43162e5a975e7f7d9614f745692270c3e808a0
		Secure: false
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r4 = virtualinvoke r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r0)
		Method: <me.j360.dubbo.modules.util.security.CryptoUtil: byte[] aes(byte[],byte[],int)>
		SHA-256: 14fce5b46e279921ccaab1c642c0c3d7c1081907f93e9d4be6cbd1e78e4ed7fc
		Secure: false
	Object:
		Variable: r2
		Type: javax.crypto.Mac
		Statement: r2 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer1207)
		Method: <me.j360.dubbo.modules.util.security.CryptoUtil: byte[] hmacSha1(byte[],byte[])>
		SHA-256: 4023a88ef55a05f8c9ef97707f201b50ee00f9e80705a665452552a19d9725b8
		Secure: true
	Object:
		Variable: r4
		Type: javax.crypto.KeyGenerator
		Statement: r4 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer1209)
		Method: <me.j360.dubbo.modules.util.security.CryptoUtil: byte[] generateHmacSha1Key()>
		SHA-256: 2688fc3ddb9f5408b3e18f2e0f10132a147a34b2eca7e4851473674580063267
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <me.j360.dubbo.modules.util.text.HashUtil: void <clinit>()>
		SHA-256: 80502925d440b2f321197127332597cb8d5c14b678905a58ebfb8de6edf174ac
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <me.j360.dubbo.modules.util.text.HashUtil$1: java.security.MessageDigest initialValue()>
		SHA-256: 23e3851234f4c329513122f40bda34c4478025972deef54f7ca8e76e0fbe1e01
		Secure: false
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r4 = virtualinvoke r2.<javax.crypto.Mac: byte[] doFinal(byte[])>(r0)
		Method: <me.j360.dubbo.modules.util.security.CryptoUtil: byte[] hmacSha1(byte[],byte[])>
		SHA-256: 80c8bf40637ed7b9d34596caf54ed00339c74ff95db3ab862f3e4b0d23899881
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <me.j360.dubbo.modules.util.misc.IdGenerator: void <clinit>()>
		SHA-256: 7858174ce1e892a4b0b5df0f0865eb6afe4c3da3177e7dd8949aa2db470c6272
		Secure: true
	Object:
		Variable: varReplacer1208
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer1208)
		Method: <me.j360.dubbo.modules.util.security.CryptoUtil: byte[] hmacSha1(byte[],byte[])>
		SHA-256: 236518d74fb662519bfa42e06d0db1622321f0ecfbe4e0dedb0955cd83c1787
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: $r1 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer765)
		Method: <me.j360.dubbo.modules.util.number.RandomUtil: java.security.SecureRandom secureRandom()>
		SHA-256: b44e7a82197e8e6ed77c68e8b78fbe97803035c92c96e3597585f0fc2b9c5e1c
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer1215)
		Method: <me.j360.dubbo.modules.util.security.CryptoUtil: byte[] aes(byte[],byte[],int)>
		SHA-256: 4387513301bcdbcdd8d0f10f5380d28167c0683ce7d3923c658d14be3578eb50
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r2)
		Method: <me.j360.dubbo.modules.util.security.CryptoUtil: byte[] aes(byte[],byte[],byte[],int)>
		SHA-256: 5ec487411b1fa19bdf1a535ce42b28d8a7b7fb348b6b3c5665e3b8e860d20a31
		Secure: false
	Object:
		Variable: r4
		Type: javax.crypto.Cipher
		Statement: r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1218)
		Method: <me.j360.dubbo.modules.util.security.CryptoUtil: byte[] aes(byte[],byte[],byte[],int)>
		SHA-256: dcff69457b972d9f6d81ad74a7b9e6c11f68beadf8d8ff7a37a225c930b5feac
		Secure: false

Findings in Java Class: me.j360.dubbo.modules.util.text.HashUtil$1

	 in Method: java.lang.Object initialValue()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #23e3851234f4c329513122f40bda34c4478025972deef54f7ca8e76e0fbe1e01)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: return $r1


Findings in Java Class: me.j360.dubbo.modules.util.security.CryptoUtil

	 in Method: byte[] hmacSha1(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer1208)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #53b2984fc8b804b5be20d3939ce27586bbb32eac32ff20cc1e0d649d3b3661bf)
			Second parameter (with value "HmacSHA1") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer1208)


	 in Method: byte[] generateHmacSha1Key()
		ConstraintError violating CrySL rule for javax.crypto.KeyGenerator (on Object #2688fc3ddb9f5408b3e18f2e0f10132a147a34b2eca7e4851473674580063267)
			First parameter (with value "HmacSHA1") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: r4 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer1209)


	 in Method: byte[] aes(byte[],byte[],int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer1215)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #b1bb1e261ed93966beccfb9d0b34e01d5e48aef5799c06e0b44560bb42826f0d)
			First parameter (with value "AES") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1216)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(i0, r7)


	 in Method: byte[] aes(byte[],byte[],byte[],int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer1217)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(i0, r10, r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r2)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 26

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 1
	ConstraintError: 3
	RequiredPredicateError: 6
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 31 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 33.43 s
