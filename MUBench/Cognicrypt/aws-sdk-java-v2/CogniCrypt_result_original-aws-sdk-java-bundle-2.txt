
Current Proejct: /home/x/CryptoAPIDetect/dataset/MUBench/aws-sdk-java-v2/bundle/target/original-aws-sdk-java-bundle-2.0.0-preview-11-SNAPSHOT.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 6.394 min 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 68 analysis seeds within 73 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 68
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.01

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 68
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.03

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 68
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.04

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 69
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.06

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 70
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.07

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 70
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.09

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 70
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.1

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 71
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.11

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 73
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.12

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 73
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.14

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 75
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.15

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 77
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.16

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 79
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.16

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 14 of 80
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.18

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 15 of 82
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.18

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 16 of 84
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.19

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 17 of 85
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.2

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 18 of 94
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.19

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 19 of 94
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.2

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 20 of 94
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.21

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 21 of 95
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.22

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 22 of 96
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.23

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 23 of 96
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.24

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 24 of 104
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.23

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 25 of 105
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.24

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 26 of 107
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.24

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 27 of 107
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.25

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 28 of 108
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.26

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 29 of 109
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.27

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 30 of 110
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.27

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 31 of 110
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.28

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 32 of 110
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.29

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 33 of 111
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.3

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 34 of 111
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.31

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 35 of 111
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.32

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 36 of 111
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.32

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 37 of 111
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 38 of 111
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.34

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 39 of 111
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.35

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 40 of 111
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.36

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 41 of 112
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.37

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 42 of 113
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.37

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 43 of 113
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.38

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 44 of 113
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.39

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 45 of 113
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.4

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 46 of 114
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.4

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 47 of 114
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.41

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 48 of 114
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.42

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 49 of 114
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.43

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 50 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.43

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 51 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.44

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 52 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.45

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 53 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.46

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 54 of 116
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.47

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 55 of 117
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.47

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 56 of 118
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.47

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 57 of 118
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.48

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 58 of 118
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.49

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 59 of 121
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.49

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 60 of 121
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.util.Iterator: boolean hasNext()> for class software.amazon.awssdk.thirdparty.io.netty.handler.ssl.JdkSslClientContext
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.util.Iterator: boolean hasNext()> for class software.amazon.awssdk.thirdparty.io.netty.handler.ssl.JdkSslServerContext
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.util.Iterator: boolean hasNext()> for class software.amazon.awssdk.core.internal.http.pipeline.RequestPipelineBuilder$ComposingRequestPipelineStage
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.util.Iterator: boolean hasNext()> for class java.util.AbstractMap$SimpleImmutableEntry
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.util.Iterator: boolean hasNext()> for class software.amazon.awssdk.core.internal.http.pipeline.RequestPipelineBuilder$AsyncRequestPipelineWrapper
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.util.Iterator: boolean hasNext()> for class software.amazon.awssdk.core.internal.http.pipeline.RequestPipelineBuilder$ComposingRequestPipelineStage
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.util.Map$Entry: java.lang.Object getValue()> for class software.amazon.awssdk.core.internal.http.pipeline.RequestPipelineBuilder$ComposingRequestPipelineStage
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.util.Map$Entry: java.lang.Object getKey()> for class software.amazon.awssdk.core.internal.http.pipeline.RequestPipelineBuilder$ComposingRequestPipelineStage
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.util.Map$Entry: java.lang.Object getValue()> for class software.amazon.awssdk.core.internal.http.pipeline.RequestPipelineBuilder$ComposingRequestPipelineStage
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.util.Map$Entry: java.lang.Object getValue()> for class software.amazon.awssdk.core.internal.http.pipeline.RequestPipelineBuilder$AsyncRequestPipelineWrapper
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.util.Map$Entry: java.lang.Object getKey()> for class software.amazon.awssdk.core.internal.http.pipeline.RequestPipelineBuilder$AsyncRequestPipelineWrapper
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.util.Map$Entry: java.lang.Object getValue()> for class software.amazon.awssdk.core.internal.http.pipeline.RequestPipelineBuilder$AsyncRequestPipelineWrapper
Alive 27278  5000
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 61 of 123
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 62 of 123
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 63 of 123
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.51

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 64 of 123
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.52

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 65 of 124
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.52

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 66 of 145
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.46

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 67 of 160
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.42

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 68 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.42

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 69 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.43

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 70 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.43

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 71 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.44

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 72 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.45

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 73 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.45

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 74 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.46

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 75 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.47

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 76 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.47

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 77 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.48

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 78 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.48

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 79 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.49

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 80 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 81 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 82 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.51

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 83 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.52

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 84 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.52

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 85 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.53

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 86 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.53

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 87 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.54

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 88 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.55

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 89 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.55

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 90 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.56

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 91 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.57

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 92 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.57

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 93 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.58

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 94 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.58

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 95 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.59

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 96 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.6

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 97 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.6

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 98 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.61

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 99 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.61

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 100 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.62

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 101 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.63

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 102 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.63

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 103 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.64

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 104 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.65

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 105 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.65

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 106 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.66

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 107 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.66

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 108 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 109 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.68

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 110 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.68

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 111 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.69

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 112 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.7

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 113 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.7

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 114 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.71

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 115 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.71

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 116 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.72

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 117 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.73

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 118 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.73

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 119 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.74

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 120 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.75

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 121 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.75

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 122 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.76

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 123 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.76

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 124 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.77

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 125 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.78

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 126 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.78

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 127 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.79

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 128 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.8

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 129 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.8

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 130 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.81

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 131 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.81

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 132 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.82

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 133 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.83

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 134 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.83

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 135 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.84

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 136 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.84

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 137 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.85

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 138 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.86

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 139 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.86

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 140 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.87

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 141 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.88

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 142 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.88

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 143 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.89

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 144 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.89

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 145 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.9

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 146 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.91

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 147 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.91

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 148 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.92

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 149 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.93

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 150 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.93

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 151 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.94

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 152 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.94

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 153 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.95

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 154 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.96

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 155 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.96

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 156 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.97

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 157 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.98

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 158 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.98

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 159 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.99

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 160 of 161
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.99

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: $r18
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r18 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r17)
		Method: <software.amazon.awssdk.thirdparty.io.netty.handler.ssl.ReferenceCountedOpenSslClientContext: software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslSessionContext newSessionContext(software.amazon.awssdk.thirdparty.io.netty.handler.ssl.ReferenceCountedOpenSslContext,long,software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslEngineMap,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory)>
		SHA-256: e18c7b130c68f3e352f434020544f5fb2dccfe56485ea3f5fde9287f584df6b1
		Secure: false
	Object:
		Variable: r4
		Type: javax.net.ssl.KeyManagerFactory
		Statement: r4 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r7)
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.conn.ssl.SSLContextBuilder: software.amazon.awssdk.thirdparty.org.apache.http.conn.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[],software.amazon.awssdk.thirdparty.org.apache.http.conn.ssl.PrivateKeyStrategy)>
		SHA-256: e583fd691e38f136ba11f1fe50c9350acdc0da5a7df79230440be603a5329624
		Secure: false
	Object:
		Variable: r6
		Type: byte[]
		Statement: r6 = virtualinvoke r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r1)
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.NTLMEngineImpl: byte[] lmResponse(byte[],byte[])>
		SHA-256: 709642c2bbfffb4afd1c653cc908f558e5999ff98cf098e83601388c64d2d3de
		Secure: false
	Object:
		Variable: r5
		Type: java.security.KeyPair
		Statement: r5 = virtualinvoke r44.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <software.amazon.awssdk.thirdparty.io.netty.handler.ssl.util.SelfSignedCertificate: void <init>(java.lang.String,java.security.SecureRandom,int,java.util.Date,java.util.Date)>
		SHA-256: b6f37160c87a261189faa9bfb2d3802a55dc79494add8157cf50fd2d72e2c2f8
		Secure: false
	Object:
		Variable: r4
		Type: byte[]
		Statement: r6 = virtualinvoke r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r4)
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.NTLMEngineImpl: byte[] lmHash(java.lang.String)>
		SHA-256: 783bef0e378e78e183fe641c8af51ce20770cb0e3148505b1bf67f3e0df957d6
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>(r1)
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.NTLMEngineImpl$HMACMD5: byte[] getOutput()>
		SHA-256: 42e4e815460f87460b7298ed2cdec1f4eebbc08bbcb97d21ac11df00c0389ca7
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <software.amazon.awssdk.thirdparty.org.apache.commons.codec.digest.DigestUtils: byte[] md5(byte[])>
		SHA-256: 4a4dd18e6187b325d9cb47c1cd7cc8489f28760532723e1ba285d1f23b4d1c9d
		Secure: false
	Object:
		Variable: r3
		Type: javax.net.ssl.KeyManagerFactory
		Statement: r3 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(r1)
		Method: <software.amazon.awssdk.thirdparty.io.netty.handler.ssl.SslContext: javax.net.ssl.KeyManagerFactory buildKeyManagerFactory(java.security.KeyStore,java.lang.String,char[],javax.net.ssl.KeyManagerFactory)>
		SHA-256: 3d8aff3e7acf76ebaeb09ad12a6d200fe988645367dd3075d157a46e9372ceeb
		Secure: true
	Object:
		Variable: r6
		Type: javax.net.ssl.SSLContext
		Statement: r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer16204)
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.conn.ssl.SSLContexts: javax.net.ssl.SSLContext createDefault()>
		SHA-256: 9d0938927cece43c7bca41224a7bbce3d994da9c37edd9812aa5067db2e2473a
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: virtualinvoke r0.<java.security.SecureRandom: void nextBytes(byte[])>(r1)
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.DigestScheme: java.lang.String createCnonce()>
		SHA-256: 156cbf551d6e1beb81241eb72d74c33b8c0683b6a4ddbbd561927c6397757da7
		Secure: true
	Object:
		Variable: r4
		Type: byte[]
		Statement: r4 = virtualinvoke r17.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r3)
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: 51ebfe205ce0e9b1d6d5f4b5331c1e59573af5415f24889a693b2d75522d9e54
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>(r1)
		Method: <software.amazon.awssdk.thirdparty.org.apache.commons.codec.digest.HmacUtils: byte[] hmacSha384(byte[],byte[])>
		SHA-256: 21c17370bbced8abcb755b55e1d0dd891d91e2dd97313e878a00ac848586fdc6
		Secure: true
	Object:
		Variable: r0
		Type: javax.net.ssl.SSLContext
		Statement: r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer29513)
		Method: <software.amazon.awssdk.thirdparty.io.netty.handler.ssl.JdkSslContext: void <clinit>()>
		SHA-256: d0f9b15b7bcc31fe271f00cfc0a520575aad8b6a0066eb93602574cdb8adf3da
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: r6 = virtualinvoke r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r1)
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.NTLMEngineImpl: byte[] lmResponse(byte[],byte[])>
		SHA-256: b26464e44971761bc16eb31b9c4fee8a67678d7feaceaebd6155060791d8c73c
		Secure: false
	Object:
		Variable: $r5
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, $r5)
		Method: <software.amazon.awssdk.auth.signer.internal.AbstractAwsSigner: byte[] sign(byte[],byte[],software.amazon.awssdk.auth.signer.internal.SigningAlgorithm)>
		SHA-256: e6c10276ecb1746927242d4e7cd515f49882d34b7ae36fa3e5460f6030ac58b
		Secure: false
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <software.amazon.awssdk.thirdparty.org.apache.commons.codec.digest.DigestUtils: byte[] sha384(byte[])>
		SHA-256: 555b15450d9b9f67d610fe51c522ea556aaee17c2739338b62ea6b59a4271f76
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer15284)
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.NTLMEngineImpl: java.security.Key createDESKey(byte[],int)>
		SHA-256: a51d3af2af7424a4809e9dda73aa53c09175a85609959ca5a7f64d4f06f251d8
		Secure: false
	Object:
		Variable: varReplacer17909
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer17909)
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.NTLMEngineImpl$Handle: javax.crypto.Cipher initCipher()>
		SHA-256: 89c7a09d310464808b5403972ac2ba599429e565d06832a2e5ed3596eeb4b774
		Secure: false
	Object:
		Variable: r3
		Type: byte[]
		Statement: r5 = virtualinvoke r18.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r3)
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: b1c498446616f1f794ef5ed673822b48811747780f76dc24e78a311e8456d69a
		Secure: false
	Object:
		Variable: r7
		Type: javax.crypto.Cipher
		Statement: r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer15231)
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.NTLMEngineImpl: byte[] RC4(byte[],byte[])>
		SHA-256: 131206de52a574d6735d17b80f8c98a8ecf344fce76ae4958ffbe2975091acc9
		Secure: false
	Object:
		Variable: $r12
		Type: javax.net.ssl.SSLContext
		Statement: $r12 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer28789, r0)
		Method: <software.amazon.awssdk.thirdparty.io.netty.handler.ssl.JdkSslClientContext: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long)>
		SHA-256: f3309118fa377378664a99912900fcce104955aa087d269a022e92a79d1556b5
		Secure: false
	Object:
		Variable: r5
		Type: javax.crypto.SecretKey
		Statement: r5 = virtualinvoke r3.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r4)
		Method: <software.amazon.awssdk.thirdparty.io.netty.handler.ssl.SslContext: java.security.spec.PKCS8EncodedKeySpec generateKeySpec(char[],byte[])>
		SHA-256: e0cef9eca484cf273c5e243ed2f847a8d3255200120945c83142071df9855c58
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.KeyManager[]
		Statement: $r3 = virtualinvoke r0.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <software.amazon.awssdk.thirdparty.io.netty.handler.ssl.ReferenceCountedOpenSslContext: software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslKeyMaterialProvider providerFor(javax.net.ssl.KeyManagerFactory,java.lang.String)>
		SHA-256: e9e8f0042db309f4ea55f030ca9ea26d2644e01777c02db00c83db9521761e7c
		Secure: true
	Object:
		Variable: r27
		Type: byte[]
		Statement: r27 = virtualinvoke r26.<java.security.MessageDigest: byte[] digest()>()
		Method: <software.amazon.awssdk.thirdparty.org.apache.commons.codec.digest.Sha2Crypt: java.lang.String sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)>
		SHA-256: 5fb42a87fe423bb69f0ebf7816322b0439faff1c3dfaaf5b78d8370148b37d3e
		Secure: false
	Object:
		Variable: r0
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, r0)
		Method: <software.amazon.awssdk.thirdparty.org.apache.commons.codec.digest.HmacUtils: javax.crypto.Mac getInitializedMac(java.lang.String,byte[])>
		SHA-256: 673f432608ebebbfde686808e1976348928f13d4604f0040fce1eb16dc2523d2
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.NTLMEngineImpl$HMACMD5: byte[] getOutput()>
		SHA-256: 22505513c95e6063eefdf0c997b443cb4e4a5031da10189b8a77ecfa90349a0a
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.DigestScheme: java.lang.String createCnonce()>
		SHA-256: 3ab96751e89c150e150dd9be52b85fae8d30261ca023ff283d340abfdbc1669
		Secure: true
	Object:
		Variable: r1
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>(r1)
		Method: <software.amazon.awssdk.thirdparty.org.apache.commons.codec.digest.HmacUtils: byte[] hmacSha512(byte[],byte[])>
		SHA-256: 7d736474531fe90f5cee75172bfead9377e70e78bfa250c3d93d7a3649833266
		Secure: true
	Object:
		Variable: $r28
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r28 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r27)
		Method: <software.amazon.awssdk.thirdparty.io.netty.handler.ssl.ReferenceCountedOpenSslServerContext: software.amazon.awssdk.thirdparty.io.netty.handler.ssl.ReferenceCountedOpenSslServerContext$ServerContext newSessionContext(software.amazon.awssdk.thirdparty.io.netty.handler.ssl.ReferenceCountedOpenSslContext,long,software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslEngineMap,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory)>
		SHA-256: e7010f4fac0d248dc193b1aba5ac1877f751f61126a39d52910254207ad611ef
		Secure: false
	Object:
		Variable: r3
		Type: byte[]
		Statement: r3 = virtualinvoke r10.<java.security.MessageDigest: byte[] digest()>()
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.NTLMEngineImpl: byte[] ntlm2SessionResponse(byte[],byte[],byte[])>
		SHA-256: c0f3e7e8a8c5d70f41fedded307610fbc6d232e6a1cd13018dddc296bf160e11
		Secure: false
	Object:
		Variable: r12
		Type: javax.net.ssl.SSLContext
		Statement: r12 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer14870)
		Method: <software.amazon.awssdk.http.apache.ApacheHttpClient$ApacheConnectionManagerFactory: javax.net.ssl.SSLContext getSslContext(software.amazon.awssdk.utils.AttributeMap)>
		SHA-256: c7f77926e19c4cf2a0819c3b5f853c6127ca33235c012da15d9367bdcd13eeb2
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.Mac
		Statement: $r9 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(r20)
		Method: <software.amazon.awssdk.auth.signer.internal.AwsChunkedEncodingInputStream: void <init>(java.io.InputStream,int,byte[],java.lang.String,java.lang.String,java.lang.String,software.amazon.awssdk.auth.signer.AwsS3V4Signer)>
		SHA-256: 9ee1a9189b144fc5b5f0b2f5cee277e6ef42608bbc7a44b66e70d5910047064e
		Secure: false
	Object:
		Variable: r23
		Type: javax.net.ssl.SSLContext
		Statement: r23 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer29432)
		Method: <software.amazon.awssdk.thirdparty.io.netty.handler.ssl.Java9SslUtils: void <clinit>()>
		SHA-256: 6807d382eb24ec9afa4c772150e1fed322fe75d92d29752f286c09bb32349c09
		Secure: false
	Object:
		Variable: r0
		Type: software.amazon.awssdk.thirdparty.io.netty.handler.ssl.JdkSslEngine
		Statement: specialinvoke r0.<javax.net.ssl.SSLEngine: void <init>()>()
		Method: <software.amazon.awssdk.thirdparty.io.netty.handler.ssl.JdkSslEngine: void <init>(javax.net.ssl.SSLEngine)>
		SHA-256: 3ef976940fde996d8da07e66af3563c3ad52e8b3e2d0eb1abf08c8dbc6ab2dc5
		Secure: false
	Object:
		Variable: varReplacer15284
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer15284)
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.NTLMEngineImpl: java.security.Key createDESKey(byte[],int)>
		SHA-256: df7305b26248a21c6bd04f07e5272af7355a6dde7bd9f7d7921742f39290368a
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r2)
		Method: <software.amazon.awssdk.auth.signer.internal.SigningAlgorithm$MacThreadLocal: javax.crypto.Mac initialValue()>
		SHA-256: daa1bddfd90f731fd623805945cff112d84e8d46c097d3b511fce927dea9cc94
		Secure: false
	Object:
		Variable: r4
		Type: java.lang.Object[]
		Statement: r4 = virtualinvoke r3.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.ssl.SSLContextBuilder: software.amazon.awssdk.thirdparty.org.apache.http.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore,software.amazon.awssdk.thirdparty.org.apache.http.ssl.TrustStrategy)>
		SHA-256: 958cd47db3f267cb4a37c5d640c89a98379a425baeaf193a6b47be852863fe2
		Secure: true
	Object:
		Variable: r2
		Type: javax.crypto.Mac
		Statement: r2 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(r0)
		Method: <software.amazon.awssdk.thirdparty.org.apache.commons.codec.digest.HmacUtils: javax.crypto.Mac getInitializedMac(java.lang.String,byte[])>
		SHA-256: 121a39d0408e38af7cd24010b0a2fab8d7f314e62b238e0df4a62a414507db2a
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer17909)
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.NTLMEngineImpl$Handle: javax.crypto.Cipher initCipher()>
		SHA-256: ff612937ce630bcb390c698c8e92275e9d7861e1c36807199f2957b2aac31492
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.NTLMEngineImpl$Handle: void advanceMessageSequence()>
		SHA-256: b4114d6952b8200fb672057ec3fd497aa1772392a87f8062974400f9874147c9
		Secure: false
	Object:
		Variable: r9
		Type: javax.net.ssl.SSLContext
		Statement: r9 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(r1)
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.ssl.SSLContextBuilder: javax.net.ssl.SSLContext build()>
		SHA-256: 17297cadaf15cdc3f26bbd5bf8ebab087678c4d3aba0139ec991d49b0723822f
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer28840)
		Method: <software.amazon.awssdk.thirdparty.io.netty.handler.ssl.util.FingerprintTrustManagerFactory$1: java.security.MessageDigest initialValue()>
		SHA-256: 14b706efffdce5a9d75b31b01fd86a45a01cf73ddd847db7384fbab9de2f6bfb
		Secure: false
	Object:
		Variable: r5
		Type: java.lang.Object[]
		Statement: r5 = virtualinvoke r4.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.conn.ssl.SSLContextBuilder: software.amazon.awssdk.thirdparty.org.apache.http.conn.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[],software.amazon.awssdk.thirdparty.org.apache.http.conn.ssl.PrivateKeyStrategy)>
		SHA-256: f2d1963fc56e84fa18233366c4954d4fe9ee70a1b96261469237a512dbb35b80
		Secure: false
	Object:
		Variable: r6
		Type: byte[]
		Statement: r6 = virtualinvoke r5.<java.security.MessageDigest: byte[] digest(byte[])>(r19)
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.NTLMEngineImpl$Type3Message: byte[] addGssMicAvsToTargetInfo(byte[],java.security.cert.Certificate)>
		SHA-256: 745328da6ad161cb0f54bd6a808f447fd1afb9bbfd937cb471f4f0e00666bc8
		Secure: true
	Object:
		Variable: r6
		Type: javax.net.ssl.SSLContext
		Statement: r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer19343)
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.ssl.SSLContexts: javax.net.ssl.SSLContext createDefault()>
		SHA-256: 33446ae382febd3bd2a4f0ed685e54e0b2d0847f7535c6ec1c2d2f909ffc4908
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>(r1)
		Method: <software.amazon.awssdk.thirdparty.org.apache.commons.codec.digest.HmacUtils: byte[] hmacSha512(byte[],byte[])>
		SHA-256: 90c76d8344e83c4ca04b2f510e850b65a054a2dd82d219f6408194e046443202
		Secure: true
	Object:
		Variable: $r12
		Type: javax.net.ssl.SSLContext
		Statement: $r12 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer28786)
		Method: <software.amazon.awssdk.thirdparty.io.netty.handler.ssl.JdkSslClientContext: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long)>
		SHA-256: b858f9c89a038b18280b09a329777d41077a6ecf72992aff8821c01fe5a3db25
		Secure: false
	Object:
		Variable: r0
		Type: javax.net.ssl.SSLEngine
		Statement: r0 = virtualinvoke r23.<javax.net.ssl.SSLContext: javax.net.ssl.SSLEngine createSSLEngine()>()
		Method: <software.amazon.awssdk.thirdparty.io.netty.handler.ssl.Java9SslUtils: void <clinit>()>
		SHA-256: 9090fbc19abf03c50512680f012acf6277ca242d4a6b012fbc9981527a07a5dd
		Secure: false
	Object:
		Variable: r5
		Type: java.security.KeyStore
		Statement: r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r9)
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.ssl.SSLContextBuilder: software.amazon.awssdk.thirdparty.org.apache.http.ssl.SSLContextBuilder loadKeyMaterial(java.net.URL,char[],char[],software.amazon.awssdk.thirdparty.org.apache.http.ssl.PrivateKeyStrategy)>
		SHA-256: 513ef26476cf54f06d8fd0c0bf6830fe9958034d3d24bd143d2cff5a8db93c51
		Secure: true
	Object:
		Variable: r1
		Type: byte[]
		Statement: $r6 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>(r1)
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.NTLMEngineImpl$HMACMD5: byte[] getOutput()>
		SHA-256: bc8aef628fba0720e0f9048c0b8d277cbd4b156ad83f38497d37a2147e7a01d2
		Secure: false
	Object:
		Variable: r9
		Type: javax.net.ssl.SSLContext
		Statement: r9 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(r1, $r7)
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.ssl.SSLContextBuilder: javax.net.ssl.SSLContext build()>
		SHA-256: ad6d944b2b1ea4e227efe778c3dc3d27acf160d6725a8f24cb12b791425ecd74
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal()>()
		Method: <software.amazon.awssdk.thirdparty.org.apache.commons.codec.digest.HmacUtils: byte[] hmacSha512(byte[],java.io.InputStream)>
		SHA-256: 7348a7a1ac549775fe686c773b53a362902032ed8ee0e1ecee5d3cfe13d3b7ed
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String,java.security.Provider)>(r2, r0)
		Method: <software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslX509KeyManagerFactory: software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi newOpenSslKeyManagerFactorySpi(java.lang.String,java.security.Provider)>
		SHA-256: a14a09cf41f3b877beab0cc043bd4912c80380c362bdf59041da9af6cf6fb23e
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <software.amazon.awssdk.thirdparty.org.apache.commons.codec.digest.DigestUtils: byte[] md2(byte[])>
		SHA-256: f2a8d60e4721bd2ba7a581814edc7b0074c941b7bb2512272883a92071e85225
		Secure: false
	Object:
		Variable: $r110
		Type: byte[]
		Statement: $r111 = virtualinvoke r10.<java.security.MessageDigest: byte[] digest(byte[])>($r110)
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.DigestScheme: software.amazon.awssdk.thirdparty.org.apache.http.Header createDigestHeader(software.amazon.awssdk.thirdparty.org.apache.http.auth.Credentials,software.amazon.awssdk.thirdparty.org.apache.http.HttpRequest)>
		SHA-256: c935514416b40b81a8c0a9fae4b17978168e98c6b1ef21c9844d3b3104353ce9
		Secure: false
	Object:
		Variable: r5
		Type: java.security.KeyStore
		Statement: r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r9)
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.ssl.SSLContextBuilder: software.amazon.awssdk.thirdparty.org.apache.http.ssl.SSLContextBuilder loadKeyMaterial(java.io.File,char[],char[],software.amazon.awssdk.thirdparty.org.apache.http.ssl.PrivateKeyStrategy)>
		SHA-256: 513ef26476cf54f06d8fd0c0bf6830fe9958034d3d24bd143d2cff5a8db93c51
		Secure: true
	Object:
		Variable: r3
		Type: java.security.KeyStore
		Statement: r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r4)
		Method: <software.amazon.awssdk.thirdparty.io.netty.handler.ssl.SslContext: java.security.KeyStore buildKeyStore(java.security.cert.X509Certificate[],java.security.PrivateKey,char[])>
		SHA-256: 5eff9e6bcfbb56b85d6633546501894853ddc516a84881540d79b6973104559c
		Secure: true
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <software.amazon.awssdk.services.sqs.MessageMD5ChecksumInterceptor: java.lang.String calculateMessageAttributesMd5(java.util.Map)>
		SHA-256: 6610f27e98de4668166cf9b8b6cd35a8eb85b6b77c1962fe5b7c403965ff444d
		Secure: false
	Object:
		Variable: r14
		Type: java.security.SecureRandom
		Statement: r14 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer15298)
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.NTLMEngineImpl: void <clinit>()>
		SHA-256: 3a2a0459fe25f912ee6d3d65f60b0d55dbb22de918eaed2be9bb52eb03f1d75c
		Secure: true
	Object:
		Variable: r2
		Type: java.security.MessageDigest
		Statement: r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer59526)
		Method: <software.amazon.awssdk.services.sqs.MessageMD5ChecksumInterceptor: java.lang.String calculateMessageAttributesMd5(java.util.Map)>
		SHA-256: be76fa74a3691d76d390819813a4a4e24fb86a8b982486830fb847dc006f9a2e
		Secure: false
	Object:
		Variable: $r15
		Type: javax.net.ssl.KeyManager[]
		Statement: $r15 = virtualinvoke r11.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <software.amazon.awssdk.thirdparty.io.netty.handler.ssl.JdkSslClientContext: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long)>
		SHA-256: 179504ccb8478e801f7c38e8aaaafe7b20a0750415026db3da7fabe1d900e70
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <software.amazon.awssdk.thirdparty.org.apache.commons.codec.digest.DigestUtils: byte[] sha1(byte[])>
		SHA-256: 83395eaa9342ece4b24da66768537fe97d75438d6493ad67319a3999d1d4058e
		Secure: false
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <software.amazon.awssdk.thirdparty.org.apache.commons.codec.digest.DigestUtils: byte[] md2(byte[])>
		SHA-256: e2e03ceec4484eab16cfd224ed100d41ce0c24ed3b496bf77a6483a221e878c3
		Secure: false
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <software.amazon.awssdk.thirdparty.org.apache.commons.codec.digest.DigestUtils: byte[] sha1(byte[])>
		SHA-256: 92d0c06680bcfabefd3968d3ed6d4813b895a475fa281863c8d26fbf3945ebe6
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer15291)
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.NTLMEngineImpl: java.security.MessageDigest getMD5()>
		SHA-256: d47b751e4a03a685f35e4b54f3d3bf6fefec777e980986ab1c6e10edec612026
		Secure: false
	Object:
		Variable: r20
		Type: java.lang.String
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, r20)
		Method: <software.amazon.awssdk.auth.signer.internal.AwsChunkedEncodingInputStream: void <init>(java.io.InputStream,int,byte[],java.lang.String,java.lang.String,java.lang.String,software.amazon.awssdk.auth.signer.AwsS3V4Signer)>
		SHA-256: 7e1327eb8bcd58915727f652c3b6a0b7528088b8d0e43c0b10e7e6590d5885e4
		Secure: false
	Object:
		Variable: r17
		Type: javax.crypto.Cipher
		Statement: r17 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer15152)
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: e6a14d57183c14b028f7936a3e5fa12ec223faf641823517a8efe4850c61904e
		Secure: false
	Object:
		Variable: r5
		Type: java.lang.Object[]
		Statement: r5 = virtualinvoke r4.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.ssl.SSLContextBuilder: software.amazon.awssdk.thirdparty.org.apache.http.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[],software.amazon.awssdk.thirdparty.org.apache.http.ssl.PrivateKeyStrategy)>
		SHA-256: 1ea876b37c6abd161a04a567c7b9ddb00b7d622ff55d3e071ea3a5e796fe943e
		Secure: true
	Object:
		Variable: r14
		Type: byte[]
		Statement: r14 = virtualinvoke $r13.<java.security.MessageDigest: byte[] digest()>()
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.NTLMEngineImpl$HMACMD5: void <init>(byte[])>
		SHA-256: e6ce6ac68411b57059e1bbb6af2baaf55aaffce358f53237b972fc6fe5d99b85
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke r15.<java.security.MessageDigest: byte[] digest()>()
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.NTLMEngineImpl$Handle: void <init>(byte[],software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.NTLMEngineImpl$Mode,boolean)>
		SHA-256: d51d9e50d339c641b61d4ba3fa80118bbe638375baf4d2fbc85e39c18550a5b2
		Secure: false
	Object:
		Variable: r33
		Type: byte[]
		Statement: r33 = virtualinvoke r32.<java.security.MessageDigest: byte[] digest()>()
		Method: <software.amazon.awssdk.thirdparty.org.apache.commons.codec.digest.Md5Crypt: java.lang.String md5Crypt(byte[],java.lang.String,java.lang.String)>
		SHA-256: 6f2f24959121bd7da6c4ff2497b1fcc5b652b469c3a5264ea5fdc076954e6970
		Secure: false
	Object:
		Variable: r1
		Type: java.security.KeyStore
		Statement: r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)
		Method: <software.amazon.awssdk.thirdparty.io.netty.handler.ssl.SslContext: javax.net.ssl.TrustManagerFactory buildTrustManagerFactory(java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory)>
		SHA-256: b73089716caed89b5f66b7fc06daa547873403740daa5b8624771b39c7ee7353
		Secure: true
	Object:
		Variable: r4
		Type: java.security.KeyStore
		Statement: r4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r8)
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.ssl.SSLContextBuilder: software.amazon.awssdk.thirdparty.org.apache.http.ssl.SSLContextBuilder loadTrustMaterial(java.io.File,char[],software.amazon.awssdk.thirdparty.org.apache.http.ssl.TrustStrategy)>
		SHA-256: 2ae9e45495be98490a8cf7e986c1da4f46ec3d08c04f0de79430b0d6741fcb4e
		Secure: true
	Object:
		Variable: $r155
		Type: byte[]
		Statement: $r156 = virtualinvoke r10.<java.security.MessageDigest: byte[] digest(byte[])>($r155)
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.DigestScheme: software.amazon.awssdk.thirdparty.org.apache.http.Header createDigestHeader(software.amazon.awssdk.thirdparty.org.apache.http.auth.Credentials,software.amazon.awssdk.thirdparty.org.apache.http.HttpRequest)>
		SHA-256: eb59109de525c31de5f9e12daca408474529400d2509035a6392e14ade1d4f13
		Secure: false
	Object:
		Variable: $r46
		Type: javax.net.ssl.TrustManager[]
		Statement: $r46 = virtualinvoke r39.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <software.amazon.awssdk.thirdparty.io.netty.handler.ssl.ReferenceCountedOpenSslServerContext: software.amazon.awssdk.thirdparty.io.netty.handler.ssl.ReferenceCountedOpenSslServerContext$ServerContext newSessionContext(software.amazon.awssdk.thirdparty.io.netty.handler.ssl.ReferenceCountedOpenSslContext,long,software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslEngineMap,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory)>
		SHA-256: a34a86c17a6de9964e8f36b77ceccb6762b6f5db7b9dce64de507c76d504b5a8
		Secure: true
	Object:
		Variable: r4
		Type: javax.net.ssl.KeyManagerFactory
		Statement: r4 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r11)
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.ssl.SSLContextBuilder: software.amazon.awssdk.thirdparty.org.apache.http.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[],software.amazon.awssdk.thirdparty.org.apache.http.ssl.PrivateKeyStrategy)>
		SHA-256: f887b9eb5b0bea7bd8e7f2619f2a30b8b2e6358a49e2c68428106c3a0da112ae
		Secure: true
	Object:
		Variable: r3
		Type: byte[]
		Statement: r4 = virtualinvoke r17.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r3)
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: 8c544e0b8e17ee6a08f95b7d3ed00979b0c1372b28e64454f8771ef2823623f8
		Secure: false
	Object:
		Variable: r0
		Type: software.amazon.awssdk.thirdparty.io.netty.handler.ssl.util.ThreadLocalInsecureRandom
		Statement: specialinvoke r0.<java.security.SecureRandom: void <init>()>()
		Method: <software.amazon.awssdk.thirdparty.io.netty.handler.ssl.util.ThreadLocalInsecureRandom: void <init>()>
		SHA-256: 46a0bd64f535b57484537e537f98f9e41f2f93ed1ca917868b32c341773fdb95
		Secure: true
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r1 = virtualinvoke r4.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <software.amazon.awssdk.utils.Md5Utils: byte[] computeMD5Hash(byte[])>
		SHA-256: 9c0f83367340309257a4739cceb2b169666255825a980bc07b1910da2d2425d0
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>(r1)
		Method: <software.amazon.awssdk.thirdparty.org.apache.commons.codec.digest.HmacUtils: byte[] hmacMd5(byte[],byte[])>
		SHA-256: d8daa1374f9a4a20fb54eadfddcc36a2ca0d02f12e3dab6300ca12f883d96c75
		Secure: true
	Object:
		Variable: r5
		Type: java.security.MessageDigest
		Statement: r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer17894)
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.NTLMEngineImpl$Type3Message: byte[] addGssMicAvsToTargetInfo(byte[],java.security.cert.Certificate)>
		SHA-256: 4968edf67f76a4b926f416c28b190cb4001d5b2d2aa229dc3c5735ed293334fb
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal()>()
		Method: <software.amazon.awssdk.thirdparty.org.apache.commons.codec.digest.HmacUtils: byte[] hmacSha384(byte[],java.io.InputStream)>
		SHA-256: 55a2ae20604a653cdaa0073856c9b5b8ee5cf0cfbf413e39efb88e1ba1ea56c3
		Secure: true
	Object:
		Variable: r5
		Type: javax.crypto.Cipher
		Statement: r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer15245)
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.NTLMEngineImpl: byte[] lmHash(java.lang.String)>
		SHA-256: 1b55fa58fddf8c7a8f663c0d62e2b86a48a20f208f3ea1257261d65182e049c7
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal()>()
		Method: <software.amazon.awssdk.thirdparty.org.apache.commons.codec.digest.HmacUtils: byte[] hmacSha256(byte[],java.io.InputStream)>
		SHA-256: 53e79c31cee5a667e65b708db095755e4030751890234b9b5ab15ebaadda0f02
		Secure: true
	Object:
		Variable: r1
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>(r1)
		Method: <software.amazon.awssdk.thirdparty.org.apache.commons.codec.digest.HmacUtils: byte[] hmacMd5(byte[],byte[])>
		SHA-256: 7e8cadffdf04dead760972935b0e5ffc7e13126e3d1239b198bbdf104a1cf910
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <software.amazon.awssdk.thirdparty.org.apache.commons.codec.digest.DigestUtils: byte[] sha384(byte[])>
		SHA-256: e74450188f985523d9855f9d90cbc6d2b99a9d05a356a38652cd742d9b74088c
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer17910)
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.NTLMEngineImpl$Handle: javax.crypto.Cipher initCipher()>
		SHA-256: e7fa2ab561161bc84c310d95ea35407b60c548bc15c652739fe818119367ae58
		Secure: false
	Object:
		Variable: r19
		Type: byte[]
		Statement: r6 = virtualinvoke r5.<java.security.MessageDigest: byte[] digest(byte[])>(r19)
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.NTLMEngineImpl$Type3Message: byte[] addGssMicAvsToTargetInfo(byte[],java.security.cert.Certificate)>
		SHA-256: e8a1fa835b62da682d8b494d73b2a635e2a74b070251470a417a2d08c8e91d78
		Secure: true
	Object:
		Variable: r18
		Type: javax.crypto.Cipher
		Statement: r18 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer15166)
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: 76f914116816b851853521dd016f01eec8002c96efabdd35edabe1865cd27b48
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer21053)
		Method: <software.amazon.awssdk.thirdparty.io.netty.handler.codec.http.websocketx.WebSocketUtil$2: java.security.MessageDigest initialValue()>
		SHA-256: b23cc326d624c4aacf931b5e1ac7074d159f5d57aeb94aac97c8ace064ba38e9
		Secure: false
	Object:
		Variable: r7
		Type: javax.net.ssl.TrustManagerFactory
		Statement: r7 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r6)
		Method: <software.amazon.awssdk.thirdparty.io.netty.handler.ssl.SslContext: javax.net.ssl.TrustManagerFactory buildTrustManagerFactory(java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory)>
		SHA-256: 552b6faca77bbf5be866d5b6db8a8b983cd9b2c47adf83abddcbd554adb6a1f7
		Secure: true
	Object:
		Variable: $r156
		Type: byte[]
		Statement: $r156 = virtualinvoke r10.<java.security.MessageDigest: byte[] digest(byte[])>($r155)
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.DigestScheme: software.amazon.awssdk.thirdparty.org.apache.http.Header createDigestHeader(software.amazon.awssdk.thirdparty.org.apache.http.auth.Credentials,software.amazon.awssdk.thirdparty.org.apache.http.HttpRequest)>
		SHA-256: 16adf8de92bf8819a09dda245c7a6d2700f29945715db3ffb9d42d6662b23e0f
		Secure: false
	Object:
		Variable: $r37
		Type: byte[]
		Statement: $r37 = virtualinvoke r10.<java.security.MessageDigest: byte[] digest(byte[])>($r36)
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.DigestScheme: software.amazon.awssdk.thirdparty.org.apache.http.Header createDigestHeader(software.amazon.awssdk.thirdparty.org.apache.http.auth.Credentials,software.amazon.awssdk.thirdparty.org.apache.http.HttpRequest)>
		SHA-256: e648f888c75704bb2e8cef41b8056e31250a21b3539d5ea548b2cf8e03107076
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <software.amazon.awssdk.thirdparty.org.apache.commons.codec.digest.DigestUtils: byte[] digest(java.security.MessageDigest,java.io.InputStream)>
		SHA-256: 6a74c7a23efe31554dd0f6d4a4f9c4af9b76b2cc2cf92458311947525aea785e
		Secure: false
	Object:
		Variable: r5
		Type: byte[]
		Statement: r5 = virtualinvoke r18.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r3)
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: 298ecbdc05de07fa8243b96b7b8953513eb255dde72086b7d68b11bc72f40bfa
		Secure: false
	Object:
		Variable: r3
		Type: javax.net.ssl.TrustManagerFactory
		Statement: r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r10)
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.ssl.SSLContextBuilder: software.amazon.awssdk.thirdparty.org.apache.http.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore,software.amazon.awssdk.thirdparty.org.apache.http.ssl.TrustStrategy)>
		SHA-256: e2938ff6fdc62519f4377a97c76c4e48e17f5debef102d651f33a61b74443a77
		Secure: true
	Object:
		Variable: r34
		Type: byte[]
		Statement: r34 = virtualinvoke r31.<java.security.MessageDigest: byte[] digest()>()
		Method: <software.amazon.awssdk.thirdparty.org.apache.commons.codec.digest.Md5Crypt: java.lang.String md5Crypt(byte[],java.lang.String,java.lang.String)>
		SHA-256: 2f1171658a2a32c35554e48fdd03e563875d21b9c40c562b7023d295495b4bf
		Secure: false
	Object:
		Variable: r6
		Type: javax.crypto.Cipher
		Statement: r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r10)
		Method: <software.amazon.awssdk.thirdparty.io.netty.handler.ssl.SslContext: java.security.spec.PKCS8EncodedKeySpec generateKeySpec(char[],byte[])>
		SHA-256: 75783602b7c7dea9335aace96ce14e1788e2631b71b853aefb20e70b107597aa
		Secure: false
	Object:
		Variable: r7
		Type: byte[]
		Statement: r4 = virtualinvoke r8.<java.security.MessageDigest: byte[] digest(byte[])>(r7)
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.NTLMEngineImpl$Type3Message: byte[] addGssMicAvsToTargetInfo(byte[],java.security.cert.Certificate)>
		SHA-256: f4cb92d663ea523a66832637a2af6d09cfd06da2f571c733d32b7b20dbde9aea
		Secure: false
	Object:
		Variable: r30
		Type: byte[]
		Statement: r30 = virtualinvoke r29.<java.security.MessageDigest: byte[] digest()>()
		Method: <software.amazon.awssdk.thirdparty.org.apache.commons.codec.digest.Sha2Crypt: java.lang.String sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)>
		SHA-256: 8e88449544b9f7e414adbe2f34a17243ec3612919023a8a0bd098e3a201ba472
		Secure: false
	Object:
		Variable: r34
		Type: byte[]
		Statement: r34 = virtualinvoke r32.<java.security.MessageDigest: byte[] digest()>()
		Method: <software.amazon.awssdk.thirdparty.org.apache.commons.codec.digest.Md5Crypt: java.lang.String md5Crypt(byte[],java.lang.String,java.lang.String)>
		SHA-256: 7fc927c52220e9c87c89ed43cb6a1010d2763202f829b2f00d00ee87dd45d3ce
		Secure: false
	Object:
		Variable: r39
		Type: javax.net.ssl.TrustManagerFactory
		Statement: r39 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r23)
		Method: <software.amazon.awssdk.thirdparty.io.netty.handler.ssl.ReferenceCountedOpenSslServerContext: software.amazon.awssdk.thirdparty.io.netty.handler.ssl.ReferenceCountedOpenSslServerContext$ServerContext newSessionContext(software.amazon.awssdk.thirdparty.io.netty.handler.ssl.ReferenceCountedOpenSslContext,long,software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslEngineMap,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory)>
		SHA-256: 9fe8160d0ec78c6406a46ead65dfad5f3f8d58b3c82c963c8e1429ab5786294f
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>(r1)
		Method: <software.amazon.awssdk.thirdparty.org.apache.commons.codec.digest.HmacUtils: byte[] hmacSha384(byte[],byte[])>
		SHA-256: af3559619d07115c81619a44b28b76984932083d6cc39c7e122601dddf9605f5
		Secure: true
	Object:
		Variable: r0
		Type: software.amazon.awssdk.core.io.SdkDigestInputStream
		Statement: specialinvoke r0.<java.security.DigestInputStream: void <init>(java.io.InputStream,java.security.MessageDigest)>(r1, r2)
		Method: <software.amazon.awssdk.core.io.SdkDigestInputStream: void <init>(java.io.InputStream,java.security.MessageDigest)>
		SHA-256: 6f3668597d15dd4767c7c3b7e8ff16191513524ae676799ae79c13e925e3ad87
		Secure: false
	Object:
		Variable: r40
		Type: javax.net.ssl.SSLEngine
		Statement: r40 = virtualinvoke r0.<javax.net.ssl.SSLContext: javax.net.ssl.SSLEngine createSSLEngine()>()
		Method: <software.amazon.awssdk.thirdparty.io.netty.handler.ssl.JdkSslContext: void <clinit>()>
		SHA-256: 3ccc99c34d604487f0b0fbc2d22550e9d739e8e5b446de7b9e231cc678b63a06
		Secure: false
	Object:
		Variable: $r16
		Type: javax.net.ssl.TrustManager[]
		Statement: $r16 = virtualinvoke r10.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <software.amazon.awssdk.thirdparty.io.netty.handler.ssl.JdkSslClientContext: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long)>
		SHA-256: 40e6279df6a4cbbb6508b21e9d38859c319025e85c0a215637a4af9b61a1cb9d
		Secure: true
	Object:
		Variable: r1
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>(r1)
		Method: <software.amazon.awssdk.thirdparty.org.apache.commons.codec.digest.HmacUtils: byte[] hmacSha1(byte[],byte[])>
		SHA-256: 57275a6a0540fc96e2e84ac02a5c1ee9fa287e1d1e1b154c06040ea15a44ef31
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, $r5)
		Method: <software.amazon.awssdk.auth.signer.internal.AbstractAwsSigner: byte[] sign(byte[],byte[],software.amazon.awssdk.auth.signer.internal.SigningAlgorithm)>
		SHA-256: 3e11d0f5bd04228f792310d7c5ce8eb883b76f34f9d700cdb7f6ac599679ce8a
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer15232)
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.NTLMEngineImpl: byte[] RC4(byte[],byte[])>
		SHA-256: 8b5ae3be51a69ad3ec74b05a485bdd9a3fb48bc10f1ca2c381e5f63ae242d6a
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal()>()
		Method: <software.amazon.awssdk.thirdparty.org.apache.commons.codec.digest.HmacUtils: byte[] hmacSha1(byte[],java.io.InputStream)>
		SHA-256: 64b38dfba6e4b727b70a43f1eaaaad641835edf8077607e7219bc2121d1fbc1
		Secure: true
	Object:
		Variable: r44
		Type: java.security.KeyPairGenerator
		Statement: r44 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer28846)
		Method: <software.amazon.awssdk.thirdparty.io.netty.handler.ssl.util.SelfSignedCertificate: void <init>(java.lang.String,java.security.SecureRandom,int,java.util.Date,java.util.Date)>
		SHA-256: 8402263368401930c32bbe57b20721436abb9cc9ad8e549137cec69913b44ecd
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer20900)
		Method: <software.amazon.awssdk.thirdparty.io.netty.handler.codec.http.websocketx.WebSocketUtil$1: java.security.MessageDigest initialValue()>
		SHA-256: f033b4d93be11e838bf486d943782b6e4c563fd134d0c4942dbb0d91f203ec61
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke r4.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <software.amazon.awssdk.utils.Md5Utils: byte[] computeMD5Hash(byte[])>
		SHA-256: 38379e9dc4b48cabe7efeb171b23324abb63e7718804635ee47f1ee5c4db42c3
		Secure: false
	Object:
		Variable: r4
		Type: byte[]
		Statement: r4 = virtualinvoke r8.<java.security.MessageDigest: byte[] digest(byte[])>(r7)
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.NTLMEngineImpl$Type3Message: byte[] addGssMicAvsToTargetInfo(byte[],java.security.cert.Certificate)>
		SHA-256: e7106d47e8fbbf44418721c82f064499f0c89a121f16bd8aabf5c5dea79deb0a
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(r2)
		Method: <software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslX509KeyManagerFactory: software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi newOpenSslKeyManagerFactorySpi(java.lang.String,java.security.Provider)>
		SHA-256: e029ece63adde15e6e2f260bce04fca70816ac8c184fdbe4f90bf7aa3c8297f7
		Secure: true
	Object:
		Variable: $r15
		Type: javax.net.ssl.SSLContext
		Statement: $r15 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer28899)
		Method: <software.amazon.awssdk.thirdparty.io.netty.handler.ssl.JdkSslServerContext: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long)>
		SHA-256: 549c6ee89abc69bb1b7b87f39d3c2649492003ad2163ad46087ac5e91ea52257
		Secure: false
	Object:
		Variable: $r151
		Type: byte[]
		Statement: $r151 = virtualinvoke r10.<java.security.MessageDigest: byte[] digest(byte[])>($r150)
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.DigestScheme: software.amazon.awssdk.thirdparty.org.apache.http.Header createDigestHeader(software.amazon.awssdk.thirdparty.org.apache.http.auth.Credentials,software.amazon.awssdk.thirdparty.org.apache.http.HttpRequest)>
		SHA-256: 3606ee9580d36126844cc90ecd4773e54c3540ba61da227af5802e98cc6ce9dd
		Secure: false
	Object:
		Variable: $r111
		Type: byte[]
		Statement: $r111 = virtualinvoke r10.<java.security.MessageDigest: byte[] digest(byte[])>($r110)
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.DigestScheme: software.amazon.awssdk.thirdparty.org.apache.http.Header createDigestHeader(software.amazon.awssdk.thirdparty.org.apache.http.auth.Credentials,software.amazon.awssdk.thirdparty.org.apache.http.HttpRequest)>
		SHA-256: e3c5007c1fd2174ee0e3b25483a626d06cc4dfedb70b6567243dc5301142fec0
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.MessageDigest
		Statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer13204)
		Method: <software.amazon.awssdk.auth.signer.internal.AwsChunkedEncodingInputStream: void <init>(java.io.InputStream,int,byte[],java.lang.String,java.lang.String,java.lang.String,software.amazon.awssdk.auth.signer.AwsS3V4Signer)>
		SHA-256: 3c43ecb25b46d8316a9630480df368d10e3b9c5de001f23af35b791a62ba95c7
		Secure: false
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <software.amazon.awssdk.thirdparty.org.apache.commons.codec.digest.DigestUtils: byte[] md5(byte[])>
		SHA-256: a4b7e841fc462f8d73a506e9805cd4d1408ef7266e8613db710f40ddac41b158
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <software.amazon.awssdk.thirdparty.org.apache.commons.codec.digest.DigestUtils: byte[] sha512(byte[])>
		SHA-256: 793b536133ee27f28c84471a4b0c835449549b607ab02fb866e83514cfa002c9
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r0)
		Method: <software.amazon.awssdk.thirdparty.org.apache.commons.codec.digest.DigestUtils: java.security.MessageDigest getDigest(java.lang.String)>
		SHA-256: e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337
		Secure: false
	Object:
		Variable: r4
		Type: java.lang.Object[]
		Statement: r4 = virtualinvoke r3.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.conn.ssl.SSLContextBuilder: software.amazon.awssdk.thirdparty.org.apache.http.conn.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore,software.amazon.awssdk.thirdparty.org.apache.http.conn.ssl.TrustStrategy)>
		SHA-256: 5a03678b5fe66b52cc209e417248044007623f8065d27a13e827b83c6faea2f5
		Secure: false
	Object:
		Variable: r28
		Type: byte[]
		Statement: r28 = virtualinvoke r25.<java.security.MessageDigest: byte[] digest()>()
		Method: <software.amazon.awssdk.thirdparty.org.apache.commons.codec.digest.Sha2Crypt: java.lang.String sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)>
		SHA-256: 71b129715a0e6159512027414bdc73e9ec2396d3d3255bd9a2a6c56d89315ce6
		Secure: false
	Object:
		Variable: r3
		Type: byte[]
		Statement: r3 = virtualinvoke r15.<java.security.MessageDigest: byte[] digest()>()
		Method: <software.amazon.awssdk.utils.Md5Utils: byte[] computeMD5Hash(java.io.InputStream)>
		SHA-256: 6d5eccc18d33b0bceb9a0a21fd9b9a49b1f2485110664566ffb864b12279575b
		Secure: false
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r3 = virtualinvoke r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r0)
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.NTLMEngineImpl: byte[] RC4(byte[],byte[])>
		SHA-256: f6202941bd439f85ecef0a312b1c84967db36819e2140eb8bfc5cb96fecc0f49
		Secure: false
	Object:
		Variable: r27
		Type: javax.net.ssl.TrustManagerFactory
		Statement: r27 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r11)
		Method: <software.amazon.awssdk.thirdparty.io.netty.handler.ssl.ReferenceCountedOpenSslClientContext: software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslSessionContext newSessionContext(software.amazon.awssdk.thirdparty.io.netty.handler.ssl.ReferenceCountedOpenSslContext,long,software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslEngineMap,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory)>
		SHA-256: 8f759423a008715800b93c119d9051e5bc420946e80c9d081a8843f6feb88b3f
		Secure: false
	Object:
		Variable: r28
		Type: byte[]
		Statement: r28 = virtualinvoke r25.<java.security.MessageDigest: byte[] digest()>()
		Method: <software.amazon.awssdk.thirdparty.org.apache.commons.codec.digest.Sha2Crypt: java.lang.String sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)>
		SHA-256: 71b129715a0e6159512027414bdc73e9ec2396d3d3255bd9a2a6c56d89315ce6
		Secure: false
	Object:
		Variable: r4
		Type: java.security.KeyStore
		Statement: r4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r8)
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.ssl.SSLContextBuilder: software.amazon.awssdk.thirdparty.org.apache.http.ssl.SSLContextBuilder loadTrustMaterial(java.net.URL,char[],software.amazon.awssdk.thirdparty.org.apache.http.ssl.TrustStrategy)>
		SHA-256: 2ae9e45495be98490a8cf7e986c1da4f46ec3d08c04f0de79430b0d6741fcb4e
		Secure: true
	Object:
		Variable: r3
		Type: javax.crypto.SecretKeyFactory
		Statement: r3 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>($r8)
		Method: <software.amazon.awssdk.thirdparty.io.netty.handler.ssl.SslContext: java.security.spec.PKCS8EncodedKeySpec generateKeySpec(char[],byte[])>
		SHA-256: 436149b8daa596b6e53a6ec47fbcfc7024fd8a9a94ca6ec263f1046a649a7624
		Secure: false
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <software.amazon.awssdk.thirdparty.org.apache.commons.codec.digest.DigestUtils: byte[] sha512(byte[])>
		SHA-256: 9f4c297e8b55ca8f8e840c8184d8d43a9e8cf6178bd74e24161706b73442496f
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>(r1)
		Method: <software.amazon.awssdk.thirdparty.org.apache.commons.codec.digest.HmacUtils: byte[] hmacSha1(byte[],byte[])>
		SHA-256: 3448e19381e93103b447fb7e6713e366df7ec5eccfd7c62c0ad931849f85c71c
		Secure: true
	Object:
		Variable: varReplacer17910
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer17910)
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.NTLMEngineImpl$Handle: javax.crypto.Cipher initCipher()>
		SHA-256: 9acbce17e53fd794da50e6e375359f21710fd6ec39e38b39a5d57d4055955634
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal()>()
		Method: <software.amazon.awssdk.thirdparty.org.apache.commons.codec.digest.HmacUtils: byte[] hmacMd5(byte[],java.io.InputStream)>
		SHA-256: 6d924b19cfdc7ab538c35fce21d5d0fde82c1a27741a57649406a95c37779671
		Secure: true
	Object:
		Variable: $r150
		Type: byte[]
		Statement: $r151 = virtualinvoke r10.<java.security.MessageDigest: byte[] digest(byte[])>($r150)
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.DigestScheme: software.amazon.awssdk.thirdparty.org.apache.http.Header createDigestHeader(software.amazon.awssdk.thirdparty.org.apache.http.auth.Credentials,software.amazon.awssdk.thirdparty.org.apache.http.HttpRequest)>
		SHA-256: 1e7f738c754f6c0133fcd7900274dcab708df39d619f56d67e656ce2f9482db1
		Secure: false
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <software.amazon.awssdk.thirdparty.org.apache.commons.codec.digest.DigestUtils: byte[] sha256(byte[])>
		SHA-256: c5437c9ce65f8e48f3a76c6e35eb7d6d07b1025940f526110b27d239aaff1e3
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>(r1)
		Method: <software.amazon.awssdk.thirdparty.org.apache.commons.codec.digest.HmacUtils: byte[] hmacSha256(byte[],byte[])>
		SHA-256: 77f79fa467f5ce9d3f93e7eddb1ef4e043b42c5633e388795f50224f9f032d47
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer13261)
		Method: <software.amazon.awssdk.auth.signer.internal.AbstractAwsSigner: java.security.MessageDigest lambda$static$0()>
		SHA-256: 3019ef2aecaa60d67336d01b594f22c33fedf18d62b4694f2799c8997c915e49
		Secure: false
	Object:
		Variable: r0
		Type: software.amazon.awssdk.thirdparty.io.netty.handler.ssl.ReferenceCountedOpenSslEngine
		Statement: specialinvoke r0.<javax.net.ssl.SSLEngine: void <init>(java.lang.String,int)>(r3, i0)
		Method: <software.amazon.awssdk.thirdparty.io.netty.handler.ssl.ReferenceCountedOpenSslEngine: void <init>(software.amazon.awssdk.thirdparty.io.netty.handler.ssl.ReferenceCountedOpenSslContext,software.amazon.awssdk.thirdparty.io.netty.buffer.ByteBufAllocator,java.lang.String,int,boolean,boolean)>
		SHA-256: 6c319d7a075ff67b2a65fc572e9634e239252783aae602180cd74c19bda0533d
		Secure: false
	Object:
		Variable: r6
		Type: byte[]
		Statement: r6 = virtualinvoke r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r4)
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.NTLMEngineImpl: byte[] lmHash(java.lang.String)>
		SHA-256: 630fb4138afd719581916fcb0ac190179d90373af7ae8db362e4a0f23f37ede
		Secure: false
	Object:
		Variable: r32
		Type: byte[]
		Statement: r32 = virtualinvoke r31.<java.security.MessageDigest: byte[] digest()>()
		Method: <software.amazon.awssdk.thirdparty.org.apache.commons.codec.digest.Sha2Crypt: java.lang.String sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)>
		SHA-256: afa001f9f58bedd7a7e2d2e9d8232d222ffb8828ba5d8bb60adb7fcca2b063a5
		Secure: false
	Object:
		Variable: r1
		Type: javax.crypto.Cipher
		Statement: r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer17908)
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.NTLMEngineImpl$Handle: javax.crypto.Cipher initCipher()>
		SHA-256: fa13f9d758b285e9e6f1b5fdb80340224be67823d73137838346d43882c9e4e7
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>(r1)
		Method: <software.amazon.awssdk.thirdparty.org.apache.commons.codec.digest.HmacUtils: byte[] hmacSha256(byte[],byte[])>
		SHA-256: 5bd14b19dd834d63b7b1aa586494bf84972917899611497805d2090d9c220ce8
		Secure: true
	Object:
		Variable: $r35
		Type: javax.net.ssl.TrustManager[]
		Statement: $r35 = virtualinvoke r27.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <software.amazon.awssdk.thirdparty.io.netty.handler.ssl.ReferenceCountedOpenSslClientContext: software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslSessionContext newSessionContext(software.amazon.awssdk.thirdparty.io.netty.handler.ssl.ReferenceCountedOpenSslContext,long,software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslEngineMap,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory)>
		SHA-256: ad69b96fcb0cad19685ca237d01a448d12246fc9c184ff6cb41218a439e94d4
		Secure: true
	Object:
		Variable: r4
		Type: java.security.MessageDigest
		Statement: r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer14568)
		Method: <software.amazon.awssdk.utils.Md5Utils: byte[] computeMD5Hash(byte[])>
		SHA-256: 9059328632b00c72ad6663c9288f835f509dd1bb437530b596dc31205494e1b7
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <software.amazon.awssdk.thirdparty.io.netty.util.internal.ThreadLocalRandom$1: void run()>
		SHA-256: 7b5a6c8dae3abffe2514936e7c1020b7c1c22c0810a3c866ee45528de51e28a7
		Secure: true
	Object:
		Variable: r5
		Type: javax.crypto.Cipher
		Statement: r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer15264)
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.NTLMEngineImpl: byte[] lmResponse(byte[],byte[])>
		SHA-256: 5cd71176b55a03dfe264864416b820fbcb400996f87a820b55980992d70ee86c
		Secure: false
	Object:
		Variable: r1
		Type: javax.net.ssl.SSLContext
		Statement: r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r14)
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.conn.ssl.SSLContextBuilder: javax.net.ssl.SSLContext build()>
		SHA-256: 323c65677a5ccffe4cadf1d642bbf7f0cc11c2ad4bf8c847cb9434d4e0c61ec9
		Secure: false
	Object:
		Variable: varReplacer15232
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer15232)
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.NTLMEngineImpl: byte[] RC4(byte[],byte[])>
		SHA-256: c85eab125a6458f4d6ab65fdfb3c4b228c66cc5dd3567691fdc58f21a253e2d5
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <software.amazon.awssdk.thirdparty.org.apache.commons.codec.digest.DigestUtils: byte[] sha256(byte[])>
		SHA-256: b4669333235e4348b59a5cb6c6e53c9916a201b1217ee843fe05ae9a67a0316d
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, r0)
		Method: <software.amazon.awssdk.thirdparty.org.apache.commons.codec.digest.HmacUtils: javax.crypto.Mac getInitializedMac(java.lang.String,byte[])>
		SHA-256: 394b58790fe148394c6e87c0c4093b433591b9dd9826146ceb21a032f1849200
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r0)
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.DigestScheme: java.security.MessageDigest createMessageDigest(java.lang.String)>
		SHA-256: bd3823a5d9aa45b9e8dcdb57b0361fb1187bdae63ecc0a8465b6a3387976558
		Secure: false
	Object:
		Variable: r15
		Type: java.security.MessageDigest
		Statement: r15 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer14566)
		Method: <software.amazon.awssdk.utils.Md5Utils: byte[] computeMD5Hash(java.io.InputStream)>
		SHA-256: d9544e37befabeb698c66877739b5e51fd2092b52a59b0e4d514be24039ba198
		Secure: false
	Object:
		Variable: $r15
		Type: javax.net.ssl.SSLContext
		Statement: $r15 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer28903, r0)
		Method: <software.amazon.awssdk.thirdparty.io.netty.handler.ssl.JdkSslServerContext: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long)>
		SHA-256: 20f5416ce929f266da79da0d2367f5c74c53edd186e6605b613be0ae4fc73ad
		Secure: false
	Object:
		Variable: $r36
		Type: byte[]
		Statement: $r37 = virtualinvoke r10.<java.security.MessageDigest: byte[] digest(byte[])>($r36)
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.DigestScheme: software.amazon.awssdk.thirdparty.org.apache.http.Header createDigestHeader(software.amazon.awssdk.thirdparty.org.apache.http.auth.Credentials,software.amazon.awssdk.thirdparty.org.apache.http.HttpRequest)>
		SHA-256: 3cf353a004f69d65ef432d35aa7b6c43f53e334c975d655765d7f2d5d48a7fda
		Secure: false
	Object:
		Variable: $r17
		Type: javax.net.ssl.TrustManager[]
		Statement: $r17 = virtualinvoke r13.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <software.amazon.awssdk.thirdparty.io.netty.handler.ssl.JdkSslServerContext: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long)>
		SHA-256: 64ed63e14b68055ba1988b796d6b823837ff3ad9c45d21d87c7c878e00a24f81
		Secure: true
	Object:
		Variable: $r10
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, r20)
		Method: <software.amazon.awssdk.auth.signer.internal.AwsChunkedEncodingInputStream: void <init>(java.io.InputStream,int,byte[],java.lang.String,java.lang.String,java.lang.String,software.amazon.awssdk.auth.signer.AwsS3V4Signer)>
		SHA-256: 7bba06de4be39faf991c8dddf0b97af88cdf72db8de9f030c3fb6db30212d5e9
		Secure: false
	Object:
		Variable: r2
		Type: byte[]
		Statement: r2 = virtualinvoke r1.<java.security.SecureRandom: byte[] generateSeed(int)>(varReplacer27257)
		Method: <software.amazon.awssdk.thirdparty.io.netty.util.internal.ThreadLocalRandom$1: void run()>
		SHA-256: d674f2a6edf3e3123a14a6a16634db9c25ef1fb21dbcb8c3144bf3ab189f9341
		Secure: true
	Object:
		Variable: r3
		Type: javax.net.ssl.TrustManagerFactory
		Statement: r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r6)
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.conn.ssl.SSLContextBuilder: software.amazon.awssdk.thirdparty.org.apache.http.conn.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore,software.amazon.awssdk.thirdparty.org.apache.http.conn.ssl.TrustStrategy)>
		SHA-256: 6b27f20073a702916ea38984a07c41336f9d5c31df3fe292ab1e805babfe473c
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r0)
		Method: <software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.NTLMEngineImpl: byte[] RC4(byte[],byte[])>
		SHA-256: b82d1849c7337db6637c2fc3d1a3052af43c59fa37baba925847f124876581ef
		Secure: false
	Object:
		Variable: $r6
		Type: javax.net.ssl.KeyManager[]
		Statement: $r6 = virtualinvoke r14.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <software.amazon.awssdk.thirdparty.io.netty.handler.ssl.JdkSslServerContext: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long)>
		SHA-256: 9d4b008044798274fabf0b5132788b3a153aa44c81c3ee0a0d03bb9342d124ba
		Secure: true

Findings in Java Class: software.amazon.awssdk.thirdparty.org.apache.http.conn.ssl.SSLContexts

	 in Method: javax.net.ssl.SSLContext createSystemDefault()
		ForbiddenMethodError violating CrySL rule for javax.net.ssl.SSLContext
			Detected call to forbidden method javax.net.ssl.SSLContext getDefault() of class javax.net.ssl.SSLContext. Instead, call method <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>.
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getDefault()>()


	 in Method: javax.net.ssl.SSLContext createDefault()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #9d0938927cece43c7bca41224a7bbce3d994da9c37edd9812aa5067db2e2473a)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer16204)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer16201, varReplacer16201, varReplacer16201)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer16201, varReplacer16201, varReplacer16201)


Findings in Java Class: software.amazon.awssdk.thirdparty.org.apache.http.ssl.SSLContexts

	 in Method: javax.net.ssl.SSLContext createSystemDefault()
		ForbiddenMethodError violating CrySL rule for javax.net.ssl.SSLContext
			Detected call to forbidden method javax.net.ssl.SSLContext getDefault() of class javax.net.ssl.SSLContext. Instead, call method <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>.
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getDefault()>()


	 in Method: javax.net.ssl.SSLContext createDefault()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer19344, varReplacer19344, varReplacer19344)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #33446ae382febd3bd2a4f0ed685e54e0b2d0847f7535c6ec1c2d2f909ffc4908)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer19343)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer19344, varReplacer19344, varReplacer19344)


Findings in Java Class: software.amazon.awssdk.thirdparty.io.netty.handler.ssl.SslContext

	 in Method: java.security.spec.PKCS8EncodedKeySpec generateKeySpec(char[],byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #75783602b7c7dea9335aace96ce14e1788e2631b71b853aefb20e70b107597aa)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: $r12 = virtualinvoke r2.<javax.crypto.EncryptedPrivateKeyInfo: java.security.spec.PKCS8EncodedKeySpec getKeySpec(javax.crypto.Cipher)>(r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: r5 = virtualinvoke r3.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r4)

		ForbiddenMethodError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Detected call to forbidden method void <init>(char[]) of class javax.crypto.spec.PBEKeySpec. Instead, call method <javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>.
			at statement: specialinvoke $r9.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>(r0)


	 in Method: software.amazon.awssdk.thirdparty.io.netty.handler.ssl.SslContext newServerContext(software.amazon.awssdk.thirdparty.io.netty.handler.ssl.SslProvider,java.io.File,java.io.File,java.lang.String,java.lang.Iterable,software.amazon.awssdk.thirdparty.io.netty.handler.ssl.CipherSuiteFilter,software.amazon.awssdk.thirdparty.io.netty.handler.ssl.ApplicationProtocolConfig,long,long)
		IncompleteOperationError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #a14a09cf41f3b877beab0cc043bd4912c80380c362bdf59041da9af6cf6fb23e)
			Operation on object of type javax.net.ssl.KeyManagerFactory object not completed. Expected call to init
			at statement: $r7 = staticinvoke <software.amazon.awssdk.thirdparty.io.netty.handler.ssl.SslContext: software.amazon.awssdk.thirdparty.io.netty.handler.ssl.SslContext newServerContext(software.amazon.awssdk.thirdparty.io.netty.handler.ssl.SslProvider,java.io.File,javax.net.ssl.TrustManagerFactory,java.io.File,java.io.File,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,software.amazon.awssdk.thirdparty.io.netty.handler.ssl.CipherSuiteFilter,software.amazon.awssdk.thirdparty.io.netty.handler.ssl.ApplicationProtocolConfig,long,long)>(r0, varReplacer29557, varReplacer29557, r1, r2, r3, varReplacer29557, r4, r5, r6, l0, l1)

		IncompleteOperationError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #e029ece63adde15e6e2f260bce04fca70816ac8c184fdbe4f90bf7aa3c8297f7)
			Operation on object of type javax.net.ssl.KeyManagerFactory object not completed. Expected call to init
			at statement: $r7 = staticinvoke <software.amazon.awssdk.thirdparty.io.netty.handler.ssl.SslContext: software.amazon.awssdk.thirdparty.io.netty.handler.ssl.SslContext newServerContext(software.amazon.awssdk.thirdparty.io.netty.handler.ssl.SslProvider,java.io.File,javax.net.ssl.TrustManagerFactory,java.io.File,java.io.File,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,software.amazon.awssdk.thirdparty.io.netty.handler.ssl.CipherSuiteFilter,software.amazon.awssdk.thirdparty.io.netty.handler.ssl.ApplicationProtocolConfig,long,long)>(r0, varReplacer29557, varReplacer29557, r1, r2, r3, varReplacer29557, r4, r5, r6, l0, l1)


	 in Method: software.amazon.awssdk.thirdparty.io.netty.handler.ssl.SslContext newServerContext(software.amazon.awssdk.thirdparty.io.netty.handler.ssl.SslProvider,java.io.File,java.io.File,java.lang.String,javax.net.ssl.TrustManagerFactory,java.lang.Iterable,java.lang.Iterable,long,long)
		IncompleteOperationError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #a14a09cf41f3b877beab0cc043bd4912c80380c362bdf59041da9af6cf6fb23e)
			Operation on object of type javax.net.ssl.KeyManagerFactory object not completed. Expected call to init
			at statement: $r9 = staticinvoke <software.amazon.awssdk.thirdparty.io.netty.handler.ssl.SslContext: software.amazon.awssdk.thirdparty.io.netty.handler.ssl.SslContext newServerContext(software.amazon.awssdk.thirdparty.io.netty.handler.ssl.SslProvider,java.io.File,javax.net.ssl.TrustManagerFactory,java.io.File,java.io.File,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,software.amazon.awssdk.thirdparty.io.netty.handler.ssl.CipherSuiteFilter,software.amazon.awssdk.thirdparty.io.netty.handler.ssl.ApplicationProtocolConfig,long,long)>(r0, varReplacer29555, r4, r1, r2, r3, varReplacer29555, r5, $r7, $r8, l0, l1)

		IncompleteOperationError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #e029ece63adde15e6e2f260bce04fca70816ac8c184fdbe4f90bf7aa3c8297f7)
			Operation on object of type javax.net.ssl.KeyManagerFactory object not completed. Expected call to init
			at statement: $r9 = staticinvoke <software.amazon.awssdk.thirdparty.io.netty.handler.ssl.SslContext: software.amazon.awssdk.thirdparty.io.netty.handler.ssl.SslContext newServerContext(software.amazon.awssdk.thirdparty.io.netty.handler.ssl.SslProvider,java.io.File,javax.net.ssl.TrustManagerFactory,java.io.File,java.io.File,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,software.amazon.awssdk.thirdparty.io.netty.handler.ssl.CipherSuiteFilter,software.amazon.awssdk.thirdparty.io.netty.handler.ssl.ApplicationProtocolConfig,long,long)>(r0, varReplacer29555, r4, r1, r2, r3, varReplacer29555, r5, $r7, $r8, l0, l1)


Findings in Java Class: software.amazon.awssdk.auth.signer.internal.AbstractAwsSigner

	 in Method: byte[] hash(java.io.InputStream)
		IncompleteOperationError violating CrySL rule for java.security.DigestInputStream (on Object #6f3668597d15dd4767c7c3b7e8ff16191513524ae676799ae79c13e925e3ad87)
			Operation on object of type software.amazon.awssdk.core.io.SdkDigestInputStream object not completed. Expected call to read
			at statement: $r5 = virtualinvoke r2.<java.security.DigestInputStream: java.security.MessageDigest getMessageDigest()>()


	 in Method: byte[] sign(byte[],byte[],software.amazon.awssdk.auth.signer.internal.SigningAlgorithm)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, $r5)


Findings in Java Class: software.amazon.awssdk.auth.signer.AwsS3V4Signer

	 in Method: void processRequestPayload(software.amazon.awssdk.http.SdkHttpFullRequest$Builder,byte[],byte[],software.amazon.awssdk.auth.signer.internal.Aws4SignerRequestParams,software.amazon.awssdk.auth.signer.params.AwsS3V4SignerParams)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #9ee1a9189b144fc5b5f0b2f5cee277e6ef42608bbc7a44b66e70d5910047064e)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: specialinvoke $r7.<software.amazon.awssdk.auth.signer.internal.AwsChunkedEncodingInputStream: void <init>(java.io.InputStream,byte[],java.lang.String,java.lang.String,java.lang.String,software.amazon.awssdk.auth.signer.AwsS3V4Signer)>($r8, r3, $r9, $r10, $r11, r0)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #3c43ecb25b46d8316a9630480df368d10e3b9c5de001f23af35b791a62ba95c7)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r7.<software.amazon.awssdk.auth.signer.internal.AwsChunkedEncodingInputStream: void <init>(java.io.InputStream,byte[],java.lang.String,java.lang.String,java.lang.String,software.amazon.awssdk.auth.signer.AwsS3V4Signer)>($r8, r3, $r9, $r10, $r11, r0)


Findings in Java Class: software.amazon.awssdk.utils.Logger

	 in Method: void info(java.util.function.Supplier,java.lang.Throwable)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #3019ef2aecaa60d67336d01b594f22c33fedf18d62b4694f2799c8997c915e49)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r5 = interfaceinvoke r1.<java.util.function.Supplier: java.lang.Object get()>()


	 in Method: void trace(java.util.function.Supplier,java.lang.Throwable)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #3019ef2aecaa60d67336d01b594f22c33fedf18d62b4694f2799c8997c915e49)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r5 = interfaceinvoke r1.<java.util.function.Supplier: java.lang.Object get()>()


Findings in Java Class: software.amazon.awssdk.core.internal.http.pipeline.RequestPipelineBuilder

	 in Method: software.amazon.awssdk.core.internal.http.pipeline.RequestPipeline lambda$wrappedWith$4(java.util.function.BiFunction,software.amazon.awssdk.core.internal.http.HttpClientDependencies)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #3019ef2aecaa60d67336d01b594f22c33fedf18d62b4694f2799c8997c915e49)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r5 = interfaceinvoke r1.<java.util.function.BiFunction: java.lang.Object apply(java.lang.Object,java.lang.Object)>(r2, $r4)


Findings in Java Class: software.amazon.awssdk.core.runtime.TypeConverter

	 in Method: java.lang.Object convert(java.lang.Object,java.util.function.Function)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #3019ef2aecaa60d67336d01b594f22c33fedf18d62b4694f2799c8997c915e49)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: return $r2


Findings in Java Class: software.amazon.awssdk.auth.signer.internal.SigningAlgorithm$MacThreadLocal

	 in Method: java.lang.Object initialValue()
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #daa1bddfd90f731fd623805945cff112d84e8d46c097d3b511fce927dea9cc94)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: return $r1


Findings in Java Class: software.amazon.awssdk.utils.Md5Utils

	 in Method: byte[] computeMD5Hash(java.io.InputStream)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #d9544e37befabeb698c66877739b5e51fd2092b52a59b0e4d514be24039ba198)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r15 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer14566)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #d9544e37befabeb698c66877739b5e51fd2092b52a59b0e4d514be24039ba198)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: r3 = virtualinvoke r15.<java.security.MessageDigest: byte[] digest()>()


	 in Method: byte[] computeMD5Hash(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #9059328632b00c72ad6663c9288f835f509dd1bb437530b596dc31205494e1b7)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer14568)


Findings in Java Class: software.amazon.awssdk.http.apache.ApacheHttpClient$ApacheConnectionManagerFactory

	 in Method: javax.net.ssl.SSLContext getSslContext(software.amazon.awssdk.utils.AttributeMap)
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #c7f77926e19c4cf2a0819c3b5f853c6127ca33235c012da15d9367bdcd13eeb2)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: r12 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer14870)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r12.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer14871, r11, varReplacer14871)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r12.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer14871, r11, varReplacer14871)


Findings in Java Class: software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.NTLMEngineImpl$CipherGen

	 in Method: byte[] getLanManagerSessionKey()
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r18.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer15162, r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #76f914116816b851853521dd016f01eec8002c96efabdd35edabe1865cd27b48)
			First parameter (with value "DES/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r18 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer15166)


Findings in Java Class: software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.NTLMEngineImpl

	 in Method: byte[] RC4(byte[],byte[])
		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #8b5ae3be51a69ad3ec74b05a485bdd9a3fb48bc10f1ca2c381e5f63ae242d6a)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer15232)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer15232)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #8b5ae3be51a69ad3ec74b05a485bdd9a3fb48bc10f1ca2c381e5f63ae242d6a)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer15232)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #8b5ae3be51a69ad3ec74b05a485bdd9a3fb48bc10f1ca2c381e5f63ae242d6a)
			Second parameter (with value "RC4") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer15232)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #8b5ae3be51a69ad3ec74b05a485bdd9a3fb48bc10f1ca2c381e5f63ae242d6a)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer15232)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer15230, $r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #131206de52a574d6735d17b80f8c98a8ecf344fce76ae4958ffbe2975091acc9)
			First parameter (with value "RC4") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer15231)


	 in Method: byte[] lmHash(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #1b55fa58fddf8c7a8f663c0d62e2b86a48a20f208f3ea1257261d65182e049c7)
			First parameter (with value "DES/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer15245)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #1b55fa58fddf8c7a8f663c0d62e2b86a48a20f208f3ea1257261d65182e049c7)
			Unexpected call to method init on object of type javax.crypto.Cipher.
			at statement: virtualinvoke r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer15244, r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer15244, r3)


	 in Method: byte[] lmResponse(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer15271, r3)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #5cd71176b55a03dfe264864416b820fbcb400996f87a820b55980992d70ee86c)
			First parameter (with value "DES/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer15264)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #5cd71176b55a03dfe264864416b820fbcb400996f87a820b55980992d70ee86c)
			Unexpected call to method init on object of type javax.crypto.Cipher.
			at statement: virtualinvoke r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer15271, r3)


	 in Method: java.security.Key createDESKey(byte[],int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer15284)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #a51d3af2af7424a4809e9dda73aa53c09175a85609959ca5a7f64d4f06f251d8)
			Second parameter (with value "DES") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer15284)


	 in Method: java.security.MessageDigest getMD5()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #d47b751e4a03a685f35e4b54f3d3bf6fefec777e980986ab1c6e10edec612026)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer15291)


Findings in Java Class: software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.NTLMEngineImpl$Handle

	 in Method: void <init>(byte[],software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.NTLMEngineImpl$Mode,boolean)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #d47b751e4a03a685f35e4b54f3d3bf6fefec777e980986ab1c6e10edec612026)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r8 = virtualinvoke r3.<java.security.MessageDigest: byte[] digest()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #fa13f9d758b285e9e6f1b5fdb80340224be67823d73137838346d43882c9e4e7)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: $r9 = specialinvoke r0.<software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.NTLMEngineImpl$Handle: javax.crypto.Cipher initCipher()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #fa13f9d758b285e9e6f1b5fdb80340224be67823d73137838346d43882c9e4e7)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: $r9 = specialinvoke r0.<software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.NTLMEngineImpl$Handle: javax.crypto.Cipher initCipher()>()


	 in Method: javax.crypto.Cipher initCipher()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer17910)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #e7fa2ab561161bc84c310d95ea35407b60c548bc15c652739fe818119367ae58)
			Second parameter (with value "RC4") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer17910)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #fa13f9d758b285e9e6f1b5fdb80340224be67823d73137838346d43882c9e4e7)
			First parameter (with value "RC4") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer17908)


	 in Method: byte[] signAndEncryptMessage(byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #fa13f9d758b285e9e6f1b5fdb80340224be67823d73137838346d43882c9e4e7)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: specialinvoke r0.<software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.NTLMEngineImpl$Handle: void advanceMessageSequence()>()


	 in Method: byte[] decryptAndVerifySignedMessage(byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #fa13f9d758b285e9e6f1b5fdb80340224be67823d73137838346d43882c9e4e7)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: specialinvoke r0.<software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.NTLMEngineImpl$Handle: void advanceMessageSequence()>()


Findings in Java Class: software.amazon.awssdk.thirdparty.org.apache.http.conn.ssl.SSLContextBuilder

	 in Method: software.amazon.awssdk.thirdparty.org.apache.http.conn.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[],software.amazon.awssdk.thirdparty.org.apache.http.conn.ssl.PrivateKeyStrategy)
		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #e583fd691e38f136ba11f1fe50c9350acdc0da5a7df79230440be603a5329624)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r4.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r1, r2)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #e583fd691e38f136ba11f1fe50c9350acdc0da5a7df79230440be603a5329624)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r4.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r1, r2)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r4.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r1, r2)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #e583fd691e38f136ba11f1fe50c9350acdc0da5a7df79230440be603a5329624)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r4.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r1, r2)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #e583fd691e38f136ba11f1fe50c9350acdc0da5a7df79230440be603a5329624)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r4.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r1, r2)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #e583fd691e38f136ba11f1fe50c9350acdc0da5a7df79230440be603a5329624)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r4.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r1, r2)


	 in Method: javax.net.ssl.SSLContext build()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r17, $r18, $r19)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r17, $r18, $r19)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #323c65677a5ccffe4cadf1d642bbf7f0cc11c2ad4bf8c847cb9434d4e0c61ec9)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r14)


	 in Method: software.amazon.awssdk.thirdparty.org.apache.http.conn.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore,software.amazon.awssdk.thirdparty.org.apache.http.conn.ssl.TrustStrategy)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r3.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(r1)


Findings in Java Class: software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.DigestScheme

	 in Method: java.security.MessageDigest createMessageDigest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #bd3823a5d9aa45b9e8dcdb57b0361fb1187bdae63ecc0a8465b6a3387976558)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r0)


Findings in Java Class: software.amazon.awssdk.thirdparty.org.apache.http.impl.auth.HttpEntityDigester

	 in Method: void close()
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #bd3823a5d9aa45b9e8dcdb57b0361fb1187bdae63ecc0a8465b6a3387976558)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: software.amazon.awssdk.thirdparty.org.apache.http.ssl.SSLContextBuilder

	 in Method: javax.net.ssl.SSLContext build()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #17297cadaf15cdc3f26bbd5bf8ebab087678c4d3aba0139ec991d49b0723822f)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: r9 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(r1)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #ad6d944b2b1ea4e227efe778c3dc3d27acf160d6725a8f24cb12b791425ecd74)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: r9 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(r1, $r7)


Findings in Java Class: software.amazon.awssdk.thirdparty.io.netty.handler.codec.http.websocketx.WebSocketUtil$1

	 in Method: java.security.MessageDigest initialValue()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #f033b4d93be11e838bf486d943782b6e4c563fd134d0c4942dbb0d91f203ec61)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer20900)


Findings in Java Class: software.amazon.awssdk.thirdparty.io.netty.handler.codec.http.websocketx.WebSocketUtil$2

	 in Method: java.security.MessageDigest initialValue()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b23cc326d624c4aacf931b5e1ac7074d159f5d57aeb94aac97c8ace064ba38e9)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer21053)


Findings in Java Class: software.amazon.awssdk.thirdparty.io.netty.handler.ssl.ReferenceCountedOpenSslContext

	 in Method: software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslKeyMaterialProvider providerFor(javax.net.ssl.KeyManagerFactory,java.lang.String)
		TypestateError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #a14a09cf41f3b877beab0cc043bd4912c80380c362bdf59041da9af6cf6fb23e)
			Unexpected call to method getKeyManagers on object of type javax.net.ssl.KeyManagerFactory. Expect a call to one of the following methods init
			at statement: $r3 = virtualinvoke r0.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()

		TypestateError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #e029ece63adde15e6e2f260bce04fca70816ac8c184fdbe4f90bf7aa3c8297f7)
			Unexpected call to method getKeyManagers on object of type javax.net.ssl.KeyManagerFactory. Expect a call to one of the following methods init
			at statement: $r3 = virtualinvoke r0.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()


Findings in Java Class: software.amazon.awssdk.thirdparty.io.netty.handler.ssl.SslContextBuilder

	 in Method: software.amazon.awssdk.thirdparty.io.netty.handler.ssl.SslContext build()
		IncompleteOperationError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #a14a09cf41f3b877beab0cc043bd4912c80380c362bdf59041da9af6cf6fb23e)
			Operation on object of type javax.net.ssl.KeyManagerFactory object not completed. Expected call to init
			at statement: $r27 = staticinvoke <software.amazon.awssdk.thirdparty.io.netty.handler.ssl.SslContext: software.amazon.awssdk.thirdparty.io.netty.handler.ssl.SslContext newServerContextInternal(software.amazon.awssdk.thirdparty.io.netty.handler.ssl.SslProvider,java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,software.amazon.awssdk.thirdparty.io.netty.handler.ssl.CipherSuiteFilter,software.amazon.awssdk.thirdparty.io.netty.handler.ssl.ApplicationProtocolConfig,long,long,software.amazon.awssdk.thirdparty.io.netty.handler.ssl.ClientAuth,java.lang.String[],boolean,boolean)>($r26, $r25, $r24, $r23, $r22, $r21, $r20, $r19, $r18, $r17, $r16, $l3, $l2, $r15, $r14, $z3, $z2)

		IncompleteOperationError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #e029ece63adde15e6e2f260bce04fca70816ac8c184fdbe4f90bf7aa3c8297f7)
			Operation on object of type javax.net.ssl.KeyManagerFactory object not completed. Expected call to init
			at statement: $r27 = staticinvoke <software.amazon.awssdk.thirdparty.io.netty.handler.ssl.SslContext: software.amazon.awssdk.thirdparty.io.netty.handler.ssl.SslContext newServerContextInternal(software.amazon.awssdk.thirdparty.io.netty.handler.ssl.SslProvider,java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,software.amazon.awssdk.thirdparty.io.netty.handler.ssl.CipherSuiteFilter,software.amazon.awssdk.thirdparty.io.netty.handler.ssl.ApplicationProtocolConfig,long,long,software.amazon.awssdk.thirdparty.io.netty.handler.ssl.ClientAuth,java.lang.String[],boolean,boolean)>($r26, $r25, $r24, $r23, $r22, $r21, $r20, $r19, $r18, $r17, $r16, $l3, $l2, $r15, $r14, $z3, $z2)


Findings in Java Class: software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslServerContext

	 in Method: void <init>(java.io.File,java.io.File,java.lang.String,javax.net.ssl.TrustManagerFactory,java.lang.Iterable,software.amazon.awssdk.thirdparty.io.netty.handler.ssl.CipherSuiteFilter,software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator,long,long)
		IncompleteOperationError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #a14a09cf41f3b877beab0cc043bd4912c80380c362bdf59041da9af6cf6fb23e)
			Operation on object of type javax.net.ssl.KeyManagerFactory object not completed. Expected call to init
			at statement: specialinvoke r0.<software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslServerContext: void <init>(java.io.File,javax.net.ssl.TrustManagerFactory,java.io.File,java.io.File,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,software.amazon.awssdk.thirdparty.io.netty.handler.ssl.CipherSuiteFilter,software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator,long,long)>(varReplacer29916, r4, r1, r2, r3, varReplacer29916, r5, r6, r7, l0, l1)

		IncompleteOperationError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #e029ece63adde15e6e2f260bce04fca70816ac8c184fdbe4f90bf7aa3c8297f7)
			Operation on object of type javax.net.ssl.KeyManagerFactory object not completed. Expected call to init
			at statement: specialinvoke r0.<software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslServerContext: void <init>(java.io.File,javax.net.ssl.TrustManagerFactory,java.io.File,java.io.File,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,software.amazon.awssdk.thirdparty.io.netty.handler.ssl.CipherSuiteFilter,software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator,long,long)>(varReplacer29916, r4, r1, r2, r3, varReplacer29916, r5, r6, r7, l0, l1)


	 in Method: void <init>(java.io.File,java.io.File,java.lang.String,javax.net.ssl.TrustManagerFactory,java.lang.Iterable,software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator,long,long)
		IncompleteOperationError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #a14a09cf41f3b877beab0cc043bd4912c80380c362bdf59041da9af6cf6fb23e)
			Operation on object of type javax.net.ssl.KeyManagerFactory object not completed. Expected call to init
			at statement: specialinvoke r0.<software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslServerContext: void <init>(java.io.File,javax.net.ssl.TrustManagerFactory,java.io.File,java.io.File,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,software.amazon.awssdk.thirdparty.io.netty.handler.ssl.CipherSuiteFilter,software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator,long,long)>(varReplacer29908, r4, r1, r2, r3, varReplacer29908, r5, varReplacer29908, r6, l0, l1)

		IncompleteOperationError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #e029ece63adde15e6e2f260bce04fca70816ac8c184fdbe4f90bf7aa3c8297f7)
			Operation on object of type javax.net.ssl.KeyManagerFactory object not completed. Expected call to init
			at statement: specialinvoke r0.<software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslServerContext: void <init>(java.io.File,javax.net.ssl.TrustManagerFactory,java.io.File,java.io.File,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,software.amazon.awssdk.thirdparty.io.netty.handler.ssl.CipherSuiteFilter,software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator,long,long)>(varReplacer29908, r4, r1, r2, r3, varReplacer29908, r5, varReplacer29908, r6, l0, l1)


	 in Method: void <init>(java.io.File,java.io.File,java.lang.String,java.lang.Iterable,software.amazon.awssdk.thirdparty.io.netty.handler.ssl.CipherSuiteFilter,software.amazon.awssdk.thirdparty.io.netty.handler.ssl.ApplicationProtocolConfig,long,long)
		IncompleteOperationError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #a14a09cf41f3b877beab0cc043bd4912c80380c362bdf59041da9af6cf6fb23e)
			Operation on object of type javax.net.ssl.KeyManagerFactory object not completed. Expected call to init
			at statement: specialinvoke r0.<software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslServerContext: void <init>(java.io.File,javax.net.ssl.TrustManagerFactory,java.io.File,java.io.File,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,software.amazon.awssdk.thirdparty.io.netty.handler.ssl.CipherSuiteFilter,software.amazon.awssdk.thirdparty.io.netty.handler.ssl.ApplicationProtocolConfig,long,long)>(varReplacer29911, varReplacer29911, r1, r2, r3, varReplacer29911, r4, r5, r6, l0, l1)

		IncompleteOperationError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #e029ece63adde15e6e2f260bce04fca70816ac8c184fdbe4f90bf7aa3c8297f7)
			Operation on object of type javax.net.ssl.KeyManagerFactory object not completed. Expected call to init
			at statement: specialinvoke r0.<software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslServerContext: void <init>(java.io.File,javax.net.ssl.TrustManagerFactory,java.io.File,java.io.File,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,software.amazon.awssdk.thirdparty.io.netty.handler.ssl.CipherSuiteFilter,software.amazon.awssdk.thirdparty.io.netty.handler.ssl.ApplicationProtocolConfig,long,long)>(varReplacer29911, varReplacer29911, r1, r2, r3, varReplacer29911, r4, r5, r6, l0, l1)


	 in Method: void <init>(java.io.File,java.io.File,java.lang.String,javax.net.ssl.TrustManagerFactory,java.lang.Iterable,software.amazon.awssdk.thirdparty.io.netty.handler.ssl.CipherSuiteFilter,software.amazon.awssdk.thirdparty.io.netty.handler.ssl.ApplicationProtocolConfig,long,long)
		IncompleteOperationError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #a14a09cf41f3b877beab0cc043bd4912c80380c362bdf59041da9af6cf6fb23e)
			Operation on object of type javax.net.ssl.KeyManagerFactory object not completed. Expected call to init
			at statement: specialinvoke r0.<software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslServerContext: void <init>(java.io.File,javax.net.ssl.TrustManagerFactory,java.io.File,java.io.File,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,software.amazon.awssdk.thirdparty.io.netty.handler.ssl.CipherSuiteFilter,software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator,long,long)>(varReplacer29914, r4, r1, r2, r3, varReplacer29914, r5, r6, $r8, l0, l1)

		IncompleteOperationError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #e029ece63adde15e6e2f260bce04fca70816ac8c184fdbe4f90bf7aa3c8297f7)
			Operation on object of type javax.net.ssl.KeyManagerFactory object not completed. Expected call to init
			at statement: specialinvoke r0.<software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslServerContext: void <init>(java.io.File,javax.net.ssl.TrustManagerFactory,java.io.File,java.io.File,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,software.amazon.awssdk.thirdparty.io.netty.handler.ssl.CipherSuiteFilter,software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator,long,long)>(varReplacer29914, r4, r1, r2, r3, varReplacer29914, r5, r6, $r8, l0, l1)


Findings in Java Class: software.amazon.awssdk.thirdparty.io.netty.handler.ssl.ReferenceCountedOpenSslClientContext

	 in Method: software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslSessionContext newSessionContext(software.amazon.awssdk.thirdparty.io.netty.handler.ssl.ReferenceCountedOpenSslContext,long,software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslEngineMap,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory)
		IncompleteOperationError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #a14a09cf41f3b877beab0cc043bd4912c80380c362bdf59041da9af6cf6fb23e)
			Operation on object of type javax.net.ssl.KeyManagerFactory object not completed. Expected call to init
			at statement: r29 = staticinvoke <software.amazon.awssdk.thirdparty.io.netty.handler.ssl.ReferenceCountedOpenSslClientContext: software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslKeyMaterialProvider providerFor(javax.net.ssl.KeyManagerFactory,java.lang.String)>(r52, r5)

		IncompleteOperationError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #e029ece63adde15e6e2f260bce04fca70816ac8c184fdbe4f90bf7aa3c8297f7)
			Operation on object of type javax.net.ssl.KeyManagerFactory object not completed. Expected call to init
			at statement: r29 = staticinvoke <software.amazon.awssdk.thirdparty.io.netty.handler.ssl.ReferenceCountedOpenSslClientContext: software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslKeyMaterialProvider providerFor(javax.net.ssl.KeyManagerFactory,java.lang.String)>(r52, r5)

		IncompleteOperationError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #e18c7b130c68f3e352f434020544f5fb2dccfe56485ea3f5fde9287f584df6b1)
			Operation on object of type javax.net.ssl.KeyManagerFactory object not completed. Expected call to init
			at statement: specialinvoke r43.<software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslCachingX509KeyManagerFactory: void <init>(javax.net.ssl.KeyManagerFactory)>($r18)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r27.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r12)


Findings in Java Class: software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslX509KeyManagerFactory

	 in Method: void <init>(java.lang.String,java.security.Provider)
		IncompleteOperationError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #a14a09cf41f3b877beab0cc043bd4912c80380c362bdf59041da9af6cf6fb23e)
			Operation on object of type javax.net.ssl.KeyManagerFactory object not completed. Expected call to init
			at statement: specialinvoke r0.<software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslX509KeyManagerFactory: void <init>(software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi)>($r3)

		IncompleteOperationError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #a14a09cf41f3b877beab0cc043bd4912c80380c362bdf59041da9af6cf6fb23e)
			Operation on object of type javax.net.ssl.KeyManagerFactory object not completed. Expected call to init
			at statement: specialinvoke r0.<software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslX509KeyManagerFactory: void <init>(software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi)>($r3)

		IncompleteOperationError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #e029ece63adde15e6e2f260bce04fca70816ac8c184fdbe4f90bf7aa3c8297f7)
			Operation on object of type javax.net.ssl.KeyManagerFactory object not completed. Expected call to init
			at statement: specialinvoke r0.<software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslX509KeyManagerFactory: void <init>(software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi)>($r3)

		IncompleteOperationError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #e029ece63adde15e6e2f260bce04fca70816ac8c184fdbe4f90bf7aa3c8297f7)
			Operation on object of type javax.net.ssl.KeyManagerFactory object not completed. Expected call to init
			at statement: specialinvoke r0.<software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslX509KeyManagerFactory: void <init>(software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi)>($r3)


	 in Method: void <init>(java.security.Provider)
		IncompleteOperationError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #a14a09cf41f3b877beab0cc043bd4912c80380c362bdf59041da9af6cf6fb23e)
			Operation on object of type javax.net.ssl.KeyManagerFactory object not completed. Expected call to init
			at statement: specialinvoke r0.<software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslX509KeyManagerFactory: void <init>(software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi)>($r2)

		IncompleteOperationError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #a14a09cf41f3b877beab0cc043bd4912c80380c362bdf59041da9af6cf6fb23e)
			Operation on object of type javax.net.ssl.KeyManagerFactory object not completed. Expected call to init
			at statement: specialinvoke r0.<software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslX509KeyManagerFactory: void <init>(software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi)>($r2)

		IncompleteOperationError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #e029ece63adde15e6e2f260bce04fca70816ac8c184fdbe4f90bf7aa3c8297f7)
			Operation on object of type javax.net.ssl.KeyManagerFactory object not completed. Expected call to init
			at statement: specialinvoke r0.<software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslX509KeyManagerFactory: void <init>(software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi)>($r2)

		IncompleteOperationError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #e029ece63adde15e6e2f260bce04fca70816ac8c184fdbe4f90bf7aa3c8297f7)
			Operation on object of type javax.net.ssl.KeyManagerFactory object not completed. Expected call to init
			at statement: specialinvoke r0.<software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslX509KeyManagerFactory: void <init>(software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi)>($r2)


Findings in Java Class: software.amazon.awssdk.thirdparty.io.netty.handler.ssl.ReferenceCountedOpenSslServerContext

	 in Method: software.amazon.awssdk.thirdparty.io.netty.handler.ssl.ReferenceCountedOpenSslServerContext$ServerContext newSessionContext(software.amazon.awssdk.thirdparty.io.netty.handler.ssl.ReferenceCountedOpenSslContext,long,software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslEngineMap,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory)
		IncompleteOperationError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #e7010f4fac0d248dc193b1aba5ac1877f751f61126a39d52910254207ad611ef)
			Operation on object of type javax.net.ssl.KeyManagerFactory object not completed. Expected call to init
			at statement: specialinvoke r55.<software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslCachingX509KeyManagerFactory: void <init>(javax.net.ssl.KeyManagerFactory)>($r28)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r39.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r24)

		IncompleteOperationError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #a14a09cf41f3b877beab0cc043bd4912c80380c362bdf59041da9af6cf6fb23e)
			Operation on object of type javax.net.ssl.KeyManagerFactory object not completed. Expected call to init
			at statement: r41 = staticinvoke <software.amazon.awssdk.thirdparty.io.netty.handler.ssl.ReferenceCountedOpenSslServerContext: software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslKeyMaterialProvider providerFor(javax.net.ssl.KeyManagerFactory,java.lang.String)>(r66, r5)

		IncompleteOperationError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #e029ece63adde15e6e2f260bce04fca70816ac8c184fdbe4f90bf7aa3c8297f7)
			Operation on object of type javax.net.ssl.KeyManagerFactory object not completed. Expected call to init
			at statement: r41 = staticinvoke <software.amazon.awssdk.thirdparty.io.netty.handler.ssl.ReferenceCountedOpenSslServerContext: software.amazon.awssdk.thirdparty.io.netty.handler.ssl.OpenSslKeyMaterialProvider providerFor(javax.net.ssl.KeyManagerFactory,java.lang.String)>(r66, r5)


Findings in Java Class: software.amazon.awssdk.thirdparty.io.netty.handler.ssl.JdkSslClientContext

	 in Method: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long)
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #f3309118fa377378664a99912900fcce104955aa087d269a022e92a79d1556b5)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r12 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer28789, r0)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #b858f9c89a038b18280b09a329777d41077a6ecf72992aff8821c01fe5a3db25)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r12 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer28786)


Findings in Java Class: software.amazon.awssdk.thirdparty.io.netty.handler.ssl.util.FingerprintTrustManagerFactory$1

	 in Method: java.security.MessageDigest initialValue()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #14b706efffdce5a9d75b31b01fd86a45a01cf73ddd847db7384fbab9de2f6bfb)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer28840)


Findings in Java Class: software.amazon.awssdk.thirdparty.io.netty.handler.ssl.util.SelfSignedCertificate

	 in Method: void <init>(java.lang.String,java.security.SecureRandom,int,java.util.Date,java.util.Date)
		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #8402263368401930c32bbe57b20721436abb9cc9ad8e549137cec69913b44ecd)
			First parameter (with value 1024) should be any of {4096, 3072, 2048}
			at statement: virtualinvoke r44.<java.security.KeyPairGenerator: void initialize(int,java.security.SecureRandom)>(i0, r2)


Findings in Java Class: software.amazon.awssdk.thirdparty.io.netty.handler.ssl.JdkSslServerContext

	 in Method: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long)
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #20f5416ce929f266da79da0d2367f5c74c53edd186e6605b613be0ae4fc73ad)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r15 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer28903, r0)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #549c6ee89abc69bb1b7b87f39d3c2649492003ad2163ad46087ac5e91ea52257)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r15 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer28899)


Findings in Java Class: software.amazon.awssdk.thirdparty.io.netty.handler.ssl.ReferenceCountedOpenSslEngine

	 in Method: void setClientAuth(software.amazon.awssdk.thirdparty.io.netty.handler.ssl.ClientAuth)
		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLEngine (on Object #6c319d7a075ff67b2a65fc572e9634e239252783aae602180cd74c19bda0533d)
			Operation on object of type software.amazon.awssdk.thirdparty.io.netty.handler.ssl.ReferenceCountedOpenSslEngine object not completed. Expected call to setEnabledCipherSuites, setEnabledProtocols
			at statement: r2 = r0


	 in Method: void <init>(software.amazon.awssdk.thirdparty.io.netty.handler.ssl.ReferenceCountedOpenSslContext,software.amazon.awssdk.thirdparty.io.netty.buffer.ByteBufAllocator,java.lang.String,int,boolean,boolean)
		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLEngine (on Object #6c319d7a075ff67b2a65fc572e9634e239252783aae602180cd74c19bda0533d)
			Operation on object of type software.amazon.awssdk.thirdparty.io.netty.handler.ssl.ReferenceCountedOpenSslEngine object not completed. Expected call to setEnabledCipherSuites, setEnabledProtocols
			at statement: r32 = r0


Findings in Java Class: software.amazon.awssdk.thirdparty.io.netty.handler.ssl.Java9SslUtils

	 in Method: void <clinit>()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r23.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer29433, varReplacer29433, varReplacer29433)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #6807d382eb24ec9afa4c772150e1fed322fe75d92d29752f286c09bb32349c09)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: r23 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer29432)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r23.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer29433, varReplacer29433, varReplacer29433)


Findings in Java Class: software.amazon.awssdk.thirdparty.io.netty.handler.ssl.JdkSslContext

	 in Method: void <clinit>()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer29510, varReplacer29510, varReplacer29510)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #d0f9b15b7bcc31fe271f00cfc0a520575aad8b6a0066eb93602574cdb8adf3da)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer29513)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer29510, varReplacer29510, varReplacer29510)


Findings in Java Class: software.amazon.awssdk.thirdparty.io.netty.handler.ssl.ConscryptAlpnSslEngine$ServerEngine

	 in Method: void <init>(javax.net.ssl.SSLEngine,software.amazon.awssdk.thirdparty.io.netty.buffer.ByteBufAllocator,software.amazon.awssdk.thirdparty.io.netty.handler.ssl.JdkApplicationProtocolNegotiator)
		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLEngine (on Object #3ef976940fde996d8da07e66af3563c3ad52e8b3e2d0eb1abf08c8dbc6ab2dc5)
			Operation on object of type software.amazon.awssdk.thirdparty.io.netty.handler.ssl.JdkSslEngine object not completed. Expected call to setEnabledCipherSuites, setEnabledProtocols
			at statement: staticinvoke <org.conscrypt.Conscrypt: void setHandshakeListener(javax.net.ssl.SSLEngine,org.conscrypt.HandshakeListener)>(r1, $r5)


Findings in Java Class: software.amazon.awssdk.thirdparty.io.netty.handler.ssl.ConscryptAlpnSslEngine$ClientEngine

	 in Method: void <init>(javax.net.ssl.SSLEngine,software.amazon.awssdk.thirdparty.io.netty.buffer.ByteBufAllocator,software.amazon.awssdk.thirdparty.io.netty.handler.ssl.JdkApplicationProtocolNegotiator)
		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLEngine (on Object #3ef976940fde996d8da07e66af3563c3ad52e8b3e2d0eb1abf08c8dbc6ab2dc5)
			Operation on object of type software.amazon.awssdk.thirdparty.io.netty.handler.ssl.JdkSslEngine object not completed. Expected call to setEnabledCipherSuites, setEnabledProtocols
			at statement: staticinvoke <org.conscrypt.Conscrypt: void setHandshakeListener(javax.net.ssl.SSLEngine,org.conscrypt.HandshakeListener)>(r1, $r5)


Findings in Java Class: software.amazon.awssdk.services.sqs.MessageMD5ChecksumInterceptor

	 in Method: java.lang.String calculateMessageAttributesMd5(java.util.Map)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #be76fa74a3691d76d390819813a4a4e24fb86a8b982486830fb847dc006f9a2e)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer59526)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #be76fa74a3691d76d390819813a4a4e24fb86a8b982486830fb847dc006f9a2e)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r8 = virtualinvoke r2.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: software.amazon.awssdk.thirdparty.org.apache.commons.codec.digest.DigestUtils

	 in Method: java.security.MessageDigest getDigest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r0)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r0)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			First parameter (with value "MD2") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r0)


	 in Method: byte[] digest(java.security.MessageDigest,java.io.InputStream)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()


	 in Method: java.security.MessageDigest getShaDigest()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: return $r0


Findings in Java Class: software.amazon.awssdk.thirdparty.org.apache.commons.codec.digest.Sha2Crypt

	 in Method: java.lang.String sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: r30 = virtualinvoke r29.<java.security.MessageDigest: byte[] digest()>()

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: r32 = virtualinvoke r31.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: software.amazon.awssdk.thirdparty.org.apache.commons.codec.digest.Md5Crypt

	 in Method: java.lang.String md5Crypt(byte[],java.lang.String,java.lang.String)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: r34 = virtualinvoke r31.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: software.amazon.awssdk.thirdparty.org.apache.commons.codec.digest.HmacUtils

	 in Method: javax.crypto.Mac getInitializedMac(java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, r0)


Findings in Java Class: software.amazon.awssdk.auth.signer.internal.AwsChunkedEncodingInputStream

	 in Method: void <init>(java.io.InputStream,int,byte[],java.lang.String,java.lang.String,java.lang.String,software.amazon.awssdk.auth.signer.AwsS3V4Signer)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, r20)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 161

	CogniCrypt found the following violations. For details see description above.
	TypestateError: 12
	NeverTypeOfError: 8
	RequiredPredicateError: 27
	ForbiddenMethodError: 3
	IncompleteOperationError: 46
	ConstraintError: 32
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 192 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 22.81 min
