[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 564.3 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 5 analysis seeds within 0 seconds!
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.CompressorInputStream: void count(int)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.utils.CountingInputStream: void count(long)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.CompressorInputStream: void count(int)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.CompressorInputStream: void count(int)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.CompressorInputStream: void count(int)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.CompressorInputStream: void count(int)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: void count(long)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.tar.TarArchiveInputStream: byte[] readRecord()> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: void count(long)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.tar.TarArchiveInputStream: boolean isAtEOF()> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: void count(long)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: long getBytesRead()> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: long getBytesRead()> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: long getBytesRead()> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: void count(int)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: void count(long)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.tar.TarArchiveInputStream: boolean isEOFRecord(byte[])> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.tar.TarArchiveInputStream: void setAtEOF(boolean)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.tar.TarArchiveInputStream: boolean isAtEOF()> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: void pushedBackBytes(long)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.tar.TarArchiveInputStream: boolean isEOFRecord(byte[])> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: void pushedBackBytes(long)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: long getBytesRead()> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.tar.TarArchiveInputStream: byte[] getLongNameData()> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.tar.TarArchiveInputStream: byte[] getLongNameData()> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.tar.TarArchiveInputStream: java.util.Map parsePaxHeaders(java.io.InputStream)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.tar.TarArchiveInputStream: java.util.Map parsePaxHeaders(java.io.InputStream)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: void count(long)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.tar.TarArchiveInputStream: boolean isAtEOF()> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.tar.TarArchiveInputStream: org.apache.commons.compress.archivers.tar.TarArchiveEntry getNextTarEntry()> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: void count(int)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.tar.TarArchiveInputStream: void setAtEOF(boolean)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: void count(int)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: long getBytesRead()> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: long getBytesRead()> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: long getBytesRead()> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: long getBytesRead()> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: long getBytesRead()> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: long getBytesRead()> for class java.io.BufferedInputStream
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 5
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.2

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 5
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.4

[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.CompressorInputStream: void count(int)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: void count(long)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.CompressorInputStream: void count(int)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.CompressorInputStream: void count(long)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.CompressorInputStream: void count(int)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.CompressorInputStream: void count(int)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: void pushedBackBytes(long)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: void count(int)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: void count(int)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.utils.CountingInputStream: void count(long)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.CompressorInputStream: void count(int)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: void count(int)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: void count(long)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: long getBytesRead()> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.tar.TarArchiveInputStream: boolean isAtEOF()> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: void count(int)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.tar.TarArchiveInputStream: void setAtEOF(boolean)> for class java.io.ByteArrayInputStream
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 5
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.6

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 6
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 7
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.71

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 7
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.86

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: varReplacer2722
		Type: java.lang.String
		Statement: specialinvoke $r18.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r51, varReplacer2722)
		Method: <org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder$1: javax.crypto.CipherInputStream init()>
		SHA-256: 2904dcd37295b6c3874dad932b8f97a8f41684e187f88dca216e507f25790841
		Secure: false
	Object:
		Variable: $r19
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r19.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r2)
		Method: <org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder$1: javax.crypto.CipherInputStream init()>
		SHA-256: 3a43c06bc49e5c23951d328d303d46655a0cd667466c8e4f20ffdbd14765846f
		Secure: false
	Object:
		Variable: $r20
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r20.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r21, r56)
		Method: <org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder$1: javax.crypto.CipherInputStream init()>
		SHA-256: ea5b0f2b31f02cd801a913bc31f8afe10fb1556d7f5c9f9b83282d2aef0ac05f
		Secure: false
	Object:
		Variable: r51
		Type: byte[]
		Statement: r51 = virtualinvoke r52.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder$1: javax.crypto.CipherInputStream init()>
		SHA-256: 5b227757f4d1e2189ebc54aee9b7fa4c8dd851876e5a861e4397d7a8fed935cc
		Secure: true
	Object:
		Variable: r56
		Type: javax.crypto.Cipher
		Statement: r56 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2730)
		Method: <org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder$1: javax.crypto.CipherInputStream init()>
		SHA-256: a31f35272a25535a2a2bceb80398dbec4b159a52e3ab8764488ab14a27c77b0b
		Secure: false
	Object:
		Variable: r52
		Type: java.security.MessageDigest
		Statement: r52 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2717)
		Method: <org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder$1: javax.crypto.CipherInputStream init()>
		SHA-256: 9a0e1280c0f7b0086e56bb919a724e686b4f8f3a487234bf39e15186e88e45d2
		Secure: false
	Object:
		Variable: $r18
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r18.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r51, varReplacer2722)
		Method: <org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder$1: javax.crypto.CipherInputStream init()>
		SHA-256: 736ee4a1c0045a77d07b048d480230682fe629618effcde38d7bb98aeb84b367
		Secure: false

Findings in Java Class: org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder$1

	 in Method: javax.crypto.CipherInputStream init()
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #9a0e1280c0f7b0086e56bb919a724e686b4f8f3a487234bf39e15186e88e45d2)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: r51 = virtualinvoke r52.<java.security.MessageDigest: byte[] digest()>()

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r18.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r51, varReplacer2722)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r19.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #a31f35272a25535a2a2bceb80398dbec4b159a52e3ab8764488ab14a27c77b0b)
			First parameter (with value "AES/CBC/NoPadding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: r56 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2730)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #a31f35272a25535a2a2bceb80398dbec4b159a52e3ab8764488ab14a27c77b0b)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: specialinvoke $r20.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r21, r56)


Findings in Java Class: org.apache.commons.compress.archivers.zip.ZipArchiveInputStream

	 in Method: int read(byte[],int,int)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #ea5b0f2b31f02cd801a913bc31f8afe10fb1556d7f5c9f9b83282d2aef0ac05f)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read, close
			at statement: $z1 = specialinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveInputStream: boolean supportsDataDescriptorFor(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)>($r6)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #ea5b0f2b31f02cd801a913bc31f8afe10fb1556d7f5c9f9b83282d2aef0ac05f)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read, close
			at statement: $z2 = specialinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveInputStream: boolean supportsCompressedSizeFor(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)>($r8)


	 in Method: int readDeflated(byte[],int,int)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #ea5b0f2b31f02cd801a913bc31f8afe10fb1556d7f5c9f9b83282d2aef0ac05f)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read, close
			at statement: i2 = specialinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveInputStream: int readFromInflater(byte[],int,int)>(r1, i0, i1)


	 in Method: void realSkip(long)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #ea5b0f2b31f02cd801a913bc31f8afe10fb1556d7f5c9f9b83282d2aef0ac05f)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to java.io.InputStream: int read(byte[],int,int), javax.crypto.CipherInputStream: int read(), java.io.InputStream: int read(byte[]), java.io.FilterInputStream: int read(byte[],int,int), java.io.InputStream: int read(), javax.crypto.CipherInputStream: int read(byte[]), java.io.FilterInputStream: int read(byte[]), java.io.FilterInputStream: int read(), javax.crypto.CipherInputStream: int read(byte[],int,int)
			at statement: i2 = virtualinvoke $r5.<java.io.InputStream: int read(byte[],int,int)>($r4, varReplacer1282, $i9)


	 in Method: void readStoredEntry()
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #ea5b0f2b31f02cd801a913bc31f8afe10fb1556d7f5c9f9b83282d2aef0ac05f)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read, close
			at statement: i10 = specialinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveInputStream: int cacheBytesRead(java.io.ByteArrayOutputStream,int,int,int)>(r1, i10, i12, b0)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #ea5b0f2b31f02cd801a913bc31f8afe10fb1556d7f5c9f9b83282d2aef0ac05f)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read, close
			at statement: z1 = specialinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveInputStream: boolean bufferContainsSignature(java.io.ByteArrayOutputStream,int,int,int)>(r1, i10, i12, b0)


Findings in Java Class: org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream

	 in Method: int read(byte[],int,int)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #ea5b0f2b31f02cd801a913bc31f8afe10fb1556d7f5c9f9b83282d2aef0ac05f)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read, close
			at statement: virtualinvoke r0.<org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream: void count(int)>(i0)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #ea5b0f2b31f02cd801a913bc31f8afe10fb1556d7f5c9f9b83282d2aef0ac05f)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read, close
			at statement: $z4 = specialinvoke r0.<org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream: boolean init(boolean)>(varReplacer1755)


Findings in Java Class: org.apache.commons.compress.compressors.lzma.LZMACompressorInputStream

	 in Method: int read(byte[],int,int)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #ea5b0f2b31f02cd801a913bc31f8afe10fb1556d7f5c9f9b83282d2aef0ac05f)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to java.io.InputStream: int read(byte[],int,int), javax.crypto.CipherInputStream: int read(), java.io.InputStream: int read(byte[]), java.io.FilterInputStream: int read(byte[],int,int), java.io.InputStream: int read(), javax.crypto.CipherInputStream: int read(byte[]), java.io.FilterInputStream: int read(byte[]), java.io.FilterInputStream: int read(), javax.crypto.CipherInputStream: int read(byte[],int,int)
			at statement: i2 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>(r1, i0, i1)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 7

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 1
	IncompleteOperationError: 10
	TypestateError: 1
	RequiredPredicateError: 2
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 46 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 49.18 s

