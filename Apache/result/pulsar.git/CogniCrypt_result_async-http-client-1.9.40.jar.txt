[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 652.2 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 19 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 19
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.05

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 19
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.11

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 19
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.16

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 21
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.19

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.22

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 27
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.22

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 29
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.24

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.27

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 31
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.29

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.3

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 35
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.31

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 36
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 36
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.36

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 14 of 36
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.39

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 15 of 37
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.41

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 16 of 39
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.41

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 17 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.41

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 18 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.44

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 19 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.46

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 20 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.49

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 21 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.51

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 22 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.54

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 23 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.56

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 24 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.59

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 25 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.61

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 26 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.63

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 27 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.66

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 28 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.68

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 29 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.71

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 30 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.73

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 31 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.76

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 32 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.78

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 33 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.8

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 34 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.83

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 35 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.85

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 36 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.88

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 37 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.9

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 38 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.93

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 39 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.95

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 40 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.98

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r17
		Type: javax.crypto.Cipher
		Statement: r17 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer730)
		Method: <com.ning.http.client.ntlm.NTLMEngine$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: f4d3f67d1f2b1717635525b370a5e6c1f094df1ae25bfa99235f54d46706eba6
		Secure: false
	Object:
		Variable: varReplacer900
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer900)
		Method: <com.ning.http.client.ntlm.NTLMEngine: java.security.Key createDESKey(byte[],int)>
		SHA-256: 518e5d32c9f39b08aa9a26a7710d243c9c13ae66839f73e723aaff7d0380de2b
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer900)
		Method: <com.ning.http.client.ntlm.NTLMEngine: java.security.Key createDESKey(byte[],int)>
		SHA-256: 7af2f1d4739cb2d973b2f80d3aa0bee2aa9577826d31f78aeba0b35b72b98bba
		Secure: false
	Object:
		Variable: r8
		Type: javax.net.ssl.SSLContext
		Statement: r8 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2664)
		Method: <com.ning.http.util.SslUtils: javax.net.ssl.SSLContext looseTrustManagerSSLContext()>
		SHA-256: aae18fb653b769da9aad191f12224a477bd9b3442893abe5c594f0389fb6de52
		Secure: false
	Object:
		Variable: $r13
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r4, varReplacer971)
		Method: <com.ning.http.client.oauth.ThreadSafeHMAC: void <init>(com.ning.http.client.oauth.ConsumerKey,com.ning.http.client.oauth.RequestToken)>
		SHA-256: dd4ead6a040feeabbd0d0feda0ef42073aa0edef5f952d40580ed2c2e733ecd6
		Secure: false
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r1 = virtualinvoke r4.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <com.ning.http.client.providers.netty.ws.WebSocketUtils: byte[] sha1(byte[])>
		SHA-256: f029cf889818b084b3408323cb543b03816f0896fbc8aceac7d6d85a3a0f0f26
		Secure: false
	Object:
		Variable: r5
		Type: byte[]
		Statement: r5 = virtualinvoke r18.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r3)
		Method: <com.ning.http.client.ntlm.NTLMEngine$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: aa5353ee4452b030972e34dc7e0c077967e01c6d78da008986a3c9fd8de60249
		Secure: false
	Object:
		Variable: r5
		Type: byte[]
		Statement: r5 = virtualinvoke r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r11)
		Method: <com.ning.http.client.ntlm.NTLMEngine: byte[] lmHash(java.lang.String)>
		SHA-256: a269dcd1e86585d3b2c9afc6cf3677cdf2fd38f2472e6e23a72c1095ba8245d4
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer735)
		Method: <com.ning.http.client.ntlm.NTLMEngine$HMACMD5: void <init>(byte[])>
		SHA-256: 48595c2e2f12f16f57a9fa45ce90ce937d721045665a6201d196ecf1652f7706
		Secure: false
	Object:
		Variable: r10
		Type: java.security.MessageDigest
		Statement: r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer847)
		Method: <com.ning.http.client.ntlm.NTLMEngine: byte[] ntlm2SessionResponse(byte[],byte[],byte[])>
		SHA-256: 93c976a5647fa2d0e9ec2ad703d5be0623fa9ddbc6f25d42c1460759c52c11f6
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer845)
		Method: <com.ning.http.client.ntlm.NTLMEngine: byte[] RC4(byte[],byte[])>
		SHA-256: a69102c4d992099cfff2a0846e4ed6b91e2e4599c465a4a984afc445d0226c8e
		Secure: false
	Object:
		Variable: r21
		Type: byte[]
		Statement: r21 = virtualinvoke $r13.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.ning.http.client.ntlm.NTLMEngine$HMACMD5: void <init>(byte[])>
		SHA-256: 798fb3e7da4699d367d37887969ca9f204c8fe01a1a70d74a7b9e96fa77b9fa9
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: r6 = virtualinvoke r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r1)
		Method: <com.ning.http.client.ntlm.NTLMEngine: byte[] lmResponse(byte[],byte[])>
		SHA-256: bd6ab2840d512e39334cd0c2df7f05ddc923e7402ab1e58da7098f243ce0ee18
		Secure: false
	Object:
		Variable: r12
		Type: java.security.SecureRandom
		Statement: specialinvoke r12.<java.security.SecureRandom: void <init>()>()
		Method: <com.ning.http.util.SslUtils: javax.net.ssl.SSLContext looseTrustManagerSSLContext()>
		SHA-256: 78e58e6d93cb703f25fed36d555c3f0fd57afe07474c05462470c70292cb0ada
		Secure: true
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r1 = virtualinvoke r4.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <com.ning.http.client.providers.netty.ws.WebSocketUtils: byte[] md5(byte[])>
		SHA-256: 255c42bda76696cef20743ff59fc2df030f28315b212eac2d03667fcacd0d59a
		Secure: false
	Object:
		Variable: varReplacer845
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer845)
		Method: <com.ning.http.client.ntlm.NTLMEngine: byte[] RC4(byte[],byte[])>
		SHA-256: 2d25cc9465d1f6f5a936d40b4289cb370e4056d48d9fe9d059ebe5308675f7e
		Secure: false
	Object:
		Variable: r15
		Type: java.security.SecureRandom
		Statement: r15 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer904)
		Method: <com.ning.http.client.ntlm.NTLMEngine: void <clinit>()>
		SHA-256: a47d0a08a2257ad083233f817a4d0a31a77e001b0d29ac0b00848f2292999d83
		Secure: true
	Object:
		Variable: r5
		Type: javax.crypto.Cipher
		Statement: r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer883)
		Method: <com.ning.http.client.ntlm.NTLMEngine: byte[] lmResponse(byte[],byte[])>
		SHA-256: c2a4bed2cf428e579f87ce24241d67ba0c60c36ffcc52c43466cb2226d28d187
		Secure: false
	Object:
		Variable: r3
		Type: byte[]
		Statement: r3 = virtualinvoke r10.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.ning.http.client.ntlm.NTLMEngine: byte[] ntlm2SessionResponse(byte[],byte[],byte[])>
		SHA-256: cde9dd74346a7fde1ccde6b6dbd2cc35ae2bbdc8021f3fc387f8d1101ba8df3f
		Secure: false
	Object:
		Variable: r4
		Type: byte[]
		Statement: r4 = virtualinvoke r17.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r3)
		Method: <com.ning.http.client.ntlm.NTLMEngine$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: 1070351e8d5c09b56546611ecd41f6a98e84826df51c3437ec79263c84ab93f4
		Secure: false
	Object:
		Variable: r3
		Type: byte[]
		Statement: r4 = virtualinvoke r17.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r3)
		Method: <com.ning.http.client.ntlm.NTLMEngine$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: c9def1fc98f3e0f6b2f976dc8e8b38eeb42df3faa0b8904f87c308b3544e5c69
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke r4.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <com.ning.http.client.providers.netty.ws.WebSocketUtils: byte[] sha1(byte[])>
		SHA-256: 3e0edba0fd42722b87eab4928a18bc94b9e05c09e9642626d1c63376d11c5fef
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke r4.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <com.ning.http.client.providers.netty.ws.WebSocketUtils: byte[] md5(byte[])>
		SHA-256: 30366f0bdf226c52705279d85be74ed6bde549c99f5b6fa0018070867b3726c3
		Secure: false
	Object:
		Variable: r27
		Type: java.security.SecureRandom
		Statement: specialinvoke r27.<java.security.SecureRandom: void <init>()>()
		Method: <com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider: void main(java.lang.String[])>
		SHA-256: 43a51db865a9bb4b3acccc0eaeef1311eea0a99b295cabadce09859ffc584013
		Secure: true
	Object:
		Variable: r4
		Type: java.security.MessageDigest
		Statement: r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2382)
		Method: <com.ning.http.client.providers.netty.ws.WebSocketUtils: byte[] md5(byte[])>
		SHA-256: 4fb741cbf79d3f7b3828dd7b08b53542fcfd7c77086edfc7c7cfcd228b04eefc
		Secure: false
	Object:
		Variable: r3
		Type: byte[]
		Statement: r5 = virtualinvoke r18.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r3)
		Method: <com.ning.http.client.ntlm.NTLMEngine$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: 60ecd8b3721fa03578ef1834ba6c94551a4aea2502c5464f09d1e50d5f68107f
		Secure: false
	Object:
		Variable: r7
		Type: javax.crypto.Cipher
		Statement: r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer844)
		Method: <com.ning.http.client.ntlm.NTLMEngine: byte[] RC4(byte[],byte[])>
		SHA-256: 893a15a04e775907f29d4e290881206cfcb976dc7a53ba4691415a6d45925780
		Secure: false
	Object:
		Variable: r4
		Type: java.security.MessageDigest
		Statement: r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2384)
		Method: <com.ning.http.client.providers.netty.ws.WebSocketUtils: byte[] sha1(byte[])>
		SHA-256: c7923665696ab25aac7dc7ace961e60bcffa199ef5047aa837408a6e07539e28
		Secure: false
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r3 = virtualinvoke r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r0)
		Method: <com.ning.http.client.ntlm.NTLMEngine: byte[] RC4(byte[],byte[])>
		SHA-256: e464a94471e22f4ca59c6f7deb3d03b3bdebb7f4d2b529cc654c559a723e5e1c
		Secure: false
	Object:
		Variable: r18
		Type: javax.crypto.Cipher
		Statement: r18 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer718)
		Method: <com.ning.http.client.ntlm.NTLMEngine$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: e6a697e19b1295cb27067d1d865a6d9050832df177865a437011246e2c7d57b2
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r0)
		Method: <com.ning.http.client.ntlm.NTLMEngine: byte[] RC4(byte[],byte[])>
		SHA-256: 8753042ece2efacfa375c3108aee673622e64963a556c6fe2b6d65c7157e9208
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>(r1)
		Method: <com.ning.http.client.ntlm.NTLMEngine$HMACMD5: byte[] getOutput()>
		SHA-256: 99b0649cc949d2e3ffd635b673790ed58bd61f6647e4ebec532f022333d3d8fe
		Secure: false
	Object:
		Variable: $r14
		Type: javax.crypto.Mac
		Statement: $r14 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer970)
		Method: <com.ning.http.client.oauth.ThreadSafeHMAC: void <init>(com.ning.http.client.oauth.ConsumerKey,com.ning.http.client.oauth.RequestToken)>
		SHA-256: 48749db6c6c0408793436fd5e234122e61dbdeef92685b2c4355dc59cf3db1fc
		Secure: false
	Object:
		Variable: r16
		Type: javax.net.ssl.SSLContext
		Statement: r16 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer5)
		Method: <com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider: void main(java.lang.String[])>
		SHA-256: 2b8ab8db2a5f1f2895ef3f25875a6ea69cf76eae48ad86a668163005da56af75
		Secure: false
	Object:
		Variable: varReplacer971
		Type: java.lang.String
		Statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r4, varReplacer971)
		Method: <com.ning.http.client.oauth.ThreadSafeHMAC: void <init>(com.ning.http.client.oauth.ConsumerKey,com.ning.http.client.oauth.RequestToken)>
		SHA-256: 48bfad496c24a3c84181eae68d49e941e45701ebd2ccad52f18c3236bff44125
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.ning.http.client.ntlm.NTLMEngine$HMACMD5: byte[] getOutput()>
		SHA-256: 2cf17cd0d2c68959db744882ce686872637f4af0b78b02f34b1bb2557f9a3b0f
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer208)
		Method: <com.ning.http.client.Realm$RealmBuilder$1: java.security.MessageDigest initialValue()>
		SHA-256: d2dc4d979a4afc1a221f429d71e4d1099a852e889236e69427fbe43fc61daa2b
		Secure: false
	Object:
		Variable: r4
		Type: javax.crypto.Cipher
		Statement: r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer860)
		Method: <com.ning.http.client.ntlm.NTLMEngine: byte[] lmHash(java.lang.String)>
		SHA-256: 52703eb2446a38f677bbc4f93cdf7073cb21a63c7e0f70aa52f49928037af489
		Secure: false
	Object:
		Variable: $r11
		Type: byte[]
		Statement: r5 = virtualinvoke r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r11)
		Method: <com.ning.http.client.ntlm.NTLMEngine: byte[] lmHash(java.lang.String)>
		SHA-256: d73c9a2d9728bcbf6b9e9b8ee8fe98f4016d476bd0129a55a0a6c182c16781af
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: $r6 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>(r1)
		Method: <com.ning.http.client.ntlm.NTLMEngine$HMACMD5: byte[] getOutput()>
		SHA-256: f44d77923bb6ac45ea69b70559910c68782cc85ec0e6069a6fe5180a0b331c57
		Secure: false
	Object:
		Variable: r6
		Type: byte[]
		Statement: r6 = virtualinvoke r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r1)
		Method: <com.ning.http.client.ntlm.NTLMEngine: byte[] lmResponse(byte[],byte[])>
		SHA-256: b3b41d29af2b1ac0db53274baef126603fecc571cc7a4aa1d56ef82d4d136ba2
		Secure: false

Findings in Java Class: com.ning.http.util.SslUtils

	 in Method: javax.net.ssl.SSLContext getSSLContext(com.ning.http.client.AsyncHttpClientConfig)
		ForbiddenMethodError violating CrySL rule for javax.net.ssl.SSLContext
			Detected call to forbidden method javax.net.ssl.SSLContext getDefault() of class javax.net.ssl.SSLContext. Instead, call method <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>.
			at statement: $r9 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getDefault()>()


	 in Method: javax.net.ssl.SSLContext looseTrustManagerSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #aae18fb653b769da9aad191f12224a477bd9b3442893abe5c594f0389fb6de52)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: r8 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2664)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r8.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2665, r15, r12)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r8.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2665, r15, r12)


Findings in Java Class: com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider

	 in Method: void main(java.lang.String[])
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r16.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1, varReplacer1, r1)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r16.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1, varReplacer1, r1)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #2b8ab8db2a5f1f2895ef3f25875a6ea69cf76eae48ad86a668163005da56af75)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: r16 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer5)


Findings in Java Class: com.ning.http.client.Realm$RealmBuilder$1

	 in Method: java.security.MessageDigest initialValue()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #d2dc4d979a4afc1a221f429d71e4d1099a852e889236e69427fbe43fc61daa2b)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer208)


	 in Method: java.lang.Object initialValue()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #d2dc4d979a4afc1a221f429d71e4d1099a852e889236e69427fbe43fc61daa2b)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: return $r1


Findings in Java Class: com.ning.http.client.ntlm.NTLMEngine$CipherGen

	 in Method: byte[] getLanManagerSessionKey()
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #f4d3f67d1f2b1717635525b370a5e6c1f094df1ae25bfa99235f54d46706eba6)
			First parameter (with value "DES/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r17 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer730)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r17.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer728, r1)


Findings in Java Class: com.ning.http.client.ntlm.NTLMEngine$HMACMD5

	 in Method: void <init>(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #48595c2e2f12f16f57a9fa45ce90ce937d721045665a6201d196ecf1652f7706)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer735)


Findings in Java Class: com.ning.http.client.ntlm.NTLMEngine

	 in Method: byte[] RC4(byte[],byte[])
		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #a69102c4d992099cfff2a0846e4ed6b91e2e4599c465a4a984afc445d0226c8e)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer845)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer845)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #a69102c4d992099cfff2a0846e4ed6b91e2e4599c465a4a984afc445d0226c8e)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer845)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer846, $r2)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #a69102c4d992099cfff2a0846e4ed6b91e2e4599c465a4a984afc445d0226c8e)
			Second parameter (with value "RC4") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer845)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #893a15a04e775907f29d4e290881206cfcb976dc7a53ba4691415a6d45925780)
			First parameter (with value "RC4") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer844)


	 in Method: byte[] ntlm2SessionResponse(byte[],byte[],byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #93c976a5647fa2d0e9ec2ad703d5be0623fa9ddbc6f25d42c1460759c52c11f6)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer847)


	 in Method: byte[] lmHash(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer861, r3)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #52703eb2446a38f677bbc4f93cdf7073cb21a63c7e0f70aa52f49928037af489)
			Unexpected call to method init on object of type javax.crypto.Cipher.
			at statement: virtualinvoke r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer861, r3)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #52703eb2446a38f677bbc4f93cdf7073cb21a63c7e0f70aa52f49928037af489)
			First parameter (with value "DES/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer860)


	 in Method: byte[] lmResponse(byte[],byte[])
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #c2a4bed2cf428e579f87ce24241d67ba0c60c36ffcc52c43466cb2226d28d187)
			Unexpected call to method init on object of type javax.crypto.Cipher.
			at statement: virtualinvoke r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer868, r3)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #c2a4bed2cf428e579f87ce24241d67ba0c60c36ffcc52c43466cb2226d28d187)
			First parameter (with value "DES/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer883)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer882, r4)


	 in Method: java.security.Key createDESKey(byte[],int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer900)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #7af2f1d4739cb2d973b2f80d3aa0bee2aa9577826d31f78aeba0b35b72b98bba)
			Second parameter (with value "DES") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer900)


Findings in Java Class: com.ning.http.client.oauth.OAuthSignatureCalculator

	 in Method: void <init>(com.ning.http.client.oauth.ConsumerKey,com.ning.http.client.oauth.RequestToken)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #48749db6c6c0408793436fd5e234122e61dbdeef92685b2c4355dc59cf3db1fc)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: specialinvoke $r3.<com.ning.http.client.oauth.ThreadSafeHMAC: void <init>(com.ning.http.client.oauth.ConsumerKey,com.ning.http.client.oauth.RequestToken)>(r1, r2)


Findings in Java Class: com.ning.http.client.oauth.ThreadSafeHMAC

	 in Method: void <init>(com.ning.http.client.oauth.ConsumerKey,com.ning.http.client.oauth.RequestToken)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r4, varReplacer971)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #dd4ead6a040feeabbd0d0feda0ef42073aa0edef5f952d40580ed2c2e733ecd6)
			Second parameter (with value "HmacSHA1") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r4, varReplacer971)


Findings in Java Class: com.ning.http.client.providers.netty.ws.WebSocketUtils

	 in Method: byte[] md5(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #4fb741cbf79d3f7b3828dd7b08b53542fcfd7c77086edfc7c7cfcd228b04eefc)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2382)


	 in Method: byte[] sha1(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #c7923665696ab25aac7dc7ace961e60bcffa199ef5047aa837408a6e07539e28)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2384)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 41

	CogniCrypt found the following violations. For details see description above.
	NeverTypeOfError: 2
	ForbiddenMethodError: 1
	TypestateError: 2
	ConstraintError: 14
	IncompleteOperationError: 2
	RequiredPredicateError: 11
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 11 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 14.05 s

