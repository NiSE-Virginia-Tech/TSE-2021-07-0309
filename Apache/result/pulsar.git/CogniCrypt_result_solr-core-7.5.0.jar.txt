[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 1.703 s 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 14 analysis seeds within 4 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 15
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.07

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 16
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.13

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 20
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.15

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 20
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.2

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 20
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.25

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 21
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.29

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.3

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 24
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 26
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.35

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 26
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.38

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 28
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.39

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.4

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 31
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.42

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 14 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.42

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 15 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.45

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 16 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.48

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 17 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.52

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 18 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.55

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 19 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.58

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 20 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.61

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 21 of 35
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.6

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 22 of 35
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.63

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 23 of 35
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.66

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 24 of 35
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.69

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 25 of 35
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.71

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 26 of 35
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.74

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 27 of 35
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.77

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 28 of 35
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.8

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 29 of 35
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.83

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 30 of 35
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.86

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 31 of 35
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.89

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 32 of 35
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.91

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 33 of 35
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.94

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 34 of 35
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.97

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: specialinvoke $r5.<java.security.SecureRandom: void <init>()>()
		Method: <org.apache.solr.security.Sha256AuthenticationProvider: java.lang.String getSaltedHashedValue(java.lang.String)>
		SHA-256: 6368930287c1211d09eeefe333d01e124324782f434d6f917f35a92458034827
		Secure: true
	Object:
		Variable: $r98
		Type: byte[]
		Statement: $r98 = virtualinvoke r95.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.solr.handler.BlobHandler: void handleRequestBody(org.apache.solr.request.SolrQueryRequest,org.apache.solr.response.SolrQueryResponse)>
		SHA-256: d4be91ba6ed474585f39a93d815e3719f7a1ffd1e423c602e20b60f40f3bdbf9
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke r8.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r3, $i0, $i1)
		Method: <org.apache.solr.util.CryptoKeys$RSAKeyPair: byte[] encrypt(java.nio.ByteBuffer)>
		SHA-256: 9d02d868fa5c729d900ecd0e8f24ab51f351e720c51fbc5134f5847b404693a6
		Secure: false
	Object:
		Variable: r15
		Type: java.security.KeyPair
		Statement: r15 = virtualinvoke r13.<java.security.KeyPairGenerator: java.security.KeyPair genKeyPair()>()
		Method: <org.apache.solr.util.CryptoKeys$RSAKeyPair: void <init>()>
		SHA-256: 14ca49ae590c38a7a1acaa685753defb2aef1b2b3105b6d248d005b5ed336194
		Secure: true
	Object:
		Variable: z1
		Type: boolean
		Statement: z1 = virtualinvoke r6.<java.security.Signature: boolean verify(byte[])>(r1)
		Method: <org.apache.solr.util.CryptoKeys: boolean verify(java.security.PublicKey,byte[],java.nio.ByteBuffer)>
		SHA-256: 982f5e101a03e364dcd1f31720d78ba347c153fc4f45c197bdd4f71fe730498a
		Secure: false
	Object:
		Variable: r95
		Type: java.security.MessageDigest
		Statement: r95 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7442)
		Method: <org.apache.solr.handler.BlobHandler: void handleRequestBody(org.apache.solr.request.SolrQueryRequest,org.apache.solr.response.SolrQueryResponse)>
		SHA-256: e44111a47cca052e430cb85ee029dc62b51f2c4a7ece5abc337f34f001981f5e
		Secure: false
	Object:
		Variable: r13
		Type: java.security.KeyPairGenerator
		Statement: r13 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer27613)
		Method: <org.apache.solr.util.CryptoKeys$RSAKeyPair: void <init>()>
		SHA-256: d8e0185874f5e83e90f3d74e2c77828d6ae7b6417e8102ccc2b90c1ce36f2ca4
		Secure: true
	Object:
		Variable: $r14
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r14.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r15)
		Method: <org.apache.solr.util.CryptoKeys: java.lang.String decodeAES(java.lang.String,java.lang.String,int)>
		SHA-256: f87a04c04cefcb6820d4b3f4bbba7d1271a145b33f48beb5b53fe875f25b5300
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>(r0, varReplacer27643, $i0)
		Method: <org.apache.solr.util.CryptoKeys: byte[] decryptRSA(byte[],java.security.PublicKey)>
		SHA-256: ea533956245e113f9a1d66793425b2fd822b067a1d9247f36ea1eef44c2e081a
		Secure: false
	Object:
		Variable: r4
		Type: byte[]
		Statement: r10 = virtualinvoke r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r4)
		Method: <org.apache.solr.util.CryptoKeys: java.lang.String decodeAES(java.lang.String,java.lang.String,int)>
		SHA-256: 2986eda7549f6c6204b71768b5de370b9d4ffdf34b5a0dc239b69eae93c34ac9
		Secure: false
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r3 = virtualinvoke r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>(r0, varReplacer27643, $i0)
		Method: <org.apache.solr.util.CryptoKeys: byte[] decryptRSA(byte[],java.security.PublicKey)>
		SHA-256: 70bae2084f1e5b51dd5e93148acbb07a266b80fa58d5cbd11778bc372d918a3d
		Secure: false
	Object:
		Variable: r2
		Type: java.security.MessageDigest
		Statement: r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer23667)
		Method: <org.apache.solr.security.Sha256AuthenticationProvider: java.lang.String sha256(java.lang.String,java.lang.String)>
		SHA-256: 46846fa0d6fa77faf74ce86bc54d47f56adb20bd0cd285e8e4a1146a862e01f9
		Secure: true
	Object:
		Variable: r1
		Type: byte[]
		Statement: z1 = virtualinvoke r6.<java.security.Signature: boolean verify(byte[])>(r1)
		Method: <org.apache.solr.util.CryptoKeys: boolean verify(java.security.PublicKey,byte[],java.nio.ByteBuffer)>
		SHA-256: 40f3e3c460dc32711a9b818f4054b3271c4a8b9a482b657fd4f833aa3b0b5b6f
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer27180)
		Method: <org.apache.solr.update.processor.MD5Signature$1: java.security.MessageDigest initialValue()>
		SHA-256: f9c8ab5ef818164b6d34349ce2e27a5f27216d631d1e58c544938c274c59662f
		Secure: false
	Object:
		Variable: r12
		Type: byte[]
		Statement: r12 = virtualinvoke r2.<java.security.MessageDigest: byte[] digest(byte[])>(r11)
		Method: <org.apache.solr.security.Sha256AuthenticationProvider: java.lang.String sha256(java.lang.String,java.lang.String)>
		SHA-256: 5d27ca5b599c0eca26f9e9d6c66503670bf951e6e57e1f65a511e16aac68dfd1
		Secure: true
	Object:
		Variable: r10
		Type: byte[]
		Statement: r10 = virtualinvoke r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r4)
		Method: <org.apache.solr.util.CryptoKeys: java.lang.String decodeAES(java.lang.String,java.lang.String,int)>
		SHA-256: f84b033b5bc30a36a6798ca09464c768476e977a78b7ae77e52a6f375d4b6dee
		Secure: false
	Object:
		Variable: varReplacer27631
		Type: java.lang.String
		Statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r13, varReplacer27631)
		Method: <org.apache.solr.util.CryptoKeys: java.lang.String decodeAES(java.lang.String,java.lang.String,int)>
		SHA-256: 76750121fdc6278df893b226016179d4594ee3eaccc6380db4d97e8fc49a16af
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.PublicKey
		Statement: $r4 = virtualinvoke r15.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <org.apache.solr.util.CryptoKeys$RSAKeyPair: void <init>()>
		SHA-256: d0023726965dd88252d60b41699c0727a6a61263c1baf8a4a186de62d1d884f9
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.PrivateKey
		Statement: $r3 = virtualinvoke r15.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <org.apache.solr.util.CryptoKeys$RSAKeyPair: void <init>()>
		SHA-256: 4b7c76b0aa95f7c87383f86e6fb2e08fc5bca715db66e84de2852364b8eda109
		Secure: true
	Object:
		Variable: $r12
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r13, varReplacer27631)
		Method: <org.apache.solr.util.CryptoKeys: java.lang.String decodeAES(java.lang.String,java.lang.String,int)>
		SHA-256: dd1e14d4091bf85804b0ed5a515b1140c937c1bbf5f5fc310ff86b90bf37d4d8
		Secure: false
	Object:
		Variable: r11
		Type: byte[]
		Statement: r11 = virtualinvoke r2.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <org.apache.solr.security.Sha256AuthenticationProvider: java.lang.String sha256(java.lang.String,java.lang.String)>
		SHA-256: f65e1ed324c263a55cc6567063de6e91bdc6b1ce4a513858ec71d9591066471e
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r4 = virtualinvoke r8.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r3, $i0, $i1)
		Method: <org.apache.solr.util.CryptoKeys$RSAKeyPair: byte[] encrypt(java.nio.ByteBuffer)>
		SHA-256: 7c32bc8eb6305a3438bd41d521704adf59acbf5d1b8f0de2f0d2d27b8f04f63f
		Secure: false
	Object:
		Variable: r7
		Type: javax.crypto.Cipher
		Statement: r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer27641)
		Method: <org.apache.solr.util.CryptoKeys: byte[] decryptRSA(byte[],java.security.PublicKey)>
		SHA-256: f88d20e596f75eab03237c3ac8081dc213146f5af726a6e7cbc7ef9573677906
		Secure: false
	Object:
		Variable: r16
		Type: java.security.SecureRandom
		Statement: specialinvoke r16.<java.security.SecureRandom: void <init>()>()
		Method: <org.apache.solr.util.CryptoKeys$RSAKeyPair: void <init>()>
		SHA-256: e0b818de216692f657033f439ca27ef2b8acc484ba6110d6f471c6ffeb699f24
		Secure: true
	Object:
		Variable: r8
		Type: java.security.Signature
		Statement: r8 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer27618)
		Method: <org.apache.solr.util.CryptoKeys$RSAKeyPair: byte[] signSha256(byte[])>
		SHA-256: 4b2198cf925d185d14f58c44c4896de002711ba5778321e0f609b6aebcf95750
		Secure: true
	Object:
		Variable: r6
		Type: java.security.MessageDigest
		Statement: r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer27629)
		Method: <org.apache.solr.util.CryptoKeys: java.lang.String decodeAES(java.lang.String,java.lang.String,int)>
		SHA-256: ffe1b2f39d40f5dd06cdb4ec716750a3a92cebec0c8ab0460a3e849216d3da2f
		Secure: false
	Object:
		Variable: r11
		Type: byte[]
		Statement: r12 = virtualinvoke r2.<java.security.MessageDigest: byte[] digest(byte[])>(r11)
		Method: <org.apache.solr.security.Sha256AuthenticationProvider: java.lang.String sha256(java.lang.String,java.lang.String)>
		SHA-256: cfaeeccdf1200e9d563a530b2b4e21872a5c2ef50a1f14af6f278f84e191e370
		Secure: true
	Object:
		Variable: r5
		Type: javax.crypto.Cipher
		Statement: r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer27633)
		Method: <org.apache.solr.util.CryptoKeys: java.lang.String decodeAES(java.lang.String,java.lang.String,int)>
		SHA-256: b559edea62b60e56823c84423cff7f4b072a18a091456366280b508c9422cdf3
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke r8.<java.security.Signature: byte[] sign()>()
		Method: <org.apache.solr.util.CryptoKeys$RSAKeyPair: byte[] signSha256(byte[])>
		SHA-256: 4305d9b7b03ffe7b777c5951312b726216a496f1abcd73266198f1644eb91ee7
		Secure: true
	Object:
		Variable: r6
		Type: java.security.Signature
		Statement: r6 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer27624)
		Method: <org.apache.solr.util.CryptoKeys: boolean verify(java.security.PublicKey,byte[],java.nio.ByteBuffer)>
		SHA-256: 830ee8ed218b3dd931123cb7a4a4c6ee9cad540bbb1b6afb27a759263733e08d
		Secure: false
	Object:
		Variable: r6
		Type: byte[]
		Statement: r6 = virtualinvoke r0.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.solr.util.CryptoKeys: byte[][] evpBytesTokey(int,int,java.security.MessageDigest,byte[],byte[],int)>
		SHA-256: 5d4bf1d0b4e94d4f90fd7d2a093f5c7b2e4df5dab96c149ed1c3cdbf3ac52fa4
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: r11 = virtualinvoke r2.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <org.apache.solr.security.Sha256AuthenticationProvider: java.lang.String sha256(java.lang.String,java.lang.String)>
		SHA-256: 3badc0374f214b3861f3ad1cec03a726bf41a5c6444a8866756d561ace0abe12
		Secure: true
	Object:
		Variable: r2
		Type: byte[]
		Statement: virtualinvoke r1.<java.util.Random: void nextBytes(byte[])>(r2)
		Method: <org.apache.solr.security.Sha256AuthenticationProvider: java.lang.String getSaltedHashedValue(java.lang.String)>
		SHA-256: 910b63036dd0b6ee257bf70b9f8f3c8d97cdad26903bd08e97a7388d81090034
		Secure: true
	Object:
		Variable: r8
		Type: javax.crypto.Cipher
		Statement: r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer27615)
		Method: <org.apache.solr.util.CryptoKeys$RSAKeyPair: byte[] encrypt(java.nio.ByteBuffer)>
		SHA-256: 8515917022e7751c353f38ea922c5485b8a67b6e2c1b35ba42f3eb69783b2a46
		Secure: false
	Object:
		Variable: r6
		Type: byte[]
		Statement: r6 = virtualinvoke r0.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.solr.util.CryptoKeys: byte[][] evpBytesTokey(int,int,java.security.MessageDigest,byte[],byte[],int)>
		SHA-256: 5d4bf1d0b4e94d4f90fd7d2a093f5c7b2e4df5dab96c149ed1c3cdbf3ac52fa4
		Secure: false

Findings in Java Class: org.apache.solr.handler.BlobHandler

	 in Method: void handleRequestBody(org.apache.solr.request.SolrQueryRequest,org.apache.solr.response.SolrQueryResponse)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e44111a47cca052e430cb85ee029dc62b51f2c4a7ece5abc337f34f001981f5e)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r95 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7442)


Findings in Java Class: org.apache.solr.update.processor.MD5Signature$1

	 in Method: java.security.MessageDigest initialValue()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #f9c8ab5ef818164b6d34349ce2e27a5f27216d631d1e58c544938c274c59662f)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer27180)


	 in Method: java.lang.Object initialValue()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #f9c8ab5ef818164b6d34349ce2e27a5f27216d631d1e58c544938c274c59662f)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: return $r1


Findings in Java Class: org.apache.solr.util.CryptoKeys$RSAKeyPair

	 in Method: byte[] encrypt(java.nio.ByteBuffer)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #8515917022e7751c353f38ea922c5485b8a67b6e2c1b35ba42f3eb69783b2a46)
			First parameter (with value "RSA/ECB/nopadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer27615)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r8.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer27616, $r2)


Findings in Java Class: org.apache.solr.util.CryptoKeys

	 in Method: boolean verify(java.security.PublicKey,byte[],java.nio.ByteBuffer)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke r6.<java.security.Signature: void initVerify(java.security.PublicKey)>(r0)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #830ee8ed218b3dd931123cb7a4a4c6ee9cad540bbb1b6afb27a759263733e08d)
			First parameter (with value "SHA1withRSA") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA224withDSA, NONEwithDSA, SHA1withDSA}
			at statement: r6 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer27624)


	 in Method: java.lang.String decodeAES(java.lang.String,java.lang.String,int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r14.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r15)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ffe1b2f39d40f5dd06cdb4ec716750a3a92cebec0c8ab0460a3e849216d3da2f)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer27629)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer27636, r8, r9)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r13, varReplacer27631)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #ffe1b2f39d40f5dd06cdb4ec716750a3a92cebec0c8ab0460a3e849216d3da2f)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: r7 = staticinvoke <org.apache.solr.util.CryptoKeys: byte[][] evpBytesTokey(int,int,java.security.MessageDigest,byte[],byte[],int)>($i5, $i6, r6, r3, $r11, varReplacer27634)


	 in Method: byte[] decryptRSA(byte[],java.security.PublicKey)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer27642, r1)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #f88d20e596f75eab03237c3ac8081dc213146f5af726a6e7cbc7ef9573677906)
			First parameter (with value "RSA/ECB/nopadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer27641)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 35

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 6
	IncompleteOperationError: 2
	ConstraintError: 6
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 5 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 22.15 s

