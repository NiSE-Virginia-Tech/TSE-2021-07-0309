[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 3.035 s 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 43 analysis seeds within 4 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 44
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.02

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 44
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.05

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 44
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.07

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 44
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.09

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 44
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.11

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 44
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.14

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 45
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.16

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 45
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.18

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 45
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.2

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 45
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.22

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 46
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.24

[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.io.Closeable: void close()> for class com.yahoo.athenz.zts.AWSAttestationData
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <javax.activation.DataHandler: java.io.InputStream getInputStream()> for class com.yahoo.athenz.zts.AWSAttestationData
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.util.List: int size()> for class com.yahoo.athenz.zts.AWSAttestationData
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.util.List: int size()> for class com.yahoo.athenz.zts.AWSAttestationData
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.util.List: java.lang.Object get(int)> for class com.yahoo.athenz.zts.AWSAttestationData
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.util.List: int size()> for class com.yahoo.athenz.zts.AWSAttestationData
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.util.List: int size()> for class com.yahoo.athenz.zts.AWSAttestationData
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.util.List: java.lang.Object get(int)> for class com.yahoo.athenz.zts.AWSAttestationData
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.util.List: java.lang.Object get(int)> for class com.yahoo.athenz.zts.AWSAttestationData
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.22

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 56
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.23

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 14 of 56
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.25

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 15 of 58
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.26

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 16 of 59
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.27

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 17 of 61
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.28

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 18 of 63
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.29

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 19 of 64
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.3

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 20 of 73
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.27

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 21 of 73
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.29

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 22 of 74
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.3

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 23 of 75
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.31

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 24 of 75
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.32

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 25 of 75
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 26 of 76
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.34

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 27 of 77
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.35

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 28 of 79
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.35

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 29 of 81
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.36

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 30 of 83
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.36

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 31 of 83
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.37

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 32 of 84
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.38

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 33 of 84
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.39

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 34 of 84
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.4

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 35 of 85
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.41

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 36 of 85
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.42

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 37 of 85
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.44

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 38 of 85
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.45

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 39 of 85
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.46

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 40 of 90
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.44

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 41 of 91
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.45

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 42 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.37

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 43 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.37

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 44 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.38

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 45 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.39

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 46 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.4

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 47 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.41

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 48 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.42

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 49 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.43

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 50 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.43

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 51 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.44

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 52 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.45

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 53 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.46

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 54 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.47

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 55 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.48

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 56 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.49

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 57 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 58 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 59 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.51

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 60 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.52

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 61 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.53

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 62 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.54

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 63 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.55

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 64 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.56

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 65 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.57

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 66 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.57

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 67 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.58

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 68 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.59

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 69 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.6

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 70 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.61

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 71 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.62

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 72 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.63

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 73 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.63

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 74 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.64

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 75 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.65

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 76 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.66

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 77 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 78 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.68

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 79 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.69

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 80 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.7

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 81 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.7

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 82 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.71

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 83 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.72

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 84 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.73

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 85 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.74

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 86 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.75

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 87 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.76

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 88 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.77

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 89 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.77

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 90 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.78

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 91 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.79

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 92 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.8

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 93 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.81

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 94 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.82

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 95 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.83

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 96 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.83

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 97 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.84

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 98 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.85

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 99 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.86

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 100 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.87

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 101 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.88

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 102 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.89

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 103 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.9

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 104 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.9

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 105 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.91

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 106 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.92

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 107 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.93

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 108 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.94

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 109 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.95

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 110 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.96

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 111 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.97

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 112 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.97

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 113 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.98

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 114 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.99

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r16
		Type: byte[]
		Statement: r16 = virtualinvoke r14.<java.security.MessageDigest: byte[] digest()>()
		Method: <athenz.shade.zts.org.glassfish.jersey.client.authentication.DigestAuthenticator: java.lang.String md5(java.lang.String[])>
		SHA-256: 90829e2f0f1888ba5bd45a4dbbf2ed9f630f574666c82ebb3fcae9594ba3c0b8
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r0)
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.DigestUtils: java.security.MessageDigest getDigest(java.lang.String,java.security.MessageDigest)>
		SHA-256: f69e48164586f17cecce2112ad32e31baa2778d3f1adea93a977989695a8b6db
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<javax.crypto.Mac: byte[] doFinal(byte[])>(r1)
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.HmacUtils: byte[] hmac(byte[])>
		SHA-256: fd6e2f094c2f71c62a0172d6406714fb1ce65b6a9fd6ed2982c9a4a2dbc8d216
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8644)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl: java.security.MessageDigest getMD5()>
		SHA-256: bce0840c4a9867f3628bf767a0011026e69d915f0ffda0360024907074839920
		Secure: false
	Object:
		Variable: r2
		Type: javax.crypto.Mac
		Statement: r2 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(r0)
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.HmacUtils: javax.crypto.Mac getInitializedMac(java.lang.String,byte[])>
		SHA-256: 121a39d0408e38af7cd24010b0a2fab8d7f314e62b238e0df4a62a414507db2a
		Secure: false
	Object:
		Variable: r14
		Type: java.security.MessageDigest
		Statement: r14 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6764)
		Method: <athenz.shade.zts.org.glassfish.jersey.client.authentication.DigestAuthenticator: java.lang.String md5(java.lang.String[])>
		SHA-256: db789640c23134a8a78ca499295ccd11fac588a7c09a630c80e533dfcf6d63f6
		Secure: false
	Object:
		Variable: r115
		Type: javax.net.ssl.KeyManagerFactory
		Statement: r115 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String,java.lang.String)>(r130, $r26)
		Method: <athenz.shade.zts.org.glassfish.jersey.SslConfigurator: javax.net.ssl.SSLContext createSSLContext()>
		SHA-256: 4f11d85e2da06977069010c73601bfefcc9480e864da55ac2bf3ae599f5a305
		Secure: true
	Object:
		Variable: r5
		Type: javax.crypto.Cipher
		Statement: r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8591)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl: byte[] lmHash(java.lang.String)>
		SHA-256: a0c5004e519bca1c3c281cabd5d0f307fca98feaa527339c16b3f00fe3db3b8b
		Secure: false
	Object:
		Variable: r114
		Type: javax.net.ssl.TrustManagerFactory
		Statement: r114 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.lang.String)>(r154, $r7)
		Method: <athenz.shade.zts.org.glassfish.jersey.SslConfigurator: javax.net.ssl.SSLContext createSSLContext()>
		SHA-256: 28d03c9862e4cd948727314bf72aad0b76460f8e6459e50ffae2ea482f4cee8
		Secure: true
	Object:
		Variable: r1
		Type: byte[]
		Statement: r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$HMACMD5: byte[] getOutput()>
		SHA-256: 22505513c95e6063eefdf0c997b443cb4e4a5031da10189b8a77ecfa90349a0a
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke r0.<java.security.MessageDigest: byte[] digest(byte[])>(r1)
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.DigestUtils: byte[] digest(java.security.MessageDigest,byte[])>
		SHA-256: 2d9d83c7d9357c4aee283445e6e02c8924f08b41be1b2dd0aa60211a448ac388
		Secure: false
	Object:
		Variable: r6
		Type: byte[]
		Statement: r6 = virtualinvoke r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r4)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl: byte[] lmHash(java.lang.String)>
		SHA-256: 630fb4138afd719581916fcb0ac190179d90373af7ae8db362e4a0f23f37ede
		Secure: false
	Object:
		Variable: r4
		Type: byte[]
		Statement: r4 = virtualinvoke r17.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r3)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: 51ebfe205ce0e9b1d6d5f4b5331c1e59573af5415f24889a693b2d75522d9e54
		Secure: false
	Object:
		Variable: r5
		Type: javax.crypto.Cipher
		Statement: r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8616)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl: byte[] lmResponse(byte[],byte[])>
		SHA-256: 574b9d590449f2d9ac72209da8d2ceae09399dab4d14964f9f3177551834b590
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$Handle: void advanceMessageSequence()>
		SHA-256: b4114d6952b8200fb672057ec3fd497aa1772392a87f8062974400f9874147c9
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <athenz.shade.zts.org.apache.http.impl.auth.HttpEntityDigester: void close()>
		SHA-256: e8cabc2e3d63d44e54e3148466717cda5fcc0b824361ee994a1cb07813a6e012
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r4 = virtualinvoke $r2.<javax.crypto.Mac: byte[] doFinal(byte[])>($r3)
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.HmacUtils: byte[] hmac(java.lang.String)>
		SHA-256: e3541d4098e90adc6e409e6a60c2c3287a5ce1c8d84b0357c1d5cad96d2186ef
		Secure: false
	Object:
		Variable: r3
		Type: javax.net.ssl.TrustManagerFactory
		Statement: r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r10)
		Method: <athenz.shade.zts.org.apache.http.ssl.SSLContextBuilder: athenz.shade.zts.org.apache.http.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore,athenz.shade.zts.org.apache.http.ssl.TrustStrategy)>
		SHA-256: e2938ff6fdc62519f4377a97c76c4e48e17f5debef102d651f33a61b74443a77
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.DigestUtils: byte[] digest(java.security.MessageDigest,java.io.File)>
		SHA-256: 6a74c7a23efe31554dd0f6d4a4f9c4af9b76b2cc2cf92458311947525aea785e
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: $r2 = virtualinvoke r0.<java.security.MessageDigest: byte[] digest(byte[])>(r1)
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.DigestUtils: byte[] digest(java.security.MessageDigest,byte[])>
		SHA-256: fab50454e1dbcb9174354b7fa7fbaf324cf7ba04b8fbd7948e35d093995fac7a
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke r15.<java.security.MessageDigest: byte[] digest()>()
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$Handle: void <init>(byte[],athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$Mode,boolean)>
		SHA-256: d51d9e50d339c641b61d4ba3fa80118bbe638375baf4d2fbc85e39c18550a5b2
		Secure: false
	Object:
		Variable: $r110
		Type: byte[]
		Statement: $r111 = virtualinvoke r10.<java.security.MessageDigest: byte[] digest(byte[])>($r110)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.DigestScheme: athenz.shade.zts.org.apache.http.Header createDigestHeader(athenz.shade.zts.org.apache.http.auth.Credentials,athenz.shade.zts.org.apache.http.HttpRequest)>
		SHA-256: c935514416b40b81a8c0a9fae4b17978168e98c6b1ef21c9844d3b3104353ce9
		Secure: false
	Object:
		Variable: r6
		Type: javax.net.ssl.SSLContext
		Statement: r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer8180)
		Method: <athenz.shade.zts.org.apache.http.conn.ssl.SSLContexts: javax.net.ssl.SSLContext createDefault()>
		SHA-256: f1fc36b37da1273af6c30f8285246e216ec09de2b4dc7aa42fd0f82ca17ff9ea
		Secure: false
	Object:
		Variable: r6
		Type: byte[]
		Statement: r6 = virtualinvoke r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r1)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl: byte[] lmResponse(byte[],byte[])>
		SHA-256: 709642c2bbfffb4afd1c653cc908f558e5999ff98cf098e83601388c64d2d3de
		Secure: false
	Object:
		Variable: $r37
		Type: byte[]
		Statement: $r37 = virtualinvoke r10.<java.security.MessageDigest: byte[] digest(byte[])>($r36)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.DigestScheme: athenz.shade.zts.org.apache.http.Header createDigestHeader(athenz.shade.zts.org.apache.http.auth.Credentials,athenz.shade.zts.org.apache.http.HttpRequest)>
		SHA-256: e648f888c75704bb2e8cef41b8056e31250a21b3539d5ea548b2cf8e03107076
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer8639)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl: java.security.Key createDESKey(byte[],int)>
		SHA-256: fd0c6035f850995dc04eef9717aebe2e5d047e3e1119c64dfe7a7f1ffa53097b
		Secure: false
	Object:
		Variable: r5
		Type: java.security.KeyStore
		Statement: r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r9)
		Method: <athenz.shade.zts.org.apache.http.ssl.SSLContextBuilder: athenz.shade.zts.org.apache.http.ssl.SSLContextBuilder loadKeyMaterial(java.io.File,char[],char[],athenz.shade.zts.org.apache.http.ssl.PrivateKeyStrategy)>
		SHA-256: 513ef26476cf54f06d8fd0c0bf6830fe9958034d3d24bd143d2cff5a8db93c51
		Secure: true
	Object:
		Variable: $r156
		Type: byte[]
		Statement: $r156 = virtualinvoke r10.<java.security.MessageDigest: byte[] digest(byte[])>($r155)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.DigestScheme: athenz.shade.zts.org.apache.http.Header createDigestHeader(athenz.shade.zts.org.apache.http.auth.Credentials,athenz.shade.zts.org.apache.http.HttpRequest)>
		SHA-256: 16adf8de92bf8819a09dda245c7a6d2700f29945715db3ffb9d42d6662b23e0f
		Secure: false
	Object:
		Variable: r4
		Type: javax.net.ssl.KeyManagerFactory
		Statement: r4 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r11)
		Method: <athenz.shade.zts.org.apache.http.ssl.SSLContextBuilder: athenz.shade.zts.org.apache.http.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[],athenz.shade.zts.org.apache.http.ssl.PrivateKeyStrategy)>
		SHA-256: f887b9eb5b0bea7bd8e7f2619f2a30b8b2e6358a49e2c68428106c3a0da112ae
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, r0)
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.HmacUtils: javax.crypto.Mac getInitializedMac(java.lang.String,byte[])>
		SHA-256: 394b58790fe148394c6e87c0c4093b433591b9dd9826146ceb21a032f1849200
		Secure: false
	Object:
		Variable: r3
		Type: byte[]
		Statement: r3 = virtualinvoke r10.<java.security.MessageDigest: byte[] digest()>()
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl: byte[] ntlm2SessionResponse(byte[],byte[],byte[])>
		SHA-256: c0f3e7e8a8c5d70f41fedded307610fbc6d232e6a1cd13018dddc296bf160e11
		Secure: false
	Object:
		Variable: r3
		Type: javax.net.ssl.TrustManagerFactory
		Statement: r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r6)
		Method: <athenz.shade.zts.org.apache.http.conn.ssl.SSLContextBuilder: athenz.shade.zts.org.apache.http.conn.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore,athenz.shade.zts.org.apache.http.conn.ssl.TrustStrategy)>
		SHA-256: 6b27f20073a702916ea38984a07c41336f9d5c31df3fe292ab1e805babfe473c
		Secure: false
	Object:
		Variable: r6
		Type: byte[]
		Statement: r6 = virtualinvoke r5.<java.security.MessageDigest: byte[] digest(byte[])>(r19)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$Type3Message: byte[] addGssMicAvsToTargetInfo(byte[],java.security.cert.Certificate)>
		SHA-256: 745328da6ad161cb0f54bd6a808f447fd1afb9bbfd937cb471f4f0e00666bc8
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.DigestUtils: byte[] sha384(byte[])>
		SHA-256: e74450188f985523d9855f9d90cbc6d2b99a9d05a356a38652cd742d9b74088c
		Secure: false
	Object:
		Variable: r0
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, r0)
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.HmacUtils: javax.crypto.Mac getInitializedMac(java.lang.String,byte[])>
		SHA-256: 673f432608ebebbfde686808e1976348928f13d4604f0040fce1eb16dc2523d2
		Secure: false
	Object:
		Variable: r34
		Type: byte[]
		Statement: r34 = virtualinvoke r32.<java.security.MessageDigest: byte[] digest()>()
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.Md5Crypt: java.lang.String md5Crypt(byte[],java.lang.String,java.lang.String)>
		SHA-256: 7fc927c52220e9c87c89ed43cb6a1010d2763202f829b2f00d00ee87dd45d3ce
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: $r5 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer6726)
		Method: <athenz.shade.zts.org.glassfish.jersey.client.authentication.DigestAuthenticator: void <init>(athenz.shade.zts.org.glassfish.jersey.client.authentication.HttpAuthenticationFilter$Credentials,int)>
		SHA-256: e04f94676227c2f960795486b8a84a1d6cbef47904cd3db43fafcccb2922ab7c
		Secure: true
	Object:
		Variable: r4
		Type: java.lang.Object[]
		Statement: r4 = virtualinvoke r3.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <athenz.shade.zts.org.apache.http.conn.ssl.SSLContextBuilder: athenz.shade.zts.org.apache.http.conn.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore,athenz.shade.zts.org.apache.http.conn.ssl.TrustStrategy)>
		SHA-256: 5a03678b5fe66b52cc209e417248044007623f8065d27a13e827b83c6faea2f5
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<javax.crypto.Mac: byte[] doFinal(byte[])>(r1)
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.HmacUtils: byte[] hmac(byte[])>
		SHA-256: 8726fc43a7feb6754cca21d2771d04f5769ccfe2911e9839f50d38fe21131845
		Secure: false
	Object:
		Variable: r141
		Type: java.security.KeyStore
		Statement: r141 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.lang.String)>($r142, $r20)
		Method: <athenz.shade.zts.org.glassfish.jersey.SslConfigurator: javax.net.ssl.SSLContext createSSLContext()>
		SHA-256: 329e1632a8bbcc4786b5cf73db3b026607412686dbd2f85350d93f39c0919832
		Secure: true
	Object:
		Variable: r114
		Type: javax.net.ssl.TrustManagerFactory
		Statement: r114 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(r154)
		Method: <athenz.shade.zts.org.glassfish.jersey.SslConfigurator: javax.net.ssl.SSLContext createSSLContext()>
		SHA-256: 8ca4bb251fc2636d7d04eed646420cda5056f19623f04bb664160b39b664e4cd
		Secure: true
	Object:
		Variable: r115
		Type: javax.net.ssl.KeyManagerFactory
		Statement: r115 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(r130)
		Method: <athenz.shade.zts.org.glassfish.jersey.SslConfigurator: javax.net.ssl.SSLContext createSSLContext()>
		SHA-256: 460ce91afd9b769c3206ddf40df87719053083d6cd63024f07cfb49bcc8064d7
		Secure: true
	Object:
		Variable: r9
		Type: javax.net.ssl.SSLContext
		Statement: r9 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(r1)
		Method: <athenz.shade.zts.org.apache.http.ssl.SSLContextBuilder: javax.net.ssl.SSLContext build()>
		SHA-256: 17297cadaf15cdc3f26bbd5bf8ebab087678c4d3aba0139ec991d49b0723822f
		Secure: false
	Object:
		Variable: r5
		Type: java.lang.Object[]
		Statement: r5 = virtualinvoke r4.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <athenz.shade.zts.org.apache.http.conn.ssl.SSLContextBuilder: athenz.shade.zts.org.apache.http.conn.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[],athenz.shade.zts.org.apache.http.conn.ssl.PrivateKeyStrategy)>
		SHA-256: f2d1963fc56e84fa18233366c4954d4fe9ee70a1b96261469237a512dbb35b80
		Secure: false
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.DigestUtils: byte[] sha384(byte[])>
		SHA-256: 555b15450d9b9f67d610fe51c522ea556aaee17c2739338b62ea6b59a4271f76
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <athenz.shade.zts.org.apache.http.impl.auth.DigestScheme: java.lang.String createCnonce()>
		SHA-256: 3ab96751e89c150e150dd9be52b85fae8d30261ca023ff283d340abfdbc1669
		Secure: true
	Object:
		Variable: r14
		Type: java.security.SecureRandom
		Statement: r14 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer8649)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl: void <clinit>()>
		SHA-256: 1b8a6794fc2a0d793163a8566b8b90e1a9106541e5e1c247c56fe07c9675e651
		Secure: true
	Object:
		Variable: r33
		Type: byte[]
		Statement: r33 = virtualinvoke r32.<java.security.MessageDigest: byte[] digest()>()
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.Md5Crypt: java.lang.String md5Crypt(byte[],java.lang.String,java.lang.String)>
		SHA-256: 6f2f24959121bd7da6c4ff2497b1fcc5b652b469c3a5264ea5fdc076954e6970
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.DigestUtils: byte[] sha1(byte[])>
		SHA-256: 83395eaa9342ece4b24da66768537fe97d75438d6493ad67319a3999d1d4058e
		Secure: false
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r3 = virtualinvoke r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r0)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl: byte[] RC4(byte[],byte[])>
		SHA-256: f6202941bd439f85ecef0a312b1c84967db36819e2140eb8bfc5cb96fecc0f49
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.DigestUtils: byte[] md2(byte[])>
		SHA-256: f2a8d60e4721bd2ba7a581814edc7b0074c941b7bb2512272883a92071e85225
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.DigestUtils: byte[] sha256(byte[])>
		SHA-256: b4669333235e4348b59a5cb6c6e53c9916a201b1217ee843fe05ae9a67a0316d
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer9219)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$Handle: javax.crypto.Cipher initCipher()>
		SHA-256: 847e7d6747f0aafa840ba05d874f110a29a67d89cfd295b5108ae1f86564bc50
		Secure: false
	Object:
		Variable: r116
		Type: java.security.KeyStore
		Statement: r116 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.lang.String)>($r117, $r39)
		Method: <athenz.shade.zts.org.glassfish.jersey.SslConfigurator: javax.net.ssl.SSLContext createSSLContext()>
		SHA-256: ab606c6f34f38675ab9f8bf479386b554bbde1dc440c047bbcd477cf8395b878
		Secure: true
	Object:
		Variable: r7
		Type: javax.crypto.Cipher
		Statement: r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8584)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl: byte[] RC4(byte[],byte[])>
		SHA-256: 5bf80134e15670933cb122486d1fabed46a9b46db97f22ec8a2123268bae84f9
		Secure: false
	Object:
		Variable: $r36
		Type: byte[]
		Statement: $r37 = virtualinvoke r10.<java.security.MessageDigest: byte[] digest(byte[])>($r36)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.DigestScheme: athenz.shade.zts.org.apache.http.Header createDigestHeader(athenz.shade.zts.org.apache.http.auth.Credentials,athenz.shade.zts.org.apache.http.HttpRequest)>
		SHA-256: 3cf353a004f69d65ef432d35aa7b6c43f53e334c975d655765d7f2d5d48a7fda
		Secure: false
	Object:
		Variable: $r5
		Type: javax.net.ssl.KeyManager[]
		Statement: $r5 = virtualinvoke r115.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <athenz.shade.zts.org.glassfish.jersey.SslConfigurator: javax.net.ssl.SSLContext createSSLContext()>
		SHA-256: 79602eb898c1361d4d16aaf0686b9d60acad48e6e343abf5cd0b82dbec84c7e0
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.DigestUtils: byte[] md5(byte[])>
		SHA-256: 4a4dd18e6187b325d9cb47c1cd7cc8489f28760532723e1ba285d1f23b4d1c9d
		Secure: false
	Object:
		Variable: $r155
		Type: byte[]
		Statement: $r156 = virtualinvoke r10.<java.security.MessageDigest: byte[] digest(byte[])>($r155)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.DigestScheme: athenz.shade.zts.org.apache.http.Header createDigestHeader(athenz.shade.zts.org.apache.http.auth.Credentials,athenz.shade.zts.org.apache.http.HttpRequest)>
		SHA-256: eb59109de525c31de5f9e12daca408474529400d2509035a6392e14ade1d4f13
		Secure: false
	Object:
		Variable: r30
		Type: byte[]
		Statement: r30 = virtualinvoke r29.<java.security.MessageDigest: byte[] digest()>()
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.Sha2Crypt: java.lang.String sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)>
		SHA-256: 8e88449544b9f7e414adbe2f34a17243ec3612919023a8a0bd098e3a201ba472
		Secure: false
	Object:
		Variable: varReplacer8639
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer8639)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl: java.security.Key createDESKey(byte[],int)>
		SHA-256: 2484383911f5c9b93d27974cd7bb04cdd63d06a576ae231a32b13dbe1b5a0db4
		Secure: false
	Object:
		Variable: r4
		Type: java.security.KeyStore
		Statement: r4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r8)
		Method: <athenz.shade.zts.org.apache.http.ssl.SSLContextBuilder: athenz.shade.zts.org.apache.http.ssl.SSLContextBuilder loadTrustMaterial(java.io.File,char[],athenz.shade.zts.org.apache.http.ssl.TrustStrategy)>
		SHA-256: 2ae9e45495be98490a8cf7e986c1da4f46ec3d08c04f0de79430b0d6741fcb4e
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r0)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.DigestScheme: java.security.MessageDigest createMessageDigest(java.lang.String)>
		SHA-256: bd3823a5d9aa45b9e8dcdb57b0361fb1187bdae63ecc0a8465b6a3387976558
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: virtualinvoke r0.<java.security.SecureRandom: void nextBytes(byte[])>(r1)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.DigestScheme: java.lang.String createCnonce()>
		SHA-256: 156cbf551d6e1beb81241eb72d74c33b8c0683b6a4ddbbd561927c6397757da7
		Secure: true
	Object:
		Variable: r4
		Type: java.lang.Object[]
		Statement: r4 = virtualinvoke r3.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <athenz.shade.zts.org.apache.http.ssl.SSLContextBuilder: athenz.shade.zts.org.apache.http.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore,athenz.shade.zts.org.apache.http.ssl.TrustStrategy)>
		SHA-256: 958cd47db3f267cb4a37c5d640c89a98379a425baeaf193a6b47be852863fe2
		Secure: true
	Object:
		Variable: r4
		Type: byte[]
		Statement: r4 = virtualinvoke r8.<java.security.MessageDigest: byte[] digest(byte[])>(r7)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$Type3Message: byte[] addGssMicAvsToTargetInfo(byte[],java.security.cert.Certificate)>
		SHA-256: e7106d47e8fbbf44418721c82f064499f0c89a121f16bd8aabf5c5dea79deb0a
		Secure: false
	Object:
		Variable: r3
		Type: byte[]
		Statement: r4 = virtualinvoke r17.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r3)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: 8c544e0b8e17ee6a08f95b7d3ed00979b0c1372b28e64454f8771ef2823623f8
		Secure: false
	Object:
		Variable: r5
		Type: java.lang.Object[]
		Statement: r5 = virtualinvoke r4.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <athenz.shade.zts.org.apache.http.ssl.SSLContextBuilder: athenz.shade.zts.org.apache.http.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[],athenz.shade.zts.org.apache.http.ssl.PrivateKeyStrategy)>
		SHA-256: 1ea876b37c6abd161a04a567c7b9ddb00b7d622ff55d3e071ea3a5e796fe943e
		Secure: true
	Object:
		Variable: r159
		Type: javax.net.ssl.SSLContext
		Statement: r159 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(r158)
		Method: <athenz.shade.zts.org.glassfish.jersey.SslConfigurator: javax.net.ssl.SSLContext createSSLContext()>
		SHA-256: a2ab8ab86be8dfc88073b7974fea9f256a298a5354d4110da7f310d2f2ee7715
		Secure: false
	Object:
		Variable: r32
		Type: byte[]
		Statement: r32 = virtualinvoke r31.<java.security.MessageDigest: byte[] digest()>()
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.Sha2Crypt: java.lang.String sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)>
		SHA-256: afa001f9f58bedd7a7e2d2e9d8232d222ffb8828ba5d8bb60adb7fcca2b063a5
		Secure: false
	Object:
		Variable: r28
		Type: byte[]
		Statement: r28 = virtualinvoke r25.<java.security.MessageDigest: byte[] digest()>()
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.Sha2Crypt: java.lang.String sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)>
		SHA-256: 71b129715a0e6159512027414bdc73e9ec2396d3d3255bd9a2a6c56d89315ce6
		Secure: false
	Object:
		Variable: $r111
		Type: byte[]
		Statement: $r111 = virtualinvoke r10.<java.security.MessageDigest: byte[] digest(byte[])>($r110)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.DigestScheme: athenz.shade.zts.org.apache.http.Header createDigestHeader(athenz.shade.zts.org.apache.http.auth.Credentials,athenz.shade.zts.org.apache.http.HttpRequest)>
		SHA-256: e3c5007c1fd2174ee0e3b25483a626d06cc4dfedb70b6567243dc5301142fec0
		Secure: false
	Object:
		Variable: r14
		Type: byte[]
		Statement: r14 = virtualinvoke $r13.<java.security.MessageDigest: byte[] digest()>()
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$HMACMD5: void <init>(byte[])>
		SHA-256: e6ce6ac68411b57059e1bbb6af2baaf55aaffce358f53237b972fc6fe5d99b85
		Secure: false
	Object:
		Variable: r4
		Type: javax.net.ssl.KeyManagerFactory
		Statement: r4 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r7)
		Method: <athenz.shade.zts.org.apache.http.conn.ssl.SSLContextBuilder: athenz.shade.zts.org.apache.http.conn.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[],athenz.shade.zts.org.apache.http.conn.ssl.PrivateKeyStrategy)>
		SHA-256: e583fd691e38f136ba11f1fe50c9350acdc0da5a7df79230440be603a5329624
		Secure: false
	Object:
		Variable: varReplacer8583
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer8583)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl: byte[] RC4(byte[],byte[])>
		SHA-256: 8287299e44e6f4685e28327503a758834fcdd84338d0108a39939f16cea0aea8
		Secure: false
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.DigestUtils: byte[] sha1(byte[])>
		SHA-256: 92d0c06680bcfabefd3968d3ed6d4813b895a475fa281863c8d26fbf3945ebe6
		Secure: false
	Object:
		Variable: $r163
		Type: javax.net.ssl.TrustManager[]
		Statement: $r163 = virtualinvoke r114.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <athenz.shade.zts.org.glassfish.jersey.SslConfigurator: javax.net.ssl.SSLContext createSSLContext()>
		SHA-256: 6c329e164fb9e0571af9f8a14890f6d36e32a1ec3ab71c01812905f89db2abb5
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.DigestUtils: byte[] digest(java.security.MessageDigest,java.io.InputStream)>
		SHA-256: 6a74c7a23efe31554dd0f6d4a4f9c4af9b76b2cc2cf92458311947525aea785e
		Secure: false
	Object:
		Variable: varReplacer9219
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer9219)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$Handle: javax.crypto.Cipher initCipher()>
		SHA-256: 9b6adb9b44d9ee85e14f5501a75308b8a130709fb05e0d512ee9cfcef3eb2355
		Secure: false
	Object:
		Variable: r27
		Type: byte[]
		Statement: r27 = virtualinvoke r26.<java.security.MessageDigest: byte[] digest()>()
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.Sha2Crypt: java.lang.String sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)>
		SHA-256: 5fb42a87fe423bb69f0ebf7816322b0439faff1c3dfaaf5b78d8370148b37d3e
		Secure: false
	Object:
		Variable: r3
		Type: byte[]
		Statement: r5 = virtualinvoke r18.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r3)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: b1c498446616f1f794ef5ed673822b48811747780f76dc24e78a311e8456d69a
		Secure: false
	Object:
		Variable: $r151
		Type: byte[]
		Statement: $r151 = virtualinvoke r10.<java.security.MessageDigest: byte[] digest(byte[])>($r150)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.DigestScheme: athenz.shade.zts.org.apache.http.Header createDigestHeader(athenz.shade.zts.org.apache.http.auth.Credentials,athenz.shade.zts.org.apache.http.HttpRequest)>
		SHA-256: 3606ee9580d36126844cc90ecd4773e54c3540ba61da227af5802e98cc6ce9dd
		Secure: false
	Object:
		Variable: r5
		Type: java.security.MessageDigest
		Statement: r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9291)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$Type3Message: byte[] addGssMicAvsToTargetInfo(byte[],java.security.cert.Certificate)>
		SHA-256: e58f005ea360e3fb631c7adb6f6c320bed4d6f935cbba3c6e276a882a31bbe0d
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>(r1)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$HMACMD5: byte[] getOutput()>
		SHA-256: 42e4e815460f87460b7298ed2cdec1f4eebbc08bbcb97d21ac11df00c0389ca7
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer9217)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$Handle: javax.crypto.Cipher initCipher()>
		SHA-256: 39bff20d77ed5b8c1c3eaa660d83d0939ee6758c7bc81d7e6c654d199fb425a
		Secure: false
	Object:
		Variable: r34
		Type: byte[]
		Statement: r34 = virtualinvoke r31.<java.security.MessageDigest: byte[] digest()>()
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.Md5Crypt: java.lang.String md5Crypt(byte[],java.lang.String,java.lang.String)>
		SHA-256: 2f1171658a2a32c35554e48fdd03e563875d21b9c40c562b7023d295495b4bf
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal()>()
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.HmacUtils: byte[] hmac(java.io.InputStream)>
		SHA-256: 4b2ccdb3e02261e414b14e8930afed5172efb5bcc4d9da46f45522404e30a762
		Secure: false
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.DigestUtils: byte[] sha512(byte[])>
		SHA-256: 9f4c297e8b55ca8f8e840c8184d8d43a9e8cf6178bd74e24161706b73442496f
		Secure: false
	Object:
		Variable: $r150
		Type: byte[]
		Statement: $r151 = virtualinvoke r10.<java.security.MessageDigest: byte[] digest(byte[])>($r150)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.DigestScheme: athenz.shade.zts.org.apache.http.Header createDigestHeader(athenz.shade.zts.org.apache.http.auth.Credentials,athenz.shade.zts.org.apache.http.HttpRequest)>
		SHA-256: 1e7f738c754f6c0133fcd7900274dcab708df39d619f56d67e656ce2f9482db1
		Secure: false
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.DigestUtils: byte[] md5(byte[])>
		SHA-256: a4b7e841fc462f8d73a506e9805cd4d1408ef7266e8613db710f40ddac41b158
		Secure: false
	Object:
		Variable: r17
		Type: javax.crypto.Cipher
		Statement: r17 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer9345)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: 3aed248c471e4de3f359b60d1057996d2a06c5af5ebad89e7d46a6fd46dc00de
		Secure: false
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.DigestUtils: byte[] md2(byte[])>
		SHA-256: e2e03ceec4484eab16cfd224ed100d41ce0c24ed3b496bf77a6483a221e878c3
		Secure: false
	Object:
		Variable: r4
		Type: byte[]
		Statement: r6 = virtualinvoke r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r4)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl: byte[] lmHash(java.lang.String)>
		SHA-256: 783bef0e378e78e183fe641c8af51ce20770cb0e3148505b1bf67f3e0df957d6
		Secure: false
	Object:
		Variable: r1
		Type: javax.net.ssl.SSLContext
		Statement: r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r14)
		Method: <athenz.shade.zts.org.apache.http.conn.ssl.SSLContextBuilder: javax.net.ssl.SSLContext build()>
		SHA-256: 323c65677a5ccffe4cadf1d642bbf7f0cc11c2ad4bf8c847cb9434d4e0c61ec9
		Secure: false
	Object:
		Variable: r7
		Type: byte[]
		Statement: r4 = virtualinvoke r8.<java.security.MessageDigest: byte[] digest(byte[])>(r7)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$Type3Message: byte[] addGssMicAvsToTargetInfo(byte[],java.security.cert.Certificate)>
		SHA-256: f4cb92d663ea523a66832637a2af6d09cfd06da2f571c733d32b7b20dbde9aea
		Secure: false
	Object:
		Variable: r4
		Type: java.security.KeyStore
		Statement: r4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r8)
		Method: <athenz.shade.zts.org.apache.http.ssl.SSLContextBuilder: athenz.shade.zts.org.apache.http.ssl.SSLContextBuilder loadTrustMaterial(java.net.URL,char[],athenz.shade.zts.org.apache.http.ssl.TrustStrategy)>
		SHA-256: 2ae9e45495be98490a8cf7e986c1da4f46ec3d08c04f0de79430b0d6741fcb4e
		Secure: true
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.DigestUtils: byte[] sha256(byte[])>
		SHA-256: c5437c9ce65f8e48f3a76c6e35eb7d6d07b1025940f526110b27d239aaff1e3
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r0)
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.DigestUtils: java.security.MessageDigest getDigest(java.lang.String)>
		SHA-256: e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337
		Secure: false
	Object:
		Variable: r141
		Type: java.security.KeyStore
		Statement: r141 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r143)
		Method: <athenz.shade.zts.org.glassfish.jersey.SslConfigurator: javax.net.ssl.SSLContext createSSLContext()>
		SHA-256: 9ced3fa8337f21f57e2d9ced9288ac80a5e598820c07f90c07e21e8c57927e73
		Secure: true
	Object:
		Variable: r6
		Type: javax.net.ssl.SSLContext
		Statement: r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer10477)
		Method: <athenz.shade.zts.org.apache.http.ssl.SSLContexts: javax.net.ssl.SSLContext createDefault()>
		SHA-256: 7b7ea676f0b0113daa7923cc1650b8107e95a5d2c4a8a301980e608b932f36fa
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.DigestUtils: byte[] sha512(byte[])>
		SHA-256: 793b536133ee27f28c84471a4b0c835449549b607ab02fb866e83514cfa002c9
		Secure: false
	Object:
		Variable: r19
		Type: byte[]
		Statement: r6 = virtualinvoke r5.<java.security.MessageDigest: byte[] digest(byte[])>(r19)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$Type3Message: byte[] addGssMicAvsToTargetInfo(byte[],java.security.cert.Certificate)>
		SHA-256: e8a1fa835b62da682d8b494d73b2a635e2a74b070251470a417a2d08c8e91d78
		Secure: true
	Object:
		Variable: r5
		Type: java.security.KeyStore
		Statement: r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r9)
		Method: <athenz.shade.zts.org.apache.http.ssl.SSLContextBuilder: athenz.shade.zts.org.apache.http.ssl.SSLContextBuilder loadKeyMaterial(java.net.URL,char[],char[],athenz.shade.zts.org.apache.http.ssl.PrivateKeyStrategy)>
		SHA-256: 513ef26476cf54f06d8fd0c0bf6830fe9958034d3d24bd143d2cff5a8db93c51
		Secure: true
	Object:
		Variable: varReplacer9217
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer9217)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$Handle: javax.crypto.Cipher initCipher()>
		SHA-256: 8711a386a346fc5f06b66df15228c14b68907e4e4e1fc5763bcc6d67bda8a64c
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r2.<javax.crypto.Mac: byte[] doFinal(byte[])>($r3)
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.HmacUtils: byte[] hmac(java.lang.String)>
		SHA-256: 1a63e7ea2d33cb1f8911256a0371852c56a608422f3c489b35ec0e4584021376
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: $r6 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>(r1)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$HMACMD5: byte[] getOutput()>
		SHA-256: bc8aef628fba0720e0f9048c0b8d277cbd4b156ad83f38497d37a2147e7a01d2
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer8583)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl: byte[] RC4(byte[],byte[])>
		SHA-256: f7d771c83d4307130131be4b4bf5ff310e04c496da4a777b243c970eebc2e46d
		Secure: false
	Object:
		Variable: r9
		Type: javax.net.ssl.SSLContext
		Statement: r9 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(r1, $r7)
		Method: <athenz.shade.zts.org.apache.http.ssl.SSLContextBuilder: javax.net.ssl.SSLContext build()>
		SHA-256: ad6d944b2b1ea4e227efe778c3dc3d27acf160d6725a8f24cb12b791425ecd74
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r0)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl: byte[] RC4(byte[],byte[])>
		SHA-256: b82d1849c7337db6637c2fc3d1a3052af43c59fa37baba925847f124876581ef
		Secure: false
	Object:
		Variable: r18
		Type: javax.crypto.Cipher
		Statement: r18 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer9351)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: 2d3523aa873a600358f8ae495838b420efe8afd4e6258fc2aecdbe8aa83a7dcf
		Secure: false
	Object:
		Variable: r5
		Type: byte[]
		Statement: r5 = virtualinvoke r18.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r3)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: 298ecbdc05de07fa8243b96b7b8953513eb255dde72086b7d68b11bc72f40bfa
		Secure: false
	Object:
		Variable: r116
		Type: java.security.KeyStore
		Statement: r116 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r118)
		Method: <athenz.shade.zts.org.glassfish.jersey.SslConfigurator: javax.net.ssl.SSLContext createSSLContext()>
		SHA-256: e6f7caba1d5e49436c83d171feade1a2621c2167c98a39298e96695cf1f05803
		Secure: true
	Object:
		Variable: r1
		Type: javax.crypto.Cipher
		Statement: r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer9220)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$Handle: javax.crypto.Cipher initCipher()>
		SHA-256: 5c4f8e93f7ccc7458ae3096c2be85873dd6d56f4e0a5c47ea896b5fcea9020bb
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: r6 = virtualinvoke r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r1)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl: byte[] lmResponse(byte[],byte[])>
		SHA-256: b26464e44971761bc16eb31b9c4fee8a67678d7feaceaebd6155060791d8c73c
		Secure: false
	Object:
		Variable: r28
		Type: byte[]
		Statement: r28 = virtualinvoke r25.<java.security.MessageDigest: byte[] digest()>()
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.Sha2Crypt: java.lang.String sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)>
		SHA-256: 71b129715a0e6159512027414bdc73e9ec2396d3d3255bd9a2a6c56d89315ce6
		Secure: false

Findings in Java Class: athenz.shade.zts.org.apache.http.conn.ssl.SSLContexts

	 in Method: javax.net.ssl.SSLContext createSystemDefault()
		ForbiddenMethodError violating CrySL rule for javax.net.ssl.SSLContext
			Detected call to forbidden method javax.net.ssl.SSLContext getDefault() of class javax.net.ssl.SSLContext. Instead, call method <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>.
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getDefault()>()


	 in Method: javax.net.ssl.SSLContext createDefault()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer8177, varReplacer8177, varReplacer8177)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #f1fc36b37da1273af6c30f8285246e216ec09de2b4dc7aa42fd0f82ca17ff9ea)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer8180)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer8177, varReplacer8177, varReplacer8177)


Findings in Java Class: athenz.shade.zts.org.apache.http.ssl.SSLContexts

	 in Method: javax.net.ssl.SSLContext createSystemDefault()
		ForbiddenMethodError violating CrySL rule for javax.net.ssl.SSLContext
			Detected call to forbidden method javax.net.ssl.SSLContext getDefault() of class javax.net.ssl.SSLContext. Instead, call method <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>.
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getDefault()>()


	 in Method: javax.net.ssl.SSLContext createDefault()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer10478, varReplacer10478, varReplacer10478)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer10478, varReplacer10478, varReplacer10478)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #7b7ea676f0b0113daa7923cc1650b8107e95a5d2c4a8a301980e608b932f36fa)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer10477)


Findings in Java Class: athenz.shade.zts.org.glassfish.jersey.SslConfigurator

	 in Method: javax.net.ssl.SSLContext createSSLContext()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r159.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r162, $r163, varReplacer2917)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #a2ab8ab86be8dfc88073b7974fea9f256a298a5354d4110da7f310d2f2ee7715)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: r159 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(r158)


Findings in Java Class: athenz.shade.zts.org.glassfish.jersey.client.authentication.DigestAuthenticator

	 in Method: java.lang.String md5(java.lang.String[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #db789640c23134a8a78ca499295ccd11fac588a7c09a630c80e533dfcf6d63f6)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r14 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6764)


Findings in Java Class: athenz.shade.zts.org.apache.http.impl.auth.DigestScheme

	 in Method: java.security.MessageDigest createMessageDigest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #bd3823a5d9aa45b9e8dcdb57b0361fb1187bdae63ecc0a8465b6a3387976558)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r0)


Findings in Java Class: athenz.shade.zts.org.apache.http.impl.auth.HttpEntityDigester

	 in Method: void write(byte[],int,int)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #bd3823a5d9aa45b9e8dcdb57b0361fb1187bdae63ecc0a8465b6a3387976558)
			Third parameter (with value 0)Variable pre_lenmust be  greater than pre_off
			at statement: virtualinvoke $r2.<java.security.MessageDigest: void update(byte[],int,int)>(r1, i0, i1)


	 in Method: void close()
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #bd3823a5d9aa45b9e8dcdb57b0361fb1187bdae63ecc0a8465b6a3387976558)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl

	 in Method: byte[] RC4(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer8585, $r2)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #f7d771c83d4307130131be4b4bf5ff310e04c496da4a777b243c970eebc2e46d)
			Second parameter (with value "RC4") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer8583)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #f7d771c83d4307130131be4b4bf5ff310e04c496da4a777b243c970eebc2e46d)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer8583)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer8583)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #5bf80134e15670933cb122486d1fabed46a9b46db97f22ec8a2123268bae84f9)
			First parameter (with value "RC4") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8584)


	 in Method: byte[] lmHash(java.lang.String)
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #a0c5004e519bca1c3c281cabd5d0f307fca98feaa527339c16b3f00fe3db3b8b)
			Unexpected call to method init on object of type javax.crypto.Cipher.
			at statement: virtualinvoke r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer8589, r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer8589, r3)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #a0c5004e519bca1c3c281cabd5d0f307fca98feaa527339c16b3f00fe3db3b8b)
			First parameter (with value "DES/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8591)


	 in Method: byte[] lmResponse(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer8606, r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #574b9d590449f2d9ac72209da8d2ceae09399dab4d14964f9f3177551834b590)
			First parameter (with value "DES/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8616)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #574b9d590449f2d9ac72209da8d2ceae09399dab4d14964f9f3177551834b590)
			Unexpected call to method init on object of type javax.crypto.Cipher.
			at statement: virtualinvoke r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer8617, r3)


	 in Method: java.security.Key createDESKey(byte[],int)
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #fd0c6035f850995dc04eef9717aebe2e5d047e3e1119c64dfe7a7f1ffa53097b)
			Second parameter (with value "DES") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer8639)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer8639)


	 in Method: java.security.MessageDigest getMD5()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #bce0840c4a9867f3628bf767a0011026e69d915f0ffda0360024907074839920)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8644)


Findings in Java Class: athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$Handle

	 in Method: void <init>(byte[],athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$Mode,boolean)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #5c4f8e93f7ccc7458ae3096c2be85873dd6d56f4e0a5c47ea896b5fcea9020bb)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: $r9 = specialinvoke r0.<athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$Handle: javax.crypto.Cipher initCipher()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #5c4f8e93f7ccc7458ae3096c2be85873dd6d56f4e0a5c47ea896b5fcea9020bb)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: $r9 = specialinvoke r0.<athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$Handle: javax.crypto.Cipher initCipher()>()

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #bce0840c4a9867f3628bf767a0011026e69d915f0ffda0360024907074839920)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r8 = virtualinvoke r3.<java.security.MessageDigest: byte[] digest()>()


	 in Method: javax.crypto.Cipher initCipher()
		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #847e7d6747f0aafa840ba05d874f110a29a67d89cfd295b5108ae1f86564bc50)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer9219)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #847e7d6747f0aafa840ba05d874f110a29a67d89cfd295b5108ae1f86564bc50)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer9219)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #847e7d6747f0aafa840ba05d874f110a29a67d89cfd295b5108ae1f86564bc50)
			Second parameter (with value "RC4") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer9219)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer9217)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #5c4f8e93f7ccc7458ae3096c2be85873dd6d56f4e0a5c47ea896b5fcea9020bb)
			First parameter (with value "RC4") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer9220)


	 in Method: byte[] signAndEncryptMessage(byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #5c4f8e93f7ccc7458ae3096c2be85873dd6d56f4e0a5c47ea896b5fcea9020bb)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: specialinvoke r0.<athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$Handle: void advanceMessageSequence()>()


	 in Method: byte[] decryptAndVerifySignedMessage(byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #5c4f8e93f7ccc7458ae3096c2be85873dd6d56f4e0a5c47ea896b5fcea9020bb)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: specialinvoke r0.<athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$Handle: void advanceMessageSequence()>()


Findings in Java Class: athenz.shade.zts.org.apache.http.conn.ssl.SSLContextBuilder

	 in Method: athenz.shade.zts.org.apache.http.conn.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[],athenz.shade.zts.org.apache.http.conn.ssl.PrivateKeyStrategy)
		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #e583fd691e38f136ba11f1fe50c9350acdc0da5a7df79230440be603a5329624)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r4.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r1, r2)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r4.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r1, r2)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #e583fd691e38f136ba11f1fe50c9350acdc0da5a7df79230440be603a5329624)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r4.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r1, r2)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #e583fd691e38f136ba11f1fe50c9350acdc0da5a7df79230440be603a5329624)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r4.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r1, r2)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #e583fd691e38f136ba11f1fe50c9350acdc0da5a7df79230440be603a5329624)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r4.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r1, r2)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #e583fd691e38f136ba11f1fe50c9350acdc0da5a7df79230440be603a5329624)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r4.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r1, r2)


	 in Method: javax.net.ssl.SSLContext build()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #323c65677a5ccffe4cadf1d642bbf7f0cc11c2ad4bf8c847cb9434d4e0c61ec9)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r14)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r17, $r18, $r19)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r17, $r18, $r19)


	 in Method: athenz.shade.zts.org.apache.http.conn.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore,athenz.shade.zts.org.apache.http.conn.ssl.TrustStrategy)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r3.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(r1)


Findings in Java Class: athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$CipherGen

	 in Method: byte[] getLanManagerSessionKey()
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r17.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer9337, r1)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #2d3523aa873a600358f8ae495838b420efe8afd4e6258fc2aecdbe8aa83a7dcf)
			First parameter (with value "DES/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r18 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer9351)


Findings in Java Class: athenz.shade.zts.org.apache.http.ssl.SSLContextBuilder

	 in Method: javax.net.ssl.SSLContext build()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #17297cadaf15cdc3f26bbd5bf8ebab087678c4d3aba0139ec991d49b0723822f)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: r9 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(r1)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #ad6d944b2b1ea4e227efe778c3dc3d27acf160d6725a8f24cb12b791425ecd74)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: r9 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(r1, $r7)


Findings in Java Class: athenz.shade.zts.org.apache.commons.codec.digest.HmacUtils

	 in Method: byte[] hmac(java.io.InputStream)
		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #121a39d0408e38af7cd24010b0a2fab8d7f314e62b238e0df4a62a414507db2a)
			Second parameter (with value 0)Variable offsetmust be  lesser than len
			at statement: virtualinvoke $r5.<javax.crypto.Mac: void update(byte[],int,int)>(r2, varReplacer12571, i0)


	 in Method: void <init>(java.lang.String,java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #121a39d0408e38af7cd24010b0a2fab8d7f314e62b238e0df4a62a414507db2a)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: specialinvoke r0.<athenz.shade.zts.org.apache.commons.codec.digest.HmacUtils: void <init>(java.lang.String,byte[])>(r1, $r3)


	 in Method: javax.crypto.Mac getHmacSha384(byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #121a39d0408e38af7cd24010b0a2fab8d7f314e62b238e0df4a62a414507db2a)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: return $r2


	 in Method: javax.crypto.Mac getHmacSha1(byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #121a39d0408e38af7cd24010b0a2fab8d7f314e62b238e0df4a62a414507db2a)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: return $r2


	 in Method: javax.crypto.Mac getHmacSha512(byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #121a39d0408e38af7cd24010b0a2fab8d7f314e62b238e0df4a62a414507db2a)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: return $r2


	 in Method: javax.crypto.Mac getHmacMd5(byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #121a39d0408e38af7cd24010b0a2fab8d7f314e62b238e0df4a62a414507db2a)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: return $r2


	 in Method: javax.crypto.Mac getHmacSha256(byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #121a39d0408e38af7cd24010b0a2fab8d7f314e62b238e0df4a62a414507db2a)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: return $r2


	 in Method: javax.crypto.Mac getInitializedMac(java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, r0)


Findings in Java Class: athenz.shade.zts.org.apache.commons.codec.digest.DigestUtils

	 in Method: java.security.MessageDigest getDigest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r0)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r0)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			First parameter (with value "MD2") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r0)


	 in Method: java.security.MessageDigest updateDigest(java.security.MessageDigest,java.io.InputStream)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			Third parameter (with value 0)Variable pre_lenmust be  greater than pre_off
			at statement: virtualinvoke r0.<java.security.MessageDigest: void update(byte[],int,int)>(r2, varReplacer13827, i0)


	 in Method: byte[] digest(java.security.MessageDigest,java.io.InputStream)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #f69e48164586f17cecce2112ad32e31baa2778d3f1adea93a977989695a8b6db)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()


	 in Method: byte[] digest(java.security.MessageDigest,java.io.File)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #f69e48164586f17cecce2112ad32e31baa2778d3f1adea93a977989695a8b6db)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()


	 in Method: java.security.MessageDigest getShaDigest()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: return $r0


	 in Method: void <init>(java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke r0.<athenz.shade.zts.org.apache.commons.codec.digest.DigestUtils: void <init>(java.security.MessageDigest)>($r2)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke r0.<athenz.shade.zts.org.apache.commons.codec.digest.DigestUtils: void <init>(java.security.MessageDigest)>($r2)


	 in Method: boolean isAvailable(java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #f69e48164586f17cecce2112ad32e31baa2778d3f1adea93a977989695a8b6db)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r1 = staticinvoke <athenz.shade.zts.org.apache.commons.codec.digest.DigestUtils: java.security.MessageDigest getDigest(java.lang.String,java.security.MessageDigest)>(r0, varReplacer13830)


Findings in Java Class: athenz.shade.zts.org.apache.commons.codec.digest.Md5Crypt

	 in Method: java.lang.String md5Crypt(byte[],java.lang.String,java.lang.String)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: r34 = virtualinvoke r31.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: athenz.shade.zts.org.apache.commons.codec.digest.Sha2Crypt

	 in Method: java.lang.String sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: r32 = virtualinvoke r31.<java.security.MessageDigest: byte[] digest()>()

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: r30 = virtualinvoke r29.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: athenz.shade.zts.org.apache.commons.codec.cli.Digest

	 in Method: void run(java.lang.String,java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke r0.<athenz.shade.zts.org.apache.commons.codec.cli.Digest: void run(java.lang.String,java.security.MessageDigest)>(r1, $r3)


	 in Method: void run()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke r0.<athenz.shade.zts.org.apache.commons.codec.cli.Digest: void run(java.lang.String,java.security.MessageDigest)>(varReplacer12757, $r9)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke r0.<athenz.shade.zts.org.apache.commons.codec.cli.Digest: void run(java.lang.String,java.security.MessageDigest)>(varReplacer12758, r1)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #f69e48164586f17cecce2112ad32e31baa2778d3f1adea93a977989695a8b6db)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke r0.<athenz.shade.zts.org.apache.commons.codec.cli.Digest: void run(java.lang.String,java.security.MessageDigest)>(varReplacer12757, $r9)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #f69e48164586f17cecce2112ad32e31baa2778d3f1adea93a977989695a8b6db)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke r0.<athenz.shade.zts.org.apache.commons.codec.cli.Digest: void run(java.lang.String,java.security.MessageDigest)>(varReplacer12758, r1)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 115

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 19
	ConstraintError: 23
	RequiredPredicateError: 17
	ForbiddenMethodError: 2
	TypestateError: 11
	NeverTypeOfError: 8
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 169 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 3.057 min

