<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>SpotBugs Report</title>
<style type="text/css">
		.tablerow0 {
			background: #EEEEEE;
		}

		.tablerow1 {
			background: white;
		}

		.detailrow0 {
			background: #EEEEEE;
		}

		.detailrow1 {
			background: white;
		}

		.tableheader {
			background: #b9b9fe;
			font-size: larger;
		}

		.tablerow0:hover, .tablerow1:hover {
			background: #aaffaa;
		}

		.priority-1 {
		    color: red;
		    font-weight: bold;
		}
		.priority-2 {
		    color: orange;
		    font-weight: bold;
		}
		.priority-3 {
		    color: green;
		    font-weight: bold;
		}
		.priority-4 {
		    color: blue;
		    font-weight: bold;
		}
		</style>
<script type="text/javascript">
			function toggleRow(elid) {
				if (document.getElementById) {
					element = document.getElementById(elid);
					if (element) {
						if (element.style.display == 'none') {
							element.style.display = 'block';
							//window.status = 'Toggle on!';
						} else {
							element.style.display = 'none';
							//window.status = 'Toggle off!';
						}
					}
				}
			}
		</script>
</head>
<body>
<h1>
<a href="https://spotbugs.github.io/">SpotBugs</a> Report</h1>
<h2>Project Information</h2>
<p>Project: 
		</p>
<p>SpotBugs version: 3.1.12</p>
<p>Code analyzed:</p>
<ul>
<li>/home/x/CryptoAPIDetect/dataset/group/pulsar.git/mysql.jar</li>
</ul>
<p>
<br/>
<br/>
</p>
<h2>Metrics</h2>
<p>41202 lines of code analyzed,
	in 269 classes, 
	in 13 packages.</p>
<table width="500" cellpadding="5" cellspacing="2">
<tr class="tableheader">
<th align="left">Metric</th>
<th align="right">Total</th>
<th align="right">Density*</th>
</tr>
<tr class="tablerow0">
<td>High Priority Warnings</td>
<td align="right">19</td>
<td align="right">0.46</td>
</tr>
<tr class="tablerow1">
<td>Medium Priority Warnings</td>
<td align="right">150</td>
<td align="right">3.64</td>
</tr>
<tr class="$totalClass">
<td>
<b>Total Warnings</b>
</td>
<td align="right">
<b>169</b>
</td>
<td align="right">
<b>4.10</b>
</td>
</tr>
</table>
<p>
<i>(* Defects per Thousand lines of non-commenting source statements)</i>
</p>
<p>
<br/>
<br/>
</p>
<h2>Contents</h2>
<ul>
<li>
<a href="#Warnings_SECURITY">Security Warnings</a>
</li>
<li>
<a href="#Details">Details</a>
</li>
</ul>
<h1>Summary</h1>
<table width="500" cellpadding="5" cellspacing="2">
<tr class="tableheader">
<th align="left">Warning Type</th>
<th align="right">Number</th>
</tr>
<tr class="tablerow0">
<td>
<a href="#Warnings_SECURITY">Security Warnings</a>
</td>
<td align="right">165</td>
</tr>
<tr class="tablerow1">
<td>
<b>Total</b>
</td>
<td align="right">
<b>165</b>
</td>
</tr>
</table>
<h1>Warnings</h1>
<p>Click on a warning row to see full context information.</p>
<h2>
<a name="Warnings_SECURITY">Security Warnings</a>
</h2>
<table class="warningtable" width="100%" cellspacing="0">
<tr class="tableheader">
<th align="left">Code</th>
<th align="left">Warning</th>
</tr>
<tr class="tablerow1" onclick="toggleRow('N79595');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N79595" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class com.mysql.jdbc.Util<br/>In method com.mysql.jdbc.Util.stackTraceToString(Throwable)<br/>At Util.java:[line 371]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N81386');">
<td>
<span class="priority-2">SECCI</span>
</td>
<td>This usage of java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process; can be vulnerable to Command Injection</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N81386" style="display: none;">
<a href="#COMMAND_INJECTION">Bug type COMMAND_INJECTION (click for details)</a>
<br/>In class com.mysql.jdbc.util.ServerController<br/>In method com.mysql.jdbc.util.ServerController.start()<br/>At ServerController.java:[line 148]<br/>Sink method java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process;<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/util/ServerController.getCommandLine()Ljava/lang/String;<br/>Unknown source java/lang/StringBuffer.append(Ljava/lang/String;)Ljava/lang/StringBuffer;<br/>Unknown source java/util/Properties.keySet()Ljava/util/Set;<br/>Unknown source java/util/Properties.getProperty(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source com/mysql/jdbc/util/ServerController.getServerProps()Ljava/util/Properties;<br/>Unknown source java/lang/StringBuffer.&lt;init&gt;(Ljava/lang/String;)V<br/>Unknown source com/mysql/jdbc/util/ServerController.buildOptionalCommandLine()Ljava/lang/String;<br/>Unknown source java/util/Iterator.next()Ljava/lang/Object;<br/>Unknown source com/mysql/jdbc/util/ServerController.getFullExecutablePath()Ljava/lang/String;<br/>Unknown source java/lang/StringBuffer.toString()Ljava/lang/String;<br/>Unknown source java/util/Properties.getProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source com/mysql/jdbc/util/ServerController.serverProps<br/>At ServerController.java:[line 148]<br/>At ServerController.java:[line 222]<br/>At ServerController.java:[line 232]<br/>At ServerController.java:[line 233]<br/>At ServerController.java:[line 235]<br/>At ServerController.java:[line 246]<br/>At ServerController.java:[line 251]<br/>At ServerController.java:[line 252]<br/>At ServerController.java:[line 259]<br/>At ServerController.java:[line 261]<br/>At ServerController.java:[line 266]<br/>At ServerController.java:[line 273]<br/>At ServerController.java:[line 276]<br/>At ServerController.java:[line 278]<br/>At ServerController.java:[line 292]<br/>At ServerController.java:[line 294]<br/>At ServerController.java:[line 295]<br/>At ServerController.java:[line 299]<br/>At ServerController.java:[line 300]<br/>At ServerController.java:[line 301]<br/>At ServerController.java:[line 302]<br/>At ServerController.java:[line 303]<br/>At ServerController.java:[line 304]<br/>At ServerController.java:[line 306]<br/>At ServerController.java:[line 307]<br/>At ServerController.java:[line 313]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N81770');">
<td>
<span class="priority-2">SECCI</span>
</td>
<td>This usage of java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process; can be vulnerable to Command Injection</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N81770" style="display: none;">
<a href="#COMMAND_INJECTION">Bug type COMMAND_INJECTION (click for details)</a>
<br/>In class com.mysql.jdbc.util.ServerController<br/>In method com.mysql.jdbc.util.ServerController.stop(boolean)<br/>At ServerController.java:[line 181]<br/>Sink method java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process;<br/>Sink parameter 0<br/>Unknown source java/lang/StringBuffer.append(Ljava/lang/String;)Ljava/lang/StringBuffer;<br/>Unknown source java/util/Properties.getProperty(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source com/mysql/jdbc/util/ServerController.getServerProps()Ljava/util/Properties;<br/>Unknown source java/lang/StringBuffer.&lt;init&gt;(Ljava/lang/String;)V<br/>Unknown source com/mysql/jdbc/util/ServerController.serverProps<br/>Unknown source java/lang/StringBuffer.toString()Ljava/lang/String;<br/>At ServerController.java:[line 165]<br/>At ServerController.java:[line 167]<br/>At ServerController.java:[line 170]<br/>At ServerController.java:[line 175]<br/>At ServerController.java:[line 176]<br/>At ServerController.java:[line 177]<br/>At ServerController.java:[line 181]<br/>At ServerController.java:[line 222]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66819');">
<td>
<span class="priority-2">SECCONFCTRL</span>
</td>
<td>This use of com/mysql/jdbc/ConnectionImpl.setCatalog(Ljava/lang/String;)V might be used to control configuration externally</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66819" style="display: none;">
<a href="#EXTERNAL_CONFIG_CONTROL">Bug type EXTERNAL_CONFIG_CONTROL (click for details)</a>
<br/>In class com.mysql.jdbc.ConnectionImpl<br/>In method com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(boolean, Properties)<br/>At ConnectionImpl.java:[line 2544]<br/>Sink method com/mysql/jdbc/ConnectionImpl.setCatalog(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/ConnectionImpl.getCatalog()Ljava/lang/String;<br/>Unknown source com/mysql/jdbc/ConnectionImpl.database<br/>At ConnectionImpl.java:[line 2527]<br/>At ConnectionImpl.java:[line 2983]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66913');">
<td>
<span class="priority-2">SECCONFCTRL</span>
</td>
<td>This use of com/mysql/jdbc/ConnectionImpl.setCatalog(Ljava/lang/String;)V might be used to control configuration externally</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66913" style="display: none;">
<a href="#EXTERNAL_CONFIG_CONTROL">Bug type EXTERNAL_CONFIG_CONTROL (click for details)</a>
<br/>In class com.mysql.jdbc.ConnectionImpl<br/>In method com.mysql.jdbc.ConnectionImpl.connectWithRetries(boolean, Properties)<br/>At ConnectionImpl.java:[line 2361]<br/>Sink method com/mysql/jdbc/ConnectionImpl.setCatalog(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/ConnectionImpl.getCatalog()Ljava/lang/String;<br/>Unknown source com/mysql/jdbc/ConnectionImpl.database<br/>At ConnectionImpl.java:[line 2343]<br/>At ConnectionImpl.java:[line 2983]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69057');">
<td>
<span class="priority-1">SECCONFCTRL</span>
</td>
<td>This use of com/mysql/jdbc/MySQLConnection.setCatalog(Ljava/lang/String;)V might be used to control configuration externally</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69057" style="display: none;">
<a href="#EXTERNAL_CONFIG_CONTROL">Bug type EXTERNAL_CONFIG_CONTROL (click for details)</a>
<br/>In class com.mysql.jdbc.DatabaseMetaData<br/>In method com.mysql.jdbc.DatabaseMetaData.getCallStmtParameterTypes(String, String, String, List, boolean)<br/>At DatabaseMetaData.java:[line 1600]<br/>Sink method com/mysql/jdbc/MySQLConnection.setCatalog(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/DatabaseMetaData.getCallStmtParameterTypes(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Z)V parameter 4<br/>Method usage with tainted arguments detected<br/>At DatabaseMetaData.java:[line 1554]<br/>At DatabaseMetaData.java:[line 1600]<br/>At DatabaseMetaData.java:[line 4282]<br/>At DatabaseMetaData.java:[line 4283]<br/>At DatabaseMetaData.java:[line 4287]<br/>At DatabaseMetaData.java:[line 4291]<br/>At DatabaseMetaData.java:[line 4294]<br/>At DatabaseMetaData.java:[line 4295]<br/>At DatabaseMetaData.java:[line 4308]<br/>At DatabaseMetaData.java:[line 4337]<br/>At DatabaseMetaData.java:[line 4338]<br/>At DatabaseMetaData.java:[line 4350]<br/>At DatabaseMetaData.java:[line 4352]<br/>At DatabaseMetaData.java:[line 4359]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69271');">
<td>
<span class="priority-2">SECCONFCTRL</span>
</td>
<td>This use of com/mysql/jdbc/MySQLConnection.setCatalog(Ljava/lang/String;)V might be used to control configuration externally</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69271" style="display: none;">
<a href="#EXTERNAL_CONFIG_CONTROL">Bug type EXTERNAL_CONFIG_CONTROL (click for details)</a>
<br/>In class com.mysql.jdbc.DatabaseMetaData<br/>In method com.mysql.jdbc.DatabaseMetaData.getCallStmtParameterTypes(String, String, String, List, boolean)<br/>At DatabaseMetaData.java:[line 1608]<br/>Sink method com/mysql/jdbc/MySQLConnection.setCatalog(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/MySQLConnection.getCatalog()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N79703');">
<td>
<span class="priority-2">SECCONFCTRL</span>
</td>
<td>This use of com/mysql/jdbc/Connection.setCatalog(Ljava/lang/String;)V might be used to control configuration externally</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N79703" style="display: none;">
<a href="#EXTERNAL_CONFIG_CONTROL">Bug type EXTERNAL_CONFIG_CONTROL (click for details)</a>
<br/>In class com.mysql.jdbc.jdbc2.optional.ConnectionWrapper<br/>In method com.mysql.jdbc.jdbc2.optional.ConnectionWrapper.setCatalog(String)<br/>At ConnectionWrapper.java:[line 188]<br/>Sink method com/mysql/jdbc/Connection.setCatalog(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/jdbc2/optional/ConnectionWrapper.setCatalog(Ljava/lang/String;)V parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N73650');">
<td>
<span class="priority-2">SECCONFCTRL</span>
</td>
<td>This use of com/mysql/jdbc/MySQLConnection.setCatalog(Ljava/lang/String;)V might be used to control configuration externally</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N73650" style="display: none;">
<a href="#EXTERNAL_CONFIG_CONTROL">Bug type EXTERNAL_CONFIG_CONTROL (click for details)</a>
<br/>In class com.mysql.jdbc.LoadBalancedMySQLConnection<br/>In method com.mysql.jdbc.LoadBalancedMySQLConnection.setCatalog(String)<br/>At LoadBalancedMySQLConnection.java:[line 2315]<br/>Sink method com/mysql/jdbc/MySQLConnection.setCatalog(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/LoadBalancedMySQLConnection.setCatalog(Ljava/lang/String;)V parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N74464');">
<td>
<span class="priority-2">SECCONFCTRL</span>
</td>
<td>This use of com/mysql/jdbc/Connection.setCatalog(Ljava/lang/String;)V might be used to control configuration externally</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N74464" style="display: none;">
<a href="#EXTERNAL_CONFIG_CONTROL">Bug type EXTERNAL_CONFIG_CONTROL (click for details)</a>
<br/>In class com.mysql.jdbc.LoadBalancingConnectionProxy<br/>In method com.mysql.jdbc.LoadBalancingConnectionProxy.syncSessionState(Connection, Connection)<br/>At LoadBalancingConnectionProxy.java:[line 1126]<br/>Sink method com/mysql/jdbc/Connection.setCatalog(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/Connection.getCatalog()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N75256');">
<td>
<span class="priority-2">SECCONFCTRL</span>
</td>
<td>This use of com/mysql/jdbc/MySQLConnection.setCatalog(Ljava/lang/String;)V might be used to control configuration externally</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N75256" style="display: none;">
<a href="#EXTERNAL_CONFIG_CONTROL">Bug type EXTERNAL_CONFIG_CONTROL (click for details)</a>
<br/>In class com.mysql.jdbc.PreparedStatement<br/>In method com.mysql.jdbc.PreparedStatement.execute()<br/>At PreparedStatement.java:[line 1322]<br/>Sink method com/mysql/jdbc/MySQLConnection.setCatalog(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/PreparedStatement.currentCatalog<br/>At PreparedStatement.java:[line 1322]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N75335');">
<td>
<span class="priority-2">SECCONFCTRL</span>
</td>
<td>This use of com/mysql/jdbc/MySQLConnection.setCatalog(Ljava/lang/String;)V might be used to control configuration externally</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N75335" style="display: none;">
<a href="#EXTERNAL_CONFIG_CONTROL">Bug type EXTERNAL_CONFIG_CONTROL (click for details)</a>
<br/>In class com.mysql.jdbc.PreparedStatement<br/>In method com.mysql.jdbc.PreparedStatement.execute()<br/>At PreparedStatement.java:[line 1400]<br/>Sink method com/mysql/jdbc/MySQLConnection.setCatalog(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/MySQLConnection.getCatalog()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N75404');">
<td>
<span class="priority-2">SECCONFCTRL</span>
</td>
<td>This use of com/mysql/jdbc/MySQLConnection.setCatalog(Ljava/lang/String;)V might be used to control configuration externally</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N75404" style="display: none;">
<a href="#EXTERNAL_CONFIG_CONTROL">Bug type EXTERNAL_CONFIG_CONTROL (click for details)</a>
<br/>In class com.mysql.jdbc.PreparedStatement<br/>In method com.mysql.jdbc.PreparedStatement.executeQuery()<br/>At PreparedStatement.java:[line 2279]<br/>Sink method com/mysql/jdbc/MySQLConnection.setCatalog(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/PreparedStatement.currentCatalog<br/>At PreparedStatement.java:[line 2279]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N75483');">
<td>
<span class="priority-2">SECCONFCTRL</span>
</td>
<td>This use of com/mysql/jdbc/MySQLConnection.setCatalog(Ljava/lang/String;)V might be used to control configuration externally</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N75483" style="display: none;">
<a href="#EXTERNAL_CONFIG_CONTROL">Bug type EXTERNAL_CONFIG_CONTROL (click for details)</a>
<br/>In class com.mysql.jdbc.PreparedStatement<br/>In method com.mysql.jdbc.PreparedStatement.executeQuery()<br/>At PreparedStatement.java:[line 2320]<br/>Sink method com/mysql/jdbc/MySQLConnection.setCatalog(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/MySQLConnection.getCatalog()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N75552');">
<td>
<span class="priority-2">SECCONFCTRL</span>
</td>
<td>This use of com/mysql/jdbc/MySQLConnection.setCatalog(Ljava/lang/String;)V might be used to control configuration externally</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N75552" style="display: none;">
<a href="#EXTERNAL_CONFIG_CONTROL">Bug type EXTERNAL_CONFIG_CONTROL (click for details)</a>
<br/>In class com.mysql.jdbc.PreparedStatement<br/>In method com.mysql.jdbc.PreparedStatement.executeQuery()<br/>At PreparedStatement.java:[line 2330]<br/>Sink method com/mysql/jdbc/MySQLConnection.setCatalog(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/MySQLConnection.getCatalog()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N75621');">
<td>
<span class="priority-2">SECCONFCTRL</span>
</td>
<td>This use of com/mysql/jdbc/MySQLConnection.setCatalog(Ljava/lang/String;)V might be used to control configuration externally</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N75621" style="display: none;">
<a href="#EXTERNAL_CONFIG_CONTROL">Bug type EXTERNAL_CONFIG_CONTROL (click for details)</a>
<br/>In class com.mysql.jdbc.PreparedStatement<br/>In method com.mysql.jdbc.PreparedStatement.executeUpdate(byte[][], InputStream[], boolean[], int[], boolean[], boolean)<br/>At PreparedStatement.java:[line 2442]<br/>Sink method com/mysql/jdbc/MySQLConnection.setCatalog(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/PreparedStatement.currentCatalog<br/>At PreparedStatement.java:[line 2442]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N75700');">
<td>
<span class="priority-2">SECCONFCTRL</span>
</td>
<td>This use of com/mysql/jdbc/MySQLConnection.setCatalog(Ljava/lang/String;)V might be used to control configuration externally</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N75700" style="display: none;">
<a href="#EXTERNAL_CONFIG_CONTROL">Bug type EXTERNAL_CONFIG_CONTROL (click for details)</a>
<br/>In class com.mysql.jdbc.PreparedStatement<br/>In method com.mysql.jdbc.PreparedStatement.executeUpdate(byte[][], InputStream[], boolean[], int[], boolean[], boolean)<br/>At PreparedStatement.java:[line 2469]<br/>Sink method com/mysql/jdbc/MySQLConnection.setCatalog(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/MySQLConnection.getCatalog()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N76476');">
<td>
<span class="priority-2">SECCONFCTRL</span>
</td>
<td>This use of com/mysql/jdbc/Connection.setCatalog(Ljava/lang/String;)V might be used to control configuration externally</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N76476" style="display: none;">
<a href="#EXTERNAL_CONFIG_CONTROL">Bug type EXTERNAL_CONFIG_CONTROL (click for details)</a>
<br/>In class com.mysql.jdbc.ReplicationConnection<br/>In method com.mysql.jdbc.ReplicationConnection.setCatalog(String)<br/>At ReplicationConnection.java:[line 472]<br/>Sink method com/mysql/jdbc/Connection.setCatalog(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/ReplicationConnection.setCatalog(Ljava/lang/String;)V parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N76550');">
<td>
<span class="priority-2">SECCONFCTRL</span>
</td>
<td>This use of com/mysql/jdbc/Connection.setCatalog(Ljava/lang/String;)V might be used to control configuration externally</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N76550" style="display: none;">
<a href="#EXTERNAL_CONFIG_CONTROL">Bug type EXTERNAL_CONFIG_CONTROL (click for details)</a>
<br/>In class com.mysql.jdbc.ReplicationConnection<br/>In method com.mysql.jdbc.ReplicationConnection.swapConnections(Connection, Connection)<br/>At ReplicationConnection.java:[line 557]<br/>Sink method com/mysql/jdbc/Connection.setCatalog(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/Connection.getCatalog()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N76619');">
<td>
<span class="priority-2">SECCONFCTRL</span>
</td>
<td>This use of com/mysql/jdbc/Connection.setCatalog(Ljava/lang/String;)V might be used to control configuration externally</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N76619" style="display: none;">
<a href="#EXTERNAL_CONFIG_CONTROL">Bug type EXTERNAL_CONFIG_CONTROL (click for details)</a>
<br/>In class com.mysql.jdbc.ReplicationConnection<br/>In method com.mysql.jdbc.ReplicationConnection.swapConnections(Connection, Connection)<br/>At ReplicationConnection.java:[line 559]<br/>Sink method com/mysql/jdbc/Connection.setCatalog(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/Connection.getCatalog()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N78021');">
<td>
<span class="priority-2">SECCONFCTRL</span>
</td>
<td>This use of com/mysql/jdbc/MySQLConnection.setCatalog(Ljava/lang/String;)V might be used to control configuration externally</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N78021" style="display: none;">
<a href="#EXTERNAL_CONFIG_CONTROL">Bug type EXTERNAL_CONFIG_CONTROL (click for details)</a>
<br/>In class com.mysql.jdbc.StatementImpl<br/>In method com.mysql.jdbc.StatementImpl.execute(String, boolean)<br/>At StatementImpl.java:[line 843]<br/>Sink method com/mysql/jdbc/MySQLConnection.setCatalog(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/StatementImpl.currentCatalog<br/>At StatementImpl.java:[line 843]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N78100');">
<td>
<span class="priority-2">SECCONFCTRL</span>
</td>
<td>This use of com/mysql/jdbc/MySQLConnection.setCatalog(Ljava/lang/String;)V might be used to control configuration externally</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N78100" style="display: none;">
<a href="#EXTERNAL_CONFIG_CONTROL">Bug type EXTERNAL_CONFIG_CONTROL (click for details)</a>
<br/>In class com.mysql.jdbc.StatementImpl<br/>In method com.mysql.jdbc.StatementImpl.execute(String, boolean)<br/>At StatementImpl.java:[line 931]<br/>Sink method com/mysql/jdbc/MySQLConnection.setCatalog(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/MySQLConnection.getCatalog()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N78169');">
<td>
<span class="priority-2">SECCONFCTRL</span>
</td>
<td>This use of com/mysql/jdbc/MySQLConnection.setCatalog(Ljava/lang/String;)V might be used to control configuration externally</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N78169" style="display: none;">
<a href="#EXTERNAL_CONFIG_CONTROL">Bug type EXTERNAL_CONFIG_CONTROL (click for details)</a>
<br/>In class com.mysql.jdbc.StatementImpl<br/>In method com.mysql.jdbc.StatementImpl.executeQuery(String)<br/>At StatementImpl.java:[line 1560]<br/>Sink method com/mysql/jdbc/MySQLConnection.setCatalog(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/StatementImpl.currentCatalog<br/>At StatementImpl.java:[line 1560]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N78248');">
<td>
<span class="priority-2">SECCONFCTRL</span>
</td>
<td>This use of com/mysql/jdbc/MySQLConnection.setCatalog(Ljava/lang/String;)V might be used to control configuration externally</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N78248" style="display: none;">
<a href="#EXTERNAL_CONFIG_CONTROL">Bug type EXTERNAL_CONFIG_CONTROL (click for details)</a>
<br/>In class com.mysql.jdbc.StatementImpl<br/>In method com.mysql.jdbc.StatementImpl.executeQuery(String)<br/>At StatementImpl.java:[line 1606]<br/>Sink method com/mysql/jdbc/MySQLConnection.setCatalog(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/MySQLConnection.getCatalog()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N78317');">
<td>
<span class="priority-2">SECCONFCTRL</span>
</td>
<td>This use of com/mysql/jdbc/MySQLConnection.setCatalog(Ljava/lang/String;)V might be used to control configuration externally</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N78317" style="display: none;">
<a href="#EXTERNAL_CONFIG_CONTROL">Bug type EXTERNAL_CONFIG_CONTROL (click for details)</a>
<br/>In class com.mysql.jdbc.StatementImpl<br/>In method com.mysql.jdbc.StatementImpl.executeQuery(String)<br/>At StatementImpl.java:[line 1655]<br/>Sink method com/mysql/jdbc/MySQLConnection.setCatalog(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/MySQLConnection.getCatalog()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N78386');">
<td>
<span class="priority-2">SECCONFCTRL</span>
</td>
<td>This use of com/mysql/jdbc/MySQLConnection.setCatalog(Ljava/lang/String;)V might be used to control configuration externally</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N78386" style="display: none;">
<a href="#EXTERNAL_CONFIG_CONTROL">Bug type EXTERNAL_CONFIG_CONTROL (click for details)</a>
<br/>In class com.mysql.jdbc.StatementImpl<br/>In method com.mysql.jdbc.StatementImpl.executeUpdate(String, boolean, boolean)<br/>At StatementImpl.java:[line 1798]<br/>Sink method com/mysql/jdbc/MySQLConnection.setCatalog(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/StatementImpl.currentCatalog<br/>At StatementImpl.java:[line 1798]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N78465');">
<td>
<span class="priority-2">SECCONFCTRL</span>
</td>
<td>This use of com/mysql/jdbc/MySQLConnection.setCatalog(Ljava/lang/String;)V might be used to control configuration externally</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N78465" style="display: none;">
<a href="#EXTERNAL_CONFIG_CONTROL">Bug type EXTERNAL_CONFIG_CONTROL (click for details)</a>
<br/>In class com.mysql.jdbc.StatementImpl<br/>In method com.mysql.jdbc.StatementImpl.executeUpdate(String, boolean, boolean)<br/>At StatementImpl.java:[line 1853]<br/>Sink method com/mysql/jdbc/MySQLConnection.setCatalog(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/MySQLConnection.getCatalog()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N77428');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in com.mysql.jdbc.ResultSetImpl.getNativeConvertToString(int, Field)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N77428" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class com.mysql.jdbc.ResultSetImpl<br/>In method com.mysql.jdbc.ResultSetImpl.getNativeConvertToString(int, Field)<br/>At ResultSetImpl.java:[line 3794]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N77482');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in com.mysql.jdbc.ResultSetImpl.getObject(int)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N77482" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class com.mysql.jdbc.ResultSetImpl<br/>In method com.mysql.jdbc.ResultSetImpl.getObject(int)<br/>At ResultSetImpl.java:[line 5020]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N79649');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in com.mysql.jdbc.Util.readObject(ResultSet, int)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N79649" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class com.mysql.jdbc.Util<br/>In method com.mysql.jdbc.Util.readObject(ResultSet, int)<br/>At Util.java:[line 280]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67007');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67007" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class com.mysql.jdbc.ConnectionImpl<br/>In method com.mysql.jdbc.ConnectionImpl.&lt;static initializer for ConnectionImpl&gt;()<br/>At ConnectionImpl.java:[line 422]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N76418');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.lang.Math.random()) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N76418" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class com.mysql.jdbc.RandomBalanceStrategy<br/>In method com.mysql.jdbc.RandomBalanceStrategy.pickConnection(LoadBalancingConnectionProxy, List, Map, long[], int)<br/>At RandomBalanceStrategy.java:[line 64]<br/>Value java.lang.Math.random()</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N77768');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.lang.Math.random()) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N77768" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class com.mysql.jdbc.SequentialBalanceStrategy<br/>In method com.mysql.jdbc.SequentialBalanceStrategy.pickConnection(LoadBalancingConnectionProxy, List, Map, long[], int)<br/>At SequentialBalanceStrategy.java:[line 66]<br/>Value java.lang.Math.random()</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N74533');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N74533" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class com.mysql.jdbc.MysqlIO<br/>In method com.mysql.jdbc.MysqlIO.sendFileToServer(StatementImpl, String)<br/>At MysqlIO.java:[line 4014]<br/>Sink method java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/MysqlIO.sendFileToServer(Lcom/mysql/jdbc/StatementImpl;Ljava/lang/String;)Lcom/mysql/jdbc/ResultSetImpl; parameter 0<br/>At Buffer.java:[line 432]<br/>At Buffer.java:[line 449]<br/>At MysqlIO.java:[line 3189]<br/>At MysqlIO.java:[line 3193]<br/>At MysqlIO.java:[line 3196]<br/>At StringUtils.java:[line 1990]<br/>At StringUtils.java:[line 2004]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N74672');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N74672" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class com.mysql.jdbc.MysqlIO<br/>In method com.mysql.jdbc.MysqlIO.sendFileToServer(StatementImpl, String)<br/>At MysqlIO.java:[line 4023]<br/>Sink method java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/MysqlIO.sendFileToServer(Lcom/mysql/jdbc/StatementImpl;Ljava/lang/String;)Lcom/mysql/jdbc/ResultSetImpl; parameter 0<br/>At Buffer.java:[line 432]<br/>At Buffer.java:[line 449]<br/>At MysqlIO.java:[line 3189]<br/>At MysqlIO.java:[line 3193]<br/>At MysqlIO.java:[line 3196]<br/>At StringUtils.java:[line 1990]<br/>At StringUtils.java:[line 2004]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N74811');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N74811" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class com.mysql.jdbc.MysqlIO<br/>In method com.mysql.jdbc.MysqlIO.sendFileToServer(StatementImpl, String)<br/>At MysqlIO.java:[line 4027]<br/>Sink method java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/MysqlIO.sendFileToServer(Lcom/mysql/jdbc/StatementImpl;Ljava/lang/String;)Lcom/mysql/jdbc/ResultSetImpl; parameter 0<br/>At Buffer.java:[line 432]<br/>At Buffer.java:[line 449]<br/>At MysqlIO.java:[line 3189]<br/>At MysqlIO.java:[line 3193]<br/>At MysqlIO.java:[line 3196]<br/>At StringUtils.java:[line 1990]<br/>At StringUtils.java:[line 2004]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N75104');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/RandomAccessFile.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N75104" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class com.mysql.jdbc.NamedPipeSocketFactory$NamedPipeSocket<br/>In method new com.mysql.jdbc.NamedPipeSocketFactory$NamedPipeSocket(NamedPipeSocketFactory, String)<br/>At NamedPipeSocketFactory.java:[line 57]<br/>Sink method java/io/RandomAccessFile.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V<br/>Sink parameter 1<br/>Unknown source com/mysql/jdbc/NamedPipeSocketFactory$NamedPipeSocket.&lt;init&gt;(Lcom/mysql/jdbc/NamedPipeSocketFactory;Ljava/lang/String;)V parameter 0<br/>Method usage not detected<br/>At NamedPipeSocketFactory.java:[line 204]<br/>At NamedPipeSocketFactory.java:[line 215]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N81944');">
<td>
<span class="priority-1">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N81944" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class com.mysql.jdbc.util.VersionFSHierarchyMaker<br/>In method com.mysql.jdbc.util.VersionFSHierarchyMaker.main(String[])<br/>At VersionFSHierarchyMaker.java:[line 73]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Tainted source com/mysql/jdbc/util/VersionFSHierarchyMaker.main([Ljava/lang/String;)V parameter 0</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N82013');">
<td>
<span class="priority-1">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N82013" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class com.mysql.jdbc.util.VersionFSHierarchyMaker<br/>In method com.mysql.jdbc.util.VersionFSHierarchyMaker.main(String[])<br/>At VersionFSHierarchyMaker.java:[line 74]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/util/VersionFSHierarchyMaker.removeWhitespaceChars(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Tainted source java/sql/ResultSet.getString(I)Ljava/lang/String;<br/>At VersionFSHierarchyMaker.java:[line 65]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N82097');">
<td>
<span class="priority-1">SECPTO</span>
</td>
<td>This API (java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V) writes to a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N82097" style="display: none;">
<a href="#PATH_TRAVERSAL_OUT">Bug type PATH_TRAVERSAL_OUT (click for details)</a>
<br/>In class com.mysql.jdbc.util.VersionFSHierarchyMaker<br/>In method com.mysql.jdbc.util.VersionFSHierarchyMaker.main(String[])<br/>At VersionFSHierarchyMaker.java:[line 85]<br/>Sink method java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Tainted source com/mysql/jdbc/util/VersionFSHierarchyMaker.main([Ljava/lang/String;)V parameter 0</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N77536');">
<td>
<span class="priority-2">SECSHA1</span>
</td>
<td>This API SHA-1 (SHA-1) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N77536" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_SHA1">Bug type WEAK_MESSAGE_DIGEST_SHA1 (click for details)</a>
<br/>In class com.mysql.jdbc.Security<br/>In method com.mysql.jdbc.Security.getBinaryPassword(int[], boolean)<br/>At Security.java:[line 138]<br/>Value SHA-1</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N77594');">
<td>
<span class="priority-2">SECSHA1</span>
</td>
<td>This API SHA-1 (SHA-1) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N77594" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_SHA1">Bug type WEAK_MESSAGE_DIGEST_SHA1 (click for details)</a>
<br/>In class com.mysql.jdbc.Security<br/>In method com.mysql.jdbc.Security.passwordHashStage1(String)<br/>At Security.java:[line 264]<br/>Value SHA-1</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N77652');">
<td>
<span class="priority-2">SECSHA1</span>
</td>
<td>This API SHA-1 (SHA-1) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N77652" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_SHA1">Bug type WEAK_MESSAGE_DIGEST_SHA1 (click for details)</a>
<br/>In class com.mysql.jdbc.Security<br/>In method com.mysql.jdbc.Security.passwordHashStage2(byte[], byte[])<br/>At Security.java:[line 297]<br/>Value SHA-1</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N77710');">
<td>
<span class="priority-2">SECSHA1</span>
</td>
<td>This API SHA-1 (SHA-1) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N77710" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_SHA1">Bug type WEAK_MESSAGE_DIGEST_SHA1 (click for details)</a>
<br/>In class com.mysql.jdbc.Security<br/>In method com.mysql.jdbc.Security.scramble411(String, String, Connection)<br/>At Security.java:[line 326]<br/>Value SHA-1</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65551');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/MySQLConnection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65551" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.BlobFromLocator<br/>In method com.mysql.jdbc.BlobFromLocator.createGetBytesStatement()<br/>At BlobFromLocator.java:[line 530]<br/>Sink method com/mysql/jdbc/MySQLConnection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source java/lang/StringBuffer.append(Ljava/lang/String;)Ljava/lang/StringBuffer;<br/>Unknown source com/mysql/jdbc/BlobFromLocator.primaryKeyColumns<br/>Unknown source com/mysql/jdbc/BlobFromLocator.blobColumnName<br/>Unknown source com/mysql/jdbc/BlobFromLocator.tableName<br/>Unknown source java/lang/StringBuffer.toString()Ljava/lang/String;<br/>At BlobFromLocator.java:[line 512]<br/>At BlobFromLocator.java:[line 513]<br/>At BlobFromLocator.java:[line 514]<br/>At BlobFromLocator.java:[line 515]<br/>At BlobFromLocator.java:[line 516]<br/>At BlobFromLocator.java:[line 517]<br/>At BlobFromLocator.java:[line 518]<br/>At BlobFromLocator.java:[line 519]<br/>At BlobFromLocator.java:[line 521]<br/>At BlobFromLocator.java:[line 522]<br/>At BlobFromLocator.java:[line 525]<br/>At BlobFromLocator.java:[line 526]<br/>At BlobFromLocator.java:[line 527]<br/>At BlobFromLocator.java:[line 530]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65780');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/MySQLConnection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65780" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.BlobFromLocator<br/>In method com.mysql.jdbc.BlobFromLocator.length()<br/>At BlobFromLocator.java:[line 329]<br/>Sink method com/mysql/jdbc/MySQLConnection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source java/lang/StringBuffer.append(Ljava/lang/String;)Ljava/lang/StringBuffer;<br/>Unknown source com/mysql/jdbc/BlobFromLocator.primaryKeyColumns<br/>Unknown source com/mysql/jdbc/BlobFromLocator.blobColumnName<br/>Unknown source com/mysql/jdbc/BlobFromLocator.tableName<br/>Unknown source java/lang/StringBuffer.toString()Ljava/lang/String;<br/>At BlobFromLocator.java:[line 313]<br/>At BlobFromLocator.java:[line 314]<br/>At BlobFromLocator.java:[line 315]<br/>At BlobFromLocator.java:[line 316]<br/>At BlobFromLocator.java:[line 318]<br/>At BlobFromLocator.java:[line 319]<br/>At BlobFromLocator.java:[line 322]<br/>At BlobFromLocator.java:[line 323]<br/>At BlobFromLocator.java:[line 324]<br/>At BlobFromLocator.java:[line 329]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65969');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/MySQLConnection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65969" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.BlobFromLocator<br/>In method com.mysql.jdbc.BlobFromLocator.position(byte[], long)<br/>At BlobFromLocator.java:[line 414]<br/>Sink method com/mysql/jdbc/MySQLConnection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source java/lang/StringBuffer.append(Ljava/lang/String;)Ljava/lang/StringBuffer;<br/>Unknown source com/mysql/jdbc/BlobFromLocator.primaryKeyColumns<br/>Unknown source com/mysql/jdbc/BlobFromLocator.blobColumnName<br/>Unknown source com/mysql/jdbc/BlobFromLocator.tableName<br/>Unknown source java/lang/StringBuffer.toString()Ljava/lang/String;<br/>At BlobFromLocator.java:[line 396]<br/>At BlobFromLocator.java:[line 397]<br/>At BlobFromLocator.java:[line 399]<br/>At BlobFromLocator.java:[line 400]<br/>At BlobFromLocator.java:[line 401]<br/>At BlobFromLocator.java:[line 403]<br/>At BlobFromLocator.java:[line 404]<br/>At BlobFromLocator.java:[line 407]<br/>At BlobFromLocator.java:[line 408]<br/>At BlobFromLocator.java:[line 409]<br/>At BlobFromLocator.java:[line 414]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66168');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/MySQLConnection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66168" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.BlobFromLocator<br/>In method com.mysql.jdbc.BlobFromLocator.setBytes(long, byte[], int, int)<br/>At BlobFromLocator.java:[line 224]<br/>Sink method com/mysql/jdbc/MySQLConnection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source java/lang/StringBuffer.append(Ljava/lang/String;)Ljava/lang/StringBuffer;<br/>Unknown source com/mysql/jdbc/BlobFromLocator.primaryKeyColumns<br/>Unknown source com/mysql/jdbc/BlobFromLocator.blobColumnName<br/>Unknown source com/mysql/jdbc/BlobFromLocator.tableName<br/>Unknown source java/lang/StringBuffer.toString()Ljava/lang/String;<br/>At BlobFromLocator.java:[line 202]<br/>At BlobFromLocator.java:[line 203]<br/>At BlobFromLocator.java:[line 204]<br/>At BlobFromLocator.java:[line 205]<br/>At BlobFromLocator.java:[line 206]<br/>At BlobFromLocator.java:[line 207]<br/>At BlobFromLocator.java:[line 209]<br/>At BlobFromLocator.java:[line 211]<br/>At BlobFromLocator.java:[line 213]<br/>At BlobFromLocator.java:[line 214]<br/>At BlobFromLocator.java:[line 217]<br/>At BlobFromLocator.java:[line 218]<br/>At BlobFromLocator.java:[line 219]<br/>At BlobFromLocator.java:[line 224]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66397');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/MySQLConnection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66397" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.BlobFromLocator<br/>In method com.mysql.jdbc.BlobFromLocator.truncate(long)<br/>At BlobFromLocator.java:[line 482]<br/>Sink method com/mysql/jdbc/MySQLConnection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source java/lang/StringBuffer.append(Ljava/lang/String;)Ljava/lang/StringBuffer;<br/>Unknown source com/mysql/jdbc/BlobFromLocator.primaryKeyColumns<br/>Unknown source com/mysql/jdbc/BlobFromLocator.blobColumnName<br/>Unknown source com/mysql/jdbc/BlobFromLocator.tableName<br/>Unknown source java/lang/StringBuffer.toString()Ljava/lang/String;<br/>At BlobFromLocator.java:[line 462]<br/>At BlobFromLocator.java:[line 463]<br/>At BlobFromLocator.java:[line 464]<br/>At BlobFromLocator.java:[line 465]<br/>At BlobFromLocator.java:[line 466]<br/>At BlobFromLocator.java:[line 467]<br/>At BlobFromLocator.java:[line 469]<br/>At BlobFromLocator.java:[line 471]<br/>At BlobFromLocator.java:[line 472]<br/>At BlobFromLocator.java:[line 475]<br/>At BlobFromLocator.java:[line 476]<br/>At BlobFromLocator.java:[line 477]<br/>At BlobFromLocator.java:[line 482]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66616');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66616" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.CallableStatement<br/>In method com.mysql.jdbc.CallableStatement.retrieveOutParams()<br/>At CallableStatement.java:[line 2128]<br/>Sink method java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;<br/>Sink parameter 0<br/>Unknown source java/lang/StringBuffer.append(Ljava/lang/String;)Ljava/lang/StringBuffer;<br/>Unknown source com/mysql/jdbc/CallableStatement.mangleParameterName(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source com/mysql/jdbc/CallableStatement.mangleParameterName(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source com/mysql/jdbc/CallableStatement$CallableStatementParam.paramName<br/>Unknown source java/lang/StringBuffer.toString()Ljava/lang/String;<br/>At CallableStatement.java:[line 462]<br/>At CallableStatement.java:[line 464]<br/>At CallableStatement.java:[line 2104]<br/>At CallableStatement.java:[line 2107]<br/>At CallableStatement.java:[line 2116]<br/>At CallableStatement.java:[line 2128]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67065');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/ConnectionImpl.nativeSQL(Ljava/lang/String;)Ljava/lang/String; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67065" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.ConnectionImpl<br/>In method com.mysql.jdbc.ConnectionImpl.clientPrepareStatement(String, int, int, boolean)<br/>At ConnectionImpl.java:[line 1548]<br/>Sink method com/mysql/jdbc/ConnectionImpl.nativeSQL(Ljava/lang/String;)Ljava/lang/String;<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/ConnectionImpl.clientPrepareStatement(Ljava/lang/String;IIZ)Ljava/sql/PreparedStatement; parameter 3<br/>Method usage not detected<br/>At ConnectionImpl.java:[line 1505]<br/>At ConnectionImpl.java:[line 1515]<br/>At ConnectionImpl.java:[line 1538]<br/>At ConnectionImpl.java:[line 1582]<br/>At ConnectionImpl.java:[line 1596]<br/>At ConnectionImpl.java:[line 1608]<br/>At ConnectionImpl.java:[line 4289]<br/>At ConnectionImpl.java:[line 4297]<br/>At ConnectionImpl.java:[line 4479]<br/>At ConnectionImpl.java:[line 4488]<br/>At ConnectionImpl.java:[line 4524]<br/>At ConnectionImpl.java:[line 4553]<br/>At ConnectionImpl.java:[line 4574]<br/>At ConnectionImpl.java:[line 4581]<br/>At ConnectionImpl.java:[line 4602]<br/>At ConnectionImpl.java:[line 4610]<br/>At ConnectionImpl.java:[line 4624]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67309');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67309" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.ConnectionImpl<br/>In method com.mysql.jdbc.ConnectionImpl.loadServerVariables()<br/>At ConnectionImpl.java:[line 4182]<br/>Sink method java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;<br/>Sink parameter 0<br/>Unknown source java/sql/DatabaseMetaData.getDriverVersion()Ljava/lang/String;<br/>At ConnectionImpl.java:[line 4150]<br/>At ConnectionImpl.java:[line 4153]<br/>At ConnectionImpl.java:[line 4156]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67408');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67408" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.ConnectionImpl<br/>In method com.mysql.jdbc.ConnectionImpl.loadServerVariables()<br/>At ConnectionImpl.java:[line 4199]<br/>Sink method java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;<br/>Sink parameter 0<br/>Unknown source java/sql/DatabaseMetaData.getDriverVersion()Ljava/lang/String;<br/>At ConnectionImpl.java:[line 4150]<br/>At ConnectionImpl.java:[line 4153]<br/>At ConnectionImpl.java:[line 4156]<br/>At ConnectionImpl.java:[line 4199]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67517');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/ConnectionImpl.prepareCall(Ljava/lang/String;II)Ljava/sql/CallableStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67517" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.ConnectionImpl<br/>In method com.mysql.jdbc.ConnectionImpl.prepareCall(String)<br/>At ConnectionImpl.java:[line 4374]<br/>Sink method com/mysql/jdbc/ConnectionImpl.prepareCall(Ljava/lang/String;II)Ljava/sql/CallableStatement;<br/>Sink parameter 2<br/>Unknown source com/mysql/jdbc/ConnectionImpl.prepareCall(Ljava/lang/String;)Ljava/sql/CallableStatement; parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67591');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/ConnectionImpl.prepareCall(Ljava/lang/String;II)Ljava/sql/CallableStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67591" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.ConnectionImpl<br/>In method com.mysql.jdbc.ConnectionImpl.prepareCall(String, int, int, int)<br/>At ConnectionImpl.java:[line 4446]<br/>Sink method com/mysql/jdbc/ConnectionImpl.prepareCall(Ljava/lang/String;II)Ljava/sql/CallableStatement;<br/>Sink parameter 2<br/>Unknown source com/mysql/jdbc/ConnectionImpl.prepareCall(Ljava/lang/String;III)Ljava/sql/CallableStatement; parameter 3<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67665');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/ConnectionImpl.prepareStatement(Ljava/lang/String;II)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67665" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.ConnectionImpl<br/>In method com.mysql.jdbc.ConnectionImpl.prepareStatement(String)<br/>At ConnectionImpl.java:[line 4479]<br/>Sink method com/mysql/jdbc/ConnectionImpl.prepareStatement(Ljava/lang/String;II)Ljava/sql/PreparedStatement;<br/>Sink parameter 2<br/>Unknown source com/mysql/jdbc/ConnectionImpl.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; parameter 0<br/>Method usage not detected<br/>At ConnectionImpl.java:[line 4488]<br/>At ConnectionImpl.java:[line 4610]<br/>At ConnectionImpl.java:[line 4624]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67769');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/ConnectionImpl.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67769" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.ConnectionImpl<br/>In method com.mysql.jdbc.ConnectionImpl.prepareStatement(String, int)<br/>At ConnectionImpl.java:[line 4488]<br/>Sink method com/mysql/jdbc/ConnectionImpl.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/ConnectionImpl.prepareStatement(Ljava/lang/String;I)Ljava/sql/PreparedStatement; parameter 1<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67843');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/ConnectionImpl.nativeSQL(Ljava/lang/String;)Ljava/lang/String; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67843" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.ConnectionImpl<br/>In method com.mysql.jdbc.ConnectionImpl.prepareStatement(String, int, int)<br/>At ConnectionImpl.java:[line 4524]<br/>Sink method com/mysql/jdbc/ConnectionImpl.nativeSQL(Ljava/lang/String;)Ljava/lang/String;<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/ConnectionImpl.prepareStatement(Ljava/lang/String;II)Ljava/sql/PreparedStatement; parameter 2<br/>Method usage not detected<br/>At ConnectionImpl.java:[line 4479]<br/>At ConnectionImpl.java:[line 4488]<br/>At ConnectionImpl.java:[line 4602]<br/>At ConnectionImpl.java:[line 4610]<br/>At ConnectionImpl.java:[line 4624]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67967');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/ConnectionImpl.prepareStatement(Ljava/lang/String;II)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67967" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.ConnectionImpl<br/>In method com.mysql.jdbc.ConnectionImpl.prepareStatement(String, int, int, int)<br/>At ConnectionImpl.java:[line 4602]<br/>Sink method com/mysql/jdbc/ConnectionImpl.prepareStatement(Ljava/lang/String;II)Ljava/sql/PreparedStatement;<br/>Sink parameter 2<br/>Unknown source com/mysql/jdbc/ConnectionImpl.prepareStatement(Ljava/lang/String;III)Ljava/sql/PreparedStatement; parameter 3<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68041');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/ConnectionImpl.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68041" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.ConnectionImpl<br/>In method com.mysql.jdbc.ConnectionImpl.prepareStatement(String, int[])<br/>At ConnectionImpl.java:[line 4610]<br/>Sink method com/mysql/jdbc/ConnectionImpl.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/ConnectionImpl.prepareStatement(Ljava/lang/String;[I)Ljava/sql/PreparedStatement; parameter 1<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68115');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/ConnectionImpl.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68115" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.ConnectionImpl<br/>In method com.mysql.jdbc.ConnectionImpl.prepareStatement(String, String[])<br/>At ConnectionImpl.java:[line 4624]<br/>Sink method com/mysql/jdbc/ConnectionImpl.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/ConnectionImpl.prepareStatement(Ljava/lang/String;[Ljava/lang/String;)Ljava/sql/PreparedStatement; parameter 1<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68189');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.executeUpdate(Ljava/lang/String;)I can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68189" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.ConnectionImpl<br/>In method com.mysql.jdbc.ConnectionImpl.rollback(Savepoint)<br/>At ConnectionImpl.java:[line 5118]<br/>Sink method java/sql/Statement.executeUpdate(Ljava/lang/String;)I<br/>Sink parameter 0<br/>Unknown source java/lang/StringBuffer.append(Ljava/lang/String;)Ljava/lang/StringBuffer;<br/>Unknown source java/sql/Savepoint.getSavepointName()Ljava/lang/String;<br/>Unknown source java/lang/StringBuffer.toString()Ljava/lang/String;<br/>At ConnectionImpl.java:[line 5110]<br/>At ConnectionImpl.java:[line 5118]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68288');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/ConnectionImpl.nativeSQL(Ljava/lang/String;)Ljava/lang/String; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68288" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.ConnectionImpl<br/>In method com.mysql.jdbc.ConnectionImpl.serverPrepareStatement(String)<br/>At ConnectionImpl.java:[line 5183]<br/>Sink method com/mysql/jdbc/ConnectionImpl.nativeSQL(Ljava/lang/String;)Ljava/lang/String;<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/ConnectionImpl.serverPrepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; parameter 0<br/>Method usage not detected<br/>At ConnectionImpl.java:[line 5242]<br/>At ConnectionImpl.java:[line 5256]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68382');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/ConnectionImpl.nativeSQL(Ljava/lang/String;)Ljava/lang/String; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68382" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.ConnectionImpl<br/>In method com.mysql.jdbc.ConnectionImpl.serverPrepareStatement(String, int)<br/>At ConnectionImpl.java:[line 5195]<br/>Sink method com/mysql/jdbc/ConnectionImpl.nativeSQL(Ljava/lang/String;)Ljava/lang/String;<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/ConnectionImpl.serverPrepareStatement(Ljava/lang/String;I)Ljava/sql/PreparedStatement; parameter 1<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68456');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/ConnectionImpl.nativeSQL(Ljava/lang/String;)Ljava/lang/String; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68456" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.ConnectionImpl<br/>In method com.mysql.jdbc.ConnectionImpl.serverPrepareStatement(String, int, int)<br/>At ConnectionImpl.java:[line 5212]<br/>Sink method com/mysql/jdbc/ConnectionImpl.nativeSQL(Ljava/lang/String;)Ljava/lang/String;<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/ConnectionImpl.serverPrepareStatement(Ljava/lang/String;II)Ljava/sql/PreparedStatement; parameter 2<br/>Method usage not detected<br/>At ConnectionImpl.java:[line 5233]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68540');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.executeUpdate(Ljava/lang/String;)I can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68540" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.ConnectionImpl<br/>In method com.mysql.jdbc.ConnectionImpl.setSavepoint(MysqlSavepoint)<br/>At ConnectionImpl.java:[line 5528]<br/>Sink method java/sql/Statement.executeUpdate(Ljava/lang/String;)I<br/>Sink parameter 0<br/>Unknown source java/lang/StringBuffer.append(Ljava/lang/String;)Ljava/lang/StringBuffer;<br/>Unknown source com/mysql/jdbc/MysqlSavepoint.savepointName<br/>Unknown source com/mysql/jdbc/MysqlSavepoint.getSavepointName()Ljava/lang/String;<br/>Unknown source java/lang/StringBuffer.toString()Ljava/lang/String;<br/>At ConnectionImpl.java:[line 5520]<br/>At ConnectionImpl.java:[line 5528]<br/>At MysqlSavepoint.java:[line 110]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68654');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.executeUpdate(Ljava/lang/String;)I can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68654" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.ConnectionImpl<br/>In method com.mysql.jdbc.ConnectionImpl.setSessionVariables()<br/>At ConnectionImpl.java:[line 5570]<br/>Sink method java/sql/Statement.executeUpdate(Ljava/lang/String;)I<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/StringUtils.split(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/util/List; parameter 4<br/>Unknown source com/mysql/jdbc/StringUtils.split(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/util/List;<br/>Unknown source com/mysql/jdbc/ConnectionImpl.getSessionVariables()Ljava/lang/String;<br/>At ConnectionImpl.java:[line 5556]<br/>At ConnectionImpl.java:[line 5567]<br/>At ConnectionImpl.java:[line 5570]<br/>At StringUtils.java:[line 1161]<br/>At StringUtils.java:[line 1164]<br/>At StringUtils.java:[line 1167]<br/>At StringUtils.java:[line 1172]<br/>At StringUtils.java:[line 1175]<br/>At StringUtils.java:[line 1178]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68823');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.executeUpdate(Ljava/lang/String;)I can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68823" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.ConnectionImpl<br/>In method com.mysql.jdbc.ConnectionImpl.setSessionVariables()<br/>At ConnectionImpl.java:[line 5572]<br/>Sink method java/sql/Statement.executeUpdate(Ljava/lang/String;)I<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/StringUtils.split(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/util/List; parameter 4<br/>Unknown source com/mysql/jdbc/StringUtils.split(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/util/List;<br/>Unknown source com/mysql/jdbc/ConnectionImpl.getSessionVariables()Ljava/lang/String;<br/>At ConnectionImpl.java:[line 5556]<br/>At ConnectionImpl.java:[line 5567]<br/>At ConnectionImpl.java:[line 5572]<br/>At StringUtils.java:[line 1161]<br/>At StringUtils.java:[line 1164]<br/>At StringUtils.java:[line 1167]<br/>At StringUtils.java:[line 1172]<br/>At StringUtils.java:[line 1175]<br/>At StringUtils.java:[line 1178]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69340');">
<td>
<span class="priority-1">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69340" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.DatabaseMetaData<br/>In method com.mysql.jdbc.DatabaseMetaData.extractForeignKeyFromCreateTable(String, String)<br/>At DatabaseMetaData.java:[line 1269]<br/>Sink method java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;<br/>Sink parameter 0<br/>Unknown source java/lang/StringBuffer.append(Ljava/lang/String;)Ljava/lang/StringBuffer;<br/>Tainted source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Z)Ljava/lang/String;<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Z)Ljava/lang/String; parameter 1<br/>Unknown source com/mysql/jdbc/DatabaseMetaData.extractForeignKeyFromCreateTable(Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet; parameter 1<br/>Tainted source java/sql/ResultSet.getString(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source com/mysql/jdbc/DatabaseMetaData.extractForeignKeyFromCreateTable(Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet; parameter 0<br/>Tainted source java/lang/StringBuffer.toString()Ljava/lang/String;<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String; parameter 2<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String; parameter 1<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;<br/>At DatabaseMetaData.java:[line 1228]<br/>At DatabaseMetaData.java:[line 1234]<br/>At DatabaseMetaData.java:[line 1262]<br/>At DatabaseMetaData.java:[line 1264]<br/>At StringUtils.java:[line 1890]<br/>At StringUtils.java:[line 1909]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69514');">
<td>
<span class="priority-1">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69514" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.DatabaseMetaData<br/>In method com.mysql.jdbc.DatabaseMetaData.getCallStmtParameterTypes(String, String, String, List, boolean)<br/>At DatabaseMetaData.java:[line 1693]<br/>Sink method java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;<br/>Sink parameter 0<br/>Tainted source java/lang/StringBuffer.append(Ljava/lang/String;)Ljava/lang/StringBuffer;<br/>Unknown source com/mysql/jdbc/DatabaseMetaData.getCallStmtParameterTypes(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Z)V parameter 4<br/>Tainted source java/sql/ResultSet.getString(I)Ljava/lang/String;<br/>Unknown source com/mysql/jdbc/DatabaseMetaData.getCallStmtParameterTypes(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Z)V parameter 3<br/>Tainted source java/lang/StringBuffer.toString()Ljava/lang/String;<br/>At DatabaseMetaData.java:[line 1604]<br/>At DatabaseMetaData.java:[line 1633]<br/>At DatabaseMetaData.java:[line 1634]<br/>At DatabaseMetaData.java:[line 1669]<br/>At DatabaseMetaData.java:[line 1672]<br/>At DatabaseMetaData.java:[line 1675]<br/>At DatabaseMetaData.java:[line 1681]<br/>At DatabaseMetaData.java:[line 1684]<br/>At DatabaseMetaData.java:[line 1687]<br/>At DatabaseMetaData.java:[line 1693]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69703');">
<td>
<span class="priority-1">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69703" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.DatabaseMetaData<br/>In method com.mysql.jdbc.DatabaseMetaData.getCallStmtParameterTypes(String, String, String, List, boolean)<br/>At DatabaseMetaData.java:[line 1698]<br/>Sink method java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;<br/>Sink parameter 0<br/>Tainted source java/lang/StringBuffer.append(Ljava/lang/String;)Ljava/lang/StringBuffer;<br/>Unknown source com/mysql/jdbc/DatabaseMetaData.getCallStmtParameterTypes(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Z)V parameter 4<br/>Tainted source java/sql/ResultSet.getString(I)Ljava/lang/String;<br/>Unknown source com/mysql/jdbc/DatabaseMetaData.getCallStmtParameterTypes(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Z)V parameter 3<br/>Tainted source java/lang/StringBuffer.toString()Ljava/lang/String;<br/>At DatabaseMetaData.java:[line 1604]<br/>At DatabaseMetaData.java:[line 1633]<br/>At DatabaseMetaData.java:[line 1634]<br/>At DatabaseMetaData.java:[line 1669]<br/>At DatabaseMetaData.java:[line 1672]<br/>At DatabaseMetaData.java:[line 1675]<br/>At DatabaseMetaData.java:[line 1681]<br/>At DatabaseMetaData.java:[line 1684]<br/>At DatabaseMetaData.java:[line 1687]<br/>At DatabaseMetaData.java:[line 1698]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69892');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69892" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.DatabaseMetaData<br/>In method com.mysql.jdbc.DatabaseMetaData.getColumnPrivileges(String, String, String, String)<br/>At DatabaseMetaData.java:[line 2304]<br/>Sink method java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;<br/>Sink parameter 0<br/>Unknown source java/lang/StringBuffer.append(Ljava/lang/String;)Ljava/lang/StringBuffer;<br/>Unknown source com/mysql/jdbc/DatabaseMetaData.getColumnPrivileges(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet; parameter 3<br/>Unknown source com/mysql/jdbc/DatabaseMetaData.getColumnPrivileges(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet; parameter 1<br/>Unknown source com/mysql/jdbc/DatabaseMetaData.getColumnPrivileges(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet; parameter 0<br/>Unknown source java/lang/StringBuffer.toString()Ljava/lang/String;<br/>Method usage not detected<br/>At DatabaseMetaData.java:[line 2286]<br/>At DatabaseMetaData.java:[line 2287]<br/>At DatabaseMetaData.java:[line 2291]<br/>At DatabaseMetaData.java:[line 2292]<br/>At DatabaseMetaData.java:[line 2293]<br/>At DatabaseMetaData.java:[line 2294]<br/>At DatabaseMetaData.java:[line 2295]<br/>At DatabaseMetaData.java:[line 2304]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70066');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70066" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.DatabaseMetaData<br/>In method com.mysql.jdbc.DatabaseMetaData.getTablePrivileges(String, String, String)<br/>At DatabaseMetaData.java:[line 4912]<br/>Sink method java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/DatabaseMetaData.getTablePrivileges(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet; parameter 0<br/>Unknown source com/mysql/jdbc/DatabaseMetaData.getTablePrivileges(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/ResultSet; parameter 2<br/>Unknown source java/lang/StringBuffer.toString()Ljava/lang/String;<br/>Method usage not detected<br/>At DatabaseMetaData.java:[line 4896]<br/>At DatabaseMetaData.java:[line 4897]<br/>At DatabaseMetaData.java:[line 4900]<br/>At DatabaseMetaData.java:[line 4901]<br/>At DatabaseMetaData.java:[line 4902]<br/>At DatabaseMetaData.java:[line 4912]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70318');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70318" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.DatabaseMetaData$1<br/>In method com.mysql.jdbc.DatabaseMetaData$1.forEach(String)<br/>At DatabaseMetaData.java:[line 1413]<br/>Sink method java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/DatabaseMetaData$1.forEach(Ljava/lang/String;)V parameter 0<br/>Unknown source java/lang/StringBuffer.append(Ljava/lang/String;)Ljava/lang/StringBuffer;<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String; parameter 2<br/>Unknown source com/mysql/jdbc/DatabaseMetaData$1.val$table<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String; parameter 1<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Z)Ljava/lang/String;<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Z)Ljava/lang/String; parameter 1<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;<br/>Unknown source java/lang/StringBuffer.toString()Ljava/lang/String;<br/>Method usage not detected<br/>At DatabaseMetaData.java:[line 1403]<br/>At DatabaseMetaData.java:[line 1409]<br/>At DatabaseMetaData.java:[line 1410]<br/>At DatabaseMetaData.java:[line 1411]<br/>At DatabaseMetaData.java:[line 1413]<br/>At StringUtils.java:[line 1890]<br/>At StringUtils.java:[line 1909]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70502');">
<td>
<span class="priority-1">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70502" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.DatabaseMetaData$10<br/>In method com.mysql.jdbc.DatabaseMetaData$10.forEach(String)<br/>At DatabaseMetaData.java:[line 7033]<br/>Sink method java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;<br/>Sink parameter 0<br/>Tainted source java/util/StringTokenizer.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V<br/>Unknown source com/mysql/jdbc/DatabaseMetaData$10.forEach(Ljava/lang/String;)V parameter 0<br/>Unknown source java/lang/StringBuffer.append(Ljava/lang/String;)Ljava/lang/StringBuffer;<br/>Tainted source java/sql/ResultSet.getString(I)Ljava/lang/String;<br/>Tainted source java/util/StringTokenizer.nextToken()Ljava/lang/String;<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Z)Ljava/lang/String;<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Z)Ljava/lang/String; parameter 1<br/>Tainted source java/lang/StringBuffer.toString()Ljava/lang/String;<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String; parameter 2<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String; parameter 1<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;<br/>Unknown source com/mysql/jdbc/DatabaseMetaData$10.val$table<br/>At DatabaseMetaData.java:[line 6979]<br/>At DatabaseMetaData.java:[line 6980]<br/>At DatabaseMetaData.java:[line 6983]<br/>At DatabaseMetaData.java:[line 7005]<br/>At DatabaseMetaData.java:[line 7009]<br/>At DatabaseMetaData.java:[line 7010]<br/>At DatabaseMetaData.java:[line 7011]<br/>At DatabaseMetaData.java:[line 7025]<br/>At DatabaseMetaData.java:[line 7026]<br/>At DatabaseMetaData.java:[line 7027]<br/>At DatabaseMetaData.java:[line 7029]<br/>At DatabaseMetaData.java:[line 7030]<br/>At DatabaseMetaData.java:[line 7033]<br/>At StringUtils.java:[line 1890]<br/>At StringUtils.java:[line 1909]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70776');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70776" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.DatabaseMetaData$10<br/>In method com.mysql.jdbc.DatabaseMetaData$10.forEach(String)<br/>At DatabaseMetaData.java:[line 6977]<br/>Sink method java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/DatabaseMetaData$10.forEach(Ljava/lang/String;)V parameter 0<br/>Unknown source java/lang/StringBuffer.append(Ljava/lang/String;)Ljava/lang/StringBuffer;<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Z)Ljava/lang/String;<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Z)Ljava/lang/String; parameter 1<br/>Unknown source java/lang/StringBuffer.toString()Ljava/lang/String;<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String; parameter 2<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String; parameter 1<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;<br/>Unknown source com/mysql/jdbc/DatabaseMetaData$10.val$table<br/>Method usage not detected<br/>At DatabaseMetaData.java:[line 6957]<br/>At DatabaseMetaData.java:[line 6973]<br/>At StringUtils.java:[line 1890]<br/>At StringUtils.java:[line 1909]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70984');">
<td>
<span class="priority-1">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70984" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.DatabaseMetaData$2<br/>In method com.mysql.jdbc.DatabaseMetaData$2.forEach(String)<br/>At DatabaseMetaData.java:[line 2555]<br/>Sink method java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;<br/>Sink parameter 0<br/>Tainted source java/lang/StringBuffer.append(Ljava/lang/String;)Ljava/lang/StringBuffer;<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Z)Ljava/lang/String;<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Z)Ljava/lang/String; parameter 1<br/>Tainted source java/util/Iterator.next()Ljava/lang/Object;<br/>Tainted source java/sql/ResultSet.getString(Ljava/lang/String;)Ljava/lang/String;<br/>Tainted source java/lang/StringBuffer.toString()Ljava/lang/String;<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String; parameter 2<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String; parameter 1<br/>Unknown source com/mysql/jdbc/DatabaseMetaData$2.forEach(Ljava/lang/String;)V parameter 0<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;<br/>At DatabaseMetaData.java:[line 2471]<br/>At DatabaseMetaData.java:[line 2473]<br/>At DatabaseMetaData.java:[line 2495]<br/>At DatabaseMetaData.java:[line 2497]<br/>At DatabaseMetaData.java:[line 2513]<br/>At DatabaseMetaData.java:[line 2551]<br/>At DatabaseMetaData.java:[line 2552]<br/>At DatabaseMetaData.java:[line 2553]<br/>At DatabaseMetaData.java:[line 2555]<br/>At StringUtils.java:[line 1890]<br/>At StringUtils.java:[line 1909]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71208');">
<td>
<span class="priority-1">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71208" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.DatabaseMetaData$2<br/>In method com.mysql.jdbc.DatabaseMetaData$2.forEach(String)<br/>At DatabaseMetaData.java:[line 2571]<br/>Sink method java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;<br/>Sink parameter 0<br/>Tainted source java/lang/StringBuffer.append(Ljava/lang/String;)Ljava/lang/StringBuffer;<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Z)Ljava/lang/String;<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Z)Ljava/lang/String; parameter 1<br/>Tainted source java/util/Iterator.next()Ljava/lang/Object;<br/>Tainted source java/sql/ResultSet.getString(Ljava/lang/String;)Ljava/lang/String;<br/>Tainted source java/lang/StringBuffer.toString()Ljava/lang/String;<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String; parameter 2<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String; parameter 1<br/>Unknown source com/mysql/jdbc/DatabaseMetaData$2.forEach(Ljava/lang/String;)V parameter 0<br/>Unknown source com/mysql/jdbc/DatabaseMetaData$2.val$colPattern<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;<br/>At DatabaseMetaData.java:[line 2471]<br/>At DatabaseMetaData.java:[line 2473]<br/>At DatabaseMetaData.java:[line 2495]<br/>At DatabaseMetaData.java:[line 2497]<br/>At DatabaseMetaData.java:[line 2513]<br/>At DatabaseMetaData.java:[line 2525]<br/>At DatabaseMetaData.java:[line 2526]<br/>At DatabaseMetaData.java:[line 2527]<br/>At DatabaseMetaData.java:[line 2528]<br/>At DatabaseMetaData.java:[line 2529]<br/>At DatabaseMetaData.java:[line 2530]<br/>At DatabaseMetaData.java:[line 2571]<br/>At StringUtils.java:[line 1890]<br/>At StringUtils.java:[line 1909]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71532');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71532" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.DatabaseMetaData$3<br/>In method com.mysql.jdbc.DatabaseMetaData$3.forEach(String)<br/>At DatabaseMetaData.java:[line 2868]<br/>Sink method java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String; parameter 2<br/>Unknown source java/lang/StringBuffer.append(Ljava/lang/String;)Ljava/lang/StringBuffer;<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String; parameter 1<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Z)Ljava/lang/String;<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Z)Ljava/lang/String; parameter 1<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;<br/>Unknown source com/mysql/jdbc/DatabaseMetaData$3.forEach(Ljava/lang/String;)V parameter 0<br/>Unknown source java/lang/StringBuffer.toString()Ljava/lang/String;<br/>Method usage not detected<br/>At DatabaseMetaData.java:[line 2851]<br/>At DatabaseMetaData.java:[line 2866]<br/>At DatabaseMetaData.java:[line 2868]<br/>At StringUtils.java:[line 1890]<br/>At StringUtils.java:[line 1909]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71691');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71691" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.DatabaseMetaData$4<br/>In method com.mysql.jdbc.DatabaseMetaData$4.forEach(String)<br/>At DatabaseMetaData.java:[line 3210]<br/>Sink method java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String; parameter 2<br/>Unknown source java/lang/StringBuffer.append(Ljava/lang/String;)Ljava/lang/StringBuffer;<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String; parameter 1<br/>Unknown source com/mysql/jdbc/DatabaseMetaData$4.forEach(Ljava/lang/String;)V parameter 0<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Z)Ljava/lang/String;<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Z)Ljava/lang/String; parameter 1<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;<br/>Unknown source java/lang/StringBuffer.toString()Ljava/lang/String;<br/>Method usage not detected<br/>At DatabaseMetaData.java:[line 3192]<br/>At DatabaseMetaData.java:[line 3208]<br/>At DatabaseMetaData.java:[line 3210]<br/>At StringUtils.java:[line 1890]<br/>At StringUtils.java:[line 1909]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71850');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71850" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.DatabaseMetaData$5<br/>In method com.mysql.jdbc.DatabaseMetaData$5.forEach(String)<br/>At DatabaseMetaData.java:[line 3467]<br/>Sink method java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String; parameter 2<br/>Unknown source java/lang/StringBuffer.append(Ljava/lang/String;)Ljava/lang/StringBuffer;<br/>Unknown source com/mysql/jdbc/DatabaseMetaData$5.forEach(Ljava/lang/String;)V parameter 0<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String; parameter 1<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Z)Ljava/lang/String;<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Z)Ljava/lang/String; parameter 1<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;<br/>Unknown source com/mysql/jdbc/DatabaseMetaData$5.val$table<br/>Unknown source java/lang/StringBuffer.toString()Ljava/lang/String;<br/>Method usage not detected<br/>At DatabaseMetaData.java:[line 3445]<br/>At DatabaseMetaData.java:[line 3462]<br/>At DatabaseMetaData.java:[line 3463]<br/>At DatabaseMetaData.java:[line 3464]<br/>At DatabaseMetaData.java:[line 3465]<br/>At DatabaseMetaData.java:[line 3467]<br/>At StringUtils.java:[line 1890]<br/>At StringUtils.java:[line 1909]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N72098');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N72098" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.DatabaseMetaData$6<br/>In method com.mysql.jdbc.DatabaseMetaData$6.forEach(String)<br/>At DatabaseMetaData.java:[line 3643]<br/>Sink method java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;<br/>Sink parameter 0<br/>Unknown source java/lang/StringBuffer.append(Ljava/lang/String;)Ljava/lang/StringBuffer;<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String; parameter 2<br/>Unknown source com/mysql/jdbc/DatabaseMetaData$6.val$table<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String; parameter 1<br/>Unknown source com/mysql/jdbc/DatabaseMetaData$6.forEach(Ljava/lang/String;)V parameter 0<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Z)Ljava/lang/String;<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Z)Ljava/lang/String; parameter 1<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;<br/>Unknown source java/lang/StringBuffer.toString()Ljava/lang/String;<br/>Method usage not detected<br/>At DatabaseMetaData.java:[line 3631]<br/>At DatabaseMetaData.java:[line 3638]<br/>At DatabaseMetaData.java:[line 3639]<br/>At DatabaseMetaData.java:[line 3640]<br/>At DatabaseMetaData.java:[line 3643]<br/>At StringUtils.java:[line 1890]<br/>At StringUtils.java:[line 1909]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N72282');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N72282" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.DatabaseMetaData$7<br/>In method com.mysql.jdbc.DatabaseMetaData$7.forEach(String)<br/>At DatabaseMetaData.java:[line 4054]<br/>Sink method java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;<br/>Sink parameter 0<br/>Unknown source java/lang/StringBuffer.append(Ljava/lang/String;)Ljava/lang/StringBuffer;<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String; parameter 2<br/>Unknown source com/mysql/jdbc/DatabaseMetaData$7.val$table<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String; parameter 1<br/>Unknown source com/mysql/jdbc/DatabaseMetaData$7.forEach(Ljava/lang/String;)V parameter 0<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Z)Ljava/lang/String;<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Z)Ljava/lang/String; parameter 1<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;<br/>Unknown source java/lang/StringBuffer.toString()Ljava/lang/String;<br/>Method usage not detected<br/>At DatabaseMetaData.java:[line 4043]<br/>At DatabaseMetaData.java:[line 4050]<br/>At DatabaseMetaData.java:[line 4051]<br/>At DatabaseMetaData.java:[line 4052]<br/>At DatabaseMetaData.java:[line 4054]<br/>At StringUtils.java:[line 1890]<br/>At StringUtils.java:[line 1909]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N72466');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N72466" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.DatabaseMetaData$9<br/>In method com.mysql.jdbc.DatabaseMetaData$9.forEach(String)<br/>At DatabaseMetaData.java:[line 5088]<br/>Sink method java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String; parameter 2<br/>Unknown source com/mysql/jdbc/DatabaseMetaData$9.forEach(Ljava/lang/String;)V parameter 0<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String; parameter 1<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Z)Ljava/lang/String;<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Z)Ljava/lang/String; parameter 1<br/>Unknown source com/mysql/jdbc/DatabaseMetaData$9.val$tableNamePat<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;<br/>Method usage not detected<br/>At DatabaseMetaData.java:[line 5081]<br/>At DatabaseMetaData.java:[line 5088]<br/>At StringUtils.java:[line 1890]<br/>At StringUtils.java:[line 1909]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N72610');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N72610" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.DatabaseMetaData$9<br/>In method com.mysql.jdbc.DatabaseMetaData$9.forEach(String)<br/>At DatabaseMetaData.java:[line 5101]<br/>Sink method java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String; parameter 2<br/>Unknown source com/mysql/jdbc/DatabaseMetaData$9.forEach(Ljava/lang/String;)V parameter 0<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String; parameter 1<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Z)Ljava/lang/String;<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Z)Ljava/lang/String; parameter 1<br/>Unknown source com/mysql/jdbc/DatabaseMetaData$9.val$tableNamePat<br/>Unknown source com/mysql/jdbc/StringUtils.quoteIdentifier(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;<br/>Method usage not detected<br/>At DatabaseMetaData.java:[line 5081]<br/>At DatabaseMetaData.java:[line 5101]<br/>At StringUtils.java:[line 1890]<br/>At StringUtils.java:[line 1909]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N73149');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N73149" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.Field<br/>In method com.mysql.jdbc.Field.getCollation()<br/>At Field.java:[line 493]<br/>Sink method java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/Field.getOriginalTableName()Ljava/lang/String;<br/>Unknown source java/lang/StringBuffer.append(Ljava/lang/String;)Ljava/lang/StringBuffer;<br/>Unknown source com/mysql/jdbc/Field.originalTableName<br/>Unknown source com/mysql/jdbc/Field.getDatabaseName()Ljava/lang/String;<br/>Unknown source java/sql/DatabaseMetaData.getIdentifierQuoteString()Ljava/lang/String;<br/>Unknown source com/mysql/jdbc/Field.databaseName<br/>Unknown source java/lang/StringBuffer.toString()Ljava/lang/String;<br/>At Field.java:[line 467]<br/>At Field.java:[line 468]<br/>At Field.java:[line 479]<br/>At Field.java:[line 480]<br/>At Field.java:[line 481]<br/>At Field.java:[line 482]<br/>At Field.java:[line 483]<br/>At Field.java:[line 484]<br/>At Field.java:[line 485]<br/>At Field.java:[line 493]<br/>At Field.java:[line 549]<br/>At Field.java:[line 685]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N79777');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/Connection.nativeSQL(Ljava/lang/String;)Ljava/lang/String; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N79777" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.jdbc2.optional.ConnectionWrapper<br/>In method com.mysql.jdbc.jdbc2.optional.ConnectionWrapper.nativeSQL(String)<br/>At ConnectionWrapper.java:[line 560]<br/>Sink method com/mysql/jdbc/Connection.nativeSQL(Ljava/lang/String;)Ljava/lang/String;<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/jdbc2/optional/ConnectionWrapper.nativeSQL(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N79851');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/Connection.prepareCall(Ljava/lang/String;)Ljava/sql/CallableStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N79851" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.jdbc2.optional.ConnectionWrapper<br/>In method com.mysql.jdbc.jdbc2.optional.ConnectionWrapper.prepareCall(String)<br/>At ConnectionWrapper.java:[line 579]<br/>Sink method com/mysql/jdbc/Connection.prepareCall(Ljava/lang/String;)Ljava/sql/CallableStatement;<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/jdbc2/optional/ConnectionWrapper.prepareCall(Ljava/lang/String;)Ljava/sql/CallableStatement; parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N79925');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/Connection.prepareCall(Ljava/lang/String;II)Ljava/sql/CallableStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N79925" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.jdbc2.optional.ConnectionWrapper<br/>In method com.mysql.jdbc.jdbc2.optional.ConnectionWrapper.prepareCall(String, int, int)<br/>At ConnectionWrapper.java:[line 599]<br/>Sink method com/mysql/jdbc/Connection.prepareCall(Ljava/lang/String;II)Ljava/sql/CallableStatement;<br/>Sink parameter 2<br/>Unknown source com/mysql/jdbc/jdbc2/optional/ConnectionWrapper.prepareCall(Ljava/lang/String;II)Ljava/sql/CallableStatement; parameter 2<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N79999');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/Connection.prepareCall(Ljava/lang/String;III)Ljava/sql/CallableStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N79999" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.jdbc2.optional.ConnectionWrapper<br/>In method com.mysql.jdbc.jdbc2.optional.ConnectionWrapper.prepareCall(String, int, int, int)<br/>At ConnectionWrapper.java:[line 616]<br/>Sink method com/mysql/jdbc/Connection.prepareCall(Ljava/lang/String;III)Ljava/sql/CallableStatement;<br/>Sink parameter 3<br/>Unknown source com/mysql/jdbc/jdbc2/optional/ConnectionWrapper.prepareCall(Ljava/lang/String;III)Ljava/sql/CallableStatement; parameter 3<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N80073');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N80073" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.jdbc2.optional.ConnectionWrapper<br/>In method com.mysql.jdbc.jdbc2.optional.ConnectionWrapper.prepareStatement(String)<br/>At ConnectionWrapper.java:[line 665]<br/>Sink method com/mysql/jdbc/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/jdbc2/optional/ConnectionWrapper.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N80147');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/Connection.prepareStatement(Ljava/lang/String;I)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N80147" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.jdbc2.optional.ConnectionWrapper<br/>In method com.mysql.jdbc.jdbc2.optional.ConnectionWrapper.prepareStatement(String, int)<br/>At ConnectionWrapper.java:[line 720]<br/>Sink method com/mysql/jdbc/Connection.prepareStatement(Ljava/lang/String;I)Ljava/sql/PreparedStatement;<br/>Sink parameter 1<br/>Unknown source com/mysql/jdbc/jdbc2/optional/ConnectionWrapper.prepareStatement(Ljava/lang/String;I)Ljava/sql/PreparedStatement; parameter 1<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N80221');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/Connection.prepareStatement(Ljava/lang/String;II)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N80221" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.jdbc2.optional.ConnectionWrapper<br/>In method com.mysql.jdbc.jdbc2.optional.ConnectionWrapper.prepareStatement(String, int, int)<br/>At ConnectionWrapper.java:[line 685]<br/>Sink method com/mysql/jdbc/Connection.prepareStatement(Ljava/lang/String;II)Ljava/sql/PreparedStatement;<br/>Sink parameter 2<br/>Unknown source com/mysql/jdbc/jdbc2/optional/ConnectionWrapper.prepareStatement(Ljava/lang/String;II)Ljava/sql/PreparedStatement; parameter 2<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N80295');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/Connection.prepareStatement(Ljava/lang/String;III)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N80295" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.jdbc2.optional.ConnectionWrapper<br/>In method com.mysql.jdbc.jdbc2.optional.ConnectionWrapper.prepareStatement(String, int, int, int)<br/>At ConnectionWrapper.java:[line 703]<br/>Sink method com/mysql/jdbc/Connection.prepareStatement(Ljava/lang/String;III)Ljava/sql/PreparedStatement;<br/>Sink parameter 3<br/>Unknown source com/mysql/jdbc/jdbc2/optional/ConnectionWrapper.prepareStatement(Ljava/lang/String;III)Ljava/sql/PreparedStatement; parameter 3<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N80369');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/Connection.prepareStatement(Ljava/lang/String;[I)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N80369" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.jdbc2.optional.ConnectionWrapper<br/>In method com.mysql.jdbc.jdbc2.optional.ConnectionWrapper.prepareStatement(String, int[])<br/>At ConnectionWrapper.java:[line 737]<br/>Sink method com/mysql/jdbc/Connection.prepareStatement(Ljava/lang/String;[I)Ljava/sql/PreparedStatement;<br/>Sink parameter 1<br/>Unknown source com/mysql/jdbc/jdbc2/optional/ConnectionWrapper.prepareStatement(Ljava/lang/String;[I)Ljava/sql/PreparedStatement; parameter 1<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N80443');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/Connection.prepareStatement(Ljava/lang/String;[Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N80443" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.jdbc2.optional.ConnectionWrapper<br/>In method com.mysql.jdbc.jdbc2.optional.ConnectionWrapper.prepareStatement(String, String[])<br/>At ConnectionWrapper.java:[line 754]<br/>Sink method com/mysql/jdbc/Connection.prepareStatement(Ljava/lang/String;[Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 1<br/>Unknown source com/mysql/jdbc/jdbc2/optional/ConnectionWrapper.prepareStatement(Ljava/lang/String;[Ljava/lang/String;)Ljava/sql/PreparedStatement; parameter 1<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N80517');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.execute(Ljava/lang/String;)Z can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N80517" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.jdbc2.optional.MysqlXAConnection<br/>In method com.mysql.jdbc.jdbc2.optional.MysqlXAConnection.dispatchCommand(String)<br/>At MysqlXAConnection.java:[line 577]<br/>Sink method java/sql/Statement.execute(Ljava/lang/String;)Z<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/jdbc2/optional/MysqlXAConnection.dispatchCommand(Ljava/lang/String;)Ljava/sql/ResultSet; parameter 0<br/>At MysqlXAConnection.java:[line 385]<br/>At MysqlXAConnection.java:[line 428]<br/>At MysqlXAConnection.java:[line 478]<br/>At MysqlXAConnection.java:[line 523]<br/>At MysqlXAConnection.java:[line 559]<br/>At MysqlXAConnection.java:[line 570]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N80646');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.addBatch(Ljava/lang/String;)V can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N80646" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.jdbc2.optional.StatementWrapper<br/>In method com.mysql.jdbc.jdbc2.optional.StatementWrapper.addBatch(String)<br/>At StatementWrapper.java:[line 549]<br/>Sink method java/sql/Statement.addBatch(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/jdbc2/optional/StatementWrapper.addBatch(Ljava/lang/String;)V parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N80720');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.execute(Ljava/lang/String;)Z can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N80720" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.jdbc2.optional.StatementWrapper<br/>In method com.mysql.jdbc.jdbc2.optional.StatementWrapper.execute(String)<br/>At StatementWrapper.java:[line 698]<br/>Sink method java/sql/Statement.execute(Ljava/lang/String;)Z<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/jdbc2/optional/StatementWrapper.execute(Ljava/lang/String;)Z parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N80794');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.execute(Ljava/lang/String;I)Z can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N80794" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.jdbc2.optional.StatementWrapper<br/>In method com.mysql.jdbc.jdbc2.optional.StatementWrapper.execute(String, int)<br/>At StatementWrapper.java:[line 628]<br/>Sink method java/sql/Statement.execute(Ljava/lang/String;I)Z<br/>Sink parameter 1<br/>Unknown source com/mysql/jdbc/jdbc2/optional/StatementWrapper.execute(Ljava/lang/String;I)Z parameter 1<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N80868');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.execute(Ljava/lang/String;[I)Z can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N80868" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.jdbc2.optional.StatementWrapper<br/>In method com.mysql.jdbc.jdbc2.optional.StatementWrapper.execute(String, int[])<br/>At StatementWrapper.java:[line 651]<br/>Sink method java/sql/Statement.execute(Ljava/lang/String;[I)Z<br/>Sink parameter 1<br/>Unknown source com/mysql/jdbc/jdbc2/optional/StatementWrapper.execute(Ljava/lang/String;[I)Z parameter 1<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N80942');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.execute(Ljava/lang/String;[Ljava/lang/String;)Z can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N80942" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.jdbc2.optional.StatementWrapper<br/>In method com.mysql.jdbc.jdbc2.optional.StatementWrapper.execute(String, String[])<br/>At StatementWrapper.java:[line 675]<br/>Sink method java/sql/Statement.execute(Ljava/lang/String;[Ljava/lang/String;)Z<br/>Sink parameter 1<br/>Unknown source com/mysql/jdbc/jdbc2/optional/StatementWrapper.execute(Ljava/lang/String;[Ljava/lang/String;)Z parameter 1<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N81016');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N81016" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.jdbc2.optional.StatementWrapper<br/>In method com.mysql.jdbc.jdbc2.optional.StatementWrapper.executeQuery(String)<br/>At StatementWrapper.java:[line 745]<br/>Sink method java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/jdbc2/optional/StatementWrapper.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet; parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N81090');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.executeUpdate(Ljava/lang/String;)I can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N81090" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.jdbc2.optional.StatementWrapper<br/>In method com.mysql.jdbc.jdbc2.optional.StatementWrapper.executeUpdate(String)<br/>At StatementWrapper.java:[line 841]<br/>Sink method java/sql/Statement.executeUpdate(Ljava/lang/String;)I<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/jdbc2/optional/StatementWrapper.executeUpdate(Ljava/lang/String;)I parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N81164');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.executeUpdate(Ljava/lang/String;I)I can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N81164" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.jdbc2.optional.StatementWrapper<br/>In method com.mysql.jdbc.jdbc2.optional.StatementWrapper.executeUpdate(String, int)<br/>At StatementWrapper.java:[line 772]<br/>Sink method java/sql/Statement.executeUpdate(Ljava/lang/String;I)I<br/>Sink parameter 1<br/>Unknown source com/mysql/jdbc/jdbc2/optional/StatementWrapper.executeUpdate(Ljava/lang/String;I)I parameter 1<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N81238');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.executeUpdate(Ljava/lang/String;[I)I can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N81238" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.jdbc2.optional.StatementWrapper<br/>In method com.mysql.jdbc.jdbc2.optional.StatementWrapper.executeUpdate(String, int[])<br/>At StatementWrapper.java:[line 795]<br/>Sink method java/sql/Statement.executeUpdate(Ljava/lang/String;[I)I<br/>Sink parameter 1<br/>Unknown source com/mysql/jdbc/jdbc2/optional/StatementWrapper.executeUpdate(Ljava/lang/String;[I)I parameter 1<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N81312');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.executeUpdate(Ljava/lang/String;[Ljava/lang/String;)I can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N81312" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.jdbc2.optional.StatementWrapper<br/>In method com.mysql.jdbc.jdbc2.optional.StatementWrapper.executeUpdate(String, String[])<br/>At StatementWrapper.java:[line 819]<br/>Sink method java/sql/Statement.executeUpdate(Ljava/lang/String;[Ljava/lang/String;)I<br/>Sink parameter 1<br/>Unknown source com/mysql/jdbc/jdbc2/optional/StatementWrapper.executeUpdate(Ljava/lang/String;[Ljava/lang/String;)I parameter 1<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N73724');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/MySQLConnection.nativeSQL(Ljava/lang/String;)Ljava/lang/String; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N73724" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.LoadBalancedMySQLConnection<br/>In method com.mysql.jdbc.LoadBalancedMySQLConnection.nativeSQL(String)<br/>At LoadBalancedMySQLConnection.java:[line 2119]<br/>Sink method com/mysql/jdbc/MySQLConnection.nativeSQL(Ljava/lang/String;)Ljava/lang/String;<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/LoadBalancedMySQLConnection.nativeSQL(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N73798');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/MySQLConnection.prepareCall(Ljava/lang/String;)Ljava/sql/CallableStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N73798" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.LoadBalancedMySQLConnection<br/>In method com.mysql.jdbc.LoadBalancedMySQLConnection.prepareCall(String)<br/>At LoadBalancedMySQLConnection.java:[line 2163]<br/>Sink method com/mysql/jdbc/MySQLConnection.prepareCall(Ljava/lang/String;)Ljava/sql/CallableStatement;<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/LoadBalancedMySQLConnection.prepareCall(Ljava/lang/String;)Ljava/sql/CallableStatement; parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N73872');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/MySQLConnection.prepareCall(Ljava/lang/String;II)Ljava/sql/CallableStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N73872" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.LoadBalancedMySQLConnection<br/>In method com.mysql.jdbc.LoadBalancedMySQLConnection.prepareCall(String, int, int)<br/>At LoadBalancedMySQLConnection.java:[line 2157]<br/>Sink method com/mysql/jdbc/MySQLConnection.prepareCall(Ljava/lang/String;II)Ljava/sql/CallableStatement;<br/>Sink parameter 2<br/>Unknown source com/mysql/jdbc/LoadBalancedMySQLConnection.prepareCall(Ljava/lang/String;II)Ljava/sql/CallableStatement; parameter 2<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N73946');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/MySQLConnection.prepareCall(Ljava/lang/String;III)Ljava/sql/CallableStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N73946" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.LoadBalancedMySQLConnection<br/>In method com.mysql.jdbc.LoadBalancedMySQLConnection.prepareCall(String, int, int, int)<br/>At LoadBalancedMySQLConnection.java:[line 2150]<br/>Sink method com/mysql/jdbc/MySQLConnection.prepareCall(Ljava/lang/String;III)Ljava/sql/CallableStatement;<br/>Sink parameter 3<br/>Unknown source com/mysql/jdbc/LoadBalancedMySQLConnection.prepareCall(Ljava/lang/String;III)Ljava/sql/CallableStatement; parameter 3<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N74020');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/MySQLConnection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N74020" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.LoadBalancedMySQLConnection<br/>In method com.mysql.jdbc.LoadBalancedMySQLConnection.prepareStatement(String)<br/>At LoadBalancedMySQLConnection.java:[line 2204]<br/>Sink method com/mysql/jdbc/MySQLConnection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/LoadBalancedMySQLConnection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N74094');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/MySQLConnection.prepareStatement(Ljava/lang/String;I)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N74094" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.LoadBalancedMySQLConnection<br/>In method com.mysql.jdbc.LoadBalancedMySQLConnection.prepareStatement(String, int)<br/>At LoadBalancedMySQLConnection.java:[line 2184]<br/>Sink method com/mysql/jdbc/MySQLConnection.prepareStatement(Ljava/lang/String;I)Ljava/sql/PreparedStatement;<br/>Sink parameter 1<br/>Unknown source com/mysql/jdbc/LoadBalancedMySQLConnection.prepareStatement(Ljava/lang/String;I)Ljava/sql/PreparedStatement; parameter 1<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N74168');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/MySQLConnection.prepareStatement(Ljava/lang/String;II)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N74168" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.LoadBalancedMySQLConnection<br/>In method com.mysql.jdbc.LoadBalancedMySQLConnection.prepareStatement(String, int, int)<br/>At LoadBalancedMySQLConnection.java:[line 2177]<br/>Sink method com/mysql/jdbc/MySQLConnection.prepareStatement(Ljava/lang/String;II)Ljava/sql/PreparedStatement;<br/>Sink parameter 2<br/>Unknown source com/mysql/jdbc/LoadBalancedMySQLConnection.prepareStatement(Ljava/lang/String;II)Ljava/sql/PreparedStatement; parameter 2<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N74242');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/MySQLConnection.prepareStatement(Ljava/lang/String;III)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N74242" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.LoadBalancedMySQLConnection<br/>In method com.mysql.jdbc.LoadBalancedMySQLConnection.prepareStatement(String, int, int, int)<br/>At LoadBalancedMySQLConnection.java:[line 2170]<br/>Sink method com/mysql/jdbc/MySQLConnection.prepareStatement(Ljava/lang/String;III)Ljava/sql/PreparedStatement;<br/>Sink parameter 3<br/>Unknown source com/mysql/jdbc/LoadBalancedMySQLConnection.prepareStatement(Ljava/lang/String;III)Ljava/sql/PreparedStatement; parameter 3<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N74316');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/MySQLConnection.prepareStatement(Ljava/lang/String;[I)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N74316" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.LoadBalancedMySQLConnection<br/>In method com.mysql.jdbc.LoadBalancedMySQLConnection.prepareStatement(String, int[])<br/>At LoadBalancedMySQLConnection.java:[line 2191]<br/>Sink method com/mysql/jdbc/MySQLConnection.prepareStatement(Ljava/lang/String;[I)Ljava/sql/PreparedStatement;<br/>Sink parameter 1<br/>Unknown source com/mysql/jdbc/LoadBalancedMySQLConnection.prepareStatement(Ljava/lang/String;[I)Ljava/sql/PreparedStatement; parameter 1<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N74390');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/MySQLConnection.prepareStatement(Ljava/lang/String;[Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N74390" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.LoadBalancedMySQLConnection<br/>In method com.mysql.jdbc.LoadBalancedMySQLConnection.prepareStatement(String, String[])<br/>At LoadBalancedMySQLConnection.java:[line 2198]<br/>Sink method com/mysql/jdbc/MySQLConnection.prepareStatement(Ljava/lang/String;[Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 1<br/>Unknown source com/mysql/jdbc/LoadBalancedMySQLConnection.prepareStatement(Ljava/lang/String;[Ljava/lang/String;)Ljava/sql/PreparedStatement; parameter 1<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N75769');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/StatementImpl.addBatch(Ljava/lang/String;)V can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N75769" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.PreparedStatement<br/>In method com.mysql.jdbc.PreparedStatement.addBatch(String)<br/>At PreparedStatement.java:[line 1046]<br/>Sink method com/mysql/jdbc/StatementImpl.addBatch(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/PreparedStatement.addBatch(Ljava/lang/String;)V parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N75843');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/PreparedStatement.executeUpdate(Ljava/lang/String;)I can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N75843" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.PreparedStatement<br/>In method com.mysql.jdbc.PreparedStatement.executeBatchSerially(int)<br/>At PreparedStatement.java:[line 2003]<br/>Sink method com/mysql/jdbc/PreparedStatement.executeUpdate(Ljava/lang/String;)I<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/PreparedStatement.batchedArgs<br/>At PreparedStatement.java:[line 2000]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N75922');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/MySQLConnection.prepareStatement(Ljava/lang/String;I)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N75922" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.PreparedStatement<br/>In method com.mysql.jdbc.PreparedStatement.executePreparedBatchAsMultiStatement(int)<br/>At PreparedStatement.java:[line 1536]<br/>Sink method com/mysql/jdbc/MySQLConnection.prepareStatement(Ljava/lang/String;I)Ljava/sql/PreparedStatement;<br/>Sink parameter 1<br/>Unknown source java/lang/StringBuffer.append(Ljava/lang/String;)Ljava/lang/StringBuffer;<br/>Unknown source com/mysql/jdbc/PreparedStatement.generateMultiStatementForBatch(I)Ljava/lang/String;<br/>Unknown source com/mysql/jdbc/PreparedStatement.originalSql<br/>Unknown source java/lang/StringBuffer.toString()Ljava/lang/String;<br/>At PreparedStatement.java:[line 1536]<br/>At PreparedStatement.java:[line 1689]<br/>At PreparedStatement.java:[line 1693]<br/>At PreparedStatement.java:[line 1696]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N76046');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/MySQLConnection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N76046" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.PreparedStatement<br/>In method com.mysql.jdbc.PreparedStatement.executePreparedBatchAsMultiStatement(int)<br/>At PreparedStatement.java:[line 1540]<br/>Sink method com/mysql/jdbc/MySQLConnection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source java/lang/StringBuffer.append(Ljava/lang/String;)Ljava/lang/StringBuffer;<br/>Unknown source com/mysql/jdbc/PreparedStatement.generateMultiStatementForBatch(I)Ljava/lang/String;<br/>Unknown source com/mysql/jdbc/PreparedStatement.originalSql<br/>Unknown source java/lang/StringBuffer.toString()Ljava/lang/String;<br/>At PreparedStatement.java:[line 1540]<br/>At PreparedStatement.java:[line 1689]<br/>At PreparedStatement.java:[line 1693]<br/>At PreparedStatement.java:[line 1696]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N76170');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/MySQLConnection.prepareStatement(Ljava/lang/String;I)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N76170" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.PreparedStatement<br/>In method com.mysql.jdbc.PreparedStatement.executePreparedBatchAsMultiStatement(int)<br/>At PreparedStatement.java:[line 1607]<br/>Sink method com/mysql/jdbc/MySQLConnection.prepareStatement(Ljava/lang/String;I)Ljava/sql/PreparedStatement;<br/>Sink parameter 1<br/>Unknown source java/lang/StringBuffer.append(Ljava/lang/String;)Ljava/lang/StringBuffer;<br/>Unknown source com/mysql/jdbc/PreparedStatement.generateMultiStatementForBatch(I)Ljava/lang/String;<br/>Unknown source com/mysql/jdbc/PreparedStatement.originalSql<br/>Unknown source java/lang/StringBuffer.toString()Ljava/lang/String;<br/>At PreparedStatement.java:[line 1607]<br/>At PreparedStatement.java:[line 1689]<br/>At PreparedStatement.java:[line 1693]<br/>At PreparedStatement.java:[line 1696]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N76294');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/MySQLConnection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N76294" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.PreparedStatement<br/>In method com.mysql.jdbc.PreparedStatement.executePreparedBatchAsMultiStatement(int)<br/>At PreparedStatement.java:[line 1611]<br/>Sink method com/mysql/jdbc/MySQLConnection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source java/lang/StringBuffer.append(Ljava/lang/String;)Ljava/lang/StringBuffer;<br/>Unknown source com/mysql/jdbc/PreparedStatement.generateMultiStatementForBatch(I)Ljava/lang/String;<br/>Unknown source com/mysql/jdbc/PreparedStatement.originalSql<br/>Unknown source java/lang/StringBuffer.toString()Ljava/lang/String;<br/>At PreparedStatement.java:[line 1611]<br/>At PreparedStatement.java:[line 1689]<br/>At PreparedStatement.java:[line 1693]<br/>At PreparedStatement.java:[line 1696]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N76688');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/Connection.nativeSQL(Ljava/lang/String;)Ljava/lang/String; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N76688" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.ReplicationConnection<br/>In method com.mysql.jdbc.ReplicationConnection.nativeSQL(String)<br/>At ReplicationConnection.java:[line 305]<br/>Sink method com/mysql/jdbc/Connection.nativeSQL(Ljava/lang/String;)Ljava/lang/String;<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/ReplicationConnection.nativeSQL(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N76762');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/Connection.prepareCall(Ljava/lang/String;)Ljava/sql/CallableStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N76762" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.ReplicationConnection<br/>In method com.mysql.jdbc.ReplicationConnection.prepareCall(String)<br/>At ReplicationConnection.java:[line 314]<br/>Sink method com/mysql/jdbc/Connection.prepareCall(Ljava/lang/String;)Ljava/sql/CallableStatement;<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/ReplicationConnection.prepareCall(Ljava/lang/String;)Ljava/sql/CallableStatement; parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N76836');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/Connection.prepareCall(Ljava/lang/String;II)Ljava/sql/CallableStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N76836" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.ReplicationConnection<br/>In method com.mysql.jdbc.ReplicationConnection.prepareCall(String, int, int)<br/>At ReplicationConnection.java:[line 324]<br/>Sink method com/mysql/jdbc/Connection.prepareCall(Ljava/lang/String;II)Ljava/sql/CallableStatement;<br/>Sink parameter 2<br/>Unknown source com/mysql/jdbc/ReplicationConnection.prepareCall(Ljava/lang/String;II)Ljava/sql/CallableStatement; parameter 2<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N76910');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/Connection.prepareCall(Ljava/lang/String;III)Ljava/sql/CallableStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N76910" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.ReplicationConnection<br/>In method com.mysql.jdbc.ReplicationConnection.prepareCall(String, int, int, int)<br/>At ReplicationConnection.java:[line 336]<br/>Sink method com/mysql/jdbc/Connection.prepareCall(Ljava/lang/String;III)Ljava/sql/CallableStatement;<br/>Sink parameter 3<br/>Unknown source com/mysql/jdbc/ReplicationConnection.prepareCall(Ljava/lang/String;III)Ljava/sql/CallableStatement; parameter 3<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N76984');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N76984" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.ReplicationConnection<br/>In method com.mysql.jdbc.ReplicationConnection.prepareStatement(String)<br/>At ReplicationConnection.java:[line 346]<br/>Sink method com/mysql/jdbc/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/ReplicationConnection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N77058');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/Connection.prepareStatement(Ljava/lang/String;I)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N77058" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.ReplicationConnection<br/>In method com.mysql.jdbc.ReplicationConnection.prepareStatement(String, int)<br/>At ReplicationConnection.java:[line 360]<br/>Sink method com/mysql/jdbc/Connection.prepareStatement(Ljava/lang/String;I)Ljava/sql/PreparedStatement;<br/>Sink parameter 1<br/>Unknown source com/mysql/jdbc/ReplicationConnection.prepareStatement(Ljava/lang/String;I)Ljava/sql/PreparedStatement; parameter 1<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N77132');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/Connection.prepareStatement(Ljava/lang/String;II)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N77132" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.ReplicationConnection<br/>In method com.mysql.jdbc.ReplicationConnection.prepareStatement(String, int, int)<br/>At ReplicationConnection.java:[line 374]<br/>Sink method com/mysql/jdbc/Connection.prepareStatement(Ljava/lang/String;II)Ljava/sql/PreparedStatement;<br/>Sink parameter 2<br/>Unknown source com/mysql/jdbc/ReplicationConnection.prepareStatement(Ljava/lang/String;II)Ljava/sql/PreparedStatement; parameter 2<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N77206');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/Connection.prepareStatement(Ljava/lang/String;III)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N77206" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.ReplicationConnection<br/>In method com.mysql.jdbc.ReplicationConnection.prepareStatement(String, int, int, int)<br/>At ReplicationConnection.java:[line 391]<br/>Sink method com/mysql/jdbc/Connection.prepareStatement(Ljava/lang/String;III)Ljava/sql/PreparedStatement;<br/>Sink parameter 3<br/>Unknown source com/mysql/jdbc/ReplicationConnection.prepareStatement(Ljava/lang/String;III)Ljava/sql/PreparedStatement; parameter 3<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N77280');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/Connection.prepareStatement(Ljava/lang/String;[I)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N77280" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.ReplicationConnection<br/>In method com.mysql.jdbc.ReplicationConnection.prepareStatement(String, int[])<br/>At ReplicationConnection.java:[line 406]<br/>Sink method com/mysql/jdbc/Connection.prepareStatement(Ljava/lang/String;[I)Ljava/sql/PreparedStatement;<br/>Sink parameter 1<br/>Unknown source com/mysql/jdbc/ReplicationConnection.prepareStatement(Ljava/lang/String;[I)Ljava/sql/PreparedStatement; parameter 1<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N77354');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/Connection.prepareStatement(Ljava/lang/String;[Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N77354" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.ReplicationConnection<br/>In method com.mysql.jdbc.ReplicationConnection.prepareStatement(String, String[])<br/>At ReplicationConnection.java:[line 421]<br/>Sink method com/mysql/jdbc/Connection.prepareStatement(Ljava/lang/String;[Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 1<br/>Unknown source com/mysql/jdbc/ReplicationConnection.prepareStatement(Ljava/lang/String;[Ljava/lang/String;)Ljava/sql/PreparedStatement; parameter 1<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N77826');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/ServerPreparedStatement.executeUpdate(Ljava/lang/String;)I can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N77826" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.ServerPreparedStatement<br/>In method com.mysql.jdbc.ServerPreparedStatement.executeBatchSerially(int)<br/>At ServerPreparedStatement.java:[line 745]<br/>Sink method com/mysql/jdbc/ServerPreparedStatement.executeUpdate(Ljava/lang/String;)I<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/ServerPreparedStatement.batchedArgs<br/>At ServerPreparedStatement.java:[line 742]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N78534');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/MySQLConnection.prepareStatement(Ljava/lang/String;II)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N78534" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.StatementImpl<br/>In method com.mysql.jdbc.StatementImpl.createResultSetUsingServerFetch(String)<br/>At StatementImpl.java:[line 642]<br/>Sink method com/mysql/jdbc/MySQLConnection.prepareStatement(Ljava/lang/String;II)Ljava/sql/PreparedStatement;<br/>Sink parameter 2<br/>Unknown source com/mysql/jdbc/StatementImpl.createResultSetUsingServerFetch(Ljava/lang/String;)Lcom/mysql/jdbc/ResultSetInternalMethods; parameter 0<br/>At ConnectionImpl.java:[line 1002]<br/>At ConnectionImpl.java:[line 1042]<br/>At ConnectionImpl.java:[line 3352]<br/>At ConnectionImpl.java:[line 3815]<br/>At ConnectionImpl.java:[line 3933]<br/>At ConnectionImpl.java:[line 4150]<br/>At ConnectionImpl.java:[line 4153]<br/>At ConnectionImpl.java:[line 4156]<br/>At ConnectionImpl.java:[line 4182]<br/>At ConnectionImpl.java:[line 4199]<br/>At StandardSocketFactory.java:[line 424]<br/>At StatementImpl.java:[line 732]<br/>At StatementImpl.java:[line 783]<br/>At StatementImpl.java:[line 789]<br/>At StatementImpl.java:[line 825]<br/>At StatementImpl.java:[line 1002]<br/>At StatementImpl.java:[line 1009]<br/>At StatementImpl.java:[line 1032]<br/>At StatementImpl.java:[line 1038]<br/>At StatementImpl.java:[line 1061]<br/>At StatementImpl.java:[line 1067]<br/>At StatementImpl.java:[line 1497]<br/>At StatementImpl.java:[line 1503]<br/>At StatementImpl.java:[line 1540]<br/>At MysqlXAConnection.java:[line 385]<br/>At MysqlXAConnection.java:[line 428]<br/>At MysqlXAConnection.java:[line 478]<br/>At MysqlXAConnection.java:[line 523]<br/>At MysqlXAConnection.java:[line 559]<br/>At MysqlXAConnection.java:[line 570]<br/>At MysqlXAConnection.java:[line 577]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N78913');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/StatementImpl.execute(Ljava/lang/String;)Z can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N78913" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.StatementImpl<br/>In method com.mysql.jdbc.StatementImpl.execute(String, int)<br/>At StatementImpl.java:[line 1009]<br/>Sink method com/mysql/jdbc/StatementImpl.execute(Ljava/lang/String;)Z<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/StatementImpl.execute(Ljava/lang/String;I)Z parameter 1<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N78987');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/StatementImpl.execute(Ljava/lang/String;)Z can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N78987" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.StatementImpl<br/>In method com.mysql.jdbc.StatementImpl.execute(String, int[])<br/>At StatementImpl.java:[line 1038]<br/>Sink method com/mysql/jdbc/StatementImpl.execute(Ljava/lang/String;)Z<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/StatementImpl.execute(Ljava/lang/String;[I)Z parameter 1<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N79061');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/StatementImpl.execute(Ljava/lang/String;)Z can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N79061" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.StatementImpl<br/>In method com.mysql.jdbc.StatementImpl.execute(String, String[])<br/>At StatementImpl.java:[line 1067]<br/>Sink method com/mysql/jdbc/StatementImpl.execute(Ljava/lang/String;)Z<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/StatementImpl.execute(Ljava/lang/String;[Ljava/lang/String;)Z parameter 1<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N79135');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.execute(Ljava/lang/String;I)Z can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N79135" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.StatementImpl<br/>In method com.mysql.jdbc.StatementImpl.executeBatchUsingMultiQueries(boolean, int, int)<br/>At StatementImpl.java:[line 1323]<br/>Sink method java/sql/Statement.execute(Ljava/lang/String;I)Z<br/>Sink parameter 1<br/>Unknown source java/lang/StringBuffer.append(Ljava/lang/String;)Ljava/lang/StringBuffer;<br/>Unknown source com/mysql/jdbc/StatementImpl.batchedArgs<br/>Unknown source java/lang/StringBuffer.toString()Ljava/lang/String;<br/>At StatementImpl.java:[line 1316]<br/>At StatementImpl.java:[line 1323]<br/>At StatementImpl.java:[line 1336]<br/>At StatementImpl.java:[line 1337]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N79254');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.execute(Ljava/lang/String;I)Z can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N79254" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.StatementImpl<br/>In method com.mysql.jdbc.StatementImpl.executeBatchUsingMultiQueries(boolean, int, int)<br/>At StatementImpl.java:[line 1343]<br/>Sink method java/sql/Statement.execute(Ljava/lang/String;I)Z<br/>Sink parameter 1<br/>Unknown source java/lang/StringBuffer.append(Ljava/lang/String;)Ljava/lang/StringBuffer;<br/>Unknown source com/mysql/jdbc/StatementImpl.batchedArgs<br/>Unknown source java/lang/StringBuffer.toString()Ljava/lang/String;<br/>At StatementImpl.java:[line 1316]<br/>At StatementImpl.java:[line 1336]<br/>At StatementImpl.java:[line 1337]<br/>At StatementImpl.java:[line 1343]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N79373');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/StatementImpl.executeUpdate(Ljava/lang/String;)I can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N79373" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.StatementImpl<br/>In method com.mysql.jdbc.StatementImpl.executeUpdate(String, int)<br/>At StatementImpl.java:[line 1905]<br/>Sink method com/mysql/jdbc/StatementImpl.executeUpdate(Ljava/lang/String;)I<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/StatementImpl.executeUpdate(Ljava/lang/String;I)I parameter 1<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N79447');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/StatementImpl.executeUpdate(Ljava/lang/String;)I can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N79447" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.StatementImpl<br/>In method com.mysql.jdbc.StatementImpl.executeUpdate(String, int[])<br/>At StatementImpl.java:[line 1934]<br/>Sink method com/mysql/jdbc/StatementImpl.executeUpdate(Ljava/lang/String;)I<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/StatementImpl.executeUpdate(Ljava/lang/String;[I)I parameter 1<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N79521');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of com/mysql/jdbc/StatementImpl.executeUpdate(Ljava/lang/String;)I can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N79521" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.mysql.jdbc.StatementImpl<br/>In method com.mysql.jdbc.StatementImpl.executeUpdate(String, String[])<br/>At StatementImpl.java:[line 1960]<br/>Sink method com/mysql/jdbc/StatementImpl.executeUpdate(Ljava/lang/String;)I<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/StatementImpl.executeUpdate(Ljava/lang/String;[Ljava/lang/String;)I parameter 1<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N72819');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N72819" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class com.mysql.jdbc.ExportControlled<br/>In method com.mysql.jdbc.ExportControlled.getSSLSocketFactoryDefaultOrConfigured(MysqlIO)<br/>At ExportControlled.java:[line 160]<br/>Sink method java/net/URL.openStream()Ljava/io/InputStream;<br/>Sink parameter 0<br/>Unknown source java/net/URL.&lt;init&gt;(Ljava/lang/String;)V<br/>Unknown source com/mysql/jdbc/MySQLConnection.getClientCertificateKeyStoreUrl()Ljava/lang/String;<br/>At ExportControlled.java:[line 157]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N72903');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N72903" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class com.mysql.jdbc.ExportControlled<br/>In method com.mysql.jdbc.ExportControlled.getSSLSocketFactoryDefaultOrConfigured(MysqlIO)<br/>At ExportControlled.java:[line 204]<br/>Sink method java/net/URL.openStream()Ljava/io/InputStream;<br/>Sink parameter 0<br/>Unknown source com/mysql/jdbc/MySQLConnection.getTrustCertificateKeyStoreUrl()Ljava/lang/String;<br/>Unknown source java/net/URL.&lt;init&gt;(Ljava/lang/String;)V<br/>At ExportControlled.java:[line 200]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N74950');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N74950" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class com.mysql.jdbc.MysqlIO<br/>In method com.mysql.jdbc.MysqlIO.sendFileToServer(StatementImpl, String)<br/>At MysqlIO.java:[line 4020]<br/>Sink method java/net/URL.openStream()Ljava/io/InputStream;<br/>Sink parameter 0<br/>Unknown source java/net/URL.&lt;init&gt;(Ljava/lang/String;)V<br/>Unknown source com/mysql/jdbc/MysqlIO.sendFileToServer(Lcom/mysql/jdbc/StatementImpl;Ljava/lang/String;)Lcom/mysql/jdbc/ResultSetImpl; parameter 0<br/>At Buffer.java:[line 432]<br/>At Buffer.java:[line 449]<br/>At MysqlIO.java:[line 3189]<br/>At MysqlIO.java:[line 3193]<br/>At MysqlIO.java:[line 3196]<br/>At MysqlIO.java:[line 4019]<br/>At StringUtils.java:[line 1990]<br/>At StringUtils.java:[line 2004]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N75198');">
<td>
<span class="priority-2">SECUS</span>
</td>
<td>Unencrypted socket to com.mysql.jdbc.NamedPipeSocketFactory$NamedPipeSocket (instead of SSLSocket)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N75198" style="display: none;">
<a href="#UNENCRYPTED_SOCKET">Bug type UNENCRYPTED_SOCKET (click for details)</a>
<br/>In class com.mysql.jdbc.NamedPipeSocketFactory$NamedPipeSocket<br/>In method new com.mysql.jdbc.NamedPipeSocketFactory$NamedPipeSocket(NamedPipeSocketFactory, String)<br/>At NamedPipeSocketFactory.java:[line 51]<br/>Value remote host</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N77905');">
<td>
<span class="priority-2">SECUS</span>
</td>
<td>Unencrypted socket to com.mysql.jdbc.StandardSocketFactory (instead of SSLSocket)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N77905" style="display: none;">
<a href="#UNENCRYPTED_SOCKET">Bug type UNENCRYPTED_SOCKET (click for details)</a>
<br/>In class com.mysql.jdbc.StandardSocketFactory<br/>In method com.mysql.jdbc.StandardSocketFactory.connect(String, int, Properties)<br/>At StandardSocketFactory.java:[line 259]<br/>Value remote host</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N77963');">
<td>
<span class="priority-2">SECUS</span>
</td>
<td>Unencrypted socket to com.mysql.jdbc.StandardSocketFactory (instead of SSLSocket)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N77963" style="display: none;">
<a href="#UNENCRYPTED_SOCKET">Bug type UNENCRYPTED_SOCKET (click for details)</a>
<br/>In class com.mysql.jdbc.StandardSocketFactory<br/>In method com.mysql.jdbc.StandardSocketFactory.connect(String, int, Properties)<br/>At StandardSocketFactory.java:[line 318]<br/>Value remote host</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N72987');">
<td>
<span class="priority-2">SECWTM</span>
</td>
<td>TrustManager that accept any certificates makes communication vulnerable to a MITM attack</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N72987" style="display: none;">
<a href="#WEAK_TRUST_MANAGER">Bug type WEAK_TRUST_MANAGER (click for details)</a>
<br/>In class com.mysql.jdbc.ExportControlled$1<br/>In method com.mysql.jdbc.ExportControlled$1.checkClientTrusted(X509Certificate[], String)<br/>At ExportControlled.java:[line 244]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N73041');">
<td>
<span class="priority-2">SECWTM</span>
</td>
<td>TrustManager that accept any certificates makes communication vulnerable to a MITM attack</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N73041" style="display: none;">
<a href="#WEAK_TRUST_MANAGER">Bug type WEAK_TRUST_MANAGER (click for details)</a>
<br/>In class com.mysql.jdbc.ExportControlled$1<br/>In method com.mysql.jdbc.ExportControlled$1.checkServerTrusted(X509Certificate[], String)<br/>At ExportControlled.java:[line 249]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N73095');">
<td>
<span class="priority-2">SECWTM</span>
</td>
<td>TrustManager that accept any certificates makes communication vulnerable to a MITM attack</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N73095" style="display: none;">
<a href="#WEAK_TRUST_MANAGER">Bug type WEAK_TRUST_MANAGER (click for details)</a>
<br/>In class com.mysql.jdbc.ExportControlled$1<br/>In method com.mysql.jdbc.ExportControlled$1.getAcceptedIssuers()<br/>At ExportControlled.java:[line 252]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N73368');">
<td>
<span class="priority-2">SECXXEDOC</span>
</td>
<td>The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N73368" style="display: none;">
<a href="#XXE_DOCUMENT">Bug type XXE_DOCUMENT (click for details)</a>
<br/>In class com.mysql.jdbc.JDBC4MysqlSQLXML<br/>In method com.mysql.jdbc.JDBC4MysqlSQLXML.getSource(Class)<br/>At JDBC4MysqlSQLXML.java:[line 323]<br/>Value DocumentBuilder.parse(...)</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N73484');">
<td>
<span class="priority-2">SECXXESTR</span>
</td>
<td>The XML parsing is vulnerable to XML External Entity attacks</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N73484" style="display: none;">
<a href="#XXE_XMLSTREAMREADER">Bug type XXE_XMLSTREAMREADER (click for details)</a>
<br/>In class com.mysql.jdbc.JDBC4MysqlSQLXML<br/>In method com.mysql.jdbc.JDBC4MysqlSQLXML.binaryInputStreamStreamToReader(ByteArrayOutputStream)<br/>At JDBC4MysqlSQLXML.java:[line 552]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N73538');">
<td>
<span class="priority-2">SECXXESTR</span>
</td>
<td>The XML parsing is vulnerable to XML External Entity attacks</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N73538" style="display: none;">
<a href="#XXE_XMLSTREAMREADER">Bug type XXE_XMLSTREAMREADER (click for details)</a>
<br/>In class com.mysql.jdbc.JDBC4MysqlSQLXML<br/>In method com.mysql.jdbc.JDBC4MysqlSQLXML.getSource(Class)<br/>At JDBC4MysqlSQLXML.java:[line 354]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N73426');">
<td>
<span class="priority-2">SECXXETFDTD</span>
</td>
<td>The use of TransformerFactory.newInstance(...) (TransformerFactory) is vulnerable to XML External Entity attacks</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N73426" style="display: none;">
<a href="#XXE_DTD_TRANSFORM_FACTORY">Bug type XXE_DTD_TRANSFORM_FACTORY (click for details)</a>
<br/>In class com.mysql.jdbc.JDBC4MysqlSQLXML<br/>In method com.mysql.jdbc.JDBC4MysqlSQLXML.domSourceToString()<br/>At JDBC4MysqlSQLXML.java:[line 633]<br/>Value TransformerFactory.newInstance(...)</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N73592');">
<td>
<span class="priority-2">SECXXETFXSLT</span>
</td>
<td>The use of TransformerFactory.newInstance(...) is vulnerable to XSLT External Entity attacks</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N73592" style="display: none;">
<a href="#XXE_XSLT_TRANSFORM_FACTORY">Bug type XXE_XSLT_TRANSFORM_FACTORY (click for details)</a>
<br/>In class com.mysql.jdbc.JDBC4MysqlSQLXML<br/>In method com.mysql.jdbc.JDBC4MysqlSQLXML.domSourceToString()<br/>At JDBC4MysqlSQLXML.java:[line 633]<br/>Value TransformerFactory.newInstance(...)</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66765');">
<td>
<span class="priority-2">SQL</span>
</td>
<td>com.mysql.jdbc.CallableStatement.retrieveOutParams() passes a nonconstant String to an execute or addBatch method on an SQL statement</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66765" style="display: none;">
<a href="#SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE">Bug type SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE (click for details)</a>
<br/>In class com.mysql.jdbc.CallableStatement<br/>In method com.mysql.jdbc.CallableStatement.retrieveOutParams()<br/>At CallableStatement.java:[line 2128]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68992');">
<td>
<span class="priority-2">SQL</span>
</td>
<td>com.mysql.jdbc.ConnectionImpl.setSessionVariables() passes a nonconstant String to an execute or addBatch method on an SQL statement</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68992" style="display: none;">
<a href="#SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE">Bug type SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE (click for details)</a>
<br/>In class com.mysql.jdbc.ConnectionImpl<br/>In method com.mysql.jdbc.ConnectionImpl.setSessionVariables()<br/>At ConnectionImpl.java:[line 5572]<br/>Another occurrence at ConnectionImpl.java:[line 5570]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70210');">
<td>
<span class="priority-1">SQL</span>
</td>
<td>com.mysql.jdbc.DatabaseMetaData.getColumnPrivileges(String, String, String, String) passes a nonconstant String to an execute or addBatch method on an SQL statement</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70210" style="display: none;">
<a href="#SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE">Bug type SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE (click for details)</a>
<br/>In class com.mysql.jdbc.DatabaseMetaData<br/>In method com.mysql.jdbc.DatabaseMetaData.getColumnPrivileges(String, String, String, String)<br/>At DatabaseMetaData.java:[line 2304]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70264');">
<td>
<span class="priority-1">SQL</span>
</td>
<td>com.mysql.jdbc.DatabaseMetaData.getTablePrivileges(String, String, String) passes a nonconstant String to an execute or addBatch method on an SQL statement</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70264" style="display: none;">
<a href="#SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE">Bug type SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE (click for details)</a>
<br/>In class com.mysql.jdbc.DatabaseMetaData<br/>In method com.mysql.jdbc.DatabaseMetaData.getTablePrivileges(String, String, String)<br/>At DatabaseMetaData.java:[line 4912]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70930');">
<td>
<span class="priority-1">SQL</span>
</td>
<td>com.mysql.jdbc.DatabaseMetaData$10.forEach(String) passes a nonconstant String to an execute or addBatch method on an SQL statement</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70930" style="display: none;">
<a href="#SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE">Bug type SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE (click for details)</a>
<br/>In class com.mysql.jdbc.DatabaseMetaData$10<br/>In method com.mysql.jdbc.DatabaseMetaData$10.forEach(String)<br/>At DatabaseMetaData.java:[line 7033]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71467');">
<td>
<span class="priority-1">SQL</span>
</td>
<td>com.mysql.jdbc.DatabaseMetaData$2.forEach(String) passes a nonconstant String to an execute or addBatch method on an SQL statement</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71467" style="display: none;">
<a href="#SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE">Bug type SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE (click for details)</a>
<br/>In class com.mysql.jdbc.DatabaseMetaData$2<br/>In method com.mysql.jdbc.DatabaseMetaData$2.forEach(String)<br/>At DatabaseMetaData.java:[line 2571]<br/>Another occurrence at DatabaseMetaData.java:[line 2555]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N72044');">
<td>
<span class="priority-1">SQL</span>
</td>
<td>com.mysql.jdbc.DatabaseMetaData$5.forEach(String) passes a nonconstant String to an execute or addBatch method on an SQL statement</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N72044" style="display: none;">
<a href="#SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE">Bug type SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE (click for details)</a>
<br/>In class com.mysql.jdbc.DatabaseMetaData$5<br/>In method com.mysql.jdbc.DatabaseMetaData$5.forEach(String)<br/>At DatabaseMetaData.java:[line 3467]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N72754');">
<td>
<span class="priority-1">SQL</span>
</td>
<td>com.mysql.jdbc.DatabaseMetaData$9.forEach(String) passes a nonconstant String to an execute or addBatch method on an SQL statement</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N72754" style="display: none;">
<a href="#SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE">Bug type SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE (click for details)</a>
<br/>In class com.mysql.jdbc.DatabaseMetaData$9<br/>In method com.mysql.jdbc.DatabaseMetaData$9.forEach(String)<br/>At DatabaseMetaData.java:[line 5101]<br/>Another occurrence at DatabaseMetaData.java:[line 5088]</p>
</td>
</tr>
</table>
<h1>
<a name="Details">Details</a>
</h1>
<h2>
<a name="INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE: Information Exposure Through An Error Message</a>
</h2>
            
<p>
The sensitive information may be valuable information on its own (such as a password), or it may be useful for launching other, more deadly attacks. If an attack fails, an attacker may use error information provided by the server to launch another more focused attack. For example, an attempt to exploit a path traversal weakness (CWE-22) might yield the full pathname of the installed application. In turn, this could be used to select the proper number of ".." sequences to navigate to the targeted file. An attack using SQL injection (CWE-89) might not initially succeed, but an error message could reveal the malformed query, which would expose query logic and possibly even passwords or other sensitive information used within the query.
</p>
<p>
    <b>Vulnerable Code:</b><br/>
<pre>try {
  out = httpResponse.getOutputStream()
} catch (Exception e) {
  e.printStackTrace(out);
}</pre>
</p>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/209.html">CWE-209: Information Exposure Through an Error Message</a><br/>
<a href="https://cwe.mitre.org/data/definitions/211.html">CWE-211: Information Exposure Through Externally-Generated Error Message</a><br/>
</p>
            
        
<h2>
<a name="COMMAND_INJECTION">COMMAND_INJECTION: Potential Command Injection</a>
</h2>
            
<p>The highlighted API is used to execute a system command. If unfiltered input is passed to this API, it can lead to arbitrary command execution.</p>
<br/>
<p>
    <b>Vulnerable Code:</b><br/>
<pre>import java.lang.Runtime;

Runtime r = Runtime.getRuntime();
r.exec("/bin/sh -c some_tool" + input);</pre>
</p>
<p>
<b>References</b><br/>
<a href="https://www.owasp.org/index.php/Command_Injection">OWASP: Command Injection</a><br/>
<a href="https://www.owasp.org/index.php/Top_10_2013-A1-Injection">OWASP: Top 10 2013-A1-Injection</a><br/>
<a href="https://cwe.mitre.org/data/definitions/78.html">CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')</a>
</p>

        
<h2>
<a name="EXTERNAL_CONFIG_CONTROL">EXTERNAL_CONFIG_CONTROL: Potential external control of configuration</a>
</h2>
            
<p>
    Allowing external control of system settings can disrupt service or cause an application
    to behave in unexpected, and potentially malicious ways.
    An attacker could cause an error by providing a nonexistent catalog name
    or connect to an unauthorized portion of the database.
</p>
<br/>
<p>
<b>Code at risk:</b><br/>
<pre>conn.setCatalog(request.getParameter("catalog"));</pre>
</p>
<br/>
<p>
    <b>References</b><br/>
    <a href="https://cwe.mitre.org/data/definitions/15.html">CWE-15: External Control of System or Configuration Setting</a><br/>
</p>

        
<h2>
<a name="OBJECT_DESERIALIZATION">OBJECT_DESERIALIZATION: Object deserialization is used in {1}</a>
</h2>
            
<p>
    Object deserialization of untrusted data can lead to remote code execution, if there is a class in classpath that allows
    the trigger of malicious operation.
</p>
<p>
    Libraries developers tend to fix class that provided potential malicious trigger. There are still classes that are
    known to trigger Denial of Service<sup>[1]</sup>.
</p>
<p>
    Deserialization is a sensible operation that has a great history of vulnerabilities. The web application might
    become vulnerable as soon as a new vulnerability is found in the Java Virtual Machine<sup>[2] [3]</sup>.
</p>

<p>
<b>Code at risk:</b><br/>
<pre>
public UserData deserializeObject(InputStream receivedFile) throws IOException, ClassNotFoundException {

    try (ObjectInputStream in = new ObjectInputStream(receivedFile)) {
        return (UserData) in.readObject();
    }
}
</pre>
</p>

<p>
<b>Solutions:</b><br/>
<p>
Avoid deserializing object provided by remote users.
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/502.html">CWE-502: Deserialization of Untrusted Data</a><br/>
<a href="https://www.owasp.org/index.php/Deserialization_of_untrusted_data">Deserialization of untrusted data</a><br/>
<a href="https://www.oracle.com/technetwork/java/seccodeguide-139067.html#8">Serialization and Deserialization </a><br/>
<a href="https://github.com/frohoff/ysoserial">A tool for generating payloads that exploit unsafe Java object deserialization</a><br/>
[1] <a href="https://gist.github.com/coekie/a27cc406fc9f3dc7a70d">Example of Denial of Service using the class <code>java.util.HashSet</code></a><br/>
[2] <a href="https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2015-2590">OpenJDK: Deserialization issue in ObjectInputStream.readSerialData() (CVE-2015-2590)</a><br/>
[3] <a href="https://www.rapid7.com/db/modules/exploit/multi/browser/java_calendar_deserialize">Rapid7: Sun Java Calendar Deserialization Privilege Escalation (CVE-2008-5353)</a>
</p>

        
<h2>
<a name="PREDICTABLE_RANDOM">PREDICTABLE_RANDOM: Predictable pseudorandom number generator</a>
</h2>
            
<p>The use of a predictable random value can lead to vulnerabilities when used in certain security critical contexts. For example, when the value is used as:</p>
<ul>
<li>a CSRF token: a predictable token can lead to a CSRF attack as an attacker will know the value of the token</li>
<li>a password reset token (sent by email): a predictable password token can lead to an account takeover, since an attacker will guess the URL of the "change password" form</li>
<li>any other secret value</li>
</ul>
<p>
A quick fix could be to replace the use of <code>java.util.Random</code> with something stronger, such as <code>java.security.SecureRandom</code>.
</p>
<p>
<b>Vulnerable Code:</b><br/>
<pre>String generateSecretToken() {
    Random r = new Random();
    return Long.toHexString(r.nextLong());
}</pre>
</p>
<p>
<b>Solution:</b>
<pre>import org.apache.commons.codec.binary.Hex;

String generateSecretToken() {
    SecureRandom secRandom = new SecureRandom();

    byte[] result = new byte[32];
    secRandom.nextBytes(result);
    return Hex.encodeHexString(result);
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://jazzy.id.au/2010/09/20/cracking_random_number_generators_part_1.html">Cracking Random Number Generators - Part 1 (https://jazzy.id.au)</a><br/>
<a href="https://www.securecoding.cert.org/confluence/display/java/MSC02-J.+Generate+strong+random+numbers">CERT: MSC02-J. Generate strong random numbers</a><br/>
<a href="https://cwe.mitre.org/data/definitions/330.html">CWE-330: Use of Insufficiently Random Values</a><br/>
<a href="https://blog.h3xstream.com/2014/12/predicting-struts-csrf-token-cve-2014.html">Predicting Struts CSRF Token (Example of real-life vulnerability and exploitation)</a>
</p>

        
<h2>
<a name="PATH_TRAVERSAL_IN">PATH_TRAVERSAL_IN: Potential Path Traversal (file read)</a>
</h2>
            
<p>A file is opened to read its content. The filename comes from an <b>input</b> parameter.
If an unfiltered parameter is passed to this file API, files from an arbitrary filesystem location could be read.</p>
<p>This rule identifies <b>potential</b> path traversal vulnerabilities. In many cases, the constructed file path cannot be controlled
by the user. If that is the case, the reported instance is a false positive.</p>
<br/>

<p>
    <b>Vulnerable Code:</b><br/>
<pre>@GET
@Path("/images/{image}")
@Produces("images/*")
public Response getImage(@javax.ws.rs.PathParam("image") String image) {
    File file = new File("resources/images/", image); //Weak point

    if (!file.exists()) {
        return Response.status(Status.NOT_FOUND).build();
    }

    return Response.ok().entity(new FileInputStream(file)).build();
}</pre>
</p>
<br/>

<p>
    <b>Solution:</b><br/>
<pre>import org.apache.commons.io.FilenameUtils;

@GET
@Path("/images/{image}")
@Produces("images/*")
public Response getImage(@javax.ws.rs.PathParam("image") String image) {
    File file = new File("resources/images/", FilenameUtils.getName(image)); //Fix

    if (!file.exists()) {
        return Response.status(Status.NOT_FOUND).build();
    }

    return Response.ok().entity(new FileInputStream(file)).build();
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="http://projects.webappsec.org/w/page/13246952/Path%20Traversal">WASC: Path Traversal</a><br/>
<a href="https://www.owasp.org/index.php/Path_Traversal">OWASP: Path Traversal</a><br/>
<a href="https://capec.mitre.org/data/definitions/126.html">CAPEC-126: Path Traversal</a><br/>
<a href="https://cwe.mitre.org/data/definitions/22.html">CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')</a>
</p>

        
<h2>
<a name="PATH_TRAVERSAL_OUT">PATH_TRAVERSAL_OUT: Potential Path Traversal (file write)</a>
</h2>
            
<p>A file is opened to write to its contents. The filename comes from an <b>input</b> parameter.
If an unfiltered parameter is passed to this file API, files at an arbitrary filesystem location could be modified.</p>
<p>This rule identifies <b>potential</b> path traversal vulnerabilities. In many cases, the constructed file path cannot be controlled
by the user. If that is the case, the reported instance is a false positive.</p>
<br/>
<p>
<b>References</b><br/>
<a href="http://projects.webappsec.org/w/page/13246952/Path%20Traversal">WASC-33: Path Traversal</a><br/>
<a href="https://www.owasp.org/index.php/Path_Traversal">OWASP: Path Traversal</a><br/>
<a href="https://capec.mitre.org/data/definitions/126.html">CAPEC-126: Path Traversal</a><br/>
<a href="https://cwe.mitre.org/data/definitions/22.html">CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')</a>
</p>

        
<h2>
<a name="WEAK_MESSAGE_DIGEST_SHA1">WEAK_MESSAGE_DIGEST_SHA1: SHA-1 is a weak hash function</a>
</h2>
            
<p>The algorithms SHA-1 is not a recommended algorithm for hash password, for signature verification and other
uses. <b>PBKDF2</b> should be used to hash password for example.</p>

<blockquote>
    "<b>SHA-1 for digital signature generation:</b><br/>
    SHA-1 may only be used for digital signature generation where specifically allowed by NIST protocol-specific guidance.
    For all other applications, <u>SHA-1 shall not be used for digital signature generation</u>.<br/>
    <b>SHA-1 for digital signature verification:</b><br/>
    For digital signature verification, <u>SHA-1 is allowed for legacy-use</u>.<br/>
    [...]<br/>
    <b>SHA-224, SHA-256, SHA-384, SHA-512, SHA-512/224, and SHA-512/256</b>:<br/>
    The use of these hash functions is acceptable for all hash function applications."<br/>
    - <a href="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-131Ar2.pdf">NIST: Transitioning the Use of Cryptographic Algorithms and Key Lengths p.15</a>
</blockquote>
<blockquote>
    "The main idea of a PBKDF is to slow dictionary or brute force attacks on the passwords by increasing the time
    needed to test each password. An attacker with a list of likely passwords can evaluate the PBKDF using the known
    iteration counter and the salt. Since an attacker has to spend a significant amount of computing time for each try,
    it becomes harder to apply the dictionary or brute force attacks."<br/>
- <a href="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-132.pdf">NIST: Recommendation for Password-Based Key Derivation  p.12</a>

</blockquote>
<br/>
<p>
    <b>Vulnerable Code:</b><br/>
    <pre>MessageDigest sha1Digest = MessageDigest.getInstance("SHA1");
    sha1Digest.update(password.getBytes());
    byte[] hashValue = sha1Digest.digest();</pre>
    <br/>
    <pre>byte[] hashValue = DigestUtils.getSha1Digest().digest(password.getBytes());</pre>
</p>
<br/>
<p>
    <b>Solution (Using bouncy castle):</b><br/>
    <pre>public static byte[] getEncryptedPassword(String password, byte[] salt) throws NoSuchAlgorithmException, InvalidKeySpecException {
    PKCS5S2ParametersGenerator gen = new PKCS5S2ParametersGenerator(new SHA256Digest());
    gen.init(password.getBytes("UTF-8"), salt.getBytes(), 4096);
    return ((KeyParameter) gen.generateDerivedParameters(256)).getKey();
}</pre>
    <br/>
    <b>Solution (Java 8 and later):</b><br/>
    <pre>public static byte[] getEncryptedPassword(String password, byte[] salt) throws NoSuchAlgorithmException, InvalidKeySpecException {
    KeySpec spec = new PBEKeySpec(password.toCharArray(), salt, 4096, 256 * 8);
    SecretKeyFactory f = SecretKeyFactory.getInstance("PBKDF2WithHmacSHA256");
    return f.generateSecret(spec).getEncoded();
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://community.qualys.com/blogs/securitylabs/2014/09/09/sha1-deprecation-what-you-need-to-know">Qualys blog: SHA1 Deprecation: What You Need to Know</a><br/>
<a href="https://googleonlinesecurity.blogspot.ca/2014/09/gradually-sunsetting-sha-1.html">Google Online Security Blog: Gradually sunsetting SHA-1</a><br/>
<a href="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-131Ar2.pdf">NIST: Transitioning the Use of Cryptographic Algorithms and Key Lengths</a><br/>
<a href="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-132.pdf">NIST: Recommendation for Password-Based Key Derivation</a><br/>
<a href="https://stackoverflow.com/q/22580853/89769">Stackoverflow: Reliable implementation of PBKDF2-HMAC-SHA256 for Java</a><br/>
<a href="https://cwe.mitre.org/data/definitions/327.html">CWE-327: Use of a Broken or Risky Cryptographic Algorithm</a>
</p>

        
<h2>
<a name="SQL_INJECTION_JDBC">SQL_INJECTION_JDBC: Potential JDBC Injection</a>
</h2>
            
<p>
The input values included in SQL queries need to be passed in safely.
Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection.
</p>

<p>
    <b>Vulnerable Code:</b><br/>
    <pre>Connection conn = [...];
Statement stmt = con.createStatement();
ResultSet rs = stmt.executeQuery("update COFFEES set SALES = "+nbSales+" where COF_NAME = '"+coffeeName+"'");</pre>
</p>
<p>
    <b>Solution:</b><br/>
    <pre>Connection conn = [...];
conn.prepareStatement("update COFFEES set SALES = ? where COF_NAME = ?");
updateSales.setInt(1, nbSales);
updateSales.setString(2, coffeeName);</pre>
</p>
<br/>

<b>References (JDBC)</b><br/>
<a href="https://docs.oracle.com/javase/tutorial/jdbc/basics/prepared.html">Oracle Documentation: The Java Tutorials &gt; Prepared Statements</a><br/>
<b>References (SQL injection)</b><br/>
<a href="http://projects.webappsec.org/w/page/13246963/SQL%20Injection">WASC-19: SQL Injection</a><br/>
<a href="https://capec.mitre.org/data/definitions/66.html">CAPEC-66: SQL Injection</a><br/>
<a href="https://cwe.mitre.org/data/definitions/89.html">CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')</a><br/>
<a href="https://www.owasp.org/index.php/Top_10_2013-A1-Injection">OWASP: Top 10 2013-A1-Injection</a><br/>
<a href="https://www.owasp.org/index.php/SQL_Injection_Prevention_Cheat_Sheet">OWASP: SQL Injection Prevention Cheat Sheet</a><br/>
<a href="https://www.owasp.org/index.php/Query_Parameterization_Cheat_Sheet">OWASP: Query Parameterization Cheat Sheet</a><br/>
</p>

        
<h2>
<a name="URLCONNECTION_SSRF_FD">URLCONNECTION_SSRF_FD: URLConnection Server-Side Request Forgery (SSRF) and File Disclosure</a>
</h2>
            
<p>
    Server-Side Request Forgery occur when a web server executes a request to a user supplied destination
    parameter that is not validated. Such vulnerabilities could allow an attacker to access internal services
    or to launch attacks from your web server.
</p>
<p>
    URLConnection can be used with file:// protocol or other protocols to access local filesystem and potentially other services.
<p>
    <b>Vulnerable Code:</b>
<pre>
new URL(String url).openConnection()
</pre>

<pre>
new URL(String url).openStream()
</pre>

<pre>
new URL(String url).getContent()
</pre>
</p>
<p>
    <b>Solution/Countermeasures:</b><br/>
    <ul>
        <li>Don't accept URL destinations from users</li>
        <li>Accept a destination key, and use it to look up the target destination associate with the key</li>
        <li>White list URLs (if possible)</li>
        <li>Validate that the beginning of the URL is part of a white list</li>
    </ul>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a><br/>
<a href="https://www.bishopfox.com/blog/2015/04/vulnerable-by-design-understanding-server-side-request-forgery/">Understanding Server-Side Request Forgery</a><br/>
<a href="https://cwe.mitre.org/data/definitions/73.html">CWE-73: External Control of File Name or Path</a><br/>
<a href="https://www.pwntester.com/blog/2013/11/28/abusing-jar-downloads/">Abusing jar:// downloads</a><br />
</p>
            
<h2>
<a name="UNENCRYPTED_SOCKET">UNENCRYPTED_SOCKET: Unencrypted Socket</a>
</h2>
            
<p>
The communication channel used is not encrypted. The traffic could be read by an attacker intercepting the network traffic.
</p>
<p>
<b>Vulnerable Code:</b><br/>
Plain socket (Cleartext communication):
<pre>Socket soc = new Socket("www.google.com",80);</pre>
</p>
<p>
<b>Solution:</b><br/>
SSL Socket (Secure communication):
<pre>Socket soc = SSLSocketFactory.getDefault().createSocket("www.google.com", 443);</pre>
</p>
<p>Beyond using an SSL socket, you need to make sure your use of SSLSocketFactory does all the appropriate certificate validation checks to
make sure you are not subject to man-in-the-middle attacks. Please read the OWASP Transport Layer Protection Cheat Sheet for details on how
to do this correctly.
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://www.owasp.org/index.php/Top_10_2010-A9">OWASP: Top 10 2010-A9-Insufficient Transport Layer Protection</a><br/>
<a href="https://www.owasp.org/index.php/Top_10_2013-A6-Sensitive_Data_Exposure">OWASP: Top 10 2013-A6-Sensitive Data Exposure</a><br/>
<a href="https://www.owasp.org/index.php/Transport_Layer_Protection_Cheat_Sheet">OWASP: Transport Layer Protection Cheat Sheet</a><br/>
<a href="http://projects.webappsec.org/w/page/13246945/Insufficient%20Transport%20Layer%20Protection">WASC-04: Insufficient Transport Layer Protection</a><br/>
<a href="https://cwe.mitre.org/data/definitions/319.html">CWE-319: Cleartext Transmission of Sensitive Information</a>
</p>

        
<h2>
<a name="WEAK_TRUST_MANAGER">WEAK_TRUST_MANAGER: TrustManager that accept any certificates</a>
</h2>
            
<p>Empty TrustManager implementations are often used to connect easily to a host that is not signed by a root
<a href="https://en.wikipedia.org/wiki/Certificate_authority">certificate authority</a>. As a consequence, this is vulnerable to
<a href="https://en.wikipedia.org/wiki/Man-in-the-middle_attack">Man-in-the-middle attacks</a>
since the client will trust any certificate.
</p>
<p>
A TrustManager allowing specific certificates (based on a TrustStore for example) should be built.
Detailed information for a proper implementation is available at:
<a href="https://stackoverflow.com/a/6378872/89769">[1]</a>
<a href="https://stackoverflow.com/a/5493452/89769">[2]</a>
</p>
<br/>
<p>
    <b>Vulnerable Code:</b><br/>
<pre>class TrustAllManager implements X509TrustManager {

    @Override
    public void checkClientTrusted(X509Certificate[] x509Certificates, String s) throws CertificateException {
        //Trust any client connecting (no certificate validation)
    }

    @Override
    public void checkServerTrusted(X509Certificate[] x509Certificates, String s) throws CertificateException {
        //Trust any remote server (no certificate validation)
    }

    @Override
    public X509Certificate[] getAcceptedIssuers() {
        return null;
    }
}</pre>
</p>
<br/>
<p>
    <b>Solution (TrustMangager based on a keystore):</b><br/>
<pre>KeyStore ks = //Load keystore containing the certificates trusted

SSLContext sc = SSLContext.getInstance("TLS");

TrustManagerFactory tmf = TrustManagerFactory.getInstance("SunX509");
tmf.init(ks);

sc.init(kmf.getKeyManagers(), tmf.getTrustManagers(),null);
</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="http://projects.webappsec.org/w/page/13246945/Insufficient%20Transport%20Layer%20Protection">WASC-04: Insufficient Transport Layer Protection</a><br/>
<a href="https://cwe.mitre.org/data/definitions/295.html">CWE-295: Improper Certificate Validation</a>
</p>

        
<h2>
<a name="XXE_DOCUMENT">XXE_DOCUMENT: XML parsing vulnerable to XXE (DocumentBuilder)</a>
</h2>
            
<!--XXE_GENERIC_START-->
<h3>Attack</h3>
<p>XML External Entity (XXE) attacks can occur when an XML parser supports XML entities while processing XML received
from an untrusted source.</p>
<p><b>Risk 1: Expose local file content (XXE: <u>X</u>ML E<u>x</u>ternal <u>E</u>ntity)</b></p>
<p>
<pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;
&lt;!DOCTYPE foo [
   &lt;!ENTITY xxe SYSTEM &quot;file:///etc/passwd&quot; &gt; ]&gt;
&lt;foo&gt;&amp;xxe;&lt;/foo&gt;</pre>
</p>
<b>Risk 2: Denial of service (XEE: <u>X</u>ML <u>E</u>ntity <u>E</u>xpansion)</b>
<p>
<pre>
&lt;?xml version=&quot;1.0&quot;?&gt;
&lt;!DOCTYPE lolz [
 &lt;!ENTITY lol &quot;lol&quot;&gt;
 &lt;!ELEMENT lolz (#PCDATA)&gt;
 &lt;!ENTITY lol1 &quot;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&quot;&gt;
 &lt;!ENTITY lol2 &quot;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&quot;&gt;
 &lt;!ENTITY lol3 &quot;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&quot;&gt;
[...]
 &lt;!ENTITY lol9 &quot;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&quot;&gt;
]&gt;
&lt;lolz&gt;&amp;lol9;&lt;/lolz&gt;</pre>
</p>

<h3>Solution</h3>
<p>
In order to avoid exposing dangerous feature of the XML parser, you can do the following change to the code.
</p>
<!--XXE_GENERIC_END-->

<p><b>Vulnerable Code:</b></p>
<p>
<pre>
DocumentBuilder db = DocumentBuilderFactory.newInstance().newDocumentBuilder();

Document doc = db.parse(input);</pre>
</p>
<br/>
<p>
The following snippets show two available solutions. You can set one feature or both.
</p>

<p><b>Solution using "Secure processing" mode:</b></p>
<p>
This setting will protect you against Denial of Service attack and remote file access.
<pre>
DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
DocumentBuilder db = dbf.newDocumentBuilder();

Document doc = db.parse(input);</pre>
</p>

<p><b>Solution disabling DTD:</b></p>
<p>
By disabling DTD, almost all XXE attacks will be prevented.
<pre>
DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true);
DocumentBuilder db = dbf.newDocumentBuilder();

Document doc = db.parse(input);</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<!--XXE_GENERIC_START-->
<a href="https://cwe.mitre.org/data/definitions/611.html">CWE-611: Improper Restriction of XML External Entity Reference ('XXE')</a><br/>
<a href="https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=61702260">CERT: IDS10-J. Prevent XML external entity attacks</a><br/>
<a href="https://www.owasp.org/index.php/XML_External_Entity_%28XXE%29_Processing">OWASP.org: XML External Entity (XXE) Processing</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_Entity_Expansion">WS-Attacks.org: XML Entity Expansion</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_External_Entity_DOS">WS-Attacks.org: XML External Entity DOS</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_Entity_Reference_Attack">WS-Attacks.org: XML Entity Reference Attack</a><br/>
<a href="https://blog.h3xstream.com/2014/06/identifx-xml-external-entity.html">Identifx XML External Entity vulnerability (XXE)</a><br/>
<!--XXE_GENERIC_END-->
<a href="http://xerces.apache.org/xerces2-j/features.html">Xerces2 complete features list</a>
</p>

        
<h2>
<a name="XXE_XMLSTREAMREADER">XXE_XMLSTREAMREADER: XML parsing vulnerable to XXE (XMLStreamReader)</a>
</h2>
            
<!--XXE_GENERIC_START-->
<h3>Attack</h3>
<p>XML External Entity (XXE) attacks can occur when an XML parser supports XML entities while processing XML received
from an untrusted source.</p>
<p><b>Risk 1: Expose local file content (XXE: <u>X</u>ML E<u>x</u>ternal <u>E</u>ntity)</b></p>
<p>
<pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;
&lt;!DOCTYPE foo [
   &lt;!ENTITY xxe SYSTEM &quot;file:///etc/passwd&quot; &gt; ]&gt;
&lt;foo&gt;&amp;xxe;&lt;/foo&gt;</pre>
</p>
<b>Risk 2: Denial of service (XEE: <u>X</u>ML <u>E</u>ntity <u>E</u>xpansion)</b>
<p>
<pre>
&lt;?xml version=&quot;1.0&quot;?&gt;
&lt;!DOCTYPE lolz [
 &lt;!ENTITY lol &quot;lol&quot;&gt;
 &lt;!ELEMENT lolz (#PCDATA)&gt;
 &lt;!ENTITY lol1 &quot;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&quot;&gt;
 &lt;!ENTITY lol2 &quot;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&quot;&gt;
 &lt;!ENTITY lol3 &quot;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&quot;&gt;
[...]
 &lt;!ENTITY lol9 &quot;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&quot;&gt;
]&gt;
&lt;lolz&gt;&amp;lol9;&lt;/lolz&gt;</pre>
</p>

<h3>Solution</h3>
<p>
In order to avoid exposing dangerous feature of the XML parser, you can do the following change to the code.
</p>
<!--XXE_GENERIC_END-->

<p><b>Vulnerable Code:</b></p>
<p>
<pre>public void parseXML(InputStream input) throws XMLStreamException {

    XMLInputFactory factory = XMLInputFactory.newFactory();
    XMLStreamReader reader = factory.createXMLStreamReader(input);
    [...]
}</pre>
</p>
<br/>
<p>
The following snippets show two available solutions. You can set one property or both.
</p>

<p><b>Solution disabling External Entities:</b></p>
<p>
<pre>public void parseXML(InputStream input) throws XMLStreamException {

    XMLInputFactory factory = XMLInputFactory.newFactory();
    factory.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);
    XMLStreamReader reader = factory.createXMLStreamReader(input);
    [...]
}</pre>
</p>

<p><b>Solution disabling DTD:</b></p>
<p>
<pre>public void parseXML(InputStream input) throws XMLStreamException {

    XMLInputFactory factory = XMLInputFactory.newFactory();
    factory.setProperty(XMLInputFactory.SUPPORT_DTD, false);
    XMLStreamReader reader = factory.createXMLStreamReader(input);
    [...]
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<!--XXE_GENERIC_START-->
<a href="https://cwe.mitre.org/data/definitions/611.html">CWE-611: Improper Restriction of XML External Entity Reference ('XXE')</a><br/>
<a href="https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=61702260">CERT: IDS10-J. Prevent XML external entity attacks</a><br/>
<a href="https://www.owasp.org/index.php/XML_External_Entity_%28XXE%29_Processing">OWASP.org: XML External Entity (XXE) Processing</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_Entity_Expansion">WS-Attacks.org: XML Entity Expansion</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_External_Entity_DOS">WS-Attacks.org: XML External Entity DOS</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_Entity_Reference_Attack">WS-Attacks.org: XML Entity Reference Attack</a><br/>
<a href="https://blog.h3xstream.com/2014/06/identifx-xml-external-entity.html">Identifx XML External Entity vulnerability (XXE)</a><br/>
<!--XXE_GENERIC_END-->
<a href="https://openjdk.java.net/jeps/185">JEP 185: Restrict Fetching of External XML Resources</a>
</p>

        
<h2>
<a name="XXE_DTD_TRANSFORM_FACTORY">XXE_DTD_TRANSFORM_FACTORY: XML parsing vulnerable to XXE (TransformerFactory)</a>
</h2>
            
<!--XXE_GENERIC_START-->
<h3>Attack</h3>
<p>XML External Entity (XXE) attacks can occur when an XML parser supports XML entities while processing XML received
from an untrusted source.</p>
<p><b>Risk 1: Expose local file content (XXE: <u>X</u>ML E<u>x</u>ternal <u>E</u>ntity)</b></p>
<p>
<pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;
&lt;!DOCTYPE foo [
   &lt;!ENTITY xxe SYSTEM &quot;file:///etc/passwd&quot; &gt; ]&gt;
&lt;foo&gt;&amp;xxe;&lt;/foo&gt;</pre>
</p>
<b>Risk 2: Denial of service (XEE: <u>X</u>ML <u>E</u>ntity <u>E</u>xpansion)</b>
<p>
<pre>
&lt;?xml version=&quot;1.0&quot;?&gt;
&lt;!DOCTYPE lolz [
 &lt;!ENTITY lol &quot;lol&quot;&gt;
 &lt;!ELEMENT lolz (#PCDATA)&gt;
 &lt;!ENTITY lol1 &quot;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&quot;&gt;
 &lt;!ENTITY lol2 &quot;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&quot;&gt;
 &lt;!ENTITY lol3 &quot;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&quot;&gt;
[...]
 &lt;!ENTITY lol9 &quot;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&quot;&gt;
]&gt;
&lt;lolz&gt;&amp;lol9;&lt;/lolz&gt;</pre>
</p>

<h3>Solution</h3>
<p>
In order to avoid exposing dangerous feature of the XML parser, you can do the following change to the code.
</p>
<!--XXE_GENERIC_END-->

<p><b>Vulnerable Code:</b></p>
<p>
<pre>
Transformer transformer = TransformerFactory.newInstance().newTransformer();
transformer.transform(input, result);</pre>
</p>
<br/>
<p>
The following snippets show two available solutions. You can set one feature or both.
</p>

<p><b>Solution using "Secure processing" mode:</b></p>
<p>
This setting will protect you against remote file access but not denial of service.
<pre>
TransformerFactory factory = TransformerFactory.newInstance();
factory.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "all");
factory.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "all");

Transformer transformer = factory.newTransformer();
transformer.setOutputProperty(OutputKeys.INDENT, "yes");

transformer.transform(input, result);</pre>
</p>

<p><b>Solution disabling DTD:</b></p>
<p>
This setting will protect you against remote file access but not denial of service.
<pre>
TransformerFactory factory = TransformerFactory.newInstance();
factory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);

Transformer transformer = factory.newTransformer();
transformer.setOutputProperty(OutputKeys.INDENT, "yes");

transformer.transform(input, result);</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<!--XXE_GENERIC_START-->
<a href="https://cwe.mitre.org/data/definitions/611.html">CWE-611: Improper Restriction of XML External Entity Reference ('XXE')</a><br/>
<a href="https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=61702260">CERT: IDS10-J. Prevent XML external entity attacks</a><br/>
<a href="https://www.owasp.org/index.php/XML_External_Entity_%28XXE%29_Processing">OWASP.org: XML External Entity (XXE) Processing</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_Entity_Expansion">WS-Attacks.org: XML Entity Expansion</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_External_Entity_DOS">WS-Attacks.org: XML External Entity DOS</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_Entity_Reference_Attack">WS-Attacks.org: XML Entity Reference Attack</a><br/>
<a href="https://blog.h3xstream.com/2014/06/identifx-xml-external-entity.html">Identifx XML External Entity vulnerability (XXE)</a><br/>
<!--XXE_GENERIC_END-->
</p>

        
<h2>
<a name="XXE_XSLT_TRANSFORM_FACTORY">XXE_XSLT_TRANSFORM_FACTORY: XSLT parsing vulnerable to XXE (TransformerFactory)</a>
</h2>
            
<!--XXE_GENERIC_START-->
<h3>Attack</h3>
<p>XSLT External Entity (XXE) attacks can occur when an XSLT parser supports external entities while processing XSLT received
from an untrusted source.</p>
<p><b>Risk: Expose local file content (XXE: <u>X</u>ML E<u>x</u>ternal <u>E</u>ntity)</b></p>
<p>
<pre>
&lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;&gt;
   &lt;xsl:template match=&quot;/&quot;&gt;
       &lt;xsl:value-of select=&quot;document(&apos;/etc/passwd&apos;)&quot;&gt;
   &lt;/xsl:value-of&gt;&lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;</pre>
</p>

<h3>Solution</h3>
<p>
In order to avoid exposing dangerous feature of the XML parser, you can do the following change to the code.
</p>
<!--XXE_GENERIC_END-->

<p><b>Vulnerable Code:</b></p>
<p>
<pre>
Transformer transformer = TransformerFactory.newInstance().newTransformer();
transformer.transform(input, result);</pre>
</p>
<br/>
<p>
The following snippets show two available solutions. You can set one feature or both.
</p>
<p><b>Solution using "Secure processing" mode:</b></p>
<p>
This setting will protect you against remote file access but not denial of service.
<pre>
TransformerFactory factory = TransformerFactory.newInstance();
factory.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "all");
factory.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "all");

Transformer transformer = factory.newTransformer();
transformer.setOutputProperty(OutputKeys.INDENT, "yes");

transformer.transform(input, result);</pre>
</p>

<p><b>Solution disabling DTD:</b></p>
<p>
This setting will protect you against remote file access but not denial of service.
<pre>
TransformerFactory factory = TransformerFactory.newInstance();
factory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);

Transformer transformer = factory.newTransformer();
transformer.setOutputProperty(OutputKeys.INDENT, "yes");

transformer.transform(input, result);</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<!--XXE_GENERIC_START-->
<a href="https://cwe.mitre.org/data/definitions/611.html">CWE-611: Improper Restriction of XML External Entity Reference ('XXE')</a><br/>
<a href="https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=61702260">CERT: IDS10-J. Prevent XML external entity attacks</a><br/>
<a href="https://www.owasp.org/index.php/XML_External_Entity_%28XXE%29_Processing">OWASP.org: XML External Entity (XXE) Processing</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_Entity_Expansion">WS-Attacks.org: XML Entity Expansion</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_External_Entity_DOS">WS-Attacks.org: XML External Entity DOS</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_Entity_Reference_Attack">WS-Attacks.org: XML Entity Reference Attack</a><br/>
<a href="https://blog.h3xstream.com/2014/06/identifx-xml-external-entity.html">Identifx XML External Entity vulnerability (XXE)</a><br/>
<!--XXE_GENERIC_END-->
</p>

        
<h2>
<a name="SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE">SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE: Nonconstant string passed to execute or addBatch method on an SQL statement</a>
</h2>

  <p>The method invokes the execute or addBatch method on an SQL statement with a String that seems
to be dynamically generated. Consider using
a prepared statement instead. It is more efficient and less vulnerable to
SQL injection attacks.
</p>

    </body>
</html>
