<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>SpotBugs Report</title>
<style type="text/css">
		.tablerow0 {
			background: #EEEEEE;
		}

		.tablerow1 {
			background: white;
		}

		.detailrow0 {
			background: #EEEEEE;
		}

		.detailrow1 {
			background: white;
		}

		.tableheader {
			background: #b9b9fe;
			font-size: larger;
		}

		.tablerow0:hover, .tablerow1:hover {
			background: #aaffaa;
		}

		.priority-1 {
		    color: red;
		    font-weight: bold;
		}
		.priority-2 {
		    color: orange;
		    font-weight: bold;
		}
		.priority-3 {
		    color: green;
		    font-weight: bold;
		}
		.priority-4 {
		    color: blue;
		    font-weight: bold;
		}
		</style>
<script type="text/javascript">
			function toggleRow(elid) {
				if (document.getElementById) {
					element = document.getElementById(elid);
					if (element) {
						if (element.style.display == 'none') {
							element.style.display = 'block';
							//window.status = 'Toggle on!';
						} else {
							element.style.display = 'none';
							//window.status = 'Toggle off!';
						}
					}
				}
			}
		</script>
</head>
<body>
<h1>
<a href="https://spotbugs.github.io/">SpotBugs</a> Report</h1>
<h2>Project Information</h2>
<p>Project: 
		</p>
<p>SpotBugs version: 3.1.12</p>
<p>Code analyzed:</p>
<ul>
<li>/home/x/CryptoAPIDetect/dataset/group/pulsar.git/javassist-3.25.0-GA.jar</li>
</ul>
<p>
<br/>
<br/>
</p>
<h2>Metrics</h2>
<p>27708 lines of code analyzed,
	in 425 classes, 
	in 17 packages.</p>
<table width="500" cellpadding="5" cellspacing="2">
<tr class="tableheader">
<th align="left">Metric</th>
<th align="right">Total</th>
<th align="right">Density*</th>
</tr>
<tr class="tablerow0">
<td>High Priority Warnings</td>
<td align="right">5</td>
<td align="right">0.18</td>
</tr>
<tr class="tablerow1">
<td>Medium Priority Warnings</td>
<td align="right">19</td>
<td align="right">0.69</td>
</tr>
<tr class="$totalClass">
<td>
<b>Total Warnings</b>
</td>
<td align="right">
<b>24</b>
</td>
<td align="right">
<b>0.87</b>
</td>
</tr>
</table>
<p>
<i>(* Defects per Thousand lines of non-commenting source statements)</i>
</p>
<p>
<br/>
<br/>
</p>
<h2>Contents</h2>
<ul>
<li>
<a href="#Warnings_SECURITY">Security Warnings</a>
</li>
<li>
<a href="#Details">Details</a>
</li>
</ul>
<h1>Summary</h1>
<table width="500" cellpadding="5" cellspacing="2">
<tr class="tableheader">
<th align="left">Warning Type</th>
<th align="right">Number</th>
</tr>
<tr class="tablerow0">
<td>
<a href="#Warnings_SECURITY">Security Warnings</a>
</td>
<td align="right">24</td>
</tr>
<tr class="tablerow1">
<td>
<b>Total</b>
</td>
<td align="right">
<b>24</b>
</td>
</tr>
</table>
<h1>Warnings</h1>
<p>Click on a warning row to see full context information.</p>
<h2>
<a name="Warnings_SECURITY">Security Warnings</a>
</h2>
<table class="warningtable" width="100%" cellspacing="0">
<tr class="tableheader">
<th align="left">Code</th>
<th align="left">Warning</th>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67365');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67365" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class javassist.util.HotSwapper$1<br/>In method javassist.util.HotSwapper$1.errorMsg(Throwable)<br/>At HotSwapper.java:[line 223]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67815');">
<td>
<span class="priority-2">SECDESGAD</span>
</td>
<td>This class could make application using serialization vulnerable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67815" style="display: none;">
<a href="#DESERIALIZATION_GADGET">Bug type DESERIALIZATION_GADGET (click for details)</a>
<br/>In class javassist.util.proxy.SerializedProxy<br/>At SerializedProxy.java:[lines 42-107]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66765');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in javassist.tools.rmi.AppletServer.readParameters(ObjectInputStream)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66765" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class javassist.tools.rmi.AppletServer<br/>In method javassist.tools.rmi.AppletServer.readParameters(ObjectInputStream)<br/>At AppletServer.java:[line 206]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66819');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in javassist.tools.rmi.ObjectImporter.call(int, int, Object[])</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66819" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class javassist.tools.rmi.ObjectImporter<br/>In method javassist.tools.rmi.ObjectImporter.call(int, int, Object[])<br/>At ObjectImporter.java:[line 254]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67707');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in javassist.util.proxy.ProxyObjectInputStream.readClassDescriptor()</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67707" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class javassist.util.proxy.ProxyObjectInputStream<br/>In method javassist.util.proxy.ProxyObjectInputStream.readClassDescriptor()<br/>At ProxyObjectInputStream.java:[line 70]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67761');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in javassist.util.proxy.ProxyObjectInputStream.readClassDescriptor()</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67761" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class javassist.util.proxy.ProxyObjectInputStream<br/>In method javassist.util.proxy.ProxyObjectInputStream.readClassDescriptor()<br/>At ProxyObjectInputStream.java:[line 75]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65551');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65551" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class javassist.CtClass<br/>In method javassist.CtClass.makeFileOutput(String)<br/>At CtClass.java:[line 1563]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source javassist/CtClass.qualifiedName<br/>Unknown source javassist/CtClass.getName()Ljava/lang/String;<br/>Unknown source javassist/CtClass.makeFileOutput(Ljava/lang/String;)Ljava/io/DataOutputStream; parameter 0<br/>At CtClass.java:[line 355]<br/>At CtClass.java:[line 1531]<br/>At CtClass.java:[line 1546]<br/>At CtClass.java:[line 1556]<br/>At CtClass.java:[line 1557]<br/>At CtClass.java:[line 1558]<br/>At CtClass.java:[line 1561]<br/>At CtClass.java:[line 1578]<br/>At CtClass.java:[line 1593]<br/>At CtClassType.java:[line 1607]<br/>At Webserver.java:[line 358]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65819');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65819" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class javassist.DirClassPath<br/>In method javassist.DirClassPath.find(String)<br/>At ClassPoolTail.java:[line 69]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source javassist/DirClassPath.directory<br/>Unknown source javassist/DirClassPath.find(Ljava/lang/String;)Ljava/net/URL; parameter 0<br/>Method usage not detected<br/>At ClassPoolTail.java:[line 67]<br/>At ClassPoolTail.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65918');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65918" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class javassist.DirClassPath<br/>In method javassist.DirClassPath.openClassfile(String)<br/>At ClassPoolTail.java:[line 57]<br/>Sink method java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source javassist/DirClassPath.directory<br/>Unknown source javassist/DirClassPath.openClassfile(Ljava/lang/String;)Ljava/io/InputStream; parameter 0<br/>Method usage not detected<br/>At ClassPoolTail.java:[line 55]<br/>At ClassPoolTail.java:[line 56]<br/>At ClassPoolTail.java:[line 57]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66027');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66027" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class javassist.JarClassPath<br/>In method new javassist.JarClassPath(String)<br/>At ClassPoolTail.java:[line 142]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source javassist/JarClassPath.&lt;init&gt;(Ljava/lang/String;)V parameter 0<br/>At ClassPool.java:[line 956]<br/>At ClassPool.java:[line 974]<br/>At ClassPool.java:[line 1004]<br/>At ClassPool.java:[line 1008]<br/>At ClassPoolTail.java:[line 256]<br/>At ClassPoolTail.java:[line 262]<br/>At ClassPoolTail.java:[line 270]<br/>At ClassPoolTail.java:[line 101]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66320');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66320" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class javassist.JarDirClassPath<br/>In method new javassist.JarDirClassPath(String)<br/>At ClassPoolTail.java:[line 90]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source javassist/JarDirClassPath.&lt;init&gt;(Ljava/lang/String;)V parameter 0<br/>Method usage not detected<br/>At ClassPool.java:[line 956]<br/>At ClassPool.java:[line 974]<br/>At ClassPool.java:[line 1004]<br/>At ClassPool.java:[line 1008]<br/>At ClassPoolTail.java:[line 256]<br/>At ClassPoolTail.java:[line 262]<br/>At ClassPoolTail.java:[line 276]<br/>At ClassPoolTail.java:[line 277]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66696');">
<td>
<span class="priority-1">SECPTI</span>
</td>
<td>This API (java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66696" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class javassist.tools.Dump<br/>In method javassist.tools.Dump.main(String[])<br/>At Dump.java:[line 51]<br/>Sink method java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Tainted source javassist/tools/Dump.main([Ljava/lang/String;)V parameter 0</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67113');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67113" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class javassist.tools.web.Webserver<br/>In method javassist.tools.web.Webserver.doReply(InputStream, OutputStream, String)<br/>At Webserver.java:[line 285]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source javassist/tools/web/Webserver.doReply(Ljava/io/InputStream;Ljava/io/OutputStream;Ljava/lang/String;)V parameter 0<br/>Unknown source javassist/tools/web/Webserver.htmlfileBase<br/>At AppletServer.java:[line 154]<br/>At Webserver.java:[line 212]<br/>At Webserver.java:[line 258]<br/>At Webserver.java:[line 280]<br/>At Webserver.java:[line 283]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67291');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67291" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class javassist.util.HotSwapAgent<br/>In method javassist.util.HotSwapAgent.createAgentJarFile(String)<br/>At HotSwapAgent.java:[line 183]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source javassist/util/HotSwapAgent.createAgentJarFile(Ljava/lang/String;)Ljava/io/File; parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67419');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67419" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class javassist.util.proxy.FactoryHelper<br/>In method javassist.util.proxy.FactoryHelper.writeFile0(ClassFile, String)<br/>At FactoryHelper.java:[line 215]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source javassist/util/proxy/FactoryHelper.writeFile0(Ljavassist/bytecode/ClassFile;Ljava/lang/String;)V parameter 0<br/>Unknown source javassist/bytecode/ClassFile.thisclassname<br/>Unknown source javassist/bytecode/ClassFile.getName()Ljava/lang/String;<br/>At ClassFile.java:[line 382]<br/>At FactoryHelper.java:[line 199]<br/>At FactoryHelper.java:[line 208]<br/>At FactoryHelper.java:[line 209]<br/>At FactoryHelper.java:[line 210]<br/>At FactoryHelper.java:[line 213]<br/>At ProxyFactory.java:[line 605]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65740');">
<td>
<span class="priority-2">SECPTO</span>
</td>
<td>This API (java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V) writes to a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65740" style="display: none;">
<a href="#PATH_TRAVERSAL_OUT">Bug type PATH_TRAVERSAL_OUT (click for details)</a>
<br/>In class javassist.CtClass$DelayedFileOutputStream<br/>In method javassist.CtClass$DelayedFileOutputStream.init()<br/>At CtClass.java:[line 1613]<br/>Sink method java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source javassist/CtClass$DelayedFileOutputStream.filename<br/>At CtClass.java:[line 1613]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67568');">
<td>
<span class="priority-2">SECPTO</span>
</td>
<td>This API (java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V) writes to a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67568" style="display: none;">
<a href="#PATH_TRAVERSAL_OUT">Bug type PATH_TRAVERSAL_OUT (click for details)</a>
<br/>In class javassist.util.proxy.FactoryHelper<br/>In method javassist.util.proxy.FactoryHelper.writeFile0(ClassFile, String)<br/>At FactoryHelper.java:[line 218]<br/>Sink method java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source javassist/util/proxy/FactoryHelper.writeFile0(Ljavassist/bytecode/ClassFile;Ljava/lang/String;)V parameter 0<br/>Unknown source javassist/bytecode/ClassFile.thisclassname<br/>Unknown source javassist/bytecode/ClassFile.getName()Ljava/lang/String;<br/>At ClassFile.java:[line 382]<br/>At FactoryHelper.java:[line 199]<br/>At FactoryHelper.java:[line 208]<br/>At FactoryHelper.java:[line 209]<br/>At FactoryHelper.java:[line 210]<br/>At ProxyFactory.java:[line 605]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66474');">
<td>
<span class="priority-2">SECSHA1</span>
</td>
<td>This API SHA (SHA-1) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66474" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_SHA1">Bug type WEAK_MESSAGE_DIGEST_SHA1 (click for details)</a>
<br/>In class javassist.SerialVersionUID<br/>In method javassist.SerialVersionUID.calculateDefault(CtClass)<br/>At SerialVersionUID.java:[line 192]<br/>Value SHA</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66176');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66176" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class javassist.JarClassPath<br/>In method javassist.JarClassPath.openClassfile(String)<br/>At ClassPoolTail.java:[line 162]<br/>Sink method java/net/URL.openConnection()Ljava/net/URLConnection;<br/>Sink parameter 0<br/>Unknown source javassist/JarClassPath.find(Ljava/lang/String;)Ljava/net/URL; parameter 0<br/>Unknown source javassist/JarClassPath.openClassfile(Ljava/lang/String;)Ljava/io/InputStream; parameter 0<br/>Unknown source javassist/JarClassPath.jarfileURL<br/>Unknown source java/net/URL.&lt;init&gt;(Ljava/lang/String;)V<br/>Unknown source javassist/JarClassPath.find(Ljava/lang/String;)Ljava/net/URL;<br/>Method usage not detected<br/>At ClassPoolTail.java:[line 159]<br/>At ClassPoolTail.java:[line 175]<br/>At ClassPoolTail.java:[line 176]<br/>At ClassPoolTail.java:[line 178]<br/>At ClassPoolTail.java:[line 109]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66989');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66989" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class javassist.tools.web.Viewer<br/>In method javassist.tools.web.Viewer.fetchClass(String)<br/>At Viewer.java:[line 170]<br/>Sink method java/net/URL.openConnection()Ljava/net/URLConnection;<br/>Sink parameter 0<br/>Unknown source javassist/tools/web/Viewer.fetchClass(Ljava/lang/String;)[B parameter 0<br/>Unknown source javassist/tools/web/Viewer.server<br/>Unknown source java/net/URL.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;)V<br/>Method usage not detected<br/>At Viewer.java:[line 121]<br/>At Viewer.java:[line 151]<br/>At Viewer.java:[line 168]<br/>At Viewer.java:[line 169]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66532');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66532" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class javassist.URLClassPath<br/>In method javassist.URLClassPath.fetchClass0(String, int, String)<br/>At URLClassPath.java:[line 175]<br/>Sink method java/net/URL.openConnection()Ljava/net/URLConnection;<br/>Sink parameter 0<br/>Unknown source java/net/URL.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;)V<br/>Unknown source javassist/URLClassPath.fetchClass0(Ljava/lang/String;ILjava/lang/String;)Ljava/net/URLConnection; parameter 2<br/>Unknown source javassist/URLClassPath.fetchClass0(Ljava/lang/String;ILjava/lang/String;)Ljava/net/URLConnection; parameter 0<br/>Method usage not detected<br/>At URLClassPath.java:[line 84]<br/>At URLClassPath.java:[line 94]<br/>At URLClassPath.java:[line 95]<br/>At URLClassPath.java:[line 96]<br/>At URLClassPath.java:[line 109]<br/>At URLClassPath.java:[line 135]<br/>At URLClassPath.java:[line 136]<br/>At URLClassPath.java:[line 168]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66873');">
<td>
<span class="priority-2">SECUS</span>
</td>
<td>Unencrypted socket to javassist.tools.rmi.ObjectImporter (instead of SSLSocket)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66873" style="display: none;">
<a href="#UNENCRYPTED_SOCKET">Bug type UNENCRYPTED_SOCKET (click for details)</a>
<br/>In class javassist.tools.rmi.ObjectImporter<br/>In method javassist.tools.rmi.ObjectImporter.call(int, int, Object[])<br/>At ObjectImporter.java:[line 234]<br/>Value remote host</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66931');">
<td>
<span class="priority-2">SECUS</span>
</td>
<td>Unencrypted socket to javassist.tools.rmi.ObjectImporter (instead of SSLSocket)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66931" style="display: none;">
<a href="#UNENCRYPTED_SOCKET">Bug type UNENCRYPTED_SOCKET (click for details)</a>
<br/>In class javassist.tools.rmi.ObjectImporter<br/>In method javassist.tools.rmi.ObjectImporter.lookupObject(String)<br/>At ObjectImporter.java:[line 165]<br/>Value remote host</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67237');">
<td>
<span class="priority-2">SECUSS</span>
</td>
<td>Unencrypted server socket (instead of SSLServerSocket)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67237" style="display: none;">
<a href="#UNENCRYPTED_SERVER_SOCKET">Bug type UNENCRYPTED_SERVER_SOCKET (click for details)</a>
<br/>In class javassist.tools.web.Webserver<br/>In method new javassist.tools.web.Webserver(int)<br/>At Webserver.java:[line 116]</p>
</td>
</tr>
</table>
<h1>
<a name="Details">Details</a>
</h1>
<h2>
<a name="INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE: Information Exposure Through An Error Message</a>
</h2>
            
<p>
The sensitive information may be valuable information on its own (such as a password), or it may be useful for launching other, more deadly attacks. If an attack fails, an attacker may use error information provided by the server to launch another more focused attack. For example, an attempt to exploit a path traversal weakness (CWE-22) might yield the full pathname of the installed application. In turn, this could be used to select the proper number of ".." sequences to navigate to the targeted file. An attack using SQL injection (CWE-89) might not initially succeed, but an error message could reveal the malformed query, which would expose query logic and possibly even passwords or other sensitive information used within the query.
</p>
<p>
    <b>Vulnerable Code:</b><br/>
<pre>try {
  out = httpResponse.getOutputStream()
} catch (Exception e) {
  e.printStackTrace(out);
}</pre>
</p>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/209.html">CWE-209: Information Exposure Through an Error Message</a><br/>
<a href="https://cwe.mitre.org/data/definitions/211.html">CWE-211: Information Exposure Through Externally-Generated Error Message</a><br/>
</p>
            
        
<h2>
<a name="DESERIALIZATION_GADGET">DESERIALIZATION_GADGET: This class could be used as deserialization gadget</a>
</h2>
            
<p>
Deserialization gadget are class that could be used by an attacker to take advantage of a remote API using Native Serialization.
This class is either adding custom behavior to deserialization with the <code>readObject</code> method (Serializable) or can be called
 from a serialized object (InvocationHandler).
</p>
<p>
This detector is intended to be used mostly by researcher. The real issue is using deserialization for remote operation.
Removing gadget is a hardening practice to reduce the risk of being exploited.
</p>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/502.html">CWE-502: Deserialization of Untrusted Data</a><br/>
<a href="https://www.owasp.org/index.php/Deserialization_of_untrusted_data">Deserialization of untrusted data</a><br/>
<a href="https://www.oracle.com/technetwork/java/seccodeguide-139067.html#8">Serialization and Deserialization </a><br/>
<a href="https://github.com/frohoff/ysoserial">A tool for generating payloads that exploit unsafe Java object deserialization</a><br/>
[1] <a href="https://gist.github.com/coekie/a27cc406fc9f3dc7a70d">Example of Denial of Service using the class <code>java.util.HashSet</code></a><br/>
[2] <a href="https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2015-2590">OpenJDK: Deserialization issue in ObjectInputStream.readSerialData() (CVE-2015-2590)</a><br/>
[3] <a href="https://www.rapid7.com/db/modules/exploit/multi/browser/java_calendar_deserialize">Rapid7: Sun Java Calendar Deserialization Privilege Escalation (CVE-2008-5353)</a>
</p>

        
<h2>
<a name="OBJECT_DESERIALIZATION">OBJECT_DESERIALIZATION: Object deserialization is used in {1}</a>
</h2>
            
<p>
    Object deserialization of untrusted data can lead to remote code execution, if there is a class in classpath that allows
    the trigger of malicious operation.
</p>
<p>
    Libraries developers tend to fix class that provided potential malicious trigger. There are still classes that are
    known to trigger Denial of Service<sup>[1]</sup>.
</p>
<p>
    Deserialization is a sensible operation that has a great history of vulnerabilities. The web application might
    become vulnerable as soon as a new vulnerability is found in the Java Virtual Machine<sup>[2] [3]</sup>.
</p>

<p>
<b>Code at risk:</b><br/>
<pre>
public UserData deserializeObject(InputStream receivedFile) throws IOException, ClassNotFoundException {

    try (ObjectInputStream in = new ObjectInputStream(receivedFile)) {
        return (UserData) in.readObject();
    }
}
</pre>
</p>

<p>
<b>Solutions:</b><br/>
<p>
Avoid deserializing object provided by remote users.
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/502.html">CWE-502: Deserialization of Untrusted Data</a><br/>
<a href="https://www.owasp.org/index.php/Deserialization_of_untrusted_data">Deserialization of untrusted data</a><br/>
<a href="https://www.oracle.com/technetwork/java/seccodeguide-139067.html#8">Serialization and Deserialization </a><br/>
<a href="https://github.com/frohoff/ysoserial">A tool for generating payloads that exploit unsafe Java object deserialization</a><br/>
[1] <a href="https://gist.github.com/coekie/a27cc406fc9f3dc7a70d">Example of Denial of Service using the class <code>java.util.HashSet</code></a><br/>
[2] <a href="https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2015-2590">OpenJDK: Deserialization issue in ObjectInputStream.readSerialData() (CVE-2015-2590)</a><br/>
[3] <a href="https://www.rapid7.com/db/modules/exploit/multi/browser/java_calendar_deserialize">Rapid7: Sun Java Calendar Deserialization Privilege Escalation (CVE-2008-5353)</a>
</p>

        
<h2>
<a name="PATH_TRAVERSAL_IN">PATH_TRAVERSAL_IN: Potential Path Traversal (file read)</a>
</h2>
            
<p>A file is opened to read its content. The filename comes from an <b>input</b> parameter.
If an unfiltered parameter is passed to this file API, files from an arbitrary filesystem location could be read.</p>
<p>This rule identifies <b>potential</b> path traversal vulnerabilities. In many cases, the constructed file path cannot be controlled
by the user. If that is the case, the reported instance is a false positive.</p>
<br/>

<p>
    <b>Vulnerable Code:</b><br/>
<pre>@GET
@Path("/images/{image}")
@Produces("images/*")
public Response getImage(@javax.ws.rs.PathParam("image") String image) {
    File file = new File("resources/images/", image); //Weak point

    if (!file.exists()) {
        return Response.status(Status.NOT_FOUND).build();
    }

    return Response.ok().entity(new FileInputStream(file)).build();
}</pre>
</p>
<br/>

<p>
    <b>Solution:</b><br/>
<pre>import org.apache.commons.io.FilenameUtils;

@GET
@Path("/images/{image}")
@Produces("images/*")
public Response getImage(@javax.ws.rs.PathParam("image") String image) {
    File file = new File("resources/images/", FilenameUtils.getName(image)); //Fix

    if (!file.exists()) {
        return Response.status(Status.NOT_FOUND).build();
    }

    return Response.ok().entity(new FileInputStream(file)).build();
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="http://projects.webappsec.org/w/page/13246952/Path%20Traversal">WASC: Path Traversal</a><br/>
<a href="https://www.owasp.org/index.php/Path_Traversal">OWASP: Path Traversal</a><br/>
<a href="https://capec.mitre.org/data/definitions/126.html">CAPEC-126: Path Traversal</a><br/>
<a href="https://cwe.mitre.org/data/definitions/22.html">CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')</a>
</p>

        
<h2>
<a name="PATH_TRAVERSAL_OUT">PATH_TRAVERSAL_OUT: Potential Path Traversal (file write)</a>
</h2>
            
<p>A file is opened to write to its contents. The filename comes from an <b>input</b> parameter.
If an unfiltered parameter is passed to this file API, files at an arbitrary filesystem location could be modified.</p>
<p>This rule identifies <b>potential</b> path traversal vulnerabilities. In many cases, the constructed file path cannot be controlled
by the user. If that is the case, the reported instance is a false positive.</p>
<br/>
<p>
<b>References</b><br/>
<a href="http://projects.webappsec.org/w/page/13246952/Path%20Traversal">WASC-33: Path Traversal</a><br/>
<a href="https://www.owasp.org/index.php/Path_Traversal">OWASP: Path Traversal</a><br/>
<a href="https://capec.mitre.org/data/definitions/126.html">CAPEC-126: Path Traversal</a><br/>
<a href="https://cwe.mitre.org/data/definitions/22.html">CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')</a>
</p>

        
<h2>
<a name="WEAK_MESSAGE_DIGEST_SHA1">WEAK_MESSAGE_DIGEST_SHA1: SHA-1 is a weak hash function</a>
</h2>
            
<p>The algorithms SHA-1 is not a recommended algorithm for hash password, for signature verification and other
uses. <b>PBKDF2</b> should be used to hash password for example.</p>

<blockquote>
    "<b>SHA-1 for digital signature generation:</b><br/>
    SHA-1 may only be used for digital signature generation where specifically allowed by NIST protocol-specific guidance.
    For all other applications, <u>SHA-1 shall not be used for digital signature generation</u>.<br/>
    <b>SHA-1 for digital signature verification:</b><br/>
    For digital signature verification, <u>SHA-1 is allowed for legacy-use</u>.<br/>
    [...]<br/>
    <b>SHA-224, SHA-256, SHA-384, SHA-512, SHA-512/224, and SHA-512/256</b>:<br/>
    The use of these hash functions is acceptable for all hash function applications."<br/>
    - <a href="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-131Ar2.pdf">NIST: Transitioning the Use of Cryptographic Algorithms and Key Lengths p.15</a>
</blockquote>
<blockquote>
    "The main idea of a PBKDF is to slow dictionary or brute force attacks on the passwords by increasing the time
    needed to test each password. An attacker with a list of likely passwords can evaluate the PBKDF using the known
    iteration counter and the salt. Since an attacker has to spend a significant amount of computing time for each try,
    it becomes harder to apply the dictionary or brute force attacks."<br/>
- <a href="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-132.pdf">NIST: Recommendation for Password-Based Key Derivation  p.12</a>

</blockquote>
<br/>
<p>
    <b>Vulnerable Code:</b><br/>
    <pre>MessageDigest sha1Digest = MessageDigest.getInstance("SHA1");
    sha1Digest.update(password.getBytes());
    byte[] hashValue = sha1Digest.digest();</pre>
    <br/>
    <pre>byte[] hashValue = DigestUtils.getSha1Digest().digest(password.getBytes());</pre>
</p>
<br/>
<p>
    <b>Solution (Using bouncy castle):</b><br/>
    <pre>public static byte[] getEncryptedPassword(String password, byte[] salt) throws NoSuchAlgorithmException, InvalidKeySpecException {
    PKCS5S2ParametersGenerator gen = new PKCS5S2ParametersGenerator(new SHA256Digest());
    gen.init(password.getBytes("UTF-8"), salt.getBytes(), 4096);
    return ((KeyParameter) gen.generateDerivedParameters(256)).getKey();
}</pre>
    <br/>
    <b>Solution (Java 8 and later):</b><br/>
    <pre>public static byte[] getEncryptedPassword(String password, byte[] salt) throws NoSuchAlgorithmException, InvalidKeySpecException {
    KeySpec spec = new PBEKeySpec(password.toCharArray(), salt, 4096, 256 * 8);
    SecretKeyFactory f = SecretKeyFactory.getInstance("PBKDF2WithHmacSHA256");
    return f.generateSecret(spec).getEncoded();
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://community.qualys.com/blogs/securitylabs/2014/09/09/sha1-deprecation-what-you-need-to-know">Qualys blog: SHA1 Deprecation: What You Need to Know</a><br/>
<a href="https://googleonlinesecurity.blogspot.ca/2014/09/gradually-sunsetting-sha-1.html">Google Online Security Blog: Gradually sunsetting SHA-1</a><br/>
<a href="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-131Ar2.pdf">NIST: Transitioning the Use of Cryptographic Algorithms and Key Lengths</a><br/>
<a href="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-132.pdf">NIST: Recommendation for Password-Based Key Derivation</a><br/>
<a href="https://stackoverflow.com/q/22580853/89769">Stackoverflow: Reliable implementation of PBKDF2-HMAC-SHA256 for Java</a><br/>
<a href="https://cwe.mitre.org/data/definitions/327.html">CWE-327: Use of a Broken or Risky Cryptographic Algorithm</a>
</p>

        
<h2>
<a name="URLCONNECTION_SSRF_FD">URLCONNECTION_SSRF_FD: URLConnection Server-Side Request Forgery (SSRF) and File Disclosure</a>
</h2>
            
<p>
    Server-Side Request Forgery occur when a web server executes a request to a user supplied destination
    parameter that is not validated. Such vulnerabilities could allow an attacker to access internal services
    or to launch attacks from your web server.
</p>
<p>
    URLConnection can be used with file:// protocol or other protocols to access local filesystem and potentially other services.
<p>
    <b>Vulnerable Code:</b>
<pre>
new URL(String url).openConnection()
</pre>

<pre>
new URL(String url).openStream()
</pre>

<pre>
new URL(String url).getContent()
</pre>
</p>
<p>
    <b>Solution/Countermeasures:</b><br/>
    <ul>
        <li>Don't accept URL destinations from users</li>
        <li>Accept a destination key, and use it to look up the target destination associate with the key</li>
        <li>White list URLs (if possible)</li>
        <li>Validate that the beginning of the URL is part of a white list</li>
    </ul>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a><br/>
<a href="https://www.bishopfox.com/blog/2015/04/vulnerable-by-design-understanding-server-side-request-forgery/">Understanding Server-Side Request Forgery</a><br/>
<a href="https://cwe.mitre.org/data/definitions/73.html">CWE-73: External Control of File Name or Path</a><br/>
<a href="https://www.pwntester.com/blog/2013/11/28/abusing-jar-downloads/">Abusing jar:// downloads</a><br />
</p>
            
<h2>
<a name="UNENCRYPTED_SOCKET">UNENCRYPTED_SOCKET: Unencrypted Socket</a>
</h2>
            
<p>
The communication channel used is not encrypted. The traffic could be read by an attacker intercepting the network traffic.
</p>
<p>
<b>Vulnerable Code:</b><br/>
Plain socket (Cleartext communication):
<pre>Socket soc = new Socket("www.google.com",80);</pre>
</p>
<p>
<b>Solution:</b><br/>
SSL Socket (Secure communication):
<pre>Socket soc = SSLSocketFactory.getDefault().createSocket("www.google.com", 443);</pre>
</p>
<p>Beyond using an SSL socket, you need to make sure your use of SSLSocketFactory does all the appropriate certificate validation checks to
make sure you are not subject to man-in-the-middle attacks. Please read the OWASP Transport Layer Protection Cheat Sheet for details on how
to do this correctly.
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://www.owasp.org/index.php/Top_10_2010-A9">OWASP: Top 10 2010-A9-Insufficient Transport Layer Protection</a><br/>
<a href="https://www.owasp.org/index.php/Top_10_2013-A6-Sensitive_Data_Exposure">OWASP: Top 10 2013-A6-Sensitive Data Exposure</a><br/>
<a href="https://www.owasp.org/index.php/Transport_Layer_Protection_Cheat_Sheet">OWASP: Transport Layer Protection Cheat Sheet</a><br/>
<a href="http://projects.webappsec.org/w/page/13246945/Insufficient%20Transport%20Layer%20Protection">WASC-04: Insufficient Transport Layer Protection</a><br/>
<a href="https://cwe.mitre.org/data/definitions/319.html">CWE-319: Cleartext Transmission of Sensitive Information</a>
</p>

        
<h2>
<a name="UNENCRYPTED_SERVER_SOCKET">UNENCRYPTED_SERVER_SOCKET: Unencrypted Server Socket</a>
</h2>
            
<p>
The communication channel used is not encrypted. The traffic could be read by an attacker intercepting the network traffic.
</p>
<p>
<b>Vulnerable Code:</b><br/>
Plain server socket (Cleartext communication):
<pre>ServerSocket soc = new ServerSocket(1234);</pre>
</p>
<p>
<b>Solution:</b><br/>
SSL Server Socket (Secure communication):
<pre>ServerSocket soc = SSLServerSocketFactory.getDefault().createServerSocket(1234);</pre>
</p>
<p>Beyond using an SSL server socket, you need to make sure your use of SSLServerSocketFactory does all the appropriate certificate validation checks to
make sure you are not subject to man-in-the-middle attacks. Please read the OWASP Transport Layer Protection Cheat Sheet for details on how
to do this correctly.
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://www.owasp.org/index.php/Top_10_2010-A9">OWASP: Top 10 2010-A9-Insufficient Transport Layer Protection</a><br/>
<a href="https://www.owasp.org/index.php/Top_10_2013-A6-Sensitive_Data_Exposure">OWASP: Top 10 2013-A6-Sensitive Data Exposure</a><br/>
<a href="https://www.owasp.org/index.php/Transport_Layer_Protection_Cheat_Sheet">OWASP: Transport Layer Protection Cheat Sheet</a><br/>
<a href="http://projects.webappsec.org/w/page/13246945/Insufficient%20Transport%20Layer%20Protection">WASC-04: Insufficient Transport Layer Protection</a><br/>
<a href="https://cwe.mitre.org/data/definitions/319.html">CWE-319: Cleartext Transmission of Sensitive Information</a>
</p>

        </body>
</html>
