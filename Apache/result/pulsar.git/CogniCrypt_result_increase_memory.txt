
Current Proejct: jackson-datatype-guava-2.8.11.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 433.4 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.244 s

Current Proejct: jackson-jaxrs-json-provider-2.8.11.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 412.2 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.111 s

Current Proejct: athenz-zts-java-client-1.8.38.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 3.035 s 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 43 analysis seeds within 4 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 44
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.02

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 44
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.05

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 44
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.07

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 44
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.09

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 44
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.11

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 44
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.14

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 45
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.16

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 45
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.18

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 45
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.2

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 45
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.22

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 46
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.24

[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.io.Closeable: void close()> for class com.yahoo.athenz.zts.AWSAttestationData
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <javax.activation.DataHandler: java.io.InputStream getInputStream()> for class com.yahoo.athenz.zts.AWSAttestationData
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.util.List: int size()> for class com.yahoo.athenz.zts.AWSAttestationData
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.util.List: int size()> for class com.yahoo.athenz.zts.AWSAttestationData
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.util.List: java.lang.Object get(int)> for class com.yahoo.athenz.zts.AWSAttestationData
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.util.List: int size()> for class com.yahoo.athenz.zts.AWSAttestationData
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.util.List: int size()> for class com.yahoo.athenz.zts.AWSAttestationData
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.util.List: java.lang.Object get(int)> for class com.yahoo.athenz.zts.AWSAttestationData
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.util.List: java.lang.Object get(int)> for class com.yahoo.athenz.zts.AWSAttestationData
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.22

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 56
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.23

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 14 of 56
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.25

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 15 of 58
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.26

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 16 of 59
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.27

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 17 of 61
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.28

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 18 of 63
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.29

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 19 of 64
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.3

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 20 of 73
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.27

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 21 of 73
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.29

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 22 of 74
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.3

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 23 of 75
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.31

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 24 of 75
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.32

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 25 of 75
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 26 of 76
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.34

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 27 of 77
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.35

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 28 of 79
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.35

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 29 of 81
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.36

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 30 of 83
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.36

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 31 of 83
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.37

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 32 of 84
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.38

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 33 of 84
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.39

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 34 of 84
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.4

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 35 of 85
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.41

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 36 of 85
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.42

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 37 of 85
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.44

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 38 of 85
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.45

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 39 of 85
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.46

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 40 of 90
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.44

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 41 of 91
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.45

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 42 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.37

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 43 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.37

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 44 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.38

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 45 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.39

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 46 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.4

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 47 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.41

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 48 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.42

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 49 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.43

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 50 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.43

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 51 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.44

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 52 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.45

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 53 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.46

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 54 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.47

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 55 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.48

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 56 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.49

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 57 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 58 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 59 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.51

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 60 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.52

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 61 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.53

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 62 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.54

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 63 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.55

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 64 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.56

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 65 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.57

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 66 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.57

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 67 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.58

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 68 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.59

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 69 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.6

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 70 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.61

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 71 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.62

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 72 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.63

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 73 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.63

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 74 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.64

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 75 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.65

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 76 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.66

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 77 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 78 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.68

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 79 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.69

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 80 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.7

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 81 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.7

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 82 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.71

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 83 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.72

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 84 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.73

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 85 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.74

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 86 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.75

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 87 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.76

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 88 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.77

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 89 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.77

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 90 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.78

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 91 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.79

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 92 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.8

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 93 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.81

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 94 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.82

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 95 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.83

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 96 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.83

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 97 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.84

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 98 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.85

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 99 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.86

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 100 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.87

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 101 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.88

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 102 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.89

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 103 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.9

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 104 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.9

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 105 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.91

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 106 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.92

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 107 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.93

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 108 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.94

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 109 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.95

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 110 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.96

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 111 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.97

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 112 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.97

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 113 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.98

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 114 of 115
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.99

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r16
		Type: byte[]
		Statement: r16 = virtualinvoke r14.<java.security.MessageDigest: byte[] digest()>()
		Method: <athenz.shade.zts.org.glassfish.jersey.client.authentication.DigestAuthenticator: java.lang.String md5(java.lang.String[])>
		SHA-256: 90829e2f0f1888ba5bd45a4dbbf2ed9f630f574666c82ebb3fcae9594ba3c0b8
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r0)
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.DigestUtils: java.security.MessageDigest getDigest(java.lang.String,java.security.MessageDigest)>
		SHA-256: f69e48164586f17cecce2112ad32e31baa2778d3f1adea93a977989695a8b6db
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<javax.crypto.Mac: byte[] doFinal(byte[])>(r1)
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.HmacUtils: byte[] hmac(byte[])>
		SHA-256: fd6e2f094c2f71c62a0172d6406714fb1ce65b6a9fd6ed2982c9a4a2dbc8d216
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8644)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl: java.security.MessageDigest getMD5()>
		SHA-256: bce0840c4a9867f3628bf767a0011026e69d915f0ffda0360024907074839920
		Secure: false
	Object:
		Variable: r2
		Type: javax.crypto.Mac
		Statement: r2 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(r0)
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.HmacUtils: javax.crypto.Mac getInitializedMac(java.lang.String,byte[])>
		SHA-256: 121a39d0408e38af7cd24010b0a2fab8d7f314e62b238e0df4a62a414507db2a
		Secure: false
	Object:
		Variable: r14
		Type: java.security.MessageDigest
		Statement: r14 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6764)
		Method: <athenz.shade.zts.org.glassfish.jersey.client.authentication.DigestAuthenticator: java.lang.String md5(java.lang.String[])>
		SHA-256: db789640c23134a8a78ca499295ccd11fac588a7c09a630c80e533dfcf6d63f6
		Secure: false
	Object:
		Variable: r115
		Type: javax.net.ssl.KeyManagerFactory
		Statement: r115 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String,java.lang.String)>(r130, $r26)
		Method: <athenz.shade.zts.org.glassfish.jersey.SslConfigurator: javax.net.ssl.SSLContext createSSLContext()>
		SHA-256: 4f11d85e2da06977069010c73601bfefcc9480e864da55ac2bf3ae599f5a305
		Secure: true
	Object:
		Variable: r5
		Type: javax.crypto.Cipher
		Statement: r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8591)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl: byte[] lmHash(java.lang.String)>
		SHA-256: a0c5004e519bca1c3c281cabd5d0f307fca98feaa527339c16b3f00fe3db3b8b
		Secure: false
	Object:
		Variable: r114
		Type: javax.net.ssl.TrustManagerFactory
		Statement: r114 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.lang.String)>(r154, $r7)
		Method: <athenz.shade.zts.org.glassfish.jersey.SslConfigurator: javax.net.ssl.SSLContext createSSLContext()>
		SHA-256: 28d03c9862e4cd948727314bf72aad0b76460f8e6459e50ffae2ea482f4cee8
		Secure: true
	Object:
		Variable: r1
		Type: byte[]
		Statement: r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$HMACMD5: byte[] getOutput()>
		SHA-256: 22505513c95e6063eefdf0c997b443cb4e4a5031da10189b8a77ecfa90349a0a
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke r0.<java.security.MessageDigest: byte[] digest(byte[])>(r1)
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.DigestUtils: byte[] digest(java.security.MessageDigest,byte[])>
		SHA-256: 2d9d83c7d9357c4aee283445e6e02c8924f08b41be1b2dd0aa60211a448ac388
		Secure: false
	Object:
		Variable: r6
		Type: byte[]
		Statement: r6 = virtualinvoke r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r4)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl: byte[] lmHash(java.lang.String)>
		SHA-256: 630fb4138afd719581916fcb0ac190179d90373af7ae8db362e4a0f23f37ede
		Secure: false
	Object:
		Variable: r4
		Type: byte[]
		Statement: r4 = virtualinvoke r17.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r3)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: 51ebfe205ce0e9b1d6d5f4b5331c1e59573af5415f24889a693b2d75522d9e54
		Secure: false
	Object:
		Variable: r5
		Type: javax.crypto.Cipher
		Statement: r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8616)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl: byte[] lmResponse(byte[],byte[])>
		SHA-256: 574b9d590449f2d9ac72209da8d2ceae09399dab4d14964f9f3177551834b590
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$Handle: void advanceMessageSequence()>
		SHA-256: b4114d6952b8200fb672057ec3fd497aa1772392a87f8062974400f9874147c9
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <athenz.shade.zts.org.apache.http.impl.auth.HttpEntityDigester: void close()>
		SHA-256: e8cabc2e3d63d44e54e3148466717cda5fcc0b824361ee994a1cb07813a6e012
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r4 = virtualinvoke $r2.<javax.crypto.Mac: byte[] doFinal(byte[])>($r3)
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.HmacUtils: byte[] hmac(java.lang.String)>
		SHA-256: e3541d4098e90adc6e409e6a60c2c3287a5ce1c8d84b0357c1d5cad96d2186ef
		Secure: false
	Object:
		Variable: r3
		Type: javax.net.ssl.TrustManagerFactory
		Statement: r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r10)
		Method: <athenz.shade.zts.org.apache.http.ssl.SSLContextBuilder: athenz.shade.zts.org.apache.http.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore,athenz.shade.zts.org.apache.http.ssl.TrustStrategy)>
		SHA-256: e2938ff6fdc62519f4377a97c76c4e48e17f5debef102d651f33a61b74443a77
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.DigestUtils: byte[] digest(java.security.MessageDigest,java.io.File)>
		SHA-256: 6a74c7a23efe31554dd0f6d4a4f9c4af9b76b2cc2cf92458311947525aea785e
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: $r2 = virtualinvoke r0.<java.security.MessageDigest: byte[] digest(byte[])>(r1)
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.DigestUtils: byte[] digest(java.security.MessageDigest,byte[])>
		SHA-256: fab50454e1dbcb9174354b7fa7fbaf324cf7ba04b8fbd7948e35d093995fac7a
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke r15.<java.security.MessageDigest: byte[] digest()>()
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$Handle: void <init>(byte[],athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$Mode,boolean)>
		SHA-256: d51d9e50d339c641b61d4ba3fa80118bbe638375baf4d2fbc85e39c18550a5b2
		Secure: false
	Object:
		Variable: $r110
		Type: byte[]
		Statement: $r111 = virtualinvoke r10.<java.security.MessageDigest: byte[] digest(byte[])>($r110)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.DigestScheme: athenz.shade.zts.org.apache.http.Header createDigestHeader(athenz.shade.zts.org.apache.http.auth.Credentials,athenz.shade.zts.org.apache.http.HttpRequest)>
		SHA-256: c935514416b40b81a8c0a9fae4b17978168e98c6b1ef21c9844d3b3104353ce9
		Secure: false
	Object:
		Variable: r6
		Type: javax.net.ssl.SSLContext
		Statement: r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer8180)
		Method: <athenz.shade.zts.org.apache.http.conn.ssl.SSLContexts: javax.net.ssl.SSLContext createDefault()>
		SHA-256: f1fc36b37da1273af6c30f8285246e216ec09de2b4dc7aa42fd0f82ca17ff9ea
		Secure: false
	Object:
		Variable: r6
		Type: byte[]
		Statement: r6 = virtualinvoke r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r1)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl: byte[] lmResponse(byte[],byte[])>
		SHA-256: 709642c2bbfffb4afd1c653cc908f558e5999ff98cf098e83601388c64d2d3de
		Secure: false
	Object:
		Variable: $r37
		Type: byte[]
		Statement: $r37 = virtualinvoke r10.<java.security.MessageDigest: byte[] digest(byte[])>($r36)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.DigestScheme: athenz.shade.zts.org.apache.http.Header createDigestHeader(athenz.shade.zts.org.apache.http.auth.Credentials,athenz.shade.zts.org.apache.http.HttpRequest)>
		SHA-256: e648f888c75704bb2e8cef41b8056e31250a21b3539d5ea548b2cf8e03107076
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer8639)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl: java.security.Key createDESKey(byte[],int)>
		SHA-256: fd0c6035f850995dc04eef9717aebe2e5d047e3e1119c64dfe7a7f1ffa53097b
		Secure: false
	Object:
		Variable: r5
		Type: java.security.KeyStore
		Statement: r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r9)
		Method: <athenz.shade.zts.org.apache.http.ssl.SSLContextBuilder: athenz.shade.zts.org.apache.http.ssl.SSLContextBuilder loadKeyMaterial(java.io.File,char[],char[],athenz.shade.zts.org.apache.http.ssl.PrivateKeyStrategy)>
		SHA-256: 513ef26476cf54f06d8fd0c0bf6830fe9958034d3d24bd143d2cff5a8db93c51
		Secure: true
	Object:
		Variable: $r156
		Type: byte[]
		Statement: $r156 = virtualinvoke r10.<java.security.MessageDigest: byte[] digest(byte[])>($r155)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.DigestScheme: athenz.shade.zts.org.apache.http.Header createDigestHeader(athenz.shade.zts.org.apache.http.auth.Credentials,athenz.shade.zts.org.apache.http.HttpRequest)>
		SHA-256: 16adf8de92bf8819a09dda245c7a6d2700f29945715db3ffb9d42d6662b23e0f
		Secure: false
	Object:
		Variable: r4
		Type: javax.net.ssl.KeyManagerFactory
		Statement: r4 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r11)
		Method: <athenz.shade.zts.org.apache.http.ssl.SSLContextBuilder: athenz.shade.zts.org.apache.http.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[],athenz.shade.zts.org.apache.http.ssl.PrivateKeyStrategy)>
		SHA-256: f887b9eb5b0bea7bd8e7f2619f2a30b8b2e6358a49e2c68428106c3a0da112ae
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, r0)
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.HmacUtils: javax.crypto.Mac getInitializedMac(java.lang.String,byte[])>
		SHA-256: 394b58790fe148394c6e87c0c4093b433591b9dd9826146ceb21a032f1849200
		Secure: false
	Object:
		Variable: r3
		Type: byte[]
		Statement: r3 = virtualinvoke r10.<java.security.MessageDigest: byte[] digest()>()
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl: byte[] ntlm2SessionResponse(byte[],byte[],byte[])>
		SHA-256: c0f3e7e8a8c5d70f41fedded307610fbc6d232e6a1cd13018dddc296bf160e11
		Secure: false
	Object:
		Variable: r3
		Type: javax.net.ssl.TrustManagerFactory
		Statement: r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r6)
		Method: <athenz.shade.zts.org.apache.http.conn.ssl.SSLContextBuilder: athenz.shade.zts.org.apache.http.conn.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore,athenz.shade.zts.org.apache.http.conn.ssl.TrustStrategy)>
		SHA-256: 6b27f20073a702916ea38984a07c41336f9d5c31df3fe292ab1e805babfe473c
		Secure: false
	Object:
		Variable: r6
		Type: byte[]
		Statement: r6 = virtualinvoke r5.<java.security.MessageDigest: byte[] digest(byte[])>(r19)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$Type3Message: byte[] addGssMicAvsToTargetInfo(byte[],java.security.cert.Certificate)>
		SHA-256: 745328da6ad161cb0f54bd6a808f447fd1afb9bbfd937cb471f4f0e00666bc8
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.DigestUtils: byte[] sha384(byte[])>
		SHA-256: e74450188f985523d9855f9d90cbc6d2b99a9d05a356a38652cd742d9b74088c
		Secure: false
	Object:
		Variable: r0
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, r0)
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.HmacUtils: javax.crypto.Mac getInitializedMac(java.lang.String,byte[])>
		SHA-256: 673f432608ebebbfde686808e1976348928f13d4604f0040fce1eb16dc2523d2
		Secure: false
	Object:
		Variable: r34
		Type: byte[]
		Statement: r34 = virtualinvoke r32.<java.security.MessageDigest: byte[] digest()>()
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.Md5Crypt: java.lang.String md5Crypt(byte[],java.lang.String,java.lang.String)>
		SHA-256: 7fc927c52220e9c87c89ed43cb6a1010d2763202f829b2f00d00ee87dd45d3ce
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: $r5 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer6726)
		Method: <athenz.shade.zts.org.glassfish.jersey.client.authentication.DigestAuthenticator: void <init>(athenz.shade.zts.org.glassfish.jersey.client.authentication.HttpAuthenticationFilter$Credentials,int)>
		SHA-256: e04f94676227c2f960795486b8a84a1d6cbef47904cd3db43fafcccb2922ab7c
		Secure: true
	Object:
		Variable: r4
		Type: java.lang.Object[]
		Statement: r4 = virtualinvoke r3.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <athenz.shade.zts.org.apache.http.conn.ssl.SSLContextBuilder: athenz.shade.zts.org.apache.http.conn.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore,athenz.shade.zts.org.apache.http.conn.ssl.TrustStrategy)>
		SHA-256: 5a03678b5fe66b52cc209e417248044007623f8065d27a13e827b83c6faea2f5
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<javax.crypto.Mac: byte[] doFinal(byte[])>(r1)
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.HmacUtils: byte[] hmac(byte[])>
		SHA-256: 8726fc43a7feb6754cca21d2771d04f5769ccfe2911e9839f50d38fe21131845
		Secure: false
	Object:
		Variable: r141
		Type: java.security.KeyStore
		Statement: r141 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.lang.String)>($r142, $r20)
		Method: <athenz.shade.zts.org.glassfish.jersey.SslConfigurator: javax.net.ssl.SSLContext createSSLContext()>
		SHA-256: 329e1632a8bbcc4786b5cf73db3b026607412686dbd2f85350d93f39c0919832
		Secure: true
	Object:
		Variable: r114
		Type: javax.net.ssl.TrustManagerFactory
		Statement: r114 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(r154)
		Method: <athenz.shade.zts.org.glassfish.jersey.SslConfigurator: javax.net.ssl.SSLContext createSSLContext()>
		SHA-256: 8ca4bb251fc2636d7d04eed646420cda5056f19623f04bb664160b39b664e4cd
		Secure: true
	Object:
		Variable: r115
		Type: javax.net.ssl.KeyManagerFactory
		Statement: r115 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(r130)
		Method: <athenz.shade.zts.org.glassfish.jersey.SslConfigurator: javax.net.ssl.SSLContext createSSLContext()>
		SHA-256: 460ce91afd9b769c3206ddf40df87719053083d6cd63024f07cfb49bcc8064d7
		Secure: true
	Object:
		Variable: r9
		Type: javax.net.ssl.SSLContext
		Statement: r9 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(r1)
		Method: <athenz.shade.zts.org.apache.http.ssl.SSLContextBuilder: javax.net.ssl.SSLContext build()>
		SHA-256: 17297cadaf15cdc3f26bbd5bf8ebab087678c4d3aba0139ec991d49b0723822f
		Secure: false
	Object:
		Variable: r5
		Type: java.lang.Object[]
		Statement: r5 = virtualinvoke r4.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <athenz.shade.zts.org.apache.http.conn.ssl.SSLContextBuilder: athenz.shade.zts.org.apache.http.conn.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[],athenz.shade.zts.org.apache.http.conn.ssl.PrivateKeyStrategy)>
		SHA-256: f2d1963fc56e84fa18233366c4954d4fe9ee70a1b96261469237a512dbb35b80
		Secure: false
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.DigestUtils: byte[] sha384(byte[])>
		SHA-256: 555b15450d9b9f67d610fe51c522ea556aaee17c2739338b62ea6b59a4271f76
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <athenz.shade.zts.org.apache.http.impl.auth.DigestScheme: java.lang.String createCnonce()>
		SHA-256: 3ab96751e89c150e150dd9be52b85fae8d30261ca023ff283d340abfdbc1669
		Secure: true
	Object:
		Variable: r14
		Type: java.security.SecureRandom
		Statement: r14 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer8649)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl: void <clinit>()>
		SHA-256: 1b8a6794fc2a0d793163a8566b8b90e1a9106541e5e1c247c56fe07c9675e651
		Secure: true
	Object:
		Variable: r33
		Type: byte[]
		Statement: r33 = virtualinvoke r32.<java.security.MessageDigest: byte[] digest()>()
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.Md5Crypt: java.lang.String md5Crypt(byte[],java.lang.String,java.lang.String)>
		SHA-256: 6f2f24959121bd7da6c4ff2497b1fcc5b652b469c3a5264ea5fdc076954e6970
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.DigestUtils: byte[] sha1(byte[])>
		SHA-256: 83395eaa9342ece4b24da66768537fe97d75438d6493ad67319a3999d1d4058e
		Secure: false
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r3 = virtualinvoke r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r0)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl: byte[] RC4(byte[],byte[])>
		SHA-256: f6202941bd439f85ecef0a312b1c84967db36819e2140eb8bfc5cb96fecc0f49
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.DigestUtils: byte[] md2(byte[])>
		SHA-256: f2a8d60e4721bd2ba7a581814edc7b0074c941b7bb2512272883a92071e85225
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.DigestUtils: byte[] sha256(byte[])>
		SHA-256: b4669333235e4348b59a5cb6c6e53c9916a201b1217ee843fe05ae9a67a0316d
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer9219)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$Handle: javax.crypto.Cipher initCipher()>
		SHA-256: 847e7d6747f0aafa840ba05d874f110a29a67d89cfd295b5108ae1f86564bc50
		Secure: false
	Object:
		Variable: r116
		Type: java.security.KeyStore
		Statement: r116 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.lang.String)>($r117, $r39)
		Method: <athenz.shade.zts.org.glassfish.jersey.SslConfigurator: javax.net.ssl.SSLContext createSSLContext()>
		SHA-256: ab606c6f34f38675ab9f8bf479386b554bbde1dc440c047bbcd477cf8395b878
		Secure: true
	Object:
		Variable: r7
		Type: javax.crypto.Cipher
		Statement: r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8584)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl: byte[] RC4(byte[],byte[])>
		SHA-256: 5bf80134e15670933cb122486d1fabed46a9b46db97f22ec8a2123268bae84f9
		Secure: false
	Object:
		Variable: $r36
		Type: byte[]
		Statement: $r37 = virtualinvoke r10.<java.security.MessageDigest: byte[] digest(byte[])>($r36)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.DigestScheme: athenz.shade.zts.org.apache.http.Header createDigestHeader(athenz.shade.zts.org.apache.http.auth.Credentials,athenz.shade.zts.org.apache.http.HttpRequest)>
		SHA-256: 3cf353a004f69d65ef432d35aa7b6c43f53e334c975d655765d7f2d5d48a7fda
		Secure: false
	Object:
		Variable: $r5
		Type: javax.net.ssl.KeyManager[]
		Statement: $r5 = virtualinvoke r115.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <athenz.shade.zts.org.glassfish.jersey.SslConfigurator: javax.net.ssl.SSLContext createSSLContext()>
		SHA-256: 79602eb898c1361d4d16aaf0686b9d60acad48e6e343abf5cd0b82dbec84c7e0
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.DigestUtils: byte[] md5(byte[])>
		SHA-256: 4a4dd18e6187b325d9cb47c1cd7cc8489f28760532723e1ba285d1f23b4d1c9d
		Secure: false
	Object:
		Variable: $r155
		Type: byte[]
		Statement: $r156 = virtualinvoke r10.<java.security.MessageDigest: byte[] digest(byte[])>($r155)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.DigestScheme: athenz.shade.zts.org.apache.http.Header createDigestHeader(athenz.shade.zts.org.apache.http.auth.Credentials,athenz.shade.zts.org.apache.http.HttpRequest)>
		SHA-256: eb59109de525c31de5f9e12daca408474529400d2509035a6392e14ade1d4f13
		Secure: false
	Object:
		Variable: r30
		Type: byte[]
		Statement: r30 = virtualinvoke r29.<java.security.MessageDigest: byte[] digest()>()
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.Sha2Crypt: java.lang.String sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)>
		SHA-256: 8e88449544b9f7e414adbe2f34a17243ec3612919023a8a0bd098e3a201ba472
		Secure: false
	Object:
		Variable: varReplacer8639
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer8639)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl: java.security.Key createDESKey(byte[],int)>
		SHA-256: 2484383911f5c9b93d27974cd7bb04cdd63d06a576ae231a32b13dbe1b5a0db4
		Secure: false
	Object:
		Variable: r4
		Type: java.security.KeyStore
		Statement: r4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r8)
		Method: <athenz.shade.zts.org.apache.http.ssl.SSLContextBuilder: athenz.shade.zts.org.apache.http.ssl.SSLContextBuilder loadTrustMaterial(java.io.File,char[],athenz.shade.zts.org.apache.http.ssl.TrustStrategy)>
		SHA-256: 2ae9e45495be98490a8cf7e986c1da4f46ec3d08c04f0de79430b0d6741fcb4e
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r0)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.DigestScheme: java.security.MessageDigest createMessageDigest(java.lang.String)>
		SHA-256: bd3823a5d9aa45b9e8dcdb57b0361fb1187bdae63ecc0a8465b6a3387976558
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: virtualinvoke r0.<java.security.SecureRandom: void nextBytes(byte[])>(r1)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.DigestScheme: java.lang.String createCnonce()>
		SHA-256: 156cbf551d6e1beb81241eb72d74c33b8c0683b6a4ddbbd561927c6397757da7
		Secure: true
	Object:
		Variable: r4
		Type: java.lang.Object[]
		Statement: r4 = virtualinvoke r3.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <athenz.shade.zts.org.apache.http.ssl.SSLContextBuilder: athenz.shade.zts.org.apache.http.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore,athenz.shade.zts.org.apache.http.ssl.TrustStrategy)>
		SHA-256: 958cd47db3f267cb4a37c5d640c89a98379a425baeaf193a6b47be852863fe2
		Secure: true
	Object:
		Variable: r4
		Type: byte[]
		Statement: r4 = virtualinvoke r8.<java.security.MessageDigest: byte[] digest(byte[])>(r7)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$Type3Message: byte[] addGssMicAvsToTargetInfo(byte[],java.security.cert.Certificate)>
		SHA-256: e7106d47e8fbbf44418721c82f064499f0c89a121f16bd8aabf5c5dea79deb0a
		Secure: false
	Object:
		Variable: r3
		Type: byte[]
		Statement: r4 = virtualinvoke r17.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r3)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: 8c544e0b8e17ee6a08f95b7d3ed00979b0c1372b28e64454f8771ef2823623f8
		Secure: false
	Object:
		Variable: r5
		Type: java.lang.Object[]
		Statement: r5 = virtualinvoke r4.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <athenz.shade.zts.org.apache.http.ssl.SSLContextBuilder: athenz.shade.zts.org.apache.http.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[],athenz.shade.zts.org.apache.http.ssl.PrivateKeyStrategy)>
		SHA-256: 1ea876b37c6abd161a04a567c7b9ddb00b7d622ff55d3e071ea3a5e796fe943e
		Secure: true
	Object:
		Variable: r159
		Type: javax.net.ssl.SSLContext
		Statement: r159 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(r158)
		Method: <athenz.shade.zts.org.glassfish.jersey.SslConfigurator: javax.net.ssl.SSLContext createSSLContext()>
		SHA-256: a2ab8ab86be8dfc88073b7974fea9f256a298a5354d4110da7f310d2f2ee7715
		Secure: false
	Object:
		Variable: r32
		Type: byte[]
		Statement: r32 = virtualinvoke r31.<java.security.MessageDigest: byte[] digest()>()
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.Sha2Crypt: java.lang.String sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)>
		SHA-256: afa001f9f58bedd7a7e2d2e9d8232d222ffb8828ba5d8bb60adb7fcca2b063a5
		Secure: false
	Object:
		Variable: r28
		Type: byte[]
		Statement: r28 = virtualinvoke r25.<java.security.MessageDigest: byte[] digest()>()
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.Sha2Crypt: java.lang.String sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)>
		SHA-256: 71b129715a0e6159512027414bdc73e9ec2396d3d3255bd9a2a6c56d89315ce6
		Secure: false
	Object:
		Variable: $r111
		Type: byte[]
		Statement: $r111 = virtualinvoke r10.<java.security.MessageDigest: byte[] digest(byte[])>($r110)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.DigestScheme: athenz.shade.zts.org.apache.http.Header createDigestHeader(athenz.shade.zts.org.apache.http.auth.Credentials,athenz.shade.zts.org.apache.http.HttpRequest)>
		SHA-256: e3c5007c1fd2174ee0e3b25483a626d06cc4dfedb70b6567243dc5301142fec0
		Secure: false
	Object:
		Variable: r14
		Type: byte[]
		Statement: r14 = virtualinvoke $r13.<java.security.MessageDigest: byte[] digest()>()
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$HMACMD5: void <init>(byte[])>
		SHA-256: e6ce6ac68411b57059e1bbb6af2baaf55aaffce358f53237b972fc6fe5d99b85
		Secure: false
	Object:
		Variable: r4
		Type: javax.net.ssl.KeyManagerFactory
		Statement: r4 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r7)
		Method: <athenz.shade.zts.org.apache.http.conn.ssl.SSLContextBuilder: athenz.shade.zts.org.apache.http.conn.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[],athenz.shade.zts.org.apache.http.conn.ssl.PrivateKeyStrategy)>
		SHA-256: e583fd691e38f136ba11f1fe50c9350acdc0da5a7df79230440be603a5329624
		Secure: false
	Object:
		Variable: varReplacer8583
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer8583)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl: byte[] RC4(byte[],byte[])>
		SHA-256: 8287299e44e6f4685e28327503a758834fcdd84338d0108a39939f16cea0aea8
		Secure: false
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.DigestUtils: byte[] sha1(byte[])>
		SHA-256: 92d0c06680bcfabefd3968d3ed6d4813b895a475fa281863c8d26fbf3945ebe6
		Secure: false
	Object:
		Variable: $r163
		Type: javax.net.ssl.TrustManager[]
		Statement: $r163 = virtualinvoke r114.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <athenz.shade.zts.org.glassfish.jersey.SslConfigurator: javax.net.ssl.SSLContext createSSLContext()>
		SHA-256: 6c329e164fb9e0571af9f8a14890f6d36e32a1ec3ab71c01812905f89db2abb5
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.DigestUtils: byte[] digest(java.security.MessageDigest,java.io.InputStream)>
		SHA-256: 6a74c7a23efe31554dd0f6d4a4f9c4af9b76b2cc2cf92458311947525aea785e
		Secure: false
	Object:
		Variable: varReplacer9219
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer9219)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$Handle: javax.crypto.Cipher initCipher()>
		SHA-256: 9b6adb9b44d9ee85e14f5501a75308b8a130709fb05e0d512ee9cfcef3eb2355
		Secure: false
	Object:
		Variable: r27
		Type: byte[]
		Statement: r27 = virtualinvoke r26.<java.security.MessageDigest: byte[] digest()>()
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.Sha2Crypt: java.lang.String sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)>
		SHA-256: 5fb42a87fe423bb69f0ebf7816322b0439faff1c3dfaaf5b78d8370148b37d3e
		Secure: false
	Object:
		Variable: r3
		Type: byte[]
		Statement: r5 = virtualinvoke r18.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r3)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: b1c498446616f1f794ef5ed673822b48811747780f76dc24e78a311e8456d69a
		Secure: false
	Object:
		Variable: $r151
		Type: byte[]
		Statement: $r151 = virtualinvoke r10.<java.security.MessageDigest: byte[] digest(byte[])>($r150)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.DigestScheme: athenz.shade.zts.org.apache.http.Header createDigestHeader(athenz.shade.zts.org.apache.http.auth.Credentials,athenz.shade.zts.org.apache.http.HttpRequest)>
		SHA-256: 3606ee9580d36126844cc90ecd4773e54c3540ba61da227af5802e98cc6ce9dd
		Secure: false
	Object:
		Variable: r5
		Type: java.security.MessageDigest
		Statement: r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9291)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$Type3Message: byte[] addGssMicAvsToTargetInfo(byte[],java.security.cert.Certificate)>
		SHA-256: e58f005ea360e3fb631c7adb6f6c320bed4d6f935cbba3c6e276a882a31bbe0d
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>(r1)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$HMACMD5: byte[] getOutput()>
		SHA-256: 42e4e815460f87460b7298ed2cdec1f4eebbc08bbcb97d21ac11df00c0389ca7
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer9217)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$Handle: javax.crypto.Cipher initCipher()>
		SHA-256: 39bff20d77ed5b8c1c3eaa660d83d0939ee6758c7bc81d7e6c654d199fb425a
		Secure: false
	Object:
		Variable: r34
		Type: byte[]
		Statement: r34 = virtualinvoke r31.<java.security.MessageDigest: byte[] digest()>()
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.Md5Crypt: java.lang.String md5Crypt(byte[],java.lang.String,java.lang.String)>
		SHA-256: 2f1171658a2a32c35554e48fdd03e563875d21b9c40c562b7023d295495b4bf
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal()>()
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.HmacUtils: byte[] hmac(java.io.InputStream)>
		SHA-256: 4b2ccdb3e02261e414b14e8930afed5172efb5bcc4d9da46f45522404e30a762
		Secure: false
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.DigestUtils: byte[] sha512(byte[])>
		SHA-256: 9f4c297e8b55ca8f8e840c8184d8d43a9e8cf6178bd74e24161706b73442496f
		Secure: false
	Object:
		Variable: $r150
		Type: byte[]
		Statement: $r151 = virtualinvoke r10.<java.security.MessageDigest: byte[] digest(byte[])>($r150)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.DigestScheme: athenz.shade.zts.org.apache.http.Header createDigestHeader(athenz.shade.zts.org.apache.http.auth.Credentials,athenz.shade.zts.org.apache.http.HttpRequest)>
		SHA-256: 1e7f738c754f6c0133fcd7900274dcab708df39d619f56d67e656ce2f9482db1
		Secure: false
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.DigestUtils: byte[] md5(byte[])>
		SHA-256: a4b7e841fc462f8d73a506e9805cd4d1408ef7266e8613db710f40ddac41b158
		Secure: false
	Object:
		Variable: r17
		Type: javax.crypto.Cipher
		Statement: r17 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer9345)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: 3aed248c471e4de3f359b60d1057996d2a06c5af5ebad89e7d46a6fd46dc00de
		Secure: false
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.DigestUtils: byte[] md2(byte[])>
		SHA-256: e2e03ceec4484eab16cfd224ed100d41ce0c24ed3b496bf77a6483a221e878c3
		Secure: false
	Object:
		Variable: r4
		Type: byte[]
		Statement: r6 = virtualinvoke r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r4)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl: byte[] lmHash(java.lang.String)>
		SHA-256: 783bef0e378e78e183fe641c8af51ce20770cb0e3148505b1bf67f3e0df957d6
		Secure: false
	Object:
		Variable: r1
		Type: javax.net.ssl.SSLContext
		Statement: r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r14)
		Method: <athenz.shade.zts.org.apache.http.conn.ssl.SSLContextBuilder: javax.net.ssl.SSLContext build()>
		SHA-256: 323c65677a5ccffe4cadf1d642bbf7f0cc11c2ad4bf8c847cb9434d4e0c61ec9
		Secure: false
	Object:
		Variable: r7
		Type: byte[]
		Statement: r4 = virtualinvoke r8.<java.security.MessageDigest: byte[] digest(byte[])>(r7)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$Type3Message: byte[] addGssMicAvsToTargetInfo(byte[],java.security.cert.Certificate)>
		SHA-256: f4cb92d663ea523a66832637a2af6d09cfd06da2f571c733d32b7b20dbde9aea
		Secure: false
	Object:
		Variable: r4
		Type: java.security.KeyStore
		Statement: r4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r8)
		Method: <athenz.shade.zts.org.apache.http.ssl.SSLContextBuilder: athenz.shade.zts.org.apache.http.ssl.SSLContextBuilder loadTrustMaterial(java.net.URL,char[],athenz.shade.zts.org.apache.http.ssl.TrustStrategy)>
		SHA-256: 2ae9e45495be98490a8cf7e986c1da4f46ec3d08c04f0de79430b0d6741fcb4e
		Secure: true
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.DigestUtils: byte[] sha256(byte[])>
		SHA-256: c5437c9ce65f8e48f3a76c6e35eb7d6d07b1025940f526110b27d239aaff1e3
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r0)
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.DigestUtils: java.security.MessageDigest getDigest(java.lang.String)>
		SHA-256: e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337
		Secure: false
	Object:
		Variable: r141
		Type: java.security.KeyStore
		Statement: r141 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r143)
		Method: <athenz.shade.zts.org.glassfish.jersey.SslConfigurator: javax.net.ssl.SSLContext createSSLContext()>
		SHA-256: 9ced3fa8337f21f57e2d9ced9288ac80a5e598820c07f90c07e21e8c57927e73
		Secure: true
	Object:
		Variable: r6
		Type: javax.net.ssl.SSLContext
		Statement: r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer10477)
		Method: <athenz.shade.zts.org.apache.http.ssl.SSLContexts: javax.net.ssl.SSLContext createDefault()>
		SHA-256: 7b7ea676f0b0113daa7923cc1650b8107e95a5d2c4a8a301980e608b932f36fa
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.DigestUtils: byte[] sha512(byte[])>
		SHA-256: 793b536133ee27f28c84471a4b0c835449549b607ab02fb866e83514cfa002c9
		Secure: false
	Object:
		Variable: r19
		Type: byte[]
		Statement: r6 = virtualinvoke r5.<java.security.MessageDigest: byte[] digest(byte[])>(r19)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$Type3Message: byte[] addGssMicAvsToTargetInfo(byte[],java.security.cert.Certificate)>
		SHA-256: e8a1fa835b62da682d8b494d73b2a635e2a74b070251470a417a2d08c8e91d78
		Secure: true
	Object:
		Variable: r5
		Type: java.security.KeyStore
		Statement: r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r9)
		Method: <athenz.shade.zts.org.apache.http.ssl.SSLContextBuilder: athenz.shade.zts.org.apache.http.ssl.SSLContextBuilder loadKeyMaterial(java.net.URL,char[],char[],athenz.shade.zts.org.apache.http.ssl.PrivateKeyStrategy)>
		SHA-256: 513ef26476cf54f06d8fd0c0bf6830fe9958034d3d24bd143d2cff5a8db93c51
		Secure: true
	Object:
		Variable: varReplacer9217
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer9217)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$Handle: javax.crypto.Cipher initCipher()>
		SHA-256: 8711a386a346fc5f06b66df15228c14b68907e4e4e1fc5763bcc6d67bda8a64c
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r2.<javax.crypto.Mac: byte[] doFinal(byte[])>($r3)
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.HmacUtils: byte[] hmac(java.lang.String)>
		SHA-256: 1a63e7ea2d33cb1f8911256a0371852c56a608422f3c489b35ec0e4584021376
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: $r6 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>(r1)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$HMACMD5: byte[] getOutput()>
		SHA-256: bc8aef628fba0720e0f9048c0b8d277cbd4b156ad83f38497d37a2147e7a01d2
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer8583)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl: byte[] RC4(byte[],byte[])>
		SHA-256: f7d771c83d4307130131be4b4bf5ff310e04c496da4a777b243c970eebc2e46d
		Secure: false
	Object:
		Variable: r9
		Type: javax.net.ssl.SSLContext
		Statement: r9 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(r1, $r7)
		Method: <athenz.shade.zts.org.apache.http.ssl.SSLContextBuilder: javax.net.ssl.SSLContext build()>
		SHA-256: ad6d944b2b1ea4e227efe778c3dc3d27acf160d6725a8f24cb12b791425ecd74
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r0)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl: byte[] RC4(byte[],byte[])>
		SHA-256: b82d1849c7337db6637c2fc3d1a3052af43c59fa37baba925847f124876581ef
		Secure: false
	Object:
		Variable: r18
		Type: javax.crypto.Cipher
		Statement: r18 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer9351)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: 2d3523aa873a600358f8ae495838b420efe8afd4e6258fc2aecdbe8aa83a7dcf
		Secure: false
	Object:
		Variable: r5
		Type: byte[]
		Statement: r5 = virtualinvoke r18.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r3)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: 298ecbdc05de07fa8243b96b7b8953513eb255dde72086b7d68b11bc72f40bfa
		Secure: false
	Object:
		Variable: r116
		Type: java.security.KeyStore
		Statement: r116 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r118)
		Method: <athenz.shade.zts.org.glassfish.jersey.SslConfigurator: javax.net.ssl.SSLContext createSSLContext()>
		SHA-256: e6f7caba1d5e49436c83d171feade1a2621c2167c98a39298e96695cf1f05803
		Secure: true
	Object:
		Variable: r1
		Type: javax.crypto.Cipher
		Statement: r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer9220)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$Handle: javax.crypto.Cipher initCipher()>
		SHA-256: 5c4f8e93f7ccc7458ae3096c2be85873dd6d56f4e0a5c47ea896b5fcea9020bb
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: r6 = virtualinvoke r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r1)
		Method: <athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl: byte[] lmResponse(byte[],byte[])>
		SHA-256: b26464e44971761bc16eb31b9c4fee8a67678d7feaceaebd6155060791d8c73c
		Secure: false
	Object:
		Variable: r28
		Type: byte[]
		Statement: r28 = virtualinvoke r25.<java.security.MessageDigest: byte[] digest()>()
		Method: <athenz.shade.zts.org.apache.commons.codec.digest.Sha2Crypt: java.lang.String sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)>
		SHA-256: 71b129715a0e6159512027414bdc73e9ec2396d3d3255bd9a2a6c56d89315ce6
		Secure: false

Findings in Java Class: athenz.shade.zts.org.apache.http.conn.ssl.SSLContexts

	 in Method: javax.net.ssl.SSLContext createSystemDefault()
		ForbiddenMethodError violating CrySL rule for javax.net.ssl.SSLContext
			Detected call to forbidden method javax.net.ssl.SSLContext getDefault() of class javax.net.ssl.SSLContext. Instead, call method <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>.
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getDefault()>()


	 in Method: javax.net.ssl.SSLContext createDefault()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer8177, varReplacer8177, varReplacer8177)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #f1fc36b37da1273af6c30f8285246e216ec09de2b4dc7aa42fd0f82ca17ff9ea)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer8180)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer8177, varReplacer8177, varReplacer8177)


Findings in Java Class: athenz.shade.zts.org.apache.http.ssl.SSLContexts

	 in Method: javax.net.ssl.SSLContext createSystemDefault()
		ForbiddenMethodError violating CrySL rule for javax.net.ssl.SSLContext
			Detected call to forbidden method javax.net.ssl.SSLContext getDefault() of class javax.net.ssl.SSLContext. Instead, call method <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>.
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getDefault()>()


	 in Method: javax.net.ssl.SSLContext createDefault()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer10478, varReplacer10478, varReplacer10478)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer10478, varReplacer10478, varReplacer10478)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #7b7ea676f0b0113daa7923cc1650b8107e95a5d2c4a8a301980e608b932f36fa)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer10477)


Findings in Java Class: athenz.shade.zts.org.glassfish.jersey.SslConfigurator

	 in Method: javax.net.ssl.SSLContext createSSLContext()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r159.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r162, $r163, varReplacer2917)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #a2ab8ab86be8dfc88073b7974fea9f256a298a5354d4110da7f310d2f2ee7715)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: r159 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(r158)


Findings in Java Class: athenz.shade.zts.org.glassfish.jersey.client.authentication.DigestAuthenticator

	 in Method: java.lang.String md5(java.lang.String[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #db789640c23134a8a78ca499295ccd11fac588a7c09a630c80e533dfcf6d63f6)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r14 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6764)


Findings in Java Class: athenz.shade.zts.org.apache.http.impl.auth.DigestScheme

	 in Method: java.security.MessageDigest createMessageDigest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #bd3823a5d9aa45b9e8dcdb57b0361fb1187bdae63ecc0a8465b6a3387976558)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r0)


Findings in Java Class: athenz.shade.zts.org.apache.http.impl.auth.HttpEntityDigester

	 in Method: void write(byte[],int,int)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #bd3823a5d9aa45b9e8dcdb57b0361fb1187bdae63ecc0a8465b6a3387976558)
			Third parameter (with value 0)Variable pre_lenmust be  greater than pre_off
			at statement: virtualinvoke $r2.<java.security.MessageDigest: void update(byte[],int,int)>(r1, i0, i1)


	 in Method: void close()
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #bd3823a5d9aa45b9e8dcdb57b0361fb1187bdae63ecc0a8465b6a3387976558)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl

	 in Method: byte[] RC4(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer8585, $r2)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #f7d771c83d4307130131be4b4bf5ff310e04c496da4a777b243c970eebc2e46d)
			Second parameter (with value "RC4") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer8583)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #f7d771c83d4307130131be4b4bf5ff310e04c496da4a777b243c970eebc2e46d)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer8583)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer8583)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #5bf80134e15670933cb122486d1fabed46a9b46db97f22ec8a2123268bae84f9)
			First parameter (with value "RC4") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8584)


	 in Method: byte[] lmHash(java.lang.String)
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #a0c5004e519bca1c3c281cabd5d0f307fca98feaa527339c16b3f00fe3db3b8b)
			Unexpected call to method init on object of type javax.crypto.Cipher.
			at statement: virtualinvoke r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer8589, r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer8589, r3)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #a0c5004e519bca1c3c281cabd5d0f307fca98feaa527339c16b3f00fe3db3b8b)
			First parameter (with value "DES/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8591)


	 in Method: byte[] lmResponse(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer8606, r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #574b9d590449f2d9ac72209da8d2ceae09399dab4d14964f9f3177551834b590)
			First parameter (with value "DES/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8616)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #574b9d590449f2d9ac72209da8d2ceae09399dab4d14964f9f3177551834b590)
			Unexpected call to method init on object of type javax.crypto.Cipher.
			at statement: virtualinvoke r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer8617, r3)


	 in Method: java.security.Key createDESKey(byte[],int)
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #fd0c6035f850995dc04eef9717aebe2e5d047e3e1119c64dfe7a7f1ffa53097b)
			Second parameter (with value "DES") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer8639)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer8639)


	 in Method: java.security.MessageDigest getMD5()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #bce0840c4a9867f3628bf767a0011026e69d915f0ffda0360024907074839920)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8644)


Findings in Java Class: athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$Handle

	 in Method: void <init>(byte[],athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$Mode,boolean)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #5c4f8e93f7ccc7458ae3096c2be85873dd6d56f4e0a5c47ea896b5fcea9020bb)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: $r9 = specialinvoke r0.<athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$Handle: javax.crypto.Cipher initCipher()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #5c4f8e93f7ccc7458ae3096c2be85873dd6d56f4e0a5c47ea896b5fcea9020bb)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: $r9 = specialinvoke r0.<athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$Handle: javax.crypto.Cipher initCipher()>()

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #bce0840c4a9867f3628bf767a0011026e69d915f0ffda0360024907074839920)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r8 = virtualinvoke r3.<java.security.MessageDigest: byte[] digest()>()


	 in Method: javax.crypto.Cipher initCipher()
		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #847e7d6747f0aafa840ba05d874f110a29a67d89cfd295b5108ae1f86564bc50)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer9219)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #847e7d6747f0aafa840ba05d874f110a29a67d89cfd295b5108ae1f86564bc50)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer9219)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #847e7d6747f0aafa840ba05d874f110a29a67d89cfd295b5108ae1f86564bc50)
			Second parameter (with value "RC4") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer9219)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer9217)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #5c4f8e93f7ccc7458ae3096c2be85873dd6d56f4e0a5c47ea896b5fcea9020bb)
			First parameter (with value "RC4") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer9220)


	 in Method: byte[] signAndEncryptMessage(byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #5c4f8e93f7ccc7458ae3096c2be85873dd6d56f4e0a5c47ea896b5fcea9020bb)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: specialinvoke r0.<athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$Handle: void advanceMessageSequence()>()


	 in Method: byte[] decryptAndVerifySignedMessage(byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #5c4f8e93f7ccc7458ae3096c2be85873dd6d56f4e0a5c47ea896b5fcea9020bb)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: specialinvoke r0.<athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$Handle: void advanceMessageSequence()>()


Findings in Java Class: athenz.shade.zts.org.apache.http.conn.ssl.SSLContextBuilder

	 in Method: athenz.shade.zts.org.apache.http.conn.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[],athenz.shade.zts.org.apache.http.conn.ssl.PrivateKeyStrategy)
		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #e583fd691e38f136ba11f1fe50c9350acdc0da5a7df79230440be603a5329624)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r4.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r1, r2)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r4.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r1, r2)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #e583fd691e38f136ba11f1fe50c9350acdc0da5a7df79230440be603a5329624)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r4.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r1, r2)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #e583fd691e38f136ba11f1fe50c9350acdc0da5a7df79230440be603a5329624)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r4.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r1, r2)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #e583fd691e38f136ba11f1fe50c9350acdc0da5a7df79230440be603a5329624)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r4.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r1, r2)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #e583fd691e38f136ba11f1fe50c9350acdc0da5a7df79230440be603a5329624)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r4.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r1, r2)


	 in Method: javax.net.ssl.SSLContext build()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #323c65677a5ccffe4cadf1d642bbf7f0cc11c2ad4bf8c847cb9434d4e0c61ec9)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r14)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r17, $r18, $r19)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r17, $r18, $r19)


	 in Method: athenz.shade.zts.org.apache.http.conn.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore,athenz.shade.zts.org.apache.http.conn.ssl.TrustStrategy)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r3.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(r1)


Findings in Java Class: athenz.shade.zts.org.apache.http.impl.auth.NTLMEngineImpl$CipherGen

	 in Method: byte[] getLanManagerSessionKey()
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r17.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer9337, r1)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #2d3523aa873a600358f8ae495838b420efe8afd4e6258fc2aecdbe8aa83a7dcf)
			First parameter (with value "DES/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r18 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer9351)


Findings in Java Class: athenz.shade.zts.org.apache.http.ssl.SSLContextBuilder

	 in Method: javax.net.ssl.SSLContext build()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #17297cadaf15cdc3f26bbd5bf8ebab087678c4d3aba0139ec991d49b0723822f)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: r9 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(r1)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #ad6d944b2b1ea4e227efe778c3dc3d27acf160d6725a8f24cb12b791425ecd74)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: r9 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(r1, $r7)


Findings in Java Class: athenz.shade.zts.org.apache.commons.codec.digest.HmacUtils

	 in Method: byte[] hmac(java.io.InputStream)
		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #121a39d0408e38af7cd24010b0a2fab8d7f314e62b238e0df4a62a414507db2a)
			Second parameter (with value 0)Variable offsetmust be  lesser than len
			at statement: virtualinvoke $r5.<javax.crypto.Mac: void update(byte[],int,int)>(r2, varReplacer12571, i0)


	 in Method: void <init>(java.lang.String,java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #121a39d0408e38af7cd24010b0a2fab8d7f314e62b238e0df4a62a414507db2a)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: specialinvoke r0.<athenz.shade.zts.org.apache.commons.codec.digest.HmacUtils: void <init>(java.lang.String,byte[])>(r1, $r3)


	 in Method: javax.crypto.Mac getHmacSha384(byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #121a39d0408e38af7cd24010b0a2fab8d7f314e62b238e0df4a62a414507db2a)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: return $r2


	 in Method: javax.crypto.Mac getHmacSha1(byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #121a39d0408e38af7cd24010b0a2fab8d7f314e62b238e0df4a62a414507db2a)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: return $r2


	 in Method: javax.crypto.Mac getHmacSha512(byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #121a39d0408e38af7cd24010b0a2fab8d7f314e62b238e0df4a62a414507db2a)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: return $r2


	 in Method: javax.crypto.Mac getHmacMd5(byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #121a39d0408e38af7cd24010b0a2fab8d7f314e62b238e0df4a62a414507db2a)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: return $r2


	 in Method: javax.crypto.Mac getHmacSha256(byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #121a39d0408e38af7cd24010b0a2fab8d7f314e62b238e0df4a62a414507db2a)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: return $r2


	 in Method: javax.crypto.Mac getInitializedMac(java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, r0)


Findings in Java Class: athenz.shade.zts.org.apache.commons.codec.digest.DigestUtils

	 in Method: java.security.MessageDigest getDigest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r0)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r0)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			First parameter (with value "MD2") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r0)


	 in Method: java.security.MessageDigest updateDigest(java.security.MessageDigest,java.io.InputStream)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			Third parameter (with value 0)Variable pre_lenmust be  greater than pre_off
			at statement: virtualinvoke r0.<java.security.MessageDigest: void update(byte[],int,int)>(r2, varReplacer13827, i0)


	 in Method: byte[] digest(java.security.MessageDigest,java.io.InputStream)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #f69e48164586f17cecce2112ad32e31baa2778d3f1adea93a977989695a8b6db)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()


	 in Method: byte[] digest(java.security.MessageDigest,java.io.File)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #f69e48164586f17cecce2112ad32e31baa2778d3f1adea93a977989695a8b6db)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()


	 in Method: java.security.MessageDigest getShaDigest()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: return $r0


	 in Method: void <init>(java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke r0.<athenz.shade.zts.org.apache.commons.codec.digest.DigestUtils: void <init>(java.security.MessageDigest)>($r2)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke r0.<athenz.shade.zts.org.apache.commons.codec.digest.DigestUtils: void <init>(java.security.MessageDigest)>($r2)


	 in Method: boolean isAvailable(java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #f69e48164586f17cecce2112ad32e31baa2778d3f1adea93a977989695a8b6db)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r1 = staticinvoke <athenz.shade.zts.org.apache.commons.codec.digest.DigestUtils: java.security.MessageDigest getDigest(java.lang.String,java.security.MessageDigest)>(r0, varReplacer13830)


Findings in Java Class: athenz.shade.zts.org.apache.commons.codec.digest.Md5Crypt

	 in Method: java.lang.String md5Crypt(byte[],java.lang.String,java.lang.String)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: r34 = virtualinvoke r31.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: athenz.shade.zts.org.apache.commons.codec.digest.Sha2Crypt

	 in Method: java.lang.String sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: r32 = virtualinvoke r31.<java.security.MessageDigest: byte[] digest()>()

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: r30 = virtualinvoke r29.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: athenz.shade.zts.org.apache.commons.codec.cli.Digest

	 in Method: void run(java.lang.String,java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke r0.<athenz.shade.zts.org.apache.commons.codec.cli.Digest: void run(java.lang.String,java.security.MessageDigest)>(r1, $r3)


	 in Method: void run()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke r0.<athenz.shade.zts.org.apache.commons.codec.cli.Digest: void run(java.lang.String,java.security.MessageDigest)>(varReplacer12757, $r9)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke r0.<athenz.shade.zts.org.apache.commons.codec.cli.Digest: void run(java.lang.String,java.security.MessageDigest)>(varReplacer12758, r1)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #f69e48164586f17cecce2112ad32e31baa2778d3f1adea93a977989695a8b6db)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke r0.<athenz.shade.zts.org.apache.commons.codec.cli.Digest: void run(java.lang.String,java.security.MessageDigest)>(varReplacer12757, $r9)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #f69e48164586f17cecce2112ad32e31baa2778d3f1adea93a977989695a8b6db)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke r0.<athenz.shade.zts.org.apache.commons.codec.cli.Digest: void run(java.lang.String,java.security.MessageDigest)>(varReplacer12758, r1)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 115

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 19
	ConstraintError: 23
	RequiredPredicateError: 17
	ForbiddenMethodError: 2
	TypestateError: 11
	NeverTypeOfError: 8
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 169 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 3.057 min

Current Proejct: netty-codec-dns-4.1.43.Final.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 386.6 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.264 s

Current Proejct: kafka-1.11.2.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 478.0 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.194 s

Current Proejct: stream-storage-java-client-4.10.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 847.6 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 1 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 1 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 5.923 s

Current Proejct: bookkeeper-common-allocator-4.10.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 486.6 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.215 s

Current Proejct: jackson-datatype-jsr310-2.8.11.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 467.4 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.364 s

Current Proejct: solr-core-7.5.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 1.703 s 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 14 analysis seeds within 4 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 15
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.07

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 16
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.13

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 20
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.15

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 20
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.2

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 20
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.25

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 21
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.29

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.3

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 24
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 26
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.35

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 26
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.38

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 28
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.39

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.4

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 31
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.42

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 14 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.42

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 15 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.45

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 16 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.48

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 17 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.52

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 18 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.55

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 19 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.58

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 20 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.61

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 21 of 35
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.6

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 22 of 35
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.63

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 23 of 35
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.66

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 24 of 35
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.69

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 25 of 35
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.71

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 26 of 35
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.74

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 27 of 35
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.77

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 28 of 35
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.8

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 29 of 35
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.83

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 30 of 35
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.86

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 31 of 35
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.89

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 32 of 35
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.91

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 33 of 35
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.94

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 34 of 35
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.97

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: specialinvoke $r5.<java.security.SecureRandom: void <init>()>()
		Method: <org.apache.solr.security.Sha256AuthenticationProvider: java.lang.String getSaltedHashedValue(java.lang.String)>
		SHA-256: 6368930287c1211d09eeefe333d01e124324782f434d6f917f35a92458034827
		Secure: true
	Object:
		Variable: $r98
		Type: byte[]
		Statement: $r98 = virtualinvoke r95.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.solr.handler.BlobHandler: void handleRequestBody(org.apache.solr.request.SolrQueryRequest,org.apache.solr.response.SolrQueryResponse)>
		SHA-256: d4be91ba6ed474585f39a93d815e3719f7a1ffd1e423c602e20b60f40f3bdbf9
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke r8.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r3, $i0, $i1)
		Method: <org.apache.solr.util.CryptoKeys$RSAKeyPair: byte[] encrypt(java.nio.ByteBuffer)>
		SHA-256: 9d02d868fa5c729d900ecd0e8f24ab51f351e720c51fbc5134f5847b404693a6
		Secure: false
	Object:
		Variable: r15
		Type: java.security.KeyPair
		Statement: r15 = virtualinvoke r13.<java.security.KeyPairGenerator: java.security.KeyPair genKeyPair()>()
		Method: <org.apache.solr.util.CryptoKeys$RSAKeyPair: void <init>()>
		SHA-256: 14ca49ae590c38a7a1acaa685753defb2aef1b2b3105b6d248d005b5ed336194
		Secure: true
	Object:
		Variable: z1
		Type: boolean
		Statement: z1 = virtualinvoke r6.<java.security.Signature: boolean verify(byte[])>(r1)
		Method: <org.apache.solr.util.CryptoKeys: boolean verify(java.security.PublicKey,byte[],java.nio.ByteBuffer)>
		SHA-256: 982f5e101a03e364dcd1f31720d78ba347c153fc4f45c197bdd4f71fe730498a
		Secure: false
	Object:
		Variable: r95
		Type: java.security.MessageDigest
		Statement: r95 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7442)
		Method: <org.apache.solr.handler.BlobHandler: void handleRequestBody(org.apache.solr.request.SolrQueryRequest,org.apache.solr.response.SolrQueryResponse)>
		SHA-256: e44111a47cca052e430cb85ee029dc62b51f2c4a7ece5abc337f34f001981f5e
		Secure: false
	Object:
		Variable: r13
		Type: java.security.KeyPairGenerator
		Statement: r13 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer27613)
		Method: <org.apache.solr.util.CryptoKeys$RSAKeyPair: void <init>()>
		SHA-256: d8e0185874f5e83e90f3d74e2c77828d6ae7b6417e8102ccc2b90c1ce36f2ca4
		Secure: true
	Object:
		Variable: $r14
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r14.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r15)
		Method: <org.apache.solr.util.CryptoKeys: java.lang.String decodeAES(java.lang.String,java.lang.String,int)>
		SHA-256: f87a04c04cefcb6820d4b3f4bbba7d1271a145b33f48beb5b53fe875f25b5300
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>(r0, varReplacer27643, $i0)
		Method: <org.apache.solr.util.CryptoKeys: byte[] decryptRSA(byte[],java.security.PublicKey)>
		SHA-256: ea533956245e113f9a1d66793425b2fd822b067a1d9247f36ea1eef44c2e081a
		Secure: false
	Object:
		Variable: r4
		Type: byte[]
		Statement: r10 = virtualinvoke r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r4)
		Method: <org.apache.solr.util.CryptoKeys: java.lang.String decodeAES(java.lang.String,java.lang.String,int)>
		SHA-256: 2986eda7549f6c6204b71768b5de370b9d4ffdf34b5a0dc239b69eae93c34ac9
		Secure: false
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r3 = virtualinvoke r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>(r0, varReplacer27643, $i0)
		Method: <org.apache.solr.util.CryptoKeys: byte[] decryptRSA(byte[],java.security.PublicKey)>
		SHA-256: 70bae2084f1e5b51dd5e93148acbb07a266b80fa58d5cbd11778bc372d918a3d
		Secure: false
	Object:
		Variable: r2
		Type: java.security.MessageDigest
		Statement: r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer23667)
		Method: <org.apache.solr.security.Sha256AuthenticationProvider: java.lang.String sha256(java.lang.String,java.lang.String)>
		SHA-256: 46846fa0d6fa77faf74ce86bc54d47f56adb20bd0cd285e8e4a1146a862e01f9
		Secure: true
	Object:
		Variable: r1
		Type: byte[]
		Statement: z1 = virtualinvoke r6.<java.security.Signature: boolean verify(byte[])>(r1)
		Method: <org.apache.solr.util.CryptoKeys: boolean verify(java.security.PublicKey,byte[],java.nio.ByteBuffer)>
		SHA-256: 40f3e3c460dc32711a9b818f4054b3271c4a8b9a482b657fd4f833aa3b0b5b6f
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer27180)
		Method: <org.apache.solr.update.processor.MD5Signature$1: java.security.MessageDigest initialValue()>
		SHA-256: f9c8ab5ef818164b6d34349ce2e27a5f27216d631d1e58c544938c274c59662f
		Secure: false
	Object:
		Variable: r12
		Type: byte[]
		Statement: r12 = virtualinvoke r2.<java.security.MessageDigest: byte[] digest(byte[])>(r11)
		Method: <org.apache.solr.security.Sha256AuthenticationProvider: java.lang.String sha256(java.lang.String,java.lang.String)>
		SHA-256: 5d27ca5b599c0eca26f9e9d6c66503670bf951e6e57e1f65a511e16aac68dfd1
		Secure: true
	Object:
		Variable: r10
		Type: byte[]
		Statement: r10 = virtualinvoke r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r4)
		Method: <org.apache.solr.util.CryptoKeys: java.lang.String decodeAES(java.lang.String,java.lang.String,int)>
		SHA-256: f84b033b5bc30a36a6798ca09464c768476e977a78b7ae77e52a6f375d4b6dee
		Secure: false
	Object:
		Variable: varReplacer27631
		Type: java.lang.String
		Statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r13, varReplacer27631)
		Method: <org.apache.solr.util.CryptoKeys: java.lang.String decodeAES(java.lang.String,java.lang.String,int)>
		SHA-256: 76750121fdc6278df893b226016179d4594ee3eaccc6380db4d97e8fc49a16af
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.PublicKey
		Statement: $r4 = virtualinvoke r15.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <org.apache.solr.util.CryptoKeys$RSAKeyPair: void <init>()>
		SHA-256: d0023726965dd88252d60b41699c0727a6a61263c1baf8a4a186de62d1d884f9
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.PrivateKey
		Statement: $r3 = virtualinvoke r15.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <org.apache.solr.util.CryptoKeys$RSAKeyPair: void <init>()>
		SHA-256: 4b7c76b0aa95f7c87383f86e6fb2e08fc5bca715db66e84de2852364b8eda109
		Secure: true
	Object:
		Variable: $r12
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r13, varReplacer27631)
		Method: <org.apache.solr.util.CryptoKeys: java.lang.String decodeAES(java.lang.String,java.lang.String,int)>
		SHA-256: dd1e14d4091bf85804b0ed5a515b1140c937c1bbf5f5fc310ff86b90bf37d4d8
		Secure: false
	Object:
		Variable: r11
		Type: byte[]
		Statement: r11 = virtualinvoke r2.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <org.apache.solr.security.Sha256AuthenticationProvider: java.lang.String sha256(java.lang.String,java.lang.String)>
		SHA-256: f65e1ed324c263a55cc6567063de6e91bdc6b1ce4a513858ec71d9591066471e
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r4 = virtualinvoke r8.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r3, $i0, $i1)
		Method: <org.apache.solr.util.CryptoKeys$RSAKeyPair: byte[] encrypt(java.nio.ByteBuffer)>
		SHA-256: 7c32bc8eb6305a3438bd41d521704adf59acbf5d1b8f0de2f0d2d27b8f04f63f
		Secure: false
	Object:
		Variable: r7
		Type: javax.crypto.Cipher
		Statement: r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer27641)
		Method: <org.apache.solr.util.CryptoKeys: byte[] decryptRSA(byte[],java.security.PublicKey)>
		SHA-256: f88d20e596f75eab03237c3ac8081dc213146f5af726a6e7cbc7ef9573677906
		Secure: false
	Object:
		Variable: r16
		Type: java.security.SecureRandom
		Statement: specialinvoke r16.<java.security.SecureRandom: void <init>()>()
		Method: <org.apache.solr.util.CryptoKeys$RSAKeyPair: void <init>()>
		SHA-256: e0b818de216692f657033f439ca27ef2b8acc484ba6110d6f471c6ffeb699f24
		Secure: true
	Object:
		Variable: r8
		Type: java.security.Signature
		Statement: r8 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer27618)
		Method: <org.apache.solr.util.CryptoKeys$RSAKeyPair: byte[] signSha256(byte[])>
		SHA-256: 4b2198cf925d185d14f58c44c4896de002711ba5778321e0f609b6aebcf95750
		Secure: true
	Object:
		Variable: r6
		Type: java.security.MessageDigest
		Statement: r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer27629)
		Method: <org.apache.solr.util.CryptoKeys: java.lang.String decodeAES(java.lang.String,java.lang.String,int)>
		SHA-256: ffe1b2f39d40f5dd06cdb4ec716750a3a92cebec0c8ab0460a3e849216d3da2f
		Secure: false
	Object:
		Variable: r11
		Type: byte[]
		Statement: r12 = virtualinvoke r2.<java.security.MessageDigest: byte[] digest(byte[])>(r11)
		Method: <org.apache.solr.security.Sha256AuthenticationProvider: java.lang.String sha256(java.lang.String,java.lang.String)>
		SHA-256: cfaeeccdf1200e9d563a530b2b4e21872a5c2ef50a1f14af6f278f84e191e370
		Secure: true
	Object:
		Variable: r5
		Type: javax.crypto.Cipher
		Statement: r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer27633)
		Method: <org.apache.solr.util.CryptoKeys: java.lang.String decodeAES(java.lang.String,java.lang.String,int)>
		SHA-256: b559edea62b60e56823c84423cff7f4b072a18a091456366280b508c9422cdf3
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke r8.<java.security.Signature: byte[] sign()>()
		Method: <org.apache.solr.util.CryptoKeys$RSAKeyPair: byte[] signSha256(byte[])>
		SHA-256: 4305d9b7b03ffe7b777c5951312b726216a496f1abcd73266198f1644eb91ee7
		Secure: true
	Object:
		Variable: r6
		Type: java.security.Signature
		Statement: r6 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer27624)
		Method: <org.apache.solr.util.CryptoKeys: boolean verify(java.security.PublicKey,byte[],java.nio.ByteBuffer)>
		SHA-256: 830ee8ed218b3dd931123cb7a4a4c6ee9cad540bbb1b6afb27a759263733e08d
		Secure: false
	Object:
		Variable: r6
		Type: byte[]
		Statement: r6 = virtualinvoke r0.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.solr.util.CryptoKeys: byte[][] evpBytesTokey(int,int,java.security.MessageDigest,byte[],byte[],int)>
		SHA-256: 5d4bf1d0b4e94d4f90fd7d2a093f5c7b2e4df5dab96c149ed1c3cdbf3ac52fa4
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: r11 = virtualinvoke r2.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <org.apache.solr.security.Sha256AuthenticationProvider: java.lang.String sha256(java.lang.String,java.lang.String)>
		SHA-256: 3badc0374f214b3861f3ad1cec03a726bf41a5c6444a8866756d561ace0abe12
		Secure: true
	Object:
		Variable: r2
		Type: byte[]
		Statement: virtualinvoke r1.<java.util.Random: void nextBytes(byte[])>(r2)
		Method: <org.apache.solr.security.Sha256AuthenticationProvider: java.lang.String getSaltedHashedValue(java.lang.String)>
		SHA-256: 910b63036dd0b6ee257bf70b9f8f3c8d97cdad26903bd08e97a7388d81090034
		Secure: true
	Object:
		Variable: r8
		Type: javax.crypto.Cipher
		Statement: r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer27615)
		Method: <org.apache.solr.util.CryptoKeys$RSAKeyPair: byte[] encrypt(java.nio.ByteBuffer)>
		SHA-256: 8515917022e7751c353f38ea922c5485b8a67b6e2c1b35ba42f3eb69783b2a46
		Secure: false
	Object:
		Variable: r6
		Type: byte[]
		Statement: r6 = virtualinvoke r0.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.solr.util.CryptoKeys: byte[][] evpBytesTokey(int,int,java.security.MessageDigest,byte[],byte[],int)>
		SHA-256: 5d4bf1d0b4e94d4f90fd7d2a093f5c7b2e4df5dab96c149ed1c3cdbf3ac52fa4
		Secure: false

Findings in Java Class: org.apache.solr.handler.BlobHandler

	 in Method: void handleRequestBody(org.apache.solr.request.SolrQueryRequest,org.apache.solr.response.SolrQueryResponse)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e44111a47cca052e430cb85ee029dc62b51f2c4a7ece5abc337f34f001981f5e)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r95 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7442)


Findings in Java Class: org.apache.solr.update.processor.MD5Signature$1

	 in Method: java.security.MessageDigest initialValue()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #f9c8ab5ef818164b6d34349ce2e27a5f27216d631d1e58c544938c274c59662f)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer27180)


	 in Method: java.lang.Object initialValue()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #f9c8ab5ef818164b6d34349ce2e27a5f27216d631d1e58c544938c274c59662f)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: return $r1


Findings in Java Class: org.apache.solr.util.CryptoKeys$RSAKeyPair

	 in Method: byte[] encrypt(java.nio.ByteBuffer)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #8515917022e7751c353f38ea922c5485b8a67b6e2c1b35ba42f3eb69783b2a46)
			First parameter (with value "RSA/ECB/nopadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer27615)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r8.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer27616, $r2)


Findings in Java Class: org.apache.solr.util.CryptoKeys

	 in Method: boolean verify(java.security.PublicKey,byte[],java.nio.ByteBuffer)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke r6.<java.security.Signature: void initVerify(java.security.PublicKey)>(r0)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #830ee8ed218b3dd931123cb7a4a4c6ee9cad540bbb1b6afb27a759263733e08d)
			First parameter (with value "SHA1withRSA") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA224withDSA, NONEwithDSA, SHA1withDSA}
			at statement: r6 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer27624)


	 in Method: java.lang.String decodeAES(java.lang.String,java.lang.String,int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r14.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r15)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ffe1b2f39d40f5dd06cdb4ec716750a3a92cebec0c8ab0460a3e849216d3da2f)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer27629)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer27636, r8, r9)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r13, varReplacer27631)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #ffe1b2f39d40f5dd06cdb4ec716750a3a92cebec0c8ab0460a3e849216d3da2f)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: r7 = staticinvoke <org.apache.solr.util.CryptoKeys: byte[][] evpBytesTokey(int,int,java.security.MessageDigest,byte[],byte[],int)>($i5, $i6, r6, r3, $r11, varReplacer27634)


	 in Method: byte[] decryptRSA(byte[],java.security.PublicKey)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer27642, r1)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #f88d20e596f75eab03237c3ac8081dc213146f5af726a6e7cbc7ef9573677906)
			First parameter (with value "RSA/ECB/nopadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer27641)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 35

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 6
	IncompleteOperationError: 2
	ConstraintError: 6
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 5 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 22.15 s

Current Proejct: aspectjweaver.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 724.7 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 1 analysis seeds within 2 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 3
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 3
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r56
		Type: byte[]
		Statement: r58 = virtualinvoke r57.<java.security.MessageDigest: byte[] digest(byte[])>(r56)
		Method: <org.aspectj.apache.bcel.generic.ClassGen: long getSUID()>
		SHA-256: a034a1f316467afc14c7e016557de6d28ea316fd84e542e7d01d998c719ab7a1
		Secure: false
	Object:
		Variable: r57
		Type: java.security.MessageDigest
		Statement: r57 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2753)
		Method: <org.aspectj.apache.bcel.generic.ClassGen: long getSUID()>
		SHA-256: fb3c29148def29d40d217dc406ddb7a85bd8adcdc8467e5c59960cbeda0d92db
		Secure: false
	Object:
		Variable: r58
		Type: byte[]
		Statement: r58 = virtualinvoke r57.<java.security.MessageDigest: byte[] digest(byte[])>(r56)
		Method: <org.aspectj.apache.bcel.generic.ClassGen: long getSUID()>
		SHA-256: e404c9bcfc120af2ace8a6de87ed0669a8bef76be4f6bc7950cf971c09a9e0df
		Secure: false

Findings in Java Class: org.aspectj.apache.bcel.generic.ClassGen

	 in Method: long getSUID()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #fb3c29148def29d40d217dc406ddb7a85bd8adcdc8467e5c59960cbeda0d92db)
			First parameter (with value "SHA") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r57 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2753)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 3

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 1
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 2 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 8.871 s

Current Proejct: maven-embedder-3.0.5.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 427.3 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.345 s

Current Proejct: kafka_2.9.2-0.8.1.1.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 1.496 s 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 1 analysis seeds within 2 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r1)
		Method: <kafka.log.SkimpyOffsetMap: void <init>(int,java.lang.String)>
		SHA-256: 6861f501bcde1ab48fb55251169b214839271c75c9e3f642d7dd2bd651ce00b
		Secure: false

Findings in Java Class: kafka.log.SkimpyOffsetMap

	 in Method: void <init>(int,java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #6861f501bcde1ab48fb55251169b214839271c75c9e3f642d7dd2bd651ce00b)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $i1 = virtualinvoke $r4.<java.security.MessageDigest: int getDigestLength()>()


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 1

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 1
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 2 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 8.822 s

Current Proejct: jackson-core-2.6.5.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 538.8 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 2.881 s

Current Proejct: objectsize-0.0.12.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 408.4 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.107 s

Current Proejct: jcip-annotations-1.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 449.6 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.123 s

Current Proejct: netty-transport-native-epoll-4.1.43.Final.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 454.3 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.714 s

Current Proejct: jackson-databind-2.10.1.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 724.8 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 1 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 1 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 5.824 s

Current Proejct: jctools-core-2.1.2.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 427.4 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.744 s

Current Proejct: prometheus-metrics-provider-4.10.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 523.4 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.245 s

Current Proejct: elasticsearch-rest-high-level-client-6.3.2.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 413.2 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.381 s

Current Proejct: javassist-3.25.0-GA.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 778.9 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 1 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 3
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 3
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r37
		Type: byte[]
		Statement: r37 = virtualinvoke r36.<java.security.MessageDigest: byte[] digest(byte[])>($r12)
		Method: <javassist.SerialVersionUID: long calculateDefault(javassist.CtClass)>
		SHA-256: 252b3235f8868882b57337c2ad518b94750b805205ef696734412e5c5e5622d0
		Secure: false
	Object:
		Variable: $r12
		Type: byte[]
		Statement: r37 = virtualinvoke r36.<java.security.MessageDigest: byte[] digest(byte[])>($r12)
		Method: <javassist.SerialVersionUID: long calculateDefault(javassist.CtClass)>
		SHA-256: 406579af5c834e9890c97984206db340af61e75160f5bd95b74b999a0d42ea
		Secure: false
	Object:
		Variable: r36
		Type: java.security.MessageDigest
		Statement: r36 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer746)
		Method: <javassist.SerialVersionUID: long calculateDefault(javassist.CtClass)>
		SHA-256: fb2952b40c4363f2436dfb7a4f1456f69a41b414efc390c7c70b0d7b52cad1ff
		Secure: false

Findings in Java Class: javassist.SerialVersionUID

	 in Method: long calculateDefault(javassist.CtClass)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #fb2952b40c4363f2436dfb7a4f1456f69a41b414efc390c7c70b0d7b52cad1ff)
			First parameter (with value "SHA") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r36 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer746)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 3

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 1
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 4.293 s

Current Proejct: jersey-hk2-2.27.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 433.1 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.294 s

Current Proejct: jjwt-impl-0.10.5.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 476.7 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 10 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.09

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 12
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.17

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 13
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.23

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 14
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.29

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 16
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.31

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.35

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 19
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.37

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 19
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.42

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 20
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.45

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 20
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 20
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.55

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 20
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.6

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 20
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.65

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 14 of 20
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.7

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 15 of 20
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.75

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 16 of 20
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.8

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 17 of 20
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.85

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 18 of 20
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.9

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 19 of 20
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.95

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKey
		Statement: $r5 = virtualinvoke r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <io.jsonwebtoken.impl.crypto.MacProvider: javax.crypto.SecretKey generateKey(io.jsonwebtoken.SignatureAlgorithm,java.security.SecureRandom)>
		SHA-256: 9de2e71a2934a24dae94f51f11e9c4a3d0bec2eb8862f2f3336043c6e18d2e92
		Secure: true
	Object:
		Variable: $r5
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, $r5)
		Method: <io.jsonwebtoken.impl.DefaultJwtBuilder: io.jsonwebtoken.JwtBuilder signWith(io.jsonwebtoken.SignatureAlgorithm,byte[])>
		SHA-256: 72c366f5ebfaa267b0b9f8cf4680d913190d9ccbd7e8f0feaa798c7281398744
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, $r5)
		Method: <io.jsonwebtoken.impl.DefaultJwtBuilder: io.jsonwebtoken.JwtBuilder signWith(io.jsonwebtoken.SignatureAlgorithm,byte[])>
		SHA-256: 4b8b3d98f5d9dfdf3fb51aac33e3e27987d1e79e9487f6325daa8d3d0829acd
		Secure: false
	Object:
		Variable: r162
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r162.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r123, $r42)
		Method: <io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>
		SHA-256: 4f17d838ab808f2e15be9c05a2fefd29a5341a4fb52b3ab747153d1c4026acab
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke r3.<java.security.Signature: byte[] sign()>()
		Method: <io.jsonwebtoken.impl.crypto.RsaSigner: byte[] doSign(byte[])>
		SHA-256: 869498408ca015d263bb584ec888d9c7f520de7894358cc59f3472fa588a30c5
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke r3.<java.security.Signature: byte[] sign()>()
		Method: <io.jsonwebtoken.impl.crypto.EllipticCurveSigner: byte[] doSign(byte[])>
		SHA-256: 8bffb2c12a2366ea88a05a25d75ed671a10736aa45b776f74607385b97715023
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <io.jsonwebtoken.impl.crypto.SignatureProvider: java.security.Signature getSignatureInstance()>
		SHA-256: 5245505faa1caa67a21a8f77bf7afcdbd914eeb8cbdcc06c6e02f21254765066
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <io.jsonwebtoken.impl.crypto.SignatureProvider: void <clinit>()>
		SHA-256: bd77c10f408e393bf6a88a9f259346bb12383ce9f5ef6237ca9f00f578063397
		Secure: true
	Object:
		Variable: r1
		Type: javax.crypto.Mac
		Statement: r1 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r3)
		Method: <io.jsonwebtoken.impl.crypto.MacSigner: javax.crypto.Mac doGetMacInstance()>
		SHA-256: a518ad31fa6e1fec9e7e9be6570da2f4e8beb6a8a214b03ec23c2dd21a4b4aa1
		Secure: true
	Object:
		Variable: r1
		Type: byte[]
		Statement: $r3 = virtualinvoke r2.<javax.crypto.Mac: byte[] doFinal(byte[])>(r1)
		Method: <io.jsonwebtoken.impl.crypto.MacSigner: byte[] sign(byte[])>
		SHA-256: e57c6735987e912139dbc359e82205beea9e5766b181f47b2812c62fbf98fbda
		Secure: true
	Object:
		Variable: r2
		Type: java.security.KeyPairGenerator
		Statement: r2 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(r0)
		Method: <io.jsonwebtoken.impl.crypto.RsaProvider: java.security.KeyPair generateKeyPair(java.lang.String,int,java.security.SecureRandom)>
		SHA-256: 99b791308a93369df9dbc4868f6d871ca75e9f79f3b2ecaceec87e03ee3477ff
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, $r4)
		Method: <io.jsonwebtoken.impl.crypto.MacSigner: void <init>(io.jsonwebtoken.SignatureAlgorithm,byte[])>
		SHA-256: b173018d6dd25984f16418fe52cbf35182383d127446448a92c8b82a52101d4b
		Secure: false
	Object:
		Variable: r17
		Type: java.security.KeyPairGenerator
		Statement: r17 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>(r0, r1)
		Method: <io.jsonwebtoken.impl.crypto.EllipticCurveProvider: java.security.KeyPair generateKeyPair(java.lang.String,java.lang.String,io.jsonwebtoken.SignatureAlgorithm,java.security.SecureRandom)>
		SHA-256: d959bdc9b4721e0fee6d9b6282747600180ee0add190cae47434822082a57056
		Secure: false
	Object:
		Variable: r2
		Type: javax.crypto.KeyGenerator
		Statement: r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>($r4)
		Method: <io.jsonwebtoken.impl.crypto.MacProvider: javax.crypto.SecretKey generateKey(io.jsonwebtoken.SignatureAlgorithm,java.security.SecureRandom)>
		SHA-256: 3d41876d17fbfeb54fefee4633bd1e210210ee387a29385c72e34bfead4ee3e3
		Secure: true
	Object:
		Variable: $r42
		Type: java.lang.String
		Statement: specialinvoke r162.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r123, $r42)
		Method: <io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>
		SHA-256: 3c203751258f67e7848b2a8d8e227b58ada4430ad8333ad2c356401fa0b5f0f7
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.KeyPair
		Statement: $r4 = virtualinvoke r2.<java.security.KeyPairGenerator: java.security.KeyPair genKeyPair()>()
		Method: <io.jsonwebtoken.impl.crypto.RsaProvider: java.security.KeyPair generateKeyPair(java.lang.String,int,java.security.SecureRandom)>
		SHA-256: a80ae97e7df752036419e8b51019a329beaadbb79c9989e426784f6ec39b3cbc
		Secure: true
	Object:
		Variable: $r4
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, $r4)
		Method: <io.jsonwebtoken.impl.crypto.MacSigner: void <init>(io.jsonwebtoken.SignatureAlgorithm,byte[])>
		SHA-256: 91e7234a8fb17aced46527dbcccee7d2992bbd371c08290deda57b70b3ec7611
		Secure: false
	Object:
		Variable: r17
		Type: java.security.KeyPairGenerator
		Statement: r17 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(r0)
		Method: <io.jsonwebtoken.impl.crypto.EllipticCurveProvider: java.security.KeyPair generateKeyPair(java.lang.String,java.lang.String,io.jsonwebtoken.SignatureAlgorithm,java.security.SecureRandom)>
		SHA-256: c21ae240777d4ab62846731215018d33b952251ff18f6a550771d9c6117dabde
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke r2.<javax.crypto.Mac: byte[] doFinal(byte[])>(r1)
		Method: <io.jsonwebtoken.impl.crypto.MacSigner: byte[] sign(byte[])>
		SHA-256: 3814d9a014c170798ca5e61a34ab149be06b6a749a7048e2d099de5860eaf114
		Secure: true
	Object:
		Variable: $r9
		Type: java.security.KeyPair
		Statement: $r9 = virtualinvoke r17.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <io.jsonwebtoken.impl.crypto.EllipticCurveProvider: java.security.KeyPair generateKeyPair(java.lang.String,java.lang.String,io.jsonwebtoken.SignatureAlgorithm,java.security.SecureRandom)>
		SHA-256: 669117648a860f69162ec634e18e94caf94e777df0178de978d8c1b6cbb2604f
		Secure: false

Findings in Java Class: io.jsonwebtoken.impl.DefaultJwtBuilder

	 in Method: io.jsonwebtoken.JwtBuilder signWith(io.jsonwebtoken.SignatureAlgorithm,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, $r5)


Findings in Java Class: io.jsonwebtoken.impl.DefaultJwtParser

	 in Method: io.jsonwebtoken.Jwt parse(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r162.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r123, $r42)


Findings in Java Class: io.jsonwebtoken.impl.crypto.MacSigner

	 in Method: void <init>(io.jsonwebtoken.SignatureAlgorithm,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, $r4)


Findings in Java Class: io.jsonwebtoken.impl.crypto.EllipticCurveProvider

	 in Method: java.security.KeyPair generateKeyPair(java.lang.String,java.lang.String,io.jsonwebtoken.SignatureAlgorithm,java.security.SecureRandom)
		RequiredPredicateError violating CrySL rule for java.security.KeyPairGenerator
			First parameter was not properly generated as prepared E C
			at statement: virtualinvoke r17.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>(r5, r3)


Findings in Java Class: io.jsonwebtoken.impl.crypto.RsaSigner

	 in Method: byte[] doSign(byte[])
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Privkey
			at statement: virtualinvoke r3.<java.security.Signature: void initSign(java.security.PrivateKey)>(r2)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 20

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 5
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 6 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 7.939 s

Current Proejct: joda-time-2.10.1.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 450.4 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 3.386 s

Current Proejct: mysql.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 612.7 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 9 analysis seeds within 1 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 10
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.1

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 10
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.2

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 10
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.3

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.36

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.45

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 12
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 14
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 15
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.53

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 20
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.45

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 20
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 20
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.55

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 20
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.6

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 20
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.65

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 14 of 20
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.7

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 15 of 20
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.75

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 16 of 20
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.8

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 17 of 20
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.85

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 18 of 20
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.9

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 19 of 20
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.95

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mysql.jdbc.Security: byte[] getBinaryPassword(int[],boolean)>
		SHA-256: 723e325d7905a984f116479e84235f37e40c3393ab7dd667c570976e971164fa
		Secure: false
	Object:
		Variable: r8
		Type: byte[]
		Statement: r8 = virtualinvoke r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mysql.jdbc.Security: byte[] scramble411(java.lang.String,java.lang.String,com.mysql.jdbc.Connection)>
		SHA-256: 160adb374fd82283a4b11ddb94a84967969b23da5a93d0a964125f5f182bfdca
		Secure: false
	Object:
		Variable: r131
		Type: java.security.KeyStore
		Statement: r131 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(r3)
		Method: <com.mysql.jdbc.ExportControlled: javax.net.ssl.SSLSocketFactory getSSLSocketFactoryDefaultOrConfigured(com.mysql.jdbc.MysqlIO)>
		SHA-256: d707234ad31dd09fc87664bc60597e1b352470f4676676848b262789a81b19dd
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r6 = virtualinvoke r1.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <com.mysql.jdbc.Security: byte[] passwordHashStage1(java.lang.String)>
		SHA-256: 3cea70b0ca760258019b48d753fb86391af7de3f54d97a6c67b7f3d711a7c835
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mysql.jdbc.Security: byte[] passwordHashStage2(byte[],byte[])>
		SHA-256: eb285260da66efae60abac64fdee1fe25288b6e9751c64f5dddb59cd3d89101
		Secure: false
	Object:
		Variable: r3
		Type: java.security.MessageDigest
		Statement: r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11016)
		Method: <com.mysql.jdbc.Security: byte[] scramble411(java.lang.String,java.lang.String,com.mysql.jdbc.Connection)>
		SHA-256: c0754392926d730b12f62e613c543a220e123925110a47fe3787e6b26ad6ada0
		Secure: false
	Object:
		Variable: r6
		Type: byte[]
		Statement: r6 = virtualinvoke r3.<java.security.MessageDigest: byte[] digest(byte[])>(r5)
		Method: <com.mysql.jdbc.Security: byte[] scramble411(java.lang.String,java.lang.String,com.mysql.jdbc.Connection)>
		SHA-256: 657c65f77c5959d4c76bdd626de086a02658a677ebcc40ecb67dee9add08d219
		Secure: false
	Object:
		Variable: r2
		Type: java.security.MessageDigest
		Statement: r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11010)
		Method: <com.mysql.jdbc.Security: byte[] passwordHashStage2(byte[],byte[])>
		SHA-256: ed5f986192324f438250cfbe57013d54cd4f062ba896d469a5793f88a00ca24
		Secure: false
	Object:
		Variable: $r150
		Type: java.lang.Object[]
		Statement: $r150 = virtualinvoke r128.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <com.mysql.jdbc.ExportControlled: javax.net.ssl.SSLSocketFactory getSSLSocketFactoryDefaultOrConfigured(com.mysql.jdbc.MysqlIO)>
		SHA-256: 14ed8cadb8a342dcb190e0984020b7ef46d9f1f455aff07129746cba27e1da31
		Secure: false
	Object:
		Variable: r139
		Type: java.security.KeyStore
		Statement: r139 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(r5)
		Method: <com.mysql.jdbc.ExportControlled: javax.net.ssl.SSLSocketFactory getSSLSocketFactoryDefaultOrConfigured(com.mysql.jdbc.MysqlIO)>
		SHA-256: c249ee9d3e65a18a3d520486fc86e7bc746d20bbe6ae6512411d1461ee5edb50
		Secure: false
	Object:
		Variable: r128
		Type: javax.net.ssl.TrustManagerFactory
		Statement: r128 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r127)
		Method: <com.mysql.jdbc.ExportControlled: javax.net.ssl.SSLSocketFactory getSSLSocketFactoryDefaultOrConfigured(com.mysql.jdbc.MysqlIO)>
		SHA-256: d7adc1a7fdaf161e0ddb10c04e3e027db4db58456774aaf812f0ee343534090e
		Secure: false
	Object:
		Variable: r147
		Type: javax.net.ssl.SSLContext
		Statement: r147 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer7006)
		Method: <com.mysql.jdbc.ExportControlled: javax.net.ssl.SSLSocketFactory getSSLSocketFactoryDefaultOrConfigured(com.mysql.jdbc.MysqlIO)>
		SHA-256: 72899d3660e0ff9b07f33ff560a1a34e2fa02a6fd214b22e5a399a9979d48f2
		Secure: false
	Object:
		Variable: r130
		Type: javax.net.ssl.KeyManagerFactory
		Statement: r130 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r129)
		Method: <com.mysql.jdbc.ExportControlled: javax.net.ssl.SSLSocketFactory getSSLSocketFactoryDefaultOrConfigured(com.mysql.jdbc.MysqlIO)>
		SHA-256: 8cd1d7ffc8967227ef9bacadc92378969b12f417575aa47c082fcf225d584179
		Secure: false
	Object:
		Variable: r3
		Type: java.security.MessageDigest
		Statement: r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11002)
		Method: <com.mysql.jdbc.Security: byte[] getBinaryPassword(int[],boolean)>
		SHA-256: 1feb8efd563043f9a16c21ce94827c4bcbfff997bf7e2b4347e0da572403dfe9
		Secure: false
	Object:
		Variable: r5
		Type: byte[]
		Statement: r6 = virtualinvoke r3.<java.security.MessageDigest: byte[] digest(byte[])>(r5)
		Method: <com.mysql.jdbc.Security: byte[] scramble411(java.lang.String,java.lang.String,com.mysql.jdbc.Connection)>
		SHA-256: b9a64d2388aaf667e204933fa754fdfe724156f81aaafe25feeed9331770513
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke r1.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <com.mysql.jdbc.Security: byte[] passwordHashStage1(java.lang.String)>
		SHA-256: 30e71443fe232cdb7c6a6a73f31ad3fc2a94c54b310b101158f209cd468e2352
		Secure: false
	Object:
		Variable: $r149
		Type: javax.net.ssl.KeyManager[]
		Statement: $r149 = virtualinvoke r130.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <com.mysql.jdbc.ExportControlled: javax.net.ssl.SSLSocketFactory getSSLSocketFactoryDefaultOrConfigured(com.mysql.jdbc.MysqlIO)>
		SHA-256: 4e47afebb2aec9edadae292a4ce5867f9d8af807095ee4297aabc355eb09c9eb
		Secure: false
	Object:
		Variable: r1
		Type: java.security.MessageDigest
		Statement: r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11009)
		Method: <com.mysql.jdbc.Security: byte[] passwordHashStage1(java.lang.String)>
		SHA-256: 58db790ec72e570927ebd1108bd16a5358c6b9d1770bc35c3c333eaf71f0088e
		Secure: false
	Object:
		Variable: r5
		Type: byte[]
		Statement: r5 = virtualinvoke r3.<java.security.MessageDigest: byte[] digest(byte[])>($r10)
		Method: <com.mysql.jdbc.Security: byte[] scramble411(java.lang.String,java.lang.String,com.mysql.jdbc.Connection)>
		SHA-256: da07fb6f93391f716b4fe601028b026f43606a01f247d43aa86299b9039b8560
		Secure: false
	Object:
		Variable: $r10
		Type: byte[]
		Statement: r5 = virtualinvoke r3.<java.security.MessageDigest: byte[] digest(byte[])>($r10)
		Method: <com.mysql.jdbc.Security: byte[] scramble411(java.lang.String,java.lang.String,com.mysql.jdbc.Connection)>
		SHA-256: 17110fef47196d2d80bdd16dfacc4c0d5f7bbaca4fc366c386648aa5d3e4e09a
		Secure: false

Findings in Java Class: com.mysql.jdbc.ExportControlled

	 in Method: javax.net.ssl.SSLSocketFactory getSSLSocketFactoryDefaultOrConfigured(com.mysql.jdbc.MysqlIO)
		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #8cd1d7ffc8967227ef9bacadc92378969b12f417575aa47c082fcf225d584179)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r130.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r131, r134)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r147.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r149, r173, varReplacer7032)

		IncompleteOperationError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #8cd1d7ffc8967227ef9bacadc92378969b12f417575aa47c082fcf225d584179)
			Operation on object of type javax.net.ssl.KeyManagerFactory object not completed. Expected call to init
			at statement: r130 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r129)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #c249ee9d3e65a18a3d520486fc86e7bc746d20bbe6ae6512411d1461ee5edb50)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r139.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r16, r142)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #d707234ad31dd09fc87664bc60597e1b352470f4676676848b262789a81b19dd)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r131.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r18, r134)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r147.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r149, r173, varReplacer7032)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r128.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(r139)

		IncompleteOperationError violating CrySL rule for javax.net.ssl.TrustManagerFactory (on Object #d7adc1a7fdaf161e0ddb10c04e3e027db4db58456774aaf812f0ee343534090e)
			Operation on object of type javax.net.ssl.TrustManagerFactory object not completed. Expected call to javax.net.ssl.TrustManagerFactory: void init(javax.net.ssl.ManagerFactoryParameters), javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)
			at statement: virtualinvoke r128.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(r139)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #c249ee9d3e65a18a3d520486fc86e7bc746d20bbe6ae6512411d1461ee5edb50)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r139.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r16, r142)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #8cd1d7ffc8967227ef9bacadc92378969b12f417575aa47c082fcf225d584179)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r130.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r131, r134)

		IncompleteOperationError violating CrySL rule for javax.net.ssl.TrustManagerFactory (on Object #d7adc1a7fdaf161e0ddb10c04e3e027db4db58456774aaf812f0ee343534090e)
			Operation on object of type javax.net.ssl.TrustManagerFactory object not completed. Expected call to init
			at statement: r128 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r127)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #72899d3660e0ff9b07f33ff560a1a34e2fa02a6fd214b22e5a399a9979d48f2)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: r147 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer7006)

		TypestateError violating CrySL rule for javax.net.ssl.TrustManagerFactory (on Object #d7adc1a7fdaf161e0ddb10c04e3e027db4db58456774aaf812f0ee343534090e)
			Unexpected call to method getTrustManagers on object of type javax.net.ssl.TrustManagerFactory. Expect a call to one of the following methods init
			at statement: $r150 = virtualinvoke r128.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()

		IncompleteOperationError violating CrySL rule for javax.net.ssl.TrustManagerFactory (on Object #d7adc1a7fdaf161e0ddb10c04e3e027db4db58456774aaf812f0ee343534090e)
			Operation on object of type javax.net.ssl.TrustManagerFactory object not completed. Expected call to init
			at statement: $r150 = virtualinvoke r128.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()

		TypestateError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #8cd1d7ffc8967227ef9bacadc92378969b12f417575aa47c082fcf225d584179)
			Unexpected call to method getKeyManagers on object of type javax.net.ssl.KeyManagerFactory. Expect a call to one of the following methods init
			at statement: $r149 = virtualinvoke r130.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()

		IncompleteOperationError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #8cd1d7ffc8967227ef9bacadc92378969b12f417575aa47c082fcf225d584179)
			Operation on object of type javax.net.ssl.KeyManagerFactory object not completed. Expected call to init
			at statement: $r149 = virtualinvoke r130.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #d707234ad31dd09fc87664bc60597e1b352470f4676676848b262789a81b19dd)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r131.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r18, r134)

		IncompleteOperationError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #8cd1d7ffc8967227ef9bacadc92378969b12f417575aa47c082fcf225d584179)
			Operation on object of type javax.net.ssl.KeyManagerFactory object not completed. Expected call to javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[]), javax.net.ssl.KeyManagerFactory: void init(javax.net.ssl.ManagerFactoryParameters)
			at statement: virtualinvoke r130.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r131, r134)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r130.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r131, r134)


Findings in Java Class: com.mysql.jdbc.Security

	 in Method: byte[] getBinaryPassword(int[],boolean)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #1feb8efd563043f9a16c21ce94827c4bcbfff997bf7e2b4347e0da572403dfe9)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11002)


	 in Method: byte[] passwordHashStage1(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #58db790ec72e570927ebd1108bd16a5358c6b9d1770bc35c3c333eaf71f0088e)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11009)


	 in Method: byte[] passwordHashStage2(byte[],byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ed5f986192324f438250cfbe57013d54cd4f062ba896d469a5793f88a00ca24)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11010)


	 in Method: byte[] scramble411(java.lang.String,java.lang.String,com.mysql.jdbc.Connection)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #c0754392926d730b12f62e613c543a220e123925110a47fe3787e6b26ad6ada0)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11016)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 20

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 4
	IncompleteOperationError: 6
	NeverTypeOfError: 6
	ConstraintError: 5
	TypestateError: 2
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 2 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 7.378 s

Current Proejct: jersey-media-multipart-2.27.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 478.4 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.313 s

Current Proejct: maven-artifact-3.0.5.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 448.8 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.331 s

Current Proejct: async-http-client-1.9.40.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 652.2 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 19 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 19
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.05

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 19
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.11

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 19
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.16

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 21
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.19

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.22

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 27
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.22

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 29
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.24

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.27

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 31
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.29

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.3

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 35
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.31

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 36
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 36
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.36

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 14 of 36
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.39

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 15 of 37
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.41

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 16 of 39
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.41

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 17 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.41

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 18 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.44

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 19 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.46

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 20 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.49

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 21 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.51

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 22 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.54

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 23 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.56

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 24 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.59

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 25 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.61

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 26 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.63

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 27 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.66

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 28 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.68

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 29 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.71

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 30 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.73

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 31 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.76

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 32 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.78

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 33 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.8

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 34 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.83

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 35 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.85

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 36 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.88

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 37 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.9

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 38 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.93

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 39 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.95

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 40 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.98

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r17
		Type: javax.crypto.Cipher
		Statement: r17 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer730)
		Method: <com.ning.http.client.ntlm.NTLMEngine$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: f4d3f67d1f2b1717635525b370a5e6c1f094df1ae25bfa99235f54d46706eba6
		Secure: false
	Object:
		Variable: varReplacer900
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer900)
		Method: <com.ning.http.client.ntlm.NTLMEngine: java.security.Key createDESKey(byte[],int)>
		SHA-256: 518e5d32c9f39b08aa9a26a7710d243c9c13ae66839f73e723aaff7d0380de2b
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer900)
		Method: <com.ning.http.client.ntlm.NTLMEngine: java.security.Key createDESKey(byte[],int)>
		SHA-256: 7af2f1d4739cb2d973b2f80d3aa0bee2aa9577826d31f78aeba0b35b72b98bba
		Secure: false
	Object:
		Variable: r8
		Type: javax.net.ssl.SSLContext
		Statement: r8 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2664)
		Method: <com.ning.http.util.SslUtils: javax.net.ssl.SSLContext looseTrustManagerSSLContext()>
		SHA-256: aae18fb653b769da9aad191f12224a477bd9b3442893abe5c594f0389fb6de52
		Secure: false
	Object:
		Variable: $r13
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r4, varReplacer971)
		Method: <com.ning.http.client.oauth.ThreadSafeHMAC: void <init>(com.ning.http.client.oauth.ConsumerKey,com.ning.http.client.oauth.RequestToken)>
		SHA-256: dd4ead6a040feeabbd0d0feda0ef42073aa0edef5f952d40580ed2c2e733ecd6
		Secure: false
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r1 = virtualinvoke r4.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <com.ning.http.client.providers.netty.ws.WebSocketUtils: byte[] sha1(byte[])>
		SHA-256: f029cf889818b084b3408323cb543b03816f0896fbc8aceac7d6d85a3a0f0f26
		Secure: false
	Object:
		Variable: r5
		Type: byte[]
		Statement: r5 = virtualinvoke r18.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r3)
		Method: <com.ning.http.client.ntlm.NTLMEngine$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: aa5353ee4452b030972e34dc7e0c077967e01c6d78da008986a3c9fd8de60249
		Secure: false
	Object:
		Variable: r5
		Type: byte[]
		Statement: r5 = virtualinvoke r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r11)
		Method: <com.ning.http.client.ntlm.NTLMEngine: byte[] lmHash(java.lang.String)>
		SHA-256: a269dcd1e86585d3b2c9afc6cf3677cdf2fd38f2472e6e23a72c1095ba8245d4
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer735)
		Method: <com.ning.http.client.ntlm.NTLMEngine$HMACMD5: void <init>(byte[])>
		SHA-256: 48595c2e2f12f16f57a9fa45ce90ce937d721045665a6201d196ecf1652f7706
		Secure: false
	Object:
		Variable: r10
		Type: java.security.MessageDigest
		Statement: r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer847)
		Method: <com.ning.http.client.ntlm.NTLMEngine: byte[] ntlm2SessionResponse(byte[],byte[],byte[])>
		SHA-256: 93c976a5647fa2d0e9ec2ad703d5be0623fa9ddbc6f25d42c1460759c52c11f6
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer845)
		Method: <com.ning.http.client.ntlm.NTLMEngine: byte[] RC4(byte[],byte[])>
		SHA-256: a69102c4d992099cfff2a0846e4ed6b91e2e4599c465a4a984afc445d0226c8e
		Secure: false
	Object:
		Variable: r21
		Type: byte[]
		Statement: r21 = virtualinvoke $r13.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.ning.http.client.ntlm.NTLMEngine$HMACMD5: void <init>(byte[])>
		SHA-256: 798fb3e7da4699d367d37887969ca9f204c8fe01a1a70d74a7b9e96fa77b9fa9
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: r6 = virtualinvoke r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r1)
		Method: <com.ning.http.client.ntlm.NTLMEngine: byte[] lmResponse(byte[],byte[])>
		SHA-256: bd6ab2840d512e39334cd0c2df7f05ddc923e7402ab1e58da7098f243ce0ee18
		Secure: false
	Object:
		Variable: r12
		Type: java.security.SecureRandom
		Statement: specialinvoke r12.<java.security.SecureRandom: void <init>()>()
		Method: <com.ning.http.util.SslUtils: javax.net.ssl.SSLContext looseTrustManagerSSLContext()>
		SHA-256: 78e58e6d93cb703f25fed36d555c3f0fd57afe07474c05462470c70292cb0ada
		Secure: true
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r1 = virtualinvoke r4.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <com.ning.http.client.providers.netty.ws.WebSocketUtils: byte[] md5(byte[])>
		SHA-256: 255c42bda76696cef20743ff59fc2df030f28315b212eac2d03667fcacd0d59a
		Secure: false
	Object:
		Variable: varReplacer845
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer845)
		Method: <com.ning.http.client.ntlm.NTLMEngine: byte[] RC4(byte[],byte[])>
		SHA-256: 2d25cc9465d1f6f5a936d40b4289cb370e4056d48d9fe9d059ebe5308675f7e
		Secure: false
	Object:
		Variable: r15
		Type: java.security.SecureRandom
		Statement: r15 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer904)
		Method: <com.ning.http.client.ntlm.NTLMEngine: void <clinit>()>
		SHA-256: a47d0a08a2257ad083233f817a4d0a31a77e001b0d29ac0b00848f2292999d83
		Secure: true
	Object:
		Variable: r5
		Type: javax.crypto.Cipher
		Statement: r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer883)
		Method: <com.ning.http.client.ntlm.NTLMEngine: byte[] lmResponse(byte[],byte[])>
		SHA-256: c2a4bed2cf428e579f87ce24241d67ba0c60c36ffcc52c43466cb2226d28d187
		Secure: false
	Object:
		Variable: r3
		Type: byte[]
		Statement: r3 = virtualinvoke r10.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.ning.http.client.ntlm.NTLMEngine: byte[] ntlm2SessionResponse(byte[],byte[],byte[])>
		SHA-256: cde9dd74346a7fde1ccde6b6dbd2cc35ae2bbdc8021f3fc387f8d1101ba8df3f
		Secure: false
	Object:
		Variable: r4
		Type: byte[]
		Statement: r4 = virtualinvoke r17.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r3)
		Method: <com.ning.http.client.ntlm.NTLMEngine$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: 1070351e8d5c09b56546611ecd41f6a98e84826df51c3437ec79263c84ab93f4
		Secure: false
	Object:
		Variable: r3
		Type: byte[]
		Statement: r4 = virtualinvoke r17.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r3)
		Method: <com.ning.http.client.ntlm.NTLMEngine$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: c9def1fc98f3e0f6b2f976dc8e8b38eeb42df3faa0b8904f87c308b3544e5c69
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke r4.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <com.ning.http.client.providers.netty.ws.WebSocketUtils: byte[] sha1(byte[])>
		SHA-256: 3e0edba0fd42722b87eab4928a18bc94b9e05c09e9642626d1c63376d11c5fef
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke r4.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <com.ning.http.client.providers.netty.ws.WebSocketUtils: byte[] md5(byte[])>
		SHA-256: 30366f0bdf226c52705279d85be74ed6bde549c99f5b6fa0018070867b3726c3
		Secure: false
	Object:
		Variable: r27
		Type: java.security.SecureRandom
		Statement: specialinvoke r27.<java.security.SecureRandom: void <init>()>()
		Method: <com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider: void main(java.lang.String[])>
		SHA-256: 43a51db865a9bb4b3acccc0eaeef1311eea0a99b295cabadce09859ffc584013
		Secure: true
	Object:
		Variable: r4
		Type: java.security.MessageDigest
		Statement: r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2382)
		Method: <com.ning.http.client.providers.netty.ws.WebSocketUtils: byte[] md5(byte[])>
		SHA-256: 4fb741cbf79d3f7b3828dd7b08b53542fcfd7c77086edfc7c7cfcd228b04eefc
		Secure: false
	Object:
		Variable: r3
		Type: byte[]
		Statement: r5 = virtualinvoke r18.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r3)
		Method: <com.ning.http.client.ntlm.NTLMEngine$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: 60ecd8b3721fa03578ef1834ba6c94551a4aea2502c5464f09d1e50d5f68107f
		Secure: false
	Object:
		Variable: r7
		Type: javax.crypto.Cipher
		Statement: r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer844)
		Method: <com.ning.http.client.ntlm.NTLMEngine: byte[] RC4(byte[],byte[])>
		SHA-256: 893a15a04e775907f29d4e290881206cfcb976dc7a53ba4691415a6d45925780
		Secure: false
	Object:
		Variable: r4
		Type: java.security.MessageDigest
		Statement: r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2384)
		Method: <com.ning.http.client.providers.netty.ws.WebSocketUtils: byte[] sha1(byte[])>
		SHA-256: c7923665696ab25aac7dc7ace961e60bcffa199ef5047aa837408a6e07539e28
		Secure: false
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r3 = virtualinvoke r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r0)
		Method: <com.ning.http.client.ntlm.NTLMEngine: byte[] RC4(byte[],byte[])>
		SHA-256: e464a94471e22f4ca59c6f7deb3d03b3bdebb7f4d2b529cc654c559a723e5e1c
		Secure: false
	Object:
		Variable: r18
		Type: javax.crypto.Cipher
		Statement: r18 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer718)
		Method: <com.ning.http.client.ntlm.NTLMEngine$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: e6a697e19b1295cb27067d1d865a6d9050832df177865a437011246e2c7d57b2
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r0)
		Method: <com.ning.http.client.ntlm.NTLMEngine: byte[] RC4(byte[],byte[])>
		SHA-256: 8753042ece2efacfa375c3108aee673622e64963a556c6fe2b6d65c7157e9208
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>(r1)
		Method: <com.ning.http.client.ntlm.NTLMEngine$HMACMD5: byte[] getOutput()>
		SHA-256: 99b0649cc949d2e3ffd635b673790ed58bd61f6647e4ebec532f022333d3d8fe
		Secure: false
	Object:
		Variable: $r14
		Type: javax.crypto.Mac
		Statement: $r14 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer970)
		Method: <com.ning.http.client.oauth.ThreadSafeHMAC: void <init>(com.ning.http.client.oauth.ConsumerKey,com.ning.http.client.oauth.RequestToken)>
		SHA-256: 48749db6c6c0408793436fd5e234122e61dbdeef92685b2c4355dc59cf3db1fc
		Secure: false
	Object:
		Variable: r16
		Type: javax.net.ssl.SSLContext
		Statement: r16 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer5)
		Method: <com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider: void main(java.lang.String[])>
		SHA-256: 2b8ab8db2a5f1f2895ef3f25875a6ea69cf76eae48ad86a668163005da56af75
		Secure: false
	Object:
		Variable: varReplacer971
		Type: java.lang.String
		Statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r4, varReplacer971)
		Method: <com.ning.http.client.oauth.ThreadSafeHMAC: void <init>(com.ning.http.client.oauth.ConsumerKey,com.ning.http.client.oauth.RequestToken)>
		SHA-256: 48bfad496c24a3c84181eae68d49e941e45701ebd2ccad52f18c3236bff44125
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.ning.http.client.ntlm.NTLMEngine$HMACMD5: byte[] getOutput()>
		SHA-256: 2cf17cd0d2c68959db744882ce686872637f4af0b78b02f34b1bb2557f9a3b0f
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer208)
		Method: <com.ning.http.client.Realm$RealmBuilder$1: java.security.MessageDigest initialValue()>
		SHA-256: d2dc4d979a4afc1a221f429d71e4d1099a852e889236e69427fbe43fc61daa2b
		Secure: false
	Object:
		Variable: r4
		Type: javax.crypto.Cipher
		Statement: r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer860)
		Method: <com.ning.http.client.ntlm.NTLMEngine: byte[] lmHash(java.lang.String)>
		SHA-256: 52703eb2446a38f677bbc4f93cdf7073cb21a63c7e0f70aa52f49928037af489
		Secure: false
	Object:
		Variable: $r11
		Type: byte[]
		Statement: r5 = virtualinvoke r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r11)
		Method: <com.ning.http.client.ntlm.NTLMEngine: byte[] lmHash(java.lang.String)>
		SHA-256: d73c9a2d9728bcbf6b9e9b8ee8fe98f4016d476bd0129a55a0a6c182c16781af
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: $r6 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>(r1)
		Method: <com.ning.http.client.ntlm.NTLMEngine$HMACMD5: byte[] getOutput()>
		SHA-256: f44d77923bb6ac45ea69b70559910c68782cc85ec0e6069a6fe5180a0b331c57
		Secure: false
	Object:
		Variable: r6
		Type: byte[]
		Statement: r6 = virtualinvoke r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r1)
		Method: <com.ning.http.client.ntlm.NTLMEngine: byte[] lmResponse(byte[],byte[])>
		SHA-256: b3b41d29af2b1ac0db53274baef126603fecc571cc7a4aa1d56ef82d4d136ba2
		Secure: false

Findings in Java Class: com.ning.http.util.SslUtils

	 in Method: javax.net.ssl.SSLContext getSSLContext(com.ning.http.client.AsyncHttpClientConfig)
		ForbiddenMethodError violating CrySL rule for javax.net.ssl.SSLContext
			Detected call to forbidden method javax.net.ssl.SSLContext getDefault() of class javax.net.ssl.SSLContext. Instead, call method <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>.
			at statement: $r9 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getDefault()>()


	 in Method: javax.net.ssl.SSLContext looseTrustManagerSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #aae18fb653b769da9aad191f12224a477bd9b3442893abe5c594f0389fb6de52)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: r8 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2664)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r8.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2665, r15, r12)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r8.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2665, r15, r12)


Findings in Java Class: com.ning.http.client.providers.grizzly.GrizzlyAsyncHttpProvider

	 in Method: void main(java.lang.String[])
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r16.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1, varReplacer1, r1)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r16.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1, varReplacer1, r1)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #2b8ab8db2a5f1f2895ef3f25875a6ea69cf76eae48ad86a668163005da56af75)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: r16 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer5)


Findings in Java Class: com.ning.http.client.Realm$RealmBuilder$1

	 in Method: java.security.MessageDigest initialValue()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #d2dc4d979a4afc1a221f429d71e4d1099a852e889236e69427fbe43fc61daa2b)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer208)


	 in Method: java.lang.Object initialValue()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #d2dc4d979a4afc1a221f429d71e4d1099a852e889236e69427fbe43fc61daa2b)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: return $r1


Findings in Java Class: com.ning.http.client.ntlm.NTLMEngine$CipherGen

	 in Method: byte[] getLanManagerSessionKey()
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #f4d3f67d1f2b1717635525b370a5e6c1f094df1ae25bfa99235f54d46706eba6)
			First parameter (with value "DES/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r17 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer730)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r17.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer728, r1)


Findings in Java Class: com.ning.http.client.ntlm.NTLMEngine$HMACMD5

	 in Method: void <init>(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #48595c2e2f12f16f57a9fa45ce90ce937d721045665a6201d196ecf1652f7706)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer735)


Findings in Java Class: com.ning.http.client.ntlm.NTLMEngine

	 in Method: byte[] RC4(byte[],byte[])
		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #a69102c4d992099cfff2a0846e4ed6b91e2e4599c465a4a984afc445d0226c8e)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer845)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer845)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #a69102c4d992099cfff2a0846e4ed6b91e2e4599c465a4a984afc445d0226c8e)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer845)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer846, $r2)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #a69102c4d992099cfff2a0846e4ed6b91e2e4599c465a4a984afc445d0226c8e)
			Second parameter (with value "RC4") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer845)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #893a15a04e775907f29d4e290881206cfcb976dc7a53ba4691415a6d45925780)
			First parameter (with value "RC4") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer844)


	 in Method: byte[] ntlm2SessionResponse(byte[],byte[],byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #93c976a5647fa2d0e9ec2ad703d5be0623fa9ddbc6f25d42c1460759c52c11f6)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer847)


	 in Method: byte[] lmHash(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer861, r3)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #52703eb2446a38f677bbc4f93cdf7073cb21a63c7e0f70aa52f49928037af489)
			Unexpected call to method init on object of type javax.crypto.Cipher.
			at statement: virtualinvoke r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer861, r3)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #52703eb2446a38f677bbc4f93cdf7073cb21a63c7e0f70aa52f49928037af489)
			First parameter (with value "DES/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer860)


	 in Method: byte[] lmResponse(byte[],byte[])
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #c2a4bed2cf428e579f87ce24241d67ba0c60c36ffcc52c43466cb2226d28d187)
			Unexpected call to method init on object of type javax.crypto.Cipher.
			at statement: virtualinvoke r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer868, r3)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #c2a4bed2cf428e579f87ce24241d67ba0c60c36ffcc52c43466cb2226d28d187)
			First parameter (with value "DES/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer883)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer882, r4)


	 in Method: java.security.Key createDESKey(byte[],int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer900)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #7af2f1d4739cb2d973b2f80d3aa0bee2aa9577826d31f78aeba0b35b72b98bba)
			Second parameter (with value "DES") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer900)


Findings in Java Class: com.ning.http.client.oauth.OAuthSignatureCalculator

	 in Method: void <init>(com.ning.http.client.oauth.ConsumerKey,com.ning.http.client.oauth.RequestToken)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #48749db6c6c0408793436fd5e234122e61dbdeef92685b2c4355dc59cf3db1fc)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: specialinvoke $r3.<com.ning.http.client.oauth.ThreadSafeHMAC: void <init>(com.ning.http.client.oauth.ConsumerKey,com.ning.http.client.oauth.RequestToken)>(r1, r2)


Findings in Java Class: com.ning.http.client.oauth.ThreadSafeHMAC

	 in Method: void <init>(com.ning.http.client.oauth.ConsumerKey,com.ning.http.client.oauth.RequestToken)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r4, varReplacer971)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #dd4ead6a040feeabbd0d0feda0ef42073aa0edef5f952d40580ed2c2e733ecd6)
			Second parameter (with value "HmacSHA1") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r4, varReplacer971)


Findings in Java Class: com.ning.http.client.providers.netty.ws.WebSocketUtils

	 in Method: byte[] md5(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #4fb741cbf79d3f7b3828dd7b08b53542fcfd7c77086edfc7c7cfcd228b04eefc)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2382)


	 in Method: byte[] sha1(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #c7923665696ab25aac7dc7ace961e60bcffa199ef5047aa837408a6e07539e28)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2384)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 41

	CogniCrypt found the following violations. For details see description above.
	NeverTypeOfError: 2
	ForbiddenMethodError: 1
	TypestateError: 2
	ConstraintError: 14
	IncompleteOperationError: 2
	RequiredPredicateError: 11
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 11 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 14.05 s

Current Proejct: distributedlog-core-4.10.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 607.6 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 1 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 1 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 4.170 s

Current Proejct: aspectjrt-1.9.2.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 423.6 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.592 s

Current Proejct: netty-tcnative-boringssl-static-2.0.26.Final.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 398.2 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.130 s

Current Proejct: zstd-jni-1.3.7-3.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 417.1 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.269 s

Current Proejct: commons-httpclient.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 518.2 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 4 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 12
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.08

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 14
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.14

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 16
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.19

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.24

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.29

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.35

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.41

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.47

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.53

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.59

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.65

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.71

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.76

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 14 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.82

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 15 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.88

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 16 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.94

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: $r81
		Type: byte[]
		Statement: $r82 = virtualinvoke r9.<java.security.MessageDigest: byte[] digest(byte[])>($r81)
		Method: <org.apache.commons.httpclient.auth.DigestScheme: java.lang.String createDigest(java.lang.String,java.lang.String)>
		SHA-256: 4a48774724a93bb8c96ac89ca705513c0cf6f13c80b8038f90c534dfcc54fb00
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke r1.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <org.apache.commons.httpclient.auth.DigestScheme: java.lang.String createCnonce()>
		SHA-256: 49279efe36cfbce5e89fae4ce3d77da6f81597be6bc85837de7f6fd4708ab7a9
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r10, varReplacer2058)
		Method: <org.apache.commons.httpclient.auth.NTLM: javax.crypto.Cipher getCipher(byte[])>
		SHA-256: fbdf004ec925a9577e1135171f692e4b8850c9056f8f336a45f843edcb450a03
		Secure: false
	Object:
		Variable: $r82
		Type: byte[]
		Statement: $r82 = virtualinvoke r9.<java.security.MessageDigest: byte[] digest(byte[])>($r81)
		Method: <org.apache.commons.httpclient.auth.DigestScheme: java.lang.String createDigest(java.lang.String,java.lang.String)>
		SHA-256: 8f9350673163056cda0429edf7d63751211f26fbb94eecd5b1cb6efaaec44502
		Secure: false
	Object:
		Variable: r9
		Type: java.security.MessageDigest
		Statement: r9 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1972)
		Method: <org.apache.commons.httpclient.auth.DigestScheme: java.lang.String createDigest(java.lang.String,java.lang.String)>
		SHA-256: 8ec408f19bc91f3944503b1723b70ef06c372d0cd67a7eb04601f5ac3515276a
		Secure: false
	Object:
		Variable: $r24
		Type: byte[]
		Statement: $r24 = virtualinvoke r9.<java.security.MessageDigest: byte[] digest(byte[])>($r23)
		Method: <org.apache.commons.httpclient.auth.DigestScheme: java.lang.String createDigest(java.lang.String,java.lang.String)>
		SHA-256: c5eeb8a21720b699f7376c6811eebfd093311141142f58a123b9c0628707839d
		Secure: false
	Object:
		Variable: $r23
		Type: byte[]
		Statement: $r24 = virtualinvoke r9.<java.security.MessageDigest: byte[] digest(byte[])>($r23)
		Method: <org.apache.commons.httpclient.auth.DigestScheme: java.lang.String createDigest(java.lang.String,java.lang.String)>
		SHA-256: 9b83413faf38dbce757cbe4c9757d470b7f50d1e91128ae27dc90a82df87cb68
		Secure: false
	Object:
		Variable: r1
		Type: java.security.MessageDigest
		Statement: r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2005)
		Method: <org.apache.commons.httpclient.auth.DigestScheme: java.lang.String createCnonce()>
		SHA-256: 4a642ed7c171c9b41463723f663bc27ce57c67f4b447b0ca4e0a4b6fb596318a
		Secure: false
	Object:
		Variable: r8
		Type: byte[]
		Statement: r8 = virtualinvoke r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r2)
		Method: <org.apache.commons.httpclient.auth.NTLM: byte[] encrypt(byte[],byte[])>
		SHA-256: bd265b394300b77ddc92cf6ff5f22baaae91897ea8788637237fdecf7f2011a
		Secure: false
	Object:
		Variable: $r61
		Type: byte[]
		Statement: $r61 = virtualinvoke r9.<java.security.MessageDigest: byte[] digest(byte[])>($r60)
		Method: <org.apache.commons.httpclient.auth.DigestScheme: java.lang.String createDigest(java.lang.String,java.lang.String)>
		SHA-256: 10c7446279881755ff4ab5feff7d36b4f409bb645c9e8c4b793b99dd3e0b3feb
		Secure: false
	Object:
		Variable: varReplacer2058
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r10, varReplacer2058)
		Method: <org.apache.commons.httpclient.auth.NTLM: javax.crypto.Cipher getCipher(byte[])>
		SHA-256: e966798546c0e28783dfd502cea17ae79071490cec718d8c8d6a4b07007cf92c
		Secure: false
	Object:
		Variable: $r60
		Type: byte[]
		Statement: $r61 = virtualinvoke r9.<java.security.MessageDigest: byte[] digest(byte[])>($r60)
		Method: <org.apache.commons.httpclient.auth.DigestScheme: java.lang.String createDigest(java.lang.String,java.lang.String)>
		SHA-256: 51cdf56ca62447d324bbe8fdedccdfe3b1a85172ebfae73ebec48438bdc45e12
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r5 = virtualinvoke r1.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <org.apache.commons.httpclient.auth.DigestScheme: java.lang.String createCnonce()>
		SHA-256: ad2aad47d38e36e8e4b531880f371a5107b9c2e9e2fb8cba8ac7a2575abad356
		Secure: false
	Object:
		Variable: $r88
		Type: byte[]
		Statement: $r89 = virtualinvoke r9.<java.security.MessageDigest: byte[] digest(byte[])>($r88)
		Method: <org.apache.commons.httpclient.auth.DigestScheme: java.lang.String createDigest(java.lang.String,java.lang.String)>
		SHA-256: 1f21d079438d0806fa3384120d1a0dfc3605e198d8b6410c50c70865b97b4465
		Secure: false
	Object:
		Variable: r2
		Type: byte[]
		Statement: r8 = virtualinvoke r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r2)
		Method: <org.apache.commons.httpclient.auth.NTLM: byte[] encrypt(byte[],byte[])>
		SHA-256: d140285075be76cea6460350db3f3a6466a028470925b4aa96de138e4c7a9226
		Secure: false
	Object:
		Variable: r9
		Type: javax.crypto.Cipher
		Statement: r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2057)
		Method: <org.apache.commons.httpclient.auth.NTLM: javax.crypto.Cipher getCipher(byte[])>
		SHA-256: 2428a91187d162c7b6945efac723d02f35919d2a728d2d6d519a75eaba0dd45e
		Secure: false
	Object:
		Variable: $r89
		Type: byte[]
		Statement: $r89 = virtualinvoke r9.<java.security.MessageDigest: byte[] digest(byte[])>($r88)
		Method: <org.apache.commons.httpclient.auth.DigestScheme: java.lang.String createDigest(java.lang.String,java.lang.String)>
		SHA-256: ede6a96c8c1e9db7f2e49ed65bd17f243ee9be0f199eeaef4146837a3fdbf75f
		Secure: false

Findings in Java Class: org.apache.commons.httpclient.auth.DigestScheme

	 in Method: java.lang.String createDigest(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #8ec408f19bc91f3944503b1723b70ef06c372d0cd67a7eb04601f5ac3515276a)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r9 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1972)


	 in Method: java.lang.String createCnonce()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #4a642ed7c171c9b41463723f663bc27ce57c67f4b447b0ca4e0a4b6fb596318a)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2005)


Findings in Java Class: org.apache.commons.httpclient.auth.NTLM

	 in Method: javax.crypto.Cipher getCipher(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r10, varReplacer2058)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #2428a91187d162c7b6945efac723d02f35919d2a728d2d6d519a75eaba0dd45e)
			First parameter (with value "DES/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2057)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #fbdf004ec925a9577e1135171f692e4b8850c9056f8f336a45f843edcb450a03)
			Second parameter (with value "DES") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r10, varReplacer2058)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r9.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2055, $r1)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 17

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 2
	ConstraintError: 4
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 2.823 s

Current Proejct: jetty-proxy-9.4.20.v20190813.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 437.4 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.424 s

Current Proejct: jackson-annotations-2.6.5.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 516.9 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.492 s

Current Proejct: dsl-json-1.8.4.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 516.4 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 2.252 s

Current Proejct: maven-aether-provider-3.0.5.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 436.5 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.293 s

Current Proejct: jackson-jaxrs-base-2.8.11.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 385.3 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.176 s

Current Proejct: sketches-core-0.8.3.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 563.9 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 3.015 s

Current Proejct: jclouds-allblobstore-2.1.1.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 443.0 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.273 s

Current Proejct: buildtools-2.6.0-SNAPSHOT.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 415.3 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.123 s

Current Proejct: gson-2.8.2.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 429.7 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.818 s

Current Proejct: jackson-jaxrs-json-provider-2.10.1.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 458.2 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.142 s

Current Proejct: guice-multibindings-4.2.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 425.0 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.089 s

Current Proejct: bookkeeper-stats-api-4.10.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 458.3 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.185 s

Current Proejct: jackson-module-jaxb-annotations-2.10.1.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 496.6 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.316 s

Current Proejct: jackson-annotations-2.10.1.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 511.2 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.578 s

Current Proejct: netty-codec-socks-4.1.43.Final.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 484.5 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.519 s

Current Proejct: bootstrap-0.170.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 502.7 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.585 s

Current Proejct: netty-resolver-4.1.43.Final.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 480.4 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.443 s

Current Proejct: jersey-client-2.27.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 532.9 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 2 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 2
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 3
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r14
		Type: java.security.MessageDigest
		Statement: r14 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer333)
		Method: <org.glassfish.jersey.client.authentication.DigestAuthenticator: java.lang.String md5(java.lang.String[])>
		SHA-256: 2878f0c134ecc73b8cc10ac78af4a7d4a90d961d9421ea3d978390fec794e51f
		Secure: false
	Object:
		Variable: r16
		Type: byte[]
		Statement: r16 = virtualinvoke r14.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.glassfish.jersey.client.authentication.DigestAuthenticator: java.lang.String md5(java.lang.String[])>
		SHA-256: 90829e2f0f1888ba5bd45a4dbbf2ed9f630f574666c82ebb3fcae9594ba3c0b8
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: $r5 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer295)
		Method: <org.glassfish.jersey.client.authentication.DigestAuthenticator: void <init>(org.glassfish.jersey.client.authentication.HttpAuthenticationFilter$Credentials,int)>
		SHA-256: a5cbc1be583309fde7238d6629927ebe35d2d2d37175600f857ab3d6a611c356
		Secure: true

Findings in Java Class: org.glassfish.jersey.client.authentication.DigestAuthenticator

	 in Method: java.lang.String md5(java.lang.String[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #2878f0c134ecc73b8cc10ac78af4a7d4a90d961d9421ea3d978390fec794e51f)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r14 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer333)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 3

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 1
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 2.056 s

Current Proejct: jackson-core-2.10.1.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 469.0 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 2.980 s

Current Proejct: jcl-over-slf4j-1.7.25.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 423.1 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.157 s

Current Proejct: mongodb-driver-reactivestreams-1.12.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 455.9 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.496 s

Current Proejct: commons-io.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 459.5 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.898 s

Current Proejct: powermock-module-testng-2.0.2.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 413.3 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.155 s

Current Proejct: bcpkix-jdk15on-1.60.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 690.6 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 76 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 77
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.01

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 78
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.03

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 78
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.04

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 78
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.05

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 78
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.06

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 79
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.08

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 79
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.09

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 79
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.1

[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.io.OutputStream: void close()> for class org.bouncycastle.util.io.TeeOutputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.io.OutputStream: void close()> for class org.bouncycastle.util.io.TeeOutputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.io.OutputStream: void close()> for class org.bouncycastle.util.io.TeeOutputStream
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 80
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.11

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 80
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.13

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 82
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.13

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 82
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.15

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 82
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.16

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 14 of 82
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.17

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 15 of 83
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.18

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 16 of 84
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.19

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 17 of 85
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.2

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 18 of 86
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.21

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 19 of 86
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.22

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 20 of 86
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.23

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 21 of 86
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.24

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 22 of 86
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.26

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 23 of 86
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.27

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 24 of 87
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.28

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 25 of 87
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.29

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 26 of 88
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.3

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 27 of 88
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.31

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 28 of 88
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.32

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 29 of 88
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 30 of 88
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.34

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 31 of 88
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.35

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 32 of 88
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.36

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 33 of 88
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.38

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 34 of 88
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.39

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 35 of 88
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.4

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 36 of 88
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.41

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 37 of 88
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.42

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 38 of 90
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.42

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 39 of 90
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.43

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 40 of 91
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.44

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 41 of 91
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.45

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 42 of 91
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.46

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 43 of 91
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.47

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 44 of 93
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.47

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 45 of 94
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.48

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 46 of 95
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.48

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 47 of 96
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.49

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 48 of 97
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.49

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 49 of 98
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 50 of 98
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.51

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 51 of 99
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.52

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 52 of 100
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.52

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 53 of 101
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.52

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 54 of 102
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.53

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 55 of 103
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.53

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 56 of 103
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.54

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 57 of 104
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.55

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 58 of 105
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.55

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 59 of 106
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.56

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 60 of 107
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.56

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 61 of 107
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.57

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 62 of 107
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.58

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 63 of 108
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.58

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 64 of 109
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.59

[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.io.OutputStream: void close()> for class org.bouncycastle.crypto.io.MacOutputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.io.OutputStream: void write(byte[])> for class org.bouncycastle.crypto.io.MacOutputStream
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 65 of 110
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.59

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 66 of 111
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.59

[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.io.OutputStream: void close()> for class org.bouncycastle.jcajce.io.MacOutputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.io.OutputStream: void write(byte[])> for class org.bouncycastle.jcajce.io.MacOutputStream
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 67 of 111
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.6

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 68 of 112
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.61

[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.io.OutputStream: void close()> for class org.bouncycastle.jcajce.io.MacOutputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.io.OutputStream: void write(byte[])> for class org.bouncycastle.jcajce.io.MacOutputStream
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 69 of 112
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.62

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 70 of 112
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.63

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 71 of 112
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.63

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 72 of 112
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.64

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 73 of 113
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.65

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 74 of 113
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.65

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 75 of 116
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.65

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 76 of 117
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.65

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 77 of 117
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.66

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 78 of 117
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 79 of 117
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.68

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 80 of 117
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.68

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 81 of 117
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.69

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 82 of 117
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.7

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 83 of 117
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.71

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 84 of 117
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.72

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 85 of 117
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.73

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 86 of 117
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.74

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 87 of 117
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.74

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 88 of 117
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.75

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 89 of 117
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.76

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 90 of 117
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.77

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 91 of 117
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.78

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 92 of 117
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.79

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 93 of 117
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.79

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 94 of 117
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.8

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 95 of 117
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.81

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 96 of 117
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.82

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 97 of 117
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.83

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 98 of 117
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.84

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 99 of 117
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.85

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 100 of 117
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.85

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 101 of 117
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.86

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 102 of 117
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.87

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 103 of 117
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.88

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 104 of 117
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.89

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 105 of 117
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.9

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 106 of 117
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.91

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 107 of 117
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.91

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 108 of 117
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.92

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 109 of 117
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.93

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 110 of 117
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.94

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 111 of 117
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.95

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 112 of 117
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.96

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 113 of 117
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.97

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 114 of 117
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.97

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 115 of 117
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.98

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 116 of 117
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.99

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r91
		Type: java.security.SecureRandom
		Statement: specialinvoke r91.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder: org.bouncycastle.operator.OutputEncryptor build(char[])>
		SHA-256: 30a387920a14642d213a9cb5c831290ded5195272969a251ca668f8e4f003ee7
		Secure: true
	Object:
		Variable: r5
		Type: byte[]
		Statement: r5 = interfaceinvoke $r52.<java.security.Key: byte[] getEncoded()>()
		Method: <org.bouncycastle.operator.jcajce.JceAsymmetricKeyWrapper: byte[] generateWrappedKey(org.bouncycastle.operator.GenericKey)>
		SHA-256: 957758074f4c2dd3a5682a1b87cffba256bb9e0e464fb741778ce815dd35ff3f
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.est.jcajce.SSLSocketFactoryCreatorBuilder: void <init>(javax.net.ssl.X509TrustManager)>
		SHA-256: e19688301cdce7b1b9fa74a80c8f412b7933abde7af146157e956208f41bbbcb
		Secure: true
	Object:
		Variable: $r33
		Type: byte[]
		Statement: virtualinvoke $r34.<java.security.SecureRandom: void nextBytes(byte[])>($r33)
		Method: <org.bouncycastle.cms.PasswordRecipientInfoGenerator: org.bouncycastle.asn1.cms.RecipientInfo generate(org.bouncycastle.operator.GenericKey)>
		SHA-256: 40f9c0257b0d2f5fc11a06205be4591b45ee8c1623855c6f76c097e70b2efc61
		Secure: true
	Object:
		Variable: r2
		Type: byte[]
		Statement: virtualinvoke $r4.<java.security.SecureRandom: void nextBytes(byte[])>(r2)
		Method: <org.bouncycastle.pkcs.bc.BcPKCS12MacCalculatorBuilder: org.bouncycastle.operator.MacCalculator build(char[])>
		SHA-256: 2c7e000fe9d2830d1e625a735f3676dc5801f0156c5b8ab2cf31fbc3123288f7
		Secure: true
	Object:
		Variable: $r13
		Type: java.lang.String
		Statement: specialinvoke r27.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r3, $r13)
		Method: <org.bouncycastle.cms.jcajce.JcePasswordRecipient: java.security.Key extractSecretKey(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.x509.AlgorithmIdentifier,byte[],byte[])>
		SHA-256: a1faccc21cc371a1afe2c30562ecfa9fd063d5c5de4cee329ae2b3486174ed85
		Secure: false
	Object:
		Variable: r31
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r31.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r20)
		Method: <org.bouncycastle.operator.jcajce.JceInputDecryptorProviderBuilder$1: org.bouncycastle.operator.InputDecryptor get(org.bouncycastle.asn1.x509.AlgorithmIdentifier)>
		SHA-256: 462a558b84ede75e4a116421cc7544c8b7ecc0f88308f4468bf98c5209e0dd37
		Secure: false
	Object:
		Variable: $r14
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r12, $r14)
		Method: <org.bouncycastle.cert.crmf.jcajce.JceAsymmetricValueDecryptorGenerator: java.security.Key extractSecretKey(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.x509.AlgorithmIdentifier,byte[])>
		SHA-256: 78edfecddd1b4dafc8dfefbc874009734aa577e42f7d9ef255aecd767c036623
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>(r2, r3, i0, $i1)
		Method: <org.bouncycastle.openssl.jcajce.PEMUtilities: javax.crypto.SecretKey generateSecretKeyForPKCS5Scheme2(org.bouncycastle.jcajce.util.JcaJceHelper,java.lang.String,char[],byte[],int)>
		SHA-256: 9e370df55bd9d7e848db48a9e445003107a240dcd2ed7b4200a02b3f24255c44
		Secure: false
	Object:
		Variable: $r28
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r28.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r30)
		Method: <org.bouncycastle.cms.jcajce.EnvelopedDataHelper$1: java.lang.Object doInJCE()>
		SHA-256: 685f41d08d97afd26fc1117a5688f6be954adf3879fabc1502b771213b01b405
		Secure: false
	Object:
		Variable: $r14
		Type: java.security.SecureRandom
		Statement: specialinvoke $r14.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.cms.jcajce.JceCMSMacCalculatorBuilder$CMSMacCalculator: void <init>(org.bouncycastle.cms.jcajce.JceCMSMacCalculatorBuilder,org.bouncycastle.asn1.ASN1ObjectIdentifier,int,java.security.AlgorithmParameters,java.security.SecureRandom)>
		SHA-256: 2a5e68734f527f1436f81c176844af305dc961c00fd358a5bda0e3c1aeec3fcd
		Secure: true
	Object:
		Variable: $r11
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r11.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>(r2, r3, i0, $i1)
		Method: <org.bouncycastle.openssl.jcajce.PEMUtilities: javax.crypto.SecretKey generateSecretKeyForPKCS5Scheme2(org.bouncycastle.jcajce.util.JcaJceHelper,java.lang.String,char[],byte[],int,org.bouncycastle.asn1.x509.AlgorithmIdentifier)>
		SHA-256: 76ee31981d39dd8cdf45ff55d6ae22116a26d59a0b4b784e16e26bb40b9bcd5
		Secure: false
	Object:
		Variable: $r9
		Type: byte[]
		Statement: $r9 = interfaceinvoke $r8.<java.security.Key: byte[] getEncoded()>()
		Method: <org.bouncycastle.operator.bc.OperatorUtils: byte[] getKeyBytes(org.bouncycastle.operator.GenericKey)>
		SHA-256: 4fc8e5105d2f805d088f83ef3b9b7f48e90cb3c9d4926f59c699cc60313f9844
		Secure: true
	Object:
		Variable: r116
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r116.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r52)
		Method: <org.bouncycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder$1: org.bouncycastle.operator.InputDecryptor get(org.bouncycastle.asn1.x509.AlgorithmIdentifier)>
		SHA-256: 4bb0cb15d716e234f458d56d1754f562910a9d5b8e04e7b96a4b7dc266c6ceb1
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.CipherOutputStream
		Statement: specialinvoke $r2.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>(r1, $r3)
		Method: <org.bouncycastle.cms.jcajce.JceCMSContentEncryptorBuilder$CMSOutputEncryptor: java.io.OutputStream getOutputStream(java.io.OutputStream)>
		SHA-256: 800d0eca44acd600efad2fef9ac117282fa9598f58337f55e9ee98a44eb15338
		Secure: false
	Object:
		Variable: r2
		Type: byte[]
		Statement: virtualinvoke $r10.<java.security.SecureRandom: void nextBytes(byte[])>(r2)
		Method: <org.bouncycastle.cms.PasswordRecipientInfoGenerator: org.bouncycastle.asn1.cms.RecipientInfo generate(org.bouncycastle.operator.GenericKey)>
		SHA-256: 3b6183e96a597d8b996d846e538a79b24cfd754ac2630eea28c7a0fcdbb69833
		Secure: true
	Object:
		Variable: $r14
		Type: java.lang.String
		Statement: specialinvoke r26.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, $r14)
		Method: <org.bouncycastle.cms.jcajce.JcePasswordRecipientInfoGenerator: byte[] generateEncryptedBytes(org.bouncycastle.asn1.x509.AlgorithmIdentifier,byte[],org.bouncycastle.operator.GenericKey)>
		SHA-256: d09708fa72db133adde154b5155dd15ea255a26d3bcb5f6bb25fcdc82817bc9f
		Secure: false
	Object:
		Variable: varReplacer2437
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer2437)
		Method: <org.bouncycastle.operator.jcajce.OperatorUtils: java.security.Key getJceKey(org.bouncycastle.operator.GenericKey)>
		SHA-256: fc18ea0cedf2ec505b651b14fa3fab16b4c4529f8d5bef1b9bb14d1c0c48e744
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.Key
		Statement: $r9 = interfaceinvoke $r8.<java.security.Key: byte[] getEncoded()>()
		Method: <org.bouncycastle.operator.bc.OperatorUtils: byte[] getKeyBytes(org.bouncycastle.operator.GenericKey)>
		SHA-256: ea850d41637d0ab4f33299cc2fc742ea7235f958bc8e856df75c204beea75c98
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.CipherOutputStream
		Statement: specialinvoke $r2.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>(r1, $r3)
		Method: <org.bouncycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder$1: java.io.OutputStream getOutputStream(java.io.OutputStream)>
		SHA-256: 5b7c890b951f552e1c1dd71a2308a543b3702cdd4ef4e7fbef020e527964e7d7
		Secure: false
	Object:
		Variable: r86
		Type: byte[]
		Statement: virtualinvoke $r11.<java.security.SecureRandom: void nextBytes(byte[])>(r86)
		Method: <org.bouncycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder: org.bouncycastle.operator.OutputEncryptor build(char[])>
		SHA-256: 66bfa03dfd6bba31fe3269b761e50c247789798e227dc3472e225bb0f86d1ff5
		Secure: true
	Object:
		Variable: $i1
		Type: int
		Statement: specialinvoke $r6.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>(r2, r3, i0, $i1)
		Method: <org.bouncycastle.openssl.jcajce.PEMUtilities: javax.crypto.SecretKey generateSecretKeyForPKCS5Scheme2(org.bouncycastle.jcajce.util.JcaJceHelper,java.lang.String,char[],byte[],int)>
		SHA-256: 85cef85e18734259ec1e25cd3786b24436a0cb79896efd11b2c380821a52db53
		Secure: false
	Object:
		Variable: r103
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r103.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r5, varReplacer2277)
		Method: <org.bouncycastle.operator.jcajce.JceAsymmetricKeyWrapper: byte[] generateWrappedKey(org.bouncycastle.operator.GenericKey)>
		SHA-256: a0891113ab416cb41719f5e625b64e0aad436623ebb818738df76ed8a98c8497
		Secure: false
	Object:
		Variable: r5
		Type: javax.net.ssl.KeyManagerFactory
		Statement: r5 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r4)
		Method: <org.bouncycastle.est.jcajce.JcaJceUtils: javax.net.ssl.KeyManagerFactory createKeyManagerFactory(java.lang.String,java.lang.String,java.security.KeyStore,char[])>
		SHA-256: afa98570316637915501e5fce895bb93cade60dee06d24c911599f36e58a14b
		Secure: false
	Object:
		Variable: $r13
		Type: java.security.SecureRandom
		Statement: specialinvoke $r13.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.pkcs.bc.BcPKCS12PBEOutputEncryptorBuilder: org.bouncycastle.operator.OutputEncryptor build(char[])>
		SHA-256: c2dd9c71ccd126d3e329affa81be3df24c009787a9d5a30f552a5fd0dd0d7393
		Secure: true
	Object:
		Variable: r30
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r30.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r4)
		Method: <org.bouncycastle.openssl.jcajce.PEMUtilities: byte[] crypt(boolean,org.bouncycastle.jcajce.util.JcaJceHelper,byte[],char[],java.lang.String,byte[])>
		SHA-256: 12ead6157a9b79e76c82c2a49e8e6eb1cdccb1762e3fff6fc51f3217b25407b
		Secure: false
	Object:
		Variable: r3
		Type: byte[]
		Statement: virtualinvoke $r9.<java.security.SecureRandom: void nextBytes(byte[])>(r3)
		Method: <org.bouncycastle.cert.crmf.bc.BcFixedLengthMGF1Padder: byte[] getPaddedData(byte[])>
		SHA-256: 88f908fdfb45bc9f1756675965963011227dd2d439cf4ff72340c85359dbe5f6
		Secure: true
	Object:
		Variable: r75
		Type: byte[]
		Statement: virtualinvoke $r59.<java.security.SecureRandom: void nextBytes(byte[])>(r75)
		Method: <org.bouncycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder: org.bouncycastle.operator.OutputEncryptor build(char[])>
		SHA-256: ba2d67879591bfc0abe6064ceeb5c3cd572d0c95f4ddfbea25cab9e4ddfb3462
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.Key
		Statement: $r5 = interfaceinvoke $r4.<java.security.Key: byte[] getEncoded()>()
		Method: <org.bouncycastle.openssl.jcajce.JcaMiscPEMGenerator: java.lang.Object convertObject(java.lang.Object)>
		SHA-256: 82c953a78e8aa47cf8d1e16beae31c86fbf2ca34f0bfc634bac6f3317f148556
		Secure: true
	Object:
		Variable: $r12
		Type: byte[]
		Statement: $z0 = virtualinvoke r19.<java.security.Signature: boolean verify(byte[])>($r12)
		Method: <org.bouncycastle.mozilla.SignedPublicKeyAndChallenge: boolean verify(java.lang.String)>
		SHA-256: 372dbbaa5c4a9c51c23548ee58842f2787660990d9e41cab1976b551757f680a
		Secure: false
	Object:
		Variable: r38
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r38.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r35)
		Method: <org.bouncycastle.cert.crmf.jcajce.CRMFHelper$1: java.lang.Object doInJCE()>
		SHA-256: aa8f63c68ad9ab1b2aa286131f7b7a925586541a2bcea790de14e28be85bbe05
		Secure: false
	Object:
		Variable: r17
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r17.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, $r7)
		Method: <org.bouncycastle.cert.crmf.jcajce.JcePKMACValuesCalculator: byte[] calculateMac(byte[],byte[])>
		SHA-256: de950638f005f2ae994cccaa6fa36b2c8899ac9ab9a36ea1582c51979237ab1b
		Secure: false
	Object:
		Variable: r102
		Type: java.security.SecureRandom
		Statement: specialinvoke r102.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: org.bouncycastle.operator.OutputEncryptor build()>
		SHA-256: de62232888a7aa17b0ad741675453ec69bb50df7175b6441e8e3d8c5581041ac
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.KeyPair
		Statement: specialinvoke $r4.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r12)
		Method: <org.bouncycastle.openssl.jcajce.JcaPEMKeyConverter: java.security.KeyPair getKeyPair(org.bouncycastle.openssl.PEMKeyPair)>
		SHA-256: 94ff1618c110a9dc317a1b0a7ec12c22019c4f946ace29400aa0a35a74d8be80
		Secure: true
	Object:
		Variable: r114
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke r114.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r54, $r55, $i3, $i4)
		Method: <org.bouncycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder$1: org.bouncycastle.operator.InputDecryptor get(org.bouncycastle.asn1.x509.AlgorithmIdentifier)>
		SHA-256: 23c79f6cad5db971b36a90b61de7d7694c1e6fa3c5db079ed4b4194c467f23ad
		Secure: false
	Object:
		Variable: r19
		Type: java.security.Signature
		Statement: r19 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>($r6, r1)
		Method: <org.bouncycastle.mozilla.SignedPublicKeyAndChallenge: boolean verify(java.lang.String)>
		SHA-256: fe35860987dde844482158447a68b52ea9be3e8eeaee3afa3347fefd9c1dd110
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer256)
		Method: <org.bouncycastle.cert.jcajce.JcaX509ExtensionUtils: void <init>()>
		SHA-256: d909520bb8bf6cb7a065f16da3ad8f7e6db33e099ac0d302e2ba4548275e8d8f
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer1049)
		Method: <org.bouncycastle.cms.jcajce.EnvelopedDataHelper: java.security.Key getJceKey(org.bouncycastle.operator.GenericKey)>
		SHA-256: 1fced5c1e832e025a0bddc1a8f83c258b5f75b42254b748b592870aa2de56fb5
		Secure: false
	Object:
		Variable: $r17
		Type: java.security.SecureRandom
		Statement: specialinvoke $r17.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.cms.jcajce.JceKeyAgreeRecipientInfoGenerator: void init(org.bouncycastle.asn1.ASN1ObjectIdentifier)>
		SHA-256: d03895b9aeec93047ffa7f1dd1fa153029cb5cc79a3af445092a30985fdeec49
		Secure: true
	Object:
		Variable: $r52
		Type: java.security.Key
		Statement: r5 = interfaceinvoke $r52.<java.security.Key: byte[] getEncoded()>()
		Method: <org.bouncycastle.operator.jcajce.JceAsymmetricKeyWrapper: byte[] generateWrappedKey(org.bouncycastle.operator.GenericKey)>
		SHA-256: 52546d75b88cf8d50e2fbc119c1a12fd9bcfa7a2dffd4d4f7f7e90c0d8ff6c71
		Secure: true
	Object:
		Variable: r19
		Type: java.security.Signature
		Statement: r19 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r16)
		Method: <org.bouncycastle.mozilla.SignedPublicKeyAndChallenge: boolean verify(java.lang.String)>
		SHA-256: f9def0cc8634d54a06cd49265c76ae62f213ee99cec4095d88c7fe47ec8e9559
		Secure: false
	Object:
		Variable: r18
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke r18.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>(r1, r3, varReplacer1895, $i1)
		Method: <org.bouncycastle.openssl.jcajce.PEMUtilities: javax.crypto.SecretKey getKey(org.bouncycastle.jcajce.util.JcaJceHelper,char[],java.lang.String,int,byte[],boolean)>
		SHA-256: 1204c0d08044d9dc243ff904b7048ecb71b0fb01e85ad0ffe825a75ec85421ea
		Secure: false
	Object:
		Variable: r26
		Type: java.security.SecureRandom
		Statement: specialinvoke r26.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.cms.jcajce.JceCMSContentEncryptorBuilder$CMSOutputEncryptor: void <init>(org.bouncycastle.cms.jcajce.JceCMSContentEncryptorBuilder,org.bouncycastle.asn1.ASN1ObjectIdentifier,int,java.security.AlgorithmParameters,java.security.SecureRandom)>
		SHA-256: d4be1b9475c22fdf21d62d51b4c5d555f3546ef7be5dc6f6df8e5b43ca372452
		Secure: true
	Object:
		Variable: r15
		Type: java.security.SecureRandom
		Statement: specialinvoke r15.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.cert.crmf.bc.BcFixedLengthMGF1Padder: byte[] getPaddedData(byte[])>
		SHA-256: ed11d935c8c430fe7300abede2f21cc8de807e95eab8ab40ed319319899309c3
		Secure: true
	Object:
		Variable: r19
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r19.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r5, r2)
		Method: <org.bouncycastle.openssl.jcajce.PEMUtilities: javax.crypto.SecretKey getKey(org.bouncycastle.jcajce.util.JcaJceHelper,char[],java.lang.String,int,byte[],boolean)>
		SHA-256: 55c593a96e797930481abbaf6d6a30dddbae159c5ea4ba899ef003d7ad60c0b1
		Secure: false
	Object:
		Variable: r1
		Type: java.lang.String
		Statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r13, r1)
		Method: <org.bouncycastle.openssl.jcajce.PEMUtilities: javax.crypto.SecretKey generateSecretKeyForPKCS5Scheme2(org.bouncycastle.jcajce.util.JcaJceHelper,java.lang.String,char[],byte[],int,org.bouncycastle.asn1.x509.AlgorithmIdentifier)>
		SHA-256: fb13b59516796f9daa9b770f1378b7896078cf97a72c6aeb7936e557cc89d816
		Secure: false
	Object:
		Variable: r2
		Type: byte[]
		Statement: virtualinvoke $r5.<java.security.SecureRandom: void nextBytes(byte[])>(r2)
		Method: <org.bouncycastle.cert.crmf.PKMACBuilder: org.bouncycastle.operator.MacCalculator build(char[])>
		SHA-256: 675a2fc6ea001b974c6d96156cfa916a56180b2fba81017be27b24d4aec9257e
		Secure: true
	Object:
		Variable: r23
		Type: java.security.SecureRandom
		Statement: specialinvoke r23.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.pkcs.jcajce.JcePKCS12MacCalculatorBuilder: org.bouncycastle.operator.MacCalculator build(char[])>
		SHA-256: 5e8b6c48ff7a93e12631286c1aecdbba8f792e46b665ec0364b72446b680f335
		Secure: true
	Object:
		Variable: r26
		Type: javax.crypto.spec.PBEParameterSpec
		Statement: specialinvoke r26.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r13, $i0)
		Method: <org.bouncycastle.pkcs.jcajce.JcePKCS12MacCalculatorBuilderProvider$1: org.bouncycastle.operator.MacCalculator build(char[])>
		SHA-256: 332779ac82a3a5f40feda5385f04d333c7d633d1765b02b68fc274ce387a2831
		Secure: false
	Object:
		Variable: $r12
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r13, r1)
		Method: <org.bouncycastle.openssl.jcajce.PEMUtilities: javax.crypto.SecretKey generateSecretKeyForPKCS5Scheme2(org.bouncycastle.jcajce.util.JcaJceHelper,java.lang.String,char[],byte[],int,org.bouncycastle.asn1.x509.AlgorithmIdentifier)>
		SHA-256: daf9b10e1c76b29541869778b1f0c9ecb239e829f1b942b829a162e7f75ad872
		Secure: false
	Object:
		Variable: r2
		Type: java.security.Key
		Statement: r7 = interfaceinvoke r2.<java.security.Key: byte[] getEncoded()>()
		Method: <org.bouncycastle.cms.jcajce.EnvelopedDataHelper: void keySizeCheck(org.bouncycastle.asn1.x509.AlgorithmIdentifier,java.security.Key)>
		SHA-256: 541a36aecdae2e7239bef78850dc005aa1057724b8b63df9365b8d062a367d72
		Secure: true
	Object:
		Variable: $r18
		Type: byte[]
		Statement: virtualinvoke $r19.<java.security.SecureRandom: void nextBytes(byte[])>($r18)
		Method: <org.bouncycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: org.bouncycastle.operator.OutputEncryptor build()>
		SHA-256: 2d3419589e79de205c521d81396bf809192f796fd343dec985297def542f10c9
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.est.jcajce.SSLSocketFactoryCreatorBuilder: void <init>(javax.net.ssl.X509TrustManager[])>
		SHA-256: e19688301cdce7b1b9fa74a80c8f412b7933abde7af146157e956208f41bbbcb
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.SecureRandom
		Statement: specialinvoke $r7.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.openssl.jcajce.JcePEMEncryptorBuilder: org.bouncycastle.openssl.PEMEncryptor build(char[])>
		SHA-256: 23e23aeb6fe9538ae24c7173503ded1892f1a7595bceeb458bfe08663992364a
		Secure: true
	Object:
		Variable: $r22
		Type: java.security.Key
		Statement: $r23 = interfaceinvoke $r22.<java.security.Key: byte[] getEncoded()>()
		Method: <org.bouncycastle.operator.jcajce.JceAsymmetricKeyWrapper: byte[] generateWrappedKey(org.bouncycastle.operator.GenericKey)>
		SHA-256: 9338789156b0d29748aa00b47dacf69cf5fc7e1470f29846eadc5b5f9cfd8688
		Secure: true
	Object:
		Variable: varReplacer2277
		Type: java.lang.String
		Statement: specialinvoke r103.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r5, varReplacer2277)
		Method: <org.bouncycastle.operator.jcajce.JceAsymmetricKeyWrapper: byte[] generateWrappedKey(org.bouncycastle.operator.GenericKey)>
		SHA-256: 15c0ca5524c9e4cf8be61d8f4772fba91131d86e6b789b437a9eb5a35b7ecf4b
		Secure: false
	Object:
		Variable: $r7
		Type: java.lang.String
		Statement: specialinvoke r17.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, $r7)
		Method: <org.bouncycastle.cert.crmf.jcajce.JcePKMACValuesCalculator: byte[] calculateMac(byte[],byte[])>
		SHA-256: 5ee3fe50b431f1d2298b47bdadc75e9ca5188b927dcba0b049ade4d773ef21ff
		Secure: false
	Object:
		Variable: r26
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r26.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r11)
		Method: <org.bouncycastle.cms.jcajce.JcePasswordRecipient: java.security.Key extractSecretKey(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.x509.AlgorithmIdentifier,byte[],byte[])>
		SHA-256: 13ca233755deae9686c5801dcc9c772abc2de08a2bcc285ec8802ca8c7c25cc7
		Secure: false
	Object:
		Variable: r36
		Type: java.security.SecureRandom
		Statement: specialinvoke r36.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.cms.PasswordRecipientInfoGenerator: org.bouncycastle.asn1.cms.RecipientInfo generate(org.bouncycastle.operator.GenericKey)>
		SHA-256: e0622314a6f9fd924004fca8c8a13f1eaeb57a750f52fc194d429643ca444678
		Secure: true
	Object:
		Variable: r16
		Type: javax.net.ssl.SSLContext
		Statement: r16 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r4)
		Method: <org.bouncycastle.est.jcajce.SSLSocketFactoryCreatorBuilder$1: javax.net.ssl.SSLSocketFactory createFactory()>
		SHA-256: b4b41f2dc07321f4d4650fecdd653fbe84ccf8631e219ea6bb36587f89a39aa
		Secure: false
	Object:
		Variable: r58
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r58.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r18, $r20)
		Method: <org.bouncycastle.operator.jcajce.JceAsymmetricKeyUnwrapper: org.bouncycastle.operator.GenericKey generateUnwrappedKey(org.bouncycastle.asn1.x509.AlgorithmIdentifier,byte[])>
		SHA-256: 33c37c78797514f37417f93f693439056b8debadd1caac73285f4dba79019d10
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r2.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>(r1, $r4)
		Method: <org.bouncycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder$1$1: java.io.InputStream getInputStream(java.io.InputStream)>
		SHA-256: 73dc089e6954b762054e272dbf6f43245b03c6fd0face9c411b5d7c5656ba0e0
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.CipherOutputStream
		Statement: specialinvoke $r2.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>(r1, $r4)
		Method: <org.bouncycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder$1: java.io.OutputStream getOutputStream(java.io.OutputStream)>
		SHA-256: 2a37ad332ce644402ba8bd9e0b74b3cd26bf2f4678ddb62306d9ddffc25cfaf4
		Secure: false
	Object:
		Variable: r49
		Type: byte[]
		Statement: r49 = interfaceinvoke r66.<java.security.Key: byte[] getEncoded()>()
		Method: <org.bouncycastle.operator.jcajce.JceAsymmetricKeyUnwrapper: org.bouncycastle.operator.GenericKey generateUnwrappedKey(org.bouncycastle.asn1.x509.AlgorithmIdentifier,byte[])>
		SHA-256: 854150bb3ce18fcf2485cb6132e26332329d489c9ea791d6c4c47f0171c1aea0
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.SecureRandom
		Statement: specialinvoke $r10.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.pkcs.bc.BcPKCS12MacCalculatorBuilder: org.bouncycastle.operator.MacCalculator build(char[])>
		SHA-256: fb3359801c30d33f7f557eaa4a6ed1c34ae117a03a457269a289e9ba280d0d5a
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: specialinvoke $r5.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.est.jcajce.JcaHttpAuthBuilder: void <init>(java.lang.String,java.lang.String,char[])>
		SHA-256: d49f676c293ec26a4e26a16fd971c3969b1d5a6ae5c0f276a23b5ff30f09903d
		Secure: true
	Object:
		Variable: r98
		Type: java.security.SecureRandom
		Statement: specialinvoke r98.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.operator.jcajce.JceAsymmetricKeyWrapper: byte[] generateWrappedKey(org.bouncycastle.operator.GenericKey)>
		SHA-256: 68d7122a582120944c3730a3a6051ee60042f8bac62cc5c50b54c39a74e88785
		Secure: true
	Object:
		Variable: r27
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r27.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r3, $r13)
		Method: <org.bouncycastle.cms.jcajce.JcePasswordRecipient: java.security.Key extractSecretKey(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.x509.AlgorithmIdentifier,byte[],byte[])>
		SHA-256: d275474f60052c30fea4100ca9554a05fabe6914ef2e2e78cdc4c23c59966231
		Secure: false
	Object:
		Variable: r16
		Type: javax.net.ssl.SSLContext
		Statement: r16 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>($r15, $r14)
		Method: <org.bouncycastle.est.jcajce.SSLSocketFactoryCreatorBuilder$1: javax.net.ssl.SSLSocketFactory createFactory()>
		SHA-256: a6cf4835522030d3d8bf4621b6f4243c50e6519e72f1245ca549d927ffc92d72
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, $r10)
		Method: <org.bouncycastle.cms.jcajce.EnvelopedDataHelper: java.security.Key getJceKey(org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.operator.GenericKey)>
		SHA-256: d58089377f01e6da8ceec0d2bb453a772d4219b5e06c46165912eaf1819ff0a
		Secure: false
	Object:
		Variable: varReplacer1049
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer1049)
		Method: <org.bouncycastle.cms.jcajce.EnvelopedDataHelper: java.security.Key getJceKey(org.bouncycastle.operator.GenericKey)>
		SHA-256: 5bcc68ec308784a82c6b52a08060f1101ec4bdd23494508bde970295cf34f834
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>(r1, $r2)
		Method: <org.bouncycastle.eac.operator.jcajce.NamedEACHelper: java.security.Signature createSignature(java.lang.String)>
		SHA-256: 3332fe42c69dd182d92cc403b6a0ffc6d0715790b9234609b75e1fe5927fc51c
		Secure: false
	Object:
		Variable: r0
		Type: java.security.Key
		Statement: r1 = interfaceinvoke r0.<java.security.Key: byte[] getEncoded()>()
		Method: <org.bouncycastle.operator.jcajce.JceGenericKey: java.lang.Object getRepresentation(java.security.Key)>
		SHA-256: 8aa894a606ea0e3a34b39b4b68236e32c6306aeba14e481eb36f5c41f6bd15b3
		Secure: true
	Object:
		Variable: r16
		Type: java.security.SecureRandom
		Statement: specialinvoke r16.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.cms.bc.BcCMSContentEncryptorBuilder$CMSOutputEncryptor: void <init>(org.bouncycastle.cms.bc.BcCMSContentEncryptorBuilder,org.bouncycastle.asn1.ASN1ObjectIdentifier,int,java.security.SecureRandom)>
		SHA-256: 73b5735e9853a721575f8cf8aaca68be4a93e3496460c570132b570d60500cf7
		Secure: true
	Object:
		Variable: r25
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r25.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r12)
		Method: <org.bouncycastle.cms.jcajce.JcePasswordRecipientInfoGenerator: byte[] generateEncryptedBytes(org.bouncycastle.asn1.x509.AlgorithmIdentifier,byte[],org.bouncycastle.operator.GenericKey)>
		SHA-256: ddf7814a7ba6bfdaaa9c848b7cd69749750444f45515cc4a04b479b5dc46c099
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, r1)
		Method: <org.bouncycastle.openssl.jcajce.PEMUtilities: javax.crypto.SecretKey generateSecretKeyForPKCS5Scheme2(org.bouncycastle.jcajce.util.JcaJceHelper,java.lang.String,char[],byte[],int)>
		SHA-256: 874a7e328873ef36f24f62cd6e9e55fe37a7f79678e543a896bef11d5cf44a00
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r2.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>(r1, $r4)
		Method: <org.bouncycastle.operator.jcajce.JceInputDecryptorProviderBuilder$1$1: java.io.InputStream getInputStream(java.io.InputStream)>
		SHA-256: f1256a486b40fb196e6f7c8f63cff660ef872ddb1ae1e9a6b418b4752034ca1b
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.Signature
		Statement: $r2 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(r1)
		Method: <org.bouncycastle.eac.operator.jcajce.DefaultEACHelper: java.security.Signature createSignature(java.lang.String)>
		SHA-256: c9f51029669df49fc0d51fa1b844ce670286117ac59f567667aa04ba8088675a
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: r1 = interfaceinvoke r0.<java.security.Key: byte[] getEncoded()>()
		Method: <org.bouncycastle.operator.jcajce.JceGenericKey: java.lang.Object getRepresentation(java.security.Key)>
		SHA-256: f9bf50ba6f1893e70c3466d5d9b89fdd23117f26d2b05436f9df3aae3aa23c43
		Secure: true
	Object:
		Variable: r2
		Type: byte[]
		Statement: virtualinvoke $r6.<java.security.SecureRandom: void nextBytes(byte[])>(r2)
		Method: <org.bouncycastle.pkcs.bc.BcPKCS12PBEOutputEncryptorBuilder: org.bouncycastle.operator.OutputEncryptor build(char[])>
		SHA-256: b558d504b6c7b3835f0f862917d64d4208c065bc388886a8546dec3577928f75
		Secure: true
	Object:
		Variable: $i4
		Type: int
		Statement: specialinvoke r114.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r54, $r55, $i3, $i4)
		Method: <org.bouncycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder$1: org.bouncycastle.operator.InputDecryptor get(org.bouncycastle.asn1.x509.AlgorithmIdentifier)>
		SHA-256: a99b757576dc04f52623f74c61845a67fdf32762a2c50b8a4813c0cff21d01db
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r2.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>(r1, $r3)
		Method: <org.bouncycastle.cert.crmf.jcajce.JceAsymmetricValueDecryptorGenerator$1: java.io.InputStream getInputStream(java.io.InputStream)>
		SHA-256: 4af1e6123e58e1b67accba2c5188d8c1612bc8919e161790c89b5c076ef9b569
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.security.Provider)>(r1, $r2)
		Method: <org.bouncycastle.eac.operator.jcajce.ProviderEACHelper: java.security.Signature createSignature(java.lang.String)>
		SHA-256: a3f8ea87e72cc19683494212e2b295a95697343432beee4e8811f9eda7db0b67
		Secure: false
	Object:
		Variable: r26
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r26.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, $r14)
		Method: <org.bouncycastle.cms.jcajce.JcePasswordRecipientInfoGenerator: byte[] generateEncryptedBytes(org.bouncycastle.asn1.x509.AlgorithmIdentifier,byte[],org.bouncycastle.operator.GenericKey)>
		SHA-256: 3ee32639536f6a117de0919ea496fe64053bd73f0dc3ccc24300eb4a90722b72
		Secure: false
	Object:
		Variable: r5
		Type: javax.net.ssl.KeyManagerFactory
		Statement: r5 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(r0)
		Method: <org.bouncycastle.est.jcajce.JcaJceUtils: javax.net.ssl.KeyManagerFactory createKeyManagerFactory(java.lang.String,java.lang.String,java.security.KeyStore,char[])>
		SHA-256: 770c25ce970efb6b8329812d0a181bf1692f268c89eee6f68040d92297138cc7
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.SecureRandom
		Statement: specialinvoke $r10.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.cert.crmf.PKMACBuilder: org.bouncycastle.operator.MacCalculator build(char[])>
		SHA-256: 87bf6a1c65e5207ebbadad5ea12f41a35b2011ddcee76cff0a75838da1d0da94
		Secure: true
	Object:
		Variable: r25
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke r25.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>(r1, $r12, $i2, i1)
		Method: <org.bouncycastle.cms.jcajce.EnvelopedDataHelper: byte[] calculateDerivedKey(int,char[],org.bouncycastle.asn1.x509.AlgorithmIdentifier,int)>
		SHA-256: 5f1c91b94bdcf57040ae3543d85a213028ae9a68c7d5895e8c526ff9cbd071ef
		Secure: false
	Object:
		Variable: r27
		Type: java.security.SecureRandom
		Statement: specialinvoke r27.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.cert.crmf.jcajce.JceCRMFEncryptorBuilder$CRMFOutputEncryptor: void <init>(org.bouncycastle.cert.crmf.jcajce.JceCRMFEncryptorBuilder,org.bouncycastle.asn1.ASN1ObjectIdentifier,int,java.security.SecureRandom)>
		SHA-256: b00cd990cdb0f128868fec58ce11ee342179554ceb59274d61a8381ea35c9ac
		Secure: true
	Object:
		Variable: $r10
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, $r10)
		Method: <org.bouncycastle.cms.jcajce.EnvelopedDataHelper: java.security.Key getJceKey(org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.operator.GenericKey)>
		SHA-256: 6da1223aec0053e8478ad953b0e2febf4d6c37a78ccdaf5865e40332a3772e1
		Secure: false
	Object:
		Variable: i1
		Type: int
		Statement: specialinvoke r25.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>(r1, $r12, $i2, i1)
		Method: <org.bouncycastle.cms.jcajce.EnvelopedDataHelper: byte[] calculateDerivedKey(int,char[],org.bouncycastle.asn1.x509.AlgorithmIdentifier,int)>
		SHA-256: 8942e4bb6917f0df8d364aed838c7bd7226648fdeb49742c6fa8b8c0ac0d6b64
		Secure: false
	Object:
		Variable: r2
		Type: java.lang.String
		Statement: specialinvoke r19.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r5, r2)
		Method: <org.bouncycastle.openssl.jcajce.PEMUtilities: javax.crypto.SecretKey getKey(org.bouncycastle.jcajce.util.JcaJceHelper,char[],java.lang.String,int,byte[],boolean)>
		SHA-256: 838ced2d0dab34411eb1950fa9671a147a5e15a0d63dd9e57ab29b625b9c9c00
		Secure: false
	Object:
		Variable: $r20
		Type: java.lang.String
		Statement: specialinvoke r58.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r18, $r20)
		Method: <org.bouncycastle.operator.jcajce.JceAsymmetricKeyUnwrapper: org.bouncycastle.operator.GenericKey generateUnwrappedKey(org.bouncycastle.asn1.x509.AlgorithmIdentifier,byte[])>
		SHA-256: 8c52cbf312364024a591a447f9b9415d4c49a6f89d46ff4d96e2418490d42485
		Secure: true
	Object:
		Variable: r30
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r30.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r10, $r11)
		Method: <org.bouncycastle.operator.jcajce.JceInputDecryptorProviderBuilder$1: org.bouncycastle.operator.InputDecryptor get(org.bouncycastle.asn1.x509.AlgorithmIdentifier)>
		SHA-256: 66fbb271306f4677e9efd55d3120da9c749479fdefecaf17de8e8c58eb9c1d04
		Secure: false
	Object:
		Variable: r24
		Type: javax.crypto.spec.PBEParameterSpec
		Statement: specialinvoke r24.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>(r2, $i2)
		Method: <org.bouncycastle.pkcs.jcajce.JcePKCS12MacCalculatorBuilder: org.bouncycastle.operator.MacCalculator build(char[])>
		SHA-256: 3d6d4ea23665360b601eba666344c953ff06917bdcc4d1d8036824a88a57a53b
		Secure: true
	Object:
		Variable: $i1
		Type: int
		Statement: specialinvoke $r11.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>(r2, r3, i0, $i1)
		Method: <org.bouncycastle.openssl.jcajce.PEMUtilities: javax.crypto.SecretKey generateSecretKeyForPKCS5Scheme2(org.bouncycastle.jcajce.util.JcaJceHelper,java.lang.String,char[],byte[],int,org.bouncycastle.asn1.x509.AlgorithmIdentifier)>
		SHA-256: a215bef92ce62120c24bb9e2d677eb8813c4f99724e8407f234472f6b374fe9f
		Secure: false
	Object:
		Variable: r2
		Type: byte[]
		Statement: virtualinvoke $r5.<java.security.SecureRandom: void nextBytes(byte[])>(r2)
		Method: <org.bouncycastle.openssl.jcajce.JcePEMEncryptorBuilder: org.bouncycastle.openssl.PEMEncryptor build(char[])>
		SHA-256: d57501795b1be11f1493d02dfa35f5f8c62591c516459705a939104e15dca9a2
		Secure: true
	Object:
		Variable: r81
		Type: byte[]
		Statement: virtualinvoke $r37.<java.security.SecureRandom: void nextBytes(byte[])>(r81)
		Method: <org.bouncycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder: org.bouncycastle.operator.OutputEncryptor build(char[])>
		SHA-256: 2a4cc38d61ea637848dc0cd20c29d60eda292a61ece0eff20d3dc207130b56cf
		Secure: true
	Object:
		Variable: $r35
		Type: byte[]
		Statement: virtualinvoke $r36.<java.security.SecureRandom: void nextBytes(byte[])>($r35)
		Method: <org.bouncycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: org.bouncycastle.operator.OutputEncryptor build()>
		SHA-256: 937a58e0c78c38d80f6184cf1ad841652d48bd1e03113a1bc51455ab57587f10
		Secure: true
	Object:
		Variable: r1
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, r1)
		Method: <org.bouncycastle.openssl.jcajce.PEMUtilities: javax.crypto.SecretKey generateSecretKeyForPKCS5Scheme2(org.bouncycastle.jcajce.util.JcaJceHelper,java.lang.String,char[],byte[],int)>
		SHA-256: cc4dd39c61f48ab2167339bd936d184274dda194c740dcbbc7fb31928a01e694
		Secure: false
	Object:
		Variable: r5
		Type: javax.net.ssl.KeyManagerFactory
		Statement: r5 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String,java.lang.String)>(r0, r1)
		Method: <org.bouncycastle.est.jcajce.JcaJceUtils: javax.net.ssl.KeyManagerFactory createKeyManagerFactory(java.lang.String,java.lang.String,java.security.KeyStore,char[])>
		SHA-256: 29a1aeea5f6e01af64948cc282e5fb7042aa8cf4ff8f8d4de093f5c8411f35bd
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r2.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>(r1, $r3)
		Method: <org.bouncycastle.openssl.jcajce.JceOpenSSLPKCS8DecryptorProviderBuilder$1$2: java.io.InputStream getInputStream(java.io.InputStream)>
		SHA-256: 7689167d03dbe0b10726de3e068481ba0c953e80a801c33595be042acab9674c
		Secure: false
	Object:
		Variable: r2
		Type: byte[]
		Statement: virtualinvoke $r9.<java.security.SecureRandom: void nextBytes(byte[])>(r2)
		Method: <org.bouncycastle.pkcs.jcajce.JcePKCS12MacCalculatorBuilder: org.bouncycastle.operator.MacCalculator build(char[])>
		SHA-256: bace417563e8dd83caa66f08b19ecf3ae502be988f8cd0dd534c0779c69126af
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = interfaceinvoke $r4.<java.security.Key: byte[] getEncoded()>()
		Method: <org.bouncycastle.openssl.jcajce.JcaMiscPEMGenerator: java.lang.Object convertObject(java.lang.Object)>
		SHA-256: 6d814e383ca5cca2c3075425c29ea17f11960392f66e04944365135282e9c8ec
		Secure: true
	Object:
		Variable: $r32
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r32.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r33)
		Method: <org.bouncycastle.cms.jcajce.EnvelopedDataHelper$1: java.lang.Object doInJCE()>
		SHA-256: ac38a33965fb89f1c637012da9b681c33d00f59c33a55229afc1f3716adf3a36
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke r19.<java.security.Signature: boolean verify(byte[])>($r12)
		Method: <org.bouncycastle.mozilla.SignedPublicKeyAndChallenge: boolean verify(java.lang.String)>
		SHA-256: f70297821eaeb587471c719a0840745817c38e995846b54321065165eb3d8925
		Secure: false
	Object:
		Variable: r103
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke r103.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>(r1, r86, $i1, $i2)
		Method: <org.bouncycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder: org.bouncycastle.operator.OutputEncryptor build(char[])>
		SHA-256: 13765ce60b6f0cf235974a35c753e68ec697f8dfa5663142351c47ed0a42351
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.CipherOutputStream
		Statement: specialinvoke $r2.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>(r1, $r3)
		Method: <org.bouncycastle.cert.crmf.jcajce.JceCRMFEncryptorBuilder$CRMFOutputEncryptor: java.io.OutputStream getOutputStream(java.io.OutputStream)>
		SHA-256: cc933089661c06889fee362c37080ed7435bd6ba1ef5d7dd1013b3a5dffb69b0
		Secure: false
	Object:
		Variable: r7
		Type: byte[]
		Statement: r7 = interfaceinvoke r2.<java.security.Key: byte[] getEncoded()>()
		Method: <org.bouncycastle.cms.jcajce.EnvelopedDataHelper: void keySizeCheck(org.bouncycastle.asn1.x509.AlgorithmIdentifier,java.security.Key)>
		SHA-256: b7b968e2ad35a81009f52a7f4c208f28f9720006929f6360dc5d9e2f2a0c4d66
		Secure: true
	Object:
		Variable: $r11
		Type: java.lang.String
		Statement: specialinvoke r30.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r10, $r11)
		Method: <org.bouncycastle.operator.jcajce.JceInputDecryptorProviderBuilder$1: org.bouncycastle.operator.InputDecryptor get(org.bouncycastle.asn1.x509.AlgorithmIdentifier)>
		SHA-256: ec3e1f64c988a1d0be4630caedd97dc1de0eb9e24b165e03b4640e0ff6b52c5f
		Secure: false
	Object:
		Variable: $i2
		Type: int
		Statement: specialinvoke r103.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>(r1, r86, $i1, $i2)
		Method: <org.bouncycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder: org.bouncycastle.operator.OutputEncryptor build(char[])>
		SHA-256: 52b4e867219c0738ad5cad986de55ea80bddaa9b0a734ed2dc6bb8cc6da260af
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer2437)
		Method: <org.bouncycastle.operator.jcajce.OperatorUtils: java.security.Key getJceKey(org.bouncycastle.operator.GenericKey)>
		SHA-256: 56ffc654d0b2da4d31b002da4cf1f5d1b269df0c200bd89a0fc1df5b941b8403
		Secure: false
	Object:
		Variable: $r23
		Type: byte[]
		Statement: $r23 = interfaceinvoke $r22.<java.security.Key: byte[] getEncoded()>()
		Method: <org.bouncycastle.operator.jcajce.JceAsymmetricKeyWrapper: byte[] generateWrappedKey(org.bouncycastle.operator.GenericKey)>
		SHA-256: b7abbce9f43c8d5ed48907728468d18bb83fc74b91c525668c35c56e8442ed2
		Secure: true
	Object:
		Variable: r37
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r37.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r32)
		Method: <org.bouncycastle.cert.crmf.jcajce.CRMFHelper$1: java.lang.Object doInJCE()>
		SHA-256: 7b532bb2fd8b9038e7dbbea825a24d562f7d283b632bc5afe0d79803143dacba
		Secure: false
	Object:
		Variable: r119
		Type: javax.crypto.spec.PBEParameterSpec
		Statement: specialinvoke r119.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r16, $i0)
		Method: <org.bouncycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder$1: org.bouncycastle.operator.InputDecryptor get(org.bouncycastle.asn1.x509.AlgorithmIdentifier)>
		SHA-256: fb7cc1f734986dd155a2d6595ad20bd4fc3a2e5b64cf9a0ffbbb41af63269564
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r12, $r14)
		Method: <org.bouncycastle.cert.crmf.jcajce.JceAsymmetricValueDecryptorGenerator: java.security.Key extractSecretKey(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.x509.AlgorithmIdentifier,byte[])>
		SHA-256: 910a258690ba4ebb471916301b6e9a4654ef203d3087059e2893507aaba9e5c2
		Secure: true
	Object:
		Variable: $i1
		Type: int
		Statement: specialinvoke r18.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>(r1, r3, varReplacer1895, $i1)
		Method: <org.bouncycastle.openssl.jcajce.PEMUtilities: javax.crypto.SecretKey getKey(org.bouncycastle.jcajce.util.JcaJceHelper,char[],java.lang.String,int,byte[],boolean)>
		SHA-256: f505aee6c21b1e53befc796a57606afd70f527598d1cae83290c8bcb74e947d2
		Secure: false
	Object:
		Variable: r66
		Type: java.security.Key
		Statement: r49 = interfaceinvoke r66.<java.security.Key: byte[] getEncoded()>()
		Method: <org.bouncycastle.operator.jcajce.JceAsymmetricKeyUnwrapper: org.bouncycastle.operator.GenericKey generateUnwrappedKey(org.bouncycastle.asn1.x509.AlgorithmIdentifier,byte[])>
		SHA-256: 9bff268822272cea8f842b12bfd74f47779def60afb1df1fa56807959b98e613
		Secure: true

Findings in Java Class: org.bouncycastle.cms.RecipientInformation

	 in Method: byte[] getMac()
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #4af1e6123e58e1b67accba2c5188d8c1612bc8919e161790c89b5c076ef9b569)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: staticinvoke <org.bouncycastle.util.io.Streams: void drain(java.io.InputStream)>($r12)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #7689167d03dbe0b10726de3e068481ba0c953e80a801c33595be042acab9674c)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: staticinvoke <org.bouncycastle.util.io.Streams: void drain(java.io.InputStream)>($r12)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #f1256a486b40fb196e6f7c8f63cff660ef872ddb1ae1e9a6b418b4752034ca1b)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: staticinvoke <org.bouncycastle.util.io.Streams: void drain(java.io.InputStream)>($r12)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #73dc089e6954b762054e272dbf6f43245b03c6fd0face9c411b5d7c5656ba0e0)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: staticinvoke <org.bouncycastle.util.io.Streams: void drain(java.io.InputStream)>($r12)


	 in Method: org.bouncycastle.cms.CMSTypedStream getContentStream(org.bouncycastle.cms.Recipient)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #4af1e6123e58e1b67accba2c5188d8c1612bc8919e161790c89b5c076ef9b569)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: specialinvoke $r4.<org.bouncycastle.cms.CMSTypedStream: void <init>(java.io.InputStream)>($r8)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #7689167d03dbe0b10726de3e068481ba0c953e80a801c33595be042acab9674c)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: specialinvoke $r4.<org.bouncycastle.cms.CMSTypedStream: void <init>(java.io.InputStream)>($r8)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #f1256a486b40fb196e6f7c8f63cff660ef872ddb1ae1e9a6b418b4752034ca1b)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: specialinvoke $r4.<org.bouncycastle.cms.CMSTypedStream: void <init>(java.io.InputStream)>($r8)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #73dc089e6954b762054e272dbf6f43245b03c6fd0face9c411b5d7c5656ba0e0)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: specialinvoke $r4.<org.bouncycastle.cms.CMSTypedStream: void <init>(java.io.InputStream)>($r8)


Findings in Java Class: org.bouncycastle.pkcs.PKCS8EncryptedPrivateKeyInfo

	 in Method: org.bouncycastle.asn1.pkcs.PrivateKeyInfo decryptPrivateKeyInfo(org.bouncycastle.operator.InputDecryptorProvider)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #4af1e6123e58e1b67accba2c5188d8c1612bc8919e161790c89b5c076ef9b569)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: $r9 = staticinvoke <org.bouncycastle.util.io.Streams: byte[] readAll(java.io.InputStream)>($r8)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #7689167d03dbe0b10726de3e068481ba0c953e80a801c33595be042acab9674c)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: $r9 = staticinvoke <org.bouncycastle.util.io.Streams: byte[] readAll(java.io.InputStream)>($r8)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #f1256a486b40fb196e6f7c8f63cff660ef872ddb1ae1e9a6b418b4752034ca1b)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: $r9 = staticinvoke <org.bouncycastle.util.io.Streams: byte[] readAll(java.io.InputStream)>($r8)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #73dc089e6954b762054e272dbf6f43245b03c6fd0face9c411b5d7c5656ba0e0)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: $r9 = staticinvoke <org.bouncycastle.util.io.Streams: byte[] readAll(java.io.InputStream)>($r8)


Findings in Java Class: org.bouncycastle.cms.CMSEncryptedData

	 in Method: org.bouncycastle.cms.CMSTypedStream getContentStream(org.bouncycastle.operator.InputDecryptorProvider)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #4af1e6123e58e1b67accba2c5188d8c1612bc8919e161790c89b5c076ef9b569)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: specialinvoke $r9.<org.bouncycastle.cms.CMSTypedStream: void <init>(org.bouncycastle.asn1.ASN1ObjectIdentifier,java.io.InputStream)>($r10, $r11)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #7689167d03dbe0b10726de3e068481ba0c953e80a801c33595be042acab9674c)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: specialinvoke $r9.<org.bouncycastle.cms.CMSTypedStream: void <init>(org.bouncycastle.asn1.ASN1ObjectIdentifier,java.io.InputStream)>($r10, $r11)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #f1256a486b40fb196e6f7c8f63cff660ef872ddb1ae1e9a6b418b4752034ca1b)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: specialinvoke $r9.<org.bouncycastle.cms.CMSTypedStream: void <init>(org.bouncycastle.asn1.ASN1ObjectIdentifier,java.io.InputStream)>($r10, $r11)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #73dc089e6954b762054e272dbf6f43245b03c6fd0face9c411b5d7c5656ba0e0)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: specialinvoke $r9.<org.bouncycastle.cms.CMSTypedStream: void <init>(org.bouncycastle.asn1.ASN1ObjectIdentifier,java.io.InputStream)>($r10, $r11)


Findings in Java Class: org.bouncycastle.cert.crmf.EncryptedValueParser

	 in Method: byte[] decryptValue(org.bouncycastle.cert.crmf.ValueDecryptorGenerator)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #4af1e6123e58e1b67accba2c5188d8c1612bc8919e161790c89b5c076ef9b569)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: r28 = staticinvoke <org.bouncycastle.util.io.Streams: byte[] readAll(java.io.InputStream)>(r3)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #7689167d03dbe0b10726de3e068481ba0c953e80a801c33595be042acab9674c)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: r28 = staticinvoke <org.bouncycastle.util.io.Streams: byte[] readAll(java.io.InputStream)>(r3)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #f1256a486b40fb196e6f7c8f63cff660ef872ddb1ae1e9a6b418b4752034ca1b)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: r28 = staticinvoke <org.bouncycastle.util.io.Streams: byte[] readAll(java.io.InputStream)>(r3)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #73dc089e6954b762054e272dbf6f43245b03c6fd0face9c411b5d7c5656ba0e0)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: r28 = staticinvoke <org.bouncycastle.util.io.Streams: byte[] readAll(java.io.InputStream)>(r3)


Findings in Java Class: org.bouncycastle.cms.CMSEnvelopedDataStreamGenerator

	 in Method: java.io.OutputStream open(org.bouncycastle.asn1.ASN1ObjectIdentifier,java.io.OutputStream,org.bouncycastle.operator.OutputEncryptor)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherOutputStream (on Object #cc933089661c06889fee362c37080ed7435bd6ba1ef5d7dd1013b3a5dffb69b0)
			Operation on object of type javax.crypto.CipherOutputStream object not completed. Expected call to write
			at statement: return $r4

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherOutputStream (on Object #800d0eca44acd600efad2fef9ac117282fa9598f58337f55e9ee98a44eb15338)
			Operation on object of type javax.crypto.CipherOutputStream object not completed. Expected call to write
			at statement: return $r4

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherOutputStream (on Object #2a37ad332ce644402ba8bd9e0b74b3cd26bf2f4678ddb62306d9ddffc25cfaf4)
			Operation on object of type javax.crypto.CipherOutputStream object not completed. Expected call to write
			at statement: return $r4

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherOutputStream (on Object #5b7c890b951f552e1c1dd71a2308a543b3702cdd4ef4e7fbef020e527964e7d7)
			Operation on object of type javax.crypto.CipherOutputStream object not completed. Expected call to write
			at statement: return $r4


	 in Method: java.io.OutputStream open(java.io.OutputStream,org.bouncycastle.operator.OutputEncryptor)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherOutputStream (on Object #cc933089661c06889fee362c37080ed7435bd6ba1ef5d7dd1013b3a5dffb69b0)
			Operation on object of type javax.crypto.CipherOutputStream object not completed. Expected call to write
			at statement: return $r6

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherOutputStream (on Object #800d0eca44acd600efad2fef9ac117282fa9598f58337f55e9ee98a44eb15338)
			Operation on object of type javax.crypto.CipherOutputStream object not completed. Expected call to write
			at statement: return $r6

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherOutputStream (on Object #2a37ad332ce644402ba8bd9e0b74b3cd26bf2f4678ddb62306d9ddffc25cfaf4)
			Operation on object of type javax.crypto.CipherOutputStream object not completed. Expected call to write
			at statement: return $r6

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherOutputStream (on Object #5b7c890b951f552e1c1dd71a2308a543b3702cdd4ef4e7fbef020e527964e7d7)
			Operation on object of type javax.crypto.CipherOutputStream object not completed. Expected call to write
			at statement: return $r6


	 in Method: java.io.OutputStream open(java.io.OutputStream,org.bouncycastle.asn1.ASN1EncodableVector,org.bouncycastle.operator.OutputEncryptor)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherOutputStream (on Object #cc933089661c06889fee362c37080ed7435bd6ba1ef5d7dd1013b3a5dffb69b0)
			Operation on object of type javax.crypto.CipherOutputStream object not completed. Expected call to write
			at statement: return r42

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherOutputStream (on Object #800d0eca44acd600efad2fef9ac117282fa9598f58337f55e9ee98a44eb15338)
			Operation on object of type javax.crypto.CipherOutputStream object not completed. Expected call to write
			at statement: return r42

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherOutputStream (on Object #2a37ad332ce644402ba8bd9e0b74b3cd26bf2f4678ddb62306d9ddffc25cfaf4)
			Operation on object of type javax.crypto.CipherOutputStream object not completed. Expected call to write
			at statement: return r42

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherOutputStream (on Object #5b7c890b951f552e1c1dd71a2308a543b3702cdd4ef4e7fbef020e527964e7d7)
			Operation on object of type javax.crypto.CipherOutputStream object not completed. Expected call to write
			at statement: return r42


Findings in Java Class: org.bouncycastle.cert.jcajce.JcaX509ExtensionUtils

	 in Method: void <init>()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #d909520bb8bf6cb7a065f16da3ad8f7e6db33e099ac0d302e2ba4548275e8d8f)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke r0.<org.bouncycastle.cert.X509ExtensionUtils: void <init>(org.bouncycastle.operator.DigestCalculator)>($r1)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #d909520bb8bf6cb7a065f16da3ad8f7e6db33e099ac0d302e2ba4548275e8d8f)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke r0.<org.bouncycastle.cert.X509ExtensionUtils: void <init>(org.bouncycastle.operator.DigestCalculator)>($r1)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #d909520bb8bf6cb7a065f16da3ad8f7e6db33e099ac0d302e2ba4548275e8d8f)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer256)


Findings in Java Class: org.bouncycastle.cms.jcajce.EnvelopedDataHelper

	 in Method: java.security.Key getJceKey(org.bouncycastle.operator.GenericKey)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer1049)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #1fced5c1e832e025a0bddc1a8f83c258b5f75b42254b748b592870aa2de56fb5)
			Second parameter (with value "ENC") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer1049)


	 in Method: byte[] calculateDerivedKey(int,char[],org.bouncycastle.asn1.x509.AlgorithmIdentifier,int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke r25.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>(r1, $r12, $i2, i1)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #5f1c91b94bdcf57040ae3543d85a213028ae9a68c7d5895e8c526ff9cbd071ef)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: r4 = virtualinvoke r23.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r25)


	 in Method: java.security.Key getJceKey(org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.operator.GenericKey)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, $r10)


Findings in Java Class: org.bouncycastle.cert.crmf.EncryptedValueBuilder

	 in Method: org.bouncycastle.asn1.crmf.EncryptedValue encryptData(byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherOutputStream (on Object #800d0eca44acd600efad2fef9ac117282fa9598f58337f55e9ee98a44eb15338)
			Operation on object of type javax.crypto.CipherOutputStream object not completed. Expected call to java.lang.AutoCloseable: void close(), java.io.FilterOutputStream: void close(), javax.crypto.CipherOutputStream: void close(), java.io.Closeable: void close(), java.io.OutputStream: void close()
			at statement: virtualinvoke r3.<java.io.OutputStream: void close()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherOutputStream (on Object #2a37ad332ce644402ba8bd9e0b74b3cd26bf2f4678ddb62306d9ddffc25cfaf4)
			Operation on object of type javax.crypto.CipherOutputStream object not completed. Expected call to java.lang.AutoCloseable: void close(), java.io.FilterOutputStream: void close(), javax.crypto.CipherOutputStream: void close(), java.io.Closeable: void close(), java.io.OutputStream: void close()
			at statement: virtualinvoke r3.<java.io.OutputStream: void close()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherOutputStream (on Object #5b7c890b951f552e1c1dd71a2308a543b3702cdd4ef4e7fbef020e527964e7d7)
			Operation on object of type javax.crypto.CipherOutputStream object not completed. Expected call to java.lang.AutoCloseable: void close(), java.io.FilterOutputStream: void close(), javax.crypto.CipherOutputStream: void close(), java.io.Closeable: void close(), java.io.OutputStream: void close()
			at statement: virtualinvoke r3.<java.io.OutputStream: void close()>()


Findings in Java Class: org.bouncycastle.openssl.PKCS8Generator

	 in Method: org.bouncycastle.util.io.pem.PemObject generate(org.bouncycastle.asn1.pkcs.PrivateKeyInfo,org.bouncycastle.operator.OutputEncryptor)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherOutputStream (on Object #800d0eca44acd600efad2fef9ac117282fa9598f58337f55e9ee98a44eb15338)
			Operation on object of type javax.crypto.CipherOutputStream object not completed. Expected call to java.lang.AutoCloseable: void close(), java.io.FilterOutputStream: void close(), javax.crypto.CipherOutputStream: void close(), java.io.Closeable: void close(), java.io.OutputStream: void close()
			at statement: virtualinvoke r4.<java.io.OutputStream: void close()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherOutputStream (on Object #2a37ad332ce644402ba8bd9e0b74b3cd26bf2f4678ddb62306d9ddffc25cfaf4)
			Operation on object of type javax.crypto.CipherOutputStream object not completed. Expected call to java.lang.AutoCloseable: void close(), java.io.FilterOutputStream: void close(), javax.crypto.CipherOutputStream: void close(), java.io.Closeable: void close(), java.io.OutputStream: void close()
			at statement: virtualinvoke r4.<java.io.OutputStream: void close()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherOutputStream (on Object #5b7c890b951f552e1c1dd71a2308a543b3702cdd4ef4e7fbef020e527964e7d7)
			Operation on object of type javax.crypto.CipherOutputStream object not completed. Expected call to java.lang.AutoCloseable: void close(), java.io.FilterOutputStream: void close(), javax.crypto.CipherOutputStream: void close(), java.io.Closeable: void close(), java.io.OutputStream: void close()
			at statement: virtualinvoke r4.<java.io.OutputStream: void close()>()


Findings in Java Class: org.bouncycastle.pkcs.PKCS8EncryptedPrivateKeyInfoBuilder

	 in Method: org.bouncycastle.pkcs.PKCS8EncryptedPrivateKeyInfo build(org.bouncycastle.operator.OutputEncryptor)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherOutputStream (on Object #800d0eca44acd600efad2fef9ac117282fa9598f58337f55e9ee98a44eb15338)
			Operation on object of type javax.crypto.CipherOutputStream object not completed. Expected call to java.lang.AutoCloseable: void close(), java.io.FilterOutputStream: void close(), javax.crypto.CipherOutputStream: void close(), java.io.Closeable: void close(), java.io.OutputStream: void close()
			at statement: virtualinvoke r2.<java.io.OutputStream: void close()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherOutputStream (on Object #2a37ad332ce644402ba8bd9e0b74b3cd26bf2f4678ddb62306d9ddffc25cfaf4)
			Operation on object of type javax.crypto.CipherOutputStream object not completed. Expected call to java.lang.AutoCloseable: void close(), java.io.FilterOutputStream: void close(), javax.crypto.CipherOutputStream: void close(), java.io.Closeable: void close(), java.io.OutputStream: void close()
			at statement: virtualinvoke r2.<java.io.OutputStream: void close()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherOutputStream (on Object #5b7c890b951f552e1c1dd71a2308a543b3702cdd4ef4e7fbef020e527964e7d7)
			Operation on object of type javax.crypto.CipherOutputStream object not completed. Expected call to java.lang.AutoCloseable: void close(), java.io.FilterOutputStream: void close(), javax.crypto.CipherOutputStream: void close(), java.io.Closeable: void close(), java.io.OutputStream: void close()
			at statement: virtualinvoke r2.<java.io.OutputStream: void close()>()


Findings in Java Class: org.bouncycastle.eac.operator.jcajce.JcaEACSignerBuilder

	 in Method: org.bouncycastle.eac.operator.EACSigner build(java.lang.String,java.security.PrivateKey)
		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #c9f51029669df49fc0d51fa1b844ce670286117ac59f567667aa04ba8088675a)
			Operation on object of type java.security.Signature object not completed. Expected call to update
			at statement: return $r6

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #3332fe42c69dd182d92cc403b6a0ffc6d0715790b9234609b75e1fe5927fc51c)
			Operation on object of type java.security.Signature object not completed. Expected call to update
			at statement: return $r6

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #a3f8ea87e72cc19683494212e2b295a95697343432beee4e8811f9eda7db0b67)
			Operation on object of type java.security.Signature object not completed. Expected call to update
			at statement: return $r6


Findings in Java Class: org.bouncycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder

	 in Method: org.bouncycastle.eac.operator.EACSignatureVerifier build(org.bouncycastle.asn1.ASN1ObjectIdentifier,java.security.PublicKey)
		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #c9f51029669df49fc0d51fa1b844ce670286117ac59f567667aa04ba8088675a)
			Operation on object of type java.security.Signature object not completed. Expected call to update, verify
			at statement: return r39

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #3332fe42c69dd182d92cc403b6a0ffc6d0715790b9234609b75e1fe5927fc51c)
			Operation on object of type java.security.Signature object not completed. Expected call to update, verify
			at statement: return r39

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #a3f8ea87e72cc19683494212e2b295a95697343432beee4e8811f9eda7db0b67)
			Operation on object of type java.security.Signature object not completed. Expected call to update, verify
			at statement: return r39


Findings in Java Class: org.bouncycastle.openssl.jcajce.PEMUtilities

	 in Method: javax.crypto.SecretKey generateSecretKeyForPKCS5Scheme2(org.bouncycastle.jcajce.util.JcaJceHelper,java.lang.String,char[],byte[],int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r6.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>(r2, r3, i0, $i1)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #9e370df55bd9d7e848db48a9e445003107a240dcd2ed7b4200a02b3f24255c44)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: r5 = virtualinvoke r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, r1)


	 in Method: javax.crypto.SecretKey generateSecretKeyForPKCS5Scheme2(org.bouncycastle.jcajce.util.JcaJceHelper,java.lang.String,char[],byte[],int,org.bouncycastle.asn1.x509.AlgorithmIdentifier)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r13, r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #76ee31981d39dd8cdf45ff55d6ae22116a26d59a0b4b784e16e26bb40b9bcd5)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: r7 = virtualinvoke r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r11)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r11.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>(r2, r3, i0, $i1)


	 in Method: javax.crypto.SecretKey getKey(org.bouncycastle.jcajce.util.JcaJceHelper,char[],java.lang.String,int,byte[],boolean)
		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #1204c0d08044d9dc243ff904b7048ecb71b0fb01e85ad0ffe825a75ec85421ea)
			Third parameter (with value 1)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke r18.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>(r1, r3, varReplacer1895, $i1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke r18.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>(r1, r3, varReplacer1895, $i1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r19.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r5, r2)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #55c593a96e797930481abbaf6d6a30dddbae159c5ea4ba899ef003d7ad60c0b1)
			Second parameter (with value "Blowfish") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke r19.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r5, r2)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #55c593a96e797930481abbaf6d6a30dddbae159c5ea4ba899ef003d7ad60c0b1)
			Second parameter (with value "DESede") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke r19.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r5, r2)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #1204c0d08044d9dc243ff904b7048ecb71b0fb01e85ad0ffe825a75ec85421ea)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r7 = virtualinvoke r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r15)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #55c593a96e797930481abbaf6d6a30dddbae159c5ea4ba899ef003d7ad60c0b1)
			Second parameter (with value "RC2") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke r19.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r5, r2)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #55c593a96e797930481abbaf6d6a30dddbae159c5ea4ba899ef003d7ad60c0b1)
			Second parameter (with value "DES") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke r19.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r5, r2)


	 in Method: byte[] crypt(boolean,org.bouncycastle.jcajce.util.JcaJceHelper,byte[],char[],java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r30.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r4)


Findings in Java Class: org.bouncycastle.operator.jcajce.JceAsymmetricKeyWrapper

	 in Method: byte[] generateWrappedKey(org.bouncycastle.operator.GenericKey)
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #a0891113ab416cb41719f5e625b64e0aad436623ebb818738df76ed8a98c8497)
			Second parameter (with value "GOST") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke r103.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r5, varReplacer2277)


Findings in Java Class: org.bouncycastle.operator.jcajce.OperatorUtils

	 in Method: java.security.Key getJceKey(org.bouncycastle.operator.GenericKey)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer2437)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #56ffc654d0b2da4d31b002da4cf1f5d1b269df0c200bd89a0fc1df5b941b8403)
			Second parameter (with value "ENC") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer2437)


Findings in Java Class: org.bouncycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder$1

	 in Method: org.bouncycastle.operator.InputDecryptor get(org.bouncycastle.asn1.x509.AlgorithmIdentifier)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r116.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r52)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #23c79f6cad5db971b36a90b61de7d7694c1e6fa3c5db079ed4b4194c467f23ad)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: r95 = virtualinvoke r96.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r114)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r119.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r16, $i0)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke r114.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r54, $r55, $i3, $i4)


Findings in Java Class: org.bouncycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder

	 in Method: org.bouncycastle.operator.OutputEncryptor build(char[])
		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #13765ce60b6f0cf235974a35c753e68ec697f8dfa5663142351c47ed0a42351)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: r88 = virtualinvoke r87.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r103)


Findings in Java Class: org.bouncycastle.cms.jcajce.JcePasswordRecipient

	 in Method: java.security.Key extractSecretKey(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.x509.AlgorithmIdentifier,byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r27.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r3, $r13)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r26.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r11)


Findings in Java Class: org.bouncycastle.operator.jcajce.JceInputDecryptorProviderBuilder$1

	 in Method: org.bouncycastle.operator.InputDecryptor get(org.bouncycastle.asn1.x509.AlgorithmIdentifier)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r30.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r10, $r11)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r31.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r20)


Findings in Java Class: org.bouncycastle.est.jcajce.SSLSocketFactoryCreatorBuilder$1

	 in Method: javax.net.ssl.SSLSocketFactory createFactory()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r16.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r10, $r9, $r8)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r16.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r10, $r9, $r8)


Findings in Java Class: org.bouncycastle.cms.jcajce.EnvelopedDataHelper$1

	 in Method: java.lang.Object doInJCE()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r28.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r30)


Findings in Java Class: org.bouncycastle.cms.jcajce.JcePasswordRecipientInfoGenerator

	 in Method: byte[] generateEncryptedBytes(org.bouncycastle.asn1.x509.AlgorithmIdentifier,byte[],org.bouncycastle.operator.GenericKey)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r26.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, $r14)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r25.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r12)


Findings in Java Class: org.bouncycastle.est.jcajce.JcaJceUtils

	 in Method: javax.net.ssl.KeyManagerFactory createKeyManagerFactory(java.lang.String,java.lang.String,java.security.KeyStore,char[])
		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r5.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r2, r3)


Findings in Java Class: org.bouncycastle.cert.crmf.jcajce.CRMFHelper$1

	 in Method: java.lang.Object doInJCE()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r38.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r35)


Findings in Java Class: org.bouncycastle.cert.crmf.jcajce.JcePKMACValuesCalculator

	 in Method: byte[] calculateMac(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r17.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, $r7)


Findings in Java Class: org.bouncycastle.mozilla.SignedPublicKeyAndChallenge

	 in Method: boolean verify(java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke r19.<java.security.Signature: void initVerify(java.security.PublicKey)>(r2)


Findings in Java Class: org.bouncycastle.pkcs.jcajce.JcePKCS12MacCalculatorBuilderProvider$1

	 in Method: org.bouncycastle.operator.MacCalculator build(char[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r26.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r13, $i0)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 117

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 9
	RequiredPredicateError: 28
	IncompleteOperationError: 55
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 5 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 9.114 s

Current Proejct: simpleclient_caffeine-0.5.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 480.7 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.137 s

Current Proejct: jackson-dataformat-yaml-2.8.11.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 497.9 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.597 s

Current Proejct: jackson-databind-2.8.11.4.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 835.4 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 1 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 1 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 5.768 s

Current Proejct: log4j-slf4j-impl-2.10.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 392.3 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.150 s

Current Proejct: typetools-0.5.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 407.6 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.164 s

Current Proejct: jetty-util-9.4.20.v20190813.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 853.6 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 15 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 15
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.07

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 15
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.13

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 15
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.2

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 15
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.27

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 15
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 16
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.38

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 16
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.44

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 16
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 16
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.56

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 16
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.63

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 16
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.69

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 18
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 18
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.72

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 14 of 18
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.78

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 15 of 18
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.83

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 16 of 18
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.89

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 17 of 18
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.94

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: $r4 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>(r1, r2)
		Method: <org.eclipse.jetty.util.ssl.SslContextFactory: java.security.SecureRandom getSecureRandomInstance()>
		SHA-256: 9054a0d6ed54b20446ada9efac19a589ff8417c54f2144d1eeb265a65074ef51
		Secure: true
	Object:
		Variable: $r4
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r4 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String,java.lang.String)>(r1, r2)
		Method: <org.eclipse.jetty.util.ssl.SslContextFactory: javax.net.ssl.KeyManagerFactory getKeyManagerFactoryInstance()>
		SHA-256: 48c487dce20855b1d1432cb51eb8a1fedf70a7045049133c4a2bd07c1b22d829
		Secure: false
	Object:
		Variable: $r10
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r10 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(r1)
		Method: <org.eclipse.jetty.util.ssl.SslContextFactory: javax.net.ssl.TrustManagerFactory getTrustManagerFactoryInstance()>
		SHA-256: 6066b365f7c2af7c1093dc04d414a526df2d5b8818debb5cf31e1b50b432b888
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.cert.PKIXBuilderParameters
		Statement: specialinvoke $r4.<java.security.cert.PKIXBuilderParameters: void <init>(java.security.KeyStore,java.security.cert.CertSelector)>(r1, $r5)
		Method: <org.eclipse.jetty.util.ssl.SslContextFactory: java.security.cert.PKIXBuilderParameters newPKIXBuilderParameters(java.security.KeyStore,java.util.Collection)>
		SHA-256: 6bed0ac2c15e1d30a37b2f93ffd3b98ca590c1fdef403424df6ab708ac33d3a9
		Secure: false
	Object:
		Variable: $r16
		Type: java.security.MessageDigest
		Statement: $r16 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2714)
		Method: <org.eclipse.jetty.util.security.Credential$MD5: java.lang.String digest(java.lang.String)>
		SHA-256: 3d4d2323acd8d9a8c5bdfe1e03343fa1f675954189e3db5f09a81197031155bf
		Secure: false
	Object:
		Variable: r24
		Type: java.lang.Object[]
		Statement: r24 = virtualinvoke r2.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <org.eclipse.jetty.util.ssl.SslContextFactory: javax.net.ssl.KeyManager[] getKeyManagers(java.security.KeyStore)>
		SHA-256: e4908b95e7b3228693e9ad6bdd85f0241577b833775f8f3927bb9b6dfad7bb2b
		Secure: false
	Object:
		Variable: r13
		Type: java.security.KeyStore
		Statement: r13 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.lang.String)>(r1, r2)
		Method: <org.eclipse.jetty.util.security.CertificateUtils: java.security.KeyStore getKeyStore(org.eclipse.jetty.util.resource.Resource,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 9f690b253c597246c16aa082c018d004582d11010736eb7a87a58d8445ccfce3
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.MessageDigest
		Statement: $r12 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2709)
		Method: <org.eclipse.jetty.util.security.Credential$MD5: boolean check(java.lang.Object)>
		SHA-256: 611e5c284c7609c0c210500bf869facb5bd92d3699da82b46912b618c9f9e62c
		Secure: false
	Object:
		Variable: r13
		Type: java.security.KeyStore
		Statement: r13 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(r1)
		Method: <org.eclipse.jetty.util.security.CertificateUtils: java.security.KeyStore getKeyStore(org.eclipse.jetty.util.resource.Resource,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: c905d34ee6d4a6b5d9cf316851d0fa22f94662adc5298f57f9e38f7dec18d563
		Secure: false
	Object:
		Variable: $r6
		Type: javax.net.ssl.CertPathTrustManagerParameters
		Statement: specialinvoke $r6.<javax.net.ssl.CertPathTrustManagerParameters: void <init>(java.security.cert.CertPathParameters)>(r8)
		Method: <org.eclipse.jetty.util.ssl.SslContextFactory: javax.net.ssl.TrustManager[] getTrustManagers(java.security.KeyStore,java.util.Collection)>
		SHA-256: 4133ed5794b3549692ace0c42818ab4f42654f28c0f03821dd6ad2a428185494
		Secure: false
	Object:
		Variable: r7
		Type: javax.net.ssl.TrustManager[]
		Statement: r7 = virtualinvoke r3.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <org.eclipse.jetty.util.ssl.SslContextFactory: javax.net.ssl.TrustManager[] getTrustManagers(java.security.KeyStore,java.util.Collection)>
		SHA-256: 43fdffc3e6b00f04c5daa5cdc0e9db5581ffcbed6ae4aa7cfbd5666a45fd8d5f
		Secure: false
	Object:
		Variable: r42
		Type: java.security.cert.PKIXBuilderParameters
		Statement: specialinvoke r42.<java.security.cert.PKIXBuilderParameters: void <init>(java.security.KeyStore,java.security.cert.CertSelector)>($r8, r34)
		Method: <org.eclipse.jetty.util.security.CertificateValidator: void validate(java.security.cert.Certificate[])>
		SHA-256: d542c10b479e0344518ad7923016bd042f68ba48f85d2b416dfafdfdfde57636
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.SecureRandom
		Statement: $r10 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(r1)
		Method: <org.eclipse.jetty.util.ssl.SslContextFactory: java.security.SecureRandom getSecureRandomInstance()>
		SHA-256: 829b1d59c55ceafddb323233769d200c71bd6f1fca2dda169d071cea3785489c
		Secure: true
	Object:
		Variable: $r10
		Type: javax.net.ssl.SSLContext
		Statement: $r10 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(r1)
		Method: <org.eclipse.jetty.util.ssl.SslContextFactory: javax.net.ssl.SSLContext getSSLContextInstance()>
		SHA-256: 8e9516804508e1ef568b87c2e2a409ecb0549ffe689e33d1c9e50eb67bab392e
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>(r1, r2)
		Method: <org.eclipse.jetty.util.ssl.SslContextFactory: javax.net.ssl.SSLContext getSSLContextInstance()>
		SHA-256: a3ce5c5609e44d849c340f04e3356bb9ef9567447d74739e67e89fbb95a4b5aa
		Secure: false
	Object:
		Variable: $r10
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r10 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(r1)
		Method: <org.eclipse.jetty.util.ssl.SslContextFactory: javax.net.ssl.KeyManagerFactory getKeyManagerFactoryInstance()>
		SHA-256: 7792ebfd0187cf43d8529d8f799faee2ed1a6826a550b09c9a53f5ed4cca9bf9
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r4 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.lang.String)>(r1, r2)
		Method: <org.eclipse.jetty.util.ssl.SslContextFactory: javax.net.ssl.TrustManagerFactory getTrustManagerFactoryInstance()>
		SHA-256: 6d5a96b6afa95e63cd61140fd11cb80518f68533b81d284ba783f73a4cb618d5
		Secure: false
	Object:
		Variable: r7
		Type: javax.net.ssl.TrustManager[]
		Statement: r7 = virtualinvoke r9.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <org.eclipse.jetty.util.ssl.SslContextFactory: javax.net.ssl.TrustManager[] getTrustManagers(java.security.KeyStore,java.util.Collection)>
		SHA-256: ab7b40e9cc123dc93b85146fa24a8cc6a0e0c50db3ada2371f9969d1120e6139
		Secure: false

Findings in Java Class: org.eclipse.jetty.util.ssl.SslContextFactory

	 in Method: void dump(java.lang.Appendable,java.lang.String)
		ForbiddenMethodError violating CrySL rule for javax.net.ssl.SSLContext
			Detected call to forbidden method javax.net.ssl.SSLContext getDefault() of class javax.net.ssl.SSLContext. Instead, call method <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>.
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getDefault()>()


	 in Method: java.util.List selectionDump()
		ForbiddenMethodError violating CrySL rule for javax.net.ssl.SSLContext
			Detected call to forbidden method javax.net.ssl.SSLContext getDefault() of class javax.net.ssl.SSLContext. Instead, call method <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>.
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getDefault()>()


	 in Method: javax.net.ssl.KeyManager[] getKeyManagers(java.security.KeyStore)
		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #7792ebfd0187cf43d8529d8f799faee2ed1a6826a550b09c9a53f5ed4cca9bf9)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r2.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r1, $r27)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r2.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r1, $r27)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #7792ebfd0187cf43d8529d8f799faee2ed1a6826a550b09c9a53f5ed4cca9bf9)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r2.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r1, $r27)


	 in Method: javax.net.ssl.TrustManager[] getTrustManagers(java.security.KeyStore,java.util.Collection)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generated Manager Factory Parameters
			at statement: virtualinvoke r3.<javax.net.ssl.TrustManagerFactory: void init(javax.net.ssl.ManagerFactoryParameters)>($r6)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.CertPathTrustManagerParameters
			First parameter was not properly generated as generated Cert Path Parameters
			at statement: specialinvoke $r6.<javax.net.ssl.CertPathTrustManagerParameters: void <init>(java.security.cert.CertPathParameters)>(r8)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r9.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(r1)


	 in Method: java.security.cert.PKIXBuilderParameters newPKIXBuilderParameters(java.security.KeyStore,java.util.Collection)
		RequiredPredicateError violating CrySL rule for java.security.cert.PKIXBuilderParameters
			First parameter was not properly generated as generated Key Store
			at statement: specialinvoke $r4.<java.security.cert.PKIXBuilderParameters: void <init>(java.security.KeyStore,java.security.cert.CertSelector)>(r1, $r5)


	 in Method: void load()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r52.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(r65, r66, $r17)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r52.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1018, r55, $r56)


Findings in Java Class: org.eclipse.jetty.util.security.CertificateUtils

	 in Method: java.security.KeyStore getKeyStore(org.eclipse.jetty.util.resource.Resource,java.lang.String,java.lang.String,java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #c905d34ee6d4a6b5d9cf316851d0fa22f94662adc5298f57f9e38f7dec18d563)
			Operation on object of type java.security.KeyStore object not completed. Expected call to load
			at statement: r13 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.lang.String)>(r1, r2)

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #9f690b253c597246c16aa082c018d004582d11010736eb7a87a58d8445ccfce3)
			Operation on object of type java.security.KeyStore object not completed. Expected call to load
			at statement: r13 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.lang.String)>(r1, r2)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #c905d34ee6d4a6b5d9cf316851d0fa22f94662adc5298f57f9e38f7dec18d563)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r9.<java.security.KeyStore: void load(java.io.InputStream,char[])>(r4, $r14)

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #c905d34ee6d4a6b5d9cf316851d0fa22f94662adc5298f57f9e38f7dec18d563)
			Operation on object of type java.security.KeyStore object not completed. Expected call to load
			at statement: r13 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(r1)

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #9f690b253c597246c16aa082c018d004582d11010736eb7a87a58d8445ccfce3)
			Operation on object of type java.security.KeyStore object not completed. Expected call to load
			at statement: r13 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(r1)


Findings in Java Class: org.eclipse.jetty.util.security.Credential$MD5

	 in Method: boolean check(java.lang.Object)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #611e5c284c7609c0c210500bf869facb5bd92d3699da82b46912b618c9f9e62c)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r12 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2709)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #611e5c284c7609c0c210500bf869facb5bd92d3699da82b46912b618c9f9e62c)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest
			at statement: virtualinvoke $r6.<java.security.MessageDigest: void update(byte[])>($r9)


	 in Method: java.lang.String digest(java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #3d4d2323acd8d9a8c5bdfe1e03343fa1f675954189e3db5f09a81197031155bf)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest
			at statement: virtualinvoke $r8.<java.security.MessageDigest: void update(byte[])>($r9)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #3d4d2323acd8d9a8c5bdfe1e03343fa1f675954189e3db5f09a81197031155bf)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r16 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2714)


Findings in Java Class: org.eclipse.jetty.util.security.CertificateValidator

	 in Method: void validate(java.security.cert.Certificate[])
		RequiredPredicateError violating CrySL rule for java.security.cert.PKIXBuilderParameters
			First parameter was not properly generated as generated Key Store
			at statement: specialinvoke r42.<java.security.cert.PKIXBuilderParameters: void <init>(java.security.KeyStore,java.security.cert.CertSelector)>($r8, r34)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 18

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 6
	ConstraintError: 2
	RequiredPredicateError: 8
	NeverTypeOfError: 3
	ForbiddenMethodError: 2
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 3 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 7.259 s

Current Proejct: athenz-zpe-java-client-1.8.38.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 430.2 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.271 s

Current Proejct: bookkeeper-tools-framework-4.10.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 534.7 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.331 s

Current Proejct: jul-to-slf4j-1.7.25.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 458.6 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.297 s

Current Proejct: simpleclient_servlet-0.5.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 426.4 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.168 s

Current Proejct: jackson-datatype-joda-2.8.11.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 464.7 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.307 s

Current Proejct: rocksdbjni-5.13.3.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 532.0 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 2.130 s

Current Proejct: netty-common-4.1.43.Final.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 548.3 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 1 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 2
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r2
		Type: byte[]
		Statement: r2 = virtualinvoke r1.<java.security.SecureRandom: byte[] generateSeed(int)>(varReplacer1230)
		Method: <io.netty.util.internal.ThreadLocalRandom$1: void run()>
		SHA-256: 883ce4d2f16498829a4e9ba03803a4c6991443b2a74f0625bb86aa459b403403
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <io.netty.util.internal.ThreadLocalRandom$1: void run()>
		SHA-256: 7b5a6c8dae3abffe2514936e7c1020b7c1c22c0810a3c866ee45528de51e28a7
		Secure: true

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 2
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 3.227 s

Current Proejct: simpleclient-0.5.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 544.0 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.411 s

Current Proejct: objenesis-2.6.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 462.2 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.260 s

Current Proejct: simpleclient_hotspot-0.5.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 496.9 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.375 s

Current Proejct: log4j-web-2.10.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 463.9 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.350 s

Current Proejct: slf4j-simple-1.7.25.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 507.0 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.542 s

Current Proejct: jersey-media-json-jackson-2.27.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 406.2 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.224 s

Current Proejct: maven-core-3.0.5.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 519.7 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 3.490 s

Current Proejct: commons-collections-3.2.2.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 624.9 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 3.477 s

Current Proejct: maven-model-3.0.5.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 460.3 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 2.230 s

Current Proejct: netty-resolver-dns-4.1.43.Final.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 507.1 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.738 s

Current Proejct: netty-transport-4.1.43.Final.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 554.3 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 2.863 s

Current Proejct: kafka-clients-0.9.0.1.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 524.1 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 5 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 5
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.2

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 6
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 7
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.43

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 7
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.57

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 7
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.71

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 7
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.86

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r20
		Type: javax.net.ssl.KeyManagerFactory
		Statement: r20 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(r19)
		Method: <org.apache.kafka.common.security.ssl.SslFactory: javax.net.ssl.SSLContext createSSLContext()>
		SHA-256: f4cf81e4e606a8351bbb8f42dbb0ca63564851f5b5153ca49589aefd21ee0ec0
		Secure: false
	Object:
		Variable: r16
		Type: javax.net.ssl.SSLContext
		Statement: r16 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>($r15, $r14)
		Method: <org.apache.kafka.common.security.ssl.SslFactory: javax.net.ssl.SSLContext createSSLContext()>
		SHA-256: 18b58680471cb422dfc66dc99c19fdca072c1c56e7c6262e633197bb7f5ded22
		Secure: false
	Object:
		Variable: r17
		Type: javax.net.ssl.KeyManager[]
		Statement: r17 = virtualinvoke r20.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <org.apache.kafka.common.security.ssl.SslFactory: javax.net.ssl.SSLContext createSSLContext()>
		SHA-256: 6acc17ec536b1e04fadafe82c15e10c13f5cd9c67f1771ee8530791e71a7bcaa
		Secure: false
	Object:
		Variable: r26
		Type: javax.net.ssl.TrustManagerFactory
		Statement: r26 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(r25)
		Method: <org.apache.kafka.common.security.ssl.SslFactory: javax.net.ssl.SSLContext createSSLContext()>
		SHA-256: c3f529fa405b20d5a24f0285d38a5a432385110f95b568d7e8dc68337e5160f1
		Secure: false
	Object:
		Variable: r16
		Type: javax.net.ssl.SSLContext
		Statement: r16 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r3)
		Method: <org.apache.kafka.common.security.ssl.SslFactory: javax.net.ssl.SSLContext createSSLContext()>
		SHA-256: d3e7523a3496028cb7a1c589722ee2048504c3a1306efe1c85326b4e69e45669
		Secure: false
	Object:
		Variable: $r7
		Type: javax.net.ssl.TrustManager[]
		Statement: $r7 = virtualinvoke r26.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <org.apache.kafka.common.security.ssl.SslFactory: javax.net.ssl.SSLContext createSSLContext()>
		SHA-256: 658678c7e66706095bf212d492d730e717dfa86456b8256e8a556019b4bac391
		Secure: false
	Object:
		Variable: r1
		Type: java.security.KeyStore
		Statement: r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r4)
		Method: <org.apache.kafka.common.security.ssl.SslFactory$SecurityStore: java.security.KeyStore load()>
		SHA-256: 81749fc066778caf43aad03fdb119e987537b0174b0f9aae0191d63f93c08f95
		Secure: false

Findings in Java Class: org.apache.kafka.common.security.ssl.SslFactory$SecurityStore

	 in Method: java.security.KeyStore load()
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #81749fc066778caf43aad03fdb119e987537b0174b0f9aae0191d63f93c08f95)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r1.<java.security.KeyStore: void load(java.io.InputStream,char[])>(r11, $r9)


Findings in Java Class: org.apache.kafka.common.security.ssl.SslFactory

	 in Method: javax.net.ssl.SSLContext createSSLContext()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r26.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(r28)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r16.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(r17, $r7, varReplacer3128)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r20.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r21, $r13)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #f4cf81e4e606a8351bbb8f42dbb0ca63564851f5b5153ca49589aefd21ee0ec0)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r20.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r21, $r13)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r16.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(r17, $r7, varReplacer3128)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 7

	CogniCrypt found the following violations. For details see description above.
	NeverTypeOfError: 2
	RequiredPredicateError: 4
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 25 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 28.34 s

Current Proejct: reflections-0.9.11.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 437.5 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.549 s

Current Proejct: disruptor-3.4.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 438.5 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.393 s

Current Proejct: opencensus-api-0.18.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 449.4 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.852 s

Current Proejct: jackson-datatype-jdk8-2.8.11.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 537.1 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.350 s

Current Proejct: netty-buffer-4.1.43.Final.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 537.6 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 3.056 s

Current Proejct: log4j-api-2.10.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 548.1 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 2.354 s

Current Proejct: jetty-server-9.4.20.v20190813.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 761.1 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 1 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: $r6
		Type: java.security.SecureRandom
		Statement: specialinvoke $r6.<java.security.SecureRandom: void <init>()>()
		Method: <org.eclipse.jetty.server.session.DefaultSessionIdManager: void initRandom()>
		SHA-256: 82c8af8f315a6acb4764e6ab66ae8403f63726c991100681c1032a65d3e35247
		Secure: true

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 1
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 1 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 5.221 s

Current Proejct: netty-codec-http2-4.1.43.Final.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 521.5 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 2.628 s

Current Proejct: log4j-core-2.10.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 901.5 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 6 analysis seeds within 1 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 6
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.17

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 7
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.29

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 7
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.43

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 8
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 9
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.56

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 10
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.6

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 10
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.7

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 10
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.8

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 10
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.9

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r1
		Type: javax.net.ssl.KeyManagerFactory
		Statement: r1 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r4)
		Method: <org.apache.logging.log4j.core.net.ssl.KeyStoreConfiguration: javax.net.ssl.KeyManagerFactory initKeyManagerFactory()>
		SHA-256: 90f720b8e3e2f21c833f15936f3b43055b2d41c264bd78abc5b2f2dd900f137a
		Secure: false
	Object:
		Variable: r10
		Type: javax.net.ssl.KeyManager[]
		Statement: r10 = virtualinvoke r12.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <org.apache.logging.log4j.core.net.ssl.SslConfiguration: javax.net.ssl.SSLContext createSslContext(boolean,boolean)>
		SHA-256: 271024e0dfc2ce2ffc83f5e3eaf1d0326ba471ae2d243562522ef2a282ea8805
		Secure: false
	Object:
		Variable: r15
		Type: byte[]
		Statement: virtualinvoke r0.<java.util.Random: void nextBytes(byte[])>(r15)
		Method: <org.apache.logging.log4j.core.util.UuidUtil: void <clinit>()>
		SHA-256: 308ae4b38d7ee6a6e0a00590fb17f378bde04c3ddf6260a6dfa887ed4ba16579
		Secure: true
	Object:
		Variable: r25
		Type: java.security.SecureRandom
		Statement: specialinvoke r25.<java.security.SecureRandom: void <init>()>()
		Method: <org.apache.logging.log4j.core.util.UuidUtil: void <clinit>()>
		SHA-256: 3eb25761ae0b84998274d98c9273ea58a8b39255bf79eb2564ec816bd6a5f4c8
		Secure: true
	Object:
		Variable: r1
		Type: javax.net.ssl.SSLContext
		Statement: r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r2)
		Method: <org.apache.logging.log4j.core.net.ssl.SslConfiguration: javax.net.ssl.SSLContext createSslContext(boolean,boolean)>
		SHA-256: 75d477b10565eaf7e910ea4d7f02909eed2a5577bad187a0088ca6b40bc0d8d5
		Secure: false
	Object:
		Variable: r11
		Type: java.security.MessageDigest
		Statement: r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2735)
		Method: <org.apache.logging.log4j.core.util.NameUtil: java.lang.String md5(java.lang.String)>
		SHA-256: 61bba48ce0783f1e217c018cdaa8ef03bb0cf9ae3f4ab4c280dabd4b7e65225f
		Secure: false
	Object:
		Variable: r1
		Type: javax.net.ssl.TrustManagerFactory
		Statement: r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r2)
		Method: <org.apache.logging.log4j.core.net.ssl.TrustStoreConfiguration: javax.net.ssl.TrustManagerFactory initTrustManagerFactory()>
		SHA-256: a84722c76770815c430252d21847daaaf571c78a2002f7d0a4982a14dcd2f29
		Secure: false
	Object:
		Variable: r11
		Type: javax.net.ssl.TrustManager[]
		Statement: r11 = virtualinvoke r13.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <org.apache.logging.log4j.core.net.ssl.SslConfiguration: javax.net.ssl.SSLContext createSslContext(boolean,boolean)>
		SHA-256: 761e893645fff213a7d8b3a244970fdef32e16286dff21f3ea590ae50eee9e7c
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: r1 = virtualinvoke r11.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.logging.log4j.core.util.NameUtil: java.lang.String md5(java.lang.String)>
		SHA-256: 7a0649bbbf550be419d76ecdec81626706bd32984ffe27e78842dc60e544f038
		Secure: false
	Object:
		Variable: r33
		Type: java.security.KeyStore
		Statement: r33 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r7)
		Method: <org.apache.logging.log4j.core.net.ssl.AbstractKeyStoreConfiguration: java.security.KeyStore load()>
		SHA-256: 8c023f56199a0476accb78618a414030dd70af1e551f2b458ad46614d54315be
		Secure: true

Findings in Java Class: org.apache.logging.log4j.core.net.ssl.SslConfiguration

	 in Method: javax.net.ssl.SSLContext createDefaultSslContext()
		ForbiddenMethodError violating CrySL rule for javax.net.ssl.SSLContext
			Detected call to forbidden method javax.net.ssl.SSLContext getDefault() of class javax.net.ssl.SSLContext. Instead, call method <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>.
			at statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getDefault()>()


	 in Method: javax.net.ssl.SSLContext createSslContext(boolean,boolean)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(r10, r11, varReplacer1145)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(r10, r11, varReplacer1145)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #75d477b10565eaf7e910ea4d7f02909eed2a5577bad187a0088ca6b40bc0d8d5)
			First parameter (with value "SSL") should be any of {TLSv1.2}
			at statement: r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r2)


Findings in Java Class: org.apache.logging.log4j.core.util.NameUtil

	 in Method: java.lang.String md5(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #61bba48ce0783f1e217c018cdaa8ef03bb0cf9ae3f4ab4c280dabd4b7e65225f)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2735)


Findings in Java Class: org.apache.logging.log4j.core.net.ssl.KeyStoreConfiguration

	 in Method: javax.net.ssl.KeyManagerFactory initKeyManagerFactory()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r1.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r5, r2)


Findings in Java Class: org.apache.logging.log4j.core.net.ssl.TrustStoreConfiguration

	 in Method: javax.net.ssl.TrustManagerFactory initTrustManagerFactory()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r1.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r3)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 10

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 2
	RequiredPredicateError: 4
	ForbiddenMethodError: 1
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 1 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 5.622 s

Current Proejct: json-0.170.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 518.9 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.335 s

Current Proejct: gson.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 580.2 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 2.212 s

Current Proejct: netty-codec-4.1.43.Final.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 441.0 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 2.236 s

Current Proejct: netty-handler-4.1.43.Final.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 689.8 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 27 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 27
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.04

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 28
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.07

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 29
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.1

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 29
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.14

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.17

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.2

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.23

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 31
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.26

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 32
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.28

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 32
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.31

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 32
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.34

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 35
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.34

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 35
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.37

[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.io.InputStream: void close()> for class io.netty.buffer.ByteBufInputStream
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 14 of 37
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.38

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 15 of 37
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.41

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 16 of 38
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.42

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 17 of 38
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.45

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 18 of 38
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.47

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 19 of 39
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.49

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 20 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 21 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.53

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 22 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.54

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 23 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.56

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 24 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.59

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 25 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.61

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 26 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.63

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 27 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.66

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 28 of 45
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.62

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 29 of 45
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.64

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 30 of 45
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 31 of 45
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.69

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 32 of 45
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.71

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 33 of 45
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.73

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 34 of 45
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.76

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 35 of 45
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.78

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 36 of 45
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.8

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 37 of 45
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.82

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 38 of 45
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.84

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 39 of 45
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.87

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 40 of 45
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.89

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 41 of 45
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.91

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 42 of 45
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.93

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 43 of 45
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.96

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 44 of 45
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.98

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: $r13
		Type: javax.net.ssl.SSLContext
		Statement: $r13 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1492)
		Method: <io.netty.handler.ssl.JdkSslClientContext: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long,java.lang.String)>
		SHA-256: ff2cd00c3a3bb94c2a08d93288158bf6f5688e86acb944ddbd8c717b356455c
		Secure: false
	Object:
		Variable: r0
		Type: javax.net.ssl.SSLContext
		Statement: r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer789)
		Method: <io.netty.handler.ssl.JdkSslContext: void <clinit>()>
		SHA-256: a0e28df0f26d5f11b92ca277fd12e08a8491b4d4a1c54a21737f8044567fd040
		Secure: false
	Object:
		Variable: r0
		Type: io.netty.handler.ssl.ReferenceCountedOpenSslEngine
		Statement: specialinvoke r0.<javax.net.ssl.SSLEngine: void <init>(java.lang.String,int)>(r3, i0)
		Method: <io.netty.handler.ssl.ReferenceCountedOpenSslEngine: void <init>(io.netty.handler.ssl.ReferenceCountedOpenSslContext,io.netty.buffer.ByteBufAllocator,java.lang.String,int,boolean,boolean)>
		SHA-256: 6c319d7a075ff67b2a65fc572e9634e239252783aae602180cd74c19bda0533d
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(r2)
		Method: <io.netty.handler.ssl.OpenSslX509KeyManagerFactory: io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi newOpenSslKeyManagerFactorySpi(java.lang.String,java.security.Provider)>
		SHA-256: e029ece63adde15e6e2f260bce04fca70816ac8c184fdbe4f90bf7aa3c8297f7
		Secure: false
	Object:
		Variable: r44
		Type: java.security.KeyPairGenerator
		Statement: r44 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer24)
		Method: <io.netty.handler.ssl.util.SelfSignedCertificate: void <init>(java.lang.String,java.security.SecureRandom,int,java.util.Date,java.util.Date)>
		SHA-256: 47c6faac527d29fc0ad7d28da6d5d882af40e6586d37c95fcd0540377bd49f7a
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String,java.security.Provider)>(r2, r0)
		Method: <io.netty.handler.ssl.OpenSslX509KeyManagerFactory: io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi newOpenSslKeyManagerFactorySpi(java.lang.String,java.security.Provider)>
		SHA-256: a14a09cf41f3b877beab0cc043bd4912c80380c362bdf59041da9af6cf6fb23e
		Secure: false
	Object:
		Variable: r7
		Type: javax.net.ssl.SSLEngine
		Statement: r7 = virtualinvoke r1.<javax.net.ssl.SSLContext: javax.net.ssl.SSLEngine createSSLEngine()>()
		Method: <io.netty.handler.ssl.JdkSslContext: void <init>(javax.net.ssl.SSLContext,boolean,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.JdkApplicationProtocolNegotiator,io.netty.handler.ssl.ClientAuth,java.lang.String[],boolean)>
		SHA-256: acd3dfa0601b1c74a3b3def8c08c106250ace4faf6a662f3bd0b6db7c8cb0d9b
		Secure: false
	Object:
		Variable: r5
		Type: java.security.KeyPair
		Statement: r5 = virtualinvoke r44.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <io.netty.handler.ssl.util.SelfSignedCertificate: void <init>(java.lang.String,java.security.SecureRandom,int,java.util.Date,java.util.Date)>
		SHA-256: d1d1cc83a8795621dc772c0bdb5b153a059e58479488dd0a4eefe12e8b615c3a
		Secure: true
	Object:
		Variable: $r13
		Type: javax.net.ssl.SSLContext
		Statement: $r13 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer1487, r0)
		Method: <io.netty.handler.ssl.JdkSslClientContext: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long,java.lang.String)>
		SHA-256: ad1137bab306efd6827b99c637e780732a54da195cd1e1ce3c199f03ac2a6f06
		Secure: false
	Object:
		Variable: r6
		Type: javax.crypto.Cipher
		Statement: r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r10)
		Method: <io.netty.handler.ssl.SslContext: java.security.spec.PKCS8EncodedKeySpec generateKeySpec(char[],byte[])>
		SHA-256: 75783602b7c7dea9335aace96ce14e1788e2631b71b853aefb20e70b107597aa
		Secure: false
	Object:
		Variable: r5
		Type: javax.crypto.SecretKey
		Statement: r5 = virtualinvoke r3.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r4)
		Method: <io.netty.handler.ssl.SslContext: java.security.spec.PKCS8EncodedKeySpec generateKeySpec(char[],byte[])>
		SHA-256: e0cef9eca484cf273c5e243ed2f847a8d3255200120945c83142071df9855c58
		Secure: false
	Object:
		Variable: $r16
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r16 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r15)
		Method: <io.netty.handler.ssl.ReferenceCountedOpenSslClientContext: io.netty.handler.ssl.OpenSslSessionContext newSessionContext(io.netty.handler.ssl.ReferenceCountedOpenSslContext,long,io.netty.handler.ssl.OpenSslEngineMap,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.String)>
		SHA-256: ea75960f531df923d6b27c1262224d5dc67b9ff5eb892c83dd1a85b49c68e0f7
		Secure: false
	Object:
		Variable: varReplacer334
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer334)
		Method: <io.netty.handler.ssl.ReferenceCountedOpenSslEngine: javax.crypto.spec.SecretKeySpec masterKey()>
		SHA-256: d71c6ec68127c8dd65e8b15428c14898169060d6c811397a88db6dcba373644d
		Secure: false
	Object:
		Variable: r0
		Type: io.netty.handler.ssl.util.ThreadLocalInsecureRandom
		Statement: specialinvoke r0.<java.security.SecureRandom: void <init>()>()
		Method: <io.netty.handler.ssl.util.ThreadLocalInsecureRandom: void <init>()>
		SHA-256: 46a0bd64f535b57484537e537f98f9e41f2f93ed1ca917868b32c341773fdb95
		Secure: true
	Object:
		Variable: $r0
		Type: javax.net.ssl.SSLContext
		Statement: $r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer974)
		Method: <io.netty.handler.ssl.OpenSslX509TrustManagerWrapper: javax.net.ssl.SSLContext newSSLContext()>
		SHA-256: a10c630ee037816dbc14584759d2286ee2f55034770fd3b964da6e48c65fc9cd
		Secure: false
	Object:
		Variable: $r21
		Type: java.security.PublicKey
		Statement: $r21 = virtualinvoke r1.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <io.netty.handler.ssl.util.OpenJdkSelfSignedCertGenerator: java.lang.String[] generate(java.lang.String,java.security.KeyPair,java.security.SecureRandom,java.util.Date,java.util.Date)>
		SHA-256: d1f4844e786379cb027e4f10bdaf8250c1d1ff17c7cd726be346413c2bca1078
		Secure: true
	Object:
		Variable: $r23
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r23 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r22)
		Method: <io.netty.handler.ssl.ReferenceCountedOpenSslServerContext: io.netty.handler.ssl.OpenSslServerSessionContext newSessionContext(io.netty.handler.ssl.ReferenceCountedOpenSslContext,long,io.netty.handler.ssl.OpenSslEngineMap,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.String)>
		SHA-256: b5014ff5dcde3a4907f06fa9958d5dd849f268b744c877a844f625a3ed3c5991
		Secure: false
	Object:
		Variable: $r7
		Type: javax.net.ssl.KeyManager[]
		Statement: $r7 = virtualinvoke r15.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <io.netty.handler.ssl.JdkSslServerContext: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long,java.lang.String)>
		SHA-256: 3191ba040931edd917d4173fc5e8dbc2935312e12ae683eea43512b057a7f413
		Secure: false
	Object:
		Variable: $r16
		Type: javax.net.ssl.SSLContext
		Statement: $r16 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer116)
		Method: <io.netty.handler.ssl.JdkSslServerContext: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long,java.lang.String)>
		SHA-256: f2586b049efdab9e26c584501e92ca4fa38ffaa2b4124427b965192fb2745166
		Secure: false
	Object:
		Variable: r1
		Type: java.security.KeyStore
		Statement: r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(r7)
		Method: <io.netty.handler.ssl.SslContext: javax.net.ssl.TrustManagerFactory buildTrustManagerFactory(java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.lang.String)>
		SHA-256: f52c9d314347a7303a2c34851a433100748b65f84d93496f749fe7703794d9d4
		Secure: true
	Object:
		Variable: r30
		Type: javax.net.ssl.SSLEngine
		Statement: r30 = virtualinvoke r0.<javax.net.ssl.SSLContext: javax.net.ssl.SSLEngine createSSLEngine()>()
		Method: <io.netty.handler.ssl.JdkSslContext: void <clinit>()>
		SHA-256: 6a975f687e26451578fc308500b8d9954567afe326e6d9fbaea536b16ede0312
		Secure: false
	Object:
		Variable: r25
		Type: javax.net.ssl.TrustManagerFactory
		Statement: r25 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r9)
		Method: <io.netty.handler.ssl.ReferenceCountedOpenSslClientContext: io.netty.handler.ssl.OpenSslSessionContext newSessionContext(io.netty.handler.ssl.ReferenceCountedOpenSslContext,long,io.netty.handler.ssl.OpenSslEngineMap,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.String)>
		SHA-256: 5d8cb4bd4dbdf042c5a7c65bc380005fca97e0aa340d2e0f58edfbcc0fd5e86a
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer334)
		Method: <io.netty.handler.ssl.ReferenceCountedOpenSslEngine: javax.crypto.spec.SecretKeySpec masterKey()>
		SHA-256: d16dd08cb594c3f412416ee8d2b9f8652c7e8bc6de18d85b20e077c075821c47
		Secure: false
	Object:
		Variable: r16
		Type: javax.crypto.Mac
		Statement: r16 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(r3)
		Method: <io.netty.handler.ssl.PseudoRandomFunction: byte[] hash(byte[],byte[],byte[],int,java.lang.String)>
		SHA-256: 6b628f8d3f7b39f8bebbd6d80a24db5d13efb862db9f72c0f73fbf0e93ce44ad
		Secure: false
	Object:
		Variable: $r33
		Type: javax.net.ssl.TrustManager[]
		Statement: $r33 = virtualinvoke r25.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <io.netty.handler.ssl.ReferenceCountedOpenSslClientContext: io.netty.handler.ssl.OpenSslSessionContext newSessionContext(io.netty.handler.ssl.ReferenceCountedOpenSslContext,long,io.netty.handler.ssl.OpenSslEngineMap,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.String)>
		SHA-256: f7effa3b4b19c6a3c194d09e63a9ed5b5d1465a9fe93b83c085d2e8527cb8959
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer677)
		Method: <io.netty.handler.ssl.util.FingerprintTrustManagerFactory$1: java.security.MessageDigest initialValue()>
		SHA-256: 9a774fecc03c308b1d0ce452be1ae7c65ba0f3db60d02760220558553064aaad
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.PrivateKey
		Statement: $r12 = virtualinvoke r5.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <io.netty.handler.ssl.util.SelfSignedCertificate: void <init>(java.lang.String,java.security.SecureRandom,int,java.util.Date,java.util.Date)>
		SHA-256: c22bbffa7d8c8a308107babc44ebe1f3c83d965ac8b49459e59f11cfc44ceb26
		Secure: true
	Object:
		Variable: r3
		Type: javax.net.ssl.KeyManagerFactory
		Statement: r3 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(r1)
		Method: <io.netty.handler.ssl.SslContext: javax.net.ssl.KeyManagerFactory buildKeyManagerFactory(java.security.KeyStore,java.lang.String,char[],javax.net.ssl.KeyManagerFactory)>
		SHA-256: 3d8aff3e7acf76ebaeb09ad12a6d200fe988645367dd3075d157a46e9372ceeb
		Secure: false
	Object:
		Variable: $r42
		Type: javax.net.ssl.TrustManager[]
		Statement: $r42 = virtualinvoke r34.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <io.netty.handler.ssl.ReferenceCountedOpenSslServerContext: io.netty.handler.ssl.OpenSslServerSessionContext newSessionContext(io.netty.handler.ssl.ReferenceCountedOpenSslContext,long,io.netty.handler.ssl.OpenSslEngineMap,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.String)>
		SHA-256: f0e0ee5879f67fc480b4cb2e0539c17801c6befcd29ad91a71c8664611e88a19
		Secure: true
	Object:
		Variable: r3
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r0, r3)
		Method: <io.netty.handler.ssl.PseudoRandomFunction: byte[] hash(byte[],byte[],byte[],int,java.lang.String)>
		SHA-256: 6738e7f1605e8c17ff7fafefb73711952b5923d4eb55348ff7f4327569c4b88f
		Secure: false
	Object:
		Variable: $r17
		Type: javax.net.ssl.TrustManager[]
		Statement: $r17 = virtualinvoke r11.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <io.netty.handler.ssl.JdkSslClientContext: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long,java.lang.String)>
		SHA-256: 63850acb880d0e047af0bd4d75c3404729e69af80eaa62bbd23c7f849f8bc617
		Secure: true
	Object:
		Variable: r18
		Type: byte[]
		Statement: r18 = virtualinvoke r16.<javax.crypto.Mac: byte[] doFinal(byte[])>(r18)
		Method: <io.netty.handler.ssl.PseudoRandomFunction: byte[] hash(byte[],byte[],byte[],int,java.lang.String)>
		SHA-256: 1c17bcd01b78a039ee429a12cc02effbf150a0ac45139d3cf53f4f5b7895b96c
		Secure: true
	Object:
		Variable: $r18
		Type: javax.net.ssl.TrustManager[]
		Statement: $r18 = virtualinvoke r14.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <io.netty.handler.ssl.JdkSslServerContext: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long,java.lang.String)>
		SHA-256: 37c4ba1d818d0398dcae59b303b6aafcbbc08173afa5d2e7b025a1f9dae4ee20
		Secure: true
	Object:
		Variable: r3
		Type: java.security.KeyStore
		Statement: r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(r4)
		Method: <io.netty.handler.ssl.SslContext: java.security.KeyStore buildKeyStore(java.security.cert.X509Certificate[],java.security.PrivateKey,char[],java.lang.String)>
		SHA-256: a9d4713960844cad3486775f95840822bd5721de340668a7e0befd5b846a4d32
		Secure: true
	Object:
		Variable: r0
		Type: io.netty.handler.ssl.JdkSslEngine
		Statement: specialinvoke r0.<javax.net.ssl.SSLEngine: void <init>()>()
		Method: <io.netty.handler.ssl.JdkSslEngine: void <init>(javax.net.ssl.SSLEngine)>
		SHA-256: 3ef976940fde996d8da07e66af3563c3ad52e8b3e2d0eb1abf08c8dbc6ab2dc5
		Secure: false
	Object:
		Variable: $r16
		Type: javax.net.ssl.SSLContext
		Statement: $r16 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer112, r0)
		Method: <io.netty.handler.ssl.JdkSslServerContext: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long,java.lang.String)>
		SHA-256: 577c9457cf74c031c791b0adec52581ff37f2e23db922a509e7212b0994dfe8f
		Secure: false
	Object:
		Variable: $r28
		Type: java.security.PublicKey
		Statement: $r28 = virtualinvoke r1.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <io.netty.handler.ssl.util.OpenJdkSelfSignedCertGenerator: java.lang.String[] generate(java.lang.String,java.security.KeyPair,java.security.SecureRandom,java.util.Date,java.util.Date)>
		SHA-256: 385c25a3f10c9b9ccbd597b7e67b2af38ed0a5f416667b7838bb65a530aab9ef
		Secure: true
	Object:
		Variable: r34
		Type: javax.net.ssl.TrustManagerFactory
		Statement: r34 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r18)
		Method: <io.netty.handler.ssl.ReferenceCountedOpenSslServerContext: io.netty.handler.ssl.OpenSslServerSessionContext newSessionContext(io.netty.handler.ssl.ReferenceCountedOpenSslContext,long,io.netty.handler.ssl.OpenSslEngineMap,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.String)>
		SHA-256: 902fb49ab81a62cb56dcfe03efe4489824e912489bfb661161ca2f39892fd9cd
		Secure: false
	Object:
		Variable: r6
		Type: javax.net.ssl.TrustManagerFactory
		Statement: r6 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r5)
		Method: <io.netty.handler.ssl.SslContext: javax.net.ssl.TrustManagerFactory buildTrustManagerFactory(java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.lang.String)>
		SHA-256: fd7f27531409aacfca88befca40d2bc26c0b3b939742eb6150468ac26bc385f0
		Secure: true
	Object:
		Variable: r23
		Type: javax.net.ssl.SSLContext
		Statement: r23 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1178)
		Method: <io.netty.handler.ssl.Java9SslUtils: void <clinit>()>
		SHA-256: cf5acd2fa381c3a3d84933e4424537d3bab7e2a13f98e870948db2ebcbb34b3c
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r0, r3)
		Method: <io.netty.handler.ssl.PseudoRandomFunction: byte[] hash(byte[],byte[],byte[],int,java.lang.String)>
		SHA-256: ff8ce6c68d3c84d482e851c2b0a250773eb21b79f68ef3752a374fe56ffc6294
		Secure: false
	Object:
		Variable: $r16
		Type: javax.net.ssl.KeyManager[]
		Statement: $r16 = virtualinvoke r12.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <io.netty.handler.ssl.JdkSslClientContext: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long,java.lang.String)>
		SHA-256: 50e7561a967cb662f9e9456763eb93cc3170159811ef55c7397019830a4063ff
		Secure: false
	Object:
		Variable: r0
		Type: javax.net.ssl.SSLEngine
		Statement: r0 = virtualinvoke r23.<javax.net.ssl.SSLContext: javax.net.ssl.SSLEngine createSSLEngine()>()
		Method: <io.netty.handler.ssl.Java9SslUtils: void <clinit>()>
		SHA-256: 9090fbc19abf03c50512680f012acf6277ca242d4a6b012fbc9981527a07a5dd
		Secure: false
	Object:
		Variable: r5
		Type: java.security.PrivateKey
		Statement: r5 = virtualinvoke r1.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <io.netty.handler.ssl.util.OpenJdkSelfSignedCertGenerator: java.lang.String[] generate(java.lang.String,java.security.KeyPair,java.security.SecureRandom,java.util.Date,java.util.Date)>
		SHA-256: 123d2a88e02c3704e3b0cf5681f4fbe31a58d85a2148c285ad390c0bf934d860
		Secure: true
	Object:
		Variable: r3
		Type: javax.crypto.SecretKeyFactory
		Statement: r3 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>($r8)
		Method: <io.netty.handler.ssl.SslContext: java.security.spec.PKCS8EncodedKeySpec generateKeySpec(char[],byte[])>
		SHA-256: 436149b8daa596b6e53a6ec47fbcfc7024fd8a9a94ca6ec263f1046a649a7624
		Secure: false

Findings in Java Class: io.netty.handler.ssl.SslContext

	 in Method: java.security.spec.PKCS8EncodedKeySpec generateKeySpec(char[],byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #75783602b7c7dea9335aace96ce14e1788e2631b71b853aefb20e70b107597aa)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: $r12 = virtualinvoke r2.<javax.crypto.EncryptedPrivateKeyInfo: java.security.spec.PKCS8EncodedKeySpec getKeySpec(javax.crypto.Cipher)>(r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: r5 = virtualinvoke r3.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r4)

		ForbiddenMethodError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Detected call to forbidden method void <init>(char[]) of class javax.crypto.spec.PBEKeySpec. Instead, call method <javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>.
			at statement: specialinvoke $r9.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>(r0)


	 in Method: javax.net.ssl.KeyManagerFactory buildKeyManagerFactory(java.security.KeyStore,java.lang.String,char[],javax.net.ssl.KeyManagerFactory)
		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #3d8aff3e7acf76ebaeb09ad12a6d200fe988645367dd3075d157a46e9372ceeb)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r3.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r0, r2)


Findings in Java Class: io.netty.handler.ssl.JdkSslServerContext

	 in Method: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long,java.lang.String)
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #f2586b049efdab9e26c584501e92ca4fa38ffaa2b4124427b965192fb2745166)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r16 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer116)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r17.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r7, $r18, varReplacer113)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #577c9457cf74c031c791b0adec52581ff37f2e23db922a509e7212b0994dfe8f)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r16 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer112, r0)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r17.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r7, $r18, varReplacer113)


Findings in Java Class: io.netty.handler.ssl.ReferenceCountedOpenSslServerContext

	 in Method: io.netty.handler.ssl.OpenSslServerSessionContext newSessionContext(io.netty.handler.ssl.ReferenceCountedOpenSslContext,long,io.netty.handler.ssl.OpenSslEngineMap,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #b5014ff5dcde3a4907f06fa9958d5dd849f268b744c877a844f625a3ed3c5991)
			Operation on object of type javax.net.ssl.KeyManagerFactory object not completed. Expected call to init
			at statement: specialinvoke r51.<io.netty.handler.ssl.OpenSslCachingX509KeyManagerFactory: void <init>(javax.net.ssl.KeyManagerFactory)>($r23)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r34.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r19)


Findings in Java Class: io.netty.handler.ssl.ReferenceCountedOpenSslEngine

	 in Method: void <init>(io.netty.handler.ssl.ReferenceCountedOpenSslContext,io.netty.buffer.ByteBufAllocator,java.lang.String,int,boolean,boolean)
		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLEngine (on Object #6c319d7a075ff67b2a65fc572e9634e239252783aae602180cd74c19bda0533d)
			Operation on object of type io.netty.handler.ssl.ReferenceCountedOpenSslEngine object not completed. Expected call to setEnabledCipherSuites, setEnabledProtocols
			at statement: r37 = r0


	 in Method: void setClientAuth(io.netty.handler.ssl.ClientAuth)
		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLEngine (on Object #6c319d7a075ff67b2a65fc572e9634e239252783aae602180cd74c19bda0533d)
			Operation on object of type io.netty.handler.ssl.ReferenceCountedOpenSslEngine object not completed. Expected call to setEnabledCipherSuites, setEnabledProtocols
			at statement: r2 = r0


	 in Method: javax.crypto.spec.SecretKeySpec masterKey()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer334)


Findings in Java Class: io.netty.handler.ssl.util.FingerprintTrustManagerFactory$1

	 in Method: java.security.MessageDigest initialValue()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #9a774fecc03c308b1d0ce452be1ae7c65ba0f3db60d02760220558553064aaad)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer677)


	 in Method: java.lang.Object initialValue()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #9a774fecc03c308b1d0ce452be1ae7c65ba0f3db60d02760220558553064aaad)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: return $r1


Findings in Java Class: io.netty.handler.ssl.JdkSslContext

	 in Method: void <clinit>()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #a0e28df0f26d5f11b92ca277fd12e08a8491b4d4a1c54a21737f8044567fd040)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer789)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer786, varReplacer786, varReplacer786)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer786, varReplacer786, varReplacer786)


Findings in Java Class: io.netty.handler.ssl.OpenSslX509KeyManagerFactory

	 in Method: io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi newOpenSslKeyManagerFactorySpi(java.lang.String,java.security.Provider)
		IncompleteOperationError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #a14a09cf41f3b877beab0cc043bd4912c80380c362bdf59041da9af6cf6fb23e)
			Operation on object of type javax.net.ssl.KeyManagerFactory object not completed. Expected call to init
			at statement: specialinvoke $r1.<io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi: void <init>(javax.net.ssl.KeyManagerFactory)>($r3)

		IncompleteOperationError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #e029ece63adde15e6e2f260bce04fca70816ac8c184fdbe4f90bf7aa3c8297f7)
			Operation on object of type javax.net.ssl.KeyManagerFactory object not completed. Expected call to init
			at statement: specialinvoke $r1.<io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi: void <init>(javax.net.ssl.KeyManagerFactory)>($r3)


Findings in Java Class: io.netty.handler.ssl.PseudoRandomFunction

	 in Method: byte[] hash(byte[],byte[],byte[],int,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r0, r3)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #6b628f8d3f7b39f8bebbd6d80a24db5d13efb862db9f72c0f73fbf0e93ce44ad)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: $i2 = virtualinvoke r16.<javax.crypto.Mac: int getMacLength()>()

		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #6b628f8d3f7b39f8bebbd6d80a24db5d13efb862db9f72c0f73fbf0e93ce44ad)
			Unexpected call to method doFinal on object of type javax.crypto.Mac.
			at statement: $r8 = virtualinvoke r16.<javax.crypto.Mac: byte[] doFinal(byte[])>($r7)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #6b628f8d3f7b39f8bebbd6d80a24db5d13efb862db9f72c0f73fbf0e93ce44ad)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to javax.crypto.Mac: void doFinal(byte[],int), javax.crypto.Mac: byte[] doFinal(byte[]), update, javax.crypto.Mac: byte[] doFinal()
			at statement: $r8 = virtualinvoke r16.<javax.crypto.Mac: byte[] doFinal(byte[])>($r7)


Findings in Java Class: io.netty.handler.ssl.OpenSslX509TrustManagerWrapper

	 in Method: javax.net.ssl.SSLContext newSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #a10c630ee037816dbc14584759d2286ee2f55034770fd3b964da6e48c65fc9cd)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer974)


	 in Method: void <clinit>()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r14.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer975, r20, varReplacer975)


Findings in Java Class: io.netty.handler.ssl.Java9SslUtils

	 in Method: void <clinit>()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r23.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1175, varReplacer1175, varReplacer1175)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r23.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1175, varReplacer1175, varReplacer1175)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #cf5acd2fa381c3a3d84933e4424537d3bab7e2a13f98e870948db2ebcbb34b3c)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: r23 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1178)


Findings in Java Class: io.netty.handler.ssl.ConscryptAlpnSslEngine$ServerEngine

	 in Method: void <init>(javax.net.ssl.SSLEngine,io.netty.buffer.ByteBufAllocator,io.netty.handler.ssl.JdkApplicationProtocolNegotiator)
		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLEngine (on Object #3ef976940fde996d8da07e66af3563c3ad52e8b3e2d0eb1abf08c8dbc6ab2dc5)
			Operation on object of type io.netty.handler.ssl.JdkSslEngine object not completed. Expected call to setEnabledCipherSuites, setEnabledProtocols
			at statement: staticinvoke <org.conscrypt.Conscrypt: void setHandshakeListener(javax.net.ssl.SSLEngine,org.conscrypt.HandshakeListener)>(r1, $r5)


Findings in Java Class: io.netty.handler.ssl.ReferenceCountedOpenSslContext$AbstractCertificateVerifier

	 in Method: int verify(long,byte[][],java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLEngine (on Object #3ef976940fde996d8da07e66af3563c3ad52e8b3e2d0eb1abf08c8dbc6ab2dc5)
			Operation on object of type io.netty.handler.ssl.JdkSslEngine object not completed. Expected call to init, setEnabledCipherSuites, setEnabledProtocols
			at statement: virtualinvoke r0.<io.netty.handler.ssl.ReferenceCountedOpenSslContext$AbstractCertificateVerifier: void verify(io.netty.handler.ssl.ReferenceCountedOpenSslEngine,java.security.cert.X509Certificate[],java.lang.String)>(r3, r4, r2)


Findings in Java Class: io.netty.handler.ssl.ConscryptAlpnSslEngine$ClientEngine

	 in Method: void <init>(javax.net.ssl.SSLEngine,io.netty.buffer.ByteBufAllocator,io.netty.handler.ssl.JdkApplicationProtocolNegotiator)
		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLEngine (on Object #3ef976940fde996d8da07e66af3563c3ad52e8b3e2d0eb1abf08c8dbc6ab2dc5)
			Operation on object of type io.netty.handler.ssl.JdkSslEngine object not completed. Expected call to setEnabledCipherSuites, setEnabledProtocols
			at statement: staticinvoke <org.conscrypt.Conscrypt: void setHandshakeListener(javax.net.ssl.SSLEngine,org.conscrypt.HandshakeListener)>(r1, $r5)


Findings in Java Class: io.netty.handler.ssl.ReferenceCountedOpenSslClientContext

	 in Method: io.netty.handler.ssl.OpenSslSessionContext newSessionContext(io.netty.handler.ssl.ReferenceCountedOpenSslContext,long,io.netty.handler.ssl.OpenSslEngineMap,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r25.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r10)

		IncompleteOperationError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #ea75960f531df923d6b27c1262224d5dc67b9ff5eb892c83dd1a85b49c68e0f7)
			Operation on object of type javax.net.ssl.KeyManagerFactory object not completed. Expected call to init
			at statement: specialinvoke r41.<io.netty.handler.ssl.OpenSslCachingX509KeyManagerFactory: void <init>(javax.net.ssl.KeyManagerFactory)>($r16)


Findings in Java Class: io.netty.handler.ssl.JdkSslClientContext

	 in Method: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long,java.lang.String)
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #ad1137bab306efd6827b99c637e780732a54da195cd1e1ce3c199f03ac2a6f06)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r13 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer1487, r0)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r14.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r16, $r17, varReplacer1491)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r14.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r16, $r17, varReplacer1491)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #ff2cd00c3a3bb94c2a08d93288158bf6f5688e86acb944ddbd8c717b356455c)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r13 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1492)


Findings in Java Class: io.netty.handler.ssl.OpenSslX509TrustManagerWrapper$UnsafeTrustManagerWrapper

	 in Method: javax.net.ssl.X509TrustManager wrapIfNeeded(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r8.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer7, r11, varReplacer7)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 45

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 15
	TypestateError: 1
	ForbiddenMethodError: 1
	NeverTypeOfError: 1
	IncompleteOperationError: 13
	ConstraintError: 8
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 19 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 22.15 s

Current Proejct: jackson-module-jsonSchema-2.10.1.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 471.8 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.386 s

Current Proejct: jersey-container-servlet-2.27.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 521.9 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.312 s

Current Proejct: solr-solrj-7.5.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 808.7 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 1 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 1 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 8.023 s

Current Proejct: zookeeper-3.5.6.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 641.2 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 13 analysis seeds within 1 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 13
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.08

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 14
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.14

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 14
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.21

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 15
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.27

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 15
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 16
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.38

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 16
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.44

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 16
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 18
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 18
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.56

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 18
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.61

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 19
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.63

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 19
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.68

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 14 of 19
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.74

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 15 of 19
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.79

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 16 of 19
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.84

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 17 of 19
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.89

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 18 of 19
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.95

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r3
		Type: javax.net.ssl.KeyManagerFactory
		Statement: r3 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer3757)
		Method: <org.apache.zookeeper.common.X509Util: javax.net.ssl.X509KeyManager createKeyManager(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: fd145ea0ed2ba7abaece63058bad7400bc267fe741691d49191f7714730d9054
		Secure: false
	Object:
		Variable: r1
		Type: java.security.KeyStore
		Statement: r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer5858)
		Method: <org.apache.zookeeper.util.PemReader: java.security.KeyStore loadTrustStore(java.io.File)>
		SHA-256: e4454d6fdd09a411b67a4424352337c70228520d444fafed5b694534582faf56
		Secure: true
	Object:
		Variable: r6
		Type: javax.crypto.Cipher
		Statement: r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r17)
		Method: <org.apache.zookeeper.util.PemReader: java.security.PrivateKey loadPrivateKey(java.lang.String,java.util.Optional)>
		SHA-256: 5577859ef072cb64d6bf4d0b15c57688a28f61cbb9595831857190c613ac05dc
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.cert.PKIXBuilderParameters
		Statement: specialinvoke $r11.<java.security.cert.PKIXBuilderParameters: void <init>(java.security.KeyStore,java.security.cert.CertSelector)>(r2, $r12)
		Method: <org.apache.zookeeper.common.X509Util: javax.net.ssl.X509TrustManager createTrustManager(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>
		SHA-256: 4f2aecbe10640274dc505ea714a388a400621d5951fa41005374799e7c3d2187
		Secure: true
	Object:
		Variable: r4
		Type: javax.net.ssl.TrustManagerFactory
		Statement: r4 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(varReplacer3764)
		Method: <org.apache.zookeeper.common.X509Util: javax.net.ssl.X509TrustManager createTrustManager(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>
		SHA-256: 26906ff4c3125d9786bfaa4c6f010f6f1d0029196435ffad15de905909cc3bae
		Secure: true
	Object:
		Variable: r4
		Type: javax.net.ssl.KeyManager[]
		Statement: r4 = virtualinvoke r3.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <org.apache.zookeeper.common.X509Util: javax.net.ssl.X509KeyManager createKeyManager(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 47ffce06e6ad4c12d8512b6f72c16c19a8970fb704c429677f8090bbb858c11f
		Secure: false
	Object:
		Variable: r24
		Type: javax.net.ssl.SSLContext
		Statement: r24 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1404)
		Method: <org.apache.zookeeper.server.NettyServerCnxnFactory: void initSSL(io.netty.channel.ChannelPipeline)>
		SHA-256: f82c5123b9c011c4b852bdbca35b7da507c9ccf5eb45acf51d5d61d943722b29
		Secure: false
	Object:
		Variable: r2
		Type: byte[]
		Statement: r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <org.apache.zookeeper.server.auth.DigestAuthenticationProvider: java.lang.String generateDigest(java.lang.String)>
		SHA-256: 439159b0f8606c5cfaa38b5ee2ae24b38549247c191a9456c70811a7f7e17948
		Secure: false
	Object:
		Variable: r66
		Type: javax.net.ssl.SSLContext
		Statement: r66 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(r65)
		Method: <org.apache.zookeeper.common.X509Util: org.apache.zookeeper.common.SSLContextAndOptions createSSLContextAndOptions(org.apache.zookeeper.common.ZKConfig)>
		SHA-256: aa2c2fa42ed604ebb008c9d703cf753d0275e803b7303bdee9a39724c3fbc949
		Secure: false
	Object:
		Variable: r26
		Type: javax.net.ssl.SSLEngine
		Statement: r26 = virtualinvoke r24.<javax.net.ssl.SSLContext: javax.net.ssl.SSLEngine createSSLEngine()>()
		Method: <org.apache.zookeeper.server.NettyServerCnxnFactory: void initSSL(io.netty.channel.ChannelPipeline)>
		SHA-256: 50835494a2f290567dd1f780cfb1e94f2f0d3f88db29fc6f7a2852cc3e033b97
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4221)
		Method: <org.apache.zookeeper.server.auth.DigestAuthenticationProvider: java.lang.String generateDigest(java.lang.String)>
		SHA-256: d9904fe9b0e27b88c1381ad04cf9522b76324836e1fa67811dfdb15396dabfdb
		Secure: false
	Object:
		Variable: r5
		Type: javax.net.ssl.TrustManager[]
		Statement: r5 = virtualinvoke r4.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <org.apache.zookeeper.common.X509Util: javax.net.ssl.X509TrustManager createTrustManager(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>
		SHA-256: 5b82aab939da004dea00e9253bb3e4d6a29f3e246c55522146f4c3bbf1742192
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <org.apache.zookeeper.server.auth.DigestAuthenticationProvider: java.lang.String generateDigest(java.lang.String)>
		SHA-256: fe5432a77924b3454c03bd970ab1e1503028a3d5ce7e83ce22e3607e843e2dfc
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer695)
		Method: <org.apache.zookeeper.common.PKCS12FileLoader: java.security.KeyStore keyStoreInstance()>
		SHA-256: eaa8db6fb46405409431ce525c6cd0bf31fa9b3f9b6f72b3471554d58230c64f
		Secure: false
	Object:
		Variable: r4
		Type: javax.crypto.SecretKeyFactory
		Statement: r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>($r12)
		Method: <org.apache.zookeeper.util.PemReader: java.security.PrivateKey loadPrivateKey(java.lang.String,java.util.Optional)>
		SHA-256: 1eeda54420a3a576132bf676de31e349658dacc4aff54a2bee59aff4581c0dc0
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3835)
		Method: <org.apache.zookeeper.common.JKSFileLoader: java.security.KeyStore keyStoreInstance()>
		SHA-256: cb39b043716b95fe81b1dd4b099d9817d82e5f07548f3c67ba257536a594b95e
		Secure: false
	Object:
		Variable: r5
		Type: java.security.KeyStore
		Statement: r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer5863)
		Method: <org.apache.zookeeper.util.PemReader: java.security.KeyStore loadKeyStore(java.io.File,java.io.File,java.util.Optional)>
		SHA-256: a6a4e463abd84b2eaa17e41155dbe6549f69004c64778587c49a69efa91e63b8
		Secure: true
	Object:
		Variable: $r22
		Type: javax.net.ssl.CertPathTrustManagerParameters
		Statement: specialinvoke $r22.<javax.net.ssl.CertPathTrustManagerParameters: void <init>(java.security.cert.CertPathParameters)>(r3)
		Method: <org.apache.zookeeper.common.X509Util: javax.net.ssl.X509TrustManager createTrustManager(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>
		SHA-256: 55d7fc67b2bcf96007766fd39bc680f08dc2599b86078af67e2d14ed7f07bdb8
		Secure: true
	Object:
		Variable: r5
		Type: javax.crypto.SecretKey
		Statement: r5 = virtualinvoke r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r13)
		Method: <org.apache.zookeeper.util.PemReader: java.security.PrivateKey loadPrivateKey(java.lang.String,java.util.Optional)>
		SHA-256: 651933658fca0d95665e40b94857c897e7fdeca83c66df5005cb50b2679b2d81
		Secure: false

Findings in Java Class: org.apache.zookeeper.util.PemReader

	 in Method: java.security.PrivateKey loadPrivateKey(java.lang.String,java.util.Optional)
		ForbiddenMethodError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Detected call to forbidden method void <init>(char[]) of class javax.crypto.spec.PBEKeySpec. Instead, call method <javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>.
			at statement: specialinvoke $r13.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>($r16)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: r5 = virtualinvoke r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r13)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #5577859ef072cb64d6bf4d0b15c57688a28f61cbb9595831857190c613ac05dc)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: r25 = virtualinvoke r24.<javax.crypto.EncryptedPrivateKeyInfo: java.security.spec.PKCS8EncodedKeySpec getKeySpec(javax.crypto.Cipher)>(r6)


Findings in Java Class: org.apache.zookeeper.common.StandardTypeFileKeyStoreLoader

	 in Method: java.security.KeyStore loadKeyStore()
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #eaa8db6fb46405409431ce525c6cd0bf31fa9b3f9b6f72b3471554d58230c64f)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r16.<java.security.KeyStore: void load(java.io.InputStream,char[])>(r1, $r10)


Findings in Java Class: org.apache.zookeeper.server.NettyServerCnxnFactory

	 in Method: void initSSL(io.netty.channel.ChannelPipeline)
		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLContext (on Object #f82c5123b9c011c4b852bdbca35b7da507c9ccf5eb45acf51d5d61d943722b29)
			Operation on object of type javax.net.ssl.SSLContext object not completed. Expected call to init
			at statement: r24 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1404)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r24.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r9, $r11, varReplacer1408)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r24.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r9, $r11, varReplacer1408)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #f82c5123b9c011c4b852bdbca35b7da507c9ccf5eb45acf51d5d61d943722b29)
			First parameter (with value "TLSv1") should be any of {TLSv1.2}
			at statement: r24 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1404)


Findings in Java Class: org.apache.zookeeper.common.X509Util

	 in Method: javax.net.ssl.X509KeyManager createKeyManager(java.lang.String,java.lang.String,java.lang.String)
		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #fd145ea0ed2ba7abaece63058bad7400bc267fe741691d49191f7714730d9054)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r3.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r2, $r10)


	 in Method: org.apache.zookeeper.common.SSLContextAndOptions createSSLContextAndOptions(org.apache.zookeeper.common.ZKConfig)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r66.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(r78, r79, varReplacer3756)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r66.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(r78, r79, varReplacer3756)


Findings in Java Class: org.apache.zookeeper.server.auth.DigestAuthenticationProvider

	 in Method: java.lang.String generateDigest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #d9904fe9b0e27b88c1381ad04cf9522b76324836e1fa67811dfdb15396dabfdb)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4221)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 19

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 2
	RequiredPredicateError: 5
	NeverTypeOfError: 2
	ConstraintError: 2
	ForbiddenMethodError: 1
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 1 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 6.543 s

Current Proejct: bookkeeper-server-4.10.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 1.140 s 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 6 analysis seeds within 1 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 6
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.17

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 7
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.29

Killed

Current Proejct: jackson-module-jsonSchema-2.8.11.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 912.9 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 2.201 s

Current Proejct: simpleclient_jetty-0.5.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 404.3 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.182 s

Current Proejct: slf4j-api-1.7.25.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 478.8 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.494 s

Current Proejct: bookkeeper-common-4.10.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 467.3 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.696 s

Current Proejct: presto-cli-0.206.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 447.1 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.581 s

Current Proejct: aspectjweaver-1.9.2.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 775.2 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 1 analysis seeds within 2 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 3
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 3
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r58
		Type: byte[]
		Statement: r58 = virtualinvoke r57.<java.security.MessageDigest: byte[] digest(byte[])>(r56)
		Method: <org.aspectj.apache.bcel.generic.ClassGen: long getSUID()>
		SHA-256: e404c9bcfc120af2ace8a6de87ed0669a8bef76be4f6bc7950cf971c09a9e0df
		Secure: false
	Object:
		Variable: r57
		Type: java.security.MessageDigest
		Statement: r57 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2874)
		Method: <org.aspectj.apache.bcel.generic.ClassGen: long getSUID()>
		SHA-256: 19ac7a9148251d2da8e1168d7972c57ca64bf501172a0e10038b877a404fc3ad
		Secure: false
	Object:
		Variable: r56
		Type: byte[]
		Statement: r58 = virtualinvoke r57.<java.security.MessageDigest: byte[] digest(byte[])>(r56)
		Method: <org.aspectj.apache.bcel.generic.ClassGen: long getSUID()>
		SHA-256: a034a1f316467afc14c7e016557de6d28ea316fd84e542e7d01d998c719ab7a1
		Secure: false

Findings in Java Class: org.aspectj.apache.bcel.generic.ClassGen

	 in Method: long getSUID()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #19ac7a9148251d2da8e1168d7972c57ca64bf501172a0e10038b877a404fc3ad)
			First parameter (with value "SHA") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r57 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2874)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 3

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 1
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 2 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 9.400 s

Current Proejct: mysql-1.11.2.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 429.8 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.151 s

Current Proejct: jackson-datatype-joda-2.10.1.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 424.1 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.265 s

Current Proejct: pulsar-zookeeper.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 820.8 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 13 analysis seeds within 1 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 13
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.08

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 13
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.15

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 14
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.21

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 14
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.29

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 15
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 15
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.4

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 15
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.47

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 16
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 16
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.56

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 16
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.63

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.65

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.71

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 19
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.68

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 14 of 19
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.74

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 15 of 19
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.79

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 16 of 19
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.84

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 17 of 19
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.89

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 18 of 19
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.95

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r26
		Type: javax.net.ssl.SSLEngine
		Statement: r26 = virtualinvoke r24.<javax.net.ssl.SSLContext: javax.net.ssl.SSLEngine createSSLEngine()>()
		Method: <org.apache.zookeeper.server.NettyServerCnxnFactory: void initSSL(io.netty.channel.ChannelPipeline)>
		SHA-256: 50835494a2f290567dd1f780cfb1e94f2f0d3f88db29fc6f7a2852cc3e033b97
		Secure: false
	Object:
		Variable: r5
		Type: javax.crypto.SecretKey
		Statement: r5 = virtualinvoke r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r13)
		Method: <org.apache.zookeeper.util.PemReader: java.security.PrivateKey loadPrivateKey(java.lang.String,java.util.Optional)>
		SHA-256: 651933658fca0d95665e40b94857c897e7fdeca83c66df5005cb50b2679b2d81
		Secure: false
	Object:
		Variable: r3
		Type: javax.net.ssl.KeyManagerFactory
		Statement: r3 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer206)
		Method: <org.apache.zookeeper.common.X509Util: javax.net.ssl.X509KeyManager createKeyManager(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 13221ea5cbb77d51bb82f80d187e92bca3cb46ef61f1f6f4c7c5bcc3a8a6f49d
		Secure: false
	Object:
		Variable: r24
		Type: javax.net.ssl.SSLContext
		Statement: r24 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3286)
		Method: <org.apache.zookeeper.server.NettyServerCnxnFactory: void initSSL(io.netty.channel.ChannelPipeline)>
		SHA-256: 2471762996c4e2b59682db8c6f1bce3d332e31ae7ca553edd9971e21a3263dc4
		Secure: false
	Object:
		Variable: r4
		Type: javax.crypto.SecretKeyFactory
		Statement: r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>($r12)
		Method: <org.apache.zookeeper.util.PemReader: java.security.PrivateKey loadPrivateKey(java.lang.String,java.util.Optional)>
		SHA-256: 1eeda54420a3a576132bf676de31e349658dacc4aff54a2bee59aff4581c0dc0
		Secure: false
	Object:
		Variable: r4
		Type: javax.net.ssl.TrustManagerFactory
		Statement: r4 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(varReplacer216)
		Method: <org.apache.zookeeper.common.X509Util: javax.net.ssl.X509TrustManager createTrustManager(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>
		SHA-256: a4e4c6ac5fb56c8d4f168de609497b20caa039876a7c4103034ba7c60556f474
		Secure: true
	Object:
		Variable: r6
		Type: javax.crypto.Cipher
		Statement: r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r17)
		Method: <org.apache.zookeeper.util.PemReader: java.security.PrivateKey loadPrivateKey(java.lang.String,java.util.Optional)>
		SHA-256: 5577859ef072cb64d6bf4d0b15c57688a28f61cbb9595831857190c613ac05dc
		Secure: false
	Object:
		Variable: r1
		Type: java.security.KeyStore
		Statement: r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer5205)
		Method: <org.apache.zookeeper.util.PemReader: java.security.KeyStore loadTrustStore(java.io.File)>
		SHA-256: 5f97b893b8c0d349882a091dd476b1186bb25366850ba8632303531cd7f1cf87
		Secure: true
	Object:
		Variable: r5
		Type: javax.net.ssl.TrustManager[]
		Statement: r5 = virtualinvoke r4.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <org.apache.zookeeper.common.X509Util: javax.net.ssl.X509TrustManager createTrustManager(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>
		SHA-256: 5b82aab939da004dea00e9253bb3e4d6a29f3e246c55522146f4c3bbf1742192
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer1081)
		Method: <org.apache.zookeeper.common.PKCS12FileLoader: java.security.KeyStore keyStoreInstance()>
		SHA-256: 2357b255753a14b8e35b32706c09811eac4acdebe5e4f217118140b298df3ee9
		Secure: false
	Object:
		Variable: r4
		Type: javax.net.ssl.KeyManager[]
		Statement: r4 = virtualinvoke r3.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <org.apache.zookeeper.common.X509Util: javax.net.ssl.X509KeyManager createKeyManager(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 47ffce06e6ad4c12d8512b6f72c16c19a8970fb704c429677f8090bbb858c11f
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <org.apache.zookeeper.server.auth.DigestAuthenticationProvider: java.lang.String generateDigest(java.lang.String)>
		SHA-256: fe5432a77924b3454c03bd970ab1e1503028a3d5ce7e83ce22e3607e843e2dfc
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.cert.PKIXBuilderParameters
		Statement: specialinvoke $r11.<java.security.cert.PKIXBuilderParameters: void <init>(java.security.KeyStore,java.security.cert.CertSelector)>(r2, $r12)
		Method: <org.apache.zookeeper.common.X509Util: javax.net.ssl.X509TrustManager createTrustManager(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>
		SHA-256: 4f2aecbe10640274dc505ea714a388a400621d5951fa41005374799e7c3d2187
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5586)
		Method: <org.apache.zookeeper.server.auth.DigestAuthenticationProvider: java.lang.String generateDigest(java.lang.String)>
		SHA-256: 30a0fdce23e9fa3cceb74fdd1bf3c9377dbc398a573c2ba7322387f03728e3bb
		Secure: false
	Object:
		Variable: r5
		Type: java.security.KeyStore
		Statement: r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer5211)
		Method: <org.apache.zookeeper.util.PemReader: java.security.KeyStore loadKeyStore(java.io.File,java.io.File,java.util.Optional)>
		SHA-256: f398cd5cbac609b40037cfe3b4f0a8ff71dfb5744079044933e3b31b3ddcc47f
		Secure: true
	Object:
		Variable: r66
		Type: javax.net.ssl.SSLContext
		Statement: r66 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(r65)
		Method: <org.apache.zookeeper.common.X509Util: org.apache.zookeeper.common.SSLContextAndOptions createSSLContextAndOptions(org.apache.zookeeper.common.ZKConfig)>
		SHA-256: aa2c2fa42ed604ebb008c9d703cf753d0275e803b7303bdee9a39724c3fbc949
		Secure: false
	Object:
		Variable: $r22
		Type: javax.net.ssl.CertPathTrustManagerParameters
		Statement: specialinvoke $r22.<javax.net.ssl.CertPathTrustManagerParameters: void <init>(java.security.cert.CertPathParameters)>(r3)
		Method: <org.apache.zookeeper.common.X509Util: javax.net.ssl.X509TrustManager createTrustManager(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>
		SHA-256: 55d7fc67b2bcf96007766fd39bc680f08dc2599b86078af67e2d14ed7f07bdb8
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer130)
		Method: <org.apache.zookeeper.common.JKSFileLoader: java.security.KeyStore keyStoreInstance()>
		SHA-256: e00a14953c32289c56443b7d2986dc13165eca689927ed840f217cbf98fff2ee
		Secure: false
	Object:
		Variable: r2
		Type: byte[]
		Statement: r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <org.apache.zookeeper.server.auth.DigestAuthenticationProvider: java.lang.String generateDigest(java.lang.String)>
		SHA-256: 439159b0f8606c5cfaa38b5ee2ae24b38549247c191a9456c70811a7f7e17948
		Secure: false

Findings in Java Class: org.apache.zookeeper.util.PemReader

	 in Method: java.security.PrivateKey loadPrivateKey(java.lang.String,java.util.Optional)
		ForbiddenMethodError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Detected call to forbidden method void <init>(char[]) of class javax.crypto.spec.PBEKeySpec. Instead, call method <javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>.
			at statement: specialinvoke $r13.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>($r16)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: r5 = virtualinvoke r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r13)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #5577859ef072cb64d6bf4d0b15c57688a28f61cbb9595831857190c613ac05dc)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: r25 = virtualinvoke r24.<javax.crypto.EncryptedPrivateKeyInfo: java.security.spec.PKCS8EncodedKeySpec getKeySpec(javax.crypto.Cipher)>(r6)


Findings in Java Class: org.apache.zookeeper.common.StandardTypeFileKeyStoreLoader

	 in Method: java.security.KeyStore loadKeyStore()
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #e00a14953c32289c56443b7d2986dc13165eca689927ed840f217cbf98fff2ee)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r16.<java.security.KeyStore: void load(java.io.InputStream,char[])>(r1, $r10)


Findings in Java Class: org.apache.zookeeper.common.X509Util

	 in Method: javax.net.ssl.X509KeyManager createKeyManager(java.lang.String,java.lang.String,java.lang.String)
		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #13221ea5cbb77d51bb82f80d187e92bca3cb46ef61f1f6f4c7c5bcc3a8a6f49d)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r3.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r2, $r10)


	 in Method: org.apache.zookeeper.common.SSLContextAndOptions createSSLContextAndOptions(org.apache.zookeeper.common.ZKConfig)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r66.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(r78, r79, varReplacer199)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r66.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(r78, r79, varReplacer199)


Findings in Java Class: org.apache.zookeeper.server.NettyServerCnxnFactory

	 in Method: void initSSL(io.netty.channel.ChannelPipeline)
		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLContext (on Object #2471762996c4e2b59682db8c6f1bce3d332e31ae7ca553edd9971e21a3263dc4)
			Operation on object of type javax.net.ssl.SSLContext object not completed. Expected call to init
			at statement: r24 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3286)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r24.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r9, $r11, varReplacer3292)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r24.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r9, $r11, varReplacer3292)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #2471762996c4e2b59682db8c6f1bce3d332e31ae7ca553edd9971e21a3263dc4)
			First parameter (with value "TLSv1") should be any of {TLSv1.2}
			at statement: r24 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3286)


Findings in Java Class: org.apache.zookeeper.server.auth.DigestAuthenticationProvider

	 in Method: java.lang.String generateDigest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #30a0fdce23e9fa3cceb74fdd1bf3c9377dbc398a573c2ba7322387f03728e3bb)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5586)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 19

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 2
	ForbiddenMethodError: 1
	IncompleteOperationError: 2
	NeverTypeOfError: 2
	RequiredPredicateError: 5
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 1 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 6.214 s

Current Proejct: jackson-annotations-2.8.11.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 505.6 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.406 s

Current Proejct: jackson-dataformat-smile-2.8.11.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 390.7 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.547 s

Current Proejct: stream-storage-server-4.10.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 435.3 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.300 s

Current Proejct: simpleclient_log4j2-0.5.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 512.3 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.457 s

Current Proejct: testcontainers-1.11.2.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 8.054 s 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 405 analysis seeds within 10 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 405
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.0

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 405
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.0

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 406
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.01

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 407
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.01

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 407
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.01

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 408
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.01

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 409
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.02

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 409
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.02

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 409
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.02

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 409
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.02

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 409
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.03

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 409
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.03

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 410
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.03

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 14 of 410
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.03

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 15 of 410
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.04

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 16 of 410
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.04

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 17 of 410
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.04

[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.testcontainers.shaded.okhttp3.internal.NamedRunnable: void execute()> for class java.util.concurrent.ScheduledThreadPoolExecutor
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.testcontainers.shaded.okhttp3.internal.http2.Http2Reader$Handler: void data(boolean,int,org.testcontainers.shaded.okio.BufferedSource,int)> for class java.util.concurrent.ScheduledThreadPoolExecutor
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.testcontainers.shaded.okhttp3.internal.http2.Http2Reader$Handler: void priority(int,int,int,boolean)> for class java.util.concurrent.ScheduledThreadPoolExecutor
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.testcontainers.shaded.okhttp3.internal.http2.Http2Reader$Handler: void headers(boolean,int,int,java.util.List)> for class java.util.concurrent.ScheduledThreadPoolExecutor
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.testcontainers.shaded.okhttp3.internal.http2.Http2Reader$Handler: void rstStream(int,org.testcontainers.shaded.okhttp3.internal.http2.ErrorCode)> for class java.util.concurrent.ScheduledThreadPoolExecutor
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.testcontainers.shaded.okhttp3.internal.http2.Http2Reader$Handler: void ackSettings()> for class java.util.concurrent.ScheduledThreadPoolExecutor
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.testcontainers.shaded.okhttp3.internal.http2.Http2Reader$Handler: void settings(boolean,org.testcontainers.shaded.okhttp3.internal.http2.Settings)> for class java.util.concurrent.ScheduledThreadPoolExecutor
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.testcontainers.shaded.okhttp3.internal.http2.Http2Reader$Handler: void ping(boolean,int,int)> for class java.util.concurrent.ScheduledThreadPoolExecutor
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.testcontainers.shaded.okhttp3.internal.http2.Http2Reader$Handler: void goAway(int,org.testcontainers.shaded.okhttp3.internal.http2.ErrorCode,org.testcontainers.shaded.okio.ByteString)> for class java.util.concurrent.ScheduledThreadPoolExecutor
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.testcontainers.shaded.okhttp3.internal.http2.Http2Reader$Handler: void goAway(int,org.testcontainers.shaded.okhttp3.internal.http2.ErrorCode,org.testcontainers.shaded.okio.ByteString)> for class java.util.concurrent.ScheduledThreadPoolExecutor
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.testcontainers.shaded.okhttp3.internal.http2.Http2Reader$Handler: void windowUpdate(int,long)> for class java.util.concurrent.ScheduledThreadPoolExecutor
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 18 of 412
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.04

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 19 of 413
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.05

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 20 of 413
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.05

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 21 of 418
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.05

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 22 of 419
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.05

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 23 of 443
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.05

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 24 of 443
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.05

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 25 of 443
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.06

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 26 of 443
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.06

Killed

Current Proejct: listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 812.8 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.722 s

Current Proejct: netty-handler-proxy-4.1.43.Final.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 512.1 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.301 s

Current Proejct: original-pulsar-client-kafka.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 432.0 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.312 s

Current Proejct: jjwt-jackson-0.10.5.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 406.0 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.145 s

Current Proejct: jetty-servlets-9.4.20.v20190813.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 420.0 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.644 s

Current Proejct: swagger-annotations-1.5.21.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 381.8 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.076 s

Current Proejct: testng-6.14.3.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 697.1 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 4.314 s

Current Proejct: snappy-java-1.1.1.3.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 438.2 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.316 s

Current Proejct: jjwt-api-0.10.5.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 513.0 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 3 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 4
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.25

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 5
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.4

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 6
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 6
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 6
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.83

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: $r20
		Type: java.lang.String
		Statement: specialinvoke $r19.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r0, $r20)
		Method: <io.jsonwebtoken.security.Keys: javax.crypto.SecretKey hmacShaKeyFor(byte[])>
		SHA-256: 6646ddb07047ea269118f6d15cf3707019df6f43a840d3c654cb20b368e16683
		Secure: false
	Object:
		Variable: $r13
		Type: java.lang.String
		Statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r4, $r13)
		Method: <io.jsonwebtoken.SigningKeyResolverAdapter: java.security.Key resolveSigningKey(io.jsonwebtoken.JwsHeader,io.jsonwebtoken.Claims)>
		SHA-256: 9ea952d83cdf62c7a6b7c3873af4e8f70342ca36d848208a0fb94c20c13faadc
		Secure: false
	Object:
		Variable: $r13
		Type: java.lang.String
		Statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r4, $r13)
		Method: <io.jsonwebtoken.SigningKeyResolverAdapter: java.security.Key resolveSigningKey(io.jsonwebtoken.JwsHeader,java.lang.String)>
		SHA-256: 9ea952d83cdf62c7a6b7c3873af4e8f70342ca36d848208a0fb94c20c13faadc
		Secure: false
	Object:
		Variable: $r19
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r19.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r0, $r20)
		Method: <io.jsonwebtoken.security.Keys: javax.crypto.SecretKey hmacShaKeyFor(byte[])>
		SHA-256: c9d521133138acf0dbea3a8ffa8c3896fe949d8a770d80fd84e9e3369fe0359c
		Secure: false
	Object:
		Variable: $r12
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r4, $r13)
		Method: <io.jsonwebtoken.SigningKeyResolverAdapter: java.security.Key resolveSigningKey(io.jsonwebtoken.JwsHeader,io.jsonwebtoken.Claims)>
		SHA-256: c54e8ef8959468175ad249841a72008db60624cf0462800fe880efde03e0f0e4
		Secure: false
	Object:
		Variable: $r12
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r4, $r13)
		Method: <io.jsonwebtoken.SigningKeyResolverAdapter: java.security.Key resolveSigningKey(io.jsonwebtoken.JwsHeader,java.lang.String)>
		SHA-256: c54e8ef8959468175ad249841a72008db60624cf0462800fe880efde03e0f0e4
		Secure: false

Findings in Java Class: io.jsonwebtoken.security.Keys

	 in Method: javax.crypto.SecretKey hmacShaKeyFor(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r19.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r0, $r20)


Findings in Java Class: io.jsonwebtoken.SigningKeyResolverAdapter

	 in Method: java.security.Key resolveSigningKey(io.jsonwebtoken.JwsHeader,io.jsonwebtoken.Claims)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r4, $r13)


	 in Method: java.security.Key resolveSigningKey(io.jsonwebtoken.JwsHeader,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r4, $r13)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 6

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 3
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.529 s

Current Proejct: jackson-dataformat-yaml-2.10.1.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 407.6 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.483 s

Current Proejct: jetty-servlet-9.4.20.v20190813.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 516.3 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.862 s

Current Proejct: grpc-core-1.18.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 553.4 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 3.505 s

Current Proejct: commons-codec.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 434.8 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 1 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 5
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.2

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 5
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.4

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 5
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.6

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 5
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.8

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <org.apache.commons.codec.digest.DigestUtils: byte[] md5(byte[])>
		SHA-256: a4b7e841fc462f8d73a506e9805cd4d1408ef7266e8613db710f40ddac41b158
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <org.apache.commons.codec.digest.DigestUtils: byte[] md5(byte[])>
		SHA-256: 4a4dd18e6187b325d9cb47c1cd7cc8489f28760532723e1ba285d1f23b4d1c9d
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r0)
		Method: <org.apache.commons.codec.digest.DigestUtils: java.security.MessageDigest getDigest(java.lang.String)>
		SHA-256: e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337
		Secure: false
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <org.apache.commons.codec.digest.DigestUtils: byte[] sha(byte[])>
		SHA-256: 9fa58850892e4912611f0ae44f0e3f2633efc2e19a1b89ae59ee3d47cebea811
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <org.apache.commons.codec.digest.DigestUtils: byte[] sha(byte[])>
		SHA-256: a857946cfb971a6a666a25c2e3477c877e2f7589100ab4644c7210284daad93e
		Secure: false

Findings in Java Class: org.apache.commons.codec.digest.DigestUtils

	 in Method: java.security.MessageDigest getDigest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			First parameter (with value "SHA") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r0)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r0)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 5

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 2
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.405 s

Current Proejct: jersey-container-servlet-core-2.27.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 527.4 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.628 s

Current Proejct: presto-main-0.206.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 1.698 s 
Exception in thread "main" java.lang.RuntimeException: Failed to convert <com.facebook.presto.execution.StartTransactionTask: java.util.Optional extractIsolationLevel(com.facebook.presto.sql.tree.StartTransaction)>
	at soot.asm.AsmMethodSource.getBody(AsmMethodSource.java:2062)
	at soot.SootMethod.retrieveActiveBody(SootMethod.java:402)
	at soot.jimple.toolkits.callgraph.OnFlyCallGraphBuilder.processNewMethod(OnFlyCallGraphBuilder.java:764)
	at soot.jimple.toolkits.callgraph.OnFlyCallGraphBuilder.processReachables(OnFlyCallGraphBuilder.java:273)
	at soot.jimple.toolkits.callgraph.CallGraphBuilder.build(CallGraphBuilder.java:111)
	at soot.jimple.toolkits.callgraph.CHATransformer.internalTransform(CHATransformer.java:51)
	at soot.SceneTransformer.transform(SceneTransformer.java:36)
	at soot.Transform.apply(Transform.java:102)
	at soot.RadioScenePack.internalApply(RadioScenePack.java:68)
	at soot.jimple.toolkits.callgraph.CallGraphPack.internalApply(CallGraphPack.java:58)
	at soot.Pack.apply(Pack.java:117)
	at crypto.HeadlessCryptoScanner.analyse(HeadlessCryptoScanner.java:198)
	at crypto.HeadlessCryptoScanner.exec(HeadlessCryptoScanner.java:167)
	at crypto.HeadlessCryptoScanner.main(HeadlessCryptoScanner.java:72)
Caused by: java.lang.RuntimeException: This operation requires resolving level HIERARCHY but com.facebook.presto.sql.tree.Isolation is at resolving level DANGLING
If you are extending Soot, try to add the following call before calling soot.Main.main(..):
Scene.v().addBasicClass(com.facebook.presto.sql.tree.Isolation,HIERARCHY);
Otherwise, try whole-program mode (-w).
	at soot.SootClass.checkLevelIgnoreResolving(SootClass.java:198)
	at soot.jimple.internal.JVirtualInvokeExpr.<init>(JVirtualInvokeExpr.java:43)
	at soot.jimple.Jimple.newVirtualInvokeExpr(Jimple.java:469)
	at soot.LambdaMetaFactory$ThunkMethodSource._invokeImplMethod(LambdaMetaFactory.java:703)
	at soot.LambdaMetaFactory$ThunkMethodSource.invokeImplMethod(LambdaMetaFactory.java:667)
	at soot.LambdaMetaFactory$ThunkMethodSource.getInvokeBody(LambdaMetaFactory.java:489)
	at soot.LambdaMetaFactory$ThunkMethodSource.getBody(LambdaMetaFactory.java:340)
	at soot.SootMethod.retrieveActiveBody(SootMethod.java:402)
	at soot.LambdaMetaFactory.makeLambdaHelper(LambdaMetaFactory.java:242)
	at soot.asm.AsmMethodSource.convertInvokeDynamicInsn(AsmMethodSource.java:1437)
	at soot.asm.AsmMethodSource.convert(AsmMethodSource.java:1813)
	at soot.asm.AsmMethodSource.getBody(AsmMethodSource.java:2060)
	... 13 more

Current Proejct: grpc-all-1.18.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 540.0 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.469 s

Current Proejct: opencensus-contrib-grpc-metrics-0.18.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 443.6 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.245 s

Current Proejct: jackson-databind-2.6.5.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 617.9 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 1 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 1 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 5.397 s

Current Proejct: jackson-jaxrs-base-2.10.1.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 445.8 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.350 s

Current Proejct: guava-25.1-jre.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 1.039 s 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 6 analysis seeds within 2 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 7
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.14

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 8
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.25

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 9
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 10
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.4

[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.io.OutputStream: void write(byte[],int,int)> for class com.google.common.hash.MacHashFunction$MacHasher
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.io.OutputStream: void write(byte[],int,int)> for class com.google.common.hash.MacHashFunction$MacHasher
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.io.OutputStream: void write(byte[],int,int)> for class com.google.common.hash.AbstractCompositeHashFunction$1
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <com.google.common.collect.Multiset: void forEachEntry(java.util.function.ObjIntConsumer)> for class java.util.ArrayList
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.util.function.BiConsumer: void accept(java.lang.Object,java.lang.Object)> for class com.google.common.collect.Multisets$add__169
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.util.function.BiConsumer: void accept(java.lang.Object,java.lang.Object)> for class com.google.common.collect.HashMultiset
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.util.function.ObjIntConsumer: void accept(java.lang.Object,int)> for class com.google.common.collect.HashMultiset
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <com.google.common.collect.AbstractMultiset: int add(java.lang.Object,int)> for class java.util.ArrayList
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()> for class com.google.common.reflect.Types$WildcardTypeImpl
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type getOwnerType()> for class com.google.common.reflect.Types$WildcardTypeImpl
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()> for class com.google.common.reflect.Types$WildcardTypeImpl
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()> for class com.google.common.reflect.Types$WildcardTypeImpl
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type getOwnerType()> for class com.google.common.reflect.Types$WildcardTypeImpl
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()> for class com.google.common.reflect.Types$WildcardTypeImpl
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.WildcardType: java.lang.reflect.Type[] getLowerBounds()> for class com.google.common.reflect.Types$ParameterizedTypeImpl
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()> for class com.google.common.reflect.Types$ParameterizedTypeImpl
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.WildcardType: java.lang.reflect.Type[] getLowerBounds()> for class com.google.common.reflect.Types$ParameterizedTypeImpl
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()> for class com.google.common.reflect.Types$ParameterizedTypeImpl
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.util.Collection: java.lang.Object[] toArray()> for class com.google.common.collect.Iterables$4
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.util.Collection: java.lang.Object[] toArray()> for class com.google.common.collect.Iterables$4
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <com.google.common.collect.ImmutableMap: boolean isPartialView()> for class java.util.LinkedHashMap
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.util.Map$Entry: java.lang.Object getKey()> for class com.google.common.collect.Tables$ImmutableCell
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.util.Map$Entry: java.lang.Object getKey()> for class com.google.common.collect.Tables$ImmutableCell
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.util.List: int size()> for class com.google.common.collect.Maps$7
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.util.Collection: boolean isEmpty()> for class com.google.common.collect.Maps$7
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.util.Collection: java.util.Iterator iterator()> for class com.google.common.collect.Maps$7
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.util.Collection: boolean isEmpty()> for class com.google.common.collect.Maps$7
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.util.Collection: java.util.Iterator iterator()> for class com.google.common.collect.Maps$7
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.lang.Iterable: java.util.Iterator iterator()> for class com.google.common.collect.Maps$7
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.45

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.55

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.64

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.73

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.82

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.91

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: varReplacer3048
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer3048)
		Method: <com.google.common.hash.Hashing: com.google.common.hash.HashFunction hmacSha256(byte[])>
		SHA-256: 537cf18118cd6ff70971f04f5b783a60b3f1fdf300a4ceb27bc9d1f5bba6e4c7
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer3045)
		Method: <com.google.common.hash.Hashing: com.google.common.hash.HashFunction hmacSha1(byte[])>
		SHA-256: bf32aa8b807582c884c56c7a8230f74d261815c382d5d90cf871b0bac62bb796
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer3048)
		Method: <com.google.common.hash.Hashing: com.google.common.hash.HashFunction hmacSha256(byte[])>
		SHA-256: edfd1a39cad1189358451d1ab3594b118591b29ac4ec60a10766035e4d0ff625
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer3051)
		Method: <com.google.common.hash.Hashing: com.google.common.hash.HashFunction hmacSha512(byte[])>
		SHA-256: 338facf2f8acafa5910850e5c9ff8a3acc5ac2022780b85d4d61e50ac815af4e
		Secure: false
	Object:
		Variable: r6
		Type: javax.crypto.Mac
		Statement: r6 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(r0)
		Method: <com.google.common.hash.MacHashFunction: javax.crypto.Mac getMac(java.lang.String,java.security.Key)>
		SHA-256: 2b635b32d646ba18c7a22a7878f70a67ff2f874a3aaa2d92bf15034b9baccefb
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r0)
		Method: <com.google.common.hash.MessageDigestHashFunction: java.security.MessageDigest getMessageDigest(java.lang.String)>
		SHA-256: 8a2b1b369fb084db34b2d3f7cf631b0662e57b3014565a24a949a09142bef2d1
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<javax.crypto.Mac: byte[] doFinal()>()
		Method: <com.google.common.hash.MacHashFunction$MacHasher: com.google.common.hash.HashCode hash()>
		SHA-256: a89d37061ba0dac61e1b08aaf3eb3497c39726681770418d4469691a8e1f6dbc
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer3042)
		Method: <com.google.common.hash.Hashing: com.google.common.hash.HashFunction hmacMd5(byte[])>
		SHA-256: 42857121e8f17afc42ac21e7bb2315ad8a4ecba04796e8b5b9355fbaac28d680
		Secure: false
	Object:
		Variable: varReplacer3042
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer3042)
		Method: <com.google.common.hash.Hashing: com.google.common.hash.HashFunction hmacMd5(byte[])>
		SHA-256: ff992a6b46f9adc3ef44315070a0e7cf381f2eb86eaf6f3d759da0093fae009
		Secure: false
	Object:
		Variable: varReplacer3051
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer3051)
		Method: <com.google.common.hash.Hashing: com.google.common.hash.HashFunction hmacSha512(byte[])>
		SHA-256: e0f4e49ccdabdc2c7bc5b6f2761d3c971a96cd44439cf2569c5b13b58531b42d
		Secure: false
	Object:
		Variable: varReplacer3045
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer3045)
		Method: <com.google.common.hash.Hashing: com.google.common.hash.HashFunction hmacSha1(byte[])>
		SHA-256: f83506cd0f6b71df1c74db854f0ddc6789bce6fdf73a449c8716633ccbe096ff
		Secure: false

Findings in Java Class: com.google.common.hash.Hashing

	 in Method: com.google.common.hash.HashFunction hmacMd5(byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #2b635b32d646ba18c7a22a7878f70a67ff2f874a3aaa2d92bf15034b9baccefb)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: return $r4

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #42857121e8f17afc42ac21e7bb2315ad8a4ecba04796e8b5b9355fbaac28d680)
			Second parameter (with value "HmacMD5") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer3042)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer3042)


	 in Method: com.google.common.hash.HashFunction hmacSha1(byte[])
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #bf32aa8b807582c884c56c7a8230f74d261815c382d5d90cf871b0bac62bb796)
			Second parameter (with value "HmacSHA1") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer3045)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #2b635b32d646ba18c7a22a7878f70a67ff2f874a3aaa2d92bf15034b9baccefb)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: return $r4

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer3045)


	 in Method: com.google.common.hash.HashFunction hmacSha256(byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #2b635b32d646ba18c7a22a7878f70a67ff2f874a3aaa2d92bf15034b9baccefb)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: return $r4

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer3048)


	 in Method: com.google.common.hash.HashFunction hmacSha512(byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #2b635b32d646ba18c7a22a7878f70a67ff2f874a3aaa2d92bf15034b9baccefb)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: return $r4

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer3051)


Findings in Java Class: com.google.common.hash.MacHashFunction$MacHasher

	 in Method: void update(byte[],int,int)
		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #2b635b32d646ba18c7a22a7878f70a67ff2f874a3aaa2d92bf15034b9baccefb)
			Second parameter (with value 0)Variable offsetmust be  lesser than len
			at statement: virtualinvoke $r2.<javax.crypto.Mac: void update(byte[],int,int)>(r1, i0, i1)

		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #2b635b32d646ba18c7a22a7878f70a67ff2f874a3aaa2d92bf15034b9baccefb)
			Unexpected call to method update on object of type javax.crypto.Mac. Expect a call to one of the following methods getInstance
			at statement: virtualinvoke $r2.<javax.crypto.Mac: void update(byte[],int,int)>(r1, i0, i1)


	 in Method: void update(byte[])
		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #2b635b32d646ba18c7a22a7878f70a67ff2f874a3aaa2d92bf15034b9baccefb)
			Unexpected call to method update on object of type javax.crypto.Mac. Expect a call to one of the following methods getInstance
			at statement: virtualinvoke $r2.<javax.crypto.Mac: void update(byte[])>(r1)


	 in Method: void update(byte)
		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #2b635b32d646ba18c7a22a7878f70a67ff2f874a3aaa2d92bf15034b9baccefb)
			Unexpected call to method update on object of type javax.crypto.Mac. Expect a call to one of the following methods getInstance
			at statement: virtualinvoke $r1.<javax.crypto.Mac: void update(byte)>(b0)


	 in Method: com.google.common.hash.HashCode hash()
		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #2b635b32d646ba18c7a22a7878f70a67ff2f874a3aaa2d92bf15034b9baccefb)
			Unexpected call to method doFinal on object of type javax.crypto.Mac. Expect a call to one of the following methods getInstance
			at statement: $r2 = virtualinvoke $r1.<javax.crypto.Mac: byte[] doFinal()>()


Findings in Java Class: com.google.common.hash.HashingInputStream

	 in Method: void <init>(com.google.common.hash.HashFunction,java.io.InputStream)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #2b635b32d646ba18c7a22a7878f70a67ff2f874a3aaa2d92bf15034b9baccefb)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, getInstance, doFinal
			at statement: $r7 = (com.google.common.hash.Hasher) $r6


Findings in Java Class: com.google.common.hash.AbstractHashFunction

	 in Method: com.google.common.hash.HashCode hashString(java.lang.CharSequence,java.nio.charset.Charset)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #2b635b32d646ba18c7a22a7878f70a67ff2f874a3aaa2d92bf15034b9baccefb)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, getInstance, doFinal
			at statement: $r5 = interfaceinvoke $r4.<com.google.common.hash.Hasher: com.google.common.hash.HashCode hash()>()


	 in Method: com.google.common.hash.HashCode hashBytes(byte[],int,int)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #2b635b32d646ba18c7a22a7878f70a67ff2f874a3aaa2d92bf15034b9baccefb)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, getInstance, doFinal
			at statement: $r4 = interfaceinvoke $r3.<com.google.common.hash.Hasher: com.google.common.hash.HashCode hash()>()


	 in Method: com.google.common.hash.HashCode hashObject(java.lang.Object,com.google.common.hash.Funnel)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #2b635b32d646ba18c7a22a7878f70a67ff2f874a3aaa2d92bf15034b9baccefb)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, getInstance, doFinal
			at statement: $r5 = interfaceinvoke $r4.<com.google.common.hash.Hasher: com.google.common.hash.HashCode hash()>()


	 in Method: com.google.common.hash.HashCode hashInt(int)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #2b635b32d646ba18c7a22a7878f70a67ff2f874a3aaa2d92bf15034b9baccefb)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, getInstance, doFinal
			at statement: $r3 = interfaceinvoke $r2.<com.google.common.hash.Hasher: com.google.common.hash.HashCode hash()>()


	 in Method: com.google.common.hash.HashCode hashUnencodedChars(java.lang.CharSequence)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #2b635b32d646ba18c7a22a7878f70a67ff2f874a3aaa2d92bf15034b9baccefb)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, getInstance, doFinal
			at statement: $r4 = interfaceinvoke $r3.<com.google.common.hash.Hasher: com.google.common.hash.HashCode hash()>()


	 in Method: com.google.common.hash.HashCode hashLong(long)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #2b635b32d646ba18c7a22a7878f70a67ff2f874a3aaa2d92bf15034b9baccefb)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, getInstance, doFinal
			at statement: $r3 = interfaceinvoke $r2.<com.google.common.hash.Hasher: com.google.common.hash.HashCode hash()>()


	 in Method: com.google.common.hash.HashCode hashBytes(java.nio.ByteBuffer)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #2b635b32d646ba18c7a22a7878f70a67ff2f874a3aaa2d92bf15034b9baccefb)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, getInstance, doFinal
			at statement: $r4 = interfaceinvoke $r3.<com.google.common.hash.Hasher: com.google.common.hash.HashCode hash()>()


Findings in Java Class: com.google.common.hash.HashingOutputStream

	 in Method: void <init>(com.google.common.hash.HashFunction,java.io.OutputStream)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #2b635b32d646ba18c7a22a7878f70a67ff2f874a3aaa2d92bf15034b9baccefb)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, getInstance, doFinal
			at statement: $r7 = (com.google.common.hash.Hasher) $r6


Findings in Java Class: com.google.common.io.ByteSource

	 in Method: com.google.common.hash.HashCode hash(com.google.common.hash.HashFunction)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #2b635b32d646ba18c7a22a7878f70a67ff2f874a3aaa2d92bf15034b9baccefb)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, getInstance, doFinal
			at statement: $r4 = interfaceinvoke r2.<com.google.common.hash.Hasher: com.google.common.hash.HashCode hash()>()


Findings in Java Class: com.google.common.hash.MessageDigestHashFunction

	 in Method: java.security.MessageDigest getMessageDigest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #8a2b1b369fb084db34b2d3f7cf631b0662e57b3014565a24a949a09142bef2d1)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r0)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #8a2b1b369fb084db34b2d3f7cf631b0662e57b3014565a24a949a09142bef2d1)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r0)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 11

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 14
	RequiredPredicateError: 4
	ConstraintError: 5
	TypestateError: 4
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 29 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 36.38 s

Current Proejct: commons-compress-1.19.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 564.3 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 5 analysis seeds within 0 seconds!
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.CompressorInputStream: void count(int)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.utils.CountingInputStream: void count(long)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.CompressorInputStream: void count(int)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.CompressorInputStream: void count(int)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.CompressorInputStream: void count(int)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.CompressorInputStream: void count(int)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: void count(long)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.tar.TarArchiveInputStream: byte[] readRecord()> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: void count(long)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.tar.TarArchiveInputStream: boolean isAtEOF()> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: void count(long)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: long getBytesRead()> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: long getBytesRead()> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: long getBytesRead()> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: void count(int)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: void count(long)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.tar.TarArchiveInputStream: boolean isEOFRecord(byte[])> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.tar.TarArchiveInputStream: void setAtEOF(boolean)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.tar.TarArchiveInputStream: boolean isAtEOF()> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: void pushedBackBytes(long)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.tar.TarArchiveInputStream: boolean isEOFRecord(byte[])> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: void pushedBackBytes(long)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: long getBytesRead()> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.tar.TarArchiveInputStream: byte[] getLongNameData()> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.tar.TarArchiveInputStream: byte[] getLongNameData()> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.tar.TarArchiveInputStream: java.util.Map parsePaxHeaders(java.io.InputStream)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.tar.TarArchiveInputStream: java.util.Map parsePaxHeaders(java.io.InputStream)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: void count(long)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.tar.TarArchiveInputStream: boolean isAtEOF()> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.tar.TarArchiveInputStream: org.apache.commons.compress.archivers.tar.TarArchiveEntry getNextTarEntry()> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: void count(int)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.tar.TarArchiveInputStream: void setAtEOF(boolean)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: void count(int)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: long getBytesRead()> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: long getBytesRead()> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: long getBytesRead()> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: long getBytesRead()> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: long getBytesRead()> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: long getBytesRead()> for class java.io.BufferedInputStream
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 5
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.2

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 5
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.4

[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.CompressorInputStream: void count(int)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: void count(long)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.CompressorInputStream: void count(int)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.CompressorInputStream: void count(long)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.CompressorInputStream: void count(int)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.CompressorInputStream: void count(int)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: void pushedBackBytes(long)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: void count(int)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: void count(int)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.utils.CountingInputStream: void count(long)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.CompressorInputStream: void count(int)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: void count(int)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: void count(long)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: long getBytesRead()> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.tar.TarArchiveInputStream: boolean isAtEOF()> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: void count(int)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.tar.TarArchiveInputStream: void setAtEOF(boolean)> for class java.io.ByteArrayInputStream
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 5
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.6

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 6
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 7
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.71

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 7
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.86

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: varReplacer2722
		Type: java.lang.String
		Statement: specialinvoke $r18.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r51, varReplacer2722)
		Method: <org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder$1: javax.crypto.CipherInputStream init()>
		SHA-256: 2904dcd37295b6c3874dad932b8f97a8f41684e187f88dca216e507f25790841
		Secure: false
	Object:
		Variable: $r19
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r19.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r2)
		Method: <org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder$1: javax.crypto.CipherInputStream init()>
		SHA-256: 3a43c06bc49e5c23951d328d303d46655a0cd667466c8e4f20ffdbd14765846f
		Secure: false
	Object:
		Variable: $r20
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r20.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r21, r56)
		Method: <org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder$1: javax.crypto.CipherInputStream init()>
		SHA-256: ea5b0f2b31f02cd801a913bc31f8afe10fb1556d7f5c9f9b83282d2aef0ac05f
		Secure: false
	Object:
		Variable: r51
		Type: byte[]
		Statement: r51 = virtualinvoke r52.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder$1: javax.crypto.CipherInputStream init()>
		SHA-256: 5b227757f4d1e2189ebc54aee9b7fa4c8dd851876e5a861e4397d7a8fed935cc
		Secure: true
	Object:
		Variable: r56
		Type: javax.crypto.Cipher
		Statement: r56 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2730)
		Method: <org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder$1: javax.crypto.CipherInputStream init()>
		SHA-256: a31f35272a25535a2a2bceb80398dbec4b159a52e3ab8764488ab14a27c77b0b
		Secure: false
	Object:
		Variable: r52
		Type: java.security.MessageDigest
		Statement: r52 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2717)
		Method: <org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder$1: javax.crypto.CipherInputStream init()>
		SHA-256: 9a0e1280c0f7b0086e56bb919a724e686b4f8f3a487234bf39e15186e88e45d2
		Secure: false
	Object:
		Variable: $r18
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r18.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r51, varReplacer2722)
		Method: <org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder$1: javax.crypto.CipherInputStream init()>
		SHA-256: 736ee4a1c0045a77d07b048d480230682fe629618effcde38d7bb98aeb84b367
		Secure: false

Findings in Java Class: org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder$1

	 in Method: javax.crypto.CipherInputStream init()
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #9a0e1280c0f7b0086e56bb919a724e686b4f8f3a487234bf39e15186e88e45d2)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: r51 = virtualinvoke r52.<java.security.MessageDigest: byte[] digest()>()

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r18.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r51, varReplacer2722)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r19.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #a31f35272a25535a2a2bceb80398dbec4b159a52e3ab8764488ab14a27c77b0b)
			First parameter (with value "AES/CBC/NoPadding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: r56 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2730)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #a31f35272a25535a2a2bceb80398dbec4b159a52e3ab8764488ab14a27c77b0b)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: specialinvoke $r20.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r21, r56)


Findings in Java Class: org.apache.commons.compress.archivers.zip.ZipArchiveInputStream

	 in Method: int read(byte[],int,int)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #ea5b0f2b31f02cd801a913bc31f8afe10fb1556d7f5c9f9b83282d2aef0ac05f)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read, close
			at statement: $z1 = specialinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveInputStream: boolean supportsDataDescriptorFor(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)>($r6)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #ea5b0f2b31f02cd801a913bc31f8afe10fb1556d7f5c9f9b83282d2aef0ac05f)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read, close
			at statement: $z2 = specialinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveInputStream: boolean supportsCompressedSizeFor(org.apache.commons.compress.archivers.zip.ZipArchiveEntry)>($r8)


	 in Method: int readDeflated(byte[],int,int)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #ea5b0f2b31f02cd801a913bc31f8afe10fb1556d7f5c9f9b83282d2aef0ac05f)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read, close
			at statement: i2 = specialinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveInputStream: int readFromInflater(byte[],int,int)>(r1, i0, i1)


	 in Method: void realSkip(long)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #ea5b0f2b31f02cd801a913bc31f8afe10fb1556d7f5c9f9b83282d2aef0ac05f)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to java.io.InputStream: int read(byte[],int,int), javax.crypto.CipherInputStream: int read(), java.io.InputStream: int read(byte[]), java.io.FilterInputStream: int read(byte[],int,int), java.io.InputStream: int read(), javax.crypto.CipherInputStream: int read(byte[]), java.io.FilterInputStream: int read(byte[]), java.io.FilterInputStream: int read(), javax.crypto.CipherInputStream: int read(byte[],int,int)
			at statement: i2 = virtualinvoke $r5.<java.io.InputStream: int read(byte[],int,int)>($r4, varReplacer1282, $i9)


	 in Method: void readStoredEntry()
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #ea5b0f2b31f02cd801a913bc31f8afe10fb1556d7f5c9f9b83282d2aef0ac05f)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read, close
			at statement: i10 = specialinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveInputStream: int cacheBytesRead(java.io.ByteArrayOutputStream,int,int,int)>(r1, i10, i12, b0)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #ea5b0f2b31f02cd801a913bc31f8afe10fb1556d7f5c9f9b83282d2aef0ac05f)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read, close
			at statement: z1 = specialinvoke r0.<org.apache.commons.compress.archivers.zip.ZipArchiveInputStream: boolean bufferContainsSignature(java.io.ByteArrayOutputStream,int,int,int)>(r1, i10, i12, b0)


Findings in Java Class: org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream

	 in Method: int read(byte[],int,int)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #ea5b0f2b31f02cd801a913bc31f8afe10fb1556d7f5c9f9b83282d2aef0ac05f)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read, close
			at statement: virtualinvoke r0.<org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream: void count(int)>(i0)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #ea5b0f2b31f02cd801a913bc31f8afe10fb1556d7f5c9f9b83282d2aef0ac05f)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read, close
			at statement: $z4 = specialinvoke r0.<org.apache.commons.compress.compressors.gzip.GzipCompressorInputStream: boolean init(boolean)>(varReplacer1755)


Findings in Java Class: org.apache.commons.compress.compressors.lzma.LZMACompressorInputStream

	 in Method: int read(byte[],int,int)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #ea5b0f2b31f02cd801a913bc31f8afe10fb1556d7f5c9f9b83282d2aef0ac05f)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to java.io.InputStream: int read(byte[],int,int), javax.crypto.CipherInputStream: int read(), java.io.InputStream: int read(byte[]), java.io.FilterInputStream: int read(byte[],int,int), java.io.InputStream: int read(), javax.crypto.CipherInputStream: int read(byte[]), java.io.FilterInputStream: int read(byte[]), java.io.FilterInputStream: int read(), javax.crypto.CipherInputStream: int read(byte[],int,int)
			at statement: i2 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>(r1, i0, i1)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 7

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 1
	IncompleteOperationError: 10
	TypestateError: 1
	RequiredPredicateError: 2
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 46 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 49.18 s

Current Proejct: powermock-api-mockito2-2.0.2.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 434.2 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.259 s

Current Proejct: swagger-core-1.5.21.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 546.9 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.939 s

Current Proejct: mockito-core-2.28.2.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 675.0 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 2.742 s

Current Proejct: grpc-protobuf-lite-1.18.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 398.7 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.072 s

Current Proejct: jersey-server-2.27.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 604.1 ms 
Exception in thread "main" java.lang.RuntimeException: This operation requires resolving level HIERARCHY but org.glassfish.jersey.message.internal.AcceptableLanguageTag is at resolving level DANGLING
If you are extending Soot, try to add the following call before calling soot.Main.main(..):
Scene.v().addBasicClass(org.glassfish.jersey.message.internal.AcceptableLanguageTag,HIERARCHY);
Otherwise, try whole-program mode (-w).
	at soot.SootClass.checkLevelIgnoreResolving(SootClass.java:198)
	at soot.SootClass.checkLevel(SootClass.java:180)
	at soot.SootClass.isInterface(SootClass.java:1033)
	at soot.FastHierarchy.canStoreType(FastHierarchy.java:282)
	at soot.jimple.toolkits.callgraph.VirtualCalls.resolve(VirtualCalls.java:155)
	at soot.jimple.toolkits.callgraph.VirtualCalls.resolve(VirtualCalls.java:135)
	at soot.jimple.toolkits.callgraph.OnFlyCallGraphBuilder.addType(OnFlyCallGraphBuilder.java:582)
	at soot.jimple.toolkits.callgraph.CallGraphBuilder.processReceivers(CallGraphBuilder.java:211)
	at soot.jimple.toolkits.callgraph.CallGraphBuilder.process(CallGraphBuilder.java:131)
	at soot.jimple.toolkits.callgraph.CallGraphBuilder.build(CallGraphBuilder.java:117)
	at soot.jimple.toolkits.callgraph.CHATransformer.internalTransform(CHATransformer.java:51)
	at soot.SceneTransformer.transform(SceneTransformer.java:36)
	at soot.Transform.apply(Transform.java:102)
	at soot.RadioScenePack.internalApply(RadioScenePack.java:68)
	at soot.jimple.toolkits.callgraph.CallGraphPack.internalApply(CallGraphPack.java:58)
	at soot.Pack.apply(Pack.java:117)
	at crypto.HeadlessCryptoScanner.analyse(HeadlessCryptoScanner.java:198)
	at crypto.HeadlessCryptoScanner.exec(HeadlessCryptoScanner.java:167)
	at crypto.HeadlessCryptoScanner.main(HeadlessCryptoScanner.java:72)

Current Proejct: arquillian-testng.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 582.0 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.368 s

Current Proejct: jackson-core-2.8.11.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 465.2 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 2.531 s

Current Proejct: ant-apache-log4j.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 430.1 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.180 s

Current Proejct: netty-codec-http-4.1.43.Final.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 502.5 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 2 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 2
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1421)
		Method: <io.netty.handler.codec.http.websocketx.WebSocketUtil$1: java.security.MessageDigest initialValue()>
		SHA-256: c12d6da8da721e4d37a6b0b0d9f45636328e3584071b5d3f699bab0b742ce1b2
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer468)
		Method: <io.netty.handler.codec.http.websocketx.WebSocketUtil$2: java.security.MessageDigest initialValue()>
		SHA-256: d7d8f18eaa02aa5155b360e262589a63fe8e9af744ec928e34e4c29c5242f295
		Secure: false

Findings in Java Class: io.netty.handler.codec.http.websocketx.WebSocketUtil$2

	 in Method: java.security.MessageDigest initialValue()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #d7d8f18eaa02aa5155b360e262589a63fe8e9af744ec928e34e4c29c5242f295)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer468)


	 in Method: java.lang.Object initialValue()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #d7d8f18eaa02aa5155b360e262589a63fe8e9af744ec928e34e4c29c5242f295)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: return $r1


Findings in Java Class: io.netty.handler.codec.http.websocketx.WebSocketUtil$1

	 in Method: java.security.MessageDigest initialValue()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #c12d6da8da721e4d37a6b0b0d9f45636328e3584071b5d3f699bab0b742ce1b2)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1421)


	 in Method: java.lang.Object initialValue()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #c12d6da8da721e4d37a6b0b0d9f45636328e3584071b5d3f699bab0b742ce1b2)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: return $r1


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 2

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 2
	IncompleteOperationError: 2
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 3.292 s

Current Proejct: pulsar-presto-distribution-2.6.0-SNAPSHOT.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 387.9 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.147 s

Current Proejct: netty-transport-native-unix-common-4.1.43.Final.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 399.9 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.173 s

Current Proejct: cassandra-driver-core-3.6.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 841.6 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 3 analysis seeds within 1 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 4
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.25

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 4
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 5
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.6

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 5
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.8

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r15
		Type: byte[]
		Statement: r15 = virtualinvoke r11.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.datastax.driver.core.utils.UUIDs: long makeNode()>
		SHA-256: bdb9a7a338519af9dc710785962b17129ba2a1f7298054b94bef2d46a99f30af
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2809)
		Method: <com.datastax.driver.core.Token$RPToken$RPTokenFactory: java.security.MessageDigest createMessageDigest()>
		SHA-256: d94a121bf7649e2929a63345874d6ab8094e5bb369e85efdbd2b86c2c0ae1a03
		Secure: false
	Object:
		Variable: r3
		Type: byte[]
		Statement: r3 = virtualinvoke r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.datastax.driver.core.PagingState: byte[] hash(com.datastax.driver.core.Statement,com.datastax.driver.core.ProtocolVersion,com.datastax.driver.core.CodecRegistry)>
		SHA-256: fb6d3fb8bb532541c61639041cd5b0cc5d729376d8a57b2403c4e75ad8554d55
		Secure: false
	Object:
		Variable: r11
		Type: java.security.MessageDigest
		Statement: r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer946)
		Method: <com.datastax.driver.core.utils.UUIDs: long makeNode()>
		SHA-256: 360880c9a6de1b02d0723ef858c3454ad50f286ad0de0f0eb5b31c28b2f39959
		Secure: false
	Object:
		Variable: r4
		Type: java.security.MessageDigest
		Statement: r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4072)
		Method: <com.datastax.driver.core.PagingState: byte[] hash(com.datastax.driver.core.Statement,com.datastax.driver.core.ProtocolVersion,com.datastax.driver.core.CodecRegistry)>
		SHA-256: 1d5deb5c26b2eee77ded10c66b180fb5b08c2d6ff48c715e28232c13d710a59
		Secure: false

Findings in Java Class: com.datastax.driver.core.JdkSSLOptions

	 in Method: javax.net.ssl.SSLContext makeDefaultContext()
		ForbiddenMethodError violating CrySL rule for javax.net.ssl.SSLContext
			Detected call to forbidden method javax.net.ssl.SSLContext getDefault() of class javax.net.ssl.SSLContext. Instead, call method <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>.
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getDefault()>()


Findings in Java Class: com.datastax.driver.core.utils.UUIDs

	 in Method: long makeNode()
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #360880c9a6de1b02d0723ef858c3454ad50f286ad0de0f0eb5b31c28b2f39959)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: r15 = virtualinvoke r11.<java.security.MessageDigest: byte[] digest()>()

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #360880c9a6de1b02d0723ef858c3454ad50f286ad0de0f0eb5b31c28b2f39959)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer946)


Findings in Java Class: com.datastax.driver.core.Token$RPToken$RPTokenFactory

	 in Method: java.security.MessageDigest createMessageDigest()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #d94a121bf7649e2929a63345874d6ab8094e5bb369e85efdbd2b86c2c0ae1a03)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2809)


Findings in Java Class: com.datastax.driver.core.PagingState

	 in Method: byte[] hash(com.datastax.driver.core.Statement,com.datastax.driver.core.ProtocolVersion,com.datastax.driver.core.CodecRegistry)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #1d5deb5c26b2eee77ded10c66b180fb5b08c2d6ff48c715e28232c13d710a59)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4072)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 5

	CogniCrypt found the following violations. For details see description above.
	ForbiddenMethodError: 1
	ConstraintError: 3
	TypestateError: 1
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 6 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 10.95 s

Current Proejct: bcprov-ext-jdk15on-1.60.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 1.594 s 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 290 analysis seeds within 4 seconds!
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.bouncycastle.pqc.math.ntru.polynomial.BigDecimalPolynomial: void sub(org.bouncycastle.pqc.math.ntru.polynomial.BigDecimalPolynomial)> for class java.math.BigDecimal
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.bouncycastle.pqc.math.ntru.polynomial.BigDecimalPolynomial: void sub(org.bouncycastle.pqc.math.ntru.polynomial.BigDecimalPolynomial)> for class java.math.BigDecimal
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 290
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.0

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 290
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.01

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 290
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.01

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 290
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.01

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 290
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.02

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 290
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.02

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 290
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.02

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 290
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.03

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 290
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.03

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 290
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.03

[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.security.interfaces.ECPrivateKey: java.math.BigInteger getS()> for class org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.security.interfaces.ECPrivateKey: java.math.BigInteger getS()> for class org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.security.interfaces.ECPrivateKey: java.security.spec.ECParameterSpec getParams()> for class org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.security.interfaces.ECPrivateKey: java.security.spec.ECParameterSpec getParams()> for class org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 290
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.04

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 290
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.04

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 290
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.04

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 14 of 290
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.05

[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.security.interfaces.DSAPublicKey: java.security.interfaces.DSAParams getParams()> for class org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.security.interfaces.DSAPublicKey: java.security.interfaces.DSAParams getParams()> for class org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.security.interfaces.DSAPublicKey: java.security.interfaces.DSAParams getParams()> for class org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.security.interfaces.DSAPublicKey: java.security.interfaces.DSAParams getParams()> for class org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.security.interfaces.DSAPublicKey: java.security.interfaces.DSAParams getParams()> for class org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.security.interfaces.DSAPublicKey: java.security.interfaces.DSAParams getParams()> for class org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.security.interfaces.DSAPublicKey: java.security.interfaces.DSAParams getParams()> for class org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.security.interfaces.DSAPublicKey: java.security.interfaces.DSAParams getParams()> for class org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.security.interfaces.DSAPublicKey: java.security.interfaces.DSAParams getParams()> for class org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.security.interfaces.DSAPublicKey: java.security.interfaces.DSAParams getParams()> for class org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.security.interfaces.DSAPublicKey: java.security.interfaces.DSAParams getParams()> for class org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.security.interfaces.DSAPublicKey: java.security.interfaces.DSAParams getParams()> for class org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.security.interfaces.ECPublicKey: java.security.spec.ECPoint getW()> for class org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.security.interfaces.ECPublicKey: java.security.spec.ECPoint getW()> for class org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.security.interfaces.ECPublicKey: java.security.spec.ECParameterSpec getParams()> for class org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.security.interfaces.ECPublicKey: java.security.spec.ECParameterSpec getParams()> for class org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.security.interfaces.ECPublicKey: java.security.spec.ECParameterSpec getParams()> for class org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.security.interfaces.ECPublicKey: java.security.spec.ECParameterSpec getParams()> for class org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 15 of 290
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.05

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 16 of 290
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.06

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 17 of 290
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.06

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 18 of 291
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.06

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 19 of 291
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.07

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 20 of 291
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.07

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 21 of 291
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.07

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 22 of 291
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.08

[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.security.interfaces.ECPrivateKey: java.security.spec.ECParameterSpec getParams()> for class org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPrivateKey
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.security.interfaces.ECPrivateKey: java.math.BigInteger getS()> for class org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPrivateKey
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 23 of 291
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.08

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 24 of 291
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.08

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 25 of 291
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.09

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 26 of 291
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.09

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 27 of 291
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.09

[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.security.interfaces.ECPublicKey: java.security.spec.ECParameterSpec getParams()> for class org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.security.interfaces.ECPublicKey: java.security.spec.ECParameterSpec getParams()> for class org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.security.interfaces.ECPublicKey: java.security.spec.ECPoint getW()> for class org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 28 of 291
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.1

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 29 of 291
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.1

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 30 of 291
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.1

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 31 of 291
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.11

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 32 of 291
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.11

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 33 of 291
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.11

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 34 of 291
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.12

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 35 of 291
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.12

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 36 of 291
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.12

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 37 of 291
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.13

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 38 of 291
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.13

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 39 of 291
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.13

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 40 of 291
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.14

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 41 of 291
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.14

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 42 of 291
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.14

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 43 of 291
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.15

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 44 of 291
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.15

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 45 of 291
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.15

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 46 of 291
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.16

[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.bouncycastle.jcajce.spec.DHDomainParameterSpec: org.bouncycastle.crypto.params.DHParameters getDomainParameters()> for class javax.crypto.spec.DHParameterSpec
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.bouncycastle.jcajce.spec.DHDomainParameterSpec: org.bouncycastle.crypto.params.DHParameters getDomainParameters()> for class javax.crypto.spec.DHParameterSpec
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 47 of 291
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.16

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 48 of 291
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.16

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 49 of 291
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.17

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 50 of 291
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.17

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 51 of 292
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.17

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 52 of 293
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.18

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 53 of 294
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.18

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 54 of 295
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.18

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 55 of 296
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.19

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 56 of 297
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.19

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 57 of 298
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.19

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 58 of 299
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.19

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 59 of 301
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.2

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 60 of 301
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.2

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 61 of 301
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.2

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 62 of 301
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.21

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 63 of 301
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.21

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 64 of 303
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.21

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 65 of 303
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.21

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 66 of 303
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.22

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 67 of 303
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.22

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 68 of 303
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.22

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 69 of 303
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.23

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 70 of 303
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.23

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 71 of 303
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.23

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 72 of 303
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.24

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 73 of 303
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.24

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 74 of 303
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.24

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 75 of 303
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.25

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 76 of 303
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.25

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 77 of 303
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.25

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 78 of 304
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.26

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 79 of 305
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.26

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 80 of 305
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.26

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 81 of 306
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.26

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 82 of 307
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.27

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 83 of 308
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.27

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 84 of 308
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.27

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 85 of 309
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.28

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 86 of 310
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.28

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 87 of 311
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.28

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 88 of 315
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.28

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 89 of 315
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.28

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 90 of 316
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.28

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 91 of 318
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.29

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 92 of 319
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.29

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 93 of 321
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.29

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 94 of 321
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.29

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 95 of 322
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.3

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 96 of 322
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.3

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 97 of 322
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.3

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 98 of 324
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.3

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 99 of 324
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.31

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 100 of 324
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.31

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 101 of 324
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.31

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 102 of 325
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.31

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 103 of 325
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.32

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 104 of 325
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.32

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 105 of 325
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.32

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 106 of 325
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 107 of 327
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 108 of 328
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.bouncycastle.asn1.LimitedInputStream: int getRemaining()> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.bouncycastle.asn1.ASN1InputStream: int getLimit()> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.io.FileInputStream: java.nio.channels.FileChannel getChannel()> for class java.io.BufferedInputStream
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 109 of 328
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 110 of 328
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.34

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 111 of 329
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.34

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 112 of 330
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.34

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 113 of 331
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.34

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 114 of 331
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.34

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 115 of 331
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.35

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 116 of 331
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.35

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 117 of 331
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.35

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 118 of 331
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.36

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 119 of 331
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.36

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 120 of 331
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.36

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 121 of 331
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.37

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 122 of 331
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.37

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 123 of 332
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.37

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 124 of 333
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.37

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 125 of 334
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.37

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 126 of 334
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.38

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 127 of 335
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.38

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 128 of 336
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.38

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 129 of 337
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.38

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 130 of 338
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.38

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 131 of 338
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.39

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 132 of 338
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.39

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 133 of 338
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.39

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 134 of 338
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.4

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 135 of 338
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.4

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 136 of 338
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.4

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 137 of 339
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.4

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 138 of 339
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.41

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 139 of 339
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.41

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 140 of 339
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.41

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 141 of 339
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.42

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 142 of 339
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.42

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 143 of 339
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.42

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 144 of 339
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.42

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 145 of 339
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.43

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 146 of 339
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.43

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 147 of 339
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.43

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 148 of 340
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.44

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 149 of 341
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.44

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 150 of 342
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.44

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 151 of 343
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.44

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 152 of 343
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.44

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 153 of 343
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.45

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 154 of 343
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.45

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 155 of 343
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.45

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 156 of 347
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.45

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 157 of 347
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.45

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 158 of 347
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.46

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 159 of 347
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.46

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 160 of 348
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.46

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 161 of 348
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.46

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 162 of 349
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.46

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 163 of 350
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.47

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 164 of 351
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.47

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 165 of 352
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.47

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 166 of 353
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.47

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 167 of 354
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.47

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 168 of 354
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.47

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 169 of 354
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.48

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 170 of 355
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.48

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 171 of 356
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.48

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 172 of 357
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.48

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 173 of 358
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.48

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 174 of 359
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.48

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 175 of 360
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.49

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 176 of 360
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.49

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 177 of 360
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.49

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 178 of 360
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.49

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 179 of 361
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 180 of 365
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.49

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 181 of 366
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.49

Alive 17635  5000
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 182 of 366
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 183 of 366
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 184 of 371
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 185 of 371
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 186 of 371
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 187 of 371
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 188 of 371
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.51

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 189 of 371
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.51

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 190 of 371
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.51

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 191 of 371
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.51

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 192 of 371
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.52

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 193 of 371
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.52

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 194 of 371
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.52

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 195 of 371
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.53

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 196 of 371
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.53

Alive 21013  5000
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 197 of 371
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.53

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 198 of 371
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.53

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 199 of 371
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.54

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 200 of 371
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.54

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 201 of 371
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.54

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 202 of 371
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.54

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 203 of 371
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.55

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 204 of 371
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.55

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 205 of 372
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.55

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 206 of 372
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.55

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 207 of 374
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.55

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 208 of 374
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.56

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 209 of 374
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.56

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 210 of 374
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.56

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 211 of 374
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.56

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 212 of 374
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.57

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 213 of 375
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.57

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 214 of 377
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.57

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 215 of 378
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.57

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 216 of 378
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.57

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 217 of 379
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.57

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 218 of 379
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.58

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 219 of 380
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.58

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 220 of 381
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.58

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 221 of 382
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.58

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 222 of 383
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.58

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 223 of 384
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.58

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 224 of 385
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.58

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 225 of 386
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.58

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 226 of 386
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.59

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 227 of 386
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.59

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 228 of 386
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.59

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 229 of 386
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.59

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 230 of 386
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.6

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 231 of 386
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.6

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 232 of 386
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.6

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 233 of 386
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.6

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 234 of 386
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.61

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 235 of 386
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.61

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 236 of 386
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.61

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 237 of 386
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.61

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 238 of 386
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.62

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 239 of 386
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.62

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 240 of 386
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.62

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 241 of 386
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.62

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 242 of 386
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.63

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 243 of 386
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.63

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 244 of 386
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.63

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 245 of 386
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.63

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 246 of 386
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.64

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 247 of 386
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.64

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 248 of 388
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.64

Alive 20058  5000
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 249 of 388
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.64

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 250 of 388
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.64

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 251 of 388
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.65

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 252 of 388
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.65

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 253 of 388
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.65

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 254 of 390
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.65

Killed
