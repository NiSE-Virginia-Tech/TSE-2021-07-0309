<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>SpotBugs Report</title>
<style type="text/css">
		.tablerow0 {
			background: #EEEEEE;
		}

		.tablerow1 {
			background: white;
		}

		.detailrow0 {
			background: #EEEEEE;
		}

		.detailrow1 {
			background: white;
		}

		.tableheader {
			background: #b9b9fe;
			font-size: larger;
		}

		.tablerow0:hover, .tablerow1:hover {
			background: #aaffaa;
		}

		.priority-1 {
		    color: red;
		    font-weight: bold;
		}
		.priority-2 {
		    color: orange;
		    font-weight: bold;
		}
		.priority-3 {
		    color: green;
		    font-weight: bold;
		}
		.priority-4 {
		    color: blue;
		    font-weight: bold;
		}
		</style>
<script type="text/javascript">
			function toggleRow(elid) {
				if (document.getElementById) {
					element = document.getElementById(elid);
					if (element) {
						if (element.style.display == 'none') {
							element.style.display = 'block';
							//window.status = 'Toggle on!';
						} else {
							element.style.display = 'none';
							//window.status = 'Toggle off!';
						}
					}
				}
			}
		</script>
</head>
<body>
<h1>
<a href="https://spotbugs.github.io/">SpotBugs</a> Report</h1>
<h2>Project Information</h2>
<p>Project: 
		</p>
<p>SpotBugs version: 3.1.12</p>
<p>Code analyzed:</p>
<ul>
<li>/home/x/CryptoAPIDetect/dataset/group/kylin.git/hadoop-mapreduce-client-core-2.7.1.jar</li>
</ul>
<p>
<br/>
<br/>
</p>
<h2>Metrics</h2>
<p>38200 lines of code analyzed,
	in 874 classes, 
	in 36 packages.</p>
<table width="500" cellpadding="5" cellspacing="2">
<tr class="tableheader">
<th align="left">Metric</th>
<th align="right">Total</th>
<th align="right">Density*</th>
</tr>
<tr class="tablerow0">
<td>High Priority Warnings</td>
<td align="right">1</td>
<td align="right">0.03</td>
</tr>
<tr class="tablerow1">
<td>Medium Priority Warnings</td>
<td align="right">37</td>
<td align="right">0.97</td>
</tr>
<tr class="$totalClass">
<td>
<b>Total Warnings</b>
</td>
<td align="right">
<b>38</b>
</td>
<td align="right">
<b>0.99</b>
</td>
</tr>
</table>
<p>
<i>(* Defects per Thousand lines of non-commenting source statements)</i>
</p>
<p>
<br/>
<br/>
</p>
<h2>Contents</h2>
<ul>
<li>
<a href="#Warnings_SECURITY">Security Warnings</a>
</li>
<li>
<a href="#Details">Details</a>
</li>
</ul>
<h1>Summary</h1>
<table width="500" cellpadding="5" cellspacing="2">
<tr class="tableheader">
<th align="left">Warning Type</th>
<th align="right">Number</th>
</tr>
<tr class="tablerow0">
<td>
<a href="#Warnings_SECURITY">Security Warnings</a>
</td>
<td align="right">38</td>
</tr>
<tr class="tablerow1">
<td>
<b>Total</b>
</td>
<td align="right">
<b>38</b>
</td>
</tr>
</table>
<h1>Warnings</h1>
<p>Click on a warning row to see full context information.</p>
<h2>
<a name="Warnings_SECURITY">Security Warnings</a>
</h2>
<table class="warningtable" width="100%" cellspacing="0">
<tr class="tableheader">
<th align="left">Code</th>
<th align="left">Warning</th>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67523');">
<td>
<span class="priority-2">SECCI</span>
</td>
<td>This usage of java/lang/ProcessBuilder.&lt;init&gt;(Ljava/util/List;)V can be vulnerable to Command Injection</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67523" style="display: none;">
<a href="#COMMAND_INJECTION">Bug type COMMAND_INJECTION (click for details)</a>
<br/>In class org.apache.hadoop.mapred.pipes.Application<br/>In method org.apache.hadoop.mapred.pipes.Application.runClient(List, Map)<br/>At Application.java:[line 254]<br/>Sink method java/lang/ProcessBuilder.&lt;init&gt;(Ljava/util/List;)V<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/mapred/pipes/Application.runClient(Ljava/util/List;Ljava/util/Map;)Ljava/lang/Process; parameter 1<br/>At TaskLog.java:[line 507]<br/>At TaskLog.java:[line 510]<br/>At TaskLog.java:[line 542]<br/>At TaskLog.java:[line 543]<br/>At TaskLog.java:[line 546]<br/>At TaskLog.java:[line 549]<br/>At TaskLog.java:[line 551]<br/>At TaskLog.java:[line 553]<br/>At TaskLog.java:[line 554]<br/>At TaskLog.java:[line 556]<br/>At TaskLog.java:[line 557]<br/>At TaskLog.java:[line 558]<br/>At TaskLog.java:[line 560]<br/>At TaskLog.java:[line 561]<br/>At TaskLog.java:[line 562]<br/>At TaskLog.java:[line 563]<br/>At TaskLog.java:[line 564]<br/>At TaskLog.java:[line 566]<br/>At TaskLog.java:[line 567]<br/>At TaskLog.java:[line 568]<br/>At TaskLog.java:[line 570]<br/>At TaskLog.java:[line 571]<br/>At TaskLog.java:[line 572]<br/>At TaskLog.java:[line 573]<br/>At TaskLog.java:[line 575]<br/>At TaskLog.java:[line 621]<br/>At TaskLog.java:[line 626]<br/>At TaskLog.java:[line 629]<br/>At TaskLog.java:[line 632]<br/>At TaskLog.java:[line 634]<br/>At Application.java:[line 113]<br/>At Application.java:[line 121]<br/>At Application.java:[line 130]<br/>At Application.java:[line 133]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65820');">
<td>
<span class="priority-2">SECHCK</span>
</td>
<td>Hard coded cryptographic key found</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65820" style="display: none;">
<a href="#HARD_CODE_KEY">Bug type HARD_CODE_KEY (click for details)</a>
<br/>In class org.apache.hadoop.mapred.Task<br/>Value is hard coded in field org.apache.hadoop.mapred.Task.encryptedSpillKey[B with suspicious name<br/>At Task.java:[lines 78-1698]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65551');">
<td>
<span class="priority-2">SECHTTPCLIENT</span>
</td>
<td>DefaultHttpClient with default constructor is not compatible with TLS 1.2</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65551" style="display: none;">
<a href="#DEFAULT_HTTP_CLIENT">Bug type DEFAULT_HTTP_CLIENT (click for details)</a>
<br/>In class org.apache.hadoop.mapred.JobEndNotifier<br/>In method org.apache.hadoop.mapred.JobEndNotifier.httpNotification(String, int)<br/>At JobEndNotifier.java:[line 70]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69160');">
<td>
<span class="priority-1">SECMD5</span>
</td>
<td>This API MD5 (MDX) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69160" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_MD5">Bug type WEAK_MESSAGE_DIGEST_MD5 (click for details)</a>
<br/>In class org.apache.hadoop.mapreduce.lib.input.SequenceFileInputFilter$MD5Filter<br/>In method org.apache.hadoop.mapreduce.lib.input.SequenceFileInputFilter$MD5Filter.&lt;static initializer for MD5Filter&gt;()<br/>At SequenceFileInputFilter.java:[line 210]<br/>Value MD5</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67465');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67465" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.hadoop.mapred.lib.InputSampler$RandomSampler<br/>In method org.apache.hadoop.mapred.lib.InputSampler$RandomSampler.getSample(InputFormat, JobConf)<br/>At InputSampler.java:[line 164]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68001');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68001" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.hadoop.mapred.pipes.Application<br/>In method org.apache.hadoop.mapred.pipes.Application.getSecurityChallenge()<br/>At Application.java:[line 157]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69218');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69218" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.hadoop.mapreduce.lib.partition.InputSampler$RandomSampler<br/>In method org.apache.hadoop.mapreduce.lib.partition.InputSampler$RandomSampler.getSample(InputFormat, Job)<br/>At InputSampler.java:[line 201]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69634');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69634" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.hadoop.mapreduce.task.reduce.ShuffleSchedulerImpl<br/>In method new org.apache.hadoop.mapreduce.task.reduce.ShuffleSchedulerImpl(JobConf, TaskStatus, TaskAttemptID, ExceptionReporter, Progress, Counters$Counter, Counters$Counter, Counters$Counter)<br/>At ShuffleSchedulerImpl.java:[line 79]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67932');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67932" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.hadoop.mapred.pipes.Application<br/>In method new org.apache.hadoop.mapred.pipes.Application(JobConf, RecordReader, OutputCollector, Reporter, Class, Class)<br/>At Application.java:[line 116]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/fs/Path.toString()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65604');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65604" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.hadoop.mapred.QueueConfigurationParser<br/>In method new org.apache.hadoop.mapred.QueueConfigurationParser(String, boolean)<br/>At QueueConfigurationParser.java:[line 99]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/mapred/QueueConfigurationParser.&lt;init&gt;(Ljava/lang/String;Z)V parameter 1<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65736');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65736" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.hadoop.mapred.SpillRecord<br/>In method new org.apache.hadoop.mapred.SpillRecord(Path, JobConf, Checksum, String)<br/>At SpillRecord.java:[line 72]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/net/URI.getRawPath()Ljava/lang/String;<br/>Unknown source org/apache/hadoop/fs/Path.toUri()Ljava/net/URI;<br/>At SpillRecord.java:[line 72]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65860');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65860" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.hadoop.mapred.TaskLog<br/>In method org.apache.hadoop.mapred.TaskLog.addCommand(List, boolean)<br/>At TaskLog.java:[line 626]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/mapred/TaskLog.addCommand(Ljava/util/List;Z)Ljava/lang/String; parameter 1<br/>Unknown source java/util/Iterator.next()Ljava/lang/Object;<br/>At TaskLog.java:[line 507]<br/>At TaskLog.java:[line 542]<br/>At TaskLog.java:[line 553]<br/>At TaskLog.java:[line 621]<br/>At Application.java:[line 113]<br/>At Application.java:[line 121]<br/>At Application.java:[line 130]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66004');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66004" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.hadoop.mapred.TaskLog<br/>In method org.apache.hadoop.mapred.TaskLog.buildDebugScriptCommandLine(List, String)<br/>At TaskLog.java:[line 596]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/util/Iterator.next()Ljava/lang/Object;<br/>Unknown source org/apache/hadoop/mapred/TaskLog.buildDebugScriptCommandLine(Ljava/util/List;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Method usage not detected<br/>At TaskLog.java:[line 592]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66093');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66093" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.hadoop.mapred.TaskLog<br/>In method org.apache.hadoop.mapred.TaskLog.getAttemptDir(TaskAttemptID, boolean)<br/>At TaskLog.java:[line 189]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/mapred/TaskLog.getAttemptDir(Lorg/apache/hadoop/mapred/TaskAttemptID;Z)Ljava/io/File; parameter 1<br/>At TaskLog.java:[line 67]<br/>At TaskLog.java:[line 88]<br/>At TaskLog.java:[line 96]<br/>At TaskLog.java:[line 114]<br/>At TaskLog.java:[line 164]<br/>At TaskLog.java:[line 168]<br/>At TaskLog.java:[line 189]<br/>At TaskLog.java:[line 200]<br/>At TaskLog.java:[line 236]<br/>At TaskLog.java:[line 407]<br/>At TaskLogAppender.java:[line 55]<br/>At Application.java:[line 126]<br/>At Application.java:[line 127]<br/>At Application.java:[line 128]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66302');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66302" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.hadoop.mapred.TaskLog<br/>In method org.apache.hadoop.mapred.TaskLog.getJobDir(JobID)<br/>At TaskLog.java:[line 660]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/mapreduce/JobID.jtIdentifier<br/>Unknown source org/apache/hadoop/mapreduce/JobID.appendTo(Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder; parameter 0<br/>Unknown source java/text/NumberFormat.format(J)Ljava/lang/String;<br/>Unknown source org/apache/hadoop/mapreduce/JobID.toString()Ljava/lang/String;<br/>Unknown source org/apache/hadoop/mapreduce/JobID.appendTo(Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;<br/>At TaskLog.java:[line 660]<br/>At JobID.java:[line 111]<br/>At JobID.java:[line 113]<br/>At JobID.java:[line 124]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66431');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66431" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.hadoop.mapred.TaskLog<br/>In method org.apache.hadoop.mapred.TaskLog.getLogFileDetail(TaskAttemptID, TaskLog$LogName, boolean)<br/>At TaskLog.java:[line 138]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/mapred/TaskLog$LogName.toString()Ljava/lang/String;<br/>Unknown source org/apache/hadoop/mapred/TaskLog$LogName.prefix<br/>At TaskLog.java:[line 138]<br/>At TaskLog.java:[line 384]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66525');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66525" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.hadoop.mapred.TaskLog<br/>In method org.apache.hadoop.mapred.TaskLog.getRealTaskLogFileLocation(TaskAttemptID, boolean, TaskLog$LogName)<br/>At TaskLog.java:[line 101]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/mapred/TaskLog$LogName.toString()Ljava/lang/String;<br/>Unknown source org/apache/hadoop/mapred/TaskLog$LogName.prefix<br/>At TaskLog.java:[line 101]<br/>At TaskLog.java:[line 384]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66619');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66619" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.hadoop.mapred.TaskLog<br/>In method org.apache.hadoop.mapred.TaskLog.getTaskLogFile(TaskAttemptID, boolean, TaskLog$LogName)<br/>At TaskLog.java:[line 86]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/mapred/TaskLog$LogName.toString()Ljava/lang/String;<br/>Unknown source org/apache/hadoop/mapred/TaskLog$LogName.prefix<br/>At TaskLog.java:[line 86]<br/>At TaskLog.java:[line 384]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66713');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66713" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.hadoop.mapred.TaskLog<br/>In method org.apache.hadoop.mapred.TaskLog.getTaskLogFile(TaskAttemptID, boolean, TaskLog$LogName)<br/>At TaskLog.java:[line 88]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/mapred/TaskLog$LogName.toString()Ljava/lang/String;<br/>Unknown source org/apache/hadoop/mapred/TaskLog$LogName.prefix<br/>At TaskLog.java:[line 88]<br/>At TaskLog.java:[line 384]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66807');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66807" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.hadoop.mapred.TaskLog<br/>In method org.apache.hadoop.mapred.TaskLog.resetPrevLengths(String)<br/>At TaskLog.java:[line 246]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/mapred/TaskLog$LogName.toString()Ljava/lang/String;<br/>Unknown source org/apache/hadoop/mapred/TaskLog$LogName.prefix<br/>At TaskLog.java:[line 246]<br/>At TaskLog.java:[line 384]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66901');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66901" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.hadoop.mapred.TaskLog<br/>In method org.apache.hadoop.mapred.TaskLog.resetPrevLengths(String)<br/>At TaskLog.java:[line 247]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/mapred/TaskLog$LogName.toString()Ljava/lang/String;<br/>Unknown source org/apache/hadoop/mapred/TaskLog$LogName.prefix<br/>At TaskLog.java:[line 247]<br/>At TaskLog.java:[line 384]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66995');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66995" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.hadoop.mapred.TaskLog<br/>In method org.apache.hadoop.mapred.TaskLog.resetPrevLengths(String)<br/>At TaskLog.java:[line 248]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/mapred/TaskLog$LogName.toString()Ljava/lang/String;<br/>Unknown source org/apache/hadoop/mapred/TaskLog$LogName.prefix<br/>At TaskLog.java:[line 248]<br/>At TaskLog.java:[line 384]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67089');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67089" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.hadoop.mapred.TaskLog<br/>In method org.apache.hadoop.mapred.TaskLog.writeToIndexFile(String, boolean)<br/>At TaskLog.java:[line 218]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/mapred/TaskLog$LogName.toString()Ljava/lang/String;<br/>Unknown source org/apache/hadoop/mapred/TaskLog$LogName.prefix<br/>At TaskLog.java:[line 218]<br/>At TaskLog.java:[line 384]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67183');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67183" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.hadoop.mapred.TaskLog<br/>In method org.apache.hadoop.mapred.TaskLog.writeToIndexFile(String, boolean)<br/>At TaskLog.java:[line 222]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/mapred/TaskLog$LogName.toString()Ljava/lang/String;<br/>Unknown source org/apache/hadoop/mapred/TaskLog$LogName.prefix<br/>At TaskLog.java:[line 222]<br/>At TaskLog.java:[line 384]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67277');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67277" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.hadoop.mapred.TaskLog<br/>In method org.apache.hadoop.mapred.TaskLog.writeToIndexFile(String, boolean)<br/>At TaskLog.java:[line 226]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/mapred/TaskLog$LogName.toString()Ljava/lang/String;<br/>Unknown source org/apache/hadoop/mapred/TaskLog$LogName.prefix<br/>At TaskLog.java:[line 226]<br/>At TaskLog.java:[line 384]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67371');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67371" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.hadoop.mapred.TaskLog$Reader<br/>In method new org.apache.hadoop.mapred.TaskLog$Reader(TaskAttemptID, TaskLog$LogName, long, long, boolean)<br/>At TaskLog.java:[line 422]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/mapred/TaskLog$LogName.toString()Ljava/lang/String;<br/>Unknown source org/apache/hadoop/mapred/TaskLog$LogName.prefix<br/>At TaskLog.java:[line 384]<br/>At TaskLog.java:[line 422]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68187');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68187" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.hadoop.mapreduce.JobSubmitter<br/>In method org.apache.hadoop.mapreduce.JobSubmitter.readTokensFromFiles(Configuration, Credentials)<br/>At JobSubmitter.java:[line 399]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/fs/Path.toUri()Ljava/net/URI;<br/>Unknown source java/net/URI.getPath()Ljava/lang/String;<br/>At JobSubmitter.java:[line 393]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69555');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69555" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.hadoop.mapreduce.task.reduce.InMemoryReader<br/>In method org.apache.hadoop.mapreduce.task.reduce.InMemoryReader.dumpOnError()<br/>At InMemoryReader.java:[line 79]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/mapreduce/task/reduce/InMemoryReader.taskAttemptId<br/>At InMemoryReader.java:[line 79]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68828');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68828" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.apache.hadoop.mapreduce.lib.db.DataDrivenDBInputFormat<br/>In method org.apache.hadoop.mapreduce.lib.db.DataDrivenDBInputFormat.getSplits(JobContext)<br/>At DataDrivenDBInputFormat.java:[line 184]<br/>Sink method java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/mapreduce/lib/db/DBConfiguration.getInputOrderBy()Ljava/lang/String;<br/>Unknown source org/apache/hadoop/mapreduce/lib/db/DataDrivenDBInputFormat.getBoundingValsQuery()Ljava/lang/String;<br/>Unknown source org/apache/hadoop/mapreduce/lib/db/DBConfiguration.getInputConditions()Ljava/lang/String;<br/>Unknown source org/apache/hadoop/mapreduce/lib/db/DBConfiguration.getInputTableName()Ljava/lang/String;<br/>Unknown source org/apache/hadoop/mapreduce/lib/db/DBConfiguration.getInputBoundingQuery()Ljava/lang/String;<br/>Unknown source org/apache/hadoop/conf/Configuration.get(Ljava/lang/String;)Ljava/lang/String;<br/>At DataDrivenDBInputFormat.java:[line 184]<br/>At DataDrivenDBInputFormat.java:[line 235]<br/>At DataDrivenDBInputFormat.java:[line 243]<br/>At DataDrivenDBInputFormat.java:[line 244]<br/>At DataDrivenDBInputFormat.java:[line 245]<br/>At DataDrivenDBInputFormat.java:[line 246]<br/>At DataDrivenDBInputFormat.java:[line 247]<br/>At DataDrivenDBInputFormat.java:[line 249]<br/>At DataDrivenDBInputFormat.java:[line 252]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68271');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68271" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.apache.hadoop.mapreduce.lib.db.DBInputFormat<br/>In method org.apache.hadoop.mapreduce.lib.db.DBInputFormat.getSplits(JobContext)<br/>At DBInputFormat.java:[line 256]<br/>Sink method java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/mapreduce/lib/db/DBInputFormat.tableName<br/>Unknown source org/apache/hadoop/mapreduce/lib/db/DBInputFormat.conditions<br/>Unknown source org/apache/hadoop/mapreduce/lib/db/DBInputFormat.getCountQuery()Ljava/lang/String;<br/>Unknown source org/apache/hadoop/conf/Configuration.get(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/apache/hadoop/mapreduce/lib/db/DBConfiguration.getInputCountQuery()Ljava/lang/String;<br/>At DBInputFormat.java:[line 256]<br/>At DBInputFormat.java:[line 303]<br/>At DBInputFormat.java:[line 307]<br/>At DBInputFormat.java:[line 310]<br/>At DBInputFormat.java:[line 311]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68410');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68410" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.apache.hadoop.mapreduce.lib.db.DBOutputFormat<br/>In method org.apache.hadoop.mapreduce.lib.db.DBOutputFormat.getRecordWriter(TaskAttemptContext)<br/>At DBOutputFormat.java:[line 181]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/conf/Configuration.getStrings(Ljava/lang/String;)[Ljava/lang/String;<br/>Unknown source org/apache/hadoop/mapreduce/lib/db/DBConfiguration.getOutputTableName()Ljava/lang/String;<br/>Unknown source org/apache/hadoop/mapreduce/lib/db/DBOutputFormat.constructQuery(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/apache/hadoop/mapreduce/lib/db/DBOutputFormat.constructQuery(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/apache/hadoop/conf/Configuration.get(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/apache/hadoop/mapreduce/lib/db/DBOutputFormat.constructQuery(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/apache/hadoop/mapreduce/lib/db/DBConfiguration.getOutputFieldNames()[Ljava/lang/String;<br/>At DBOutputFormat.java:[line 141]<br/>At DBOutputFormat.java:[line 144]<br/>At DBOutputFormat.java:[line 146]<br/>At DBOutputFormat.java:[line 148]<br/>At DBOutputFormat.java:[line 151]<br/>At DBOutputFormat.java:[line 153]<br/>At DBOutputFormat.java:[line 156]<br/>At DBOutputFormat.java:[line 158]<br/>At DBOutputFormat.java:[line 161]<br/>At DBOutputFormat.java:[line 163]<br/>At DBOutputFormat.java:[line 170]<br/>At DBOutputFormat.java:[line 171]<br/>At DBOutputFormat.java:[line 182]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68639');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;II)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68639" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.apache.hadoop.mapreduce.lib.db.DBRecordReader<br/>In method org.apache.hadoop.mapreduce.lib.db.DBRecordReader.executeQuery(String)<br/>At DBRecordReader.java:[line 106]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;II)Ljava/sql/PreparedStatement;<br/>Sink parameter 2<br/>Unknown source org/apache/hadoop/mapreduce/lib/db/DBRecordReader.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet; parameter 0<br/>At DBRecordReader.java:[line 121]<br/>At DBRecordReader.java:[line 123]<br/>At DBRecordReader.java:[line 127]<br/>At DBRecordReader.java:[line 128]<br/>At DBRecordReader.java:[line 130]<br/>At DBRecordReader.java:[line 133]<br/>At DBRecordReader.java:[line 135]<br/>At DBRecordReader.java:[line 139]<br/>At DBRecordReader.java:[line 143]<br/>At DBRecordReader.java:[line 144]<br/>At DBRecordReader.java:[line 149]<br/>At DBRecordReader.java:[line 227]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69086');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;II)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69086" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.apache.hadoop.mapreduce.lib.db.MySQLDataDrivenDBRecordReader<br/>In method org.apache.hadoop.mapreduce.lib.db.MySQLDataDrivenDBRecordReader.executeQuery(String)<br/>At MySQLDataDrivenDBRecordReader.java:[line 46]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;II)Ljava/sql/PreparedStatement;<br/>Sink parameter 2<br/>Unknown source org/apache/hadoop/mapreduce/lib/db/MySQLDataDrivenDBRecordReader.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet; parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69012');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;II)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69012" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.apache.hadoop.mapreduce.lib.db.MySQLDBRecordReader<br/>In method org.apache.hadoop.mapreduce.lib.db.MySQLDBRecordReader.executeQuery(String)<br/>At MySQLDBRecordReader.java:[line 45]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;II)Ljava/sql/PreparedStatement;<br/>Sink parameter 2<br/>Unknown source org/apache/hadoop/mapreduce/lib/db/MySQLDBRecordReader.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet; parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69276');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69276" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.apache.hadoop.mapreduce.task.reduce.Fetcher<br/>In method org.apache.hadoop.mapreduce.task.reduce.Fetcher.openConnection(URL)<br/>At Fetcher.java:[line 233]<br/>Sink method java/net/URL.openConnection()Ljava/net/URLConnection;<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/mapreduce/task/reduce/Fetcher.openConnection(Ljava/net/URL;)V parameter 0<br/>At Fetcher.java:[line 266]<br/>At Fetcher.java:[line 305]<br/>At Fetcher.java:[line 319]<br/>At Fetcher.java:[line 322]<br/>At Fetcher.java:[line 323]<br/>At Fetcher.java:[line 342]<br/>At Fetcher.java:[line 343]<br/>At Fetcher.java:[line 378]<br/>At Fetcher.java:[line 404]<br/>At Fetcher.java:[line 657]<br/>At Fetcher.java:[line 660]<br/>At Fetcher.java:[line 662]<br/>At Fetcher.java:[line 664]<br/>At Fetcher.java:[line 669]<br/>At MapHost.java:[line 58]<br/>At MapHost.java:[line 69]<br/>At ShuffleSchedulerImpl.java:[line 432]<br/>At ShuffleSchedulerImpl.java:[line 433]<br/>At ShuffleSchedulerImpl.java:[line 439]<br/>At ShuffleSchedulerImpl.java:[line 440]<br/>At ShuffleSchedulerImpl.java:[line 441]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68113');">
<td>
<span class="priority-2">SECUHE</span>
</td>
<td>Unsafe comparison of hash that are susceptible to timing attack</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68113" style="display: none;">
<a href="#UNSAFE_HASH_EQUALS">Bug type UNSAFE_HASH_EQUALS (click for details)</a>
<br/>In class org.apache.hadoop.mapred.pipes.OutputHandler<br/>In method org.apache.hadoop.mapred.pipes.OutputHandler.authenticate(String)<br/>At OutputHandler.java:[line 164]<br/>Sink method java/lang/String.equals(Ljava/lang/Object;)Z<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/mapred/pipes/OutputHandler.authenticate(Ljava/lang/String;)Z parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68059');">
<td>
<span class="priority-2">SECUSS</span>
</td>
<td>Unencrypted server socket (instead of SSLServerSocket)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68059" style="display: none;">
<a href="#UNENCRYPTED_SERVER_SOCKET">Bug type UNENCRYPTED_SERVER_SOCKET (click for details)</a>
<br/>In class org.apache.hadoop.mapred.pipes.Application<br/>In method new org.apache.hadoop.mapred.pipes.Application(JobConf, RecordReader, OutputCollector, Reporter, Class, Class)<br/>At Application.java:[line 92]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65678');">
<td>
<span class="priority-2">SECXXEDOC</span>
</td>
<td>The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65678" style="display: none;">
<a href="#XXE_DOCUMENT">Bug type XXE_DOCUMENT (click for details)</a>
<br/>In class org.apache.hadoop.mapred.QueueConfigurationParser<br/>In method org.apache.hadoop.mapred.QueueConfigurationParser.loadResource(InputStream)<br/>At QueueConfigurationParser.java:[line 180]<br/>Value DocumentBuilder.parse(...)</p>
</td>
</tr>
</table>
<h1>
<a name="Details">Details</a>
</h1>
<h2>
<a name="COMMAND_INJECTION">COMMAND_INJECTION: Potential Command Injection</a>
</h2>
            
<p>The highlighted API is used to execute a system command. If unfiltered input is passed to this API, it can lead to arbitrary command execution.</p>
<br/>
<p>
    <b>Vulnerable Code:</b><br/>
<pre>import java.lang.Runtime;

Runtime r = Runtime.getRuntime();
r.exec("/bin/sh -c some_tool" + input);</pre>
</p>
<p>
<b>References</b><br/>
<a href="https://www.owasp.org/index.php/Command_Injection">OWASP: Command Injection</a><br/>
<a href="https://www.owasp.org/index.php/Top_10_2013-A1-Injection">OWASP: Top 10 2013-A1-Injection</a><br/>
<a href="https://cwe.mitre.org/data/definitions/78.html">CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')</a>
</p>

        
<h2>
<a name="HARD_CODE_KEY">HARD_CODE_KEY: Hard coded key</a>
</h2>
            
<p>
Cryptographic keys should not be kept in the source code. The source code can be widely shared in an enterprise environment, and is
certainly shared in open source. To be managed safely, passwords and secret keys should be stored in separate configuration files or keystores.
(Hard coded passwords are reported separately by the <i>Hard coded password</i> pattern)
</p>
<p>
<p><b>Vulnerable Code:</b><br/>

<pre>byte[] key = {1, 2, 3, 4, 5, 6, 7, 8};
SecretKeySpec spec = new SecretKeySpec(key, "AES");
Cipher aes = Cipher.getInstance("AES");
aes.init(Cipher.ENCRYPT_MODE, spec);
return aesCipher.doFinal(secretData);</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/321.html">CWE-321: Use of Hard-coded Cryptographic Key</a><br/>
</p>

        
<h2>
<a name="DEFAULT_HTTP_CLIENT">DEFAULT_HTTP_CLIENT: DefaultHttpClient with default constructor is not compatible with TLS 1.2</a>
</h2>
            
<p>
    <b>Vulnerable Code:</b><br/>
<pre>HttpClient client = new DefaultHttpClient();</pre>
</p>
<p>
<p><b>Solution:</b><br/>

Upgrade your implementation to use one of the recommended constructs and configure <code>https.protocols</code> JVM option to include TLSv1.2:</p>

<p>
<ul>
  <li>Use <a href="https://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs/org/apache/http/impl/client/SystemDefaultHttpClient.html">SystemDefaultHttpClient</a> instead</li>
<p>
    <b>Sample Code:</b><br/>
<pre>HttpClient client = new SystemDefaultHttpClient();</pre>
</p>
  <li>Create an HttpClient based on SSLSocketFactory - get an SSLScoketFactory instance with <a href="https://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs/org/apache/http/conn/ssl/SSLSocketFactory.html#getSystemSocketFactory()"><code>getSystemSocketFactory()</code></a> and use this instance for HttpClient creation</li>
  <li>Create an HttpClient based on SSLConnectionSocketFactory - get an instance with <a href="https://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs/org/apache/http/conn/ssl/SSLConnectionSocketFactory.html#getSystemSocketFactory()"><code>getSystemSocketFactory()</code></a> and use this instance for HttpClient creation</li>
  <li>Use HttpClientBuilder - call <a href="https://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs/org/apache/http/impl/client/HttpClientBuilder.html#useSystemProperties()"><code>useSystemProperties()</code></a> before calling <code>build()</code></li>
<p>
    <b>Sample Code:</b><br/>
<pre>HttpClient client = HttpClientBuilder.create().useSystemProperties().build();</pre>
</p>
  <li>HttpClients - call <a href="https://hc.apache.org/httpcomponents-client-ga/httpclient/apidocs/org/apache/http/impl/client/HttpClients.html#createSystem()"><code>createSystem()</code></a> to create an instance</li>
<p>
    <b>Sample Code:</b><br/>
<pre>HttpClient client = HttpClients.createSystem();</pre>
</p>
</ul>
</p>
<br/>

<p>
<b>References</b><br/>
<a href="https://blogs.oracle.com/java-platform-group/entry/diagnosing_tls_ssl_and_https">Diagnosing TLS, SSL, and HTTPS</a>
</p>

        
<h2>
<a name="WEAK_MESSAGE_DIGEST_MD5">WEAK_MESSAGE_DIGEST_MD5: MD2, MD4 and MD5 are weak hash functions</a>
</h2>
            
<p>The algorithms MD2, MD4 and MD5 are not a recommended MessageDigest. <b>PBKDF2</b> should be used to hash password for example.</p>

<blockquote>
    "The security of the MD5 hash function is severely compromised. A collision attack exists that can find collisions
    within seconds on a computer with a 2.6 GHz Pentium 4 processor (complexity of 2<sup>24.1</sup>).[1] Further, there is also a
    chosen-prefix collision attack that can produce a collision for two inputs with specified prefixes within hours, using
    off-the-shelf computing hardware (complexity 2<sup>39</sup>).[2]"<br/>
    - <a href="https://en.wikipedia.org/wiki/MD5#Security">Wikipedia: MD5 - Security</a>
</blockquote>

<blockquote>
    "<b>SHA-224, SHA-256, SHA-384, SHA-512, SHA-512/224, and SHA-512/256</b>:<br/>
    The use of these hash functions is acceptable for all hash function applications."<br/>
    - <a href="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-131Ar2.pdf">NIST: Transitioning the Use of Cryptographic Algorithms and Key Lengths p.15</a>
</blockquote>
<blockquote>
    "The main idea of a PBKDF is to slow dictionary or brute force attacks on the passwords by increasing the time
    needed to test each password. An attacker with a list of likely passwords can evaluate the PBKDF using the known
    iteration counter and the salt. Since an attacker has to spend a significant amount of computing time for each try,
    it becomes harder to apply the dictionary or brute force attacks."<br/>
- <a href="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-132.pdf">NIST: Recommendation for Password-Based Key Derivation  p.12</a>
</blockquote>
<br/>
<p>
    <b>Vulnerable Code:</b><br/>
    <pre>MessageDigest md5Digest = MessageDigest.getInstance("MD5");
    md5Digest.update(password.getBytes());
    byte[] hashValue = md5Digest.digest();</pre>
    <br/>
    <pre>byte[] hashValue = DigestUtils.getMd5Digest().digest(password.getBytes());</pre>
</p>
<br/>
<p>
    <b>Solution (Using bouncy castle):</b><br/>
    <pre>public static byte[] getEncryptedPassword(String password, byte[] salt) throws NoSuchAlgorithmException, InvalidKeySpecException {
    PKCS5S2ParametersGenerator gen = new PKCS5S2ParametersGenerator(new SHA256Digest());
    gen.init(password.getBytes("UTF-8"), salt.getBytes(), 4096);
    return ((KeyParameter) gen.generateDerivedParameters(256)).getKey();
}</pre>
    <br/>
    <b>Solution (Java 8 and later):</b><br/>
    <pre>public static byte[] getEncryptedPassword(String password, byte[] salt) throws NoSuchAlgorithmException, InvalidKeySpecException {
    KeySpec spec = new PBEKeySpec(password.toCharArray(), salt, 4096, 256 * 8);
    SecretKeyFactory f = SecretKeyFactory.getInstance("PBKDF2WithHmacSHA256");
    return f.generateSecret(spec).getEncoded();
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
[1] <a href="https://www.win.tue.nl/hashclash/On%20Collisions%20for%20MD5%20-%20M.M.J.%20Stevens.pdf">On Collisions for MD5</a>: Master Thesis by M.M.J. Stevens<br/>
[2] <a href="https://homepages.cwi.nl/~stevens/papers/stJOC%20-%20Chosen-Prefix%20Collisions%20for%20MD5%20and%20Applications.pdf">Chosen-prefix collisions for MD5 and applications</a>: Paper written by Marc Stevens<br/>
<a href="https://en.wikipedia.org/wiki/MD5">Wikipedia: MD5</a><br/>
<a href="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-131Ar2.pdf">NIST: Transitioning the Use of Cryptographic Algorithms and Key Lengths</a><br/>
<a href="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-132.pdf">NIST: Recommendation for Password-Based Key Derivation</a><br/>
<a href="https://stackoverflow.com/q/22580853/89769">Stackoverflow: Reliable implementation of PBKDF2-HMAC-SHA256 for Java</a><br/>
<a href="https://cwe.mitre.org/data/definitions/327.html">CWE-327: Use of a Broken or Risky Cryptographic Algorithm</a>
</p>

        
<h2>
<a name="PREDICTABLE_RANDOM">PREDICTABLE_RANDOM: Predictable pseudorandom number generator</a>
</h2>
            
<p>The use of a predictable random value can lead to vulnerabilities when used in certain security critical contexts. For example, when the value is used as:</p>
<ul>
<li>a CSRF token: a predictable token can lead to a CSRF attack as an attacker will know the value of the token</li>
<li>a password reset token (sent by email): a predictable password token can lead to an account takeover, since an attacker will guess the URL of the "change password" form</li>
<li>any other secret value</li>
</ul>
<p>
A quick fix could be to replace the use of <code>java.util.Random</code> with something stronger, such as <code>java.security.SecureRandom</code>.
</p>
<p>
<b>Vulnerable Code:</b><br/>
<pre>String generateSecretToken() {
    Random r = new Random();
    return Long.toHexString(r.nextLong());
}</pre>
</p>
<p>
<b>Solution:</b>
<pre>import org.apache.commons.codec.binary.Hex;

String generateSecretToken() {
    SecureRandom secRandom = new SecureRandom();

    byte[] result = new byte[32];
    secRandom.nextBytes(result);
    return Hex.encodeHexString(result);
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://jazzy.id.au/2010/09/20/cracking_random_number_generators_part_1.html">Cracking Random Number Generators - Part 1 (https://jazzy.id.au)</a><br/>
<a href="https://www.securecoding.cert.org/confluence/display/java/MSC02-J.+Generate+strong+random+numbers">CERT: MSC02-J. Generate strong random numbers</a><br/>
<a href="https://cwe.mitre.org/data/definitions/330.html">CWE-330: Use of Insufficiently Random Values</a><br/>
<a href="https://blog.h3xstream.com/2014/12/predicting-struts-csrf-token-cve-2014.html">Predicting Struts CSRF Token (Example of real-life vulnerability and exploitation)</a>
</p>

        
<h2>
<a name="PATH_TRAVERSAL_IN">PATH_TRAVERSAL_IN: Potential Path Traversal (file read)</a>
</h2>
            
<p>A file is opened to read its content. The filename comes from an <b>input</b> parameter.
If an unfiltered parameter is passed to this file API, files from an arbitrary filesystem location could be read.</p>
<p>This rule identifies <b>potential</b> path traversal vulnerabilities. In many cases, the constructed file path cannot be controlled
by the user. If that is the case, the reported instance is a false positive.</p>
<br/>

<p>
    <b>Vulnerable Code:</b><br/>
<pre>@GET
@Path("/images/{image}")
@Produces("images/*")
public Response getImage(@javax.ws.rs.PathParam("image") String image) {
    File file = new File("resources/images/", image); //Weak point

    if (!file.exists()) {
        return Response.status(Status.NOT_FOUND).build();
    }

    return Response.ok().entity(new FileInputStream(file)).build();
}</pre>
</p>
<br/>

<p>
    <b>Solution:</b><br/>
<pre>import org.apache.commons.io.FilenameUtils;

@GET
@Path("/images/{image}")
@Produces("images/*")
public Response getImage(@javax.ws.rs.PathParam("image") String image) {
    File file = new File("resources/images/", FilenameUtils.getName(image)); //Fix

    if (!file.exists()) {
        return Response.status(Status.NOT_FOUND).build();
    }

    return Response.ok().entity(new FileInputStream(file)).build();
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="http://projects.webappsec.org/w/page/13246952/Path%20Traversal">WASC: Path Traversal</a><br/>
<a href="https://www.owasp.org/index.php/Path_Traversal">OWASP: Path Traversal</a><br/>
<a href="https://capec.mitre.org/data/definitions/126.html">CAPEC-126: Path Traversal</a><br/>
<a href="https://cwe.mitre.org/data/definitions/22.html">CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')</a>
</p>

        
<h2>
<a name="SQL_INJECTION_JDBC">SQL_INJECTION_JDBC: Potential JDBC Injection</a>
</h2>
            
<p>
The input values included in SQL queries need to be passed in safely.
Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection.
</p>

<p>
    <b>Vulnerable Code:</b><br/>
    <pre>Connection conn = [...];
Statement stmt = con.createStatement();
ResultSet rs = stmt.executeQuery("update COFFEES set SALES = "+nbSales+" where COF_NAME = '"+coffeeName+"'");</pre>
</p>
<p>
    <b>Solution:</b><br/>
    <pre>Connection conn = [...];
conn.prepareStatement("update COFFEES set SALES = ? where COF_NAME = ?");
updateSales.setInt(1, nbSales);
updateSales.setString(2, coffeeName);</pre>
</p>
<br/>

<b>References (JDBC)</b><br/>
<a href="https://docs.oracle.com/javase/tutorial/jdbc/basics/prepared.html">Oracle Documentation: The Java Tutorials &gt; Prepared Statements</a><br/>
<b>References (SQL injection)</b><br/>
<a href="http://projects.webappsec.org/w/page/13246963/SQL%20Injection">WASC-19: SQL Injection</a><br/>
<a href="https://capec.mitre.org/data/definitions/66.html">CAPEC-66: SQL Injection</a><br/>
<a href="https://cwe.mitre.org/data/definitions/89.html">CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')</a><br/>
<a href="https://www.owasp.org/index.php/Top_10_2013-A1-Injection">OWASP: Top 10 2013-A1-Injection</a><br/>
<a href="https://www.owasp.org/index.php/SQL_Injection_Prevention_Cheat_Sheet">OWASP: SQL Injection Prevention Cheat Sheet</a><br/>
<a href="https://www.owasp.org/index.php/Query_Parameterization_Cheat_Sheet">OWASP: Query Parameterization Cheat Sheet</a><br/>
</p>

        
<h2>
<a name="URLCONNECTION_SSRF_FD">URLCONNECTION_SSRF_FD: URLConnection Server-Side Request Forgery (SSRF) and File Disclosure</a>
</h2>
            
<p>
    Server-Side Request Forgery occur when a web server executes a request to a user supplied destination
    parameter that is not validated. Such vulnerabilities could allow an attacker to access internal services
    or to launch attacks from your web server.
</p>
<p>
    URLConnection can be used with file:// protocol or other protocols to access local filesystem and potentially other services.
<p>
    <b>Vulnerable Code:</b>
<pre>
new URL(String url).openConnection()
</pre>

<pre>
new URL(String url).openStream()
</pre>

<pre>
new URL(String url).getContent()
</pre>
</p>
<p>
    <b>Solution/Countermeasures:</b><br/>
    <ul>
        <li>Don't accept URL destinations from users</li>
        <li>Accept a destination key, and use it to look up the target destination associate with the key</li>
        <li>White list URLs (if possible)</li>
        <li>Validate that the beginning of the URL is part of a white list</li>
    </ul>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a><br/>
<a href="https://www.bishopfox.com/blog/2015/04/vulnerable-by-design-understanding-server-side-request-forgery/">Understanding Server-Side Request Forgery</a><br/>
<a href="https://cwe.mitre.org/data/definitions/73.html">CWE-73: External Control of File Name or Path</a><br/>
<a href="https://www.pwntester.com/blog/2013/11/28/abusing-jar-downloads/">Abusing jar:// downloads</a><br />
</p>
            
<h2>
<a name="UNSAFE_HASH_EQUALS">UNSAFE_HASH_EQUALS: Unsafe hash equals</a>
</h2>
            
<p>
An attacker might be able to detect the value of the secret hash due to the exposure of comparison timing. When the
functions <code>Arrays.equals()</code> or <code>String.equals()</code> are called, they will exit earlier if fewer
bytes are matched.
</p>
<p>
<p><b>Vulnerable Code:</b><br/>

<pre>
String actualHash = ...

if(userInput.equals(actualHash)) {
    ...
}</pre>
</p>
<p><b>Solution:</b><br/>

<pre>
String actualHash = ...

if(MessageDigest.isEqual(userInput.getBytes(),actualHash.getBytes())) {
    ...
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/203.html">CWE-203: Information Exposure Through DiscrepancyKey</a><br/>
</p>

        
<h2>
<a name="UNENCRYPTED_SERVER_SOCKET">UNENCRYPTED_SERVER_SOCKET: Unencrypted Server Socket</a>
</h2>
            
<p>
The communication channel used is not encrypted. The traffic could be read by an attacker intercepting the network traffic.
</p>
<p>
<b>Vulnerable Code:</b><br/>
Plain server socket (Cleartext communication):
<pre>ServerSocket soc = new ServerSocket(1234);</pre>
</p>
<p>
<b>Solution:</b><br/>
SSL Server Socket (Secure communication):
<pre>ServerSocket soc = SSLServerSocketFactory.getDefault().createServerSocket(1234);</pre>
</p>
<p>Beyond using an SSL server socket, you need to make sure your use of SSLServerSocketFactory does all the appropriate certificate validation checks to
make sure you are not subject to man-in-the-middle attacks. Please read the OWASP Transport Layer Protection Cheat Sheet for details on how
to do this correctly.
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://www.owasp.org/index.php/Top_10_2010-A9">OWASP: Top 10 2010-A9-Insufficient Transport Layer Protection</a><br/>
<a href="https://www.owasp.org/index.php/Top_10_2013-A6-Sensitive_Data_Exposure">OWASP: Top 10 2013-A6-Sensitive Data Exposure</a><br/>
<a href="https://www.owasp.org/index.php/Transport_Layer_Protection_Cheat_Sheet">OWASP: Transport Layer Protection Cheat Sheet</a><br/>
<a href="http://projects.webappsec.org/w/page/13246945/Insufficient%20Transport%20Layer%20Protection">WASC-04: Insufficient Transport Layer Protection</a><br/>
<a href="https://cwe.mitre.org/data/definitions/319.html">CWE-319: Cleartext Transmission of Sensitive Information</a>
</p>

        
<h2>
<a name="XXE_DOCUMENT">XXE_DOCUMENT: XML parsing vulnerable to XXE (DocumentBuilder)</a>
</h2>
            
<!--XXE_GENERIC_START-->
<h3>Attack</h3>
<p>XML External Entity (XXE) attacks can occur when an XML parser supports XML entities while processing XML received
from an untrusted source.</p>
<p><b>Risk 1: Expose local file content (XXE: <u>X</u>ML E<u>x</u>ternal <u>E</u>ntity)</b></p>
<p>
<pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;
&lt;!DOCTYPE foo [
   &lt;!ENTITY xxe SYSTEM &quot;file:///etc/passwd&quot; &gt; ]&gt;
&lt;foo&gt;&amp;xxe;&lt;/foo&gt;</pre>
</p>
<b>Risk 2: Denial of service (XEE: <u>X</u>ML <u>E</u>ntity <u>E</u>xpansion)</b>
<p>
<pre>
&lt;?xml version=&quot;1.0&quot;?&gt;
&lt;!DOCTYPE lolz [
 &lt;!ENTITY lol &quot;lol&quot;&gt;
 &lt;!ELEMENT lolz (#PCDATA)&gt;
 &lt;!ENTITY lol1 &quot;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&quot;&gt;
 &lt;!ENTITY lol2 &quot;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&quot;&gt;
 &lt;!ENTITY lol3 &quot;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&quot;&gt;
[...]
 &lt;!ENTITY lol9 &quot;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&quot;&gt;
]&gt;
&lt;lolz&gt;&amp;lol9;&lt;/lolz&gt;</pre>
</p>

<h3>Solution</h3>
<p>
In order to avoid exposing dangerous feature of the XML parser, you can do the following change to the code.
</p>
<!--XXE_GENERIC_END-->

<p><b>Vulnerable Code:</b></p>
<p>
<pre>
DocumentBuilder db = DocumentBuilderFactory.newInstance().newDocumentBuilder();

Document doc = db.parse(input);</pre>
</p>
<br/>
<p>
The following snippets show two available solutions. You can set one feature or both.
</p>

<p><b>Solution using "Secure processing" mode:</b></p>
<p>
This setting will protect you against Denial of Service attack and remote file access.
<pre>
DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
DocumentBuilder db = dbf.newDocumentBuilder();

Document doc = db.parse(input);</pre>
</p>

<p><b>Solution disabling DTD:</b></p>
<p>
By disabling DTD, almost all XXE attacks will be prevented.
<pre>
DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true);
DocumentBuilder db = dbf.newDocumentBuilder();

Document doc = db.parse(input);</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<!--XXE_GENERIC_START-->
<a href="https://cwe.mitre.org/data/definitions/611.html">CWE-611: Improper Restriction of XML External Entity Reference ('XXE')</a><br/>
<a href="https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=61702260">CERT: IDS10-J. Prevent XML external entity attacks</a><br/>
<a href="https://www.owasp.org/index.php/XML_External_Entity_%28XXE%29_Processing">OWASP.org: XML External Entity (XXE) Processing</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_Entity_Expansion">WS-Attacks.org: XML Entity Expansion</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_External_Entity_DOS">WS-Attacks.org: XML External Entity DOS</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_Entity_Reference_Attack">WS-Attacks.org: XML Entity Reference Attack</a><br/>
<a href="https://blog.h3xstream.com/2014/06/identifx-xml-external-entity.html">Identifx XML External Entity vulnerability (XXE)</a><br/>
<!--XXE_GENERIC_END-->
<a href="http://xerces.apache.org/xerces2-j/features.html">Xerces2 complete features list</a>
</p>

        </body>
</html>
