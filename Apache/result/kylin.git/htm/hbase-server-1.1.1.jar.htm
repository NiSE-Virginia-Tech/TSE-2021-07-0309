<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>SpotBugs Report</title>
<style type="text/css">
		.tablerow0 {
			background: #EEEEEE;
		}

		.tablerow1 {
			background: white;
		}

		.detailrow0 {
			background: #EEEEEE;
		}

		.detailrow1 {
			background: white;
		}

		.tableheader {
			background: #b9b9fe;
			font-size: larger;
		}

		.tablerow0:hover, .tablerow1:hover {
			background: #aaffaa;
		}

		.priority-1 {
		    color: red;
		    font-weight: bold;
		}
		.priority-2 {
		    color: orange;
		    font-weight: bold;
		}
		.priority-3 {
		    color: green;
		    font-weight: bold;
		}
		.priority-4 {
		    color: blue;
		    font-weight: bold;
		}
		</style>
<script type="text/javascript">
			function toggleRow(elid) {
				if (document.getElementById) {
					element = document.getElementById(elid);
					if (element) {
						if (element.style.display == 'none') {
							element.style.display = 'block';
							//window.status = 'Toggle on!';
						} else {
							element.style.display = 'none';
							//window.status = 'Toggle off!';
						}
					}
				}
			}
		</script>
</head>
<body>
<h1>
<a href="https://spotbugs.github.io/">SpotBugs</a> Report</h1>
<h2>Project Information</h2>
<p>Project: 
		</p>
<p>SpotBugs version: 3.1.12</p>
<p>Code analyzed:</p>
<ul>
<li>/home/x/CryptoAPIDetect/dataset/group/kylin.git/hbase-server-1.1.1.jar</li>
</ul>
<p>
<br/>
<br/>
</p>
<h2>Metrics</h2>
<p>91548 lines of code analyzed,
	in 1734 classes, 
	in 63 packages.</p>
<table width="500" cellpadding="5" cellspacing="2">
<tr class="tableheader">
<th align="left">Metric</th>
<th align="right">Total</th>
<th align="right">Density*</th>
</tr>
<tr class="tablerow0">
<td>High Priority Warnings</td>
<td align="right">18</td>
<td align="right">0.20</td>
</tr>
<tr class="tablerow1">
<td>Medium Priority Warnings</td>
<td align="right">86</td>
<td align="right">0.94</td>
</tr>
<tr class="$totalClass">
<td>
<b>Total Warnings</b>
</td>
<td align="right">
<b>104</b>
</td>
<td align="right">
<b>1.14</b>
</td>
</tr>
</table>
<p>
<i>(* Defects per Thousand lines of non-commenting source statements)</i>
</p>
<p>
<br/>
<br/>
</p>
<h2>Contents</h2>
<ul>
<li>
<a href="#Warnings_SECURITY">Security Warnings</a>
</li>
<li>
<a href="#Details">Details</a>
</li>
</ul>
<h1>Summary</h1>
<table width="500" cellpadding="5" cellspacing="2">
<tr class="tableheader">
<th align="left">Warning Type</th>
<th align="right">Number</th>
</tr>
<tr class="tablerow0">
<td>
<a href="#Warnings_SECURITY">Security Warnings</a>
</td>
<td align="right">104</td>
</tr>
<tr class="tablerow1">
<td>
<b>Total</b>
</td>
<td align="right">
<b>104</b>
</td>
</tr>
</table>
<h1>Warnings</h1>
<p>Click on a warning row to see full context information.</p>
<h2>
<a name="Warnings_SECURITY">Security Warnings</a>
</h2>
<table class="warningtable" width="100%" cellspacing="0">
<tr class="tableheader">
<th align="left">Code</th>
<th align="left">Warning</th>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66755');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66755" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class org.apache.hadoop.hbase.generated.master.table_jsp<br/>In method org.apache.hadoop.hbase.generated.master.table_jsp._jspService(HttpServletRequest, HttpServletResponse)<br/>At table_jsp.java:[line 299]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69450');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69450" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class org.apache.hadoop.hbase.io.hfile.HFilePrettyPrinter$SimpleReporter<br/>In method org.apache.hadoop.hbase.io.hfile.HFilePrettyPrinter$SimpleReporter.run()<br/>At HFilePrettyPrinter.java:[line 537]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71492');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71492" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class org.apache.hadoop.hbase.regionserver.CompactSplitThread$CompactionRunner<br/>In method org.apache.hadoop.hbase.regionserver.CompactSplitThread$CompactionRunner.formatStackTrace(Exception)<br/>At CompactSplitThread.java:[line 552]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N72363');">
<td>
<span class="priority-2">SECCRLFLOG</span>
</td>
<td>This use of org/apache/commons/logging/Log.fatal(Ljava/lang/Object;)V might be used to include CRLF characters into log messages</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N72363" style="display: none;">
<a href="#CRLF_INJECTION_LOGS">Bug type CRLF_INJECTION_LOGS (click for details)</a>
<br/>In class org.apache.hadoop.hbase.regionserver.wal.FSHLog<br/>In method org.apache.hadoop.hbase.regionserver.wal.FSHLog.main(String[])<br/>At FSHLog.java:[line 2157]<br/>Sink method org/apache/commons/logging/Log.fatal(Ljava/lang/Object;)V<br/>Sink parameter 0<br/>Tainted source org/apache/hadoop/hbase/regionserver/wal/FSHLog.main([Ljava/lang/String;)V parameter 0<br/>At FSHLog.java:[line 2157]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N74066');">
<td>
<span class="priority-2">SECCRLFLOG</span>
</td>
<td>This use of org/apache/commons/logging/Log.info(Ljava/lang/Object;)V might be used to include CRLF characters into log messages</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N74066" style="display: none;">
<a href="#CRLF_INJECTION_LOGS">Bug type CRLF_INJECTION_LOGS (click for details)</a>
<br/>In class org.apache.hadoop.hbase.util.hbck.OfflineMetaRepair<br/>In method org.apache.hadoop.hbase.util.hbck.OfflineMetaRepair.main(String[])<br/>At OfflineMetaRepair.java:[line 109]<br/>Sink method org/apache/commons/logging/Log.info(Ljava/lang/Object;)V<br/>Sink parameter 0<br/>Tainted source org/apache/hadoop/hbase/util/hbck/OfflineMetaRepair.main([Ljava/lang/String;)V parameter 0<br/>At OfflineMetaRepair.java:[line 108]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N72844');">
<td>
<span class="priority-2">SECCRLFLOG</span>
</td>
<td>This use of org/apache/commons/logging/Log.trace(Ljava/lang/Object;)V might be used to include CRLF characters into log messages</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N72844" style="display: none;">
<a href="#CRLF_INJECTION_LOGS">Bug type CRLF_INJECTION_LOGS (click for details)</a>
<br/>In class org.apache.hadoop.hbase.util.JSONBean<br/>In method org.apache.hadoop.hbase.util.JSONBean.write(JsonGenerator, MBeanServer, ObjectName, String, boolean)<br/>At JSONBean.java:[line 143]<br/>Sink method org/apache/commons/logging/Log.trace(Ljava/lang/Object;)V<br/>Sink parameter 0<br/>Unknown source java/util/Iterator.next()Ljava/lang/Object;<br/>Unknown source org/apache/hadoop/hbase/util/JSONBean.write(Lorg/codehaus/jackson/JsonGenerator;Ljavax/management/MBeanServer;Ljavax/management/ObjectName;Ljava/lang/String;Z)I parameter 1<br/>Unknown source javax/management/MBeanServer.queryNames(Ljavax/management/ObjectName;Ljavax/management/QueryExp;)Ljava/util/Set;<br/>Method usage with tainted arguments detected<br/>At JMXJsonServlet.java:[line 172]<br/>At JMXJsonServlet.java:[line 174]<br/>At JMXJsonServlet.java:[line 182]<br/>At JMXJsonServlet.java:[line 195]<br/>At JSONBean.java:[line 53]<br/>At JSONBean.java:[line 117]<br/>At JSONBean.java:[line 119]<br/>At JSONBean.java:[line 125]<br/>At JSONBean.java:[line 132]<br/>At JSONBean.java:[line 143]<br/>At JSONBean.java:[line 96]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N73038');">
<td>
<span class="priority-2">SECCRLFLOG</span>
</td>
<td>This use of org/apache/commons/logging/Log.error(Ljava/lang/Object;Ljava/lang/Throwable;)V might be used to include CRLF characters into log messages</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N73038" style="display: none;">
<a href="#CRLF_INJECTION_LOGS">Bug type CRLF_INJECTION_LOGS (click for details)</a>
<br/>In class org.apache.hadoop.hbase.util.JSONBean<br/>In method org.apache.hadoop.hbase.util.JSONBean.write(JsonGenerator, MBeanServer, ObjectName, String, boolean)<br/>At JSONBean.java:[line 146]<br/>Sink method org/apache/commons/logging/Log.error(Ljava/lang/Object;Ljava/lang/Throwable;)V<br/>Sink parameter 1<br/>Unknown source java/util/Iterator.next()Ljava/lang/Object;<br/>Unknown source org/apache/hadoop/hbase/util/JSONBean.write(Lorg/codehaus/jackson/JsonGenerator;Ljavax/management/MBeanServer;Ljavax/management/ObjectName;Ljava/lang/String;Z)I parameter 1<br/>Unknown source javax/management/MBeanServer.queryNames(Ljavax/management/ObjectName;Ljavax/management/QueryExp;)Ljava/util/Set;<br/>Method usage with tainted arguments detected<br/>At JMXJsonServlet.java:[line 172]<br/>At JMXJsonServlet.java:[line 174]<br/>At JMXJsonServlet.java:[line 182]<br/>At JMXJsonServlet.java:[line 195]<br/>At JSONBean.java:[line 53]<br/>At JSONBean.java:[line 117]<br/>At JSONBean.java:[line 119]<br/>At JSONBean.java:[line 125]<br/>At JSONBean.java:[line 132]<br/>At JSONBean.java:[line 146]<br/>At JSONBean.java:[line 96]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N73232');">
<td>
<span class="priority-2">SECCRLFLOG</span>
</td>
<td>This use of org/apache/commons/logging/Log.error(Ljava/lang/Object;Ljava/lang/Throwable;)V might be used to include CRLF characters into log messages</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N73232" style="display: none;">
<a href="#CRLF_INJECTION_LOGS">Bug type CRLF_INJECTION_LOGS (click for details)</a>
<br/>In class org.apache.hadoop.hbase.util.JSONBean<br/>In method org.apache.hadoop.hbase.util.JSONBean.write(JsonGenerator, MBeanServer, ObjectName, String, boolean)<br/>At JSONBean.java:[line 152]<br/>Sink method org/apache/commons/logging/Log.error(Ljava/lang/Object;Ljava/lang/Throwable;)V<br/>Sink parameter 1<br/>Unknown source java/util/Iterator.next()Ljava/lang/Object;<br/>Unknown source org/apache/hadoop/hbase/util/JSONBean.write(Lorg/codehaus/jackson/JsonGenerator;Ljavax/management/MBeanServer;Ljavax/management/ObjectName;Ljava/lang/String;Z)I parameter 1<br/>Unknown source javax/management/MBeanServer.queryNames(Ljavax/management/ObjectName;Ljavax/management/QueryExp;)Ljava/util/Set;<br/>Method usage with tainted arguments detected<br/>At JMXJsonServlet.java:[line 172]<br/>At JMXJsonServlet.java:[line 174]<br/>At JMXJsonServlet.java:[line 182]<br/>At JMXJsonServlet.java:[line 195]<br/>At JSONBean.java:[line 53]<br/>At JSONBean.java:[line 117]<br/>At JSONBean.java:[line 119]<br/>At JSONBean.java:[line 125]<br/>At JSONBean.java:[line 132]<br/>At JSONBean.java:[line 152]<br/>At JSONBean.java:[line 96]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N73426');">
<td>
<span class="priority-2">SECCRLFLOG</span>
</td>
<td>This use of org/apache/commons/logging/Log.error(Ljava/lang/Object;Ljava/lang/Throwable;)V might be used to include CRLF characters into log messages</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N73426" style="display: none;">
<a href="#CRLF_INJECTION_LOGS">Bug type CRLF_INJECTION_LOGS (click for details)</a>
<br/>In class org.apache.hadoop.hbase.util.JSONBean<br/>In method org.apache.hadoop.hbase.util.JSONBean.write(JsonGenerator, MBeanServer, ObjectName, String, boolean)<br/>At JSONBean.java:[line 157]<br/>Sink method org/apache/commons/logging/Log.error(Ljava/lang/Object;Ljava/lang/Throwable;)V<br/>Sink parameter 1<br/>Unknown source java/util/Iterator.next()Ljava/lang/Object;<br/>Unknown source org/apache/hadoop/hbase/util/JSONBean.write(Lorg/codehaus/jackson/JsonGenerator;Ljavax/management/MBeanServer;Ljavax/management/ObjectName;Ljava/lang/String;Z)I parameter 1<br/>Unknown source javax/management/MBeanServer.queryNames(Ljavax/management/ObjectName;Ljavax/management/QueryExp;)Ljava/util/Set;<br/>Method usage with tainted arguments detected<br/>At JMXJsonServlet.java:[line 172]<br/>At JMXJsonServlet.java:[line 174]<br/>At JMXJsonServlet.java:[line 182]<br/>At JMXJsonServlet.java:[line 195]<br/>At JSONBean.java:[line 53]<br/>At JSONBean.java:[line 117]<br/>At JSONBean.java:[line 119]<br/>At JSONBean.java:[line 125]<br/>At JSONBean.java:[line 132]<br/>At JSONBean.java:[line 157]<br/>At JSONBean.java:[line 96]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N73620');">
<td>
<span class="priority-2">SECCRLFLOG</span>
</td>
<td>This use of org/apache/commons/logging/Log.error(Ljava/lang/Object;Ljava/lang/Throwable;)V might be used to include CRLF characters into log messages</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N73620" style="display: none;">
<a href="#CRLF_INJECTION_LOGS">Bug type CRLF_INJECTION_LOGS (click for details)</a>
<br/>In class org.apache.hadoop.hbase.util.JSONBean<br/>In method org.apache.hadoop.hbase.util.JSONBean.write(JsonGenerator, MBeanServer, ObjectName, String, boolean)<br/>At JSONBean.java:[line 163]<br/>Sink method org/apache/commons/logging/Log.error(Ljava/lang/Object;Ljava/lang/Throwable;)V<br/>Sink parameter 1<br/>Unknown source java/util/Iterator.next()Ljava/lang/Object;<br/>Unknown source org/apache/hadoop/hbase/util/JSONBean.write(Lorg/codehaus/jackson/JsonGenerator;Ljavax/management/MBeanServer;Ljavax/management/ObjectName;Ljava/lang/String;Z)I parameter 1<br/>Unknown source javax/management/MBeanServer.queryNames(Ljavax/management/ObjectName;Ljavax/management/QueryExp;)Ljava/util/Set;<br/>Method usage with tainted arguments detected<br/>At JMXJsonServlet.java:[line 172]<br/>At JMXJsonServlet.java:[line 174]<br/>At JMXJsonServlet.java:[line 182]<br/>At JMXJsonServlet.java:[line 195]<br/>At JSONBean.java:[line 53]<br/>At JSONBean.java:[line 117]<br/>At JSONBean.java:[line 119]<br/>At JSONBean.java:[line 125]<br/>At JSONBean.java:[line 132]<br/>At JSONBean.java:[line 163]<br/>At JSONBean.java:[line 96]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N73814');">
<td>
<span class="priority-2">SECCRLFLOG</span>
</td>
<td>This use of org/apache/commons/logging/Log.error(Ljava/lang/Object;Ljava/lang/Throwable;)V might be used to include CRLF characters into log messages</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N73814" style="display: none;">
<a href="#CRLF_INJECTION_LOGS">Bug type CRLF_INJECTION_LOGS (click for details)</a>
<br/>In class org.apache.hadoop.hbase.util.JSONBean<br/>In method org.apache.hadoop.hbase.util.JSONBean.write(JsonGenerator, MBeanServer, ObjectName, String, boolean)<br/>At JSONBean.java:[line 169]<br/>Sink method org/apache/commons/logging/Log.error(Ljava/lang/Object;Ljava/lang/Throwable;)V<br/>Sink parameter 1<br/>Unknown source java/util/Iterator.next()Ljava/lang/Object;<br/>Unknown source org/apache/hadoop/hbase/util/JSONBean.write(Lorg/codehaus/jackson/JsonGenerator;Ljavax/management/MBeanServer;Ljavax/management/ObjectName;Ljava/lang/String;Z)I parameter 1<br/>Unknown source javax/management/MBeanServer.queryNames(Ljavax/management/ObjectName;Ljavax/management/QueryExp;)Ljava/util/Set;<br/>Method usage with tainted arguments detected<br/>At JMXJsonServlet.java:[line 172]<br/>At JMXJsonServlet.java:[line 174]<br/>At JMXJsonServlet.java:[line 182]<br/>At JMXJsonServlet.java:[line 195]<br/>At JSONBean.java:[line 53]<br/>At JSONBean.java:[line 117]<br/>At JSONBean.java:[line 119]<br/>At JSONBean.java:[line 125]<br/>At JSONBean.java:[line 132]<br/>At JSONBean.java:[line 169]<br/>At JSONBean.java:[line 96]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65551');">
<td>
<span class="priority-2">SECHCP</span>
</td>
<td>Hard coded password found</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65551" style="display: none;">
<a href="#HARD_CODE_PASSWORD">Bug type HARD_CODE_PASSWORD (click for details)</a>
<br/>In class org.apache.hadoop.hbase.JMXListener<br/>In method org.apache.hadoop.hbase.JMXListener.startConnectorServer(int, int)<br/>At JMXListener.java:[line 126]<br/>Sink method java/util/HashMap.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;<br/>Sink parameter 0</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69562');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in org.apache.hadoop.hbase.io.hfile.bucket.BucketCache.retrieveFromFile(int[])</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69562" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class org.apache.hadoop.hbase.io.hfile.bucket.BucketCache<br/>In method org.apache.hadoop.hbase.io.hfile.bucket.BucketCache.retrieveFromFile(int[])<br/>At BucketCache.java:[line 939]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69616');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in org.apache.hadoop.hbase.io.hfile.bucket.BucketCache.retrieveFromFile(int[])</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69616" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class org.apache.hadoop.hbase.io.hfile.bucket.BucketCache<br/>In method org.apache.hadoop.hbase.io.hfile.bucket.BucketCache.retrieveFromFile(int[])<br/>At BucketCache.java:[line 943]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N72558');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in org.apache.hadoop.hbase.security.access.HbaseObjectWritableFor96Migration.readObject(DataInput, HbaseObjectWritableFor96Migration, Configuration)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N72558" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class org.apache.hadoop.hbase.security.access.HbaseObjectWritableFor96Migration<br/>In method org.apache.hadoop.hbase.security.access.HbaseObjectWritableFor96Migration.readObject(DataInput, HbaseObjectWritableFor96Migration, Configuration)<br/>At HbaseObjectWritableFor96Migration.java:[line 739]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65615');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (org.apache.commons.lang.math.RandomUtilsnextInt()) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65615" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.hadoop.hbase.coordination.ZkSplitLogWorkerCoordination<br/>In method org.apache.hadoop.hbase.coordination.ZkSplitLogWorkerCoordination.grabTask(String)<br/>At ZkSplitLogWorkerCoordination.java:[line 271]<br/>Value org.apache.commons.lang.math.RandomUtilsnextInt()</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65673');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.lang.Math.random()) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65673" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.hadoop.hbase.coordination.ZkSplitLogWorkerCoordination<br/>In method org.apache.hadoop.hbase.coordination.ZkSplitLogWorkerCoordination.taskLoop()<br/>At ZkSplitLogWorkerCoordination.java:[line 419]<br/>Value java.lang.Math.random()</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69504');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69504" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.hadoop.hbase.io.hfile.PrefetchExecutor<br/>In method org.apache.hadoop.hbase.io.hfile.PrefetchExecutor.&lt;static initializer for PrefetchExecutor&gt;()<br/>At PrefetchExecutor.java:[line 74]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70016');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.concurrent.ThreadLocalRandom) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70016" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.hadoop.hbase.ipc.RpcExecutor$RandomQueueBalancer<br/>In method org.apache.hadoop.hbase.ipc.RpcExecutor$RandomQueueBalancer.getNextQueue()<br/>At RpcExecutor.java:[line 207]<br/>Value java.util.concurrent.ThreadLocalRandom</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70074');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70074" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.hadoop.hbase.ipc.RpcServer$Listener<br/>In method new org.apache.hadoop.hbase.ipc.RpcServer$Listener(RpcServer, String)<br/>At RpcServer.java:[line 563]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70132');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70132" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.hadoop.hbase.mapreduce.CopyTable<br/>In method org.apache.hadoop.hbase.mapreduce.CopyTable.createSubmittableJob(String[])<br/>At CopyTable.java:[line 148]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70545');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70545" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.hadoop.hbase.master.AssignmentManager<br/>In method org.apache.hadoop.hbase.master.AssignmentManager.prepareDaughterReplicaForAssignment(HRegionInfo, HRegionInfo, int, Map)<br/>At AssignmentManager.java:[line 4131]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71191');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71191" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.hadoop.hbase.master.balancer.BaseLoadBalancer<br/>In method org.apache.hadoop.hbase.master.balancer.BaseLoadBalancer.&lt;static initializer for BaseLoadBalancer&gt;()<br/>At BaseLoadBalancer.java:[line 791]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71249');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71249" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.hadoop.hbase.master.balancer.FavoredNodeAssignmentHelper<br/>In method new org.apache.hadoop.hbase.master.balancer.FavoredNodeAssignmentHelper(List, RackManager)<br/>At FavoredNodeAssignmentHelper.java:[line 84]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71307');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71307" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.hadoop.hbase.master.balancer.SimpleLoadBalancer<br/>In method org.apache.hadoop.hbase.master.balancer.SimpleLoadBalancer.&lt;static initializer for SimpleLoadBalancer&gt;()<br/>At SimpleLoadBalancer.java:[line 60]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71365');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71365" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.hadoop.hbase.master.balancer.StochasticLoadBalancer<br/>In method org.apache.hadoop.hbase.master.balancer.StochasticLoadBalancer.&lt;static initializer for StochasticLoadBalancer&gt;()<br/>At StochasticLoadBalancer.java:[line 106]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71133');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71133" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.hadoop.hbase.master.RegionPlacementMaintainer$RandomizedMatrix<br/>In method new org.apache.hadoop.hbase.master.RegionPlacementMaintainer$RandomizedMatrix(int, int)<br/>At RegionPlacementMaintainer.java:[line 523]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N72305');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N72305" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.hadoop.hbase.regionserver.compactions.RatioBasedCompactionPolicy<br/>In method new org.apache.hadoop.hbase.regionserver.compactions.RatioBasedCompactionPolicy(Configuration, StoreConfigInformation)<br/>At RatioBasedCompactionPolicy.java:[line 343]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71546');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71546" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.hadoop.hbase.regionserver.ConstantSizeRegionSplitPolicy<br/>In method org.apache.hadoop.hbase.regionserver.ConstantSizeRegionSplitPolicy.&lt;static initializer for ConstantSizeRegionSplitPolicy&gt;()<br/>At ConstantSizeRegionSplitPolicy.java:[line 39]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71604');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (org.apache.commons.lang.RandomStringUtilsrandomNumeric()) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71604" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.hadoop.hbase.regionserver.HRegion<br/>In method org.apache.hadoop.hbase.regionserver.HRegion.createHRegion(HRegionInfo, Path, Path, Configuration, HTableDescriptor, WAL, boolean, boolean)<br/>At HRegion.java:[line 5960]<br/>Value org.apache.commons.lang.RandomStringUtilsrandomNumeric()</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71662');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (org.apache.commons.lang.math.RandomUtilsnextInt()) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71662" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.hadoop.hbase.regionserver.HRegionServer$PeriodicMemstoreFlusher<br/>In method org.apache.hadoop.hbase.regionserver.HRegionServer$PeriodicMemstoreFlusher.chore()<br/>At HRegionServer.java:[line 1559]<br/>Value org.apache.commons.lang.math.RandomUtilsnextInt()</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N72442');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N72442" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.hadoop.hbase.replication.regionserver.ReplicationSinkManager<br/>In method new org.apache.hadoop.hbase.replication.regionserver.ReplicationSinkManager(HConnection, String, HBaseReplicationEndpoint, Configuration)<br/>At ReplicationSinkManager.java:[line 100]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N72500');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N72500" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.hadoop.hbase.replication.regionserver.ReplicationSourceManager<br/>In method new org.apache.hadoop.hbase.replication.regionserver.ReplicationSourceManager(ReplicationQueues, ReplicationPeers, ReplicationTracker, Configuration, Server, FileSystem, Path, Path, UUID)<br/>At ReplicationSourceManager.java:[line 158]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N72612');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N72612" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.hadoop.hbase.snapshot.ExportSnapshot$ExportMapper<br/>In method org.apache.hadoop.hbase.snapshot.ExportSnapshot$ExportMapper.injectTestFailure(Mapper$Context, SnapshotProtos$SnapshotFileInfo)<br/>At ExportSnapshot.java:[line 229]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N72670');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N72670" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.hadoop.hbase.util.ByteBloomFilter<br/>In method org.apache.hadoop.hbase.util.ByteBloomFilter.setFakeLookupMode(boolean)<br/>At ByteBloomFilter.java:[line 603]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N72728');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N72728" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.hadoop.hbase.util.HBaseFsckRepair<br/>In method org.apache.hadoop.hbase.util.HBaseFsckRepair.fixMetaHoleOnlineAndAddReplicas(Configuration, HRegionInfo, Collection, int)<br/>At HBaseFsckRepair.java:[line 175]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N72786');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N72786" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.hadoop.hbase.util.HMerge<br/>In method org.apache.hadoop.hbase.util.HMerge.&lt;static initializer for HMerge&gt;()<br/>At HMerge.java:[line 61]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N74008');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.concurrent.ThreadLocalRandom) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N74008" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.hadoop.hbase.util.MultiHConnection<br/>In method org.apache.hadoop.hbase.util.MultiHConnection.processBatchCallback(List, TableName, Object[], Batch$Callback)<br/>At MultiHConnection.java:[line 125]<br/>Value java.util.concurrent.ThreadLocalRandom</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N74145');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N74145" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.hadoop.hbase.zookeeper.MiniZooKeeperCluster<br/>In method org.apache.hadoop.hbase.zookeeper.MiniZooKeeperCluster.selectClientPort(int)<br/>At MiniZooKeeperCluster.java:[line 139]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69670');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69670" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.hadoop.hbase.io.hfile.bucket.BucketCache<br/>In method org.apache.hadoop.hbase.io.hfile.bucket.BucketCache.retrieveFromFile(int[])<br/>At BucketCache.java:[line 913]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/hbase/io/hfile/bucket/BucketCache.persistencePath<br/>At BucketCache.java:[line 913]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69749');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69749" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.hadoop.hbase.io.hfile.bucket.BucketCache<br/>In method org.apache.hadoop.hbase.io.hfile.bucket.BucketCache.retrieveFromFile(int[])<br/>At BucketCache.java:[line 924]<br/>Sink method java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/hbase/io/hfile/bucket/BucketCache.persistencePath<br/>At BucketCache.java:[line 924]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69907');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/RandomAccessFile.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69907" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.hadoop.hbase.io.hfile.bucket.FileIOEngine<br/>In method new org.apache.hadoop.hbase.io.hfile.bucket.FileIOEngine(String, long)<br/>At FileIOEngine.java:[line 46]<br/>Sink method java/io/RandomAccessFile.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V<br/>Sink parameter 1<br/>Unknown source org/apache/hadoop/hbase/io/hfile/bucket/FileIOEngine.&lt;init&gt;(Ljava/lang/String;J)V parameter 2<br/>At CacheConfig.java:[line 572]<br/>At BucketCache.java:[line 212]<br/>At BucketCache.java:[line 219]<br/>At BucketCache.java:[line 307]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70190');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70190" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.hadoop.hbase.mapreduce.ImportTsv<br/>In method org.apache.hadoop.hbase.mapreduce.ImportTsv.createSubmittableJob(Configuration, String[])<br/>At ImportTsv.java:[line 483]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/conf/Configuration.get(Ljava/lang/String;)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70259');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70259" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.hadoop.hbase.mapreduce.JarFinder<br/>In method org.apache.hadoop.hbase.mapreduce.JarFinder.getJar(Class)<br/>At JarFinder.java:[line 162]<br/>Sink method java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;<br/>Sink parameter 0<br/>Unknown source java/io/File.getAbsoluteFile()Ljava/io/File;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70328');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70328" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.hadoop.hbase.mapreduce.JarFinder<br/>In method org.apache.hadoop.hbase.mapreduce.JarFinder.getJar(Class)<br/>At JarFinder.java:[line 163]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.getAbsolutePath()Ljava/lang/String;<br/>At JarFinder.java:[line 163]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70407');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70407" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.hadoop.hbase.mapreduce.JarFinder<br/>In method org.apache.hadoop.hbase.mapreduce.JarFinder.zipDir(File, String, ZipOutputStream, boolean)<br/>At JarFinder.java:[line 89]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.list()[Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70476');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70476" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.hadoop.hbase.mapreduce.JarFinder<br/>In method org.apache.hadoop.hbase.mapreduce.JarFinder.zipDir(File, String, ZipOutputStream, boolean)<br/>At JarFinder.java:[line 98]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.getPath()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70687');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70687" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.hadoop.hbase.master.HMasterCommandLine<br/>In method org.apache.hadoop.hbase.master.HMasterCommandLine.startMaster()<br/>At HMasterCommandLine.java:[line 158]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/conf/Configuration.get(Ljava/lang/String;)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71423');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71423" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.hadoop.hbase.monitoring.LogMonitoring<br/>In method org.apache.hadoop.hbase.monitoring.LogMonitoring.getActiveLogFiles()<br/>At LogMonitoring.java:[line 55]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/log4j/FileAppender.getFile()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69828');">
<td>
<span class="priority-2">SECPTO</span>
</td>
<td>This API (java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;Z)V) writes to a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69828" style="display: none;">
<a href="#PATH_TRAVERSAL_OUT">Bug type PATH_TRAVERSAL_OUT (click for details)</a>
<br/>In class org.apache.hadoop.hbase.io.hfile.bucket.BucketCache<br/>In method org.apache.hadoop.hbase.io.hfile.bucket.BucketCache.persistToFile()<br/>At BucketCache.java:[line 897]<br/>Sink method java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;Z)V<br/>Sink parameter 1<br/>Unknown source org/apache/hadoop/hbase/io/hfile/bucket/BucketCache.persistencePath<br/>At BucketCache.java:[line 897]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N72247');">
<td>
<span class="priority-2">SECRD</span>
</td>
<td>The regular expression "^([0-9a-f]+(?:_SeqId_[0-9]+_)?)" is vulnerable to a denial of service attack (ReDOS)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N72247" style="display: none;">
<a href="#REDOS">Bug type REDOS (click for details)</a>
<br/>Value ^([0-9a-f]+(?:_SeqId_[0-9]+_)?)<br/>In class org.apache.hadoop.hbase.regionserver.StoreFileInfo<br/>In method org.apache.hadoop.hbase.regionserver.StoreFileInfo.&lt;static initializer for StoreFileInfo&gt;()<br/>At StoreFileInfo.java:[line 56]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68570');">
<td>
<span class="priority-1">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68570" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.apache.hadoop.hbase.http.log.LogLevel<br/>In method org.apache.hadoop.hbase.http.log.LogLevel.process(String)<br/>At LogLevel.java:[line 73]<br/>Sink method java/net/URL.openConnection()Ljava/net/URLConnection;<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/hbase/http/log/LogLevel.process(Ljava/lang/String;)V parameter 0<br/>Unknown source java/net/URL.&lt;init&gt;(Ljava/lang/String;)V<br/>Method usage with tainted arguments detected<br/>At LogLevel.java:[line 56]<br/>At LogLevel.java:[line 60]<br/>At LogLevel.java:[line 71]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70603');">
<td>
<span class="priority-1">SECUR</span>
</td>
<td>The following redirection could be used by an attacker to redirect users to a phishing website.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70603" style="display: none;">
<a href="#UNVALIDATED_REDIRECT">Bug type UNVALIDATED_REDIRECT (click for details)</a>
<br/>In class org.apache.hadoop.hbase.master.HMaster$RedirectServlet<br/>In method org.apache.hadoop.hbase.master.HMaster$RedirectServlet.doGet(HttpServletRequest, HttpServletResponse)<br/>At HMaster.java:[line 342]<br/>Sink method javax/servlet/http/HttpServletResponse.sendRedirect(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Tainted source javax/servlet/http/HttpServletRequest.getServerName()Ljava/lang/String;<br/>Tainted source javax/servlet/http/HttpServletRequest.getRequestURI()Ljava/lang/String;<br/>At HMaster.java:[line 339]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N74203');">
<td>
<span class="priority-2">SECUS</span>
</td>
<td>Unencrypted socket to org.apache.hadoop.hbase.zookeeper.MiniZooKeeperCluster (instead of SSLSocket)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N74203" style="display: none;">
<a href="#UNENCRYPTED_SOCKET">Bug type UNENCRYPTED_SOCKET (click for details)</a>
<br/>In class org.apache.hadoop.hbase.zookeeper.MiniZooKeeperCluster<br/>In method org.apache.hadoop.hbase.zookeeper.MiniZooKeeperCluster.waitForServerDown(int, long)<br/>At MiniZooKeeperCluster.java:[line 399]<br/>Value localhost</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N74261');">
<td>
<span class="priority-2">SECUS</span>
</td>
<td>Unencrypted socket to org.apache.hadoop.hbase.zookeeper.MiniZooKeeperCluster (instead of SSLSocket)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N74261" style="display: none;">
<a href="#UNENCRYPTED_SOCKET">Bug type UNENCRYPTED_SOCKET (click for details)</a>
<br/>In class org.apache.hadoop.hbase.zookeeper.MiniZooKeeperCluster<br/>In method org.apache.hadoop.hbase.zookeeper.MiniZooKeeperCluster.waitForServerUp(int, long)<br/>At MiniZooKeeperCluster.java:[line 428]<br/>Value localhost</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65731');">
<td>
<span class="priority-1">SECXSS1</span>
</td>
<td>Potential XSS in JSP</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65731" style="display: none;">
<a href="#XSS_JSP_PRINT">Bug type XSS_JSP_PRINT (click for details)</a>
<br/>In class org.apache.hadoop.hbase.generated.master.snapshot_jsp<br/>In method org.apache.hadoop.hbase.generated.master.snapshot_jsp._jspService(HttpServletRequest, HttpServletResponse)<br/>At snapshot_jsp.java:[line 86]<br/>Sink method javax/servlet/jsp/JspWriter.print(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Tainted source javax/servlet/http/HttpServletRequest.getParameter(Ljava/lang/String;)Ljava/lang/String;<br/>At snapshot_jsp.java:[line 60]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65810');">
<td>
<span class="priority-1">SECXSS1</span>
</td>
<td>Potential XSS in JSP</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65810" style="display: none;">
<a href="#XSS_JSP_PRINT">Bug type XSS_JSP_PRINT (click for details)</a>
<br/>In class org.apache.hadoop.hbase.generated.master.snapshot_jsp<br/>In method org.apache.hadoop.hbase.generated.master.snapshot_jsp._jspService(HttpServletRequest, HttpServletResponse)<br/>At snapshot_jsp.java:[line 124]<br/>Sink method javax/servlet/jsp/JspWriter.print(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Tainted source javax/servlet/http/HttpServletRequest.getParameter(Ljava/lang/String;)Ljava/lang/String;<br/>At snapshot_jsp.java:[line 60]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65889');">
<td>
<span class="priority-1">SECXSS1</span>
</td>
<td>Potential XSS in JSP</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65889" style="display: none;">
<a href="#XSS_JSP_PRINT">Bug type XSS_JSP_PRINT (click for details)</a>
<br/>In class org.apache.hadoop.hbase.generated.master.snapshot_jsp<br/>In method org.apache.hadoop.hbase.generated.master.snapshot_jsp._jspService(HttpServletRequest, HttpServletResponse)<br/>At snapshot_jsp.java:[line 128]<br/>Sink method javax/servlet/jsp/JspWriter.print(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Tainted source javax/servlet/http/HttpServletRequest.getParameter(Ljava/lang/String;)Ljava/lang/String;<br/>At snapshot_jsp.java:[line 60]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65968');">
<td>
<span class="priority-1">SECXSS1</span>
</td>
<td>Potential XSS in JSP</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65968" style="display: none;">
<a href="#XSS_JSP_PRINT">Bug type XSS_JSP_PRINT (click for details)</a>
<br/>In class org.apache.hadoop.hbase.generated.master.snapshot_jsp<br/>In method org.apache.hadoop.hbase.generated.master.snapshot_jsp._jspService(HttpServletRequest, HttpServletResponse)<br/>At snapshot_jsp.java:[line 174]<br/>Sink method javax/servlet/jsp/JspWriter.print(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Tainted source javax/servlet/http/HttpServletRequest.getParameter(Ljava/lang/String;)Ljava/lang/String;<br/>At snapshot_jsp.java:[line 60]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66047');">
<td>
<span class="priority-1">SECXSS1</span>
</td>
<td>Potential XSS in JSP</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66047" style="display: none;">
<a href="#XSS_JSP_PRINT">Bug type XSS_JSP_PRINT (click for details)</a>
<br/>In class org.apache.hadoop.hbase.generated.master.snapshot_jsp<br/>In method org.apache.hadoop.hbase.generated.master.snapshot_jsp._jspService(HttpServletRequest, HttpServletResponse)<br/>At snapshot_jsp.java:[line 176]<br/>Sink method javax/servlet/jsp/JspWriter.print(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Tainted source javax/servlet/http/HttpServletRequest.getParameter(Ljava/lang/String;)Ljava/lang/String;<br/>At snapshot_jsp.java:[line 60]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66126');">
<td>
<span class="priority-2">SECXSS1</span>
</td>
<td>Potential XSS in JSP</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66126" style="display: none;">
<a href="#XSS_JSP_PRINT">Bug type XSS_JSP_PRINT (click for details)</a>
<br/>In class org.apache.hadoop.hbase.generated.master.snapshot_jsp<br/>In method org.apache.hadoop.hbase.generated.master.snapshot_jsp._jspService(HttpServletRequest, HttpServletResponse)<br/>At snapshot_jsp.java:[line 82]<br/>Sink method javax/servlet/jsp/JspWriter.print(Ljava/lang/Object;)V<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/hbase/master/HMaster.serverName<br/>Unknown source org/apache/hadoop/hbase/master/HMaster.getServerName()Lorg/apache/hadoop/hbase/ServerName;<br/>At snapshot_jsp.java:[line 82]<br/>At HMaster.java:[line 2124]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66220');">
<td>
<span class="priority-2">SECXSS1</span>
</td>
<td>Potential XSS in JSP</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66220" style="display: none;">
<a href="#XSS_JSP_PRINT">Bug type XSS_JSP_PRINT (click for details)</a>
<br/>In class org.apache.hadoop.hbase.generated.master.snapshot_jsp<br/>In method org.apache.hadoop.hbase.generated.master.snapshot_jsp._jspService(HttpServletRequest, HttpServletResponse)<br/>At snapshot_jsp.java:[line 130]<br/>Sink method javax/servlet/jsp/JspWriter.print(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/hbase/TableName.getNameAsString()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66289');">
<td>
<span class="priority-2">SECXSS1</span>
</td>
<td>Potential XSS in JSP</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66289" style="display: none;">
<a href="#XSS_JSP_PRINT">Bug type XSS_JSP_PRINT (click for details)</a>
<br/>In class org.apache.hadoop.hbase.generated.master.snapshot_jsp<br/>In method org.apache.hadoop.hbase.generated.master.snapshot_jsp._jspService(HttpServletRequest, HttpServletResponse)<br/>At snapshot_jsp.java:[line 132]<br/>Sink method javax/servlet/jsp/JspWriter.print(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/hbase/TableName.getNameAsString()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66358');">
<td>
<span class="priority-2">SECXSS1</span>
</td>
<td>Potential XSS in JSP</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66358" style="display: none;">
<a href="#XSS_JSP_PRINT">Bug type XSS_JSP_PRINT (click for details)</a>
<br/>In class org.apache.hadoop.hbase.generated.master.snapshot_jsp<br/>In method org.apache.hadoop.hbase.generated.master.snapshot_jsp._jspService(HttpServletRequest, HttpServletResponse)<br/>At snapshot_jsp.java:[line 136]<br/>Sink method javax/servlet/jsp/JspWriter.print(Ljava/lang/Object;)V<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription.getType()Lorg/apache/hadoop/hbase/protobuf/generated/HBaseProtos$SnapshotDescription$Type;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66427');">
<td>
<span class="priority-2">SECXSS1</span>
</td>
<td>Potential XSS in JSP</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66427" style="display: none;">
<a href="#XSS_JSP_PRINT">Bug type XSS_JSP_PRINT (click for details)</a>
<br/>In class org.apache.hadoop.hbase.generated.master.snapshot_jsp<br/>In method org.apache.hadoop.hbase.generated.master.snapshot_jsp._jspService(HttpServletRequest, HttpServletResponse)<br/>At snapshot_jsp.java:[line 150]<br/>Sink method javax/servlet/jsp/JspWriter.print(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/util/StringUtils.humanReadableInt(J)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66496');">
<td>
<span class="priority-2">SECXSS1</span>
</td>
<td>Potential XSS in JSP</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66496" style="display: none;">
<a href="#XSS_JSP_PRINT">Bug type XSS_JSP_PRINT (click for details)</a>
<br/>In class org.apache.hadoop.hbase.generated.master.snapshot_jsp<br/>In method org.apache.hadoop.hbase.generated.master.snapshot_jsp._jspService(HttpServletRequest, HttpServletResponse)<br/>At snapshot_jsp.java:[line 154]<br/>Sink method javax/servlet/jsp/JspWriter.print(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/util/StringUtils.humanReadableInt(J)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66565');">
<td>
<span class="priority-2">SECXSS1</span>
</td>
<td>Potential XSS in JSP</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66565" style="display: none;">
<a href="#XSS_JSP_PRINT">Bug type XSS_JSP_PRINT (click for details)</a>
<br/>In class org.apache.hadoop.hbase.generated.master.snapshot_jsp<br/>In method org.apache.hadoop.hbase.generated.master.snapshot_jsp._jspService(HttpServletRequest, HttpServletResponse)<br/>At snapshot_jsp.java:[line 158]<br/>Sink method javax/servlet/jsp/JspWriter.print(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/util/StringUtils.humanReadableInt(J)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66809');">
<td>
<span class="priority-1">SECXSS1</span>
</td>
<td>Potential XSS in JSP</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66809" style="display: none;">
<a href="#XSS_JSP_PRINT">Bug type XSS_JSP_PRINT (click for details)</a>
<br/>In class org.apache.hadoop.hbase.generated.master.table_jsp<br/>In method org.apache.hadoop.hbase.generated.master.table_jsp._jspService(HttpServletRequest, HttpServletResponse)<br/>At table_jsp.java:[line 94]<br/>Sink method javax/servlet/jsp/JspWriter.print(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Tainted source javax/servlet/http/HttpServletRequest.getParameter(Ljava/lang/String;)Ljava/lang/String;<br/>At table_jsp.java:[line 71]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66888');">
<td>
<span class="priority-1">SECXSS1</span>
</td>
<td>Potential XSS in JSP</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66888" style="display: none;">
<a href="#XSS_JSP_PRINT">Bug type XSS_JSP_PRINT (click for details)</a>
<br/>In class org.apache.hadoop.hbase.generated.master.table_jsp<br/>In method org.apache.hadoop.hbase.generated.master.table_jsp._jspService(HttpServletRequest, HttpServletResponse)<br/>At table_jsp.java:[line 149]<br/>Sink method javax/servlet/jsp/JspWriter.print(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Tainted source javax/servlet/http/HttpServletRequest.getParameter(Ljava/lang/String;)Ljava/lang/String;<br/>At table_jsp.java:[line 71]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66967');">
<td>
<span class="priority-1">SECXSS1</span>
</td>
<td>Potential XSS in JSP</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66967" style="display: none;">
<a href="#XSS_JSP_PRINT">Bug type XSS_JSP_PRINT (click for details)</a>
<br/>In class org.apache.hadoop.hbase.generated.master.table_jsp<br/>In method org.apache.hadoop.hbase.generated.master.table_jsp._jspService(HttpServletRequest, HttpServletResponse)<br/>At table_jsp.java:[line 308]<br/>Sink method javax/servlet/jsp/JspWriter.print(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Tainted source javax/servlet/http/HttpServletRequest.getParameter(Ljava/lang/String;)Ljava/lang/String;<br/>At table_jsp.java:[line 71]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67046');">
<td>
<span class="priority-1">SECXSS1</span>
</td>
<td>Potential XSS in JSP</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67046" style="display: none;">
<a href="#XSS_JSP_PRINT">Bug type XSS_JSP_PRINT (click for details)</a>
<br/>In class org.apache.hadoop.hbase.generated.master.table_jsp<br/>In method org.apache.hadoop.hbase.generated.master.table_jsp._jspService(HttpServletRequest, HttpServletResponse)<br/>At table_jsp.java:[line 310]<br/>Sink method javax/servlet/jsp/JspWriter.print(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Tainted source javax/servlet/http/HttpServletRequest.getParameter(Ljava/lang/String;)Ljava/lang/String;<br/>At table_jsp.java:[line 71]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67125');">
<td>
<span class="priority-2">SECXSS1</span>
</td>
<td>Potential XSS in JSP</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67125" style="display: none;">
<a href="#XSS_JSP_PRINT">Bug type XSS_JSP_PRINT (click for details)</a>
<br/>In class org.apache.hadoop.hbase.generated.master.table_jsp<br/>In method org.apache.hadoop.hbase.generated.master.table_jsp._jspService(HttpServletRequest, HttpServletResponse)<br/>At table_jsp.java:[line 90]<br/>Sink method javax/servlet/jsp/JspWriter.print(Ljava/lang/Object;)V<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/hbase/master/HMaster.serverName<br/>Unknown source org/apache/hadoop/hbase/master/HMaster.getServerName()Lorg/apache/hadoop/hbase/ServerName;<br/>At table_jsp.java:[line 90]<br/>At HMaster.java:[line 2124]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67219');">
<td>
<span class="priority-2">SECXSS1</span>
</td>
<td>Potential XSS in JSP</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67219" style="display: none;">
<a href="#XSS_JSP_PRINT">Bug type XSS_JSP_PRINT (click for details)</a>
<br/>In class org.apache.hadoop.hbase.generated.master.table_jsp<br/>In method org.apache.hadoop.hbase.generated.master.table_jsp._jspService(HttpServletRequest, HttpServletResponse)<br/>At table_jsp.java:[line 170]<br/>Sink method javax/servlet/jsp/JspWriter.print(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/hbase/ServerName.getHostname()Ljava/lang/String;<br/>At table_jsp.java:[line 164]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67298');">
<td>
<span class="priority-2">SECXSS1</span>
</td>
<td>Potential XSS in JSP</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67298" style="display: none;">
<a href="#XSS_JSP_PRINT">Bug type XSS_JSP_PRINT (click for details)</a>
<br/>In class org.apache.hadoop.hbase.generated.master.table_jsp<br/>In method org.apache.hadoop.hbase.generated.master.table_jsp._jspService(HttpServletRequest, HttpServletResponse)<br/>At table_jsp.java:[line 173]<br/>Sink method javax/servlet/jsp/JspWriter.print(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/hbase/ServerName.getHostname()Ljava/lang/String;<br/>At table_jsp.java:[line 173]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67377');">
<td>
<span class="priority-2">SECXSS1</span>
</td>
<td>Potential XSS in JSP</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67377" style="display: none;">
<a href="#XSS_JSP_PRINT">Bug type XSS_JSP_PRINT (click for details)</a>
<br/>In class org.apache.hadoop.hbase.generated.master.table_jsp<br/>In method org.apache.hadoop.hbase.generated.master.table_jsp._jspService(HttpServletRequest, HttpServletResponse)<br/>At table_jsp.java:[line 194]<br/>Sink method javax/servlet/jsp/JspWriter.print(Ljava/lang/Object;)V<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/hbase/client/Admin.getCompactionState(Lorg/apache/hadoop/hbase/TableName;)Lorg/apache/hadoop/hbase/protobuf/generated/AdminProtos$GetRegionInfoResponse$CompactionState;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67446');">
<td>
<span class="priority-2">SECXSS1</span>
</td>
<td>Potential XSS in JSP</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67446" style="display: none;">
<a href="#XSS_JSP_PRINT">Bug type XSS_JSP_PRINT (click for details)</a>
<br/>In class org.apache.hadoop.hbase.generated.master.table_jsp<br/>In method org.apache.hadoop.hbase.generated.master.table_jsp._jspService(HttpServletRequest, HttpServletResponse)<br/>At table_jsp.java:[line 249]<br/>Sink method javax/servlet/jsp/JspWriter.print(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/hbase/ServerName.getHostname()Ljava/lang/String;<br/>At table_jsp.java:[line 246]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67525');">
<td>
<span class="priority-2">SECXSS1</span>
</td>
<td>Potential XSS in JSP</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67525" style="display: none;">
<a href="#XSS_JSP_PRINT">Bug type XSS_JSP_PRINT (click for details)</a>
<br/>In class org.apache.hadoop.hbase.generated.master.table_jsp<br/>In method org.apache.hadoop.hbase.generated.master.table_jsp._jspService(HttpServletRequest, HttpServletResponse)<br/>At table_jsp.java:[line 252]<br/>Sink method javax/servlet/jsp/JspWriter.print(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/hbase/ServerName.getHostname()Ljava/lang/String;<br/>At table_jsp.java:[line 252]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67604');">
<td>
<span class="priority-2">SECXSS1</span>
</td>
<td>Potential XSS in JSP</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67604" style="display: none;">
<a href="#XSS_JSP_PRINT">Bug type XSS_JSP_PRINT (click for details)</a>
<br/>In class org.apache.hadoop.hbase.generated.master.table_jsp<br/>In method org.apache.hadoop.hbase.generated.master.table_jsp._jspService(HttpServletRequest, HttpServletResponse)<br/>At table_jsp.java:[line 288]<br/>Sink method javax/servlet/jsp/JspWriter.print(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/hbase/ServerName.getHostname()Ljava/lang/String;<br/>At table_jsp.java:[line 285]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67683');">
<td>
<span class="priority-2">SECXSS1</span>
</td>
<td>Potential XSS in JSP</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67683" style="display: none;">
<a href="#XSS_JSP_PRINT">Bug type XSS_JSP_PRINT (click for details)</a>
<br/>In class org.apache.hadoop.hbase.generated.master.table_jsp<br/>In method org.apache.hadoop.hbase.generated.master.table_jsp._jspService(HttpServletRequest, HttpServletResponse)<br/>At table_jsp.java:[line 291]<br/>Sink method javax/servlet/jsp/JspWriter.print(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/hbase/ServerName.getHostname()Ljava/lang/String;<br/>At table_jsp.java:[line 291]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67762');">
<td>
<span class="priority-2">SECXSS1</span>
</td>
<td>Potential XSS in JSP</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67762" style="display: none;">
<a href="#XSS_JSP_PRINT">Bug type XSS_JSP_PRINT (click for details)</a>
<br/>In class org.apache.hadoop.hbase.generated.master.table_jsp<br/>In method org.apache.hadoop.hbase.generated.master.table_jsp._jspService(HttpServletRequest, HttpServletResponse)<br/>At table_jsp.java:[line 293]<br/>Sink method javax/servlet/jsp/JspWriter.print(Ljava/lang/Object;)V<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/hbase/client/HTable.getRegionLocations()Ljava/util/NavigableMap;<br/>Unknown source java/util/Map.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;<br/>Unknown source java/util/Iterator.next()Ljava/lang/Object;<br/>Unknown source java/util/Map.entrySet()Ljava/util/Set;<br/>Unknown source java/util/Map$Entry.getValue()Ljava/lang/Object;<br/>At table_jsp.java:[line 220]<br/>At table_jsp.java:[line 222]<br/>At table_jsp.java:[line 237]<br/>At table_jsp.java:[line 283]<br/>At table_jsp.java:[line 293]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68011');">
<td>
<span class="priority-2">SECXSS1</span>
</td>
<td>Potential XSS in JSP</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68011" style="display: none;">
<a href="#XSS_JSP_PRINT">Bug type XSS_JSP_PRINT (click for details)</a>
<br/>In class org.apache.hadoop.hbase.generated.master.tablesDetailed_jsp<br/>In method org.apache.hadoop.hbase.generated.master.tablesDetailed_jsp._jspService(HttpServletRequest, HttpServletResponse)<br/>At tablesDetailed_jsp.java:[line 57]<br/>Sink method javax/servlet/jsp/JspWriter.print(Ljava/lang/Object;)V<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/hbase/master/HMaster.serverName<br/>Unknown source org/apache/hadoop/hbase/master/HMaster.getServerName()Lorg/apache/hadoop/hbase/ServerName;<br/>At tablesDetailed_jsp.java:[line 57]<br/>At HMaster.java:[line 2124]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68105');">
<td>
<span class="priority-2">SECXSS1</span>
</td>
<td>Potential XSS in JSP</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68105" style="display: none;">
<a href="#XSS_JSP_PRINT">Bug type XSS_JSP_PRINT (click for details)</a>
<br/>In class org.apache.hadoop.hbase.generated.master.tablesDetailed_jsp<br/>In method org.apache.hadoop.hbase.generated.master.tablesDetailed_jsp._jspService(HttpServletRequest, HttpServletResponse)<br/>At tablesDetailed_jsp.java:[line 74]<br/>Sink method javax/servlet/jsp/JspWriter.print(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/hbase/HTableDescriptor.toString()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68174');">
<td>
<span class="priority-2">SECXSS1</span>
</td>
<td>Potential XSS in JSP</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68174" style="display: none;">
<a href="#XSS_JSP_PRINT">Bug type XSS_JSP_PRINT (click for details)</a>
<br/>In class org.apache.hadoop.hbase.generated.master.zk_jsp<br/>In method org.apache.hadoop.hbase.generated.master.zk_jsp._jspService(HttpServletRequest, HttpServletResponse)<br/>At zk_jsp.java:[line 59]<br/>Sink method javax/servlet/jsp/JspWriter.print(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/hbase/zookeeper/ZKUtil.dump(Lorg/apache/hadoop/hbase/zookeeper/ZooKeeperWatcher;)Ljava/lang/String;<br/>At zk_jsp.java:[line 59]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68342');">
<td>
<span class="priority-2">SECXSS2</span>
</td>
<td>This use of javax/servlet/http/HttpServletResponse.sendError(ILjava/lang/String;)V could be vulnerable to XSS in the Servlet</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68342" style="display: none;">
<a href="#XSS_SERVLET">Bug type XSS_SERVLET (click for details)</a>
<br/>In class org.apache.hadoop.hbase.http.conf.ConfServlet<br/>In method org.apache.hadoop.hbase.http.conf.ConfServlet.doGet(HttpServletRequest, HttpServletResponse)<br/>At ConfServlet.java:[line 80]<br/>Sink method javax/servlet/http/HttpServletResponse.sendError(ILjava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/hbase/http/conf/ConfServlet$BadFormatException.getMessage()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68253');">
<td>
<span class="priority-1">SECXSS2</span>
</td>
<td>This use of javax/servlet/http/HttpServletResponse.sendError(ILjava/lang/String;)V could be vulnerable to XSS in the Servlet</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68253" style="display: none;">
<a href="#XSS_SERVLET">Bug type XSS_SERVLET (click for details)</a>
<br/>In class org.apache.hadoop.hbase.http.HttpServer<br/>In method org.apache.hadoop.hbase.http.HttpServer.hasAdministratorAccess(ServletContext, HttpServletRequest, HttpServletResponse)<br/>At HttpServer.java:[line 1172]<br/>Sink method javax/servlet/http/HttpServletResponse.sendError(ILjava/lang/String;)V<br/>Sink parameter 0<br/>Tainted source javax/servlet/http/HttpServletRequest.getRemoteUser()Ljava/lang/String;<br/>At HttpServer.java:[line 1162]<br/>At HttpServer.java:[line 1172]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68481');">
<td>
<span class="priority-1">SECXSS2</span>
</td>
<td>This use of java/io/PrintWriter.write(Ljava/lang/String;)V could be vulnerable to XSS in the Servlet</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68481" style="display: none;">
<a href="#XSS_SERVLET">Bug type XSS_SERVLET (click for details)</a>
<br/>In class org.apache.hadoop.hbase.http.jmx.JMXJsonServlet<br/>In method org.apache.hadoop.hbase.http.jmx.JMXJsonServlet.doGet(HttpServletRequest, HttpServletResponse)<br/>At JMXJsonServlet.java:[line 163]<br/>Sink method java/io/PrintWriter.write(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Tainted source javax/servlet/http/HttpServletRequest.getParameter(Ljava/lang/String;)Ljava/lang/String;<br/>At JMXJsonServlet.java:[line 160]<br/>At JMXJsonServlet.java:[line 163]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68679');">
<td>
<span class="priority-2">SECXSS2</span>
</td>
<td>This use of java/io/PrintWriter.println(Ljava/lang/String;)V could be vulnerable to XSS in the Servlet</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68679" style="display: none;">
<a href="#XSS_SERVLET">Bug type XSS_SERVLET (click for details)</a>
<br/>In class org.apache.hadoop.hbase.http.log.LogLevel$Servlet<br/>In method org.apache.hadoop.hbase.http.log.LogLevel$Servlet.doGet(HttpServletRequest, HttpServletResponse)<br/>At LogLevel.java:[line 115]<br/>Sink method java/io/PrintWriter.println(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/util/ServletUtil.getParameter(Ljavax/servlet/ServletRequest;Ljava/lang/String;)Ljava/lang/String;<br/>At LogLevel.java:[line 115]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68758');">
<td>
<span class="priority-2">SECXSS2</span>
</td>
<td>This use of java/io/PrintWriter.println(Ljava/lang/String;)V could be vulnerable to XSS in the Servlet</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68758" style="display: none;">
<a href="#XSS_SERVLET">Bug type XSS_SERVLET (click for details)</a>
<br/>In class org.apache.hadoop.hbase.http.log.LogLevel$Servlet<br/>In method org.apache.hadoop.hbase.http.log.LogLevel$Servlet.doGet(HttpServletRequest, HttpServletResponse)<br/>At LogLevel.java:[line 122]<br/>Sink method java/io/PrintWriter.println(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/util/ServletUtil.getParameter(Ljavax/servlet/ServletRequest;Ljava/lang/String;)Ljava/lang/String;<br/>At LogLevel.java:[line 122]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68837');">
<td>
<span class="priority-2">SECXSS2</span>
</td>
<td>This use of java/io/PrintWriter.println(Ljava/lang/String;)V could be vulnerable to XSS in the Servlet</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68837" style="display: none;">
<a href="#XSS_SERVLET">Bug type XSS_SERVLET (click for details)</a>
<br/>In class org.apache.hadoop.hbase.http.log.LogLevel$Servlet<br/>In method org.apache.hadoop.hbase.http.log.LogLevel$Servlet.doGet(HttpServletRequest, HttpServletResponse)<br/>At LogLevel.java:[line 132]<br/>Sink method java/io/PrintWriter.println(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/lang/Object.getClass()Ljava/lang/Class;<br/>At LogLevel.java:[line 132]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68916');">
<td>
<span class="priority-2">SECXSS2</span>
</td>
<td>This use of java/io/PrintWriter.println(Ljava/lang/String;)V could be vulnerable to XSS in the Servlet</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68916" style="display: none;">
<a href="#XSS_SERVLET">Bug type XSS_SERVLET (click for details)</a>
<br/>In class org.apache.hadoop.hbase.http.log.LogLevel$Servlet<br/>In method org.apache.hadoop.hbase.http.log.LogLevel$Servlet.doGet(HttpServletRequest, HttpServletResponse)<br/>At LogLevel.java:[line 137]<br/>Sink method java/io/PrintWriter.println(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/util/ServletUtil.HTML_TAIL<br/>At LogLevel.java:[line 137]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68995');">
<td>
<span class="priority-2">SECXSS2</span>
</td>
<td>This use of java/io/PrintWriter.println(Ljava/lang/String;)V could be vulnerable to XSS in the Servlet</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68995" style="display: none;">
<a href="#XSS_SERVLET">Bug type XSS_SERVLET (click for details)</a>
<br/>In class org.apache.hadoop.hbase.http.log.LogLevel$Servlet<br/>In method org.apache.hadoop.hbase.http.log.LogLevel$Servlet.process(Logger, String, PrintWriter)<br/>At LogLevel.java:[line 167]<br/>Sink method java/io/PrintWriter.println(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/hbase/http/log/LogLevel$Servlet.process(Ljava/util/logging/Logger;Ljava/lang/String;Ljava/io/PrintWriter;)V parameter 1<br/>At LogLevel.java:[line 122]<br/>At LogLevel.java:[line 129]<br/>At LogLevel.java:[line 167]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69094');">
<td>
<span class="priority-2">SECXSS2</span>
</td>
<td>This use of java/io/PrintWriter.println(Ljava/lang/String;)V could be vulnerable to XSS in the Servlet</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69094" style="display: none;">
<a href="#XSS_SERVLET">Bug type XSS_SERVLET (click for details)</a>
<br/>In class org.apache.hadoop.hbase.http.log.LogLevel$Servlet<br/>In method org.apache.hadoop.hbase.http.log.LogLevel$Servlet.process(Logger, String, PrintWriter)<br/>At LogLevel.java:[line 172]<br/>Sink method java/io/PrintWriter.println(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/util/logging/Logger.getLevel()Ljava/util/logging/Level;<br/>At LogLevel.java:[line 172]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69173');">
<td>
<span class="priority-2">SECXSS2</span>
</td>
<td>This use of java/io/PrintWriter.println(Ljava/lang/String;)V could be vulnerable to XSS in the Servlet</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69173" style="display: none;">
<a href="#XSS_SERVLET">Bug type XSS_SERVLET (click for details)</a>
<br/>In class org.apache.hadoop.hbase.http.log.LogLevel$Servlet<br/>In method org.apache.hadoop.hbase.http.log.LogLevel$Servlet.process(Logger, String, PrintWriter)<br/>At LogLevel.java:[line 153]<br/>Sink method java/io/PrintWriter.println(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/hbase/http/log/LogLevel$Servlet.process(Lorg/apache/log4j/Logger;Ljava/lang/String;Ljava/io/PrintWriter;)V parameter 1<br/>At LogLevel.java:[line 122]<br/>At LogLevel.java:[line 126]<br/>At LogLevel.java:[line 153]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69272');">
<td>
<span class="priority-2">SECXSS2</span>
</td>
<td>This use of java/io/PrintWriter.println(Ljava/lang/String;)V could be vulnerable to XSS in the Servlet</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69272" style="display: none;">
<a href="#XSS_SERVLET">Bug type XSS_SERVLET (click for details)</a>
<br/>In class org.apache.hadoop.hbase.http.log.LogLevel$Servlet<br/>In method org.apache.hadoop.hbase.http.log.LogLevel$Servlet.process(Logger, String, PrintWriter)<br/>At LogLevel.java:[line 156]<br/>Sink method java/io/PrintWriter.println(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/hbase/http/log/LogLevel$Servlet.process(Lorg/apache/log4j/Logger;Ljava/lang/String;Ljava/io/PrintWriter;)V parameter 1<br/>At LogLevel.java:[line 122]<br/>At LogLevel.java:[line 126]<br/>At LogLevel.java:[line 156]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69371');">
<td>
<span class="priority-2">SECXSS2</span>
</td>
<td>This use of java/io/PrintWriter.println(Ljava/lang/String;)V could be vulnerable to XSS in the Servlet</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69371" style="display: none;">
<a href="#XSS_SERVLET">Bug type XSS_SERVLET (click for details)</a>
<br/>In class org.apache.hadoop.hbase.http.log.LogLevel$Servlet<br/>In method org.apache.hadoop.hbase.http.log.LogLevel$Servlet.process(Logger, String, PrintWriter)<br/>At LogLevel.java:[line 159]<br/>Sink method java/io/PrintWriter.println(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/log4j/Logger.getEffectiveLevel()Lorg/apache/log4j/Level;<br/>At LogLevel.java:[line 159]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70756');">
<td>
<span class="priority-2">SECXSS2</span>
</td>
<td>This use of java/io/PrintWriter.println(Ljava/lang/String;)V could be vulnerable to XSS in the Servlet</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70756" style="display: none;">
<a href="#XSS_SERVLET">Bug type XSS_SERVLET (click for details)</a>
<br/>In class org.apache.hadoop.hbase.master.MasterDumpServlet<br/>In method org.apache.hadoop.hbase.master.MasterDumpServlet.doGet(HttpServletRequest, HttpServletResponse)<br/>At MasterDumpServlet.java:[line 57]<br/>Sink method java/io/PrintWriter.println(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/hbase/master/HMaster.serverName<br/>Unknown source org/apache/hadoop/hbase/master/HMaster.getServerName()Lorg/apache/hadoop/hbase/ServerName;<br/>At HMaster.java:[line 2124]<br/>At MasterDumpServlet.java:[line 57]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70850');">
<td>
<span class="priority-2">SECXSS2</span>
</td>
<td>This use of java/io/PrintWriter.println(Ljava/lang/String;)V could be vulnerable to XSS in the Servlet</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70850" style="display: none;">
<a href="#XSS_SERVLET">Bug type XSS_SERVLET (click for details)</a>
<br/>In class org.apache.hadoop.hbase.master.MasterDumpServlet<br/>In method org.apache.hadoop.hbase.master.MasterDumpServlet.dumpRIT(HMaster, PrintWriter)<br/>At MasterDumpServlet.java:[line 123]<br/>Sink method java/io/PrintWriter.println(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/hbase/master/RegionState.toDescriptiveString()Ljava/lang/String;<br/>Unknown source java/util/Iterator.next()Ljava/lang/Object;<br/>Unknown source org/apache/hadoop/hbase/master/RegionStates.getRegionsInTransition()Ljava/util/Map;<br/>Unknown source java/util/Map.entrySet()Ljava/util/Set;<br/>Unknown source org/apache/hadoop/hbase/master/RegionStates.regionsInTransition<br/>Unknown source java/util/Map$Entry.getKey()Ljava/lang/Object;<br/>At MasterDumpServlet.java:[line 118]<br/>At MasterDumpServlet.java:[line 120]<br/>At MasterDumpServlet.java:[line 121]<br/>At MasterDumpServlet.java:[line 123]<br/>At RegionStates.java:[line 214]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70994');">
<td>
<span class="priority-2">SECXSS2</span>
</td>
<td>This use of java/io/PrintWriter.println(Ljava/lang/String;)V could be vulnerable to XSS in the Servlet</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70994" style="display: none;">
<a href="#XSS_SERVLET">Bug type XSS_SERVLET (click for details)</a>
<br/>In class org.apache.hadoop.hbase.master.MasterDumpServlet<br/>In method org.apache.hadoop.hbase.master.MasterDumpServlet.dumpServers(HMaster, PrintWriter)<br/>At MasterDumpServlet.java:[line 136]<br/>Sink method java/io/PrintWriter.println(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/hbase/master/ServerManager.onlineServers<br/>Unknown source java/util/Iterator.next()Ljava/lang/Object;<br/>Unknown source org/apache/hadoop/hbase/master/ServerManager.getOnlineServers()Ljava/util/Map;<br/>Unknown source java/util/Map.entrySet()Ljava/util/Set;<br/>Unknown source java/util/Map$Entry.getKey()Ljava/lang/Object;<br/>Unknown source java/util/Collections.unmodifiableMap(Ljava/util/Map;)Ljava/util/Map;<br/>Unknown source java/util/Map$Entry.getValue()Ljava/lang/Object;<br/>At MasterDumpServlet.java:[line 134]<br/>At MasterDumpServlet.java:[line 135]<br/>At MasterDumpServlet.java:[line 136]<br/>At ServerManager.java:[line 504]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71720');">
<td>
<span class="priority-2">SECXSS2</span>
</td>
<td>This use of java/io/PrintWriter.println(Ljava/lang/String;)V could be vulnerable to XSS in the Servlet</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71720" style="display: none;">
<a href="#XSS_SERVLET">Bug type XSS_SERVLET (click for details)</a>
<br/>In class org.apache.hadoop.hbase.regionserver.RSDumpServlet<br/>In method org.apache.hadoop.hbase.regionserver.RSDumpServlet.doGet(HttpServletRequest, HttpServletResponse)<br/>At RSDumpServlet.java:[line 61]<br/>Sink method java/io/PrintWriter.println(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/hadoop/hbase/regionserver/HRegionServer.getServerName()Lorg/apache/hadoop/hbase/ServerName;<br/>Unknown source org/apache/hadoop/hbase/regionserver/HRegionServer.serverName<br/>At HRegionServer.java:[line 2518]<br/>At RSDumpServlet.java:[line 61]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71814');">
<td>
<span class="priority-2">SECXSS2</span>
</td>
<td>This use of java/io/PrintWriter.println(Ljava/lang/String;)V could be vulnerable to XSS in the Servlet</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71814" style="display: none;">
<a href="#XSS_SERVLET">Bug type XSS_SERVLET (click for details)</a>
<br/>In class org.apache.hadoop.hbase.regionserver.RSDumpServlet<br/>In method org.apache.hadoop.hbase.regionserver.RSDumpServlet.dumpQueue(HRegionServer, PrintWriter)<br/>At RSDumpServlet.java:[line 109]<br/>Sink method java/io/PrintWriter.println(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/util/concurrent/ThreadPoolExecutor.getQueue()Ljava/util/concurrent/BlockingQueue;<br/>Unknown source java/util/Iterator.next()Ljava/lang/Object;<br/>Unknown source java/lang/Object.toString()Ljava/lang/String;<br/>Unknown source java/lang/StringBuffer.toString()Ljava/lang/String;<br/>Unknown source java/util/concurrent/BlockingQueue.iterator()Ljava/util/Iterator;<br/>Unknown source org/apache/hadoop/hbase/regionserver/CompactSplitThread.dumpQueue()Ljava/lang/String;<br/>At CompactSplitThread.java:[line 183]<br/>At CompactSplitThread.java:[line 185]<br/>At CompactSplitThread.java:[line 186]<br/>At CompactSplitThread.java:[line 190]<br/>At CompactSplitThread.java:[line 191]<br/>At CompactSplitThread.java:[line 193]<br/>At CompactSplitThread.java:[line 195]<br/>At CompactSplitThread.java:[line 196]<br/>At CompactSplitThread.java:[line 200]<br/>At CompactSplitThread.java:[line 201]<br/>At CompactSplitThread.java:[line 203]<br/>At CompactSplitThread.java:[line 205]<br/>At CompactSplitThread.java:[line 206]<br/>At CompactSplitThread.java:[line 209]<br/>At CompactSplitThread.java:[line 210]<br/>At CompactSplitThread.java:[line 212]<br/>At CompactSplitThread.java:[line 214]<br/>At CompactSplitThread.java:[line 215]<br/>At CompactSplitThread.java:[line 218]<br/>At RSDumpServlet.java:[line 109]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N72108');">
<td>
<span class="priority-2">SECXSS2</span>
</td>
<td>This use of java/io/PrintWriter.println(Ljava/lang/String;)V could be vulnerable to XSS in the Servlet</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N72108" style="display: none;">
<a href="#XSS_SERVLET">Bug type XSS_SERVLET (click for details)</a>
<br/>In class org.apache.hadoop.hbase.regionserver.RSDumpServlet<br/>In method org.apache.hadoop.hbase.regionserver.RSDumpServlet.dumpQueue(HRegionServer, PrintWriter)<br/>At RSDumpServlet.java:[line 116]<br/>Sink method java/io/PrintWriter.println(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/util/Iterator.next()Ljava/lang/Object;<br/>Unknown source java/lang/Object.toString()Ljava/lang/String;<br/>Unknown source java/util/concurrent/BlockingQueue.iterator()Ljava/util/Iterator;<br/>Unknown source org/apache/hadoop/hbase/regionserver/MemStoreFlusher.dumpQueue()Ljava/lang/String;<br/>Unknown source org/apache/hadoop/hbase/regionserver/MemStoreFlusher.flushQueue<br/>At MemStoreFlusher.java:[line 641]<br/>At MemStoreFlusher.java:[line 644]<br/>At MemStoreFlusher.java:[line 645]<br/>At MemStoreFlusher.java:[line 648]<br/>At RSDumpServlet.java:[line 116]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66634');">
<td>
<span class="priority-1">XSS</span>
</td>
<td>HTTP parameter directly written to JSP output, giving reflected XSS vulnerability in org.apache.hadoop.hbase.generated.master.snapshot_jsp</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66634" style="display: none;">
<a href="#XSS_REQUEST_PARAMETER_TO_JSP_WRITER">Bug type XSS_REQUEST_PARAMETER_TO_JSP_WRITER (click for details)</a>
<br/>In class org.apache.hadoop.hbase.generated.master.snapshot_jsp<br/>In method org.apache.hadoop.hbase.generated.master.snapshot_jsp._jspService(HttpServletRequest, HttpServletResponse)<br/>Parameter "name"<br/>Value generated at snapshot_jsp.java:[line 60]<br/>Local variable named snapshotName<br/>At snapshot_jsp.java:[line 86]<br/>Another occurrence at snapshot_jsp.java:[line 124]<br/>Another occurrence at snapshot_jsp.java:[line 128]<br/>Another occurrence at snapshot_jsp.java:[line 174]<br/>Another occurrence at snapshot_jsp.java:[line 176]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67901');">
<td>
<span class="priority-1">XSS</span>
</td>
<td>HTTP parameter directly written to JSP output, giving reflected XSS vulnerability in org.apache.hadoop.hbase.generated.master.table_jsp</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67901" style="display: none;">
<a href="#XSS_REQUEST_PARAMETER_TO_JSP_WRITER">Bug type XSS_REQUEST_PARAMETER_TO_JSP_WRITER (click for details)</a>
<br/>In class org.apache.hadoop.hbase.generated.master.table_jsp<br/>In method org.apache.hadoop.hbase.generated.master.table_jsp._jspService(HttpServletRequest, HttpServletResponse)<br/>Parameter "name"<br/>Value generated at table_jsp.java:[line 71]<br/>Local variable named fqtn<br/>At table_jsp.java:[line 94]<br/>Another occurrence at table_jsp.java:[line 149]<br/>Another occurrence at table_jsp.java:[line 308]<br/>Another occurrence at table_jsp.java:[line 310]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68411');">
<td>
<span class="priority-2">XSS</span>
</td>
<td>HTTP parameter written to Servlet output in org.apache.hadoop.hbase.http.jmx.JMXJsonServlet.doGet(HttpServletRequest, HttpServletResponse)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68411" style="display: none;">
<a href="#XSS_REQUEST_PARAMETER_TO_SERVLET_WRITER">Bug type XSS_REQUEST_PARAMETER_TO_SERVLET_WRITER (click for details)</a>
<br/>In class org.apache.hadoop.hbase.http.jmx.JMXJsonServlet<br/>In method org.apache.hadoop.hbase.http.jmx.JMXJsonServlet.doGet(HttpServletRequest, HttpServletResponse)<br/>Parameter "callback"<br/>Value generated at JMXJsonServlet.java:[line 160]<br/>At JMXJsonServlet.java:[line 163]</p>
</td>
</tr>
</table>
<h1>
<a name="Details">Details</a>
</h1>
<h2>
<a name="INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE: Information Exposure Through An Error Message</a>
</h2>
            
<p>
The sensitive information may be valuable information on its own (such as a password), or it may be useful for launching other, more deadly attacks. If an attack fails, an attacker may use error information provided by the server to launch another more focused attack. For example, an attempt to exploit a path traversal weakness (CWE-22) might yield the full pathname of the installed application. In turn, this could be used to select the proper number of ".." sequences to navigate to the targeted file. An attack using SQL injection (CWE-89) might not initially succeed, but an error message could reveal the malformed query, which would expose query logic and possibly even passwords or other sensitive information used within the query.
</p>
<p>
    <b>Vulnerable Code:</b><br/>
<pre>try {
  out = httpResponse.getOutputStream()
} catch (Exception e) {
  e.printStackTrace(out);
}</pre>
</p>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/209.html">CWE-209: Information Exposure Through an Error Message</a><br/>
<a href="https://cwe.mitre.org/data/definitions/211.html">CWE-211: Information Exposure Through Externally-Generated Error Message</a><br/>
</p>
            
        
<h2>
<a name="CRLF_INJECTION_LOGS">CRLF_INJECTION_LOGS: Potential CRLF Injection for logs</a>
</h2>
            
<p>
    When data from an untrusted source is put into a logger and not neutralized correctly,
    an attacker could forge log entries or include malicious content.
    Inserted false entries could be used to skew statistics, distract the administrator
    or even to implicate another party in the commission of a malicious act.
    If the log file is processed automatically, the attacker can render the file unusable
    by corrupting the format of the file or injecting unexpected characters.
    An attacker may also inject code or other commands into the log file and take advantage
    of a vulnerability in the log processing utility (e.g. command injection or XSS).
</p>
<br/>
<p>
<b>Code at risk:</b><br/>
<pre>String val = request.getParameter("user");
String metadata = request.getParameter("metadata");
[...]
if(authenticated) {
    log.info("User " + val + " (" + metadata + ") was authenticated successfully");
}
else {
    log.info("User " + val + " (" + metadata + ") was not authenticated");
}
</pre>

A malicious user could send the metadata parameter with the value: <code>"Firefox) was authenticated successfully\r\n[INFO] User bbb (Internet Explorer"</code>.
</p>

<b>Solution:</b><br/>
<p>
You can manually sanitize each parameter.
<pre>
log.info("User " + val.replaceAll("[\r\n]","") + " (" + userAgent.replaceAll("[\r\n]","") + ") was not authenticated");
</pre>
</p>

<p>
You can also configure your logger service to replace new line for all message events. Here is sample configuration for LogBack <a href="https://logback.qos.ch/manual/layouts.html#replace">using the <code>replace</code> function</a>.
<pre>
&lt;pattern&gt;%-5level - %replace(%msg){'[\r\n]', ''}%n&lt;/pattern&gt;
</pre>
</p>

<p>
Finally, you can use a logger implementation that replace new line by spaces.
The project <a href="https://github.com/javabeanz/owasp-security-logging">OWASP Security Logging</a> has an implementation for Logback and Log4j.
</p>

<br/>
<p>
    <b>References</b><br/>
    <a href="https://cwe.mitre.org/data/definitions/117.html">CWE-117: Improper Output Neutralization for Logs</a><br/>
    <a href="https://cwe.mitre.org/data/definitions/93.html">CWE-93: Improper Neutralization of CRLF Sequences ('CRLF Injection')</a><br/>
    <a href="https://logback.qos.ch/manual/layouts.html#replace">CWE-93: Improper Neutralization of CRLF Sequences ('CRLF Injection')</a><br/>
    <a href="https://github.com/javabeanz/owasp-security-logging">OWASP Security Logging</a><br/>
</p>


        
<h2>
<a name="HARD_CODE_PASSWORD">HARD_CODE_PASSWORD: Hard coded password</a>
</h2>
            
<p>
Passwords should not be kept in the source code. The source code can be widely shared in an enterprise environment, and is
certainly shared in open source. To be managed safely, passwords and secret keys should be stored in separate configuration files or keystores.
(Hard coded keys are reported separately by <i>Hard Coded Key</i> pattern)
</p>
<p>
<p><b>Vulnerable Code:</b><br/>

<pre>private String SECRET_PASSWORD = "letMeIn!";

Properties props = new Properties();
props.put(Context.SECURITY_CREDENTIALS, "p@ssw0rd");</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/259.html">CWE-259: Use of Hard-coded Password</a>
</p>

        
<h2>
<a name="OBJECT_DESERIALIZATION">OBJECT_DESERIALIZATION: Object deserialization is used in {1}</a>
</h2>
            
<p>
    Object deserialization of untrusted data can lead to remote code execution, if there is a class in classpath that allows
    the trigger of malicious operation.
</p>
<p>
    Libraries developers tend to fix class that provided potential malicious trigger. There are still classes that are
    known to trigger Denial of Service<sup>[1]</sup>.
</p>
<p>
    Deserialization is a sensible operation that has a great history of vulnerabilities. The web application might
    become vulnerable as soon as a new vulnerability is found in the Java Virtual Machine<sup>[2] [3]</sup>.
</p>

<p>
<b>Code at risk:</b><br/>
<pre>
public UserData deserializeObject(InputStream receivedFile) throws IOException, ClassNotFoundException {

    try (ObjectInputStream in = new ObjectInputStream(receivedFile)) {
        return (UserData) in.readObject();
    }
}
</pre>
</p>

<p>
<b>Solutions:</b><br/>
<p>
Avoid deserializing object provided by remote users.
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/502.html">CWE-502: Deserialization of Untrusted Data</a><br/>
<a href="https://www.owasp.org/index.php/Deserialization_of_untrusted_data">Deserialization of untrusted data</a><br/>
<a href="https://www.oracle.com/technetwork/java/seccodeguide-139067.html#8">Serialization and Deserialization </a><br/>
<a href="https://github.com/frohoff/ysoserial">A tool for generating payloads that exploit unsafe Java object deserialization</a><br/>
[1] <a href="https://gist.github.com/coekie/a27cc406fc9f3dc7a70d">Example of Denial of Service using the class <code>java.util.HashSet</code></a><br/>
[2] <a href="https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2015-2590">OpenJDK: Deserialization issue in ObjectInputStream.readSerialData() (CVE-2015-2590)</a><br/>
[3] <a href="https://www.rapid7.com/db/modules/exploit/multi/browser/java_calendar_deserialize">Rapid7: Sun Java Calendar Deserialization Privilege Escalation (CVE-2008-5353)</a>
</p>

        
<h2>
<a name="PREDICTABLE_RANDOM">PREDICTABLE_RANDOM: Predictable pseudorandom number generator</a>
</h2>
            
<p>The use of a predictable random value can lead to vulnerabilities when used in certain security critical contexts. For example, when the value is used as:</p>
<ul>
<li>a CSRF token: a predictable token can lead to a CSRF attack as an attacker will know the value of the token</li>
<li>a password reset token (sent by email): a predictable password token can lead to an account takeover, since an attacker will guess the URL of the "change password" form</li>
<li>any other secret value</li>
</ul>
<p>
A quick fix could be to replace the use of <code>java.util.Random</code> with something stronger, such as <code>java.security.SecureRandom</code>.
</p>
<p>
<b>Vulnerable Code:</b><br/>
<pre>String generateSecretToken() {
    Random r = new Random();
    return Long.toHexString(r.nextLong());
}</pre>
</p>
<p>
<b>Solution:</b>
<pre>import org.apache.commons.codec.binary.Hex;

String generateSecretToken() {
    SecureRandom secRandom = new SecureRandom();

    byte[] result = new byte[32];
    secRandom.nextBytes(result);
    return Hex.encodeHexString(result);
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://jazzy.id.au/2010/09/20/cracking_random_number_generators_part_1.html">Cracking Random Number Generators - Part 1 (https://jazzy.id.au)</a><br/>
<a href="https://www.securecoding.cert.org/confluence/display/java/MSC02-J.+Generate+strong+random+numbers">CERT: MSC02-J. Generate strong random numbers</a><br/>
<a href="https://cwe.mitre.org/data/definitions/330.html">CWE-330: Use of Insufficiently Random Values</a><br/>
<a href="https://blog.h3xstream.com/2014/12/predicting-struts-csrf-token-cve-2014.html">Predicting Struts CSRF Token (Example of real-life vulnerability and exploitation)</a>
</p>

        
<h2>
<a name="PATH_TRAVERSAL_IN">PATH_TRAVERSAL_IN: Potential Path Traversal (file read)</a>
</h2>
            
<p>A file is opened to read its content. The filename comes from an <b>input</b> parameter.
If an unfiltered parameter is passed to this file API, files from an arbitrary filesystem location could be read.</p>
<p>This rule identifies <b>potential</b> path traversal vulnerabilities. In many cases, the constructed file path cannot be controlled
by the user. If that is the case, the reported instance is a false positive.</p>
<br/>

<p>
    <b>Vulnerable Code:</b><br/>
<pre>@GET
@Path("/images/{image}")
@Produces("images/*")
public Response getImage(@javax.ws.rs.PathParam("image") String image) {
    File file = new File("resources/images/", image); //Weak point

    if (!file.exists()) {
        return Response.status(Status.NOT_FOUND).build();
    }

    return Response.ok().entity(new FileInputStream(file)).build();
}</pre>
</p>
<br/>

<p>
    <b>Solution:</b><br/>
<pre>import org.apache.commons.io.FilenameUtils;

@GET
@Path("/images/{image}")
@Produces("images/*")
public Response getImage(@javax.ws.rs.PathParam("image") String image) {
    File file = new File("resources/images/", FilenameUtils.getName(image)); //Fix

    if (!file.exists()) {
        return Response.status(Status.NOT_FOUND).build();
    }

    return Response.ok().entity(new FileInputStream(file)).build();
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="http://projects.webappsec.org/w/page/13246952/Path%20Traversal">WASC: Path Traversal</a><br/>
<a href="https://www.owasp.org/index.php/Path_Traversal">OWASP: Path Traversal</a><br/>
<a href="https://capec.mitre.org/data/definitions/126.html">CAPEC-126: Path Traversal</a><br/>
<a href="https://cwe.mitre.org/data/definitions/22.html">CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')</a>
</p>

        
<h2>
<a name="PATH_TRAVERSAL_OUT">PATH_TRAVERSAL_OUT: Potential Path Traversal (file write)</a>
</h2>
            
<p>A file is opened to write to its contents. The filename comes from an <b>input</b> parameter.
If an unfiltered parameter is passed to this file API, files at an arbitrary filesystem location could be modified.</p>
<p>This rule identifies <b>potential</b> path traversal vulnerabilities. In many cases, the constructed file path cannot be controlled
by the user. If that is the case, the reported instance is a false positive.</p>
<br/>
<p>
<b>References</b><br/>
<a href="http://projects.webappsec.org/w/page/13246952/Path%20Traversal">WASC-33: Path Traversal</a><br/>
<a href="https://www.owasp.org/index.php/Path_Traversal">OWASP: Path Traversal</a><br/>
<a href="https://capec.mitre.org/data/definitions/126.html">CAPEC-126: Path Traversal</a><br/>
<a href="https://cwe.mitre.org/data/definitions/22.html">CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')</a>
</p>

        
<h2>
<a name="REDOS">REDOS: Regex DOS (ReDOS)</a>
</h2>
            
<p>
    Regular expressions (Regex) are frequently subject to Denial of Service (DOS) attacks (called ReDOS). This is due to the fact that regex engines
    may take a large amount of time when analyzing certain strings, depending on how the regex is defined.
<p>
    For example, for the regex: <code>^(a+)+$</code>, the input "<code>aaaaaaaaaaaaaaaaX</code>" will cause the regex engine to analyze 65536
different paths.<sup>[1] Example taken from OWASP references</sup></p>
<p>
Therefore, it is possible that a single request may cause a large amount of computation on the server side.
The problem with this regex, and others like it, is that there are two different ways the same input character can be accepted by the
Regex due to the <code>+</code> (or a <code>*</code>) inside the parenthesis, and the <code>+</code> (or a <code>*</code>) outside the parenthesis. The way this is written, either <code>+</code> could
consume the character 'a'. To fix this, the regex should be rewritten to eliminate the ambiguity. For example, this could simply be
rewritten as: <code>^a+$</code>, which is presumably what the author meant anyway (any number of a's). Assuming that's what the original
regex meant, this new regex can be evaluated quickly, and is not subject to ReDOS.
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://sebastiankuebeck.wordpress.com/2011/03/01/detecting-and-preventing-redos-vulnerabilities/">Sebastian Kubeck's Weblog: Detecting and Preventing ReDoS Vulnerabilities</a><br/>
<sup>[1]</sup> <a href="https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS">OWASP: Regular expression Denial of Service</a><br/>
<a href="https://cwe.mitre.org/data/definitions/400.html">CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion')</a>
</p>

        
<h2>
<a name="URLCONNECTION_SSRF_FD">URLCONNECTION_SSRF_FD: URLConnection Server-Side Request Forgery (SSRF) and File Disclosure</a>
</h2>
            
<p>
    Server-Side Request Forgery occur when a web server executes a request to a user supplied destination
    parameter that is not validated. Such vulnerabilities could allow an attacker to access internal services
    or to launch attacks from your web server.
</p>
<p>
    URLConnection can be used with file:// protocol or other protocols to access local filesystem and potentially other services.
<p>
    <b>Vulnerable Code:</b>
<pre>
new URL(String url).openConnection()
</pre>

<pre>
new URL(String url).openStream()
</pre>

<pre>
new URL(String url).getContent()
</pre>
</p>
<p>
    <b>Solution/Countermeasures:</b><br/>
    <ul>
        <li>Don't accept URL destinations from users</li>
        <li>Accept a destination key, and use it to look up the target destination associate with the key</li>
        <li>White list URLs (if possible)</li>
        <li>Validate that the beginning of the URL is part of a white list</li>
    </ul>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a><br/>
<a href="https://www.bishopfox.com/blog/2015/04/vulnerable-by-design-understanding-server-side-request-forgery/">Understanding Server-Side Request Forgery</a><br/>
<a href="https://cwe.mitre.org/data/definitions/73.html">CWE-73: External Control of File Name or Path</a><br/>
<a href="https://www.pwntester.com/blog/2013/11/28/abusing-jar-downloads/">Abusing jar:// downloads</a><br />
</p>
            
<h2>
<a name="UNVALIDATED_REDIRECT">UNVALIDATED_REDIRECT: Unvalidated Redirect</a>
</h2>
            
<p>
    Unvalidated redirects occur when an application redirects a user to a destination URL specified by a user supplied
    parameter that is not validated. Such vulnerabilities can be used to facilitate phishing attacks.
</p>
<p>
    <b>Scenario</b><br/>
    1. A user is tricked into visiting the malicious URL: <code>http://website.com/login?redirect=http://evil.vvebsite.com/fake/login</code><br/>
    2. The user is redirected to a fake login page that looks like a site they trust. (<code>http://evil.vvebsite.com/fake/login</code>)<br/>
    3. The user enters his credentials.<br/>
    4. The evil site steals the user's credentials and redirects him to the original website.<br/>
    <br/>
    This attack is plausible because most users don't double check the URL after the redirection. Also, redirection to
    an authentication page is very common.
</p>
<p>
    <b>Vulnerable Code:</b></br/>
    <pre>protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
    [...]
    resp.sendRedirect(req.getParameter("redirectUrl"));
    [...]
}</pre>
</p>
<p>
    <b>Solution/Countermeasures:</b><br/>
    <ul>
        <li>Don't accept redirection destinations from users</li>
        <li>Accept a destination key, and use it to look up the target (legal) destination</li>
        <li>Accept only relative paths</li>
        <li>White list URLs (if possible)</li>
        <li>Validate that the beginning of the URL is part of a white list</li>
    </ul>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="http://projects.webappsec.org/w/page/13246981/URL%20Redirector%20Abuse">WASC-38: URL Redirector Abuse</a><br/>
<a href="https://www.owasp.org/index.php/Top_10_2013-A10-Unvalidated_Redirects_and_Forwards">OWASP: Top 10 2013-A10: Unvalidated Redirects and Forwards</a><br/>
<a href="https://www.owasp.org/index.php/Unvalidated_Redirects_and_Forwards_Cheat_Sheet">OWASP: Unvalidated Redirects and Forwards Cheat Sheet</a><br/>
<a href="https://cwe.mitre.org/data/definitions/601.html">CWE-601: URL Redirection to Untrusted Site ('Open Redirect')</a>
</p>
            
        
<h2>
<a name="UNENCRYPTED_SOCKET">UNENCRYPTED_SOCKET: Unencrypted Socket</a>
</h2>
            
<p>
The communication channel used is not encrypted. The traffic could be read by an attacker intercepting the network traffic.
</p>
<p>
<b>Vulnerable Code:</b><br/>
Plain socket (Cleartext communication):
<pre>Socket soc = new Socket("www.google.com",80);</pre>
</p>
<p>
<b>Solution:</b><br/>
SSL Socket (Secure communication):
<pre>Socket soc = SSLSocketFactory.getDefault().createSocket("www.google.com", 443);</pre>
</p>
<p>Beyond using an SSL socket, you need to make sure your use of SSLSocketFactory does all the appropriate certificate validation checks to
make sure you are not subject to man-in-the-middle attacks. Please read the OWASP Transport Layer Protection Cheat Sheet for details on how
to do this correctly.
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://www.owasp.org/index.php/Top_10_2010-A9">OWASP: Top 10 2010-A9-Insufficient Transport Layer Protection</a><br/>
<a href="https://www.owasp.org/index.php/Top_10_2013-A6-Sensitive_Data_Exposure">OWASP: Top 10 2013-A6-Sensitive Data Exposure</a><br/>
<a href="https://www.owasp.org/index.php/Transport_Layer_Protection_Cheat_Sheet">OWASP: Transport Layer Protection Cheat Sheet</a><br/>
<a href="http://projects.webappsec.org/w/page/13246945/Insufficient%20Transport%20Layer%20Protection">WASC-04: Insufficient Transport Layer Protection</a><br/>
<a href="https://cwe.mitre.org/data/definitions/319.html">CWE-319: Cleartext Transmission of Sensitive Information</a>
</p>

        
<h2>
<a name="XSS_JSP_PRINT">XSS_JSP_PRINT: Potential XSS in JSP</a>
</h2>
            
<p>A potential XSS was found. It could be used to execute unwanted JavaScript in a client's browser. (See references)
</p>
<p>
    <b>Vulnerable Code:</b>
    <pre><%
String taintedInput = (String) request.getAttribute("input");
%>
[...]
&lt;%= taintedInput %&gt;</pre>
</p>
<p>
    <b>Solution:</b>
    <pre>
&lt;%
String taintedInput = (String) request.getAttribute("input");
%&gt;
[...]
&lt;%= Encode.forHtml(taintedInput) %&gt;
    </pre>
</p>
<p>
The best defense against XSS is context sensitive output encoding like the example above. There are typically 4 contexts to consider:
HTML, JavaScript, CSS (styles), and URLs. Please follow the XSS protection rules defined in the OWASP XSS Prevention Cheat Sheet,
which explains these defenses in significant detail.
</p>
<br/>
<p>
<b>References</b><br/>
<a href="http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting">WASC-8: Cross Site Scripting</a><br/>
<a href="https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet">OWASP: XSS Prevention Cheat Sheet</a><br/>
<a href="https://www.owasp.org/index.php/Top_10_2013-A3-Cross-Site_Scripting_%28XSS%29">OWASP: Top 10 2013-A3: Cross-Site Scripting (XSS)</a><br/>
<a href="https://cwe.mitre.org/data/definitions/79.html">CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')</a><br/>
<a href="https://code.google.com/p/owasp-java-encoder/">OWASP Java Encoder</a><br/>
</p>
            
        
<h2>
<a name="XSS_SERVLET">XSS_SERVLET: Potential XSS in Servlet</a>
</h2>
            
<p>
A potential XSS was found. It could be used to execute unwanted JavaScript in a client's browser. (See references)
</p>
<p>
    <b>Vulnerable Code:</b>
<pre>protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
    String input1 = req.getParameter("input1");
    [...]
    resp.getWriter().write(input1);
}</pre>
</p>
<p>
    <b>Solution:</b>
<pre>protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
    String input1 = req.getParameter("input1");
    [...]
    resp.getWriter().write(Encode.forHtml(input1));
}</pre>
</p>
<p>
The best defense against XSS is context sensitive output encoding like the example above. There are typically 4 contexts to consider:
HTML, JavaScript, CSS (styles), and URLs. Please follow the XSS protection rules defined in the OWASP XSS Prevention Cheat Sheet,
which explains these defenses in significant detail.
</p>
<p>Note that this XSS in Servlet rule looks for similar issues, but looks for them in a different way than the existing
'XSS: Servlet reflected cross site scripting vulnerability' and 'XSS: Servlet reflected cross site scripting vulnerability in error page' rules in FindBugs.
</p>
<br/>
<p>
<b>References</b><br/>
<a href="http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting">WASC-8: Cross Site Scripting</a><br/>
<a href="https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet">OWASP: XSS Prevention Cheat Sheet</a><br/>
<a href="https://www.owasp.org/index.php/Top_10_2013-A3-Cross-Site_Scripting_%28XSS%29">OWASP: Top 10 2013-A3: Cross-Site Scripting (XSS)</a><br/>
<a href="https://cwe.mitre.org/data/definitions/79.html">CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')</a><br/>
<a href="https://code.google.com/p/owasp-java-encoder/">OWASP Java Encoder</a><br/>
</p>
            
        
<h2>
<a name="XSS_REQUEST_PARAMETER_TO_JSP_WRITER">XSS_REQUEST_PARAMETER_TO_JSP_WRITER: JSP reflected cross site scripting vulnerability</a>
</h2>

    <p>This code directly writes an HTTP parameter to JSP output, which allows for a cross site scripting
vulnerability. See <a href="http://en.wikipedia.org/wiki/Cross-site_scripting">http://en.wikipedia.org/wiki/Cross-site_scripting</a>
for more information.</p>
<p>SpotBugs looks only for the most blatant, obvious cases of cross site scripting.
If SpotBugs found <em>any</em>, you <em>almost certainly</em> have more cross site scripting
vulnerabilities that SpotBugs doesn't report. If you are concerned about cross site scripting, you should seriously
consider using a commercial static analysis or pen-testing tool.
</p>

    
<h2>
<a name="XSS_REQUEST_PARAMETER_TO_SERVLET_WRITER">XSS_REQUEST_PARAMETER_TO_SERVLET_WRITER: Servlet reflected cross site scripting vulnerability</a>
</h2>

    <p>This code directly writes an HTTP parameter to Servlet output, which allows for a reflected cross site scripting
vulnerability. See <a href="http://en.wikipedia.org/wiki/Cross-site_scripting">http://en.wikipedia.org/wiki/Cross-site_scripting</a>
for more information.</p>
<p>SpotBugs looks only for the most blatant, obvious cases of cross site scripting.
If SpotBugs found <em>any</em>, you <em>almost certainly</em> have more cross site scripting
vulnerabilities that SpotBugs doesn't report. If you are concerned about cross site scripting, you should seriously
consider using a commercial static analysis or pen-testing tool.
</p>


    </body>
</html>
