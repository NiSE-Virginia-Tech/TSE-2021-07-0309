<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>SpotBugs Report</title>
<style type="text/css">
		.tablerow0 {
			background: #EEEEEE;
		}

		.tablerow1 {
			background: white;
		}

		.detailrow0 {
			background: #EEEEEE;
		}

		.detailrow1 {
			background: white;
		}

		.tableheader {
			background: #b9b9fe;
			font-size: larger;
		}

		.tablerow0:hover, .tablerow1:hover {
			background: #aaffaa;
		}

		.priority-1 {
		    color: red;
		    font-weight: bold;
		}
		.priority-2 {
		    color: orange;
		    font-weight: bold;
		}
		.priority-3 {
		    color: green;
		    font-weight: bold;
		}
		.priority-4 {
		    color: blue;
		    font-weight: bold;
		}
		</style>
<script type="text/javascript">
			function toggleRow(elid) {
				if (document.getElementById) {
					element = document.getElementById(elid);
					if (element) {
						if (element.style.display == 'none') {
							element.style.display = 'block';
							//window.status = 'Toggle on!';
						} else {
							element.style.display = 'none';
							//window.status = 'Toggle off!';
						}
					}
				}
			}
		</script>
</head>
<body>
<h1>
<a href="https://spotbugs.github.io/">SpotBugs</a> Report</h1>
<h2>Project Information</h2>
<p>Project: 
		</p>
<p>SpotBugs version: 3.1.12</p>
<p>Code analyzed:</p>
<ul>
<li>/home/x/CryptoAPIDetect/dataset/group/kylin.git/spring-jdbc-4.3.10.RELEASE.jar</li>
</ul>
<p>
<br/>
<br/>
</p>
<h2>Metrics</h2>
<p>10009 lines of code analyzed,
	in 296 classes, 
	in 18 packages.</p>
<table width="500" cellpadding="5" cellspacing="2">
<tr class="tableheader">
<th align="left">Metric</th>
<th align="right">Total</th>
<th align="right">Density*</th>
</tr>
<tr class="tablerow0">
<td>High Priority Warnings</td>
<td align="right"/>
<td align="right">0.00</td>
</tr>
<tr class="tablerow1">
<td>Medium Priority Warnings</td>
<td align="right">81</td>
<td align="right">8.09</td>
</tr>
<tr class="$totalClass">
<td>
<b>Total Warnings</b>
</td>
<td align="right">
<b>81</b>
</td>
<td align="right">
<b>8.09</b>
</td>
</tr>
</table>
<p>
<i>(* Defects per Thousand lines of non-commenting source statements)</i>
</p>
<p>
<br/>
<br/>
</p>
<h2>Contents</h2>
<ul>
<li>
<a href="#Warnings_SECURITY">Security Warnings</a>
</li>
<li>
<a href="#Details">Details</a>
</li>
</ul>
<h1>Summary</h1>
<table width="500" cellpadding="5" cellspacing="2">
<tr class="tableheader">
<th align="left">Warning Type</th>
<th align="right">Number</th>
</tr>
<tr class="tablerow0">
<td>
<a href="#Warnings_SECURITY">Security Warnings</a>
</td>
<td align="right">81</td>
</tr>
<tr class="tablerow1">
<td>
<b>Total</b>
</td>
<td align="right">
<b>81</b>
</td>
</tr>
</table>
<h1>Warnings</h1>
<p>Click on a warning row to see full context information.</p>
<h2>
<a name="Warnings_SECURITY">Security Warnings</a>
</h2>
<table class="warningtable" width="100%" cellspacing="0">
<tr class="tableheader">
<th align="left">Code</th>
<th align="left">Warning</th>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71680');">
<td>
<span class="priority-2">SECCONFCTRL</span>
</td>
<td>This use of java/sql/Connection.setCatalog(Ljava/lang/String;)V might be used to control configuration externally</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71680" style="display: none;">
<a href="#EXTERNAL_CONFIG_CONTROL">Bug type EXTERNAL_CONFIG_CONTROL (click for details)</a>
<br/>In class org.springframework.jdbc.datasource.AbstractDriverBasedDataSource<br/>In method org.springframework.jdbc.datasource.AbstractDriverBasedDataSource.getConnectionFromDriver(String, String)<br/>At AbstractDriverBasedDataSource.java:[line 198]<br/>Sink method java/sql/Connection.setCatalog(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/springframework/jdbc/datasource/AbstractDriverBasedDataSource.catalog<br/>At AbstractDriverBasedDataSource.java:[line 198]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71759');">
<td>
<span class="priority-2">SECCONFCTRL</span>
</td>
<td>This use of java/sql/Connection.setCatalog(Ljava/lang/String;)V might be used to control configuration externally</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71759" style="display: none;">
<a href="#EXTERNAL_CONFIG_CONTROL">Bug type EXTERNAL_CONFIG_CONTROL (click for details)</a>
<br/>In class org.springframework.jdbc.datasource.UserCredentialsDataSourceAdapter<br/>In method org.springframework.jdbc.datasource.UserCredentialsDataSourceAdapter.getConnection()<br/>At UserCredentialsDataSourceAdapter.java:[line 160]<br/>Sink method java/sql/Connection.setCatalog(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/springframework/jdbc/datasource/UserCredentialsDataSourceAdapter.catalog<br/>At UserCredentialsDataSourceAdapter.java:[line 160]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70133');">
<td>
<span class="priority-2">SECCRLFLOG</span>
</td>
<td>This use of org/apache/commons/logging/Log.debug(Ljava/lang/Object;)V might be used to include CRLF characters into log messages</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70133" style="display: none;">
<a href="#CRLF_INJECTION_LOGS">Bug type CRLF_INJECTION_LOGS (click for details)</a>
<br/>In class org.springframework.jdbc.core.metadata.GenericCallMetaDataProvider<br/>In method org.springframework.jdbc.core.metadata.GenericCallMetaDataProvider.processProcedureColumns(DatabaseMetaData, String, String, String)<br/>At GenericCallMetaDataProvider.java:[line 363]<br/>Sink method org/apache/commons/logging/Log.debug(Ljava/lang/Object;)V<br/>Sink parameter 0<br/>Tainted source java/sql/ResultSet.getString(Ljava/lang/String;)Ljava/lang/String;<br/>At GenericCallMetaDataProvider.java:[line 364]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70212');">
<td>
<span class="priority-2">SECCRLFLOG</span>
</td>
<td>This use of org/apache/commons/logging/Log.debug(Ljava/lang/Object;)V might be used to include CRLF characters into log messages</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70212" style="display: none;">
<a href="#CRLF_INJECTION_LOGS">Bug type CRLF_INJECTION_LOGS (click for details)</a>
<br/>In class org.springframework.jdbc.core.metadata.GenericTableMetaDataProvider<br/>In method org.springframework.jdbc.core.metadata.GenericTableMetaDataProvider.processTableColumns(DatabaseMetaData, GenericTableMetaDataProvider$TableMetaData)<br/>At GenericTableMetaDataProvider.java:[line 411]<br/>Sink method org/apache/commons/logging/Log.debug(Ljava/lang/Object;)V<br/>Sink parameter 0<br/>Tainted source java/sql/ResultSet.getString(Ljava/lang/String;)Ljava/lang/String;<br/>At GenericTableMetaDataProvider.java:[line 400]<br/>At GenericTableMetaDataProvider.java:[line 411]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71838');">
<td>
<span class="priority-2">SECHCP</span>
</td>
<td>Hard coded password found</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71838" style="display: none;">
<a href="#HARD_CODE_PASSWORD">Bug type HARD_CODE_PASSWORD (click for details)</a>
<br/>In class org.springframework.jdbc.datasource.embedded.DerbyEmbeddedDatabaseConfigurer<br/>In method org.springframework.jdbc.datasource.embedded.DerbyEmbeddedDatabaseConfigurer.configureConnectionProperties(ConnectionProperties, String)<br/>At DerbyEmbeddedDatabaseConfigurer.java:[line 65]<br/>Sink method org/springframework/jdbc/datasource/embedded/ConnectionProperties.setPassword(Ljava/lang/String;)V<br/>Sink parameter 0</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71902');">
<td>
<span class="priority-2">SECHCP</span>
</td>
<td>Hard coded password found</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71902" style="display: none;">
<a href="#HARD_CODE_PASSWORD">Bug type HARD_CODE_PASSWORD (click for details)</a>
<br/>In class org.springframework.jdbc.datasource.embedded.H2EmbeddedDatabaseConfigurer<br/>In method org.springframework.jdbc.datasource.embedded.H2EmbeddedDatabaseConfigurer.configureConnectionProperties(ConnectionProperties, String)<br/>At H2EmbeddedDatabaseConfigurer.java:[line 63]<br/>Sink method org/springframework/jdbc/datasource/embedded/ConnectionProperties.setPassword(Ljava/lang/String;)V<br/>Sink parameter 0</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71966');">
<td>
<span class="priority-2">SECHCP</span>
</td>
<td>Hard coded password found</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71966" style="display: none;">
<a href="#HARD_CODE_PASSWORD">Bug type HARD_CODE_PASSWORD (click for details)</a>
<br/>In class org.springframework.jdbc.datasource.embedded.HsqlEmbeddedDatabaseConfigurer<br/>In method org.springframework.jdbc.datasource.embedded.HsqlEmbeddedDatabaseConfigurer.configureConnectionProperties(ConnectionProperties, String)<br/>At HsqlEmbeddedDatabaseConfigurer.java:[line 62]<br/>Sink method org/springframework/jdbc/datasource/embedded/ConnectionProperties.setPassword(Ljava/lang/String;)V<br/>Sink parameter 0</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65645');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareCall(Ljava/lang/String;)Ljava/sql/CallableStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65645" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.CallableStatementCreatorFactory$CallableStatementCreatorImpl<br/>In method org.springframework.jdbc.core.CallableStatementCreatorFactory$CallableStatementCreatorImpl.createCallableStatement(Connection)<br/>At CallableStatementCreatorFactory.java:[line 168]<br/>Sink method java/sql/Connection.prepareCall(Ljava/lang/String;)Ljava/sql/CallableStatement;<br/>Sink parameter 0<br/>Unknown source org/springframework/jdbc/core/CallableStatementCreatorFactory.callString<br/>At CallableStatementCreatorFactory.java:[line 168]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65724');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareCall(Ljava/lang/String;II)Ljava/sql/CallableStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65724" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.CallableStatementCreatorFactory$CallableStatementCreatorImpl<br/>In method org.springframework.jdbc.core.CallableStatementCreatorFactory$CallableStatementCreatorImpl.createCallableStatement(Connection)<br/>At CallableStatementCreatorFactory.java:[line 171]<br/>Sink method java/sql/Connection.prepareCall(Ljava/lang/String;II)Ljava/sql/CallableStatement;<br/>Sink parameter 2<br/>Unknown source org/springframework/jdbc/core/CallableStatementCreatorFactory.callString<br/>At CallableStatementCreatorFactory.java:[line 171]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69264');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.addBatch(Ljava/lang/String;)V can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69264" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.JdbcTemplate$1BatchUpdateStatementCallback<br/>In method org.springframework.jdbc.core.JdbcTemplate$1BatchUpdateStatementCallback.doInStatement(Statement)<br/>At JdbcTemplate.java:[line 558]<br/>Sink method java/sql/Statement.addBatch(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/springframework/jdbc/core/JdbcTemplate$1BatchUpdateStatementCallback.val$sql<br/>At JdbcTemplate.java:[line 556]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69343');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.execute(Ljava/lang/String;)Z can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69343" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.JdbcTemplate$1BatchUpdateStatementCallback<br/>In method org.springframework.jdbc.core.JdbcTemplate$1BatchUpdateStatementCallback.doInStatement(Statement)<br/>At JdbcTemplate.java:[line 579]<br/>Sink method java/sql/Statement.execute(Ljava/lang/String;)Z<br/>Sink parameter 0<br/>Unknown source org/springframework/jdbc/core/JdbcTemplate$1BatchUpdateStatementCallback.val$sql<br/>At JdbcTemplate.java:[line 579]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69422');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.execute(Ljava/lang/String;)Z can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69422" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.JdbcTemplate$1ExecuteStatementCallback<br/>In method org.springframework.jdbc.core.JdbcTemplate$1ExecuteStatementCallback.doInStatement(Statement)<br/>At JdbcTemplate.java:[line 435]<br/>Sink method java/sql/Statement.execute(Ljava/lang/String;)Z<br/>Sink parameter 0<br/>Unknown source org/springframework/jdbc/core/JdbcTemplate$1ExecuteStatementCallback.val$sql<br/>At JdbcTemplate.java:[line 435]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69501');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69501" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback<br/>In method org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(Statement)<br/>At JdbcTemplate.java:[line 458]<br/>Sink method java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;<br/>Sink parameter 0<br/>Unknown source org/springframework/jdbc/core/JdbcTemplate$1QueryStatementCallback.val$sql<br/>At JdbcTemplate.java:[line 458]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69580');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.executeUpdate(Ljava/lang/String;)I can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69580" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.JdbcTemplate$1UpdateStatementCallback<br/>In method org.springframework.jdbc.core.JdbcTemplate$1UpdateStatementCallback.doInStatement(Statement)<br/>At JdbcTemplate.java:[line 527]<br/>Sink method java/sql/Statement.executeUpdate(Ljava/lang/String;)I<br/>Sink parameter 0<br/>Unknown source org/springframework/jdbc/core/JdbcTemplate$1UpdateStatementCallback.val$sql<br/>At JdbcTemplate.java:[line 527]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69659');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareCall(Ljava/lang/String;)Ljava/sql/CallableStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69659" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.JdbcTemplate$SimpleCallableStatementCreator<br/>In method org.springframework.jdbc.core.JdbcTemplate$SimpleCallableStatementCreator.createCallableStatement(Connection)<br/>At JdbcTemplate.java:[line 1545]<br/>Sink method java/sql/Connection.prepareCall(Ljava/lang/String;)Ljava/sql/CallableStatement;<br/>Sink parameter 0<br/>Unknown source org/springframework/jdbc/core/JdbcTemplate$SimpleCallableStatementCreator.callString<br/>At JdbcTemplate.java:[line 1545]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69738');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69738" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.JdbcTemplate$SimplePreparedStatementCreator<br/>In method org.springframework.jdbc.core.JdbcTemplate$SimplePreparedStatementCreator.createPreparedStatement(Connection)<br/>At JdbcTemplate.java:[line 1521]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/springframework/jdbc/core/JdbcTemplate$SimplePreparedStatementCreator.sql<br/>At JdbcTemplate.java:[line 1521]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69817');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;[Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69817" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.PreparedStatementCreatorFactory$PreparedStatementCreatorImpl<br/>In method org.springframework.jdbc.core.PreparedStatementCreatorFactory$PreparedStatementCreatorImpl.createPreparedStatement(Connection)<br/>At PreparedStatementCreatorFactory.java:[line 231]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;[Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 1<br/>Unknown source org/springframework/jdbc/core/PreparedStatementCreatorFactory$PreparedStatementCreatorImpl.actualSql<br/>At PreparedStatementCreatorFactory.java:[line 231]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69896');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;I)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69896" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.PreparedStatementCreatorFactory$PreparedStatementCreatorImpl<br/>In method org.springframework.jdbc.core.PreparedStatementCreatorFactory$PreparedStatementCreatorImpl.createPreparedStatement(Connection)<br/>At PreparedStatementCreatorFactory.java:[line 234]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;I)Ljava/sql/PreparedStatement;<br/>Sink parameter 1<br/>Unknown source org/springframework/jdbc/core/PreparedStatementCreatorFactory$PreparedStatementCreatorImpl.actualSql<br/>At PreparedStatementCreatorFactory.java:[line 234]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69975');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69975" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.PreparedStatementCreatorFactory$PreparedStatementCreatorImpl<br/>In method org.springframework.jdbc.core.PreparedStatementCreatorFactory$PreparedStatementCreatorImpl.createPreparedStatement(Connection)<br/>At PreparedStatementCreatorFactory.java:[line 238]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/springframework/jdbc/core/PreparedStatementCreatorFactory$PreparedStatementCreatorImpl.actualSql<br/>At PreparedStatementCreatorFactory.java:[line 238]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70054');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;II)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70054" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.PreparedStatementCreatorFactory$PreparedStatementCreatorImpl<br/>In method org.springframework.jdbc.core.PreparedStatementCreatorFactory$PreparedStatementCreatorImpl.createPreparedStatement(Connection)<br/>At PreparedStatementCreatorFactory.java:[line 241]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;II)Ljava/sql/PreparedStatement;<br/>Sink parameter 2<br/>Unknown source org/springframework/jdbc/core/PreparedStatementCreatorFactory$PreparedStatementCreatorImpl.actualSql<br/>At PreparedStatementCreatorFactory.java:[line 241]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70958');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;[Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70958" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.simple.AbstractJdbcInsert<br/>In method org.springframework.jdbc.core.simple.AbstractJdbcInsert.prepareStatementForGeneratedKeys(Connection)<br/>At AbstractJdbcInsert.java:[line 529]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;[Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 1<br/>Unknown source org/springframework/jdbc/core/simple/AbstractJdbcInsert.insertString<br/>Unknown source org/springframework/jdbc/core/simple/AbstractJdbcInsert.getInsertString()Ljava/lang/String;<br/>At AbstractJdbcInsert.java:[line 233]<br/>At AbstractJdbcInsert.java:[line 529]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71052');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;I)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71052" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.simple.AbstractJdbcInsert<br/>In method org.springframework.jdbc.core.simple.AbstractJdbcInsert.prepareStatementForGeneratedKeys(Connection)<br/>At AbstractJdbcInsert.java:[line 535]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;I)Ljava/sql/PreparedStatement;<br/>Sink parameter 1<br/>Unknown source org/springframework/jdbc/core/simple/AbstractJdbcInsert.insertString<br/>Unknown source org/springframework/jdbc/core/simple/AbstractJdbcInsert.getInsertString()Ljava/lang/String;<br/>At AbstractJdbcInsert.java:[line 233]<br/>At AbstractJdbcInsert.java:[line 535]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71458');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71458" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.simple.AbstractJdbcInsert$2<br/>In method org.springframework.jdbc.core.simple.AbstractJdbcInsert$2.doInConnection(Connection)<br/>At AbstractJdbcInsert.java:[line 481]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/springframework/jdbc/core/simple/AbstractJdbcInsert.getInsertString()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71527');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71527" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.simple.AbstractJdbcInsert$2<br/>In method org.springframework.jdbc.core.simple.AbstractJdbcInsert$2.doInConnection(Connection)<br/>At AbstractJdbcInsert.java:[line 494]<br/>Sink method java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;<br/>Sink parameter 0<br/>Unknown source org/springframework/jdbc/core/simple/AbstractJdbcInsert$2.val$keyQuery<br/>At AbstractJdbcInsert.java:[line 494]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N72030');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.execute(Ljava/lang/String;)Z can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N72030" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.datasource.init.ScriptUtils<br/>In method org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(Connection, EncodedResource, boolean, boolean, String, String, String, String)<br/>At ScriptUtils.java:[line 470]<br/>Sink method java/sql/Statement.execute(Ljava/lang/String;)Z<br/>Sink parameter 0<br/>Unknown source java/util/Iterator.next()Ljava/lang/Object;<br/>Unknown source org/springframework/jdbc/datasource/init/ScriptUtils.splitSqlScript(Lorg/springframework/core/io/support/EncodedResource;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V parameter 0<br/>At ScriptUtils.java:[line 204]<br/>At ScriptUtils.java:[line 246]<br/>At ScriptUtils.java:[line 247]<br/>At ScriptUtils.java:[line 467]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N72381');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.execute(Ljava/lang/String;)Z can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N72381" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.support.DatabaseStartupValidator<br/>In method org.springframework.jdbc.support.DatabaseStartupValidator.afterPropertiesSet()<br/>At DatabaseStartupValidator.java:[line 116]<br/>Sink method java/sql/Statement.execute(Ljava/lang/String;)Z<br/>Sink parameter 0<br/>Unknown source org/springframework/jdbc/support/DatabaseStartupValidator.validationQuery<br/>At DatabaseStartupValidator.java:[line 116]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N72460');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.executeUpdate(Ljava/lang/String;)I can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N72460" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.support.incrementer.AbstractIdentityColumnMaxValueIncrementer<br/>In method org.springframework.jdbc.support.incrementer.AbstractIdentityColumnMaxValueIncrementer.getNextKey()<br/>At AbstractIdentityColumnMaxValueIncrementer.java:[line 98]<br/>Sink method java/sql/Statement.executeUpdate(Ljava/lang/String;)I<br/>Sink parameter 0<br/>Unknown source org/springframework/jdbc/support/incrementer/AbstractIdentityColumnMaxValueIncrementer.getIncrementStatement()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N72529');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N72529" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.support.incrementer.AbstractIdentityColumnMaxValueIncrementer<br/>In method org.springframework.jdbc.support.incrementer.AbstractIdentityColumnMaxValueIncrementer.getNextKey()<br/>At AbstractIdentityColumnMaxValueIncrementer.java:[line 99]<br/>Sink method java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;<br/>Sink parameter 0<br/>Unknown source org/springframework/jdbc/support/incrementer/AbstractIdentityColumnMaxValueIncrementer.getIdentityStatement()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N72598');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.executeUpdate(Ljava/lang/String;)I can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N72598" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.support.incrementer.AbstractIdentityColumnMaxValueIncrementer<br/>In method org.springframework.jdbc.support.incrementer.AbstractIdentityColumnMaxValueIncrementer.getNextKey()<br/>At AbstractIdentityColumnMaxValueIncrementer.java:[line 110]<br/>Sink method java/sql/Statement.executeUpdate(Ljava/lang/String;)I<br/>Sink parameter 0<br/>Unknown source org/springframework/jdbc/support/incrementer/AbstractIdentityColumnMaxValueIncrementer.getColumnName()Ljava/lang/String;<br/>Unknown source org/springframework/jdbc/support/incrementer/AbstractIdentityColumnMaxValueIncrementer.getDeleteStatement([J)Ljava/lang/String;<br/>Unknown source org/springframework/jdbc/support/incrementer/AbstractDataFieldMaxValueIncrementer.incrementerName<br/>Unknown source org/springframework/jdbc/support/incrementer/AbstractIdentityColumnMaxValueIncrementer.getIncrementerName()Ljava/lang/String;<br/>Unknown source org/springframework/jdbc/support/incrementer/AbstractColumnMaxValueIncrementer.columnName<br/>At AbstractColumnMaxValueIncrementer.java:[line 73]<br/>At AbstractDataFieldMaxValueIncrementer.java:[line 92]<br/>At AbstractIdentityColumnMaxValueIncrementer.java:[line 110]<br/>At AbstractIdentityColumnMaxValueIncrementer.java:[line 148]<br/>At AbstractIdentityColumnMaxValueIncrementer.java:[line 150]<br/>At AbstractIdentityColumnMaxValueIncrementer.java:[line 152]<br/>At AbstractIdentityColumnMaxValueIncrementer.java:[line 154]<br/>At AbstractIdentityColumnMaxValueIncrementer.java:[line 158]<br/>At AbstractIdentityColumnMaxValueIncrementer.java:[line 160]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N72777');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N72777" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.support.incrementer.AbstractSequenceMaxValueIncrementer<br/>In method org.springframework.jdbc.support.incrementer.AbstractSequenceMaxValueIncrementer.getNextKey()<br/>At AbstractSequenceMaxValueIncrementer.java:[line 69]<br/>Sink method java/sql/Statement.executeQuery(Ljava/lang/String;)Ljava/sql/ResultSet;<br/>Sink parameter 0<br/>Unknown source org/springframework/jdbc/support/incrementer/AbstractSequenceMaxValueIncrementer.getSequenceQuery()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N72846');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.executeUpdate(Ljava/lang/String;)I can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N72846" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.support.incrementer.MySQLMaxValueIncrementer<br/>In method org.springframework.jdbc.support.incrementer.MySQLMaxValueIncrementer.getNextKey()<br/>At MySQLMaxValueIncrementer.java:[line 142]<br/>Sink method java/sql/Statement.executeUpdate(Ljava/lang/String;)I<br/>Sink parameter 0<br/>Unknown source org/springframework/jdbc/support/incrementer/MySQLMaxValueIncrementer.getColumnName()Ljava/lang/String;<br/>Unknown source org/springframework/jdbc/support/incrementer/AbstractDataFieldMaxValueIncrementer.incrementerName<br/>Unknown source org/springframework/jdbc/support/incrementer/AbstractColumnMaxValueIncrementer.columnName<br/>Unknown source org/springframework/jdbc/support/incrementer/MySQLMaxValueIncrementer.getIncrementerName()Ljava/lang/String;<br/>At AbstractColumnMaxValueIncrementer.java:[line 73]<br/>At AbstractDataFieldMaxValueIncrementer.java:[line 92]<br/>At MySQLMaxValueIncrementer.java:[line 140]<br/>At MySQLMaxValueIncrementer.java:[line 142]<br/>At MySQLMaxValueIncrementer.java:[line 143]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65551');">
<td>
<span class="priority-2">SECSQLISPRJDBC</span>
</td>
<td>This use of org/springframework/jdbc/core/JdbcOperations.batchUpdate(Ljava/lang/String;Lorg/springframework/jdbc/core/BatchPreparedStatementSetter;)[I can be vulnerable to SQL injection (with Spring JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65551" style="display: none;">
<a href="#SQL_INJECTION_SPRING_JDBC">Bug type SQL_INJECTION_SPRING_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.BatchUpdateUtils<br/>In method org.springframework.jdbc.core.BatchUpdateUtils.executeBatchUpdate(String, List, int[], JdbcOperations)<br/>At BatchUpdateUtils.java:[line 32]<br/>Sink method org/springframework/jdbc/core/JdbcOperations.batchUpdate(Ljava/lang/String;Lorg/springframework/jdbc/core/BatchPreparedStatementSetter;)[I<br/>Sink parameter 1<br/>Unknown source org/springframework/jdbc/core/BatchUpdateUtils.executeBatchUpdate(Ljava/lang/String;Ljava/util/List;[ILorg/springframework/jdbc/core/JdbcOperations;)[I parameter 3<br/>Method usage not detected<br/>At JdbcTemplate.java:[line 995]<br/>At JdbcTemplate.java:[line 1000]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65803');">
<td>
<span class="priority-2">SECSQLISPRJDBC</span>
</td>
<td>This use of org/springframework/jdbc/core/JdbcTemplate.execute(Ljava/lang/String;Lorg/springframework/jdbc/core/PreparedStatementCallback;)Ljava/lang/Object; can be vulnerable to SQL injection (with Spring JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65803" style="display: none;">
<a href="#SQL_INJECTION_SPRING_JDBC">Bug type SQL_INJECTION_SPRING_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.JdbcTemplate<br/>In method org.springframework.jdbc.core.JdbcTemplate.batchUpdate(String, Collection, int, ParameterizedPreparedStatementSetter)<br/>At JdbcTemplate.java:[line 1010]<br/>Sink method org/springframework/jdbc/core/JdbcTemplate.execute(Ljava/lang/String;Lorg/springframework/jdbc/core/PreparedStatementCallback;)Ljava/lang/Object;<br/>Sink parameter 1<br/>Unknown source org/springframework/jdbc/core/JdbcTemplate.batchUpdate(Ljava/lang/String;Ljava/util/Collection;ILorg/springframework/jdbc/core/ParameterizedPreparedStatementSetter;)[[I parameter 3<br/>Method usage not detected<br/>At JdbcTemplate.java:[line 1008]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65887');">
<td>
<span class="priority-2">SECSQLISPRJDBC</span>
</td>
<td>This use of org/springframework/jdbc/core/JdbcTemplate.batchUpdate(Ljava/lang/String;Ljava/util/List;[I)[I can be vulnerable to SQL injection (with Spring JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65887" style="display: none;">
<a href="#SQL_INJECTION_SPRING_JDBC">Bug type SQL_INJECTION_SPRING_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.JdbcTemplate<br/>In method org.springframework.jdbc.core.JdbcTemplate.batchUpdate(String, List)<br/>At JdbcTemplate.java:[line 995]<br/>Sink method org/springframework/jdbc/core/JdbcTemplate.batchUpdate(Ljava/lang/String;Ljava/util/List;[I)[I<br/>Sink parameter 2<br/>Unknown source org/springframework/jdbc/core/JdbcTemplate.batchUpdate(Ljava/lang/String;Ljava/util/List;)[I parameter 1<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65961');">
<td>
<span class="priority-2">SECSQLISPRJDBC</span>
</td>
<td>This use of org/springframework/jdbc/core/JdbcTemplate.execute(Ljava/lang/String;Lorg/springframework/jdbc/core/PreparedStatementCallback;)Ljava/lang/Object; can be vulnerable to SQL injection (with Spring JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65961" style="display: none;">
<a href="#SQL_INJECTION_SPRING_JDBC">Bug type SQL_INJECTION_SPRING_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.JdbcTemplate<br/>In method org.springframework.jdbc.core.JdbcTemplate.batchUpdate(String, BatchPreparedStatementSetter)<br/>At JdbcTemplate.java:[line 950]<br/>Sink method org/springframework/jdbc/core/JdbcTemplate.execute(Ljava/lang/String;Lorg/springframework/jdbc/core/PreparedStatementCallback;)Ljava/lang/Object;<br/>Sink parameter 1<br/>Unknown source org/springframework/jdbc/core/JdbcTemplate.batchUpdate(Ljava/lang/String;Lorg/springframework/jdbc/core/BatchPreparedStatementSetter;)[I parameter 1<br/>At JdbcTemplate.java:[line 947]<br/>At AbstractJdbcInsert.java:[line 233]<br/>At AbstractJdbcInsert.java:[line 576]<br/>At BatchSqlUpdate.java:[line 184]<br/>At BatchSqlUpdate.java:[line 185]<br/>At RdbmsOperation.java:[line 241]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66090');">
<td>
<span class="priority-2">SECSQLISPRJDBC</span>
</td>
<td>This use of org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;Lorg/springframework/jdbc/core/PreparedStatementSetter;Lorg/springframework/jdbc/core/ResultSetExtractor;)Ljava/lang/Object; can be vulnerable to SQL injection (with Spring JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66090" style="display: none;">
<a href="#SQL_INJECTION_SPRING_JDBC">Bug type SQL_INJECTION_SPRING_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.JdbcTemplate<br/>In method org.springframework.jdbc.core.JdbcTemplate.query(String, PreparedStatementSetter, RowCallbackHandler)<br/>At JdbcTemplate.java:[line 741]<br/>Sink method org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;Lorg/springframework/jdbc/core/PreparedStatementSetter;Lorg/springframework/jdbc/core/ResultSetExtractor;)Ljava/lang/Object;<br/>Sink parameter 2<br/>Unknown source org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;Lorg/springframework/jdbc/core/PreparedStatementSetter;Lorg/springframework/jdbc/core/RowCallbackHandler;)V parameter 2<br/>Method usage not detected<br/>At JdbcTemplate.java:[line 746]<br/>At JdbcTemplate.java:[line 751]<br/>At JdbcTemplate.java:[line 756]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66194');">
<td>
<span class="priority-2">SECSQLISPRJDBC</span>
</td>
<td>This use of org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;Lorg/springframework/jdbc/core/PreparedStatementSetter;Lorg/springframework/jdbc/core/ResultSetExtractor;)Ljava/lang/Object; can be vulnerable to SQL injection (with Spring JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66194" style="display: none;">
<a href="#SQL_INJECTION_SPRING_JDBC">Bug type SQL_INJECTION_SPRING_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.JdbcTemplate<br/>In method org.springframework.jdbc.core.JdbcTemplate.query(String, PreparedStatementSetter, RowMapper)<br/>At JdbcTemplate.java:[line 766]<br/>Sink method org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;Lorg/springframework/jdbc/core/PreparedStatementSetter;Lorg/springframework/jdbc/core/ResultSetExtractor;)Ljava/lang/Object;<br/>Sink parameter 2<br/>Unknown source org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;Lorg/springframework/jdbc/core/PreparedStatementSetter;Lorg/springframework/jdbc/core/RowMapper;)Ljava/util/List; parameter 2<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66268');">
<td>
<span class="priority-2">SECSQLISPRJDBC</span>
</td>
<td>This use of org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;Lorg/springframework/jdbc/core/PreparedStatementSetter;Lorg/springframework/jdbc/core/ResultSetExtractor;)Ljava/lang/Object; can be vulnerable to SQL injection (with Spring JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66268" style="display: none;">
<a href="#SQL_INJECTION_SPRING_JDBC">Bug type SQL_INJECTION_SPRING_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.JdbcTemplate<br/>In method org.springframework.jdbc.core.JdbcTemplate.query(String, ResultSetExtractor, Object[])<br/>At JdbcTemplate.java:[line 731]<br/>Sink method org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;Lorg/springframework/jdbc/core/PreparedStatementSetter;Lorg/springframework/jdbc/core/ResultSetExtractor;)Ljava/lang/Object;<br/>Sink parameter 2<br/>Unknown source org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;Lorg/springframework/jdbc/core/ResultSetExtractor;[Ljava/lang/Object;)Ljava/lang/Object; parameter 2<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66342');">
<td>
<span class="priority-2">SECSQLISPRJDBC</span>
</td>
<td>This use of org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;Lorg/springframework/jdbc/core/ResultSetExtractor;)Ljava/lang/Object; can be vulnerable to SQL injection (with Spring JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66342" style="display: none;">
<a href="#SQL_INJECTION_SPRING_JDBC">Bug type SQL_INJECTION_SPRING_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.JdbcTemplate<br/>In method org.springframework.jdbc.core.JdbcTemplate.query(String, RowCallbackHandler)<br/>At JdbcTemplate.java:[line 479]<br/>Sink method org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;Lorg/springframework/jdbc/core/ResultSetExtractor;)Ljava/lang/Object;<br/>Sink parameter 1<br/>Unknown source org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;Lorg/springframework/jdbc/core/RowCallbackHandler;)V parameter 1<br/>Method usage not detected<br/>At JdbcBeanDefinitionReader.java:[line 108]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66426');">
<td>
<span class="priority-2">SECSQLISPRJDBC</span>
</td>
<td>This use of org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;Lorg/springframework/jdbc/core/PreparedStatementSetter;Lorg/springframework/jdbc/core/RowCallbackHandler;)V can be vulnerable to SQL injection (with Spring JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66426" style="display: none;">
<a href="#SQL_INJECTION_SPRING_JDBC">Bug type SQL_INJECTION_SPRING_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.JdbcTemplate<br/>In method org.springframework.jdbc.core.JdbcTemplate.query(String, RowCallbackHandler, Object[])<br/>At JdbcTemplate.java:[line 756]<br/>Sink method org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;Lorg/springframework/jdbc/core/PreparedStatementSetter;Lorg/springframework/jdbc/core/RowCallbackHandler;)V<br/>Sink parameter 2<br/>Unknown source org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;Lorg/springframework/jdbc/core/RowCallbackHandler;[Ljava/lang/Object;)V parameter 2<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66500');">
<td>
<span class="priority-2">SECSQLISPRJDBC</span>
</td>
<td>This use of org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;Lorg/springframework/jdbc/core/ResultSetExtractor;)Ljava/lang/Object; can be vulnerable to SQL injection (with Spring JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66500" style="display: none;">
<a href="#SQL_INJECTION_SPRING_JDBC">Bug type SQL_INJECTION_SPRING_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.JdbcTemplate<br/>In method org.springframework.jdbc.core.JdbcTemplate.query(String, RowMapper)<br/>At JdbcTemplate.java:[line 484]<br/>Sink method org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;Lorg/springframework/jdbc/core/ResultSetExtractor;)Ljava/lang/Object;<br/>Sink parameter 1<br/>Unknown source org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;Lorg/springframework/jdbc/core/RowMapper;)Ljava/util/List; parameter 1<br/>Method usage not detected<br/>At JdbcTemplate.java:[line 489]<br/>At JdbcTemplate.java:[line 494]<br/>At JdbcTemplate.java:[line 500]<br/>At JdbcTemplate.java:[line 505]<br/>At JdbcTemplate.java:[line 510]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66624');">
<td>
<span class="priority-2">SECSQLISPRJDBC</span>
</td>
<td>This use of org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;[Ljava/lang/Object;Lorg/springframework/jdbc/core/ResultSetExtractor;)Ljava/lang/Object; can be vulnerable to SQL injection (with Spring JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66624" style="display: none;">
<a href="#SQL_INJECTION_SPRING_JDBC">Bug type SQL_INJECTION_SPRING_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.JdbcTemplate<br/>In method org.springframework.jdbc.core.JdbcTemplate.query(String, RowMapper, Object[])<br/>At JdbcTemplate.java:[line 781]<br/>Sink method org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;[Ljava/lang/Object;Lorg/springframework/jdbc/core/ResultSetExtractor;)Ljava/lang/Object;<br/>Sink parameter 2<br/>Unknown source org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;Lorg/springframework/jdbc/core/RowMapper;[Ljava/lang/Object;)Ljava/util/List; parameter 2<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66698');">
<td>
<span class="priority-2">SECSQLISPRJDBC</span>
</td>
<td>This use of org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;Lorg/springframework/jdbc/core/PreparedStatementSetter;Lorg/springframework/jdbc/core/ResultSetExtractor;)Ljava/lang/Object; can be vulnerable to SQL injection (with Spring JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66698" style="display: none;">
<a href="#SQL_INJECTION_SPRING_JDBC">Bug type SQL_INJECTION_SPRING_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.JdbcTemplate<br/>In method org.springframework.jdbc.core.JdbcTemplate.query(String, Object[], ResultSetExtractor)<br/>At JdbcTemplate.java:[line 726]<br/>Sink method org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;Lorg/springframework/jdbc/core/PreparedStatementSetter;Lorg/springframework/jdbc/core/ResultSetExtractor;)Ljava/lang/Object;<br/>Sink parameter 2<br/>Unknown source org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;[Ljava/lang/Object;Lorg/springframework/jdbc/core/ResultSetExtractor;)Ljava/lang/Object; parameter 2<br/>At JdbcTemplate.java:[line 776]<br/>At JdbcTemplate.java:[line 781]<br/>At JdbcTemplate.java:[line 794]<br/>At JdbcTemplate.java:[line 800]<br/>At JdbcTemplate.java:[line 813]<br/>At JdbcTemplate.java:[line 818]<br/>At JdbcTemplate.java:[line 828]<br/>At JdbcTemplate.java:[line 838]<br/>At JdbcTemplate.java:[line 843]<br/>At JdbcTemplate.java:[line 853]<br/>At JdbcTemplate.java:[line 863]<br/>At AbstractJdbcInsert.java:[line 233]<br/>At AbstractJdbcInsert.java:[line 464]<br/>At AbstractJdbcInsert.java:[line 466]<br/>At AbstractJdbcInsert.java:[line 468]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66917');">
<td>
<span class="priority-2">SECSQLISPRJDBC</span>
</td>
<td>This use of org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;Lorg/springframework/jdbc/core/PreparedStatementSetter;Lorg/springframework/jdbc/core/RowCallbackHandler;)V can be vulnerable to SQL injection (with Spring JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66917" style="display: none;">
<a href="#SQL_INJECTION_SPRING_JDBC">Bug type SQL_INJECTION_SPRING_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.JdbcTemplate<br/>In method org.springframework.jdbc.core.JdbcTemplate.query(String, Object[], RowCallbackHandler)<br/>At JdbcTemplate.java:[line 751]<br/>Sink method org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;Lorg/springframework/jdbc/core/PreparedStatementSetter;Lorg/springframework/jdbc/core/RowCallbackHandler;)V<br/>Sink parameter 2<br/>Unknown source org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;[Ljava/lang/Object;Lorg/springframework/jdbc/core/RowCallbackHandler;)V parameter 2<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66991');">
<td>
<span class="priority-2">SECSQLISPRJDBC</span>
</td>
<td>This use of org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;[Ljava/lang/Object;Lorg/springframework/jdbc/core/ResultSetExtractor;)Ljava/lang/Object; can be vulnerable to SQL injection (with Spring JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66991" style="display: none;">
<a href="#SQL_INJECTION_SPRING_JDBC">Bug type SQL_INJECTION_SPRING_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.JdbcTemplate<br/>In method org.springframework.jdbc.core.JdbcTemplate.query(String, Object[], RowMapper)<br/>At JdbcTemplate.java:[line 776]<br/>Sink method org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;[Ljava/lang/Object;Lorg/springframework/jdbc/core/ResultSetExtractor;)Ljava/lang/Object;<br/>Sink parameter 2<br/>Unknown source org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;[Ljava/lang/Object;Lorg/springframework/jdbc/core/RowMapper;)Ljava/util/List; parameter 2<br/>Method usage not detected<br/>At JdbcTemplate.java:[line 838]<br/>At JdbcTemplate.java:[line 843]<br/>At JdbcTemplate.java:[line 853]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67095');">
<td>
<span class="priority-2">SECSQLISPRJDBC</span>
</td>
<td>This use of org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;Lorg/springframework/jdbc/core/PreparedStatementSetter;Lorg/springframework/jdbc/core/ResultSetExtractor;)Ljava/lang/Object; can be vulnerable to SQL injection (with Spring JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67095" style="display: none;">
<a href="#SQL_INJECTION_SPRING_JDBC">Bug type SQL_INJECTION_SPRING_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.JdbcTemplate<br/>In method org.springframework.jdbc.core.JdbcTemplate.query(String, Object[], int[], ResultSetExtractor)<br/>At JdbcTemplate.java:[line 721]<br/>Sink method org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;Lorg/springframework/jdbc/core/PreparedStatementSetter;Lorg/springframework/jdbc/core/ResultSetExtractor;)Ljava/lang/Object;<br/>Sink parameter 2<br/>Unknown source org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;[Ljava/lang/Object;[ILorg/springframework/jdbc/core/ResultSetExtractor;)Ljava/lang/Object; parameter 3<br/>Method usage not detected<br/>At JdbcTemplate.java:[line 771]<br/>At JdbcTemplate.java:[line 788]<br/>At JdbcTemplate.java:[line 808]<br/>At JdbcTemplate.java:[line 823]<br/>At JdbcTemplate.java:[line 833]<br/>At JdbcTemplate.java:[line 848]<br/>At JdbcTemplate.java:[line 858]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67239');">
<td>
<span class="priority-2">SECSQLISPRJDBC</span>
</td>
<td>This use of org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;Lorg/springframework/jdbc/core/PreparedStatementSetter;Lorg/springframework/jdbc/core/RowCallbackHandler;)V can be vulnerable to SQL injection (with Spring JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67239" style="display: none;">
<a href="#SQL_INJECTION_SPRING_JDBC">Bug type SQL_INJECTION_SPRING_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.JdbcTemplate<br/>In method org.springframework.jdbc.core.JdbcTemplate.query(String, Object[], int[], RowCallbackHandler)<br/>At JdbcTemplate.java:[line 746]<br/>Sink method org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;Lorg/springframework/jdbc/core/PreparedStatementSetter;Lorg/springframework/jdbc/core/RowCallbackHandler;)V<br/>Sink parameter 2<br/>Unknown source org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;[Ljava/lang/Object;[ILorg/springframework/jdbc/core/RowCallbackHandler;)V parameter 3<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67313');">
<td>
<span class="priority-2">SECSQLISPRJDBC</span>
</td>
<td>This use of org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;[Ljava/lang/Object;[ILorg/springframework/jdbc/core/ResultSetExtractor;)Ljava/lang/Object; can be vulnerable to SQL injection (with Spring JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67313" style="display: none;">
<a href="#SQL_INJECTION_SPRING_JDBC">Bug type SQL_INJECTION_SPRING_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.JdbcTemplate<br/>In method org.springframework.jdbc.core.JdbcTemplate.query(String, Object[], int[], RowMapper)<br/>At JdbcTemplate.java:[line 771]<br/>Sink method org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;[Ljava/lang/Object;[ILorg/springframework/jdbc/core/ResultSetExtractor;)Ljava/lang/Object;<br/>Sink parameter 3<br/>Unknown source org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;[Ljava/lang/Object;[ILorg/springframework/jdbc/core/RowMapper;)Ljava/util/List; parameter 3<br/>Method usage not detected<br/>At JdbcTemplate.java:[line 833]<br/>At JdbcTemplate.java:[line 848]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67407');">
<td>
<span class="priority-2">SECSQLISPRJDBC</span>
</td>
<td>This use of org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;Lorg/springframework/jdbc/core/RowMapper;)Ljava/util/List; can be vulnerable to SQL injection (with Spring JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67407" style="display: none;">
<a href="#SQL_INJECTION_SPRING_JDBC">Bug type SQL_INJECTION_SPRING_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.JdbcTemplate<br/>In method org.springframework.jdbc.core.JdbcTemplate.queryForList(String)<br/>At JdbcTemplate.java:[line 510]<br/>Sink method org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;Lorg/springframework/jdbc/core/RowMapper;)Ljava/util/List;<br/>Sink parameter 1<br/>Unknown source org/springframework/jdbc/core/JdbcTemplate.queryForList(Ljava/lang/String;)Ljava/util/List; parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67481');">
<td>
<span class="priority-2">SECSQLISPRJDBC</span>
</td>
<td>This use of org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;Lorg/springframework/jdbc/core/RowMapper;)Ljava/util/List; can be vulnerable to SQL injection (with Spring JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67481" style="display: none;">
<a href="#SQL_INJECTION_SPRING_JDBC">Bug type SQL_INJECTION_SPRING_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.JdbcTemplate<br/>In method org.springframework.jdbc.core.JdbcTemplate.queryForList(String, Class)<br/>At JdbcTemplate.java:[line 505]<br/>Sink method org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;Lorg/springframework/jdbc/core/RowMapper;)Ljava/util/List;<br/>Sink parameter 1<br/>Unknown source org/springframework/jdbc/core/JdbcTemplate.queryForList(Ljava/lang/String;Ljava/lang/Class;)Ljava/util/List; parameter 1<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67555');">
<td>
<span class="priority-2">SECSQLISPRJDBC</span>
</td>
<td>This use of org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;[Ljava/lang/Object;Lorg/springframework/jdbc/core/RowMapper;)Ljava/util/List; can be vulnerable to SQL injection (with Spring JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67555" style="display: none;">
<a href="#SQL_INJECTION_SPRING_JDBC">Bug type SQL_INJECTION_SPRING_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.JdbcTemplate<br/>In method org.springframework.jdbc.core.JdbcTemplate.queryForList(String, Class, Object[])<br/>At JdbcTemplate.java:[line 843]<br/>Sink method org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;[Ljava/lang/Object;Lorg/springframework/jdbc/core/RowMapper;)Ljava/util/List;<br/>Sink parameter 2<br/>Unknown source org/springframework/jdbc/core/JdbcTemplate.queryForList(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Object;)Ljava/util/List; parameter 2<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67629');">
<td>
<span class="priority-2">SECSQLISPRJDBC</span>
</td>
<td>This use of org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;[Ljava/lang/Object;Lorg/springframework/jdbc/core/RowMapper;)Ljava/util/List; can be vulnerable to SQL injection (with Spring JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67629" style="display: none;">
<a href="#SQL_INJECTION_SPRING_JDBC">Bug type SQL_INJECTION_SPRING_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.JdbcTemplate<br/>In method org.springframework.jdbc.core.JdbcTemplate.queryForList(String, Object[])<br/>At JdbcTemplate.java:[line 853]<br/>Sink method org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;[Ljava/lang/Object;Lorg/springframework/jdbc/core/RowMapper;)Ljava/util/List;<br/>Sink parameter 2<br/>Unknown source org/springframework/jdbc/core/JdbcTemplate.queryForList(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/List; parameter 1<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67703');">
<td>
<span class="priority-2">SECSQLISPRJDBC</span>
</td>
<td>This use of org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;[Ljava/lang/Object;Lorg/springframework/jdbc/core/RowMapper;)Ljava/util/List; can be vulnerable to SQL injection (with Spring JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67703" style="display: none;">
<a href="#SQL_INJECTION_SPRING_JDBC">Bug type SQL_INJECTION_SPRING_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.JdbcTemplate<br/>In method org.springframework.jdbc.core.JdbcTemplate.queryForList(String, Object[], Class)<br/>At JdbcTemplate.java:[line 838]<br/>Sink method org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;[Ljava/lang/Object;Lorg/springframework/jdbc/core/RowMapper;)Ljava/util/List;<br/>Sink parameter 2<br/>Unknown source org/springframework/jdbc/core/JdbcTemplate.queryForList(Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Class;)Ljava/util/List; parameter 2<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67777');">
<td>
<span class="priority-2">SECSQLISPRJDBC</span>
</td>
<td>This use of org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;[Ljava/lang/Object;[ILorg/springframework/jdbc/core/RowMapper;)Ljava/util/List; can be vulnerable to SQL injection (with Spring JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67777" style="display: none;">
<a href="#SQL_INJECTION_SPRING_JDBC">Bug type SQL_INJECTION_SPRING_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.JdbcTemplate<br/>In method org.springframework.jdbc.core.JdbcTemplate.queryForList(String, Object[], int[])<br/>At JdbcTemplate.java:[line 848]<br/>Sink method org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;[Ljava/lang/Object;[ILorg/springframework/jdbc/core/RowMapper;)Ljava/util/List;<br/>Sink parameter 3<br/>Unknown source org/springframework/jdbc/core/JdbcTemplate.queryForList(Ljava/lang/String;[Ljava/lang/Object;[I)Ljava/util/List; parameter 2<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67851');">
<td>
<span class="priority-2">SECSQLISPRJDBC</span>
</td>
<td>This use of org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;[Ljava/lang/Object;[ILorg/springframework/jdbc/core/RowMapper;)Ljava/util/List; can be vulnerable to SQL injection (with Spring JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67851" style="display: none;">
<a href="#SQL_INJECTION_SPRING_JDBC">Bug type SQL_INJECTION_SPRING_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.JdbcTemplate<br/>In method org.springframework.jdbc.core.JdbcTemplate.queryForList(String, Object[], int[], Class)<br/>At JdbcTemplate.java:[line 833]<br/>Sink method org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;[Ljava/lang/Object;[ILorg/springframework/jdbc/core/RowMapper;)Ljava/util/List;<br/>Sink parameter 3<br/>Unknown source org/springframework/jdbc/core/JdbcTemplate.queryForList(Ljava/lang/String;[Ljava/lang/Object;[ILjava/lang/Class;)Ljava/util/List; parameter 3<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67925');">
<td>
<span class="priority-2">SECSQLISPRJDBC</span>
</td>
<td>This use of org/springframework/jdbc/core/JdbcTemplate.queryForObject(Ljava/lang/String;Lorg/springframework/jdbc/core/RowMapper;)Ljava/lang/Object; can be vulnerable to SQL injection (with Spring JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67925" style="display: none;">
<a href="#SQL_INJECTION_SPRING_JDBC">Bug type SQL_INJECTION_SPRING_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.JdbcTemplate<br/>In method org.springframework.jdbc.core.JdbcTemplate.queryForMap(String)<br/>At JdbcTemplate.java:[line 489]<br/>Sink method org/springframework/jdbc/core/JdbcTemplate.queryForObject(Ljava/lang/String;Lorg/springframework/jdbc/core/RowMapper;)Ljava/lang/Object;<br/>Sink parameter 1<br/>Unknown source org/springframework/jdbc/core/JdbcTemplate.queryForMap(Ljava/lang/String;)Ljava/util/Map; parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67999');">
<td>
<span class="priority-2">SECSQLISPRJDBC</span>
</td>
<td>This use of org/springframework/jdbc/core/JdbcTemplate.queryForObject(Ljava/lang/String;[Ljava/lang/Object;Lorg/springframework/jdbc/core/RowMapper;)Ljava/lang/Object; can be vulnerable to SQL injection (with Spring JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67999" style="display: none;">
<a href="#SQL_INJECTION_SPRING_JDBC">Bug type SQL_INJECTION_SPRING_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.JdbcTemplate<br/>In method org.springframework.jdbc.core.JdbcTemplate.queryForMap(String, Object[])<br/>At JdbcTemplate.java:[line 828]<br/>Sink method org/springframework/jdbc/core/JdbcTemplate.queryForObject(Ljava/lang/String;[Ljava/lang/Object;Lorg/springframework/jdbc/core/RowMapper;)Ljava/lang/Object;<br/>Sink parameter 2<br/>Unknown source org/springframework/jdbc/core/JdbcTemplate.queryForMap(Ljava/lang/String;[Ljava/lang/Object;)Ljava/util/Map; parameter 1<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68073');">
<td>
<span class="priority-2">SECSQLISPRJDBC</span>
</td>
<td>This use of org/springframework/jdbc/core/JdbcTemplate.queryForObject(Ljava/lang/String;[Ljava/lang/Object;[ILorg/springframework/jdbc/core/RowMapper;)Ljava/lang/Object; can be vulnerable to SQL injection (with Spring JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68073" style="display: none;">
<a href="#SQL_INJECTION_SPRING_JDBC">Bug type SQL_INJECTION_SPRING_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.JdbcTemplate<br/>In method org.springframework.jdbc.core.JdbcTemplate.queryForMap(String, Object[], int[])<br/>At JdbcTemplate.java:[line 823]<br/>Sink method org/springframework/jdbc/core/JdbcTemplate.queryForObject(Ljava/lang/String;[Ljava/lang/Object;[ILorg/springframework/jdbc/core/RowMapper;)Ljava/lang/Object;<br/>Sink parameter 3<br/>Unknown source org/springframework/jdbc/core/JdbcTemplate.queryForMap(Ljava/lang/String;[Ljava/lang/Object;[I)Ljava/util/Map; parameter 2<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68147');">
<td>
<span class="priority-2">SECSQLISPRJDBC</span>
</td>
<td>This use of org/springframework/jdbc/core/JdbcTemplate.queryForObject(Ljava/lang/String;Lorg/springframework/jdbc/core/RowMapper;)Ljava/lang/Object; can be vulnerable to SQL injection (with Spring JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68147" style="display: none;">
<a href="#SQL_INJECTION_SPRING_JDBC">Bug type SQL_INJECTION_SPRING_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.JdbcTemplate<br/>In method org.springframework.jdbc.core.JdbcTemplate.queryForObject(String, Class)<br/>At JdbcTemplate.java:[line 500]<br/>Sink method org/springframework/jdbc/core/JdbcTemplate.queryForObject(Ljava/lang/String;Lorg/springframework/jdbc/core/RowMapper;)Ljava/lang/Object;<br/>Sink parameter 1<br/>Unknown source org/springframework/jdbc/core/JdbcTemplate.queryForObject(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object; parameter 1<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68221');">
<td>
<span class="priority-2">SECSQLISPRJDBC</span>
</td>
<td>This use of org/springframework/jdbc/core/JdbcTemplate.queryForObject(Ljava/lang/String;[Ljava/lang/Object;Lorg/springframework/jdbc/core/RowMapper;)Ljava/lang/Object; can be vulnerable to SQL injection (with Spring JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68221" style="display: none;">
<a href="#SQL_INJECTION_SPRING_JDBC">Bug type SQL_INJECTION_SPRING_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.JdbcTemplate<br/>In method org.springframework.jdbc.core.JdbcTemplate.queryForObject(String, Class, Object[])<br/>At JdbcTemplate.java:[line 818]<br/>Sink method org/springframework/jdbc/core/JdbcTemplate.queryForObject(Ljava/lang/String;[Ljava/lang/Object;Lorg/springframework/jdbc/core/RowMapper;)Ljava/lang/Object;<br/>Sink parameter 2<br/>Unknown source org/springframework/jdbc/core/JdbcTemplate.queryForObject(Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Object;)Ljava/lang/Object; parameter 2<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68295');">
<td>
<span class="priority-2">SECSQLISPRJDBC</span>
</td>
<td>This use of org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;Lorg/springframework/jdbc/core/RowMapper;)Ljava/util/List; can be vulnerable to SQL injection (with Spring JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68295" style="display: none;">
<a href="#SQL_INJECTION_SPRING_JDBC">Bug type SQL_INJECTION_SPRING_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.JdbcTemplate<br/>In method org.springframework.jdbc.core.JdbcTemplate.queryForObject(String, RowMapper)<br/>At JdbcTemplate.java:[line 494]<br/>Sink method org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;Lorg/springframework/jdbc/core/RowMapper;)Ljava/util/List;<br/>Sink parameter 1<br/>Unknown source org/springframework/jdbc/core/JdbcTemplate.queryForObject(Ljava/lang/String;Lorg/springframework/jdbc/core/RowMapper;)Ljava/lang/Object; parameter 1<br/>Method usage not detected<br/>At JdbcTemplate.java:[line 489]<br/>At JdbcTemplate.java:[line 500]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68389');">
<td>
<span class="priority-2">SECSQLISPRJDBC</span>
</td>
<td>This use of org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;[Ljava/lang/Object;Lorg/springframework/jdbc/core/ResultSetExtractor;)Ljava/lang/Object; can be vulnerable to SQL injection (with Spring JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68389" style="display: none;">
<a href="#SQL_INJECTION_SPRING_JDBC">Bug type SQL_INJECTION_SPRING_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.JdbcTemplate<br/>In method org.springframework.jdbc.core.JdbcTemplate.queryForObject(String, RowMapper, Object[])<br/>At JdbcTemplate.java:[line 800]<br/>Sink method org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;[Ljava/lang/Object;Lorg/springframework/jdbc/core/ResultSetExtractor;)Ljava/lang/Object;<br/>Sink parameter 2<br/>Unknown source org/springframework/jdbc/core/JdbcTemplate.queryForObject(Ljava/lang/String;Lorg/springframework/jdbc/core/RowMapper;[Ljava/lang/Object;)Ljava/lang/Object; parameter 2<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68463');">
<td>
<span class="priority-2">SECSQLISPRJDBC</span>
</td>
<td>This use of org/springframework/jdbc/core/JdbcTemplate.queryForObject(Ljava/lang/String;[Ljava/lang/Object;Lorg/springframework/jdbc/core/RowMapper;)Ljava/lang/Object; can be vulnerable to SQL injection (with Spring JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68463" style="display: none;">
<a href="#SQL_INJECTION_SPRING_JDBC">Bug type SQL_INJECTION_SPRING_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.JdbcTemplate<br/>In method org.springframework.jdbc.core.JdbcTemplate.queryForObject(String, Object[], Class)<br/>At JdbcTemplate.java:[line 813]<br/>Sink method org/springframework/jdbc/core/JdbcTemplate.queryForObject(Ljava/lang/String;[Ljava/lang/Object;Lorg/springframework/jdbc/core/RowMapper;)Ljava/lang/Object;<br/>Sink parameter 2<br/>Unknown source org/springframework/jdbc/core/JdbcTemplate.queryForObject(Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object; parameter 2<br/>At AbstractJdbcInsert.java:[line 233]<br/>At AbstractJdbcInsert.java:[line 464]<br/>At AbstractJdbcInsert.java:[line 466]<br/>At AbstractJdbcInsert.java:[line 468]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68572');">
<td>
<span class="priority-2">SECSQLISPRJDBC</span>
</td>
<td>This use of org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;[Ljava/lang/Object;Lorg/springframework/jdbc/core/ResultSetExtractor;)Ljava/lang/Object; can be vulnerable to SQL injection (with Spring JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68572" style="display: none;">
<a href="#SQL_INJECTION_SPRING_JDBC">Bug type SQL_INJECTION_SPRING_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.JdbcTemplate<br/>In method org.springframework.jdbc.core.JdbcTemplate.queryForObject(String, Object[], RowMapper)<br/>At JdbcTemplate.java:[line 794]<br/>Sink method org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;[Ljava/lang/Object;Lorg/springframework/jdbc/core/ResultSetExtractor;)Ljava/lang/Object;<br/>Sink parameter 2<br/>Unknown source org/springframework/jdbc/core/JdbcTemplate.queryForObject(Ljava/lang/String;[Ljava/lang/Object;Lorg/springframework/jdbc/core/RowMapper;)Ljava/lang/Object; parameter 2<br/>At JdbcTemplate.java:[line 813]<br/>At JdbcTemplate.java:[line 818]<br/>At JdbcTemplate.java:[line 828]<br/>At AbstractJdbcInsert.java:[line 233]<br/>At AbstractJdbcInsert.java:[line 464]<br/>At AbstractJdbcInsert.java:[line 466]<br/>At AbstractJdbcInsert.java:[line 468]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68711');">
<td>
<span class="priority-2">SECSQLISPRJDBC</span>
</td>
<td>This use of org/springframework/jdbc/core/JdbcTemplate.queryForObject(Ljava/lang/String;[Ljava/lang/Object;[ILorg/springframework/jdbc/core/RowMapper;)Ljava/lang/Object; can be vulnerable to SQL injection (with Spring JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68711" style="display: none;">
<a href="#SQL_INJECTION_SPRING_JDBC">Bug type SQL_INJECTION_SPRING_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.JdbcTemplate<br/>In method org.springframework.jdbc.core.JdbcTemplate.queryForObject(String, Object[], int[], Class)<br/>At JdbcTemplate.java:[line 808]<br/>Sink method org/springframework/jdbc/core/JdbcTemplate.queryForObject(Ljava/lang/String;[Ljava/lang/Object;[ILorg/springframework/jdbc/core/RowMapper;)Ljava/lang/Object;<br/>Sink parameter 3<br/>Unknown source org/springframework/jdbc/core/JdbcTemplate.queryForObject(Ljava/lang/String;[Ljava/lang/Object;[ILjava/lang/Class;)Ljava/lang/Object; parameter 3<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68785');">
<td>
<span class="priority-2">SECSQLISPRJDBC</span>
</td>
<td>This use of org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;[Ljava/lang/Object;[ILorg/springframework/jdbc/core/ResultSetExtractor;)Ljava/lang/Object; can be vulnerable to SQL injection (with Spring JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68785" style="display: none;">
<a href="#SQL_INJECTION_SPRING_JDBC">Bug type SQL_INJECTION_SPRING_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.JdbcTemplate<br/>In method org.springframework.jdbc.core.JdbcTemplate.queryForObject(String, Object[], int[], RowMapper)<br/>At JdbcTemplate.java:[line 788]<br/>Sink method org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;[Ljava/lang/Object;[ILorg/springframework/jdbc/core/ResultSetExtractor;)Ljava/lang/Object;<br/>Sink parameter 3<br/>Unknown source org/springframework/jdbc/core/JdbcTemplate.queryForObject(Ljava/lang/String;[Ljava/lang/Object;[ILorg/springframework/jdbc/core/RowMapper;)Ljava/lang/Object; parameter 3<br/>Method usage not detected<br/>At JdbcTemplate.java:[line 808]<br/>At JdbcTemplate.java:[line 823]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68879');">
<td>
<span class="priority-2">SECSQLISPRJDBC</span>
</td>
<td>This use of org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;Lorg/springframework/jdbc/core/ResultSetExtractor;)Ljava/lang/Object; can be vulnerable to SQL injection (with Spring JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68879" style="display: none;">
<a href="#SQL_INJECTION_SPRING_JDBC">Bug type SQL_INJECTION_SPRING_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.JdbcTemplate<br/>In method org.springframework.jdbc.core.JdbcTemplate.queryForRowSet(String)<br/>At JdbcTemplate.java:[line 515]<br/>Sink method org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;Lorg/springframework/jdbc/core/ResultSetExtractor;)Ljava/lang/Object;<br/>Sink parameter 1<br/>Unknown source org/springframework/jdbc/core/JdbcTemplate.queryForRowSet(Ljava/lang/String;)Lorg/springframework/jdbc/support/rowset/SqlRowSet; parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68953');">
<td>
<span class="priority-2">SECSQLISPRJDBC</span>
</td>
<td>This use of org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;[Ljava/lang/Object;Lorg/springframework/jdbc/core/ResultSetExtractor;)Ljava/lang/Object; can be vulnerable to SQL injection (with Spring JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68953" style="display: none;">
<a href="#SQL_INJECTION_SPRING_JDBC">Bug type SQL_INJECTION_SPRING_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.JdbcTemplate<br/>In method org.springframework.jdbc.core.JdbcTemplate.queryForRowSet(String, Object[])<br/>At JdbcTemplate.java:[line 863]<br/>Sink method org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;[Ljava/lang/Object;Lorg/springframework/jdbc/core/ResultSetExtractor;)Ljava/lang/Object;<br/>Sink parameter 2<br/>Unknown source org/springframework/jdbc/core/JdbcTemplate.queryForRowSet(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/jdbc/support/rowset/SqlRowSet; parameter 1<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69027');">
<td>
<span class="priority-2">SECSQLISPRJDBC</span>
</td>
<td>This use of org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;[Ljava/lang/Object;[ILorg/springframework/jdbc/core/ResultSetExtractor;)Ljava/lang/Object; can be vulnerable to SQL injection (with Spring JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69027" style="display: none;">
<a href="#SQL_INJECTION_SPRING_JDBC">Bug type SQL_INJECTION_SPRING_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.JdbcTemplate<br/>In method org.springframework.jdbc.core.JdbcTemplate.queryForRowSet(String, Object[], int[])<br/>At JdbcTemplate.java:[line 858]<br/>Sink method org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;[Ljava/lang/Object;[ILorg/springframework/jdbc/core/ResultSetExtractor;)Ljava/lang/Object;<br/>Sink parameter 3<br/>Unknown source org/springframework/jdbc/core/JdbcTemplate.queryForRowSet(Ljava/lang/String;[Ljava/lang/Object;[I)Lorg/springframework/jdbc/support/rowset/SqlRowSet; parameter 2<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69101');">
<td>
<span class="priority-2">SECSQLISPRJDBC</span>
</td>
<td>This use of org/springframework/jdbc/core/JdbcTemplate.update(Ljava/lang/String;Lorg/springframework/jdbc/core/PreparedStatementSetter;)I can be vulnerable to SQL injection (with Spring JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69101" style="display: none;">
<a href="#SQL_INJECTION_SPRING_JDBC">Bug type SQL_INJECTION_SPRING_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.JdbcTemplate<br/>In method org.springframework.jdbc.core.JdbcTemplate.update(String, Object[])<br/>At JdbcTemplate.java:[line 941]<br/>Sink method org/springframework/jdbc/core/JdbcTemplate.update(Ljava/lang/String;Lorg/springframework/jdbc/core/PreparedStatementSetter;)I<br/>Sink parameter 1<br/>Unknown source org/springframework/jdbc/core/JdbcTemplate.update(Ljava/lang/String;[Ljava/lang/Object;)I parameter 1<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69175');">
<td>
<span class="priority-2">SECSQLISPRJDBC</span>
</td>
<td>This use of org/springframework/jdbc/core/JdbcTemplate.update(Ljava/lang/String;Lorg/springframework/jdbc/core/PreparedStatementSetter;)I can be vulnerable to SQL injection (with Spring JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69175" style="display: none;">
<a href="#SQL_INJECTION_SPRING_JDBC">Bug type SQL_INJECTION_SPRING_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.JdbcTemplate<br/>In method org.springframework.jdbc.core.JdbcTemplate.update(String, Object[], int[])<br/>At JdbcTemplate.java:[line 936]<br/>Sink method org/springframework/jdbc/core/JdbcTemplate.update(Ljava/lang/String;Lorg/springframework/jdbc/core/PreparedStatementSetter;)I<br/>Sink parameter 1<br/>Unknown source org/springframework/jdbc/core/JdbcTemplate.update(Ljava/lang/String;[Ljava/lang/Object;[I)I parameter 2<br/>At AbstractJdbcInsert.java:[line 233]<br/>At AbstractJdbcInsert.java:[line 362]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70301');">
<td>
<span class="priority-2">SECSQLISPRJDBC</span>
</td>
<td>This use of org/springframework/jdbc/core/JdbcOperations.batchUpdate(Ljava/lang/String;Lorg/springframework/jdbc/core/BatchPreparedStatementSetter;)[I can be vulnerable to SQL injection (with Spring JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70301" style="display: none;">
<a href="#SQL_INJECTION_SPRING_JDBC">Bug type SQL_INJECTION_SPRING_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.namedparam.NamedParameterBatchUpdateUtils<br/>In method org.springframework.jdbc.core.namedparam.NamedParameterBatchUpdateUtils.executeBatchUpdateWithNamedParameters(ParsedSql, SqlParameterSource[], JdbcOperations)<br/>At NamedParameterBatchUpdateUtils.java:[line 40]<br/>Sink method org/springframework/jdbc/core/JdbcOperations.batchUpdate(Ljava/lang/String;Lorg/springframework/jdbc/core/BatchPreparedStatementSetter;)[I<br/>Sink parameter 1<br/>Unknown source org/springframework/jdbc/core/namedparam/ParsedSql.getOriginalSql()Ljava/lang/String;<br/>Unknown source org/springframework/jdbc/core/namedparam/ParsedSql.originalSql<br/>Unknown source org/springframework/jdbc/core/namedparam/NamedParameterUtils.substituteNamedParameters(Lorg/springframework/jdbc/core/namedparam/ParsedSql;Lorg/springframework/jdbc/core/namedparam/SqlParameterSource;)Ljava/lang/String;<br/>At NamedParameterBatchUpdateUtils.java:[line 39]<br/>At NamedParameterUtils.java:[line 259]<br/>At NamedParameterUtils.java:[line 268]<br/>At NamedParameterUtils.java:[line 279]<br/>At NamedParameterUtils.java:[line 285]<br/>At NamedParameterUtils.java:[line 288]<br/>At NamedParameterUtils.java:[line 290]<br/>At NamedParameterUtils.java:[line 292]<br/>At NamedParameterUtils.java:[line 295]<br/>At NamedParameterUtils.java:[line 300]<br/>At NamedParameterUtils.java:[line 304]<br/>At NamedParameterUtils.java:[line 308]<br/>At NamedParameterUtils.java:[line 309]<br/>At ParsedSql.java:[line 56]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70520');">
<td>
<span class="priority-2">SECSQLISPRJDBC</span>
</td>
<td>This use of org/springframework/jdbc/core/PreparedStatementCreatorFactory.&lt;init&gt;(Ljava/lang/String;Ljava/util/List;)V can be vulnerable to SQL injection (with Spring JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70520" style="display: none;">
<a href="#SQL_INJECTION_SPRING_JDBC">Bug type SQL_INJECTION_SPRING_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate<br/>In method org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.getPreparedStatementCreator(String, SqlParameterSource)<br/>At NamedParameterJdbcTemplate.java:[line 350]<br/>Sink method org/springframework/jdbc/core/PreparedStatementCreatorFactory.&lt;init&gt;(Ljava/lang/String;Ljava/util/List;)V<br/>Sink parameter 1<br/>Unknown source org/springframework/jdbc/core/namedparam/ParsedSql.getOriginalSql()Ljava/lang/String;<br/>Unknown source org/springframework/jdbc/core/namedparam/ParsedSql.originalSql<br/>Unknown source org/springframework/jdbc/core/namedparam/NamedParameterUtils.substituteNamedParameters(Lorg/springframework/jdbc/core/namedparam/ParsedSql;Lorg/springframework/jdbc/core/namedparam/SqlParameterSource;)Ljava/lang/String;<br/>At NamedParameterJdbcTemplate.java:[line 347]<br/>At NamedParameterUtils.java:[line 259]<br/>At NamedParameterUtils.java:[line 268]<br/>At NamedParameterUtils.java:[line 279]<br/>At NamedParameterUtils.java:[line 285]<br/>At NamedParameterUtils.java:[line 288]<br/>At NamedParameterUtils.java:[line 290]<br/>At NamedParameterUtils.java:[line 292]<br/>At NamedParameterUtils.java:[line 295]<br/>At NamedParameterUtils.java:[line 300]<br/>At NamedParameterUtils.java:[line 304]<br/>At NamedParameterUtils.java:[line 308]<br/>At NamedParameterUtils.java:[line 309]<br/>At ParsedSql.java:[line 56]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70739');">
<td>
<span class="priority-2">SECSQLISPRJDBC</span>
</td>
<td>This use of org/springframework/jdbc/core/PreparedStatementCreatorFactory.&lt;init&gt;(Ljava/lang/String;Ljava/util/List;)V can be vulnerable to SQL injection (with Spring JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70739" style="display: none;">
<a href="#SQL_INJECTION_SPRING_JDBC">Bug type SQL_INJECTION_SPRING_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate<br/>In method org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.update(String, SqlParameterSource, KeyHolder, String[])<br/>At NamedParameterJdbcTemplate.java:[line 311]<br/>Sink method org/springframework/jdbc/core/PreparedStatementCreatorFactory.&lt;init&gt;(Ljava/lang/String;Ljava/util/List;)V<br/>Sink parameter 1<br/>Unknown source org/springframework/jdbc/core/namedparam/ParsedSql.getOriginalSql()Ljava/lang/String;<br/>Unknown source org/springframework/jdbc/core/namedparam/ParsedSql.originalSql<br/>Unknown source org/springframework/jdbc/core/namedparam/NamedParameterUtils.substituteNamedParameters(Lorg/springframework/jdbc/core/namedparam/ParsedSql;Lorg/springframework/jdbc/core/namedparam/SqlParameterSource;)Ljava/lang/String;<br/>At NamedParameterJdbcTemplate.java:[line 308]<br/>At NamedParameterUtils.java:[line 259]<br/>At NamedParameterUtils.java:[line 268]<br/>At NamedParameterUtils.java:[line 279]<br/>At NamedParameterUtils.java:[line 285]<br/>At NamedParameterUtils.java:[line 288]<br/>At NamedParameterUtils.java:[line 290]<br/>At NamedParameterUtils.java:[line 292]<br/>At NamedParameterUtils.java:[line 295]<br/>At NamedParameterUtils.java:[line 300]<br/>At NamedParameterUtils.java:[line 304]<br/>At NamedParameterUtils.java:[line 308]<br/>At NamedParameterUtils.java:[line 309]<br/>At ParsedSql.java:[line 56]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71146');">
<td>
<span class="priority-2">SECSQLISPRJDBC</span>
</td>
<td>This use of org/springframework/jdbc/core/JdbcTemplate.batchUpdate(Ljava/lang/String;Lorg/springframework/jdbc/core/BatchPreparedStatementSetter;)[I can be vulnerable to SQL injection (with Spring JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71146" style="display: none;">
<a href="#SQL_INJECTION_SPRING_JDBC">Bug type SQL_INJECTION_SPRING_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.simple.AbstractJdbcInsert<br/>In method org.springframework.jdbc.core.simple.AbstractJdbcInsert.executeBatchInternal(List)<br/>At AbstractJdbcInsert.java:[line 576]<br/>Sink method org/springframework/jdbc/core/JdbcTemplate.batchUpdate(Ljava/lang/String;Lorg/springframework/jdbc/core/BatchPreparedStatementSetter;)[I<br/>Sink parameter 1<br/>Unknown source org/springframework/jdbc/core/simple/AbstractJdbcInsert.insertString<br/>Unknown source org/springframework/jdbc/core/simple/AbstractJdbcInsert.getInsertString()Ljava/lang/String;<br/>At AbstractJdbcInsert.java:[line 233]<br/>At AbstractJdbcInsert.java:[line 576]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71240');">
<td>
<span class="priority-2">SECSQLISPRJDBC</span>
</td>
<td>This use of org/springframework/jdbc/core/JdbcTemplate.queryForObject(Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object; can be vulnerable to SQL injection (with Spring JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71240" style="display: none;">
<a href="#SQL_INJECTION_SPRING_JDBC">Bug type SQL_INJECTION_SPRING_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.simple.AbstractJdbcInsert<br/>In method org.springframework.jdbc.core.simple.AbstractJdbcInsert.executeInsertAndReturnKeyHolderInternal(List)<br/>At AbstractJdbcInsert.java:[line 468]<br/>Sink method org/springframework/jdbc/core/JdbcTemplate.queryForObject(Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;<br/>Sink parameter 2<br/>Unknown source org/springframework/jdbc/core/simple/AbstractJdbcInsert.insertString<br/>Unknown source org/springframework/jdbc/core/metadata/TableMetaDataProvider.getSimpleQueryForGetGeneratedKey(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/springframework/jdbc/core/simple/AbstractJdbcInsert.getInsertString()Ljava/lang/String;<br/>Unknown source org/springframework/jdbc/core/metadata/TableMetaDataContext.getSimulationQueryForGetGeneratedKey(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At AbstractJdbcInsert.java:[line 233]<br/>At AbstractJdbcInsert.java:[line 464]<br/>At AbstractJdbcInsert.java:[line 466]<br/>At AbstractJdbcInsert.java:[line 468]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71364');">
<td>
<span class="priority-2">SECSQLISPRJDBC</span>
</td>
<td>This use of org/springframework/jdbc/core/JdbcTemplate.update(Ljava/lang/String;[Ljava/lang/Object;[I)I can be vulnerable to SQL injection (with Spring JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71364" style="display: none;">
<a href="#SQL_INJECTION_SPRING_JDBC">Bug type SQL_INJECTION_SPRING_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.simple.AbstractJdbcInsert<br/>In method org.springframework.jdbc.core.simple.AbstractJdbcInsert.executeInsertInternal(List)<br/>At AbstractJdbcInsert.java:[line 362]<br/>Sink method org/springframework/jdbc/core/JdbcTemplate.update(Ljava/lang/String;[Ljava/lang/Object;[I)I<br/>Sink parameter 2<br/>Unknown source org/springframework/jdbc/core/simple/AbstractJdbcInsert.insertString<br/>Unknown source org/springframework/jdbc/core/simple/AbstractJdbcInsert.getInsertString()Ljava/lang/String;<br/>At AbstractJdbcInsert.java:[line 233]<br/>At AbstractJdbcInsert.java:[line 362]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71606');">
<td>
<span class="priority-2">SECSQLISPRJDBC</span>
</td>
<td>This use of org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;Lorg/springframework/jdbc/core/RowCallbackHandler;)V can be vulnerable to SQL injection (with Spring JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71606" style="display: none;">
<a href="#SQL_INJECTION_SPRING_JDBC">Bug type SQL_INJECTION_SPRING_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.core.support.JdbcBeanDefinitionReader<br/>In method org.springframework.jdbc.core.support.JdbcBeanDefinitionReader.loadBeanDefinitions(String)<br/>At JdbcBeanDefinitionReader.java:[line 108]<br/>Sink method org/springframework/jdbc/core/JdbcTemplate.query(Ljava/lang/String;Lorg/springframework/jdbc/core/RowCallbackHandler;)V<br/>Sink parameter 1<br/>Unknown source org/springframework/jdbc/core/support/JdbcBeanDefinitionReader.loadBeanDefinitions(Ljava/lang/String;)V parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N72144');">
<td>
<span class="priority-2">SECSQLISPRJDBC</span>
</td>
<td>This use of org/springframework/jdbc/core/JdbcTemplate.batchUpdate(Ljava/lang/String;Lorg/springframework/jdbc/core/BatchPreparedStatementSetter;)[I can be vulnerable to SQL injection (with Spring JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N72144" style="display: none;">
<a href="#SQL_INJECTION_SPRING_JDBC">Bug type SQL_INJECTION_SPRING_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.object.BatchSqlUpdate<br/>In method org.springframework.jdbc.object.BatchSqlUpdate.flush()<br/>At BatchSqlUpdate.java:[line 184]<br/>Sink method org/springframework/jdbc/core/JdbcTemplate.batchUpdate(Ljava/lang/String;Lorg/springframework/jdbc/core/BatchPreparedStatementSetter;)[I<br/>Sink parameter 1<br/>Unknown source org/springframework/jdbc/object/RdbmsOperation.sql<br/>Unknown source org/springframework/jdbc/object/BatchSqlUpdate.getSql()Ljava/lang/String;<br/>At BatchSqlUpdate.java:[line 185]<br/>At RdbmsOperation.java:[line 241]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N72238');">
<td>
<span class="priority-2">SECSQLISPRJDBC</span>
</td>
<td>This use of org/springframework/jdbc/core/PreparedStatementCreatorFactory.&lt;init&gt;(Ljava/lang/String;Ljava/util/List;)V can be vulnerable to SQL injection (with Spring JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N72238" style="display: none;">
<a href="#SQL_INJECTION_SPRING_JDBC">Bug type SQL_INJECTION_SPRING_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.object.SqlOperation<br/>In method org.springframework.jdbc.object.SqlOperation.compileInternal()<br/>At SqlOperation.java:[line 56]<br/>Sink method org/springframework/jdbc/core/PreparedStatementCreatorFactory.&lt;init&gt;(Ljava/lang/String;Ljava/util/List;)V<br/>Sink parameter 1<br/>Unknown source org/springframework/jdbc/object/SqlOperation.getSql()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N72307');">
<td>
<span class="priority-2">SECSQLISPRJDBC</span>
</td>
<td>This use of org/springframework/jdbc/core/PreparedStatementCreatorFactory.newPreparedStatementCreator(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/jdbc/core/PreparedStatementCreator; can be vulnerable to SQL injection (with Spring JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N72307" style="display: none;">
<a href="#SQL_INJECTION_SPRING_JDBC">Bug type SQL_INJECTION_SPRING_JDBC (click for details)</a>
<br/>In class org.springframework.jdbc.object.SqlOperation<br/>In method org.springframework.jdbc.object.SqlOperation.newPreparedStatementCreator(String, Object[])<br/>At SqlOperation.java:[line 116]<br/>Sink method org/springframework/jdbc/core/PreparedStatementCreatorFactory.newPreparedStatementCreator(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/jdbc/core/PreparedStatementCreator;<br/>Sink parameter 1<br/>Unknown source org/springframework/jdbc/object/SqlOperation.newPreparedStatementCreator(Ljava/lang/String;[Ljava/lang/Object;)Lorg/springframework/jdbc/core/PreparedStatementCreator; parameter 1<br/>Method usage not detected</p>
</td>
</tr>
</table>
<h1>
<a name="Details">Details</a>
</h1>
<h2>
<a name="EXTERNAL_CONFIG_CONTROL">EXTERNAL_CONFIG_CONTROL: Potential external control of configuration</a>
</h2>
            
<p>
    Allowing external control of system settings can disrupt service or cause an application
    to behave in unexpected, and potentially malicious ways.
    An attacker could cause an error by providing a nonexistent catalog name
    or connect to an unauthorized portion of the database.
</p>
<br/>
<p>
<b>Code at risk:</b><br/>
<pre>conn.setCatalog(request.getParameter("catalog"));</pre>
</p>
<br/>
<p>
    <b>References</b><br/>
    <a href="https://cwe.mitre.org/data/definitions/15.html">CWE-15: External Control of System or Configuration Setting</a><br/>
</p>

        
<h2>
<a name="CRLF_INJECTION_LOGS">CRLF_INJECTION_LOGS: Potential CRLF Injection for logs</a>
</h2>
            
<p>
    When data from an untrusted source is put into a logger and not neutralized correctly,
    an attacker could forge log entries or include malicious content.
    Inserted false entries could be used to skew statistics, distract the administrator
    or even to implicate another party in the commission of a malicious act.
    If the log file is processed automatically, the attacker can render the file unusable
    by corrupting the format of the file or injecting unexpected characters.
    An attacker may also inject code or other commands into the log file and take advantage
    of a vulnerability in the log processing utility (e.g. command injection or XSS).
</p>
<br/>
<p>
<b>Code at risk:</b><br/>
<pre>String val = request.getParameter("user");
String metadata = request.getParameter("metadata");
[...]
if(authenticated) {
    log.info("User " + val + " (" + metadata + ") was authenticated successfully");
}
else {
    log.info("User " + val + " (" + metadata + ") was not authenticated");
}
</pre>

A malicious user could send the metadata parameter with the value: <code>"Firefox) was authenticated successfully\r\n[INFO] User bbb (Internet Explorer"</code>.
</p>

<b>Solution:</b><br/>
<p>
You can manually sanitize each parameter.
<pre>
log.info("User " + val.replaceAll("[\r\n]","") + " (" + userAgent.replaceAll("[\r\n]","") + ") was not authenticated");
</pre>
</p>

<p>
You can also configure your logger service to replace new line for all message events. Here is sample configuration for LogBack <a href="https://logback.qos.ch/manual/layouts.html#replace">using the <code>replace</code> function</a>.
<pre>
&lt;pattern&gt;%-5level - %replace(%msg){'[\r\n]', ''}%n&lt;/pattern&gt;
</pre>
</p>

<p>
Finally, you can use a logger implementation that replace new line by spaces.
The project <a href="https://github.com/javabeanz/owasp-security-logging">OWASP Security Logging</a> has an implementation for Logback and Log4j.
</p>

<br/>
<p>
    <b>References</b><br/>
    <a href="https://cwe.mitre.org/data/definitions/117.html">CWE-117: Improper Output Neutralization for Logs</a><br/>
    <a href="https://cwe.mitre.org/data/definitions/93.html">CWE-93: Improper Neutralization of CRLF Sequences ('CRLF Injection')</a><br/>
    <a href="https://logback.qos.ch/manual/layouts.html#replace">CWE-93: Improper Neutralization of CRLF Sequences ('CRLF Injection')</a><br/>
    <a href="https://github.com/javabeanz/owasp-security-logging">OWASP Security Logging</a><br/>
</p>


        
<h2>
<a name="HARD_CODE_PASSWORD">HARD_CODE_PASSWORD: Hard coded password</a>
</h2>
            
<p>
Passwords should not be kept in the source code. The source code can be widely shared in an enterprise environment, and is
certainly shared in open source. To be managed safely, passwords and secret keys should be stored in separate configuration files or keystores.
(Hard coded keys are reported separately by <i>Hard Coded Key</i> pattern)
</p>
<p>
<p><b>Vulnerable Code:</b><br/>

<pre>private String SECRET_PASSWORD = "letMeIn!";

Properties props = new Properties();
props.put(Context.SECURITY_CREDENTIALS, "p@ssw0rd");</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/259.html">CWE-259: Use of Hard-coded Password</a>
</p>

        
<h2>
<a name="SQL_INJECTION_JDBC">SQL_INJECTION_JDBC: Potential JDBC Injection</a>
</h2>
            
<p>
The input values included in SQL queries need to be passed in safely.
Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection.
</p>

<p>
    <b>Vulnerable Code:</b><br/>
    <pre>Connection conn = [...];
Statement stmt = con.createStatement();
ResultSet rs = stmt.executeQuery("update COFFEES set SALES = "+nbSales+" where COF_NAME = '"+coffeeName+"'");</pre>
</p>
<p>
    <b>Solution:</b><br/>
    <pre>Connection conn = [...];
conn.prepareStatement("update COFFEES set SALES = ? where COF_NAME = ?");
updateSales.setInt(1, nbSales);
updateSales.setString(2, coffeeName);</pre>
</p>
<br/>

<b>References (JDBC)</b><br/>
<a href="https://docs.oracle.com/javase/tutorial/jdbc/basics/prepared.html">Oracle Documentation: The Java Tutorials &gt; Prepared Statements</a><br/>
<b>References (SQL injection)</b><br/>
<a href="http://projects.webappsec.org/w/page/13246963/SQL%20Injection">WASC-19: SQL Injection</a><br/>
<a href="https://capec.mitre.org/data/definitions/66.html">CAPEC-66: SQL Injection</a><br/>
<a href="https://cwe.mitre.org/data/definitions/89.html">CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')</a><br/>
<a href="https://www.owasp.org/index.php/Top_10_2013-A1-Injection">OWASP: Top 10 2013-A1-Injection</a><br/>
<a href="https://www.owasp.org/index.php/SQL_Injection_Prevention_Cheat_Sheet">OWASP: SQL Injection Prevention Cheat Sheet</a><br/>
<a href="https://www.owasp.org/index.php/Query_Parameterization_Cheat_Sheet">OWASP: Query Parameterization Cheat Sheet</a><br/>
</p>

        
<h2>
<a name="SQL_INJECTION_SPRING_JDBC">SQL_INJECTION_SPRING_JDBC: Potential JDBC Injection (Spring JDBC)</a>
</h2>
            
<p>
The input values included in SQL queries need to be passed in safely.
Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection.
</p>

<p>
    <b>Vulnerable Code:</b><br/>
    <pre>JdbcTemplate jdbc = new JdbcTemplate();
int count = jdbc.queryForObject("select count(*) from Users where name = '"+paramName+"'", Integer.class);
</pre>
</p>
<p>
    <b>Solution:</b><br/>
    <pre>JdbcTemplate jdbc = new JdbcTemplate();
int count = jdbc.queryForObject("select count(*) from Users where name = ?", Integer.class, paramName);</pre>
</p>
<br/>

<b>References (Spring JDBC)</b><br/>
<a href="https://spring.io/guides/gs/relational-data-access/">Spring Official Documentation: Data access with JDBC</a><br/>
<b>References (SQL injection)</b><br/>
<a href="http://projects.webappsec.org/w/page/13246963/SQL%20Injection">WASC-19: SQL Injection</a><br/>
<a href="https://capec.mitre.org/data/definitions/66.html">CAPEC-66: SQL Injection</a><br/>
<a href="https://cwe.mitre.org/data/definitions/89.html">CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')</a><br/>
<a href="https://www.owasp.org/index.php/Top_10_2013-A1-Injection">OWASP: Top 10 2013-A1-Injection</a><br/>
<a href="https://www.owasp.org/index.php/SQL_Injection_Prevention_Cheat_Sheet">OWASP: SQL Injection Prevention Cheat Sheet</a><br/>
<a href="https://www.owasp.org/index.php/Query_Parameterization_Cheat_Sheet">OWASP: Query Parameterization Cheat Sheet</a><br/>
</p>

        </body>
</html>
