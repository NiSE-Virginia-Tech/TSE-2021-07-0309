[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 737.1 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 16 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 18
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.06

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 19
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.11

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 22
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.14

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.17

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 24
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.21

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 25
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.24

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 26
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.27

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 27
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.3

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 27
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 27
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.37

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 27
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.41

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 28
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.43

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 29
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.45

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 14 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.47

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 15 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 16 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.53

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 17 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.57

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 18 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.6

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 19 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.63

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 20 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 21 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.7

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 22 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.73

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 23 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.77

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 24 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.8

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 25 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.83

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 26 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.87

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 27 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.9

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 28 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.93

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 29 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.97

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: javax.crypto.spec.PBEParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>(r2, i1)
		Method: <org.springframework.security.crypto.encrypt.CipherUtils: void initCipher(javax.crypto.Cipher,int,javax.crypto.SecretKey,byte[],int)>
		SHA-256: 56bb715f3d09eca821f2ca95c037f104c2cf4ed435022ffd3bb54c170a4cd7ff
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <org.springframework.security.authentication.encoding.MessageDigestPasswordEncoder: java.security.MessageDigest getMessageDigest()>
		SHA-256: 76dc9976f7f625091676d24539f53ae7139bd9f32f44d4a8a7e9e9c32370b927
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <org.springframework.security.core.token.Sha512DigestUtils: byte[] sha(byte[])>
		SHA-256: 7bbb0a94a914536d27584ee87a2754f69922bd15adc7b47da8ea1217b079297e
		Secure: true
	Object:
		Variable: r10
		Type: byte[]
		Statement: r10 = virtualinvoke r4.<java.security.MessageDigest: byte[] digest(byte[])>(r10)
		Method: <org.springframework.security.authentication.encoding.MessageDigestPasswordEncoder: java.lang.String encodePassword(java.lang.String,java.lang.Object)>
		SHA-256: 6b877ff2212d113ef5feda0fd8fb8361fa52f6d12c24a5387b5c66bb67073324
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <org.springframework.security.crypto.keygen.SecureRandomBytesKeyGenerator: void <init>(int)>
		SHA-256: 92396b4e24a694cdce2f9ba43c11ef2e6a4ae859cd99793187afdc3848a7b553
		Secure: true
	Object:
		Variable: varReplacer1150
		Type: java.lang.String
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r11, varReplacer1150)
		Method: <org.springframework.security.crypto.encrypt.AesBytesEncryptor: void <init>(java.lang.String,java.lang.CharSequence,org.springframework.security.crypto.keygen.BytesKeyGenerator,org.springframework.security.crypto.encrypt.AesBytesEncryptor$CipherAlgorithm)>
		SHA-256: bb1c2a3747de6870c5215a15080fdb6c65394dce9cbe4c3a000eef3154ec498d
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.SecretKey
		Statement: $r2 = virtualinvoke r7.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r1)
		Method: <org.springframework.security.crypto.encrypt.CipherUtils: javax.crypto.SecretKey newSecretKey(java.lang.String,javax.crypto.spec.PBEKeySpec)>
		SHA-256: d831bf5fe2023f6972f250f8b6d11a2c8de90a2a2176dcec3ec642de3f182621
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.Cipher
		Statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r0)
		Method: <org.springframework.security.crypto.encrypt.CipherUtils: javax.crypto.Cipher newCipher(java.lang.String)>
		SHA-256: 3510dea226bbf4e58883f44b54fada1facf902392a64aa93fc45829adb7aeca5
		Secure: false
	Object:
		Variable: r1
		Type: java.security.SecureRandom
		Statement: r1 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>($r3)
		Method: <org.springframework.security.core.token.SecureRandomFactoryBean: java.security.SecureRandom getObject()>
		SHA-256: beb22e8fb4ae7691bb72681e1d364439d4bb336e5f5e020c5568839af41ed23a
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: r10 = virtualinvoke r4.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <org.springframework.security.authentication.encoding.MessageDigestPasswordEncoder: java.lang.String encodePassword(java.lang.String,java.lang.Object)>
		SHA-256: 7c29f11664a164e6a6f9f91e739876adf97a0b704d8bdee13c22403951c834e7
		Secure: true
	Object:
		Variable: varReplacer1148
		Type: int
		Statement: specialinvoke $r7.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r8, $r9, varReplacer1147, varReplacer1148)
		Method: <org.springframework.security.crypto.encrypt.AesBytesEncryptor: void <init>(java.lang.String,java.lang.CharSequence,org.springframework.security.crypto.keygen.BytesKeyGenerator,org.springframework.security.crypto.encrypt.AesBytesEncryptor$CipherAlgorithm)>
		SHA-256: c069b73312f3be3c438acaaa630ddba2af8bf2a1097f7b4df201636518a18c
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r11, varReplacer1150)
		Method: <org.springframework.security.crypto.encrypt.AesBytesEncryptor: void <init>(java.lang.String,java.lang.CharSequence,org.springframework.security.crypto.keygen.BytesKeyGenerator,org.springframework.security.crypto.encrypt.AesBytesEncryptor$CipherAlgorithm)>
		SHA-256: de81f9a73e64915298e2561c53ae423a1914812979f25869633d15e04857b618
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, $r9, $i1, $i0)
		Method: <org.springframework.security.crypto.password.Pbkdf2PasswordEncoder: byte[] encode(java.lang.CharSequence,byte[])>
		SHA-256: d83da7536f1fd0cbcbfd92a9616ef4b04234ed9edf596d247d8be24c72a2d109
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <org.springframework.security.crypto.bcrypt.BCrypt: java.lang.String gensalt(int)>
		SHA-256: a67de5b9ed0e879c6b6283df77abbb3730b453277a6d7a9a1fa7f11283c3df1a
		Secure: true
	Object:
		Variable: r7
		Type: javax.crypto.SecretKeyFactory
		Statement: r7 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(r0)
		Method: <org.springframework.security.crypto.encrypt.CipherUtils: javax.crypto.SecretKey newSecretKey(java.lang.String,javax.crypto.spec.PBEKeySpec)>
		SHA-256: bb4cb90b2579bb41f6dfd677457966105bda15663dc72e2a19bf7b79b125dbe7
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r8, $r9, varReplacer1147, varReplacer1148)
		Method: <org.springframework.security.crypto.encrypt.AesBytesEncryptor: void <init>(java.lang.String,java.lang.CharSequence,org.springframework.security.crypto.keygen.BytesKeyGenerator,org.springframework.security.crypto.encrypt.AesBytesEncryptor$CipherAlgorithm)>
		SHA-256: f69f571c9ae3e916673316c3b363d14581f6bb1a2e3324edb8b5ecc2406cdd7
		Secure: false
	Object:
		Variable: r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r1)
		Method: <org.springframework.security.crypto.encrypt.AesBytesEncryptor$CipherAlgorithm: java.security.spec.AlgorithmParameterSpec getParameterSpec(byte[])>
		SHA-256: fd3fd6ddf704e3791245c845adfc4c74667ed6d54191f1e70f21a4777e508428
		Secure: false
	Object:
		Variable: $i0
		Type: int
		Statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, $r9, $i1, $i0)
		Method: <org.springframework.security.crypto.password.Pbkdf2PasswordEncoder: byte[] encode(java.lang.CharSequence,byte[])>
		SHA-256: 6a5eb59db202afbaee493bdb495a32f85df653b57ae077d0acaa25fe51eab860
		Secure: false
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <org.springframework.security.core.token.Sha512DigestUtils: byte[] sha(byte[])>
		SHA-256: 78f72f298adc70483c58a010c4cce0d351237c888653dfdfe827ad76d1523a07
		Secure: true
	Object:
		Variable: r10
		Type: byte[]
		Statement: r10 = virtualinvoke r4.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <org.springframework.security.authentication.encoding.MessageDigestPasswordEncoder: java.lang.String encodePassword(java.lang.String,java.lang.Object)>
		SHA-256: 938fb5e4b88a96b9da9c04abccb90a444340d091963155f6cebf1dbeab0e5a5b
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.springframework.security.authentication.encoding.LdapShaPasswordEncoder: java.lang.String encodePassword(java.lang.String,java.lang.Object)>
		SHA-256: bc4bfc10c89796b1347376107cf6b4a9429449395afc765d845b998f97423a31
		Secure: false
	Object:
		Variable: r2
		Type: byte[]
		Statement: virtualinvoke r0.<java.security.SecureRandom: void nextBytes(byte[])>(r2)
		Method: <org.springframework.security.crypto.bcrypt.BCrypt: java.lang.String gensalt(int,java.security.SecureRandom)>
		SHA-256: 7f42d59b80d06e96dd083719088eba2505547006dbacff734ca8c6b593799bd1
		Secure: true
	Object:
		Variable: r5
		Type: javax.crypto.spec.GCMParameterSpec
		Statement: specialinvoke r5.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(varReplacer1126, r1)
		Method: <org.springframework.security.crypto.encrypt.AesBytesEncryptor$CipherAlgorithm: java.security.spec.AlgorithmParameterSpec getParameterSpec(byte[])>
		SHA-256: face4821c595583ed6fd2282c6150a8829c769a25531a60442636c45b8514b70
		Secure: false
	Object:
		Variable: $r11
		Type: javax.crypto.SecretKey
		Statement: $r11 = virtualinvoke r3.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r16)
		Method: <org.springframework.security.crypto.password.Pbkdf2PasswordEncoder: byte[] encode(java.lang.CharSequence,byte[])>
		SHA-256: 2c2dbe389d55e84993cb4f639001d632a2d0176621207ff6d7edd226f5cd3a69
		Secure: false
	Object:
		Variable: r3
		Type: java.security.MessageDigest
		Statement: r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer626)
		Method: <org.springframework.security.authentication.encoding.LdapShaPasswordEncoder: java.lang.String encodePassword(java.lang.String,java.lang.Object)>
		SHA-256: 3288fe678b28117f16b6513d596b1348f15c11f0eee6cb7a34de4b1ff93e3cd4
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r0)
		Method: <org.springframework.security.crypto.password.Digester: java.security.MessageDigest createDigest(java.lang.String)>
		SHA-256: de77693b44506e4e1a41c96b15dab91f0dc7d2b3c004718579e6c4f05b9be9a4
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: virtualinvoke r1.<java.security.SecureRandom: void nextBytes(byte[])>($r5)
		Method: <org.springframework.security.core.token.SecureRandomFactoryBean: java.security.SecureRandom getObject()>
		SHA-256: cc87d1e13a49d8b80c412f6648041115ccb5faaeeda96cd14af0d8c038606132
		Secure: false
	Object:
		Variable: r3
		Type: byte[]
		Statement: r3 = virtualinvoke r1.<java.security.MessageDigest: byte[] digest(byte[])>(r3)
		Method: <org.springframework.security.crypto.password.Digester: byte[] digest(byte[])>
		SHA-256: 7020b99396aebe5ecfdc1fca656e06a381bdcbbac58ff268a9af385a882ae2fd
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer81)
		Method: <org.springframework.security.core.token.Sha512DigestUtils: java.security.MessageDigest getSha512Digest()>
		SHA-256: 723d8fef3c8e2cafe77d9543198d17c9f24a32aa58148c04e6f876490b298a60
		Secure: true
	Object:
		Variable: r3
		Type: javax.crypto.SecretKeyFactory
		Statement: r3 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer1074)
		Method: <org.springframework.security.crypto.password.Pbkdf2PasswordEncoder: byte[] encode(java.lang.CharSequence,byte[])>
		SHA-256: 651b53f9294756de969aefc1271efc68a111359a89d7ec906f79844085ee63bb
		Secure: false

Findings in Java Class: org.springframework.security.crypto.encrypt.CipherUtils

	 in Method: javax.crypto.SecretKey newSecretKey(java.lang.String,java.lang.String)
		ForbiddenMethodError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Detected call to forbidden method void <init>(char[]) of class javax.crypto.spec.PBEKeySpec. Instead, call method <javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>.
			at statement: specialinvoke $r2.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>($r3)


	 in Method: javax.crypto.SecretKey newSecretKey(java.lang.String,javax.crypto.spec.PBEKeySpec)
		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #bb4cb90b2579bb41f6dfd677457966105bda15663dc72e2a19bf7b79b125dbe7)
			First parameter (with value "PBKDF2WithHmacSHA1") should be any of {PBKDF2WithHmacSHA512, PBKDF2WithHmacSHA384, PBKDF2WithHmacSHA256, PBKDF2WithHmacSHA224, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r7 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(r0)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r2 = virtualinvoke r7.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r1)


	 in Method: void initCipher(javax.crypto.Cipher,int,javax.crypto.SecretKey,byte[],int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>(r2, i1)


Findings in Java Class: org.springframework.security.authentication.encoding.LdapShaPasswordEncoder

	 in Method: java.lang.String encodePassword(java.lang.String,java.lang.Object)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #3288fe678b28117f16b6513d596b1348f15c11f0eee6cb7a34de4b1ff93e3cd4)
			First parameter (with value "SHA") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer626)


Findings in Java Class: org.springframework.security.crypto.password.Digester

	 in Method: byte[] digest(byte[])
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #de77693b44506e4e1a41c96b15dab91f0dc7d2b3c004718579e6c4f05b9be9a4)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: r1 = staticinvoke <org.springframework.security.crypto.password.Digester: java.security.MessageDigest createDigest(java.lang.String)>($r2)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #de77693b44506e4e1a41c96b15dab91f0dc7d2b3c004718579e6c4f05b9be9a4)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to update, java.security.MessageDigest: byte[] digest(byte[])
			at statement: r3 = virtualinvoke r1.<java.security.MessageDigest: byte[] digest(byte[])>(r3)


Findings in Java Class: org.springframework.security.crypto.password.Pbkdf2PasswordEncoder

	 in Method: byte[] encode(java.lang.CharSequence,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, $r9, $i1, $i0)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #651b53f9294756de969aefc1271efc68a111359a89d7ec906f79844085ee63bb)
			First parameter (with value "PBKDF2WithHmacSHA1") should be any of {PBKDF2WithHmacSHA512, PBKDF2WithHmacSHA384, PBKDF2WithHmacSHA256, PBKDF2WithHmacSHA224, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r3 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer1074)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r11 = virtualinvoke r3.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r16)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #d83da7536f1fd0cbcbfd92a9616ef4b04234ed9edf596d247d8be24c72a2d109)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, $r9, $i1, $i0)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #d83da7536f1fd0cbcbfd92a9616ef4b04234ed9edf596d247d8be24c72a2d109)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r11 = virtualinvoke r3.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r16)


Findings in Java Class: org.springframework.security.crypto.encrypt.AesBytesEncryptor

	 in Method: void <init>(java.lang.String,java.lang.CharSequence,org.springframework.security.crypto.keygen.BytesKeyGenerator,org.springframework.security.crypto.encrypt.AesBytesEncryptor$CipherAlgorithm)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r11, varReplacer1150)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #f69f571c9ae3e916673316c3b363d14581f6bb1a2e3324edb8b5ecc2406cdd7)
			Third parameter (with value 1024)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r7.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r8, $r9, varReplacer1147, varReplacer1148)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #f69f571c9ae3e916673316c3b363d14581f6bb1a2e3324edb8b5ecc2406cdd7)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: r6 = staticinvoke <org.springframework.security.crypto.encrypt.CipherUtils: javax.crypto.SecretKey newSecretKey(java.lang.String,javax.crypto.spec.PBEKeySpec)>(varReplacer1149, r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r7.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r8, $r9, varReplacer1147, varReplacer1148)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #f69f571c9ae3e916673316c3b363d14581f6bb1a2e3324edb8b5ecc2406cdd7)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r7.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r8, $r9, varReplacer1147, varReplacer1148)


Findings in Java Class: org.springframework.security.crypto.encrypt.Encryptors

	 in Method: org.springframework.security.crypto.encrypt.TextEncryptor text(java.lang.CharSequence,java.lang.CharSequence)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #3510dea226bbf4e58883f44b54fada1facf902392a64aa93fc45829adb7aeca5)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: return $r2


	 in Method: org.springframework.security.crypto.encrypt.TextEncryptor delux(java.lang.CharSequence,java.lang.CharSequence)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #3510dea226bbf4e58883f44b54fada1facf902392a64aa93fc45829adb7aeca5)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: return $r2


	 in Method: org.springframework.security.crypto.encrypt.TextEncryptor queryableText(java.lang.CharSequence,java.lang.CharSequence)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #3510dea226bbf4e58883f44b54fada1facf902392a64aa93fc45829adb7aeca5)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: return $r2


Findings in Java Class: org.springframework.security.crypto.encrypt.AesBytesEncryptor$CipherAlgorithm

	 in Method: java.security.spec.AlgorithmParameterSpec getParameterSpec(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.GCMParameterSpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke r5.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(varReplacer1126, r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r1)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 30

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 4
	ForbiddenMethodError: 1
	RequiredPredicateError: 8
	NeverTypeOfError: 2
	IncompleteOperationError: 7
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 11 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 13.40 s

