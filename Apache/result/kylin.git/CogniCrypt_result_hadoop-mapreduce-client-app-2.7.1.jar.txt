[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 531.9 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 1 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 2
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r2
		Type: javax.crypto.KeyGenerator
		Statement: r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer1356)
		Method: <org.apache.hadoop.mapreduce.v2.app.MRAppMaster: void initJobCredentialsAndUGI(org.apache.hadoop.conf.Configuration)>
		SHA-256: 2cc6c4299d1f45fd460d5592ef04ddb754b70ce4cb4b6be209bc20871fa8b158
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.SecretKey
		Statement: $r7 = virtualinvoke r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.apache.hadoop.mapreduce.v2.app.MRAppMaster: void initJobCredentialsAndUGI(org.apache.hadoop.conf.Configuration)>
		SHA-256: 40400ec3473d2c42c233c3b4992504b65b141c335308706d72507a728d84e930
		Secure: false

Findings in Java Class: org.apache.hadoop.mapreduce.v2.app.MRAppMaster

	 in Method: void initJobCredentialsAndUGI(org.apache.hadoop.conf.Configuration)
		ConstraintError violating CrySL rule for javax.crypto.KeyGenerator (on Object #2cc6c4299d1f45fd460d5592ef04ddb754b70ce4cb4b6be209bc20871fa8b158)
			First parameter (with value "HmacSHA1") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer1356)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 2

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 1
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 3.312 s

