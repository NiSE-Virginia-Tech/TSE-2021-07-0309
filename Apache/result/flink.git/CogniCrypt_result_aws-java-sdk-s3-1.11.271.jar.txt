[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 608.3 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 23 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.04

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.09

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.13

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.17

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.22

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.26

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 24
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.29

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 25
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.32

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 25
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.36

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 27
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.37

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 27
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.41

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 27
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.44

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 27
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.48

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 14 of 28
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 15 of 29
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.52

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 16 of 31
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.52

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 17 of 31
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.55

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 18 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.55

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 19 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.58

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 20 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.61

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 21 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.64

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 22 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 23 of 34
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.68

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 24 of 34
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.71

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 25 of 34
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.74

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 26 of 34
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.76

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 27 of 34
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.79

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 28 of 34
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.82

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 29 of 34
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.85

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 30 of 34
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.88

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 31 of 34
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.91

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 32 of 34
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.94

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 33 of 34
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.97

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r30
		Type: javax.crypto.SecretKey
		Statement: r30 = virtualinvoke r4.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.amazonaws.services.s3.internal.crypto.S3CryptoModuleBase: javax.crypto.SecretKey generateCEK(com.amazonaws.services.s3.model.EncryptionMaterials,java.security.Provider)>
		SHA-256: 85cd5717113cf93cac62d829ceee7c3b9e78e52b8da110af66d0696ff24ccdec
		Secure: false
	Object:
		Variable: $r14
		Type: java.lang.String
		Statement: specialinvoke $r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r13, $r14)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial: javax.crypto.SecretKey cekByKMS(byte[],java.lang.String,com.amazonaws.services.s3.model.EncryptionMaterials,com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme,com.amazonaws.services.kms.AWSKMS)>
		SHA-256: 1a371668f4c74cca7f19a48cf59ceb579cdf11fc8d49dd0a9bed13c25ef43653
		Secure: false
	Object:
		Variable: r22
		Type: javax.crypto.Cipher
		Statement: r22 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>($r10, r3)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial: javax.crypto.SecretKey cek(byte[],java.lang.String,com.amazonaws.services.s3.model.EncryptionMaterials,java.security.Provider,com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme,com.amazonaws.services.kms.AWSKMS)>
		SHA-256: acd6ed67570803317a02850614fcbdeb520c873593917d96df242b88e9b0d8b1
		Secure: false
	Object:
		Variable: $r32
		Type: java.lang.String
		Statement: specialinvoke $r28.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r30, $r32)
		Method: <com.amazonaws.services.s3.internal.crypto.S3CryptoModuleBase: com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial buildContentCryptoMaterial(com.amazonaws.services.s3.model.EncryptionMaterials,java.security.Provider,com.amazonaws.AmazonWebServiceRequest)>
		SHA-256: 6869af176fdd8f37b8d3659ff6947e2f903394d29631abd1fd2a715b02530220
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <com.amazonaws.services.s3.internal.crypto.S3CryptoScheme: void <clinit>()>
		SHA-256: 6fa4d8a3b8929b92c8516c0152f9497fab94ad31ef34c8ab3e6be9e5ee2df174
		Secure: true
	Object:
		Variable: varReplacer888
		Type: java.lang.String
		Statement: specialinvoke r26.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r6, varReplacer888)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial: javax.crypto.SecretKey cek(byte[],java.lang.String,com.amazonaws.services.s3.model.EncryptionMaterials,java.security.Provider,com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme,com.amazonaws.services.kms.AWSKMS)>
		SHA-256: 57784d1dc181c1a6a3d7efb0a4986324e226897e0dc1bb1a550c4d5530a2ccd5
		Secure: false
	Object:
		Variable: r16
		Type: javax.crypto.Cipher
		Statement: r16 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r6)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme: com.amazonaws.services.s3.internal.crypto.CipherLite createCipherLite(javax.crypto.SecretKey,byte[],int,java.security.Provider)>
		SHA-256: 37f827521d078d92596c61071444281eb77aac65550fdc1f7d1634b804f796b
		Secure: true
	Object:
		Variable: r20
		Type: java.lang.String
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, r20)
		Method: <com.amazonaws.auth.AwsChunkedEncodingInputStream: void <init>(java.io.InputStream,int,byte[],java.lang.String,java.lang.String,java.lang.String,com.amazonaws.auth.AWS4Signer)>
		SHA-256: 7e1327eb8bcd58915727f652c3b6a0b7528088b8d0e43c0b10e7e6590d5885e4
		Secure: false
	Object:
		Variable: r22
		Type: javax.crypto.Cipher
		Statement: r22 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r8)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial: javax.crypto.SecretKey cek(byte[],java.lang.String,com.amazonaws.services.s3.model.EncryptionMaterials,java.security.Provider,com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme,com.amazonaws.services.kms.AWSKMS)>
		SHA-256: abc03d846f21b8e517dbc81c7c129bb5d2240abd158d9fcc428c7c2ccf13bc8e
		Secure: false
	Object:
		Variable: r0
		Type: javax.crypto.SecretKey
		Statement: $r13 = virtualinvoke r37.<javax.crypto.Cipher: byte[] wrap(java.security.Key)>(r0)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial: com.amazonaws.services.s3.internal.crypto.SecuredCEK secureCEK(javax.crypto.SecretKey,com.amazonaws.services.s3.model.EncryptionMaterials,com.amazonaws.services.s3.internal.crypto.S3KeyWrapScheme,java.security.SecureRandom,java.security.Provider,com.amazonaws.services.kms.AWSKMS,com.amazonaws.AmazonWebServiceRequest)>
		SHA-256: 174d2b2058ff0a866890e9c072bacb903e6667f36e73150e7e55240caf7f81a9
		Secure: false
	Object:
		Variable: $r11
		Type: byte[]
		Statement: $r11 = virtualinvoke r38.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r7)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial: com.amazonaws.services.s3.internal.crypto.SecuredCEK secureCEK(javax.crypto.SecretKey,com.amazonaws.services.s3.model.EncryptionMaterials,com.amazonaws.services.s3.internal.crypto.S3KeyWrapScheme,java.security.SecureRandom,java.security.Provider,com.amazonaws.services.kms.AWSKMS,com.amazonaws.AmazonWebServiceRequest)>
		SHA-256: 6518dab76002cc3c9a909a754c982b5afaee0a9c9ae41315952e222486209ae7
		Secure: false
	Object:
		Variable: r20
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r20.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r2)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme: com.amazonaws.services.s3.internal.crypto.CipherLite createCipherLite(javax.crypto.SecretKey,byte[],int,java.security.Provider)>
		SHA-256: fbdb1402135f85a03d3146b031d58dc035b1fc3c7f2bf8ee66c49463244c5967
		Secure: false
	Object:
		Variable: r0
		Type: byte[]
		Statement: r6 = virtualinvoke r22.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r0)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial: javax.crypto.SecretKey cek(byte[],java.lang.String,com.amazonaws.services.s3.model.EncryptionMaterials,java.security.Provider,com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme,com.amazonaws.services.kms.AWSKMS)>
		SHA-256: cd90302390ae8f01b6c374c3109d57f856780416cc1af7161d4763e3d534c03c
		Secure: false
	Object:
		Variable: $r13
		Type: byte[]
		Statement: $r13 = virtualinvoke r37.<javax.crypto.Cipher: byte[] wrap(java.security.Key)>(r0)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial: com.amazonaws.services.s3.internal.crypto.SecuredCEK secureCEK(javax.crypto.SecretKey,com.amazonaws.services.s3.model.EncryptionMaterials,com.amazonaws.services.s3.internal.crypto.S3KeyWrapScheme,java.security.SecureRandom,java.security.Provider,com.amazonaws.services.kms.AWSKMS,com.amazonaws.AmazonWebServiceRequest)>
		SHA-256: 145f9175359ae6744285b1a39c33fcd2d5ece191f266774864a4ecd4721d7c4d
		Secure: false
	Object:
		Variable: $r26
		Type: javax.crypto.KeyGenerator
		Statement: $r26 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.security.Provider)>(r3, r2)
		Method: <com.amazonaws.services.s3.internal.crypto.S3CryptoModuleBase: javax.crypto.SecretKey generateCEK(com.amazonaws.services.s3.model.EncryptionMaterials,java.security.Provider)>
		SHA-256: 96497cfd4508a31dca201f033fa6d7d99fc11e96cde42d6715c2bbbae6dbc709
		Secure: false
	Object:
		Variable: $r36
		Type: javax.crypto.Cipher
		Statement: $r36 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r35)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial: com.amazonaws.services.s3.internal.crypto.SecuredCEK secureCEK(javax.crypto.SecretKey,com.amazonaws.services.s3.model.EncryptionMaterials,com.amazonaws.services.s3.internal.crypto.S3KeyWrapScheme,java.security.SecureRandom,java.security.Provider,com.amazonaws.services.kms.AWSKMS,com.amazonaws.AmazonWebServiceRequest)>
		SHA-256: e780970632b5b03ae9c83c8274fe257f7dc0938194a68cebafaf8a63873e94c9
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, r20)
		Method: <com.amazonaws.auth.AwsChunkedEncodingInputStream: void <init>(java.io.InputStream,int,byte[],java.lang.String,java.lang.String,java.lang.String,com.amazonaws.auth.AWS4Signer)>
		SHA-256: 7bba06de4be39faf991c8dddf0b97af88cdf72db8de9f030c3fb6db30212d5e9
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer478)
		Method: <com.amazonaws.services.s3.internal.MD5DigestCalculatingInputStream: void resetDigest()>
		SHA-256: a782131158fb091eecbac01847b8bee0d24bc9c743222e90235a0b9af6e38a8f
		Secure: false
	Object:
		Variable: r26
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r26.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r6, varReplacer888)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial: javax.crypto.SecretKey cek(byte[],java.lang.String,com.amazonaws.services.s3.model.EncryptionMaterials,java.security.Provider,com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme,com.amazonaws.services.kms.AWSKMS)>
		SHA-256: 539360eada509651a30b40f2cc628bde18f0016cececf7ea4dc241832c260f2a
		Secure: false
	Object:
		Variable: r38
		Type: javax.crypto.Cipher
		Statement: r38 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>(r8, r4)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial: com.amazonaws.services.s3.internal.crypto.SecuredCEK secureCEK(javax.crypto.SecretKey,com.amazonaws.services.s3.model.EncryptionMaterials,com.amazonaws.services.s3.internal.crypto.S3KeyWrapScheme,java.security.SecureRandom,java.security.Provider,com.amazonaws.services.kms.AWSKMS,com.amazonaws.AmazonWebServiceRequest)>
		SHA-256: 14ca8fb7c12bb639076783d0ca87cfd61e31633b0f0e230a21c162b46f326c20
		Secure: false
	Object:
		Variable: $r11
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r13, $r14)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial: javax.crypto.SecretKey cekByKMS(byte[],java.lang.String,com.amazonaws.services.s3.model.EncryptionMaterials,com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme,com.amazonaws.services.kms.AWSKMS)>
		SHA-256: 1c4f40b42e7b2022e95e122a8d866519e477716624d28ff20a4eb94406c62a99
		Secure: false
	Object:
		Variable: r38
		Type: javax.crypto.Cipher
		Statement: r38 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r8)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial: com.amazonaws.services.s3.internal.crypto.SecuredCEK secureCEK(javax.crypto.SecretKey,com.amazonaws.services.s3.model.EncryptionMaterials,com.amazonaws.services.s3.internal.crypto.S3KeyWrapScheme,java.security.SecureRandom,java.security.Provider,com.amazonaws.services.kms.AWSKMS,com.amazonaws.AmazonWebServiceRequest)>
		SHA-256: 549d77d2ccd6c9db92e8c137e1c6aea900ab9a6303b1cabad08b6a33be3090e2
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.Mac
		Statement: $r9 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(r20)
		Method: <com.amazonaws.auth.AwsChunkedEncodingInputStream: void <init>(java.io.InputStream,int,byte[],java.lang.String,java.lang.String,java.lang.String,com.amazonaws.auth.AWS4Signer)>
		SHA-256: 9ee1a9189b144fc5b5f0b2f5cee277e6ef42608bbc7a44b66e70d5910047064e
		Secure: false
	Object:
		Variable: $r36
		Type: javax.crypto.Cipher
		Statement: $r36 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>(r35, r4)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial: com.amazonaws.services.s3.internal.crypto.SecuredCEK secureCEK(javax.crypto.SecretKey,com.amazonaws.services.s3.model.EncryptionMaterials,com.amazonaws.services.s3.internal.crypto.S3KeyWrapScheme,java.security.SecureRandom,java.security.Provider,com.amazonaws.services.kms.AWSKMS,com.amazonaws.AmazonWebServiceRequest)>
		SHA-256: 910a254b4ebf8ff5b8270bc631cb4e2c6f9ce8de535367cec7107c178fd37c4e
		Secure: false
	Object:
		Variable: r6
		Type: byte[]
		Statement: r6 = virtualinvoke r22.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r0)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial: javax.crypto.SecretKey cek(byte[],java.lang.String,com.amazonaws.services.s3.model.EncryptionMaterials,java.security.Provider,com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme,com.amazonaws.services.kms.AWSKMS)>
		SHA-256: d3d00d949a81198f10e5ef580839e788f0cbb8dd9b6f124ee0ece6effe2b177a
		Secure: false
	Object:
		Variable: $r26
		Type: javax.crypto.KeyGenerator
		Statement: $r26 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(r3)
		Method: <com.amazonaws.services.s3.internal.crypto.S3CryptoModuleBase: javax.crypto.SecretKey generateCEK(com.amazonaws.services.s3.model.EncryptionMaterials,java.security.Provider)>
		SHA-256: 6ea72a608145e99be36d16e4a9625baf3f2ecbe7f2409900c1600a5a32c74e2f
		Secure: false
	Object:
		Variable: $r20
		Type: javax.crypto.Cipher
		Statement: $r20 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>(r1, r3)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial: javax.crypto.SecretKey cek(byte[],java.lang.String,com.amazonaws.services.s3.model.EncryptionMaterials,java.security.Provider,com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme,com.amazonaws.services.kms.AWSKMS)>
		SHA-256: 359aebbdbfdade1accbe5ec15253114e82f5eec52ffdeb3829addd9f12827d16
		Secure: false
	Object:
		Variable: r16
		Type: javax.crypto.Cipher
		Statement: r16 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>($r7, r3)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme: com.amazonaws.services.s3.internal.crypto.CipherLite createCipherLite(javax.crypto.SecretKey,byte[],int,java.security.Provider)>
		SHA-256: 25a1275b15dd8043123d6251c8350c71eaa9da1614e03c111f70f74088fc91e3
		Secure: true
	Object:
		Variable: $r20
		Type: javax.crypto.Cipher
		Statement: $r20 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r1)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial: javax.crypto.SecretKey cek(byte[],java.lang.String,com.amazonaws.services.s3.model.EncryptionMaterials,java.security.Provider,com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme,com.amazonaws.services.kms.AWSKMS)>
		SHA-256: 31d5c56a75c032bb0f0d73539dbba95954f377da07d5035763167172e2064ce1
		Secure: false
	Object:
		Variable: $r28
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r28.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r30, $r32)
		Method: <com.amazonaws.services.s3.internal.crypto.S3CryptoModuleBase: com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial buildContentCryptoMaterial(com.amazonaws.services.s3.model.EncryptionMaterials,java.security.Provider,com.amazonaws.AmazonWebServiceRequest)>
		SHA-256: 9a3fc9e30990c1329c741789a224b696ceab1acd111dacf17a34f128e34808de
		Secure: false
	Object:
		Variable: r66
		Type: java.security.MessageDigest
		Statement: r66 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1313)
		Method: <com.amazonaws.services.s3.AmazonS3Client: com.amazonaws.services.s3.model.S3Object getObject(com.amazonaws.services.s3.model.GetObjectRequest)>
		SHA-256: c9b3e728544b7d6679f647c13b8009c36e83a46af87713ea56d7ff7e89fba058
		Secure: false
	Object:
		Variable: r7
		Type: byte[]
		Statement: $r11 = virtualinvoke r38.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r7)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial: com.amazonaws.services.s3.internal.crypto.SecuredCEK secureCEK(javax.crypto.SecretKey,com.amazonaws.services.s3.model.EncryptionMaterials,com.amazonaws.services.s3.internal.crypto.S3KeyWrapScheme,java.security.SecureRandom,java.security.Provider,com.amazonaws.services.kms.AWSKMS,com.amazonaws.AmazonWebServiceRequest)>
		SHA-256: da18363e4ca34d64ba6c5b5c01a360ee08be227935b769699e98019a30a5b628
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.MessageDigest
		Statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4022)
		Method: <com.amazonaws.auth.AwsChunkedEncodingInputStream: void <init>(java.io.InputStream,int,byte[],java.lang.String,java.lang.String,java.lang.String,com.amazonaws.auth.AWS4Signer)>
		SHA-256: 4ec94b2a37db1f083d593d5e5ae13ab0c5f60607f5e15d7d1872dfb7a8b33699
		Secure: false
	Object:
		Variable: r16
		Type: javax.crypto.Cipher
		Statement: r16 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>($r8, r4)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme: com.amazonaws.services.s3.internal.crypto.CipherLite createCipherLite(javax.crypto.SecretKey,byte[],int,java.security.Provider)>
		SHA-256: e7a3fcd001dded2d4946603f2364e4f9dfdce79e8a7a0f236a5f8cd345068b02
		Secure: true

Findings in Java Class: com.amazonaws.services.s3.internal.MD5DigestCalculatingInputStream

	 in Method: void resetDigest()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #a782131158fb091eecbac01847b8bee0d24bc9c743222e90235a0b9af6e38a8f)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer478)


	 in Method: byte[] getMd5Digest()
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #a782131158fb091eecbac01847b8bee0d24bc9c743222e90235a0b9af6e38a8f)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()


	 in Method: void reset()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #a782131158fb091eecbac01847b8bee0d24bc9c743222e90235a0b9af6e38a8f)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke r0.<com.amazonaws.services.s3.internal.MD5DigestCalculatingInputStream: void resetDigest()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #a782131158fb091eecbac01847b8bee0d24bc9c743222e90235a0b9af6e38a8f)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r4 = specialinvoke r0.<com.amazonaws.services.s3.internal.MD5DigestCalculatingInputStream: java.security.MessageDigest cloneFrom(java.security.MessageDigest)>($r3)


Findings in Java Class: com.amazonaws.services.s3.AmazonS3Client

	 in Method: com.amazonaws.services.s3.model.UploadPartResult doUploadPart(java.lang.String,java.lang.String,java.lang.String,int,long,com.amazonaws.Request,java.io.InputStream,com.amazonaws.services.s3.internal.MD5DigestCalculatingInputStream,com.amazonaws.event.ProgressListener)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #a782131158fb091eecbac01847b8bee0d24bc9c743222e90235a0b9af6e38a8f)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: interfaceinvoke r4.<com.amazonaws.Request: void setContent(java.io.InputStream)>(r5)


	 in Method: com.amazonaws.services.s3.model.UploadPartResult uploadPart(com.amazonaws.services.s3.model.UploadPartRequest)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #a782131158fb091eecbac01847b8bee0d24bc9c743222e90235a0b9af6e38a8f)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: staticinvoke <com.amazonaws.services.s3.model.S3DataSource$Utils: void cleanupDataSource(com.amazonaws.services.s3.model.S3DataSource,java.io.File,java.io.InputStream,java.io.InputStream,org.apache.commons.logging.Log)>(r33, r1, r2, r52, $r41)


	 in Method: com.amazonaws.services.s3.model.PutObjectResult putObject(com.amazonaws.services.s3.model.PutObjectRequest)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #a782131158fb091eecbac01847b8bee0d24bc9c743222e90235a0b9af6e38a8f)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r75)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #a782131158fb091eecbac01847b8bee0d24bc9c743222e90235a0b9af6e38a8f)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: staticinvoke <com.amazonaws.services.s3.model.S3DataSource$Utils: void cleanupDataSource(com.amazonaws.services.s3.model.S3DataSource,java.io.File,java.io.InputStream,java.io.InputStream,org.apache.commons.logging.Log)>(r70, r1, r2, r112, $r17)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #a782131158fb091eecbac01847b8bee0d24bc9c743222e90235a0b9af6e38a8f)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r39 = virtualinvoke r75.<com.amazonaws.services.s3.internal.MD5DigestCalculatingInputStream: byte[] getMd5Digest()>()


	 in Method: com.amazonaws.services.s3.model.S3Object getObject(com.amazonaws.services.s3.model.GetObjectRequest)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #c9b3e728544b7d6679f647c13b8009c36e83a46af87713ea56d7ff7e89fba058)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r66 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1313)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #c9b3e728544b7d6679f647c13b8009c36e83a46af87713ea56d7ff7e89fba058)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke r73.<com.amazonaws.services.s3.internal.DigestValidationInputStream: void <init>(java.io.InputStream,java.security.MessageDigest,byte[])>(r78, r66, r6)


Findings in Java Class: com.amazonaws.services.s3.internal.crypto.S3CryptoModuleBase

	 in Method: javax.crypto.SecretKey generateCEK(com.amazonaws.services.s3.model.EncryptionMaterials,java.security.Provider)
		RequiredPredicateError violating CrySL rule for javax.crypto.KeyGenerator
			Second parameter was not properly generated as randomized
			at statement: virtualinvoke r4.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>($i0, $r10)

		TypestateError violating CrySL rule for javax.crypto.KeyGenerator (on Object #6ea72a608145e99be36d16e4a9625baf3f2ecbe7f2409900c1600a5a32c74e2f)
			Unexpected call to method generateKey on object of type javax.crypto.KeyGenerator.
			at statement: r31 = virtualinvoke r4.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()

		TypestateError violating CrySL rule for javax.crypto.KeyGenerator (on Object #96497cfd4508a31dca201f033fa6d7d99fc11e96cde42d6715c2bbbae6dbc709)
			Unexpected call to method generateKey on object of type javax.crypto.KeyGenerator.
			at statement: r31 = virtualinvoke r4.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()


	 in Method: com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial buildContentCryptoMaterial(com.amazonaws.services.s3.model.EncryptionMaterials,java.security.Provider,com.amazonaws.AmazonWebServiceRequest)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r28.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r30, $r32)


Findings in Java Class: com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial

	 in Method: javax.crypto.SecretKey cek(byte[],java.lang.String,com.amazonaws.services.s3.model.EncryptionMaterials,java.security.Provider,com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme,com.amazonaws.services.kms.AWSKMS)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r22.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer887, r32)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #31d5c56a75c032bb0f0d73539dbba95954f377da07d5035763167172e2064ce1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: $r11 = virtualinvoke r21.<javax.crypto.Cipher: java.security.Key unwrap(byte[],java.lang.String,int)>(r0, r1, varReplacer885)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #359aebbdbfdade1accbe5ec15253114e82f5eec52ffdeb3829addd9f12827d16)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: $r11 = virtualinvoke r21.<javax.crypto.Cipher: java.security.Key unwrap(byte[],java.lang.String,int)>(r0, r1, varReplacer885)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r26.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r6, varReplacer888)

		ForbiddenMethodError violating CrySL rule for javax.crypto.Cipher
			Detected call to forbidden method void init(int,java.security.Key) of class javax.crypto.Cipher. Instead, call method <javax.crypto.Cipher: void init(int,java.security.Key)>.
			at statement: virtualinvoke r22.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer887, r32)


	 in Method: com.amazonaws.services.s3.internal.crypto.SecuredCEK secureCEK(javax.crypto.SecretKey,com.amazonaws.services.s3.model.EncryptionMaterials,com.amazonaws.services.s3.internal.crypto.S3KeyWrapScheme,java.security.SecureRandom,java.security.Provider,com.amazonaws.services.kms.AWSKMS,com.amazonaws.AmazonWebServiceRequest)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke r37.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom)>(varReplacer933, r45, r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r38.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer934, r47)

		ForbiddenMethodError violating CrySL rule for javax.crypto.Cipher
			Detected call to forbidden method void init(int,java.security.Key,java.security.SecureRandom) of class javax.crypto.Cipher. Instead, call method <javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom)>.
			at statement: virtualinvoke r37.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom)>(varReplacer933, r45, r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r37.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom)>(varReplacer933, r45, r3)


	 in Method: javax.crypto.SecretKey cekByKMS(byte[],java.lang.String,com.amazonaws.services.s3.model.EncryptionMaterials,com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme,com.amazonaws.services.kms.AWSKMS)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r13, $r14)


Findings in Java Class: com.amazonaws.services.s3.internal.AWSS3V4Signer

	 in Method: void processRequestPayload(com.amazonaws.SignableRequest,byte[],byte[],com.amazonaws.auth.internal.AWS4SignerRequestParams)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #9ee1a9189b144fc5b5f0b2f5cee277e6ef42608bbc7a44b66e70d5910047064e)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: interfaceinvoke r1.<com.amazonaws.SignableRequest: void setContent(java.io.InputStream)>(r12)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #4ec94b2a37db1f083d593d5e5ae13ab0c5f60607f5e15d7d1872dfb7a8b33699)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: interfaceinvoke r1.<com.amazonaws.SignableRequest: void setContent(java.io.InputStream)>(r12)


Findings in Java Class: com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme

	 in Method: com.amazonaws.services.s3.internal.crypto.CipherLite createCipherLite(javax.crypto.SecretKey,byte[],int,java.security.Provider)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r20.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r2)


Findings in Java Class: com.amazonaws.auth.AwsChunkedEncodingInputStream

	 in Method: void <init>(java.io.InputStream,int,byte[],java.lang.String,java.lang.String,java.lang.String,com.amazonaws.auth.AWS4Signer)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, r20)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 34

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 2
	RequiredPredicateError: 10
	IncompleteOperationError: 12
	ForbiddenMethodError: 2
	TypestateError: 3
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 10 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 13.49 s

