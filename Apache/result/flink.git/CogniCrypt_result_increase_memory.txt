
Current Proejct: kubernetes-server-mock-4.5.2.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 468.0 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.327 s

Current Proejct: jsr305.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 430.3 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.089 s

Current Proejct: parquet-avro-1.10.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 421.4 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.687 s

Current Proejct: hiverunner-4.0.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 405.0 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.360 s

Current Proejct: nifi-site-to-site-client-1.6.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 608.6 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 4 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 5
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.2

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 6
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 6
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 6
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 6
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.83

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r61
		Type: javax.net.ssl.TrustManagerFactory
		Statement: r61 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r60)
		Method: <org.apache.nifi.remote.client.SiteToSiteClient$StandardSiteToSiteClientConfig: javax.net.ssl.SSLContext getSslContext()>
		SHA-256: d812c77fc099ac75711ad90d4f904a40b31c43e16a35a8b8df81b14c4564f6f0
		Secure: false
	Object:
		Variable: $r7
		Type: javax.net.ssl.TrustManager[]
		Statement: $r7 = virtualinvoke r61.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <org.apache.nifi.remote.client.SiteToSiteClient$StandardSiteToSiteClientConfig: javax.net.ssl.SSLContext getSslContext()>
		SHA-256: e3bebad548492d9761aaf1f50f0719197b7b2705c0e3747176b194c32018946c
		Secure: false
	Object:
		Variable: $r6
		Type: javax.net.ssl.KeyManager[]
		Statement: $r6 = virtualinvoke r50.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <org.apache.nifi.remote.client.SiteToSiteClient$StandardSiteToSiteClientConfig: javax.net.ssl.SSLContext getSslContext()>
		SHA-256: 29f36ad5038eab65c82ac301d9cf06e639aac0518311d36af53a821e923f6a54
		Secure: false
	Object:
		Variable: r50
		Type: javax.net.ssl.KeyManagerFactory
		Statement: r50 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r49)
		Method: <org.apache.nifi.remote.client.SiteToSiteClient$StandardSiteToSiteClientConfig: javax.net.ssl.SSLContext getSslContext()>
		SHA-256: 18c6744a7bc49318cba5a1fed0df5cb200bc7301554de1bdba9dbffcb0d03764
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.SecureRandom
		Statement: specialinvoke $r8.<java.security.SecureRandom: void <init>()>()
		Method: <org.apache.nifi.remote.client.SiteToSiteClient$StandardSiteToSiteClientConfig: javax.net.ssl.SSLContext getSslContext()>
		SHA-256: c8d27af9c0e64445c24a52b6830721223469affdd6910828aeefffcfdd5bdb52
		Secure: true
	Object:
		Variable: r63
		Type: javax.net.ssl.SSLContext
		Statement: r63 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer632)
		Method: <org.apache.nifi.remote.client.SiteToSiteClient$StandardSiteToSiteClientConfig: javax.net.ssl.SSLContext getSslContext()>
		SHA-256: 928f9daca7bf4e6816c9f21ee025651f708862a4eb8c98e35063af93aeb6e40a
		Secure: false

Findings in Java Class: org.apache.nifi.remote.client.SiteToSiteClient$StandardSiteToSiteClientConfig

	 in Method: javax.net.ssl.SSLContext getSslContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #928f9daca7bf4e6816c9f21ee025651f708862a4eb8c98e35063af93aeb6e40a)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: r63 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer632)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r63.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r6, $r7, $r8)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r50.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r43, $r52)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r61.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(r55)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #18c6744a7bc49318cba5a1fed0df5cb200bc7301554de1bdba9dbffcb0d03764)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r50.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r43, $r52)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r63.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r6, $r7, $r8)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 6

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 1
	RequiredPredicateError: 4
	NeverTypeOfError: 1
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 2 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 4.225 s

Current Proejct: hbase-server-1.4.3.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 1.437 s 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 6 analysis seeds within 3 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 6
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.17

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 7
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.29

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 8
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.38

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 8
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 9
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.56

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 9
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 9
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.78

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 9
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.89

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r6
		Type: byte[]
		Statement: virtualinvoke r5.<java.security.SecureRandom: void nextBytes(byte[])>(r6)
		Method: <org.apache.hadoop.hbase.regionserver.wal.SecureProtobufLogWriter: org.apache.hadoop.hbase.protobuf.generated.WALProtos$WALHeader buildWALHeader(org.apache.hadoop.conf.Configuration,org.apache.hadoop.hbase.protobuf.generated.WALProtos$WALHeader$Builder)>
		SHA-256: 45e79655bfcde7fd85f8269396cfbbd11ddf8cccfef28c428521b7fb69380849
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <org.apache.hadoop.hbase.regionserver.wal.SecureWALCellCodec$EncryptedKvEncoder$1: byte[] initialValue()>
		SHA-256: e62d381413baab99e03703db1e34d424a5211370d65054ce41ec37520d5162e4
		Secure: true
	Object:
		Variable: $r12
		Type: java.security.SecureRandom
		Statement: specialinvoke $r12.<java.security.SecureRandom: void <init>()>()
		Method: <org.apache.hadoop.hbase.regionserver.wal.SecureProtobufLogWriter: org.apache.hadoop.hbase.protobuf.generated.WALProtos$WALHeader buildWALHeader(org.apache.hadoop.conf.Configuration,org.apache.hadoop.hbase.protobuf.generated.WALProtos$WALHeader$Builder)>
		SHA-256: b2e3ff033f96525219d2fe0c4a5ce275a6d02dc029a3febb2a9eb0aae136f47e
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer20143)
		Method: <org.apache.hadoop.hbase.mapreduce.HashTable$ResultHasher: void <init>()>
		SHA-256: 6f027aed06e3e18ccc5b6d3711e6b71d88ad68bb6da0b2e11099f93679d6d03
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: virtualinvoke $r4.<java.security.SecureRandom: void nextBytes(byte[])>(r1)
		Method: <org.apache.hadoop.hbase.regionserver.wal.SecureWALCellCodec$EncryptedKvEncoder$1: byte[] initialValue()>
		SHA-256: 20246a5009467fa0cd3853d2baf36f8becb5200328c7413ae54d80533cc0bd3c
		Secure: true
	Object:
		Variable: $r13
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r6, $r14)
		Method: <org.apache.hadoop.hbase.regionserver.wal.SecureProtobufLogWriter: org.apache.hadoop.hbase.protobuf.generated.WALProtos$WALHeader buildWALHeader(org.apache.hadoop.conf.Configuration,org.apache.hadoop.hbase.protobuf.generated.WALProtos$WALHeader$Builder)>
		SHA-256: 6b16d02c8d8f78b270fe37cae4fce1e2fdc0d0bf9d82ac8f5ffd307c70ab84c2
		Secure: false
	Object:
		Variable: r58
		Type: java.security.SecureRandom
		Statement: specialinvoke r58.<java.security.SecureRandom: void <init>()>()
		Method: <org.apache.hadoop.hbase.security.access.SecureBulkLoadEndpoint: void start(org.apache.hadoop.hbase.CoprocessorEnvironment)>
		SHA-256: 8b82b7f2833f9b2764244f71b70b5ca9c23cfa1971065640bebb05282438384f
		Secure: true
	Object:
		Variable: $r15
		Type: java.security.SecureRandom
		Statement: specialinvoke $r15.<java.security.SecureRandom: void <init>()>()
		Method: <org.apache.hadoop.hbase.replication.regionserver.HFileReplicator: org.apache.hadoop.fs.Path createStagingDir(org.apache.hadoop.fs.Path,org.apache.hadoop.hbase.security.User,org.apache.hadoop.hbase.TableName)>
		SHA-256: d2554bb20abe8dc57160d5e9bcba52f2cf2e502426f5af9f43a211dcaf99feb
		Secure: true
	Object:
		Variable: $r14
		Type: java.lang.String
		Statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r6, $r14)
		Method: <org.apache.hadoop.hbase.regionserver.wal.SecureProtobufLogWriter: org.apache.hadoop.hbase.protobuf.generated.WALProtos$WALHeader buildWALHeader(org.apache.hadoop.conf.Configuration,org.apache.hadoop.hbase.protobuf.generated.WALProtos$WALHeader$Builder)>
		SHA-256: e466c9a35713e8727c455d5d82219e303a63f5b6d4d06f05072dbe3044bc3aac
		Secure: false

Findings in Java Class: org.apache.hadoop.hbase.mapreduce.HashTable$ResultHasher

	 in Method: void <init>()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #6f027aed06e3e18ccc5b6d3711e6b71d88ad68bb6da0b2e11099f93679d6d03)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer20143)


Findings in Java Class: org.apache.hadoop.hbase.mapreduce.SyncTable$SyncMapper

	 in Method: void setup(org.apache.hadoop.mapreduce.Mapper$Context)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #6f027aed06e3e18ccc5b6d3711e6b71d88ad68bb6da0b2e11099f93679d6d03)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r34.<org.apache.hadoop.hbase.mapreduce.HashTable$ResultHasher: void <init>()>()


Findings in Java Class: org.apache.hadoop.hbase.mapreduce.HashTable$HashMapper

	 in Method: void setup(org.apache.hadoop.mapreduce.Mapper$Context)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #6f027aed06e3e18ccc5b6d3711e6b71d88ad68bb6da0b2e11099f93679d6d03)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: virtualinvoke $r7.<org.apache.hadoop.hbase.mapreduce.HashTable$ResultHasher: void startBatch(org.apache.hadoop.hbase.io.ImmutableBytesWritable)>($r6)


Findings in Java Class: org.apache.hadoop.hbase.regionserver.wal.SecureProtobufLogWriter

	 in Method: org.apache.hadoop.hbase.protobuf.generated.WALProtos$WALHeader buildWALHeader(org.apache.hadoop.conf.Configuration,org.apache.hadoop.hbase.protobuf.generated.WALProtos$WALHeader$Builder)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r6, $r14)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 9

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 1
	RequiredPredicateError: 1
	IncompleteOperationError: 2
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 4 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 15.68 s

Current Proejct: hamcrest-core-1.3.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 406.8 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.211 s

Current Proejct: cassandra-driver-mapping-3.0.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 486.1 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.379 s

Current Proejct: log4j-1.2.17.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 855.2 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 3.809 s

Current Proejct: jackson-dataformat-cbor-2.10.1.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 498.2 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.654 s

Current Proejct: junit-4.12.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 614.7 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 2.489 s

Current Proejct: hamcrest-all-1.3.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 690.7 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 3.162 s

Current Proejct: jetty-util-ajax-9.3.24.v20180605.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 425.0 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.333 s

Current Proejct: scala-reflect-2.11.12.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 1.717 s 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 1 analysis seeds within 6 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2215)
		Method: <scala.reflect.internal.StdNames$compactify$: void <init>(scala.reflect.internal.SymbolTable)>
		SHA-256: 9f39846444669c32c1828396ff72ba7627cd7831a3519efe10eb6c662747a7df
		Secure: false

Findings in Java Class: scala.reflect.internal.StdNames$compactify$

	 in Method: void <init>(scala.reflect.internal.SymbolTable)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #9f39846444669c32c1828396ff72ba7627cd7831a3519efe10eb6c662747a7df)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2215)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #9f39846444669c32c1828396ff72ba7627cd7831a3519efe10eb6c662747a7df)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2215)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 1

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 1
	IncompleteOperationError: 1
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 6 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 17.29 s

Current Proejct: mockito-core-2.21.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 525.1 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 2.416 s

Current Proejct: aws-java-sdk-s3-1.11.271.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 608.3 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 23 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.04

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.09

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.13

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.17

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.22

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.26

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 24
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.29

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 25
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.32

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 25
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.36

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 27
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.37

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 27
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.41

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 27
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.44

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 27
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.48

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 14 of 28
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 15 of 29
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.52

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 16 of 31
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.52

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 17 of 31
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.55

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 18 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.55

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 19 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.58

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 20 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.61

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 21 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.64

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 22 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 23 of 34
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.68

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 24 of 34
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.71

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 25 of 34
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.74

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 26 of 34
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.76

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 27 of 34
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.79

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 28 of 34
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.82

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 29 of 34
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.85

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 30 of 34
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.88

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 31 of 34
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.91

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 32 of 34
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.94

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 33 of 34
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.97

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r30
		Type: javax.crypto.SecretKey
		Statement: r30 = virtualinvoke r4.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.amazonaws.services.s3.internal.crypto.S3CryptoModuleBase: javax.crypto.SecretKey generateCEK(com.amazonaws.services.s3.model.EncryptionMaterials,java.security.Provider)>
		SHA-256: 85cd5717113cf93cac62d829ceee7c3b9e78e52b8da110af66d0696ff24ccdec
		Secure: false
	Object:
		Variable: $r14
		Type: java.lang.String
		Statement: specialinvoke $r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r13, $r14)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial: javax.crypto.SecretKey cekByKMS(byte[],java.lang.String,com.amazonaws.services.s3.model.EncryptionMaterials,com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme,com.amazonaws.services.kms.AWSKMS)>
		SHA-256: 1a371668f4c74cca7f19a48cf59ceb579cdf11fc8d49dd0a9bed13c25ef43653
		Secure: false
	Object:
		Variable: r22
		Type: javax.crypto.Cipher
		Statement: r22 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>($r10, r3)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial: javax.crypto.SecretKey cek(byte[],java.lang.String,com.amazonaws.services.s3.model.EncryptionMaterials,java.security.Provider,com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme,com.amazonaws.services.kms.AWSKMS)>
		SHA-256: acd6ed67570803317a02850614fcbdeb520c873593917d96df242b88e9b0d8b1
		Secure: false
	Object:
		Variable: $r32
		Type: java.lang.String
		Statement: specialinvoke $r28.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r30, $r32)
		Method: <com.amazonaws.services.s3.internal.crypto.S3CryptoModuleBase: com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial buildContentCryptoMaterial(com.amazonaws.services.s3.model.EncryptionMaterials,java.security.Provider,com.amazonaws.AmazonWebServiceRequest)>
		SHA-256: 6869af176fdd8f37b8d3659ff6947e2f903394d29631abd1fd2a715b02530220
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <com.amazonaws.services.s3.internal.crypto.S3CryptoScheme: void <clinit>()>
		SHA-256: 6fa4d8a3b8929b92c8516c0152f9497fab94ad31ef34c8ab3e6be9e5ee2df174
		Secure: true
	Object:
		Variable: varReplacer888
		Type: java.lang.String
		Statement: specialinvoke r26.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r6, varReplacer888)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial: javax.crypto.SecretKey cek(byte[],java.lang.String,com.amazonaws.services.s3.model.EncryptionMaterials,java.security.Provider,com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme,com.amazonaws.services.kms.AWSKMS)>
		SHA-256: 57784d1dc181c1a6a3d7efb0a4986324e226897e0dc1bb1a550c4d5530a2ccd5
		Secure: false
	Object:
		Variable: r16
		Type: javax.crypto.Cipher
		Statement: r16 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r6)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme: com.amazonaws.services.s3.internal.crypto.CipherLite createCipherLite(javax.crypto.SecretKey,byte[],int,java.security.Provider)>
		SHA-256: 37f827521d078d92596c61071444281eb77aac65550fdc1f7d1634b804f796b
		Secure: true
	Object:
		Variable: r20
		Type: java.lang.String
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, r20)
		Method: <com.amazonaws.auth.AwsChunkedEncodingInputStream: void <init>(java.io.InputStream,int,byte[],java.lang.String,java.lang.String,java.lang.String,com.amazonaws.auth.AWS4Signer)>
		SHA-256: 7e1327eb8bcd58915727f652c3b6a0b7528088b8d0e43c0b10e7e6590d5885e4
		Secure: false
	Object:
		Variable: r22
		Type: javax.crypto.Cipher
		Statement: r22 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r8)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial: javax.crypto.SecretKey cek(byte[],java.lang.String,com.amazonaws.services.s3.model.EncryptionMaterials,java.security.Provider,com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme,com.amazonaws.services.kms.AWSKMS)>
		SHA-256: abc03d846f21b8e517dbc81c7c129bb5d2240abd158d9fcc428c7c2ccf13bc8e
		Secure: false
	Object:
		Variable: r0
		Type: javax.crypto.SecretKey
		Statement: $r13 = virtualinvoke r37.<javax.crypto.Cipher: byte[] wrap(java.security.Key)>(r0)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial: com.amazonaws.services.s3.internal.crypto.SecuredCEK secureCEK(javax.crypto.SecretKey,com.amazonaws.services.s3.model.EncryptionMaterials,com.amazonaws.services.s3.internal.crypto.S3KeyWrapScheme,java.security.SecureRandom,java.security.Provider,com.amazonaws.services.kms.AWSKMS,com.amazonaws.AmazonWebServiceRequest)>
		SHA-256: 174d2b2058ff0a866890e9c072bacb903e6667f36e73150e7e55240caf7f81a9
		Secure: false
	Object:
		Variable: $r11
		Type: byte[]
		Statement: $r11 = virtualinvoke r38.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r7)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial: com.amazonaws.services.s3.internal.crypto.SecuredCEK secureCEK(javax.crypto.SecretKey,com.amazonaws.services.s3.model.EncryptionMaterials,com.amazonaws.services.s3.internal.crypto.S3KeyWrapScheme,java.security.SecureRandom,java.security.Provider,com.amazonaws.services.kms.AWSKMS,com.amazonaws.AmazonWebServiceRequest)>
		SHA-256: 6518dab76002cc3c9a909a754c982b5afaee0a9c9ae41315952e222486209ae7
		Secure: false
	Object:
		Variable: r20
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r20.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r2)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme: com.amazonaws.services.s3.internal.crypto.CipherLite createCipherLite(javax.crypto.SecretKey,byte[],int,java.security.Provider)>
		SHA-256: fbdb1402135f85a03d3146b031d58dc035b1fc3c7f2bf8ee66c49463244c5967
		Secure: false
	Object:
		Variable: r0
		Type: byte[]
		Statement: r6 = virtualinvoke r22.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r0)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial: javax.crypto.SecretKey cek(byte[],java.lang.String,com.amazonaws.services.s3.model.EncryptionMaterials,java.security.Provider,com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme,com.amazonaws.services.kms.AWSKMS)>
		SHA-256: cd90302390ae8f01b6c374c3109d57f856780416cc1af7161d4763e3d534c03c
		Secure: false
	Object:
		Variable: $r13
		Type: byte[]
		Statement: $r13 = virtualinvoke r37.<javax.crypto.Cipher: byte[] wrap(java.security.Key)>(r0)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial: com.amazonaws.services.s3.internal.crypto.SecuredCEK secureCEK(javax.crypto.SecretKey,com.amazonaws.services.s3.model.EncryptionMaterials,com.amazonaws.services.s3.internal.crypto.S3KeyWrapScheme,java.security.SecureRandom,java.security.Provider,com.amazonaws.services.kms.AWSKMS,com.amazonaws.AmazonWebServiceRequest)>
		SHA-256: 145f9175359ae6744285b1a39c33fcd2d5ece191f266774864a4ecd4721d7c4d
		Secure: false
	Object:
		Variable: $r26
		Type: javax.crypto.KeyGenerator
		Statement: $r26 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.security.Provider)>(r3, r2)
		Method: <com.amazonaws.services.s3.internal.crypto.S3CryptoModuleBase: javax.crypto.SecretKey generateCEK(com.amazonaws.services.s3.model.EncryptionMaterials,java.security.Provider)>
		SHA-256: 96497cfd4508a31dca201f033fa6d7d99fc11e96cde42d6715c2bbbae6dbc709
		Secure: false
	Object:
		Variable: $r36
		Type: javax.crypto.Cipher
		Statement: $r36 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r35)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial: com.amazonaws.services.s3.internal.crypto.SecuredCEK secureCEK(javax.crypto.SecretKey,com.amazonaws.services.s3.model.EncryptionMaterials,com.amazonaws.services.s3.internal.crypto.S3KeyWrapScheme,java.security.SecureRandom,java.security.Provider,com.amazonaws.services.kms.AWSKMS,com.amazonaws.AmazonWebServiceRequest)>
		SHA-256: e780970632b5b03ae9c83c8274fe257f7dc0938194a68cebafaf8a63873e94c9
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, r20)
		Method: <com.amazonaws.auth.AwsChunkedEncodingInputStream: void <init>(java.io.InputStream,int,byte[],java.lang.String,java.lang.String,java.lang.String,com.amazonaws.auth.AWS4Signer)>
		SHA-256: 7bba06de4be39faf991c8dddf0b97af88cdf72db8de9f030c3fb6db30212d5e9
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer478)
		Method: <com.amazonaws.services.s3.internal.MD5DigestCalculatingInputStream: void resetDigest()>
		SHA-256: a782131158fb091eecbac01847b8bee0d24bc9c743222e90235a0b9af6e38a8f
		Secure: false
	Object:
		Variable: r26
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r26.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r6, varReplacer888)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial: javax.crypto.SecretKey cek(byte[],java.lang.String,com.amazonaws.services.s3.model.EncryptionMaterials,java.security.Provider,com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme,com.amazonaws.services.kms.AWSKMS)>
		SHA-256: 539360eada509651a30b40f2cc628bde18f0016cececf7ea4dc241832c260f2a
		Secure: false
	Object:
		Variable: r38
		Type: javax.crypto.Cipher
		Statement: r38 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>(r8, r4)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial: com.amazonaws.services.s3.internal.crypto.SecuredCEK secureCEK(javax.crypto.SecretKey,com.amazonaws.services.s3.model.EncryptionMaterials,com.amazonaws.services.s3.internal.crypto.S3KeyWrapScheme,java.security.SecureRandom,java.security.Provider,com.amazonaws.services.kms.AWSKMS,com.amazonaws.AmazonWebServiceRequest)>
		SHA-256: 14ca8fb7c12bb639076783d0ca87cfd61e31633b0f0e230a21c162b46f326c20
		Secure: false
	Object:
		Variable: $r11
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r13, $r14)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial: javax.crypto.SecretKey cekByKMS(byte[],java.lang.String,com.amazonaws.services.s3.model.EncryptionMaterials,com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme,com.amazonaws.services.kms.AWSKMS)>
		SHA-256: 1c4f40b42e7b2022e95e122a8d866519e477716624d28ff20a4eb94406c62a99
		Secure: false
	Object:
		Variable: r38
		Type: javax.crypto.Cipher
		Statement: r38 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r8)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial: com.amazonaws.services.s3.internal.crypto.SecuredCEK secureCEK(javax.crypto.SecretKey,com.amazonaws.services.s3.model.EncryptionMaterials,com.amazonaws.services.s3.internal.crypto.S3KeyWrapScheme,java.security.SecureRandom,java.security.Provider,com.amazonaws.services.kms.AWSKMS,com.amazonaws.AmazonWebServiceRequest)>
		SHA-256: 549d77d2ccd6c9db92e8c137e1c6aea900ab9a6303b1cabad08b6a33be3090e2
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.Mac
		Statement: $r9 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(r20)
		Method: <com.amazonaws.auth.AwsChunkedEncodingInputStream: void <init>(java.io.InputStream,int,byte[],java.lang.String,java.lang.String,java.lang.String,com.amazonaws.auth.AWS4Signer)>
		SHA-256: 9ee1a9189b144fc5b5f0b2f5cee277e6ef42608bbc7a44b66e70d5910047064e
		Secure: false
	Object:
		Variable: $r36
		Type: javax.crypto.Cipher
		Statement: $r36 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>(r35, r4)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial: com.amazonaws.services.s3.internal.crypto.SecuredCEK secureCEK(javax.crypto.SecretKey,com.amazonaws.services.s3.model.EncryptionMaterials,com.amazonaws.services.s3.internal.crypto.S3KeyWrapScheme,java.security.SecureRandom,java.security.Provider,com.amazonaws.services.kms.AWSKMS,com.amazonaws.AmazonWebServiceRequest)>
		SHA-256: 910a254b4ebf8ff5b8270bc631cb4e2c6f9ce8de535367cec7107c178fd37c4e
		Secure: false
	Object:
		Variable: r6
		Type: byte[]
		Statement: r6 = virtualinvoke r22.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r0)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial: javax.crypto.SecretKey cek(byte[],java.lang.String,com.amazonaws.services.s3.model.EncryptionMaterials,java.security.Provider,com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme,com.amazonaws.services.kms.AWSKMS)>
		SHA-256: d3d00d949a81198f10e5ef580839e788f0cbb8dd9b6f124ee0ece6effe2b177a
		Secure: false
	Object:
		Variable: $r26
		Type: javax.crypto.KeyGenerator
		Statement: $r26 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(r3)
		Method: <com.amazonaws.services.s3.internal.crypto.S3CryptoModuleBase: javax.crypto.SecretKey generateCEK(com.amazonaws.services.s3.model.EncryptionMaterials,java.security.Provider)>
		SHA-256: 6ea72a608145e99be36d16e4a9625baf3f2ecbe7f2409900c1600a5a32c74e2f
		Secure: false
	Object:
		Variable: $r20
		Type: javax.crypto.Cipher
		Statement: $r20 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>(r1, r3)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial: javax.crypto.SecretKey cek(byte[],java.lang.String,com.amazonaws.services.s3.model.EncryptionMaterials,java.security.Provider,com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme,com.amazonaws.services.kms.AWSKMS)>
		SHA-256: 359aebbdbfdade1accbe5ec15253114e82f5eec52ffdeb3829addd9f12827d16
		Secure: false
	Object:
		Variable: r16
		Type: javax.crypto.Cipher
		Statement: r16 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>($r7, r3)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme: com.amazonaws.services.s3.internal.crypto.CipherLite createCipherLite(javax.crypto.SecretKey,byte[],int,java.security.Provider)>
		SHA-256: 25a1275b15dd8043123d6251c8350c71eaa9da1614e03c111f70f74088fc91e3
		Secure: true
	Object:
		Variable: $r20
		Type: javax.crypto.Cipher
		Statement: $r20 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r1)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial: javax.crypto.SecretKey cek(byte[],java.lang.String,com.amazonaws.services.s3.model.EncryptionMaterials,java.security.Provider,com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme,com.amazonaws.services.kms.AWSKMS)>
		SHA-256: 31d5c56a75c032bb0f0d73539dbba95954f377da07d5035763167172e2064ce1
		Secure: false
	Object:
		Variable: $r28
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r28.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r30, $r32)
		Method: <com.amazonaws.services.s3.internal.crypto.S3CryptoModuleBase: com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial buildContentCryptoMaterial(com.amazonaws.services.s3.model.EncryptionMaterials,java.security.Provider,com.amazonaws.AmazonWebServiceRequest)>
		SHA-256: 9a3fc9e30990c1329c741789a224b696ceab1acd111dacf17a34f128e34808de
		Secure: false
	Object:
		Variable: r66
		Type: java.security.MessageDigest
		Statement: r66 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1313)
		Method: <com.amazonaws.services.s3.AmazonS3Client: com.amazonaws.services.s3.model.S3Object getObject(com.amazonaws.services.s3.model.GetObjectRequest)>
		SHA-256: c9b3e728544b7d6679f647c13b8009c36e83a46af87713ea56d7ff7e89fba058
		Secure: false
	Object:
		Variable: r7
		Type: byte[]
		Statement: $r11 = virtualinvoke r38.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r7)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial: com.amazonaws.services.s3.internal.crypto.SecuredCEK secureCEK(javax.crypto.SecretKey,com.amazonaws.services.s3.model.EncryptionMaterials,com.amazonaws.services.s3.internal.crypto.S3KeyWrapScheme,java.security.SecureRandom,java.security.Provider,com.amazonaws.services.kms.AWSKMS,com.amazonaws.AmazonWebServiceRequest)>
		SHA-256: da18363e4ca34d64ba6c5b5c01a360ee08be227935b769699e98019a30a5b628
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.MessageDigest
		Statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4022)
		Method: <com.amazonaws.auth.AwsChunkedEncodingInputStream: void <init>(java.io.InputStream,int,byte[],java.lang.String,java.lang.String,java.lang.String,com.amazonaws.auth.AWS4Signer)>
		SHA-256: 4ec94b2a37db1f083d593d5e5ae13ab0c5f60607f5e15d7d1872dfb7a8b33699
		Secure: false
	Object:
		Variable: r16
		Type: javax.crypto.Cipher
		Statement: r16 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>($r8, r4)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme: com.amazonaws.services.s3.internal.crypto.CipherLite createCipherLite(javax.crypto.SecretKey,byte[],int,java.security.Provider)>
		SHA-256: e7a3fcd001dded2d4946603f2364e4f9dfdce79e8a7a0f236a5f8cd345068b02
		Secure: true

Findings in Java Class: com.amazonaws.services.s3.internal.MD5DigestCalculatingInputStream

	 in Method: void resetDigest()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #a782131158fb091eecbac01847b8bee0d24bc9c743222e90235a0b9af6e38a8f)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer478)


	 in Method: byte[] getMd5Digest()
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #a782131158fb091eecbac01847b8bee0d24bc9c743222e90235a0b9af6e38a8f)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()


	 in Method: void reset()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #a782131158fb091eecbac01847b8bee0d24bc9c743222e90235a0b9af6e38a8f)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke r0.<com.amazonaws.services.s3.internal.MD5DigestCalculatingInputStream: void resetDigest()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #a782131158fb091eecbac01847b8bee0d24bc9c743222e90235a0b9af6e38a8f)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r4 = specialinvoke r0.<com.amazonaws.services.s3.internal.MD5DigestCalculatingInputStream: java.security.MessageDigest cloneFrom(java.security.MessageDigest)>($r3)


Findings in Java Class: com.amazonaws.services.s3.AmazonS3Client

	 in Method: com.amazonaws.services.s3.model.UploadPartResult doUploadPart(java.lang.String,java.lang.String,java.lang.String,int,long,com.amazonaws.Request,java.io.InputStream,com.amazonaws.services.s3.internal.MD5DigestCalculatingInputStream,com.amazonaws.event.ProgressListener)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #a782131158fb091eecbac01847b8bee0d24bc9c743222e90235a0b9af6e38a8f)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: interfaceinvoke r4.<com.amazonaws.Request: void setContent(java.io.InputStream)>(r5)


	 in Method: com.amazonaws.services.s3.model.UploadPartResult uploadPart(com.amazonaws.services.s3.model.UploadPartRequest)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #a782131158fb091eecbac01847b8bee0d24bc9c743222e90235a0b9af6e38a8f)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: staticinvoke <com.amazonaws.services.s3.model.S3DataSource$Utils: void cleanupDataSource(com.amazonaws.services.s3.model.S3DataSource,java.io.File,java.io.InputStream,java.io.InputStream,org.apache.commons.logging.Log)>(r33, r1, r2, r52, $r41)


	 in Method: com.amazonaws.services.s3.model.PutObjectResult putObject(com.amazonaws.services.s3.model.PutObjectRequest)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #a782131158fb091eecbac01847b8bee0d24bc9c743222e90235a0b9af6e38a8f)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r75)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #a782131158fb091eecbac01847b8bee0d24bc9c743222e90235a0b9af6e38a8f)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: staticinvoke <com.amazonaws.services.s3.model.S3DataSource$Utils: void cleanupDataSource(com.amazonaws.services.s3.model.S3DataSource,java.io.File,java.io.InputStream,java.io.InputStream,org.apache.commons.logging.Log)>(r70, r1, r2, r112, $r17)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #a782131158fb091eecbac01847b8bee0d24bc9c743222e90235a0b9af6e38a8f)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r39 = virtualinvoke r75.<com.amazonaws.services.s3.internal.MD5DigestCalculatingInputStream: byte[] getMd5Digest()>()


	 in Method: com.amazonaws.services.s3.model.S3Object getObject(com.amazonaws.services.s3.model.GetObjectRequest)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #c9b3e728544b7d6679f647c13b8009c36e83a46af87713ea56d7ff7e89fba058)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r66 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1313)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #c9b3e728544b7d6679f647c13b8009c36e83a46af87713ea56d7ff7e89fba058)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke r73.<com.amazonaws.services.s3.internal.DigestValidationInputStream: void <init>(java.io.InputStream,java.security.MessageDigest,byte[])>(r78, r66, r6)


Findings in Java Class: com.amazonaws.services.s3.internal.crypto.S3CryptoModuleBase

	 in Method: javax.crypto.SecretKey generateCEK(com.amazonaws.services.s3.model.EncryptionMaterials,java.security.Provider)
		RequiredPredicateError violating CrySL rule for javax.crypto.KeyGenerator
			Second parameter was not properly generated as randomized
			at statement: virtualinvoke r4.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>($i0, $r10)

		TypestateError violating CrySL rule for javax.crypto.KeyGenerator (on Object #6ea72a608145e99be36d16e4a9625baf3f2ecbe7f2409900c1600a5a32c74e2f)
			Unexpected call to method generateKey on object of type javax.crypto.KeyGenerator.
			at statement: r31 = virtualinvoke r4.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()

		TypestateError violating CrySL rule for javax.crypto.KeyGenerator (on Object #96497cfd4508a31dca201f033fa6d7d99fc11e96cde42d6715c2bbbae6dbc709)
			Unexpected call to method generateKey on object of type javax.crypto.KeyGenerator.
			at statement: r31 = virtualinvoke r4.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()


	 in Method: com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial buildContentCryptoMaterial(com.amazonaws.services.s3.model.EncryptionMaterials,java.security.Provider,com.amazonaws.AmazonWebServiceRequest)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r28.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r30, $r32)


Findings in Java Class: com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial

	 in Method: javax.crypto.SecretKey cek(byte[],java.lang.String,com.amazonaws.services.s3.model.EncryptionMaterials,java.security.Provider,com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme,com.amazonaws.services.kms.AWSKMS)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r22.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer887, r32)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #31d5c56a75c032bb0f0d73539dbba95954f377da07d5035763167172e2064ce1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: $r11 = virtualinvoke r21.<javax.crypto.Cipher: java.security.Key unwrap(byte[],java.lang.String,int)>(r0, r1, varReplacer885)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #359aebbdbfdade1accbe5ec15253114e82f5eec52ffdeb3829addd9f12827d16)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: $r11 = virtualinvoke r21.<javax.crypto.Cipher: java.security.Key unwrap(byte[],java.lang.String,int)>(r0, r1, varReplacer885)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r26.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r6, varReplacer888)

		ForbiddenMethodError violating CrySL rule for javax.crypto.Cipher
			Detected call to forbidden method void init(int,java.security.Key) of class javax.crypto.Cipher. Instead, call method <javax.crypto.Cipher: void init(int,java.security.Key)>.
			at statement: virtualinvoke r22.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer887, r32)


	 in Method: com.amazonaws.services.s3.internal.crypto.SecuredCEK secureCEK(javax.crypto.SecretKey,com.amazonaws.services.s3.model.EncryptionMaterials,com.amazonaws.services.s3.internal.crypto.S3KeyWrapScheme,java.security.SecureRandom,java.security.Provider,com.amazonaws.services.kms.AWSKMS,com.amazonaws.AmazonWebServiceRequest)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke r37.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom)>(varReplacer933, r45, r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r38.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer934, r47)

		ForbiddenMethodError violating CrySL rule for javax.crypto.Cipher
			Detected call to forbidden method void init(int,java.security.Key,java.security.SecureRandom) of class javax.crypto.Cipher. Instead, call method <javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom)>.
			at statement: virtualinvoke r37.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom)>(varReplacer933, r45, r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r37.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom)>(varReplacer933, r45, r3)


	 in Method: javax.crypto.SecretKey cekByKMS(byte[],java.lang.String,com.amazonaws.services.s3.model.EncryptionMaterials,com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme,com.amazonaws.services.kms.AWSKMS)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r13, $r14)


Findings in Java Class: com.amazonaws.services.s3.internal.AWSS3V4Signer

	 in Method: void processRequestPayload(com.amazonaws.SignableRequest,byte[],byte[],com.amazonaws.auth.internal.AWS4SignerRequestParams)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #9ee1a9189b144fc5b5f0b2f5cee277e6ef42608bbc7a44b66e70d5910047064e)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: interfaceinvoke r1.<com.amazonaws.SignableRequest: void setContent(java.io.InputStream)>(r12)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #4ec94b2a37db1f083d593d5e5ae13ab0c5f60607f5e15d7d1872dfb7a8b33699)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: interfaceinvoke r1.<com.amazonaws.SignableRequest: void setContent(java.io.InputStream)>(r12)


Findings in Java Class: com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme

	 in Method: com.amazonaws.services.s3.internal.crypto.CipherLite createCipherLite(javax.crypto.SecretKey,byte[],int,java.security.Provider)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r20.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r2)


Findings in Java Class: com.amazonaws.auth.AwsChunkedEncodingInputStream

	 in Method: void <init>(java.io.InputStream,int,byte[],java.lang.String,java.lang.String,java.lang.String,com.amazonaws.auth.AWS4Signer)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, r20)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 34

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 2
	RequiredPredicateError: 10
	IncompleteOperationError: 12
	ForbiddenMethodError: 2
	TypestateError: 3
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 10 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 13.49 s

Current Proejct: avro-1.8.2.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 776.2 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 3 analysis seeds within 1 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 5
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.2

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 7
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.29

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 8
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.38

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 8
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 8
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.63

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 8
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.75

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 8
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.88

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke r3.<java.security.MessageDigest: byte[] digest(byte[])>(r1)
		Method: <org.apache.avro.SchemaNormalization: byte[] fingerprint(java.lang.String,byte[])>
		SHA-256: 10d410b00e5400651fbdc2e0b35899e3d480e0a7bb6016dfd21c8ed43f678cae
		Secure: true
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke r10.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.avro.file.DataFileWriter: byte[] generateSync()>
		SHA-256: 8cd387e9c6596a4ce5c275b5fd83b125a4e763fe5c1a30fb9d1571535af278b4
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer138)
		Method: <org.apache.avro.Protocol: byte[] getMD5()>
		SHA-256: 2984ff3407e89247027c8f4089733e74760ca9ddf9675e63fa8d11e31891099c
		Secure: false
	Object:
		Variable: r3
		Type: java.security.MessageDigest
		Statement: r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r0)
		Method: <org.apache.avro.SchemaNormalization: byte[] fingerprint(java.lang.String,byte[])>
		SHA-256: 6f47be4aaef085441b4f6130973e05491388139da5edbba6a2a2bd157459eb43
		Secure: true
	Object:
		Variable: r1
		Type: byte[]
		Statement: $r4 = virtualinvoke r3.<java.security.MessageDigest: byte[] digest(byte[])>(r1)
		Method: <org.apache.avro.SchemaNormalization: byte[] fingerprint(java.lang.String,byte[])>
		SHA-256: eac91554e5865570a2f5a0df4fb0d819c61a531e31365008d6caecdd4d265111
		Secure: true
	Object:
		Variable: r10
		Type: java.security.MessageDigest
		Statement: r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer716)
		Method: <org.apache.avro.file.DataFileWriter: byte[] generateSync()>
		SHA-256: cc754e90e1d06c24bc46d9d600c12a2087df5da56835e3d86da9c98227771211
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r6)
		Method: <org.apache.avro.Protocol: byte[] getMD5()>
		SHA-256: 32f5270fa7f059bf8d682325ea2f31b58cbd3aa2e887ba2bce37729593f04ecd
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r7 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r6)
		Method: <org.apache.avro.Protocol: byte[] getMD5()>
		SHA-256: 28c733dee49d3e464eea1055a8c3e1d77f44d2ffe6735cfe592e73ebefd27e8b
		Secure: false

Findings in Java Class: org.apache.avro.Protocol

	 in Method: byte[] getMD5()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #2984ff3407e89247027c8f4089733e74760ca9ddf9675e63fa8d11e31891099c)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer138)


Findings in Java Class: org.apache.avro.file.DataFileWriter

	 in Method: byte[] generateSync()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #cc754e90e1d06c24bc46d9d600c12a2087df5da56835e3d86da9c98227771211)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer716)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 8

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 2
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 1 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 6.475 s

Current Proejct: ant-junit.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 413.5 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.669 s

Current Proejct: jackson-databind-2.10.1.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 698.3 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 1 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 1 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 6.127 s

Current Proejct: reflections-0.9.8.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 518.1 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.562 s

Current Proejct: azure-1.16.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 523.4 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.296 s

Current Proejct: scala-library-2.11.12.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 2.099 s 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 3 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 3 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 22.49 s

Current Proejct: elasticsearch-2.3.5.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 4.752 s 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 2 analysis seeds within 6 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 2
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <org.elasticsearch.common.SecureRandomHolder: void <clinit>()>
		SHA-256: d91e9f84a91d9635f5aef8b9d10176715c5134c28a96dd8abd9cdc0844dc30c5
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <org.elasticsearch.common.hash.MessageDigests$1: java.security.MessageDigest initialValue()>
		SHA-256: 84b36b3a4b5b6e4e322f93a7d9a53ae984e30d1099c485d3dd2b6adf5395b999
		Secure: false

Findings in Java Class: org.elasticsearch.common.hash.MessageDigests$1

	 in Method: java.lang.Object initialValue()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #84b36b3a4b5b6e4e322f93a7d9a53ae984e30d1099c485d3dd2b6adf5395b999)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: return $r1


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 2

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 1
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 15 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 34.33 s

Current Proejct: amazon-kinesis-producer-0.13.1.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 582.9 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 4 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 4
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.25

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 4
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 4
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.75

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: $r18
		Type: java.security.DigestOutputStream
		Statement: specialinvoke $r18.<java.security.DigestOutputStream: void <init>(java.io.OutputStream,java.security.MessageDigest)>(r3, $r19)
		Method: <com.amazonaws.services.kinesis.producer.HashedFileCopier: java.io.File copyFileFrom(java.io.InputStream,java.io.File,java.lang.String)>
		SHA-256: e45d866d32d31529767ae3d781e9606c62364accbb3cbea061ea75f340c94bcf
		Secure: false
	Object:
		Variable: $r19
		Type: java.security.MessageDigest
		Statement: $r19 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1195)
		Method: <com.amazonaws.services.kinesis.producer.HashedFileCopier: java.io.File copyFileFrom(java.io.InputStream,java.io.File,java.lang.String)>
		SHA-256: cf2d3a66556886d51592b40df47496fd4a47a51fba5dbfdf6b3268c2feb8c318
		Secure: false
	Object:
		Variable: $r44
		Type: java.security.DigestInputStream
		Statement: specialinvoke $r44.<java.security.DigestInputStream: void <init>(java.io.InputStream,java.security.MessageDigest)>($r45, $r46)
		Method: <com.amazonaws.services.kinesis.producer.HashedFileCopier: java.io.File copyFileFrom(java.io.InputStream,java.io.File,java.lang.String)>
		SHA-256: 6ea17711cead2c694df0771da1f2172b1a55a62f8886730d3f294441b113657c
		Secure: false
	Object:
		Variable: $r46
		Type: java.security.MessageDigest
		Statement: $r46 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1187)
		Method: <com.amazonaws.services.kinesis.producer.HashedFileCopier: java.io.File copyFileFrom(java.io.InputStream,java.io.File,java.lang.String)>
		SHA-256: 33ad6159f6c0ad11926c637fa1ca6d3a847679a7218926d136cc2ff062e53044
		Secure: false

Findings in Java Class: com.amazonaws.services.kinesis.producer.HashedFileCopier

	 in Method: java.io.File copyFileFrom(java.io.InputStream,java.io.File,java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #33ad6159f6c0ad11926c637fa1ca6d3a847679a7218926d136cc2ff062e53044)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r44.<java.security.DigestInputStream: void <init>(java.io.InputStream,java.security.MessageDigest)>($r45, $r46)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #cf2d3a66556886d51592b40df47496fd4a47a51fba5dbfdf6b3268c2feb8c318)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r19 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1195)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #cf2d3a66556886d51592b40df47496fd4a47a51fba5dbfdf6b3268c2feb8c318)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r18.<java.security.DigestOutputStream: void <init>(java.io.OutputStream,java.security.MessageDigest)>(r3, $r19)

		IncompleteOperationError violating CrySL rule for java.security.DigestInputStream (on Object #6ea17711cead2c694df0771da1f2172b1a55a62f8886730d3f294441b113657c)
			Operation on object of type java.security.DigestInputStream object not completed. Expected call to read
			at statement: $r47 = virtualinvoke r77.<java.security.DigestInputStream: java.security.MessageDigest getMessageDigest()>()

		IncompleteOperationError violating CrySL rule for java.security.DigestOutputStream (on Object #e45d866d32d31529767ae3d781e9606c62364accbb3cbea061ea75f340c94bcf)
			Operation on object of type java.security.DigestOutputStream object not completed. Expected call to write
			at statement: $r20 = virtualinvoke r4.<java.security.DigestOutputStream: java.security.MessageDigest getMessageDigest()>()

		IncompleteOperationError violating CrySL rule for java.security.DigestInputStream (on Object #6ea17711cead2c694df0771da1f2172b1a55a62f8886730d3f294441b113657c)
			Operation on object of type java.security.DigestInputStream object not completed. Expected call to read
			at statement: virtualinvoke r77.<java.security.DigestInputStream: void close()>()

		IncompleteOperationError violating CrySL rule for java.security.DigestInputStream (on Object #6ea17711cead2c694df0771da1f2172b1a55a62f8886730d3f294441b113657c)
			Operation on object of type java.security.DigestInputStream object not completed. Expected call to read
			at statement: virtualinvoke r77.<java.security.DigestInputStream: void close()>()


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 4

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 1
	IncompleteOperationError: 6
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 1 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 3.784 s

Current Proejct: hbc-core-2.2.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 410.6 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 1 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: $r15
		Type: java.security.SecureRandom
		Statement: specialinvoke $r15.<java.security.SecureRandom: void <init>()>()
		Method: <com.twitter.hbc.httpclient.auth.OAuth1: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: dd9875555e4aa80ba8e8e3a7c0e5f7c876755a64f4f50fe7e69f16204d3ef904
		Secure: true

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 1
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.321 s

Current Proejct: transport-7.5.1.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 403.7 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.103 s

Current Proejct: aws-java-sdk-core-1.11.271.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 824.3 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 9 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 10
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.1

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 10
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.2

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 10
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.3

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 10
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.4

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.45

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 13
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.46

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 13
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.54

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 13
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.62

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 13
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.69

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 13
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.77

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 13
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.85

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 13
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.92

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r7
		Type: javax.net.ssl.SSLContext
		Statement: r7 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2117)
		Method: <com.amazonaws.internal.SdkSSLContext: javax.net.ssl.SSLContext getPreferredSSLContext(java.security.SecureRandom)>
		SHA-256: f12ee43ea6e7d5d6efac1f4bed5d79cca2bf4e1a4a07fec5d3ee6158733dcf89
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, $r5)
		Method: <com.amazonaws.auth.AbstractAWSSigner: byte[] sign(byte[],byte[],com.amazonaws.auth.SigningAlgorithm)>
		SHA-256: b71fac4888cd35c6d0dcee0ace6be898e22d1c19a7b131d0ed37fbef397b9cb0
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r2)
		Method: <com.amazonaws.auth.SigningAlgorithm$1: javax.crypto.Mac initialValue()>
		SHA-256: 6241535ba00eed89475763ad3b47d8ef2bc21380a24be339f72208180e9987b3
		Secure: false
	Object:
		Variable: r4
		Type: java.security.MessageDigest
		Statement: r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1651)
		Method: <com.amazonaws.util.Md5Utils: byte[] computeMD5Hash(byte[])>
		SHA-256: 5a93d9c64220a38be2d934617d2b0e14661993db77e0402d1161ccd6c0d0453d
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer569)
		Method: <com.amazonaws.auth.AbstractAWSSigner$1: java.security.MessageDigest initialValue()>
		SHA-256: 3d8d61bd65cd639cbba463dcae20f6351c71e5aaecd408246ee188bc8f7a4ef4
		Secure: false
	Object:
		Variable: $r5
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, $r5)
		Method: <com.amazonaws.auth.AbstractAWSSigner: byte[] sign(byte[],byte[],com.amazonaws.auth.SigningAlgorithm)>
		SHA-256: ffb583fb4e7c7af4fbed8fa829cd6901dd1bf12b3dac4f05c6de83e149686286
		Secure: false
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r1 = virtualinvoke r4.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <com.amazonaws.util.Md5Utils: byte[] computeMD5Hash(byte[])>
		SHA-256: 9c0f83367340309257a4739cceb2b169666255825a980bc07b1910da2d2425d0
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke r4.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <com.amazonaws.util.Md5Utils: byte[] computeMD5Hash(byte[])>
		SHA-256: 38379e9dc4b48cabe7efeb171b23324abb63e7718804635ee47f1ee5c4db42c3
		Secure: false
	Object:
		Variable: r0
		Type: com.amazonaws.internal.SdkDigestInputStream
		Statement: specialinvoke r0.<java.security.DigestInputStream: void <init>(java.io.InputStream,java.security.MessageDigest)>(r1, r2)
		Method: <com.amazonaws.internal.SdkDigestInputStream: void <init>(java.io.InputStream,java.security.MessageDigest)>
		SHA-256: 6f3668597d15dd4767c7c3b7e8ff16191513524ae676799ae79c13e925e3ad87
		Secure: false
	Object:
		Variable: r3
		Type: byte[]
		Statement: r3 = virtualinvoke r23.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.amazonaws.util.Md5Utils: byte[] computeMD5Hash(java.io.InputStream)>
		SHA-256: 3b752115953e965e7db8afc37093696a1c9491ae4332aac8de00ef884fa2a8
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <com.amazonaws.ClientConfiguration: java.security.SecureRandom getSecureRandom()>
		SHA-256: f2622055671fb6da37196ba867aea52de160248c65ea7a00cf853ca73eb07531
		Secure: true
	Object:
		Variable: r5
		Type: javax.net.ssl.SSLContext
		Statement: r5 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2375)
		Method: <com.amazonaws.http.apache.client.impl.ApacheConnectionManagerFactory$TrustingSocketFactory: javax.net.ssl.SSLContext createSSLContext()>
		SHA-256: d5b079c53a78b04cfc48dcfcf555f7b889da7c07e13cfa6041d13cfaf9f61cfb
		Secure: false
	Object:
		Variable: r23
		Type: java.security.MessageDigest
		Statement: r23 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1650)
		Method: <com.amazonaws.util.Md5Utils: byte[] computeMD5Hash(java.io.InputStream)>
		SHA-256: ba31dd74e9667b763562e9cc89f2ec7e33bf9bc188a368b011fd9d6c2a523748
		Secure: false

Findings in Java Class: com.amazonaws.auth.SigningAlgorithm$1

	 in Method: java.lang.Object initialValue()
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #6241535ba00eed89475763ad3b47d8ef2bc21380a24be339f72208180e9987b3)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: return $r1


Findings in Java Class: com.amazonaws.auth.AbstractAWSSigner$1

	 in Method: java.lang.Object initialValue()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #3d8d61bd65cd639cbba463dcae20f6351c71e5aaecd408246ee188bc8f7a4ef4)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: return $r1


Findings in Java Class: com.amazonaws.util.Md5Utils

	 in Method: byte[] computeMD5Hash(java.io.InputStream)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ba31dd74e9667b763562e9cc89f2ec7e33bf9bc188a368b011fd9d6c2a523748)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r23 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1650)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #ba31dd74e9667b763562e9cc89f2ec7e33bf9bc188a368b011fd9d6c2a523748)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: r3 = virtualinvoke r23.<java.security.MessageDigest: byte[] digest()>()


	 in Method: byte[] computeMD5Hash(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #5a93d9c64220a38be2d934617d2b0e14661993db77e0402d1161ccd6c0d0453d)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1651)


Findings in Java Class: com.amazonaws.internal.SdkSSLContext

	 in Method: javax.net.ssl.SSLContext getPreferredSSLContext(java.security.SecureRandom)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r7.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2115, varReplacer2115, r0)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r7.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2115, varReplacer2115, r0)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #f12ee43ea6e7d5d6efac1f4bed5d79cca2bf4e1a4a07fec5d3ee6158733dcf89)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: r7 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2117)


Findings in Java Class: com.amazonaws.auth.AbstractAWSSigner

	 in Method: byte[] hash(java.io.InputStream)
		IncompleteOperationError violating CrySL rule for java.security.DigestInputStream (on Object #6f3668597d15dd4767c7c3b7e8ff16191513524ae676799ae79c13e925e3ad87)
			Operation on object of type com.amazonaws.internal.SdkDigestInputStream object not completed. Expected call to read
			at statement: $r5 = virtualinvoke r2.<java.security.DigestInputStream: java.security.MessageDigest getMessageDigest()>()


	 in Method: byte[] sign(byte[],byte[],com.amazonaws.auth.SigningAlgorithm)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, $r5)


Findings in Java Class: com.amazonaws.http.apache.client.impl.ApacheConnectionManagerFactory$TrustingSocketFactory

	 in Method: javax.net.ssl.SSLContext createSSLContext()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2373, r9, varReplacer2373)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2373, r9, varReplacer2373)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #d5b079c53a78b04cfc48dcfcf555f7b889da7c07e13cfa6041d13cfaf9f61cfb)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: r5 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2375)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 13

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 4
	IncompleteOperationError: 3
	TypestateError: 1
	RequiredPredicateError: 5
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 4.290 s

Current Proejct: transport-6.3.1.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 382.6 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.087 s

Current Proejct: cassandra-driver-core-3.0.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 692.6 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 3 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 4
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.25

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 5
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.4

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 6
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 6
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 6
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.83

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r5
		Type: java.security.MessageDigest
		Statement: r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1576)
		Method: <com.datastax.driver.core.PagingState: byte[] hash(com.datastax.driver.core.Statement,com.datastax.driver.core.ProtocolVersion,com.datastax.driver.core.CodecRegistry)>
		SHA-256: e988021b2bd9e382a9ba524c1a2dd67eddfc4d8dd532512e6009f9a56f831d56
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke r8.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.datastax.driver.core.Token$RPToken$RPTokenFactory: java.math.BigInteger md5(java.nio.ByteBuffer)>
		SHA-256: b2e4b770ac11b4ecaca44b2180af53ccb99a21444a3cb1778714dcdc83a72c6a
		Secure: false
	Object:
		Variable: r8
		Type: java.security.MessageDigest
		Statement: r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2410)
		Method: <com.datastax.driver.core.Token$RPToken$RPTokenFactory: java.math.BigInteger md5(java.nio.ByteBuffer)>
		SHA-256: 77e5cb3dcc91c0bed47e1cfd5c31044adaf35a0b8524c6982dd04fbb9aa82fdf
		Secure: false
	Object:
		Variable: r4
		Type: byte[]
		Statement: r4 = virtualinvoke r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.datastax.driver.core.PagingState: byte[] hash(com.datastax.driver.core.Statement,com.datastax.driver.core.ProtocolVersion,com.datastax.driver.core.CodecRegistry)>
		SHA-256: 98bb0e6f5f9166e519db80b99a23a4cb4416c3377f290561ae390a267bc54e11
		Secure: false
	Object:
		Variable: r10
		Type: java.security.MessageDigest
		Statement: r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3551)
		Method: <com.datastax.driver.core.utils.UUIDs: long makeNode()>
		SHA-256: f03c5e48175ea7784fc12462f1505ec120b1cc91461bedaafb6b09433595927f
		Secure: false
	Object:
		Variable: r14
		Type: byte[]
		Statement: r14 = virtualinvoke r10.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.datastax.driver.core.utils.UUIDs: long makeNode()>
		SHA-256: 3057e34bfb34b17544aa3ee0d01e23f7cc7c0194e426562afa7a4dd50e9cc962
		Secure: false

Findings in Java Class: com.datastax.driver.core.JdkSSLOptions

	 in Method: javax.net.ssl.SSLContext makeDefaultContext()
		ForbiddenMethodError violating CrySL rule for javax.net.ssl.SSLContext
			Detected call to forbidden method javax.net.ssl.SSLContext getDefault() of class javax.net.ssl.SSLContext. Instead, call method <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>.
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getDefault()>()


Findings in Java Class: com.datastax.driver.core.PagingState

	 in Method: byte[] hash(com.datastax.driver.core.Statement,com.datastax.driver.core.ProtocolVersion,com.datastax.driver.core.CodecRegistry)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e988021b2bd9e382a9ba524c1a2dd67eddfc4d8dd532512e6009f9a56f831d56)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1576)


Findings in Java Class: com.datastax.driver.core.Token$RPToken$RPTokenFactory

	 in Method: java.math.BigInteger md5(java.nio.ByteBuffer)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #77e5cb3dcc91c0bed47e1cfd5c31044adaf35a0b8524c6982dd04fbb9aa82fdf)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r8 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2410)


Findings in Java Class: com.datastax.driver.core.utils.UUIDs

	 in Method: long makeNode()
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #f03c5e48175ea7784fc12462f1505ec120b1cc91461bedaafb6b09433595927f)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: r14 = virtualinvoke r10.<java.security.MessageDigest: byte[] digest()>()

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #f03c5e48175ea7784fc12462f1505ec120b1cc91461bedaafb6b09433595927f)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3551)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 6

	CogniCrypt found the following violations. For details see description above.
	ForbiddenMethodError: 1
	TypestateError: 1
	ConstraintError: 3
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 1 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 4.244 s

Current Proejct: jackson-annotations-2.10.1.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 423.6 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.228 s

Current Proejct: parquet-hadoop-1.10.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 622.8 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 2.613 s

Current Proejct: powermock-api-mockito2-2.0.4.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 410.9 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.241 s

Current Proejct: janino.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 603.3 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 3.945 s

Current Proejct: kafka-schema-registry-client-4.1.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 518.0 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.630 s

Current Proejct: jackson-core-2.10.1.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 577.3 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 3.109 s

Current Proejct: javax.activation-api-1.2.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 426.1 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.116 s

Current Proejct: aws-java-sdk-kms-1.11.271.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 504.0 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 2.529 s

Current Proejct: aws-java-sdk-dynamodb-1.11.271.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 924.6 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 1 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 1 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 6.082 s

Current Proejct: commons-io.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 427.4 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.847 s

Current Proejct: elasticsearch-rest-high-level-client-7.5.1.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 739.3 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 1 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 1 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 7.972 s

Current Proejct: kafka-clients-2.2.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 1.093 s 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 11 analysis seeds within 2 seconds!
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.kafka.common.network.Authenticator: void reauthenticate(org.apache.kafka.common.network.ReauthenticationContext)> for class org.apache.kafka.common.network.PlaintextChannelBuilder$PlaintextAuthenticator
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.kafka.common.network.Authenticator: void reauthenticate(org.apache.kafka.common.network.ReauthenticationContext)> for class org.apache.kafka.common.network.PlaintextChannelBuilder$PlaintextAuthenticator
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.kafka.common.network.Authenticator: void reauthenticate(org.apache.kafka.common.network.ReauthenticationContext)> for class org.apache.kafka.common.network.SslChannelBuilder$SslAuthenticator
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.kafka.common.network.Authenticator: void reauthenticate(org.apache.kafka.common.network.ReauthenticationContext)> for class org.apache.kafka.common.network.SslChannelBuilder$SslAuthenticator
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.09

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 12
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.17

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 13
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.23

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 14
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.29

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 14
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.36

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 14
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.43

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 14
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 14
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.57

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 14
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.64

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 15
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 16
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.69

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 16
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.75

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 16
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.81

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 14 of 16
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.88

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 15 of 16
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.94

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: $r6
		Type: java.security.SecureRandom
		Statement: specialinvoke $r6.<java.security.SecureRandom: void <init>()>()
		Method: <org.apache.kafka.common.security.scram.internals.ScramFormatter: void <init>(org.apache.kafka.common.security.scram.internals.ScramMechanism)>
		SHA-256: f675604eef62440b07ac462f9b7d8da83f0e4e6ab63fe1741090af71f698c5ce
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Mac
		Statement: $r5 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r4)
		Method: <org.apache.kafka.common.security.scram.internals.ScramFormatter: void <init>(org.apache.kafka.common.security.scram.internals.ScramMechanism)>
		SHA-256: e743926a3587075dd67e6b7c14e0fd73dc72a99bac37d8e0f19a7ec2ae31fd6f
		Secure: false
	Object:
		Variable: r26
		Type: javax.net.ssl.KeyManager[]
		Statement: r26 = virtualinvoke r29.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <org.apache.kafka.common.security.ssl.SslFactory: javax.net.ssl.SSLContext createSSLContext(org.apache.kafka.common.security.ssl.SslFactory$SecurityStore,org.apache.kafka.common.security.ssl.SslFactory$SecurityStore)>
		SHA-256: be1e6eb3c393e8345a3a15688e3de18366739e70c79778a4c6f41bd21d76080f
		Secure: false
	Object:
		Variable: r37
		Type: java.security.KeyStore
		Statement: r37 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r10)
		Method: <org.apache.kafka.common.security.ssl.SslFactory$SecurityStore: java.security.KeyStore load()>
		SHA-256: c51a64dc676552d170079a202ccde8ff7044cf88d53e8d10ce9a67d34e29e951
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, $r8)
		Method: <org.apache.kafka.common.security.scram.internals.ScramFormatter: byte[] hi(byte[],byte[],int)>
		SHA-256: 622f04124e415f669b9c08bc4758c73e57f1f257dbaa0564e4acdad5e6d56d90
		Secure: false
	Object:
		Variable: $r8
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, $r8)
		Method: <org.apache.kafka.common.security.scram.internals.ScramFormatter: byte[] hi(byte[],byte[],int)>
		SHA-256: 538c9cefc2dfbc84364b26a41b51b032cf34fc4d0a180ff71d44de54ce04673e
		Secure: false
	Object:
		Variable: r36
		Type: javax.net.ssl.TrustManagerFactory
		Statement: r36 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(r35)
		Method: <org.apache.kafka.common.security.ssl.SslFactory: javax.net.ssl.SSLContext createSSLContext(org.apache.kafka.common.security.ssl.SslFactory$SecurityStore,org.apache.kafka.common.security.ssl.SslFactory$SecurityStore)>
		SHA-256: ea3866ae4042354d77181c23428c1b593d3b86b63c4fa4cf423041bdaf743817
		Secure: false
	Object:
		Variable: $r14
		Type: java.security.SecureRandom
		Statement: $r14 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(r5)
		Method: <org.apache.kafka.common.security.ssl.SslFactory: void configure(java.util.Map)>
		SHA-256: f45c8f2c568c3b069e6cfc79443f26d7e6d3a312b4973a9008edb7a8b9da1042
		Secure: true
	Object:
		Variable: $r5
		Type: javax.net.ssl.TrustManager[]
		Statement: $r5 = virtualinvoke r36.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <org.apache.kafka.common.security.ssl.SslFactory: javax.net.ssl.SSLContext createSSLContext(org.apache.kafka.common.security.ssl.SslFactory$SecurityStore,org.apache.kafka.common.security.ssl.SslFactory$SecurityStore)>
		SHA-256: 13fb0ef9269f9c184661e05625b325761048af13701936c94924620e71fe379d
		Secure: false
	Object:
		Variable: r29
		Type: javax.net.ssl.KeyManagerFactory
		Statement: r29 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(r28)
		Method: <org.apache.kafka.common.security.ssl.SslFactory: javax.net.ssl.SSLContext createSSLContext(org.apache.kafka.common.security.ssl.SslFactory$SecurityStore,org.apache.kafka.common.security.ssl.SslFactory$SecurityStore)>
		SHA-256: eeef997849ce8fbcb97fadcf4ccd8eaf0c396a0aa7b004116b729a8c3440b783
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <org.apache.kafka.common.security.scram.internals.ScramFormatter: void <init>(org.apache.kafka.common.security.scram.internals.ScramMechanism)>
		SHA-256: 7ea18bfd6cfd8f795820b8818946414ca523e0c740e13975322ee3d3521519ca
		Secure: false
	Object:
		Variable: $r6
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, $r6)
		Method: <org.apache.kafka.common.security.scram.internals.ScramFormatter: byte[] hmac(byte[],byte[])>
		SHA-256: 32005a755694dbf6b6a2ebb85ee7b6c7fc18b2b9635ab648537a2715c09327fe
		Secure: false
	Object:
		Variable: r25
		Type: javax.net.ssl.SSLContext
		Statement: r25 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r4)
		Method: <org.apache.kafka.common.security.ssl.SslFactory: javax.net.ssl.SSLContext createSSLContext(org.apache.kafka.common.security.ssl.SslFactory$SecurityStore,org.apache.kafka.common.security.ssl.SslFactory$SecurityStore)>
		SHA-256: 1f5aa0a7904adb519900211c6620d8b55c49ebca4ee13fb537c6b6a518e684b9
		Secure: false
	Object:
		Variable: r25
		Type: javax.net.ssl.SSLContext
		Statement: r25 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>($r24, $r23)
		Method: <org.apache.kafka.common.security.ssl.SslFactory: javax.net.ssl.SSLContext createSSLContext(org.apache.kafka.common.security.ssl.SslFactory$SecurityStore,org.apache.kafka.common.security.ssl.SslFactory$SecurityStore)>
		SHA-256: 3142437ae57bc7f5885144201db68f990b812132cc8514a154ccea4caf6cd23e
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, $r6)
		Method: <org.apache.kafka.common.security.scram.internals.ScramFormatter: byte[] hmac(byte[],byte[])>
		SHA-256: ee909578910386f215dd906531014eccb865c90a0fc2bc87086ee1126130fefd
		Secure: false
	Object:
		Variable: r3
		Type: javax.net.ssl.SSLEngine
		Statement: r3 = virtualinvoke r1.<javax.net.ssl.SSLContext: javax.net.ssl.SSLEngine createSSLEngine(java.lang.String,int)>(r2, i0)
		Method: <org.apache.kafka.common.security.ssl.SslFactory: javax.net.ssl.SSLEngine createSslEngine(javax.net.ssl.SSLContext,java.lang.String,int)>
		SHA-256: f4c2326e971f901a0b319a06400de0126abe5319770d123200dce9547fb04c85
		Secure: false

Findings in Java Class: org.apache.kafka.common.security.ssl.SslFactory

	 in Method: javax.net.ssl.SSLContext createSSLContext(org.apache.kafka.common.security.ssl.SslFactory$SecurityStore,org.apache.kafka.common.security.ssl.SslFactory$SecurityStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r29.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r30, $r22)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #eeef997849ce8fbcb97fadcf4ccd8eaf0c396a0aa7b004116b729a8c3440b783)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r29.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r30, $r22)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r36.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(r38)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r25.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(r26, $r5, $r6)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r25.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(r26, $r5, $r6)


	 in Method: javax.net.ssl.SSLEngine createSslEngine(javax.net.ssl.SSLContext,java.lang.String,int)
		TypestateError violating CrySL rule for javax.net.ssl.SSLContext (on Object #1f5aa0a7904adb519900211c6620d8b55c49ebca4ee13fb537c6b6a518e684b9)
			Unexpected call to method createSSLEngine on object of type javax.net.ssl.SSLContext.
			at statement: r3 = virtualinvoke r1.<javax.net.ssl.SSLContext: javax.net.ssl.SSLEngine createSSLEngine(java.lang.String,int)>(r2, i0)

		TypestateError violating CrySL rule for javax.net.ssl.SSLContext (on Object #3142437ae57bc7f5885144201db68f990b812132cc8514a154ccea4caf6cd23e)
			Unexpected call to method createSSLEngine on object of type javax.net.ssl.SSLContext.
			at statement: r3 = virtualinvoke r1.<javax.net.ssl.SSLContext: javax.net.ssl.SSLEngine createSSLEngine(java.lang.String,int)>(r2, i0)


Findings in Java Class: org.apache.kafka.common.security.ssl.SslFactory$SecurityStore

	 in Method: java.security.KeyStore load()
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #c51a64dc676552d170079a202ccde8ff7044cf88d53e8d10ce9a67d34e29e951)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r37.<java.security.KeyStore: void load(java.io.InputStream,char[])>(r35, r1)


Findings in Java Class: org.apache.kafka.common.security.scram.internals.ScramSaslServer$ScramSaslServerFactory

	 in Method: javax.security.sasl.SaslServer createSaslServer(java.lang.String,java.lang.String,java.lang.String,java.util.Map,javax.security.auth.callback.CallbackHandler)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #e743926a3587075dd67e6b7c14e0fd73dc72a99bac37d8e0f19a7ec2ae31fd6f)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: return $r7

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #7ea18bfd6cfd8f795820b8818946414ca523e0c740e13975322ee3d3521519ca)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: return $r7


Findings in Java Class: org.apache.kafka.common.security.scram.internals.ScramSaslClient$ScramSaslClientFactory

	 in Method: javax.security.sasl.SaslClient createSaslClient(java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.util.Map,javax.security.auth.callback.CallbackHandler)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #e743926a3587075dd67e6b7c14e0fd73dc72a99bac37d8e0f19a7ec2ae31fd6f)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: return $r8

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #7ea18bfd6cfd8f795820b8818946414ca523e0c740e13975322ee3d3521519ca)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: return $r8


Findings in Java Class: org.apache.kafka.common.security.scram.internals.ScramFormatter

	 in Method: byte[] hi(byte[],byte[],int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, $r8)


	 in Method: byte[] hmac(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, $r6)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 16

	CogniCrypt found the following violations. For details see description above.
	NeverTypeOfError: 2
	RequiredPredicateError: 6
	IncompleteOperationError: 4
	TypestateError: 2
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 45 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 52.26 s

Current Proejct: aws-java-sdk-kinesis-1.11.603.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 679.9 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 1 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 1 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 5.359 s

Current Proejct: slf4j-log4j12-1.7.15.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 407.7 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.319 s

Current Proejct: presto-hive-0.187.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 557.9 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 4.128 s

Current Proejct: hbase-hadoop-compat-1.4.3.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 466.3 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.155 s

Current Proejct: jackson-dataformat-smile-2.10.1.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 460.9 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.880 s

Current Proejct: hadoop-openstack-2.8.1.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 422.7 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.494 s

Current Proejct: scala-compiler-2.11.12.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 8.948 s 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 1 analysis seeds within 13 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r22
		Type: java.security.SecureRandom
		Statement: specialinvoke r22.<java.security.SecureRandom: void <init>()>()
		Method: <scala.tools.nsc.CompileSocket: void setPort(int)>
		SHA-256: 1b95f638948a8c86982d49d3ab046d6b29d939d4823afb4fd7d243236f74a258
		Secure: true

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 1
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 13 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 41.65 s

Current Proejct: elasticsearch-rest-high-level-client-6.3.1.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 406.3 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.395 s

Current Proejct: kubernetes-client-4.5.2.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 548.5 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 9 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 9
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.11

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 9
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.22

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.27

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.36

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.45

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.55

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 12
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.58

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 13
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.62

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 14
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.64

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 14
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.71

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 14
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.79

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 14
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.86

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 14
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.93

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: $r9
		Type: javax.net.ssl.TrustManager[]
		Statement: $r9 = virtualinvoke r4.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <io.fabric8.kubernetes.client.internal.SSLUtils: javax.net.ssl.TrustManager[] trustManagers(java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String)>
		SHA-256: 282d33669d6e6ad24e72e60e9564cced15e8698cde13e722a7a1f2e70162916f
		Secure: false
	Object:
		Variable: r12
		Type: javax.net.ssl.KeyManager[]
		Statement: r12 = virtualinvoke r9.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <io.fabric8.kubernetes.client.internal.SSLUtils: javax.net.ssl.KeyManager[] keyManagers(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: c1d5ae6bd6491f8533a3d50d66989b7d45dcdd60864371b0a5f75b47a78ff7f8
		Secure: false
	Object:
		Variable: r72
		Type: javax.net.ssl.SSLContext
		Statement: r72 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1192)
		Method: <io.fabric8.kubernetes.client.utils.HttpClientUtils: okhttp3.OkHttpClient createHttpClient(io.fabric8.kubernetes.client.Config,java.util.function.Consumer)>
		SHA-256: 8b806225baf53303927745473fc1cbe3686580bc342099619ec67435dba3da10
		Secure: false
	Object:
		Variable: r7
		Type: javax.net.ssl.KeyManagerFactory
		Statement: r7 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r10)
		Method: <io.fabric8.kubernetes.client.internal.SSLUtils: javax.net.ssl.KeyManager[] keyManagers(java.io.InputStream,java.io.InputStream,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 8931ee7b6757694058161415d516e86c68102416efa3d4137c41b6e0c17405f4
		Secure: false
	Object:
		Variable: r2
		Type: byte[]
		Statement: r2 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r6)
		Method: <io.fabric8.kubernetes.client.dsl.internal.RollingUpdater: java.lang.String md5sum(io.fabric8.kubernetes.api.model.HasMetadata)>
		SHA-256: 851c6d378f968e0dd732f24ad6c61904f1606bbad0928f3ab2e7b7a3950ba671
		Secure: false
	Object:
		Variable: r2
		Type: javax.net.ssl.SSLContext
		Statement: r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1250)
		Method: <io.fabric8.kubernetes.client.internal.SSLUtils: javax.net.ssl.SSLContext sslContext(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[])>
		SHA-256: 91c8e99bada809921472d6e56537ab7825aef039e585305312839cd5a31aca3e
		Secure: false
	Object:
		Variable: r3
		Type: java.security.KeyStore
		Statement: r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer8)
		Method: <io.fabric8.kubernetes.client.internal.CertUtils: java.security.KeyStore createTrustStore(java.io.InputStream,java.lang.String,char[])>
		SHA-256: 29b269145a51206d5d0aa3c0c6949a1d91b9f2f2ac511bb19926cb69d7ac5798
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <io.fabric8.kubernetes.client.internal.SSLUtils: javax.net.ssl.SSLContext sslContext(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[])>
		SHA-256: e0ccd8c5dd9270eb1458957953dcf826f211081a45393175c2aea075ec81f99d
		Secure: true
	Object:
		Variable: r9
		Type: java.security.KeyStore
		Statement: r9 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer12)
		Method: <io.fabric8.kubernetes.client.internal.CertUtils: java.security.KeyStore createKeyStore(java.io.InputStream,java.io.InputStream,java.lang.String,char[],java.lang.String,char[])>
		SHA-256: 2cb82229aff65f357004690afcb90c859faa0c61f71c18e5cae732270912061e
		Secure: false
	Object:
		Variable: $r12
		Type: javax.net.ssl.KeyManager[]
		Statement: $r12 = virtualinvoke r7.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <io.fabric8.kubernetes.client.internal.SSLUtils: javax.net.ssl.KeyManager[] keyManagers(java.io.InputStream,java.io.InputStream,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: ad83a744dddfc9c2376b900c28a43f7e17c17c30f709c1d66b0e0ea4cfc47719
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: r2 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r6)
		Method: <io.fabric8.kubernetes.client.dsl.internal.RollingUpdater: java.lang.String md5sum(io.fabric8.kubernetes.api.model.HasMetadata)>
		SHA-256: 944684da5a48ddf5934b07167e362d0571bc6d5bca166bdb386d7397e6ec7d53
		Secure: false
	Object:
		Variable: r4
		Type: javax.net.ssl.TrustManagerFactory
		Statement: r4 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r5)
		Method: <io.fabric8.kubernetes.client.internal.SSLUtils: javax.net.ssl.TrustManager[] trustManagers(java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String)>
		SHA-256: 70188b6487e41ef236a1d6242f4f8d6b90c1605f924984b3ad4378a8b3c935f0
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1087)
		Method: <io.fabric8.kubernetes.client.dsl.internal.RollingUpdater: java.lang.String md5sum(io.fabric8.kubernetes.api.model.HasMetadata)>
		SHA-256: 4104cf8bb0644cdaaecaac694260487f7b04bbbdc3f6b38e617c8616ddda9e84
		Secure: false
	Object:
		Variable: r9
		Type: javax.net.ssl.KeyManagerFactory
		Statement: r9 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r10)
		Method: <io.fabric8.kubernetes.client.internal.SSLUtils: javax.net.ssl.KeyManager[] keyManagers(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 7eb666f53f645c578cc3991573464d7d0dfe72fdadf4d4602352b5e38d6514cb
		Secure: false

Findings in Java Class: io.fabric8.kubernetes.client.internal.CertUtils

	 in Method: boolean loadDefaultStoreFile(java.security.KeyStore,java.io.File,char[])
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #29b269145a51206d5d0aa3c0c6949a1d91b9f2f2ac511bb19926cb69d7ac5798)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r0.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r6, r2)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #29b269145a51206d5d0aa3c0c6949a1d91b9f2f2ac511bb19926cb69d7ac5798)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r0.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r6, r2)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #29b269145a51206d5d0aa3c0c6949a1d91b9f2f2ac511bb19926cb69d7ac5798)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r0.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r6, r2)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #29b269145a51206d5d0aa3c0c6949a1d91b9f2f2ac511bb19926cb69d7ac5798)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r0.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r6, r2)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #29b269145a51206d5d0aa3c0c6949a1d91b9f2f2ac511bb19926cb69d7ac5798)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r0.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r6, r2)


	 in Method: void loadDefaultTrustStoreFile(java.security.KeyStore,char[])
		TypestateError violating CrySL rule for java.security.KeyStore (on Object #29b269145a51206d5d0aa3c0c6949a1d91b9f2f2ac511bb19926cb69d7ac5798)
			Unexpected call to method load on object of type java.security.KeyStore. Expect a call to one of the following methods getKey,getEntry,setEntry
			at statement: virtualinvoke r0.<java.security.KeyStore: void load(java.security.KeyStore$LoadStoreParameter)>(varReplacer18)


	 in Method: java.security.KeyStore createKeyStore(java.io.InputStream,java.io.InputStream,java.lang.String,char[],java.lang.String,char[])
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #2cb82229aff65f357004690afcb90c859faa0c61f71c18e5cae732270912061e)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r9.<java.security.KeyStore: void load(java.io.InputStream,char[])>(r15, r5)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #2cb82229aff65f357004690afcb90c859faa0c61f71c18e5cae732270912061e)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r9.<java.security.KeyStore: void load(java.io.InputStream,char[])>(r15, r5)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #2cb82229aff65f357004690afcb90c859faa0c61f71c18e5cae732270912061e)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r9.<java.security.KeyStore: void load(java.io.InputStream,char[])>(r15, r5)


	 in Method: void loadDefaultKeyStoreFile(java.security.KeyStore,char[])
		TypestateError violating CrySL rule for java.security.KeyStore (on Object #2cb82229aff65f357004690afcb90c859faa0c61f71c18e5cae732270912061e)
			Unexpected call to method load on object of type java.security.KeyStore. Expect a call to one of the following methods getKey,getEntry,setEntry
			at statement: virtualinvoke r0.<java.security.KeyStore: void load(java.security.KeyStore$LoadStoreParameter)>(varReplacer24)


Findings in Java Class: io.fabric8.kubernetes.client.internal.SSLUtils

	 in Method: javax.net.ssl.TrustManager[] trustManagers(java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r4.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(r8)

		IncompleteOperationError violating CrySL rule for javax.net.ssl.TrustManagerFactory (on Object #70188b6487e41ef236a1d6242f4f8d6b90c1605f924984b3ad4378a8b3c935f0)
			Operation on object of type javax.net.ssl.TrustManagerFactory object not completed. Expected call to init
			at statement: r4 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r5)

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #29b269145a51206d5d0aa3c0c6949a1d91b9f2f2ac511bb19926cb69d7ac5798)
			Operation on object of type java.security.KeyStore object not completed. Expected call to load
			at statement: virtualinvoke r4.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(r8)


	 in Method: javax.net.ssl.KeyManager[] keyManagers(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #2cb82229aff65f357004690afcb90c859faa0c61f71c18e5cae732270912061e)
			Operation on object of type java.security.KeyStore object not completed. Expected call to load
			at statement: virtualinvoke r9.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r8, $r11)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #7eb666f53f645c578cc3991573464d7d0dfe72fdadf4d4602352b5e38d6514cb)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r9.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r8, $r11)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r9.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r8, $r11)


	 in Method: javax.net.ssl.KeyManager[] keyManagers(java.io.InputStream,java.io.InputStream,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r7.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r6, $r11)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #8931ee7b6757694058161415d516e86c68102416efa3d4137c41b6e0c17405f4)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r7.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r6, $r11)

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #2cb82229aff65f357004690afcb90c859faa0c61f71c18e5cae732270912061e)
			Operation on object of type java.security.KeyStore object not completed. Expected call to load
			at statement: virtualinvoke r7.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r6, $r11)


	 in Method: javax.net.ssl.SSLContext sslContext(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[])
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(r0, r1, $r3)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(r0, r1, $r3)


Findings in Java Class: io.fabric8.kubernetes.client.dsl.internal.RollingUpdater

	 in Method: java.lang.String md5sum(io.fabric8.kubernetes.api.model.HasMetadata)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #4104cf8bb0644cdaaecaac694260487f7b04bbbdc3f6b38e617c8616ddda9e84)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1087)


Findings in Java Class: io.fabric8.kubernetes.client.utils.HttpClientUtils

	 in Method: okhttp3.OkHttpClient createHttpClient(io.fabric8.kubernetes.client.Config,java.util.function.Consumer)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r72.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(r3, r2, varReplacer1187)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r72.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(r3, r2, varReplacer1187)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 14

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 7
	ConstraintError: 1
	IncompleteOperationError: 4
	TypestateError: 2
	NeverTypeOfError: 10
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 1 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 3.778 s

Current Proejct: mesos-1.0.1.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 1.064 s 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 3 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 3 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 13.47 s

Current Proejct: amqp-client-4.2.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 681.0 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 1 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r3
		Type: javax.net.ssl.SSLContext
		Statement: r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(r1)
		Method: <com.rabbitmq.client.ConnectionFactory: void useSslProtocol(java.lang.String,javax.net.ssl.TrustManager)>
		SHA-256: 3391ac02c87cec53c6dd1e0940db90e7ffe15f18aaa2ab8c78bf94dab9e4db41
		Secure: false

Findings in Java Class: com.rabbitmq.client.ConnectionFactory

	 in Method: void useSslProtocol()
		ForbiddenMethodError violating CrySL rule for javax.net.ssl.SSLContext
			Detected call to forbidden method javax.net.ssl.SSLContext getDefault() of class javax.net.ssl.SSLContext. Instead, call method <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>.
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getDefault()>()


	 in Method: void useSslProtocol(java.lang.String,javax.net.ssl.TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1751, $r4, varReplacer1751)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1751, $r4, varReplacer1751)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #3391ac02c87cec53c6dd1e0940db90e7ffe15f18aaa2ab8c78bf94dab9e4db41)
			First parameter (with value "TLSv1") should be any of {TLSv1.2}
			at statement: r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(r1)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 1

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 1
	ForbiddenMethodError: 1
	RequiredPredicateError: 2
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 2.707 s

Current Proejct: force-shading-1.11-SNAPSHOT.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 434.9 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.337 s

Current Proejct: slf4j-api-1.7.15.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 492.0 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.415 s

Current Proejct: hbase-hadoop2-compat-1.4.3.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 483.1 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.570 s

Current Proejct: powermock-module-junit4-2.0.4.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 518.5 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.395 s

Current Proejct: transport-netty4-client-6.3.1.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 569.3 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.753 s

Current Proejct: cassandra-all-2.2.5.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 1.615 s 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 16 analysis seeds within 3 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 16
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.06

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.12

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.18

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.24

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 18
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.28

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 18
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 18
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.39

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 18
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.44

[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.cli.CommandLineParser: org.apache.commons.cli.CommandLine parse(org.apache.commons.cli.Options,java.lang.String[],boolean)> for class org.apache.commons.cli.GnuParser
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 19
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.47

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 19
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.53

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 19
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.58

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 20
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.6

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 20
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.65

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 14 of 20
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.7

Killed

Current Proejct: hadoop-client-2.8.1.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 689.0 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.654 s

Current Proejct: jaxb-api-2.3.1.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 428.3 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.172 s

Current Proejct: pulsar-zookeeper.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 744.2 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 13 analysis seeds within 1 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 13
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.08

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 13
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.15

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 14
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.21

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 14
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.29

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 15
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 15
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.4

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 15
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.47

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 16
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 16
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.56

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 16
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.63

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.65

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.71

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 19
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.68

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 14 of 19
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.74

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 15 of 19
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.79

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 16 of 19
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.84

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 17 of 19
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.89

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 18 of 19
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.95

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r26
		Type: javax.net.ssl.SSLEngine
		Statement: r26 = virtualinvoke r24.<javax.net.ssl.SSLContext: javax.net.ssl.SSLEngine createSSLEngine()>()
		Method: <org.apache.zookeeper.server.NettyServerCnxnFactory: void initSSL(io.netty.channel.ChannelPipeline)>
		SHA-256: 50835494a2f290567dd1f780cfb1e94f2f0d3f88db29fc6f7a2852cc3e033b97
		Secure: false
	Object:
		Variable: r3
		Type: javax.net.ssl.KeyManagerFactory
		Statement: r3 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer206)
		Method: <org.apache.zookeeper.common.X509Util: javax.net.ssl.X509KeyManager createKeyManager(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 13221ea5cbb77d51bb82f80d187e92bca3cb46ef61f1f6f4c7c5bcc3a8a6f49d
		Secure: false
	Object:
		Variable: r24
		Type: javax.net.ssl.SSLContext
		Statement: r24 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3286)
		Method: <org.apache.zookeeper.server.NettyServerCnxnFactory: void initSSL(io.netty.channel.ChannelPipeline)>
		SHA-256: 2471762996c4e2b59682db8c6f1bce3d332e31ae7ca553edd9971e21a3263dc4
		Secure: false
	Object:
		Variable: r4
		Type: javax.crypto.SecretKeyFactory
		Statement: r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>($r12)
		Method: <org.apache.zookeeper.util.PemReader: java.security.PrivateKey loadPrivateKey(java.lang.String,java.util.Optional)>
		SHA-256: 1eeda54420a3a576132bf676de31e349658dacc4aff54a2bee59aff4581c0dc0
		Secure: false
	Object:
		Variable: r1
		Type: java.security.KeyStore
		Statement: r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer5208)
		Method: <org.apache.zookeeper.util.PemReader: java.security.KeyStore loadTrustStore(java.io.File)>
		SHA-256: 86f86987e201227d189f2f12180c38b00988dd7d1228eeef177d0a2205a8934b
		Secure: true
	Object:
		Variable: r6
		Type: javax.crypto.Cipher
		Statement: r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r17)
		Method: <org.apache.zookeeper.util.PemReader: java.security.PrivateKey loadPrivateKey(java.lang.String,java.util.Optional)>
		SHA-256: 5577859ef072cb64d6bf4d0b15c57688a28f61cbb9595831857190c613ac05dc
		Secure: false
	Object:
		Variable: r4
		Type: javax.net.ssl.TrustManagerFactory
		Statement: r4 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(varReplacer216)
		Method: <org.apache.zookeeper.common.X509Util: javax.net.ssl.X509TrustManager createTrustManager(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>
		SHA-256: a4e4c6ac5fb56c8d4f168de609497b20caa039876a7c4103034ba7c60556f474
		Secure: true
	Object:
		Variable: r5
		Type: java.security.KeyStore
		Statement: r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer5212)
		Method: <org.apache.zookeeper.util.PemReader: java.security.KeyStore loadKeyStore(java.io.File,java.io.File,java.util.Optional)>
		SHA-256: cf36df3a0b718c823a158340a59e32f88c17dba7557b823a2018b52962cb6c39
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5584)
		Method: <org.apache.zookeeper.server.auth.DigestAuthenticationProvider: java.lang.String generateDigest(java.lang.String)>
		SHA-256: 4ff3fd62f4433609baccfd7f38faacba86d21181419a1d04c60f5c5a267b51c5
		Secure: false
	Object:
		Variable: r5
		Type: javax.net.ssl.TrustManager[]
		Statement: r5 = virtualinvoke r4.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <org.apache.zookeeper.common.X509Util: javax.net.ssl.X509TrustManager createTrustManager(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>
		SHA-256: 5b82aab939da004dea00e9253bb3e4d6a29f3e246c55522146f4c3bbf1742192
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer1081)
		Method: <org.apache.zookeeper.common.PKCS12FileLoader: java.security.KeyStore keyStoreInstance()>
		SHA-256: 2357b255753a14b8e35b32706c09811eac4acdebe5e4f217118140b298df3ee9
		Secure: false
	Object:
		Variable: r4
		Type: javax.net.ssl.KeyManager[]
		Statement: r4 = virtualinvoke r3.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <org.apache.zookeeper.common.X509Util: javax.net.ssl.X509KeyManager createKeyManager(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 47ffce06e6ad4c12d8512b6f72c16c19a8970fb704c429677f8090bbb858c11f
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.cert.PKIXBuilderParameters
		Statement: specialinvoke $r11.<java.security.cert.PKIXBuilderParameters: void <init>(java.security.KeyStore,java.security.cert.CertSelector)>(r2, $r12)
		Method: <org.apache.zookeeper.common.X509Util: javax.net.ssl.X509TrustManager createTrustManager(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>
		SHA-256: 4f2aecbe10640274dc505ea714a388a400621d5951fa41005374799e7c3d2187
		Secure: true
	Object:
		Variable: r5
		Type: javax.crypto.SecretKey
		Statement: r5 = virtualinvoke r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r13)
		Method: <org.apache.zookeeper.util.PemReader: java.security.PrivateKey loadPrivateKey(java.lang.String,java.util.Optional)>
		SHA-256: 651933658fca0d95665e40b94857c897e7fdeca83c66df5005cb50b2679b2d81
		Secure: false
	Object:
		Variable: r66
		Type: javax.net.ssl.SSLContext
		Statement: r66 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(r65)
		Method: <org.apache.zookeeper.common.X509Util: org.apache.zookeeper.common.SSLContextAndOptions createSSLContextAndOptions(org.apache.zookeeper.common.ZKConfig)>
		SHA-256: aa2c2fa42ed604ebb008c9d703cf753d0275e803b7303bdee9a39724c3fbc949
		Secure: false
	Object:
		Variable: $r22
		Type: javax.net.ssl.CertPathTrustManagerParameters
		Statement: specialinvoke $r22.<javax.net.ssl.CertPathTrustManagerParameters: void <init>(java.security.cert.CertPathParameters)>(r3)
		Method: <org.apache.zookeeper.common.X509Util: javax.net.ssl.X509TrustManager createTrustManager(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>
		SHA-256: 55d7fc67b2bcf96007766fd39bc680f08dc2599b86078af67e2d14ed7f07bdb8
		Secure: true
	Object:
		Variable: r2
		Type: byte[]
		Statement: r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <org.apache.zookeeper.server.auth.DigestAuthenticationProvider: java.lang.String generateDigest(java.lang.String)>
		SHA-256: 439159b0f8606c5cfaa38b5ee2ae24b38549247c191a9456c70811a7f7e17948
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer130)
		Method: <org.apache.zookeeper.common.JKSFileLoader: java.security.KeyStore keyStoreInstance()>
		SHA-256: e00a14953c32289c56443b7d2986dc13165eca689927ed840f217cbf98fff2ee
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <org.apache.zookeeper.server.auth.DigestAuthenticationProvider: java.lang.String generateDigest(java.lang.String)>
		SHA-256: fe5432a77924b3454c03bd970ab1e1503028a3d5ce7e83ce22e3607e843e2dfc
		Secure: false

Findings in Java Class: org.apache.zookeeper.util.PemReader

	 in Method: java.security.PrivateKey loadPrivateKey(java.lang.String,java.util.Optional)
		ForbiddenMethodError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Detected call to forbidden method void <init>(char[]) of class javax.crypto.spec.PBEKeySpec. Instead, call method <javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>.
			at statement: specialinvoke $r13.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>($r16)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: r5 = virtualinvoke r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r13)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #5577859ef072cb64d6bf4d0b15c57688a28f61cbb9595831857190c613ac05dc)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: r25 = virtualinvoke r24.<javax.crypto.EncryptedPrivateKeyInfo: java.security.spec.PKCS8EncodedKeySpec getKeySpec(javax.crypto.Cipher)>(r6)


Findings in Java Class: org.apache.zookeeper.common.StandardTypeFileKeyStoreLoader

	 in Method: java.security.KeyStore loadKeyStore()
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #e00a14953c32289c56443b7d2986dc13165eca689927ed840f217cbf98fff2ee)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r16.<java.security.KeyStore: void load(java.io.InputStream,char[])>(r1, $r10)


Findings in Java Class: org.apache.zookeeper.common.X509Util

	 in Method: javax.net.ssl.X509KeyManager createKeyManager(java.lang.String,java.lang.String,java.lang.String)
		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #13221ea5cbb77d51bb82f80d187e92bca3cb46ef61f1f6f4c7c5bcc3a8a6f49d)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r3.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r2, $r10)


	 in Method: org.apache.zookeeper.common.SSLContextAndOptions createSSLContextAndOptions(org.apache.zookeeper.common.ZKConfig)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r66.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(r78, r79, varReplacer199)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r66.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(r78, r79, varReplacer199)


Findings in Java Class: org.apache.zookeeper.server.NettyServerCnxnFactory

	 in Method: void initSSL(io.netty.channel.ChannelPipeline)
		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLContext (on Object #2471762996c4e2b59682db8c6f1bce3d332e31ae7ca553edd9971e21a3263dc4)
			Operation on object of type javax.net.ssl.SSLContext object not completed. Expected call to init
			at statement: r24 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3286)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r24.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r9, $r11, varReplacer3292)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r24.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r9, $r11, varReplacer3292)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #2471762996c4e2b59682db8c6f1bce3d332e31ae7ca553edd9971e21a3263dc4)
			First parameter (with value "TLSv1") should be any of {TLSv1.2}
			at statement: r24 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3286)


Findings in Java Class: org.apache.zookeeper.server.auth.DigestAuthenticationProvider

	 in Method: java.lang.String generateDigest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #4ff3fd62f4433609baccfd7f38faacba86d21181419a1d04c60f5c5a267b51c5)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5584)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 19

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 5
	ForbiddenMethodError: 1
	ConstraintError: 2
	NeverTypeOfError: 2
	IncompleteOperationError: 2
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 1 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 5.921 s

Current Proejct: amazon-kinesis-client-1.11.2.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 547.1 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 1 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 3
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 3
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r4
		Type: java.security.MessageDigest
		Statement: r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer422)
		Method: <com.amazonaws.services.kinesis.clientlibrary.types.UserRecord: byte[] md5(byte[])>
		SHA-256: 7a52cf8b5468c3c1c813995ee441c0ed856994faffd40584cd588b4a5b4f899e
		Secure: false
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r1 = virtualinvoke r4.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <com.amazonaws.services.kinesis.clientlibrary.types.UserRecord: byte[] md5(byte[])>
		SHA-256: b9d4ae83bffda172535ffdd57b38cf28c58c4a32ae7dc6be51d9fa5396c759d8
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke r4.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <com.amazonaws.services.kinesis.clientlibrary.types.UserRecord: byte[] md5(byte[])>
		SHA-256: 3f056ce3b0219057e8659c881d94323cbd40208697b624bba1ee8b49d440a070
		Secure: false

Findings in Java Class: com.amazonaws.services.kinesis.clientlibrary.types.UserRecord

	 in Method: byte[] md5(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #7a52cf8b5468c3c1c813995ee441c0ed856994faffd40584cd588b4a5b4f899e)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer422)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 3

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 1
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 2.709 s

Current Proejct: dynamodb-streams-kinesis-adapter-1.5.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 447.4 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.694 s

Current Proejct: transport-netty4-client-7.5.1.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 416.4 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.333 s

Current Proejct: jackson-dataformat-yaml-2.10.1.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 510.6 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.442 s

Current Proejct: kafka-clients-0.11.0.2.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 674.0 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 11 analysis seeds within 1 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.09

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.18

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.27

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 12
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 13
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.38

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 13
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.46

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 13
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.54

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 14
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.57

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 15
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.6

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 15
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 15
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.73

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 15
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.8

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 15
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.87

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 14 of 15
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.93

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: $r5
		Type: javax.crypto.Mac
		Statement: $r5 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r4)
		Method: <org.apache.kafka.common.security.scram.ScramFormatter: void <init>(org.apache.kafka.common.security.scram.ScramMechanism)>
		SHA-256: e743926a3587075dd67e6b7c14e0fd73dc72a99bac37d8e0f19a7ec2ae31fd6f
		Secure: false
	Object:
		Variable: r17
		Type: javax.net.ssl.SSLContext
		Statement: r17 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>($r16, $r15)
		Method: <org.apache.kafka.common.security.ssl.SslFactory: javax.net.ssl.SSLContext createSSLContext()>
		SHA-256: e1bdcd1b0084907c1ee7ba06ec16e5dcae71278a189dfb42b50ff18ef34191db
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <org.apache.kafka.common.security.scram.ScramFormatter: void <init>(org.apache.kafka.common.security.scram.ScramMechanism)>
		SHA-256: 7ea18bfd6cfd8f795820b8818946414ca523e0c740e13975322ee3d3521519ca
		Secure: false
	Object:
		Variable: r18
		Type: javax.net.ssl.KeyManager[]
		Statement: r18 = virtualinvoke r21.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <org.apache.kafka.common.security.ssl.SslFactory: javax.net.ssl.SSLContext createSSLContext()>
		SHA-256: 5d97dc17f4d00dabc096d96392f96df6707c5a2a73135429399001ed3cbfe49a
		Secure: false
	Object:
		Variable: r1
		Type: java.security.KeyStore
		Statement: r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)
		Method: <org.apache.kafka.common.security.ssl.SslFactory$SecurityStore: java.security.KeyStore load()>
		SHA-256: 2336003e42dae773cbfeb227bd6a1a378a782fbc1d2285a611bea58d8b29a47e
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, $r6)
		Method: <org.apache.kafka.common.security.scram.ScramFormatter: byte[] hmac(byte[],byte[])>
		SHA-256: ee909578910386f215dd906531014eccb865c90a0fc2bc87086ee1126130fefd
		Secure: false
	Object:
		Variable: r27
		Type: javax.net.ssl.TrustManagerFactory
		Statement: r27 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(r26)
		Method: <org.apache.kafka.common.security.ssl.SslFactory: javax.net.ssl.SSLContext createSSLContext()>
		SHA-256: 248f21bdf2252b330226eff7612dd520ba235b7196b97a116da0b65300a57d2a
		Secure: false
	Object:
		Variable: $r16
		Type: java.security.SecureRandom
		Statement: $r16 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(r5)
		Method: <org.apache.kafka.common.security.ssl.SslFactory: void configure(java.util.Map)>
		SHA-256: dea3b1ed9106c22b3c6d3d103f6804c340280ed224e3ac43497fcdaba0c23c0b
		Secure: true
	Object:
		Variable: r17
		Type: javax.net.ssl.SSLContext
		Statement: r17 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r3)
		Method: <org.apache.kafka.common.security.ssl.SslFactory: javax.net.ssl.SSLContext createSSLContext()>
		SHA-256: fe03963d7adc5b738b75d83031cc6e397f6ad35cff55bd97d665e883840e62d0
		Secure: false
	Object:
		Variable: $r8
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, $r8)
		Method: <org.apache.kafka.common.security.scram.ScramFormatter: byte[] hi(byte[],byte[],int)>
		SHA-256: 538c9cefc2dfbc84364b26a41b51b032cf34fc4d0a180ff71d44de54ce04673e
		Secure: false
	Object:
		Variable: $r7
		Type: javax.net.ssl.TrustManager[]
		Statement: $r7 = virtualinvoke r27.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <org.apache.kafka.common.security.ssl.SslFactory: javax.net.ssl.SSLContext createSSLContext()>
		SHA-256: 368730f9dd7ce8f2690baecc4945962305f13dabdde72445e55256190e105158
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.SecureRandom
		Statement: specialinvoke $r6.<java.security.SecureRandom: void <init>()>()
		Method: <org.apache.kafka.common.security.scram.ScramFormatter: void <init>(org.apache.kafka.common.security.scram.ScramMechanism)>
		SHA-256: f675604eef62440b07ac462f9b7d8da83f0e4e6ab63fe1741090af71f698c5ce
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, $r8)
		Method: <org.apache.kafka.common.security.scram.ScramFormatter: byte[] hi(byte[],byte[],int)>
		SHA-256: 622f04124e415f669b9c08bc4758c73e57f1f257dbaa0564e4acdad5e6d56d90
		Secure: false
	Object:
		Variable: r21
		Type: javax.net.ssl.KeyManagerFactory
		Statement: r21 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(r20)
		Method: <org.apache.kafka.common.security.ssl.SslFactory: javax.net.ssl.SSLContext createSSLContext()>
		SHA-256: ecdc50b19aaaac9f88f12bc09513545acc3d67c78456c0ade2443dba7453cb42
		Secure: false
	Object:
		Variable: $r6
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, $r6)
		Method: <org.apache.kafka.common.security.scram.ScramFormatter: byte[] hmac(byte[],byte[])>
		SHA-256: 32005a755694dbf6b6a2ebb85ee7b6c7fc18b2b9635ab648537a2715c09327fe
		Secure: false

Findings in Java Class: org.apache.kafka.common.security.scram.ScramSaslClient$ScramSaslClientFactory

	 in Method: javax.security.sasl.SaslClient createSaslClient(java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.util.Map,javax.security.auth.callback.CallbackHandler)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #7ea18bfd6cfd8f795820b8818946414ca523e0c740e13975322ee3d3521519ca)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: return $r8

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #e743926a3587075dd67e6b7c14e0fd73dc72a99bac37d8e0f19a7ec2ae31fd6f)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: return $r8


Findings in Java Class: org.apache.kafka.common.security.scram.ScramSaslServer$ScramSaslServerFactory

	 in Method: javax.security.sasl.SaslServer createSaslServer(java.lang.String,java.lang.String,java.lang.String,java.util.Map,javax.security.auth.callback.CallbackHandler)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #7ea18bfd6cfd8f795820b8818946414ca523e0c740e13975322ee3d3521519ca)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: return $r7

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #e743926a3587075dd67e6b7c14e0fd73dc72a99bac37d8e0f19a7ec2ae31fd6f)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: return $r7


Findings in Java Class: org.apache.kafka.common.security.ssl.SslFactory$SecurityStore

	 in Method: java.security.KeyStore load()
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #2336003e42dae773cbfeb227bd6a1a378a782fbc1d2285a611bea58d8b29a47e)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r1.<java.security.KeyStore: void load(java.io.InputStream,char[])>(r12, r2)


Findings in Java Class: org.apache.kafka.common.security.ssl.SslFactory

	 in Method: javax.net.ssl.SSLContext createSSLContext()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r27.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(r29)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r17.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(r18, $r7, $r8)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r21.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r22, $r14)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r17.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(r18, $r7, $r8)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #ecdc50b19aaaac9f88f12bc09513545acc3d67c78456c0ade2443dba7453cb42)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r21.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r22, $r14)


Findings in Java Class: org.apache.kafka.common.security.scram.ScramFormatter

	 in Method: byte[] hmac(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, $r6)


	 in Method: byte[] hi(byte[],byte[],int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, $r8)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 15

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 6
	NeverTypeOfError: 2
	IncompleteOperationError: 4
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 36 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 40.89 s

Current Proejct: aws-java-sdk-sts-1.11.603.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 397.4 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.512 s

Current Proejct: commons-cli.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 463.2 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.314 s

Current Proejct: avro.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 397.1 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.250 s

Current Proejct: kafka-clients-0.10.2.1.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 618.3 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 11 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.09

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.18

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.27

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 12
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 13
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.38

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 13
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.46

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 13
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.54

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 14
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.57

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 15
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.6

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 15
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 15
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.73

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 15
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.8

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 15
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.87

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 14 of 15
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.93

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, $r6)
		Method: <org.apache.kafka.common.security.scram.ScramFormatter: byte[] hmac(byte[],byte[])>
		SHA-256: ee909578910386f215dd906531014eccb865c90a0fc2bc87086ee1126130fefd
		Secure: false
	Object:
		Variable: r1
		Type: java.security.KeyStore
		Statement: r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r4)
		Method: <org.apache.kafka.common.security.ssl.SslFactory$SecurityStore: java.security.KeyStore load()>
		SHA-256: 81749fc066778caf43aad03fdb119e987537b0174b0f9aae0191d63f93c08f95
		Secure: false
	Object:
		Variable: $r8
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, $r8)
		Method: <org.apache.kafka.common.security.scram.ScramFormatter: byte[] hi(byte[],byte[],int)>
		SHA-256: 538c9cefc2dfbc84364b26a41b51b032cf34fc4d0a180ff71d44de54ce04673e
		Secure: false
	Object:
		Variable: $r6
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, $r6)
		Method: <org.apache.kafka.common.security.scram.ScramFormatter: byte[] hmac(byte[],byte[])>
		SHA-256: 32005a755694dbf6b6a2ebb85ee7b6c7fc18b2b9635ab648537a2715c09327fe
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <org.apache.kafka.common.security.scram.ScramFormatter: void <init>(org.apache.kafka.common.security.scram.ScramMechanism)>
		SHA-256: 7ea18bfd6cfd8f795820b8818946414ca523e0c740e13975322ee3d3521519ca
		Secure: false
	Object:
		Variable: $r7
		Type: javax.net.ssl.TrustManager[]
		Statement: $r7 = virtualinvoke r27.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <org.apache.kafka.common.security.ssl.SslFactory: javax.net.ssl.SSLContext createSSLContext()>
		SHA-256: 368730f9dd7ce8f2690baecc4945962305f13dabdde72445e55256190e105158
		Secure: false
	Object:
		Variable: r21
		Type: javax.net.ssl.KeyManagerFactory
		Statement: r21 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(r20)
		Method: <org.apache.kafka.common.security.ssl.SslFactory: javax.net.ssl.SSLContext createSSLContext()>
		SHA-256: ecdc50b19aaaac9f88f12bc09513545acc3d67c78456c0ade2443dba7453cb42
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, $r8)
		Method: <org.apache.kafka.common.security.scram.ScramFormatter: byte[] hi(byte[],byte[],int)>
		SHA-256: 622f04124e415f669b9c08bc4758c73e57f1f257dbaa0564e4acdad5e6d56d90
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.SecureRandom
		Statement: specialinvoke $r6.<java.security.SecureRandom: void <init>()>()
		Method: <org.apache.kafka.common.security.scram.ScramFormatter: void <init>(org.apache.kafka.common.security.scram.ScramMechanism)>
		SHA-256: f675604eef62440b07ac462f9b7d8da83f0e4e6ab63fe1741090af71f698c5ce
		Secure: true
	Object:
		Variable: r18
		Type: javax.net.ssl.KeyManager[]
		Statement: r18 = virtualinvoke r21.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <org.apache.kafka.common.security.ssl.SslFactory: javax.net.ssl.SSLContext createSSLContext()>
		SHA-256: 5d97dc17f4d00dabc096d96392f96df6707c5a2a73135429399001ed3cbfe49a
		Secure: false
	Object:
		Variable: $r16
		Type: java.security.SecureRandom
		Statement: $r16 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(r5)
		Method: <org.apache.kafka.common.security.ssl.SslFactory: void configure(java.util.Map)>
		SHA-256: dea3b1ed9106c22b3c6d3d103f6804c340280ed224e3ac43497fcdaba0c23c0b
		Secure: true
	Object:
		Variable: r17
		Type: javax.net.ssl.SSLContext
		Statement: r17 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>($r16, $r15)
		Method: <org.apache.kafka.common.security.ssl.SslFactory: javax.net.ssl.SSLContext createSSLContext()>
		SHA-256: e1bdcd1b0084907c1ee7ba06ec16e5dcae71278a189dfb42b50ff18ef34191db
		Secure: false
	Object:
		Variable: r27
		Type: javax.net.ssl.TrustManagerFactory
		Statement: r27 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(r26)
		Method: <org.apache.kafka.common.security.ssl.SslFactory: javax.net.ssl.SSLContext createSSLContext()>
		SHA-256: 248f21bdf2252b330226eff7612dd520ba235b7196b97a116da0b65300a57d2a
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Mac
		Statement: $r5 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r4)
		Method: <org.apache.kafka.common.security.scram.ScramFormatter: void <init>(org.apache.kafka.common.security.scram.ScramMechanism)>
		SHA-256: e743926a3587075dd67e6b7c14e0fd73dc72a99bac37d8e0f19a7ec2ae31fd6f
		Secure: false
	Object:
		Variable: r17
		Type: javax.net.ssl.SSLContext
		Statement: r17 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r3)
		Method: <org.apache.kafka.common.security.ssl.SslFactory: javax.net.ssl.SSLContext createSSLContext()>
		SHA-256: fe03963d7adc5b738b75d83031cc6e397f6ad35cff55bd97d665e883840e62d0
		Secure: false

Findings in Java Class: org.apache.kafka.common.security.scram.ScramSaslServer$ScramSaslServerFactory

	 in Method: javax.security.sasl.SaslServer createSaslServer(java.lang.String,java.lang.String,java.lang.String,java.util.Map,javax.security.auth.callback.CallbackHandler)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #7ea18bfd6cfd8f795820b8818946414ca523e0c740e13975322ee3d3521519ca)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: return $r7

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #e743926a3587075dd67e6b7c14e0fd73dc72a99bac37d8e0f19a7ec2ae31fd6f)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: return $r7


Findings in Java Class: org.apache.kafka.common.security.scram.ScramSaslClient$ScramSaslClientFactory

	 in Method: javax.security.sasl.SaslClient createSaslClient(java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.util.Map,javax.security.auth.callback.CallbackHandler)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #7ea18bfd6cfd8f795820b8818946414ca523e0c740e13975322ee3d3521519ca)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: return $r8

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #e743926a3587075dd67e6b7c14e0fd73dc72a99bac37d8e0f19a7ec2ae31fd6f)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: return $r8


Findings in Java Class: org.apache.kafka.common.security.ssl.SslFactory$SecurityStore

	 in Method: java.security.KeyStore load()
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #81749fc066778caf43aad03fdb119e987537b0174b0f9aae0191d63f93c08f95)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r1.<java.security.KeyStore: void load(java.io.InputStream,char[])>(r11, $r9)


Findings in Java Class: org.apache.kafka.common.security.ssl.SslFactory

	 in Method: javax.net.ssl.SSLContext createSSLContext()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r27.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(r29)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r17.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(r18, $r7, $r8)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r21.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r22, $r14)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r17.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(r18, $r7, $r8)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #ecdc50b19aaaac9f88f12bc09513545acc3d67c78456c0ade2443dba7453cb42)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r21.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r22, $r14)


Findings in Java Class: org.apache.kafka.common.security.scram.ScramFormatter

	 in Method: byte[] hi(byte[],byte[],int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, $r8)


	 in Method: byte[] hmac(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, $r6)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 15

	CogniCrypt found the following violations. For details see description above.
	NeverTypeOfError: 2
	IncompleteOperationError: 4
	RequiredPredicateError: 6
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 39 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 43.08 s

Current Proejct: transport-5.1.2.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 370.2 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.019 s

Current Proejct: ant-apache-log4j.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 392.7 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.121 s

Current Proejct: zookeeper-3.4.10.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 552.5 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 1 analysis seeds within 1 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 3
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 3
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: $r4
		Type: byte[]
		Statement: r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <org.apache.zookeeper.server.auth.DigestAuthenticationProvider: java.lang.String generateDigest(java.lang.String)>
		SHA-256: fe5432a77924b3454c03bd970ab1e1503028a3d5ce7e83ce22e3607e843e2dfc
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5060)
		Method: <org.apache.zookeeper.server.auth.DigestAuthenticationProvider: java.lang.String generateDigest(java.lang.String)>
		SHA-256: 5825ff8dc1f85c442b4c9705b32c4658b0f8f7be5282fc5f35bfea6431db4138
		Secure: false
	Object:
		Variable: r2
		Type: byte[]
		Statement: r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <org.apache.zookeeper.server.auth.DigestAuthenticationProvider: java.lang.String generateDigest(java.lang.String)>
		SHA-256: 439159b0f8606c5cfaa38b5ee2ae24b38549247c191a9456c70811a7f7e17948
		Secure: false

Findings in Java Class: org.apache.zookeeper.server.auth.DigestAuthenticationProvider

	 in Method: java.lang.String generateDigest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #5825ff8dc1f85c442b4c9705b32c4658b0f8f7be5282fc5f35bfea6431db4138)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5060)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 3

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 1
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 1 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 4.600 s

Current Proejct: commons-compress.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 438.9 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 5 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 5
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.2

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 5
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.4

[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: void count(long)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: void count(int)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ar.ArArchiveInputStream: org.apache.commons.compress.archivers.ar.ArArchiveEntry getNextArEntry()> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: org.apache.commons.compress.archivers.ArchiveEntry getNextEntry()> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: long getBytesRead()> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: void count(int)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: void pushedBackBytes(long)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: void count(int)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: void count(int)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: void count(int)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: void count(int)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: void count(int)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: void count(long)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.dump.DumpArchiveInputStream: org.apache.commons.compress.archivers.dump.DumpArchiveEntry getNextEntry()> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: void count(long)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: void count(int)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.tar.TarArchiveInputStream: boolean isEOFRecord(byte[])> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.tar.TarArchiveInputStream: boolean isEOFRecord(byte[])> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: void pushedBackBytes(long)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.tar.TarArchiveInputStream: byte[] getLongNameData()> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.tar.TarArchiveInputStream: byte[] getLongNameData()> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.tar.TarArchiveInputStream: java.util.Map parsePaxHeaders(java.io.InputStream)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.tar.TarArchiveInputStream: org.apache.commons.compress.archivers.ArchiveEntry getNextEntry()> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: void pushedBackBytes(long)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: long getBytesRead()> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: void count(long)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: long getBytesRead()> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: long getBytesRead()> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: long getBytesRead()> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: long getBytesRead()> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: long getBytesRead()> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: void count(int)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: void count(int)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: void count(int)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: void count(long)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.CompressorInputStream: void count(int)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.CompressorInputStream: void count(long)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.CompressorInputStream: void count(int)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.z._internal_.InternalLZWInputStream: int addEntry(int,byte,int)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.z._internal_.InternalLZWInputStream: int addEntry(int,byte)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.z._internal_.InternalLZWInputStream: int expandCodeToOutputStack(int,boolean)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.z._internal_.InternalLZWInputStream: int readNextCode()> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.z._internal_.InternalLZWInputStream: int readNextCode()> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.z._internal_.InternalLZWInputStream: int decompressNextSymbol()> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.CompressorInputStream: void count(int)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.CompressorInputStream: void count(int)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.utils.CountingInputStream: void count(long)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.CompressorInputStream: void count(int)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.CompressorInputStream: void count(int)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.CompressorInputStream: void count(long)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.CompressorInputStream: void pushedBackBytes(long)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.CompressorInputStream: void count(int)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.CompressorInputStream: void count(long)> for class java.io.BufferedInputStream
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 5
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.6

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 6
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 7
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.71

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 7
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.86

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r31
		Type: byte[]
		Statement: r31 = virtualinvoke r32.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder$1: javax.crypto.CipherInputStream init()>
		SHA-256: b49780b2ca4c8d3c284aae2265b8fb696a1a11024ec5974db89ccba52ff4a7ac
		Secure: true
	Object:
		Variable: varReplacer1139
		Type: java.lang.String
		Statement: specialinvoke $r14.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r31, varReplacer1139)
		Method: <org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder$1: javax.crypto.CipherInputStream init()>
		SHA-256: d98bdba2ba1b094e4bc938a0c10632980816f4d36449a6c7432de259b0371298
		Secure: false
	Object:
		Variable: $r16
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r16.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r17, r37)
		Method: <org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder$1: javax.crypto.CipherInputStream init()>
		SHA-256: 773741c8f88100107309debf810359ab2df8692544c804fb671ac54550b53b07
		Secure: true
	Object:
		Variable: $r15
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r15.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r2)
		Method: <org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder$1: javax.crypto.CipherInputStream init()>
		SHA-256: b9f4cf33ee378d60a7d9ad1db589551078cd38e416540aee65b99c27f213cf9c
		Secure: false
	Object:
		Variable: r32
		Type: java.security.MessageDigest
		Statement: r32 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1146)
		Method: <org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder$1: javax.crypto.CipherInputStream init()>
		SHA-256: 303a388d7dd517f6fab097d8549089b3f1fcde3ab0f4ee8536bed5eb6f87d91
		Secure: false
	Object:
		Variable: r37
		Type: javax.crypto.Cipher
		Statement: r37 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1136)
		Method: <org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder$1: javax.crypto.CipherInputStream init()>
		SHA-256: d5cce632672a7e304bf24ffb046f790ac8ef81f6faae60766bd1d712885269fd
		Secure: false
	Object:
		Variable: $r14
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r14.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r31, varReplacer1139)
		Method: <org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder$1: javax.crypto.CipherInputStream init()>
		SHA-256: f9f51af0be8d892c7d530ea6631bf4bbc8d2c97b5db3802d67f099a2ba401b98
		Secure: false

Findings in Java Class: org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder$1

	 in Method: javax.crypto.CipherInputStream init()
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #303a388d7dd517f6fab097d8549089b3f1fcde3ab0f4ee8536bed5eb6f87d91)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: r31 = virtualinvoke r32.<java.security.MessageDigest: byte[] digest()>()

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r14.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r31, varReplacer1139)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r15.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #d5cce632672a7e304bf24ffb046f790ac8ef81f6faae60766bd1d712885269fd)
			First parameter (with value "AES/CBC/NoPadding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: r37 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1136)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #d5cce632672a7e304bf24ffb046f790ac8ef81f6faae60766bd1d712885269fd)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: specialinvoke $r16.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r17, r37)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 7

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 2
	IncompleteOperationError: 1
	TypestateError: 1
	ConstraintError: 1
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 37 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 39.00 s

Current Proejct: aliyun-sdk-oss-3.4.1.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 559.8 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 4 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 4
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.25

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 6
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 7
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.43

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 8
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 8
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.63

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 8
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.75

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 8
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.88

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, r4)
		Method: <com.aliyun.oss.common.auth.ServiceSignature: byte[] sign(byte[],byte[],javax.crypto.Mac,java.lang.Object,java.lang.String)>
		SHA-256: 47d929ec9af2a6666d99803bacd1bd6fcefb3c6225177095885e723b7ca48d84
		Secure: false
	Object:
		Variable: r26
		Type: javax.crypto.Mac
		Statement: r26 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(r4)
		Method: <com.aliyun.oss.common.auth.ServiceSignature: byte[] sign(byte[],byte[],javax.crypto.Mac,java.lang.Object,java.lang.String)>
		SHA-256: e63d9f92c9ee977b530927d9e9e21708fd1fa54fc788def18742209a1d390885
		Secure: true
	Object:
		Variable: r2
		Type: byte[]
		Statement: $r7 = virtualinvoke r26.<javax.crypto.Mac: byte[] doFinal(byte[])>(r2)
		Method: <com.aliyun.oss.common.auth.ServiceSignature: byte[] sign(byte[],byte[],javax.crypto.Mac,java.lang.Object,java.lang.String)>
		SHA-256: bda2fa90b06159eaf715b3bbf3b2d3ee9620bfd683678f227ad454da63772cf2
		Secure: true
	Object:
		Variable: r4
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, r4)
		Method: <com.aliyun.oss.common.auth.ServiceSignature: byte[] sign(byte[],byte[],javax.crypto.Mac,java.lang.Object,java.lang.String)>
		SHA-256: 6f57987ee9d61e6a467f4231f2143bce9e2bf3af839a508e50ef9b9a73400d6e
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.aliyun.oss.common.utils.BinaryUtil: byte[] calculateMd5(byte[])>
		SHA-256: 23c57a0d09e85975b2232973dec131662438f9092091d46a67f68610be35851c
		Secure: false
	Object:
		Variable: r23
		Type: javax.crypto.Mac
		Statement: r23 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(r4)
		Method: <com.aliyun.oss.common.auth.ServiceSignature: byte[] sign(byte[],byte[],javax.crypto.Mac,java.lang.Object,java.lang.String)>
		SHA-256: a4c0a24344e6723e9bea1f86fb239c124bd1f2a2acc14b02f417defac449e9ec
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke r26.<javax.crypto.Mac: byte[] doFinal(byte[])>(r2)
		Method: <com.aliyun.oss.common.auth.ServiceSignature: byte[] sign(byte[],byte[],javax.crypto.Mac,java.lang.Object,java.lang.String)>
		SHA-256: e30421a57b6b1edd083e60036cdb84222eb5db6c63fedb978666fd10df2ecfaf
		Secure: true
	Object:
		Variable: r4
		Type: java.security.MessageDigest
		Statement: r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer759)
		Method: <com.aliyun.oss.common.utils.BinaryUtil: byte[] calculateMd5(byte[])>
		SHA-256: 2ad3ec8843b8addee7eef1b8e64ae11d53f2108904cc897266dcfdc989de8a44
		Secure: false

Findings in Java Class: com.aliyun.oss.common.auth.HmacSHA256Signature

	 in Method: java.lang.String computeSignature(java.lang.String,java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #a4c0a24344e6723e9bea1f86fb239c124bd1f2a2acc14b02f417defac449e9ec)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: r10 = virtualinvoke r0.<com.aliyun.oss.common.auth.HmacSHA256Signature: byte[] sign(byte[],byte[],javax.crypto.Mac,java.lang.Object,java.lang.String)>($r3, $r4, $r6, $r5, varReplacer92)


Findings in Java Class: com.aliyun.oss.common.auth.HmacSHA1Signature

	 in Method: java.lang.String computeSignature(java.lang.String,java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #a4c0a24344e6723e9bea1f86fb239c124bd1f2a2acc14b02f417defac449e9ec)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: r10 = virtualinvoke r0.<com.aliyun.oss.common.auth.HmacSHA1Signature: byte[] sign(byte[],byte[],javax.crypto.Mac,java.lang.Object,java.lang.String)>($r3, $r4, $r6, $r5, varReplacer84)


Findings in Java Class: com.aliyun.oss.common.auth.ServiceSignature

	 in Method: byte[] sign(byte[],byte[],javax.crypto.Mac,java.lang.Object,java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #47d929ec9af2a6666d99803bacd1bd6fcefb3c6225177095885e723b7ca48d84)
			Second parameter (with value "HmacSHA1") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, r4)


Findings in Java Class: com.aliyun.oss.common.utils.BinaryUtil

	 in Method: byte[] calculateMd5(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #2ad3ec8843b8addee7eef1b8e64ae11d53f2108904cc897266dcfdc989de8a44)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer759)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 8

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 2
	IncompleteOperationError: 2
	RequiredPredicateError: 1
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 1 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 3.454 s
