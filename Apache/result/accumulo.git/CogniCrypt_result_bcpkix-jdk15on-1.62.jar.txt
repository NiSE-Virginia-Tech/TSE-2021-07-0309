[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 613.3 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 65 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 66
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.02

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 67
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.03

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 67
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.04

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 67
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.06

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 68
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.07

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 68
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.09

[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.io.OutputStream: void close()> for class org.bouncycastle.util.io.TeeOutputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.io.OutputStream: void close()> for class org.bouncycastle.util.io.TeeOutputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.io.OutputStream: void close()> for class org.bouncycastle.util.io.TeeOutputStream
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 69
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.1

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 69
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.12

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 71
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.13

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 71
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.14

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 71
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.15

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 71
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.17

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 72
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.18

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 14 of 73
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.19

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 15 of 74
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.2

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 16 of 75
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.21

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 17 of 75
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.23

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 18 of 75
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.24

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 19 of 75
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.25

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 20 of 76
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.26

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 21 of 76
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.28

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 22 of 77
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.29

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 23 of 77
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.3

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 24 of 77
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.31

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 25 of 77
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.32

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 26 of 77
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.34

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 27 of 77
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.35

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 28 of 77
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.36

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 29 of 77
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.38

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 30 of 77
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.39

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 31 of 77
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.4

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 32 of 77
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.42

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 33 of 79
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.42

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 34 of 79
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.43

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 35 of 80
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.44

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 36 of 80
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.45

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 37 of 82
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.45

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 38 of 83
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.46

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 39 of 84
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.46

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 40 of 85
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.47

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 41 of 86
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.48

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 42 of 87
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.48

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 43 of 87
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.49

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 44 of 88
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 45 of 89
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.51

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 46 of 90
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.51

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 47 of 91
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.52

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 48 of 92
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.52

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 49 of 93
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.53

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 50 of 94
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.53

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 51 of 95
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.54

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 52 of 96
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.54

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 53 of 96
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.55

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 54 of 97
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.56

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 55 of 98
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.56

[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.io.OutputStream: void write(byte[])> for class org.bouncycastle.crypto.io.MacOutputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.io.OutputStream: void close()> for class org.bouncycastle.crypto.io.MacOutputStream
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 56 of 99
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.57

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 57 of 100
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.57

[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.io.OutputStream: void write(byte[])> for class org.bouncycastle.jcajce.io.MacOutputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.io.OutputStream: void close()> for class org.bouncycastle.jcajce.io.MacOutputStream
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 58 of 100
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.58

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 59 of 101
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.58

[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.io.OutputStream: void write(byte[])> for class org.bouncycastle.jcajce.io.MacOutputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.io.OutputStream: void close()> for class org.bouncycastle.jcajce.io.MacOutputStream
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 60 of 101
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.59

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 61 of 101
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.6

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 62 of 101
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.61

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 63 of 102
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.62

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 64 of 105
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.61

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 65 of 106
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.61

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 66 of 106
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.62

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 67 of 106
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.63

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 68 of 106
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.64

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 69 of 106
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.65

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 70 of 106
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.66

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 71 of 106
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 72 of 106
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.68

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 73 of 106
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.69

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 74 of 106
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.7

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 75 of 106
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.71

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 76 of 106
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.72

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 77 of 106
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.73

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 78 of 106
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.74

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 79 of 106
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.75

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 80 of 106
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.75

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 81 of 106
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.76

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 82 of 106
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.77

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 83 of 106
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.78

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 84 of 106
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.79

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 85 of 106
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.8

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 86 of 106
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.81

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 87 of 106
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.82

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 88 of 106
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.83

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 89 of 106
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.84

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 90 of 106
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.85

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 91 of 106
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.86

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 92 of 106
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.87

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 93 of 106
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.88

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 94 of 106
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.89

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 95 of 106
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.9

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 96 of 106
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.91

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 97 of 106
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.92

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 98 of 106
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.92

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 99 of 106
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.93

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 100 of 106
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.94

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 101 of 106
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.95

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 102 of 106
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.96

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 103 of 106
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.97

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 104 of 106
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.98

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 105 of 106
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.99

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r102
		Type: java.security.SecureRandom
		Statement: specialinvoke r102.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: org.bouncycastle.operator.OutputEncryptor build()>
		SHA-256: de62232888a7aa17b0ad741675453ec69bb50df7175b6441e8e3d8c5581041ac
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.Signature
		Statement: $r2 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(r1)
		Method: <org.bouncycastle.eac.operator.jcajce.DefaultEACHelper: java.security.Signature createSignature(java.lang.String)>
		SHA-256: c9f51029669df49fc0d51fa1b844ce670286117ac59f567667aa04ba8088675a
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.mime.smime.SMIMESignedWriter$Builder: java.lang.String generateBoundary()>
		SHA-256: 13f5d0bc002c4ed8c14bf0831c909e7df6e320a04020f043463e073917b01ccf
		Secure: true
	Object:
		Variable: $r18
		Type: byte[]
		Statement: virtualinvoke $r19.<java.security.SecureRandom: void nextBytes(byte[])>($r18)
		Method: <org.bouncycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: org.bouncycastle.operator.OutputEncryptor build()>
		SHA-256: 2d3419589e79de205c521d81396bf809192f796fd343dec985297def542f10c9
		Secure: true
	Object:
		Variable: $r32
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r32.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r33)
		Method: <org.bouncycastle.cms.jcajce.EnvelopedDataHelper$1: java.lang.Object doInJCE()>
		SHA-256: ac38a33965fb89f1c637012da9b681c33d00f59c33a55229afc1f3716adf3a36
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>(r1, $r2)
		Method: <org.bouncycastle.eac.operator.jcajce.NamedEACHelper: java.security.Signature createSignature(java.lang.String)>
		SHA-256: 3332fe42c69dd182d92cc403b6a0ffc6d0715790b9234609b75e1fe5927fc51c
		Secure: false
	Object:
		Variable: $r14
		Type: java.lang.String
		Statement: specialinvoke r26.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, $r14)
		Method: <org.bouncycastle.cms.jcajce.JcePasswordRecipientInfoGenerator: byte[] generateEncryptedBytes(org.bouncycastle.asn1.x509.AlgorithmIdentifier,byte[],org.bouncycastle.operator.GenericKey)>
		SHA-256: d09708fa72db133adde154b5155dd15ea255a26d3bcb5f6bb25fcdc82817bc9f
		Secure: false
	Object:
		Variable: $r13
		Type: java.security.SecureRandom
		Statement: specialinvoke $r13.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.pkcs.bc.BcPKCS12PBEOutputEncryptorBuilder: org.bouncycastle.operator.OutputEncryptor build(char[])>
		SHA-256: c2dd9c71ccd126d3e329affa81be3df24c009787a9d5a30f552a5fd0dd0d7393
		Secure: true
	Object:
		Variable: r27
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r27.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r3, $r13)
		Method: <org.bouncycastle.cms.jcajce.JcePasswordRecipient: java.security.Key extractSecretKey(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.x509.AlgorithmIdentifier,byte[],byte[])>
		SHA-256: d275474f60052c30fea4100ca9554a05fabe6914ef2e2e78cdc4c23c59966231
		Secure: false
	Object:
		Variable: $r13
		Type: java.lang.String
		Statement: specialinvoke r27.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r3, $r13)
		Method: <org.bouncycastle.cms.jcajce.JcePasswordRecipient: java.security.Key extractSecretKey(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.x509.AlgorithmIdentifier,byte[],byte[])>
		SHA-256: a1faccc21cc371a1afe2c30562ecfa9fd063d5c5de4cee329ae2b3486174ed85
		Secure: false
	Object:
		Variable: r1
		Type: java.lang.String
		Statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r13, r1)
		Method: <org.bouncycastle.openssl.jcajce.PEMUtilities: javax.crypto.SecretKey generateSecretKeyForPKCS5Scheme2(org.bouncycastle.jcajce.util.JcaJceHelper,java.lang.String,char[],byte[],int,org.bouncycastle.asn1.x509.AlgorithmIdentifier)>
		SHA-256: fb13b59516796f9daa9b770f1378b7896078cf97a72c6aeb7936e557cc89d816
		Secure: false
	Object:
		Variable: r17
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r17.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, $r7)
		Method: <org.bouncycastle.cert.crmf.jcajce.JcePKMACValuesCalculator: byte[] calculateMac(byte[],byte[])>
		SHA-256: de950638f005f2ae994cccaa6fa36b2c8899ac9ab9a36ea1582c51979237ab1b
		Secure: false
	Object:
		Variable: r25
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke r25.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>(r1, $r12, $i2, i1)
		Method: <org.bouncycastle.cms.jcajce.EnvelopedDataHelper: byte[] calculateDerivedKey(int,char[],org.bouncycastle.asn1.x509.AlgorithmIdentifier,int)>
		SHA-256: 5f1c91b94bdcf57040ae3543d85a213028ae9a68c7d5895e8c526ff9cbd071ef
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke r19.<java.security.Signature: boolean verify(byte[])>($r12)
		Method: <org.bouncycastle.mozilla.SignedPublicKeyAndChallenge: boolean verify(java.lang.String)>
		SHA-256: f70297821eaeb587471c719a0840745817c38e995846b54321065165eb3d8925
		Secure: false
	Object:
		Variable: r38
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r38.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r35)
		Method: <org.bouncycastle.cert.crmf.jcajce.CRMFHelper$1: java.lang.Object doInJCE()>
		SHA-256: aa8f63c68ad9ab1b2aa286131f7b7a925586541a2bcea790de14e28be85bbe05
		Secure: false
	Object:
		Variable: r2
		Type: byte[]
		Statement: virtualinvoke $r5.<java.security.SecureRandom: void nextBytes(byte[])>(r2)
		Method: <org.bouncycastle.openssl.jcajce.JcePEMEncryptorBuilder: org.bouncycastle.openssl.PEMEncryptor build(char[])>
		SHA-256: d57501795b1be11f1493d02dfa35f5f8c62591c516459705a939104e15dca9a2
		Secure: true
	Object:
		Variable: $r11
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r11.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>(r2, r3, i0, $i1)
		Method: <org.bouncycastle.openssl.jcajce.PEMUtilities: javax.crypto.SecretKey generateSecretKeyForPKCS5Scheme2(org.bouncycastle.jcajce.util.JcaJceHelper,java.lang.String,char[],byte[],int,org.bouncycastle.asn1.x509.AlgorithmIdentifier)>
		SHA-256: 76ee31981d39dd8cdf45ff55d6ae22116a26d59a0b4b784e16e26bb40b9bcd5
		Secure: false
	Object:
		Variable: r27
		Type: java.security.SecureRandom
		Statement: specialinvoke r27.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.cert.crmf.jcajce.JceCRMFEncryptorBuilder$CRMFOutputEncryptor: void <init>(org.bouncycastle.cert.crmf.jcajce.JceCRMFEncryptorBuilder,org.bouncycastle.asn1.ASN1ObjectIdentifier,int,java.security.SecureRandom)>
		SHA-256: b00cd990cdb0f128868fec58ce11ee342179554ceb59274d61a8381ea35c9ac
		Secure: true
	Object:
		Variable: r66
		Type: java.security.Key
		Statement: r49 = interfaceinvoke r66.<java.security.Key: byte[] getEncoded()>()
		Method: <org.bouncycastle.operator.jcajce.JceAsymmetricKeyUnwrapper: org.bouncycastle.operator.GenericKey generateUnwrappedKey(org.bouncycastle.asn1.x509.AlgorithmIdentifier,byte[])>
		SHA-256: 9bff268822272cea8f842b12bfd74f47779def60afb1df1fa56807959b98e613
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer272)
		Method: <org.bouncycastle.cert.jcajce.JcaX509ExtensionUtils: void <init>()>
		SHA-256: 9a1ab44a71bfe0724cbac645239a31e58e1e1e6c5d0b6e2dc19111a9b7432fdd
		Secure: false
	Object:
		Variable: r5
		Type: javax.net.ssl.KeyManagerFactory
		Statement: r5 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r4)
		Method: <org.bouncycastle.est.jcajce.JcaJceUtils: javax.net.ssl.KeyManagerFactory createKeyManagerFactory(java.lang.String,java.lang.String,java.security.KeyStore,char[])>
		SHA-256: afa98570316637915501e5fce895bb93cade60dee06d24c911599f36e58a14b
		Secure: false
	Object:
		Variable: r81
		Type: byte[]
		Statement: virtualinvoke $r37.<java.security.SecureRandom: void nextBytes(byte[])>(r81)
		Method: <org.bouncycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder: org.bouncycastle.operator.OutputEncryptor build(char[])>
		SHA-256: 2a4cc38d61ea637848dc0cd20c29d60eda292a61ece0eff20d3dc207130b56cf
		Secure: true
	Object:
		Variable: r36
		Type: java.security.SecureRandom
		Statement: specialinvoke r36.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.cms.PasswordRecipientInfoGenerator: org.bouncycastle.asn1.cms.RecipientInfo generate(org.bouncycastle.operator.GenericKey)>
		SHA-256: e0622314a6f9fd924004fca8c8a13f1eaeb57a750f52fc194d429643ca444678
		Secure: true
	Object:
		Variable: r103
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke r103.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>(r1, r86, $i1, $i2)
		Method: <org.bouncycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder: org.bouncycastle.operator.OutputEncryptor build(char[])>
		SHA-256: 13765ce60b6f0cf235974a35c753e68ec697f8dfa5663142351c47ed0a42351
		Secure: true
	Object:
		Variable: $r14
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r12, $r14)
		Method: <org.bouncycastle.cert.crmf.jcajce.JceAsymmetricValueDecryptorGenerator: java.security.Key extractSecretKey(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.x509.AlgorithmIdentifier,byte[])>
		SHA-256: 78edfecddd1b4dafc8dfefbc874009734aa577e42f7d9ef255aecd767c036623
		Secure: true
	Object:
		Variable: r116
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r116.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r52)
		Method: <org.bouncycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder$1: org.bouncycastle.operator.InputDecryptor get(org.bouncycastle.asn1.x509.AlgorithmIdentifier)>
		SHA-256: 4bb0cb15d716e234f458d56d1754f562910a9d5b8e04e7b96a4b7dc266c6ceb1
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.SecureRandom
		Statement: specialinvoke $r10.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.cert.crmf.PKMACBuilder: org.bouncycastle.operator.MacCalculator build(char[])>
		SHA-256: 87bf6a1c65e5207ebbadad5ea12f41a35b2011ddcee76cff0a75838da1d0da94
		Secure: true
	Object:
		Variable: r23
		Type: java.security.SecureRandom
		Statement: specialinvoke r23.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.pkcs.jcajce.JcePKCS12MacCalculatorBuilder: org.bouncycastle.operator.MacCalculator build(char[])>
		SHA-256: 5e8b6c48ff7a93e12631286c1aecdbba8f792e46b665ec0364b72446b680f335
		Secure: true
	Object:
		Variable: i1
		Type: int
		Statement: specialinvoke r25.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>(r1, $r12, $i2, i1)
		Method: <org.bouncycastle.cms.jcajce.EnvelopedDataHelper: byte[] calculateDerivedKey(int,char[],org.bouncycastle.asn1.x509.AlgorithmIdentifier,int)>
		SHA-256: 8942e4bb6917f0df8d364aed838c7bd7226648fdeb49742c6fa8b8c0ac0d6b64
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.Key
		Statement: $r9 = interfaceinvoke $r8.<java.security.Key: byte[] getEncoded()>()
		Method: <org.bouncycastle.operator.bc.OperatorUtils: byte[] getKeyBytes(org.bouncycastle.operator.GenericKey)>
		SHA-256: ea850d41637d0ab4f33299cc2fc742ea7235f958bc8e856df75c204beea75c98
		Secure: true
	Object:
		Variable: $i2
		Type: int
		Statement: specialinvoke r103.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>(r1, r86, $i1, $i2)
		Method: <org.bouncycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder: org.bouncycastle.operator.OutputEncryptor build(char[])>
		SHA-256: 52b4e867219c0738ad5cad986de55ea80bddaa9b0a734ed2dc6bb8cc6da260af
		Secure: true
	Object:
		Variable: r2
		Type: java.lang.String
		Statement: specialinvoke r19.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r5, r2)
		Method: <org.bouncycastle.openssl.jcajce.PEMUtilities: javax.crypto.SecretKey getKey(org.bouncycastle.jcajce.util.JcaJceHelper,char[],java.lang.String,int,byte[],boolean)>
		SHA-256: 838ced2d0dab34411eb1950fa9671a147a5e15a0d63dd9e57ab29b625b9c9c00
		Secure: false
	Object:
		Variable: r6
		Type: byte[]
		Statement: r6 = interfaceinvoke $r53.<java.security.Key: byte[] getEncoded()>()
		Method: <org.bouncycastle.operator.jcajce.JceAsymmetricKeyWrapper: byte[] generateWrappedKey(org.bouncycastle.operator.GenericKey)>
		SHA-256: 81ecfca4a9405c08d7e9fbf10171e3e1d2836616cc45f6e02830f6c2586e7f38
		Secure: true
	Object:
		Variable: r24
		Type: javax.crypto.spec.PBEParameterSpec
		Statement: specialinvoke r24.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>(r2, $i2)
		Method: <org.bouncycastle.pkcs.jcajce.JcePKCS12MacCalculatorBuilder: org.bouncycastle.operator.MacCalculator build(char[])>
		SHA-256: 3d6d4ea23665360b601eba666344c953ff06917bdcc4d1d8036824a88a57a53b
		Secure: true
	Object:
		Variable: r75
		Type: byte[]
		Statement: virtualinvoke $r59.<java.security.SecureRandom: void nextBytes(byte[])>(r75)
		Method: <org.bouncycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder: org.bouncycastle.operator.OutputEncryptor build(char[])>
		SHA-256: ba2d67879591bfc0abe6064ceeb5c3cd572d0c95f4ddfbea25cab9e4ddfb3462
		Secure: true
	Object:
		Variable: r102
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r102.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r6, varReplacer2464)
		Method: <org.bouncycastle.operator.jcajce.JceAsymmetricKeyWrapper: byte[] generateWrappedKey(org.bouncycastle.operator.GenericKey)>
		SHA-256: 428df3139467fdd126f38ec4b8ba59eb7f79ce935667bff43b5be007ca09cb19
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: specialinvoke $r5.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.est.jcajce.JcaHttpAuthBuilder: void <init>(java.lang.String,java.lang.String,char[])>
		SHA-256: d49f676c293ec26a4e26a16fd971c3969b1d5a6ae5c0f276a23b5ff30f09903d
		Secure: true
	Object:
		Variable: r2
		Type: byte[]
		Statement: virtualinvoke $r5.<java.security.SecureRandom: void nextBytes(byte[])>(r2)
		Method: <org.bouncycastle.cert.crmf.PKMACBuilder: org.bouncycastle.operator.MacCalculator build(char[])>
		SHA-256: 675a2fc6ea001b974c6d96156cfa916a56180b2fba81017be27b24d4aec9257e
		Secure: true
	Object:
		Variable: r26
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r26.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, $r14)
		Method: <org.bouncycastle.cms.jcajce.JcePasswordRecipientInfoGenerator: byte[] generateEncryptedBytes(org.bouncycastle.asn1.x509.AlgorithmIdentifier,byte[],org.bouncycastle.operator.GenericKey)>
		SHA-256: 3ee32639536f6a117de0919ea496fe64053bd73f0dc3ccc24300eb4a90722b72
		Secure: false
	Object:
		Variable: r37
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r37.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r32)
		Method: <org.bouncycastle.cert.crmf.jcajce.CRMFHelper$1: java.lang.Object doInJCE()>
		SHA-256: 7b532bb2fd8b9038e7dbbea825a24d562f7d283b632bc5afe0d79803143dacba
		Secure: false
	Object:
		Variable: r2
		Type: java.security.Key
		Statement: r7 = interfaceinvoke r2.<java.security.Key: byte[] getEncoded()>()
		Method: <org.bouncycastle.cms.jcajce.EnvelopedDataHelper: void keySizeCheck(org.bouncycastle.asn1.x509.AlgorithmIdentifier,java.security.Key)>
		SHA-256: 541a36aecdae2e7239bef78850dc005aa1057724b8b63df9365b8d062a367d72
		Secure: true
	Object:
		Variable: $r24
		Type: byte[]
		Statement: $r24 = interfaceinvoke $r23.<java.security.Key: byte[] getEncoded()>()
		Method: <org.bouncycastle.operator.jcajce.JceAsymmetricKeyWrapper: byte[] generateWrappedKey(org.bouncycastle.operator.GenericKey)>
		SHA-256: aa6b3bacdb5a6f5f7ab648670b2ff4b62defa4deb41ceea530d54437705a6abc
		Secure: true
	Object:
		Variable: r2
		Type: byte[]
		Statement: virtualinvoke $r6.<java.security.SecureRandom: void nextBytes(byte[])>(r2)
		Method: <org.bouncycastle.pkcs.bc.BcPKCS12PBEOutputEncryptorBuilder: org.bouncycastle.operator.OutputEncryptor build(char[])>
		SHA-256: b558d504b6c7b3835f0f862917d64d4208c065bc388886a8546dec3577928f75
		Secure: true
	Object:
		Variable: r30
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r30.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r10, $r11)
		Method: <org.bouncycastle.operator.jcajce.JceInputDecryptorProviderBuilder$1: org.bouncycastle.operator.InputDecryptor get(org.bouncycastle.asn1.x509.AlgorithmIdentifier)>
		SHA-256: 66fbb271306f4677e9efd55d3120da9c749479fdefecaf17de8e8c58eb9c1d04
		Secure: false
	Object:
		Variable: r16
		Type: javax.net.ssl.SSLContext
		Statement: r16 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r4)
		Method: <org.bouncycastle.est.jcajce.SSLSocketFactoryCreatorBuilder$1: javax.net.ssl.SSLSocketFactory createFactory()>
		SHA-256: b4b41f2dc07321f4d4650fecdd653fbe84ccf8631e219ea6bb36587f89a39aa
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer1053)
		Method: <org.bouncycastle.cms.jcajce.EnvelopedDataHelper: java.security.Key getJceKey(org.bouncycastle.operator.GenericKey)>
		SHA-256: 2c55f0a4bdc7cb3c861ee45a64e1478d149a4a5b42938175e9f2c99a0ac7cbb2
		Secure: false
	Object:
		Variable: r2
		Type: byte[]
		Statement: virtualinvoke $r10.<java.security.SecureRandom: void nextBytes(byte[])>(r2)
		Method: <org.bouncycastle.cms.PasswordRecipientInfoGenerator: org.bouncycastle.asn1.cms.RecipientInfo generate(org.bouncycastle.operator.GenericKey)>
		SHA-256: 3b6183e96a597d8b996d846e538a79b24cfd754ac2630eea28c7a0fcdbb69833
		Secure: true
	Object:
		Variable: r26
		Type: javax.crypto.spec.PBEParameterSpec
		Statement: specialinvoke r26.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r13, $i0)
		Method: <org.bouncycastle.pkcs.jcajce.JcePKCS12MacCalculatorBuilderProvider$1: org.bouncycastle.operator.MacCalculator build(char[])>
		SHA-256: 332779ac82a3a5f40feda5385f04d333c7d633d1765b02b68fc274ce387a2831
		Secure: false
	Object:
		Variable: r25
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r25.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r12)
		Method: <org.bouncycastle.cms.jcajce.JcePasswordRecipientInfoGenerator: byte[] generateEncryptedBytes(org.bouncycastle.asn1.x509.AlgorithmIdentifier,byte[],org.bouncycastle.operator.GenericKey)>
		SHA-256: ddf7814a7ba6bfdaaa9c848b7cd69749750444f45515cc4a04b479b5dc46c099
		Secure: false
	Object:
		Variable: r49
		Type: byte[]
		Statement: r49 = interfaceinvoke r66.<java.security.Key: byte[] getEncoded()>()
		Method: <org.bouncycastle.operator.jcajce.JceAsymmetricKeyUnwrapper: org.bouncycastle.operator.GenericKey generateUnwrappedKey(org.bouncycastle.asn1.x509.AlgorithmIdentifier,byte[])>
		SHA-256: 854150bb3ce18fcf2485cb6132e26332329d489c9ea791d6c4c47f0171c1aea0
		Secure: true
	Object:
		Variable: r5
		Type: javax.net.ssl.KeyManagerFactory
		Statement: r5 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String,java.lang.String)>(r0, r1)
		Method: <org.bouncycastle.est.jcajce.JcaJceUtils: javax.net.ssl.KeyManagerFactory createKeyManagerFactory(java.lang.String,java.lang.String,java.security.KeyStore,char[])>
		SHA-256: 29a1aeea5f6e01af64948cc282e5fb7042aa8cf4ff8f8d4de093f5c8411f35bd
		Secure: false
	Object:
		Variable: varReplacer2464
		Type: java.lang.String
		Statement: specialinvoke r102.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r6, varReplacer2464)
		Method: <org.bouncycastle.operator.jcajce.JceAsymmetricKeyWrapper: byte[] generateWrappedKey(org.bouncycastle.operator.GenericKey)>
		SHA-256: e32ede96e200c1ee09e906844a0181c0bbc2b043c1b656992b325aa1ac86f1fe
		Secure: false
	Object:
		Variable: $i1
		Type: int
		Statement: specialinvoke $r11.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>(r2, r3, i0, $i1)
		Method: <org.bouncycastle.openssl.jcajce.PEMUtilities: javax.crypto.SecretKey generateSecretKeyForPKCS5Scheme2(org.bouncycastle.jcajce.util.JcaJceHelper,java.lang.String,char[],byte[],int,org.bouncycastle.asn1.x509.AlgorithmIdentifier)>
		SHA-256: a215bef92ce62120c24bb9e2d677eb8813c4f99724e8407f234472f6b374fe9f
		Secure: false
	Object:
		Variable: $r33
		Type: byte[]
		Statement: virtualinvoke $r34.<java.security.SecureRandom: void nextBytes(byte[])>($r33)
		Method: <org.bouncycastle.cms.PasswordRecipientInfoGenerator: org.bouncycastle.asn1.cms.RecipientInfo generate(org.bouncycastle.operator.GenericKey)>
		SHA-256: 40f9c0257b0d2f5fc11a06205be4591b45ee8c1623855c6f76c097e70b2efc61
		Secure: true
	Object:
		Variable: r5
		Type: javax.net.ssl.KeyManagerFactory
		Statement: r5 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(r0)
		Method: <org.bouncycastle.est.jcajce.JcaJceUtils: javax.net.ssl.KeyManagerFactory createKeyManagerFactory(java.lang.String,java.lang.String,java.security.KeyStore,char[])>
		SHA-256: 770c25ce970efb6b8329812d0a181bf1692f268c89eee6f68040d92297138cc7
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.security.Provider)>(r1, $r2)
		Method: <org.bouncycastle.eac.operator.jcajce.ProviderEACHelper: java.security.Signature createSignature(java.lang.String)>
		SHA-256: a3f8ea87e72cc19683494212e2b295a95697343432beee4e8811f9eda7db0b67
		Secure: false
	Object:
		Variable: $r9
		Type: byte[]
		Statement: $r9 = interfaceinvoke $r8.<java.security.Key: byte[] getEncoded()>()
		Method: <org.bouncycastle.operator.bc.OperatorUtils: byte[] getKeyBytes(org.bouncycastle.operator.GenericKey)>
		SHA-256: 4fc8e5105d2f805d088f83ef3b9b7f48e90cb3c9d4926f59c699cc60313f9844
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, $r10)
		Method: <org.bouncycastle.cms.jcajce.EnvelopedDataHelper: java.security.Key getJceKey(org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.operator.GenericKey)>
		SHA-256: d58089377f01e6da8ceec0d2bb453a772d4219b5e06c46165912eaf1819ff0a
		Secure: false
	Object:
		Variable: $r7
		Type: java.lang.String
		Statement: specialinvoke r17.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, $r7)
		Method: <org.bouncycastle.cert.crmf.jcajce.JcePKMACValuesCalculator: byte[] calculateMac(byte[],byte[])>
		SHA-256: 5ee3fe50b431f1d2298b47bdadc75e9ca5188b927dcba0b049ade4d773ef21ff
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>(r2, r3, i0, $i1)
		Method: <org.bouncycastle.openssl.jcajce.PEMUtilities: javax.crypto.SecretKey generateSecretKeyForPKCS5Scheme2(org.bouncycastle.jcajce.util.JcaJceHelper,java.lang.String,char[],byte[],int)>
		SHA-256: 9e370df55bd9d7e848db48a9e445003107a240dcd2ed7b4200a02b3f24255c44
		Secure: false
	Object:
		Variable: r15
		Type: java.security.SecureRandom
		Statement: specialinvoke r15.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.cert.crmf.bc.BcFixedLengthMGF1Padder: byte[] getPaddedData(byte[])>
		SHA-256: ed11d935c8c430fe7300abede2f21cc8de807e95eab8ab40ed319319899309c3
		Secure: true
	Object:
		Variable: r26
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r26.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r11)
		Method: <org.bouncycastle.cms.jcajce.JcePasswordRecipient: java.security.Key extractSecretKey(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.x509.AlgorithmIdentifier,byte[],byte[])>
		SHA-256: 13ca233755deae9686c5801dcc9c772abc2de08a2bcc285ec8802ca8c7c25cc7
		Secure: false
	Object:
		Variable: r31
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r31.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r20)
		Method: <org.bouncycastle.operator.jcajce.JceInputDecryptorProviderBuilder$1: org.bouncycastle.operator.InputDecryptor get(org.bouncycastle.asn1.x509.AlgorithmIdentifier)>
		SHA-256: 462a558b84ede75e4a116421cc7544c8b7ecc0f88308f4468bf98c5209e0dd37
		Secure: false
	Object:
		Variable: $i1
		Type: int
		Statement: specialinvoke r18.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>(r1, r3, varReplacer2064, $i1)
		Method: <org.bouncycastle.openssl.jcajce.PEMUtilities: javax.crypto.SecretKey getKey(org.bouncycastle.jcajce.util.JcaJceHelper,char[],java.lang.String,int,byte[],boolean)>
		SHA-256: 3a4e041d16d9b3e55dc0faaee002cac6d3f1d3def66b8f0206f4b86ae9019c4c
		Secure: false
	Object:
		Variable: r2
		Type: byte[]
		Statement: virtualinvoke $r4.<java.security.SecureRandom: void nextBytes(byte[])>(r2)
		Method: <org.bouncycastle.pkcs.bc.BcPKCS12MacCalculatorBuilder: org.bouncycastle.operator.MacCalculator build(char[])>
		SHA-256: 2c7e000fe9d2830d1e625a735f3676dc5801f0156c5b8ab2cf31fbc3123288f7
		Secure: true
	Object:
		Variable: r16
		Type: javax.net.ssl.SSLContext
		Statement: r16 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>($r15, $r14)
		Method: <org.bouncycastle.est.jcajce.SSLSocketFactoryCreatorBuilder$1: javax.net.ssl.SSLSocketFactory createFactory()>
		SHA-256: a6cf4835522030d3d8bf4621b6f4243c50e6519e72f1245ca549d927ffc92d72
		Secure: false
	Object:
		Variable: r2
		Type: byte[]
		Statement: virtualinvoke $r9.<java.security.SecureRandom: void nextBytes(byte[])>(r2)
		Method: <org.bouncycastle.pkcs.jcajce.JcePKCS12MacCalculatorBuilder: org.bouncycastle.operator.MacCalculator build(char[])>
		SHA-256: bace417563e8dd83caa66f08b19ecf3ae502be988f8cd0dd534c0779c69126af
		Secure: true
	Object:
		Variable: $r53
		Type: java.security.Key
		Statement: r6 = interfaceinvoke $r53.<java.security.Key: byte[] getEncoded()>()
		Method: <org.bouncycastle.operator.jcajce.JceAsymmetricKeyWrapper: byte[] generateWrappedKey(org.bouncycastle.operator.GenericKey)>
		SHA-256: 9e05669af3f1a0a9a6de1747ba3bc7f337a584c79c980153a060619f6120ef30
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer2623)
		Method: <org.bouncycastle.operator.jcajce.OperatorUtils: java.security.Key getJceKey(org.bouncycastle.operator.GenericKey)>
		SHA-256: 830fc9d8d721b14a397bd173d26e83a9f5b1c0a05eac8a2268549e9f49af7aa3
		Secure: false
	Object:
		Variable: $r12
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r13, r1)
		Method: <org.bouncycastle.openssl.jcajce.PEMUtilities: javax.crypto.SecretKey generateSecretKeyForPKCS5Scheme2(org.bouncycastle.jcajce.util.JcaJceHelper,java.lang.String,char[],byte[],int,org.bouncycastle.asn1.x509.AlgorithmIdentifier)>
		SHA-256: daf9b10e1c76b29541869778b1f0c9ecb239e829f1b942b829a162e7f75ad872
		Secure: false
	Object:
		Variable: $r20
		Type: java.lang.String
		Statement: specialinvoke r58.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r18, $r20)
		Method: <org.bouncycastle.operator.jcajce.JceAsymmetricKeyUnwrapper: org.bouncycastle.operator.GenericKey generateUnwrappedKey(org.bouncycastle.asn1.x509.AlgorithmIdentifier,byte[])>
		SHA-256: 8c52cbf312364024a591a447f9b9415d4c49a6f89d46ff4d96e2418490d42485
		Secure: true
	Object:
		Variable: r7
		Type: byte[]
		Statement: r7 = interfaceinvoke r2.<java.security.Key: byte[] getEncoded()>()
		Method: <org.bouncycastle.cms.jcajce.EnvelopedDataHelper: void keySizeCheck(org.bouncycastle.asn1.x509.AlgorithmIdentifier,java.security.Key)>
		SHA-256: b7b968e2ad35a81009f52a7f4c208f28f9720006929f6360dc5d9e2f2a0c4d66
		Secure: true
	Object:
		Variable: r0
		Type: java.security.Key
		Statement: r1 = interfaceinvoke r0.<java.security.Key: byte[] getEncoded()>()
		Method: <org.bouncycastle.operator.jcajce.JceGenericKey: java.lang.Object getRepresentation(java.security.Key)>
		SHA-256: 8aa894a606ea0e3a34b39b4b68236e32c6306aeba14e481eb36f5c41f6bd15b3
		Secure: true
	Object:
		Variable: r30
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r30.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r4)
		Method: <org.bouncycastle.openssl.jcajce.PEMUtilities: byte[] crypt(boolean,org.bouncycastle.jcajce.util.JcaJceHelper,byte[],char[],java.lang.String,byte[])>
		SHA-256: 12ead6157a9b79e76c82c2a49e8e6eb1cdccb1762e3fff6fc51f3217b25407b
		Secure: false
	Object:
		Variable: $r35
		Type: byte[]
		Statement: virtualinvoke $r36.<java.security.SecureRandom: void nextBytes(byte[])>($r35)
		Method: <org.bouncycastle.openssl.jcajce.JceOpenSSLPKCS8EncryptorBuilder: org.bouncycastle.operator.OutputEncryptor build()>
		SHA-256: 937a58e0c78c38d80f6184cf1ad841652d48bd1e03113a1bc51455ab57587f10
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r12, $r14)
		Method: <org.bouncycastle.cert.crmf.jcajce.JceAsymmetricValueDecryptorGenerator: java.security.Key extractSecretKey(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.x509.AlgorithmIdentifier,byte[])>
		SHA-256: 910a258690ba4ebb471916301b6e9a4654ef203d3087059e2893507aaba9e5c2
		Secure: true
	Object:
		Variable: varReplacer2623
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer2623)
		Method: <org.bouncycastle.operator.jcajce.OperatorUtils: java.security.Key getJceKey(org.bouncycastle.operator.GenericKey)>
		SHA-256: 9ec375a0c6c29d1a5fd77527fd02e24e16ae40fa046029da78e32c51cb992db3
		Secure: false
	Object:
		Variable: varReplacer1053
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer1053)
		Method: <org.bouncycastle.cms.jcajce.EnvelopedDataHelper: java.security.Key getJceKey(org.bouncycastle.operator.GenericKey)>
		SHA-256: 79594ecbea20a5dcdbff861c0a68d0e115f86780769e9637d25399c71bc1d217
		Secure: false
	Object:
		Variable: $r12
		Type: byte[]
		Statement: $z0 = virtualinvoke r19.<java.security.Signature: boolean verify(byte[])>($r12)
		Method: <org.bouncycastle.mozilla.SignedPublicKeyAndChallenge: boolean verify(java.lang.String)>
		SHA-256: 372dbbaa5c4a9c51c23548ee58842f2787660990d9e41cab1976b551757f680a
		Secure: false
	Object:
		Variable: r91
		Type: java.security.SecureRandom
		Statement: specialinvoke r91.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder: org.bouncycastle.operator.OutputEncryptor build(char[])>
		SHA-256: 30a387920a14642d213a9cb5c831290ded5195272969a251ca668f8e4f003ee7
		Secure: true
	Object:
		Variable: r19
		Type: java.security.Signature
		Statement: r19 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>($r6, r1)
		Method: <org.bouncycastle.mozilla.SignedPublicKeyAndChallenge: boolean verify(java.lang.String)>
		SHA-256: fe35860987dde844482158447a68b52ea9be3e8eeaee3afa3347fefd9c1dd110
		Secure: false
	Object:
		Variable: $r14
		Type: java.security.SecureRandom
		Statement: specialinvoke $r14.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.cms.jcajce.JceCMSMacCalculatorBuilder$CMSMacCalculator: void <init>(org.bouncycastle.cms.jcajce.JceCMSMacCalculatorBuilder,org.bouncycastle.asn1.ASN1ObjectIdentifier,int,java.security.AlgorithmParameters,java.security.SecureRandom)>
		SHA-256: 2a5e68734f527f1436f81c176844af305dc961c00fd358a5bda0e3c1aeec3fcd
		Secure: true
	Object:
		Variable: r3
		Type: byte[]
		Statement: virtualinvoke $r9.<java.security.SecureRandom: void nextBytes(byte[])>(r3)
		Method: <org.bouncycastle.cert.crmf.bc.BcFixedLengthMGF1Padder: byte[] getPaddedData(byte[])>
		SHA-256: 88f908fdfb45bc9f1756675965963011227dd2d439cf4ff72340c85359dbe5f6
		Secure: true
	Object:
		Variable: r119
		Type: javax.crypto.spec.PBEParameterSpec
		Statement: specialinvoke r119.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r16, $i0)
		Method: <org.bouncycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder$1: org.bouncycastle.operator.InputDecryptor get(org.bouncycastle.asn1.x509.AlgorithmIdentifier)>
		SHA-256: fb7cc1f734986dd155a2d6595ad20bd4fc3a2e5b64cf9a0ffbbb41af63269564
		Secure: false
	Object:
		Variable: $r10
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, $r10)
		Method: <org.bouncycastle.cms.jcajce.EnvelopedDataHelper: java.security.Key getJceKey(org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.operator.GenericKey)>
		SHA-256: 6da1223aec0053e8478ad953b0e2febf4d6c37a78ccdaf5865e40332a3772e1
		Secure: false
	Object:
		Variable: r15
		Type: java.security.SecureRandom
		Statement: specialinvoke r15.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.cms.bc.BcCMSContentEncryptorBuilder$CMSOutputEncryptor: void <init>(org.bouncycastle.cms.bc.BcCMSContentEncryptorBuilder,org.bouncycastle.asn1.ASN1ObjectIdentifier,int,java.security.SecureRandom)>
		SHA-256: dc9f9606382411ec0671654c695298ffd39e68c2b49eb49a2ebacff8d8aa11e8
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.SecureRandom
		Statement: specialinvoke $r7.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.openssl.jcajce.JcePEMEncryptorBuilder: org.bouncycastle.openssl.PEMEncryptor build(char[])>
		SHA-256: 23e23aeb6fe9538ae24c7173503ded1892f1a7595bceeb458bfe08663992364a
		Secure: true
	Object:
		Variable: r1
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, r1)
		Method: <org.bouncycastle.openssl.jcajce.PEMUtilities: javax.crypto.SecretKey generateSecretKeyForPKCS5Scheme2(org.bouncycastle.jcajce.util.JcaJceHelper,java.lang.String,char[],byte[],int)>
		SHA-256: cc4dd39c61f48ab2167339bd936d184274dda194c740dcbbc7fb31928a01e694
		Secure: false
	Object:
		Variable: r58
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r58.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r18, $r20)
		Method: <org.bouncycastle.operator.jcajce.JceAsymmetricKeyUnwrapper: org.bouncycastle.operator.GenericKey generateUnwrappedKey(org.bouncycastle.asn1.x509.AlgorithmIdentifier,byte[])>
		SHA-256: 33c37c78797514f37417f93f693439056b8debadd1caac73285f4dba79019d10
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.KeyPair
		Statement: specialinvoke $r4.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r12)
		Method: <org.bouncycastle.openssl.jcajce.JcaPEMKeyConverter: java.security.KeyPair getKeyPair(org.bouncycastle.openssl.PEMKeyPair)>
		SHA-256: 94ff1618c110a9dc317a1b0a7ec12c22019c4f946ace29400aa0a35a74d8be80
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.Key
		Statement: $r5 = interfaceinvoke $r4.<java.security.Key: byte[] getEncoded()>()
		Method: <org.bouncycastle.openssl.jcajce.JcaMiscPEMGenerator: java.lang.Object convertObject(java.lang.Object)>
		SHA-256: 82c953a78e8aa47cf8d1e16beae31c86fbf2ca34f0bfc634bac6f3317f148556
		Secure: true
	Object:
		Variable: $i4
		Type: int
		Statement: specialinvoke r114.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r54, $r55, $i3, $i4)
		Method: <org.bouncycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder$1: org.bouncycastle.operator.InputDecryptor get(org.bouncycastle.asn1.x509.AlgorithmIdentifier)>
		SHA-256: a99b757576dc04f52623f74c61845a67fdf32762a2c50b8a4813c0cff21d01db
		Secure: false
	Object:
		Variable: $r11
		Type: java.lang.String
		Statement: specialinvoke r30.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r10, $r11)
		Method: <org.bouncycastle.operator.jcajce.JceInputDecryptorProviderBuilder$1: org.bouncycastle.operator.InputDecryptor get(org.bouncycastle.asn1.x509.AlgorithmIdentifier)>
		SHA-256: ec3e1f64c988a1d0be4630caedd97dc1de0eb9e24b165e03b4640e0ff6b52c5f
		Secure: false
	Object:
		Variable: r114
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke r114.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r54, $r55, $i3, $i4)
		Method: <org.bouncycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder$1: org.bouncycastle.operator.InputDecryptor get(org.bouncycastle.asn1.x509.AlgorithmIdentifier)>
		SHA-256: 23c79f6cad5db971b36a90b61de7d7694c1e6fa3c5db079ed4b4194c467f23ad
		Secure: false
	Object:
		Variable: $i1
		Type: int
		Statement: specialinvoke $r6.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>(r2, r3, i0, $i1)
		Method: <org.bouncycastle.openssl.jcajce.PEMUtilities: javax.crypto.SecretKey generateSecretKeyForPKCS5Scheme2(org.bouncycastle.jcajce.util.JcaJceHelper,java.lang.String,char[],byte[],int)>
		SHA-256: 85cef85e18734259ec1e25cd3786b24436a0cb79896efd11b2c380821a52db53
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: r1 = interfaceinvoke r0.<java.security.Key: byte[] getEncoded()>()
		Method: <org.bouncycastle.operator.jcajce.JceGenericKey: java.lang.Object getRepresentation(java.security.Key)>
		SHA-256: f9bf50ba6f1893e70c3466d5d9b89fdd23117f26d2b05436f9df3aae3aa23c43
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = interfaceinvoke $r4.<java.security.Key: byte[] getEncoded()>()
		Method: <org.bouncycastle.openssl.jcajce.JcaMiscPEMGenerator: java.lang.Object convertObject(java.lang.Object)>
		SHA-256: 6d814e383ca5cca2c3075425c29ea17f11960392f66e04944365135282e9c8ec
		Secure: true
	Object:
		Variable: $r17
		Type: java.security.SecureRandom
		Statement: specialinvoke $r17.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.cms.jcajce.JceKeyAgreeRecipientInfoGenerator: void init(org.bouncycastle.asn1.ASN1ObjectIdentifier)>
		SHA-256: d03895b9aeec93047ffa7f1dd1fa153029cb5cc79a3af445092a30985fdeec49
		Secure: true
	Object:
		Variable: r19
		Type: java.security.Signature
		Statement: r19 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r16)
		Method: <org.bouncycastle.mozilla.SignedPublicKeyAndChallenge: boolean verify(java.lang.String)>
		SHA-256: f9def0cc8634d54a06cd49265c76ae62f213ee99cec4095d88c7fe47ec8e9559
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.SecureRandom
		Statement: specialinvoke $r10.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.pkcs.bc.BcPKCS12MacCalculatorBuilder: org.bouncycastle.operator.MacCalculator build(char[])>
		SHA-256: fb3359801c30d33f7f557eaa4a6ed1c34ae117a03a457269a289e9ba280d0d5a
		Secure: true
	Object:
		Variable: $r23
		Type: java.security.Key
		Statement: $r24 = interfaceinvoke $r23.<java.security.Key: byte[] getEncoded()>()
		Method: <org.bouncycastle.operator.jcajce.JceAsymmetricKeyWrapper: byte[] generateWrappedKey(org.bouncycastle.operator.GenericKey)>
		SHA-256: f36e4d6fd7738a5d8b1da32ee6a5334c79e9e2b313f81c3b9ae1d2ce34f36495
		Secure: true
	Object:
		Variable: $r28
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r28.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r30)
		Method: <org.bouncycastle.cms.jcajce.EnvelopedDataHelper$1: java.lang.Object doInJCE()>
		SHA-256: 685f41d08d97afd26fc1117a5688f6be954adf3879fabc1502b771213b01b405
		Secure: false
	Object:
		Variable: r18
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke r18.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>(r1, r3, varReplacer2064, $i1)
		Method: <org.bouncycastle.openssl.jcajce.PEMUtilities: javax.crypto.SecretKey getKey(org.bouncycastle.jcajce.util.JcaJceHelper,char[],java.lang.String,int,byte[],boolean)>
		SHA-256: 186bca6ac01b50cbde4d90e7428b7ef61d7d66008fa751ae07d1dc7a4f8b775b
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, r1)
		Method: <org.bouncycastle.openssl.jcajce.PEMUtilities: javax.crypto.SecretKey generateSecretKeyForPKCS5Scheme2(org.bouncycastle.jcajce.util.JcaJceHelper,java.lang.String,char[],byte[],int)>
		SHA-256: 874a7e328873ef36f24f62cd6e9e55fe37a7f79678e543a896bef11d5cf44a00
		Secure: false
	Object:
		Variable: r19
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r19.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r5, r2)
		Method: <org.bouncycastle.openssl.jcajce.PEMUtilities: javax.crypto.SecretKey getKey(org.bouncycastle.jcajce.util.JcaJceHelper,char[],java.lang.String,int,byte[],boolean)>
		SHA-256: 55c593a96e797930481abbaf6d6a30dddbae159c5ea4ba899ef003d7ad60c0b1
		Secure: false
	Object:
		Variable: r86
		Type: byte[]
		Statement: virtualinvoke $r11.<java.security.SecureRandom: void nextBytes(byte[])>(r86)
		Method: <org.bouncycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder: org.bouncycastle.operator.OutputEncryptor build(char[])>
		SHA-256: 66bfa03dfd6bba31fe3269b761e50c247789798e227dc3472e225bb0f86d1ff5
		Secure: true

Findings in Java Class: org.bouncycastle.cert.jcajce.JcaX509ExtensionUtils

	 in Method: void <init>()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #9a1ab44a71bfe0724cbac645239a31e58e1e1e6c5d0b6e2dc19111a9b7432fdd)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke r0.<org.bouncycastle.cert.X509ExtensionUtils: void <init>(org.bouncycastle.operator.DigestCalculator)>($r1)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #9a1ab44a71bfe0724cbac645239a31e58e1e1e6c5d0b6e2dc19111a9b7432fdd)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke r0.<org.bouncycastle.cert.X509ExtensionUtils: void <init>(org.bouncycastle.operator.DigestCalculator)>($r1)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #9a1ab44a71bfe0724cbac645239a31e58e1e1e6c5d0b6e2dc19111a9b7432fdd)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer272)


Findings in Java Class: org.bouncycastle.cms.jcajce.EnvelopedDataHelper

	 in Method: java.security.Key getJceKey(org.bouncycastle.operator.GenericKey)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer1053)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #2c55f0a4bdc7cb3c861ee45a64e1478d149a4a5b42938175e9f2c99a0ac7cbb2)
			Second parameter (with value "ENC") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer1053)


	 in Method: byte[] calculateDerivedKey(int,char[],org.bouncycastle.asn1.x509.AlgorithmIdentifier,int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke r25.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>(r1, $r12, $i2, i1)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #5f1c91b94bdcf57040ae3543d85a213028ae9a68c7d5895e8c526ff9cbd071ef)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: r4 = virtualinvoke r23.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r25)


	 in Method: java.security.Key getJceKey(org.bouncycastle.asn1.ASN1ObjectIdentifier,org.bouncycastle.operator.GenericKey)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, $r10)


Findings in Java Class: org.bouncycastle.eac.operator.jcajce.JcaEACSignatureVerifierBuilder

	 in Method: org.bouncycastle.eac.operator.EACSignatureVerifier build(org.bouncycastle.asn1.ASN1ObjectIdentifier,java.security.PublicKey)
		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #c9f51029669df49fc0d51fa1b844ce670286117ac59f567667aa04ba8088675a)
			Operation on object of type java.security.Signature object not completed. Expected call to update, verify
			at statement: return r39

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #3332fe42c69dd182d92cc403b6a0ffc6d0715790b9234609b75e1fe5927fc51c)
			Operation on object of type java.security.Signature object not completed. Expected call to update, verify
			at statement: return r39

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #a3f8ea87e72cc19683494212e2b295a95697343432beee4e8811f9eda7db0b67)
			Operation on object of type java.security.Signature object not completed. Expected call to update, verify
			at statement: return r39


Findings in Java Class: org.bouncycastle.eac.operator.jcajce.JcaEACSignerBuilder

	 in Method: org.bouncycastle.eac.operator.EACSigner build(java.lang.String,java.security.PrivateKey)
		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #c9f51029669df49fc0d51fa1b844ce670286117ac59f567667aa04ba8088675a)
			Operation on object of type java.security.Signature object not completed. Expected call to update
			at statement: return $r6

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #3332fe42c69dd182d92cc403b6a0ffc6d0715790b9234609b75e1fe5927fc51c)
			Operation on object of type java.security.Signature object not completed. Expected call to update
			at statement: return $r6

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #a3f8ea87e72cc19683494212e2b295a95697343432beee4e8811f9eda7db0b67)
			Operation on object of type java.security.Signature object not completed. Expected call to update
			at statement: return $r6


Findings in Java Class: org.bouncycastle.openssl.jcajce.PEMUtilities

	 in Method: javax.crypto.SecretKey generateSecretKeyForPKCS5Scheme2(org.bouncycastle.jcajce.util.JcaJceHelper,java.lang.String,char[],byte[],int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r6.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>(r2, r3, i0, $i1)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #9e370df55bd9d7e848db48a9e445003107a240dcd2ed7b4200a02b3f24255c44)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: r5 = virtualinvoke r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, r1)


	 in Method: javax.crypto.SecretKey generateSecretKeyForPKCS5Scheme2(org.bouncycastle.jcajce.util.JcaJceHelper,java.lang.String,char[],byte[],int,org.bouncycastle.asn1.x509.AlgorithmIdentifier)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r13, r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #76ee31981d39dd8cdf45ff55d6ae22116a26d59a0b4b784e16e26bb40b9bcd5)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: r7 = virtualinvoke r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r11)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r11.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>(r2, r3, i0, $i1)


	 in Method: javax.crypto.SecretKey getKey(org.bouncycastle.jcajce.util.JcaJceHelper,char[],java.lang.String,int,byte[],boolean)
		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #186bca6ac01b50cbde4d90e7428b7ef61d7d66008fa751ae07d1dc7a4f8b775b)
			Third parameter (with value 1)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke r18.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>(r1, r3, varReplacer2064, $i1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke r18.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>(r1, r3, varReplacer2064, $i1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r19.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r5, r2)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #55c593a96e797930481abbaf6d6a30dddbae159c5ea4ba899ef003d7ad60c0b1)
			Second parameter (with value "Blowfish") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke r19.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r5, r2)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #55c593a96e797930481abbaf6d6a30dddbae159c5ea4ba899ef003d7ad60c0b1)
			Second parameter (with value "DESede") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke r19.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r5, r2)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #186bca6ac01b50cbde4d90e7428b7ef61d7d66008fa751ae07d1dc7a4f8b775b)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r7 = virtualinvoke r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r15)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #55c593a96e797930481abbaf6d6a30dddbae159c5ea4ba899ef003d7ad60c0b1)
			Second parameter (with value "RC2") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke r19.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r5, r2)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #55c593a96e797930481abbaf6d6a30dddbae159c5ea4ba899ef003d7ad60c0b1)
			Second parameter (with value "DES") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke r19.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r5, r2)


	 in Method: byte[] crypt(boolean,org.bouncycastle.jcajce.util.JcaJceHelper,byte[],char[],java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r30.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r4)


Findings in Java Class: org.bouncycastle.operator.jcajce.JceAsymmetricKeyWrapper

	 in Method: byte[] generateWrappedKey(org.bouncycastle.operator.GenericKey)
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #428df3139467fdd126f38ec4b8ba59eb7f79ce935667bff43b5be007ca09cb19)
			Second parameter (with value "GOST") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke r102.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r6, varReplacer2464)


Findings in Java Class: org.bouncycastle.operator.jcajce.OperatorUtils

	 in Method: java.security.Key getJceKey(org.bouncycastle.operator.GenericKey)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer2623)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #830fc9d8d721b14a397bd173d26e83a9f5b1c0a05eac8a2268549e9f49af7aa3)
			Second parameter (with value "ENC") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer2623)


Findings in Java Class: org.bouncycastle.pkcs.jcajce.JcePKCSPBEInputDecryptorProviderBuilder$1

	 in Method: org.bouncycastle.operator.InputDecryptor get(org.bouncycastle.asn1.x509.AlgorithmIdentifier)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r116.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r52)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #23c79f6cad5db971b36a90b61de7d7694c1e6fa3c5db079ed4b4194c467f23ad)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: r95 = virtualinvoke r96.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r114)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r119.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r16, $i0)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke r114.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r54, $r55, $i3, $i4)


Findings in Java Class: org.bouncycastle.pkcs.jcajce.JcePKCSPBEOutputEncryptorBuilder

	 in Method: org.bouncycastle.operator.OutputEncryptor build(char[])
		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #13765ce60b6f0cf235974a35c753e68ec697f8dfa5663142351c47ed0a42351)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: r88 = virtualinvoke r87.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r103)


Findings in Java Class: org.bouncycastle.est.jcajce.JcaJceUtils

	 in Method: javax.net.ssl.KeyManagerFactory createKeyManagerFactory(java.lang.String,java.lang.String,java.security.KeyStore,char[])
		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r5.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r2, r3)


Findings in Java Class: org.bouncycastle.cms.jcajce.EnvelopedDataHelper$1

	 in Method: java.lang.Object doInJCE()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r32.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r33)


Findings in Java Class: org.bouncycastle.cms.jcajce.JcePasswordRecipient

	 in Method: java.security.Key extractSecretKey(org.bouncycastle.asn1.x509.AlgorithmIdentifier,org.bouncycastle.asn1.x509.AlgorithmIdentifier,byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r27.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r3, $r13)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r26.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r11)


Findings in Java Class: org.bouncycastle.operator.jcajce.JceInputDecryptorProviderBuilder$1

	 in Method: org.bouncycastle.operator.InputDecryptor get(org.bouncycastle.asn1.x509.AlgorithmIdentifier)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r30.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r10, $r11)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r31.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r20)


Findings in Java Class: org.bouncycastle.cert.crmf.jcajce.JcePKMACValuesCalculator

	 in Method: byte[] calculateMac(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r17.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, $r7)


Findings in Java Class: org.bouncycastle.est.jcajce.SSLSocketFactoryCreatorBuilder$1

	 in Method: javax.net.ssl.SSLSocketFactory createFactory()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r16.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r10, $r9, $r8)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r16.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r10, $r9, $r8)


Findings in Java Class: org.bouncycastle.cert.crmf.jcajce.CRMFHelper$1

	 in Method: java.lang.Object doInJCE()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r38.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r35)


Findings in Java Class: org.bouncycastle.mozilla.SignedPublicKeyAndChallenge

	 in Method: boolean verify(java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke r19.<java.security.Signature: void initVerify(java.security.PublicKey)>(r2)


Findings in Java Class: org.bouncycastle.cms.jcajce.JcePasswordRecipientInfoGenerator

	 in Method: byte[] generateEncryptedBytes(org.bouncycastle.asn1.x509.AlgorithmIdentifier,byte[],org.bouncycastle.operator.GenericKey)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r26.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, $r14)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r25.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r12)


Findings in Java Class: org.bouncycastle.pkcs.jcajce.JcePKCS12MacCalculatorBuilderProvider$1

	 in Method: org.bouncycastle.operator.MacCalculator build(char[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r26.<javax.crypto.spec.PBEParameterSpec: void <init>(byte[],int)>($r13, $i0)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 106

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 14
	RequiredPredicateError: 28
	ConstraintError: 9
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 4 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 7.361 s

