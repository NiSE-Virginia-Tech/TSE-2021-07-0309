
Current Proejct: logback-classic-1.2.3.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 470.5 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

Findings in Java Class: ch.qos.logback.classic.net.SimpleSSLSocketServer

	 in Method: void <init>(ch.qos.logback.classic.LoggerContext,int)
		ForbiddenMethodError violating CrySL rule for javax.net.ssl.SSLContext
			Detected call to forbidden method javax.net.ssl.SSLContext getDefault() of class javax.net.ssl.SSLContext. Instead, call method <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>.
			at statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getDefault()>()


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0

	CogniCrypt found the following violations. For details see description above.
	ForbiddenMethodError: 1
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 2.102 s

Current Proejct: streams-plugin-hive-0.6.1-SNAPSHOT.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 435.4 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.104 s

Current Proejct: json-path-assert-2.4.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 487.7 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.261 s

Current Proejct: joda-time-2.9.9.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 464.2 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 3.718 s

Current Proejct: flink-metrics-core-1.4.2.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 396.6 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.063 s

Current Proejct: aws-java-sdk-s3-1.11.184.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 682.6 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 23 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.04

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.09

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.13

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.17

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.22

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.26

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 24
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.29

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 25
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.32

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 25
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.36

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 25
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.4

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 27
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.41

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 27
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.44

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 27
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.48

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 14 of 28
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 15 of 29
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.52

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 16 of 31
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.52

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 17 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.52

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 18 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.55

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 19 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.58

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 20 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.61

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 21 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.64

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 22 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 23 of 34
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.68

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 24 of 34
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.71

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 25 of 34
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.74

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 26 of 34
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.76

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 27 of 34
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.79

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 28 of 34
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.82

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 29 of 34
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.85

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 30 of 34
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.88

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 31 of 34
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.91

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 32 of 34
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.94

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 33 of 34
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.97

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r26
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r26.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r6, varReplacer881)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial: javax.crypto.SecretKey cek(byte[],java.lang.String,com.amazonaws.services.s3.model.EncryptionMaterials,java.security.Provider,com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme,com.amazonaws.services.kms.AWSKMS)>
		SHA-256: ae03158f82164601a8c58e6fee5ba94540cc9ffe0597ec9a202368385e88fb1f
		Secure: false
	Object:
		Variable: r16
		Type: javax.crypto.Cipher
		Statement: r16 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>($r8, r4)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme: com.amazonaws.services.s3.internal.crypto.CipherLite createCipherLite(javax.crypto.SecretKey,byte[],int,java.security.Provider)>
		SHA-256: e7a3fcd001dded2d4946603f2364e4f9dfdce79e8a7a0f236a5f8cd345068b02
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <com.amazonaws.services.s3.internal.crypto.S3CryptoScheme: void <clinit>()>
		SHA-256: 6fa4d8a3b8929b92c8516c0152f9497fab94ad31ef34c8ab3e6be9e5ee2df174
		Secure: true
	Object:
		Variable: $r20
		Type: javax.crypto.Cipher
		Statement: $r20 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>(r1, r3)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial: javax.crypto.SecretKey cek(byte[],java.lang.String,com.amazonaws.services.s3.model.EncryptionMaterials,java.security.Provider,com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme,com.amazonaws.services.kms.AWSKMS)>
		SHA-256: 359aebbdbfdade1accbe5ec15253114e82f5eec52ffdeb3829addd9f12827d16
		Secure: false
	Object:
		Variable: r38
		Type: javax.crypto.Cipher
		Statement: r38 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>(r8, r4)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial: com.amazonaws.services.s3.internal.crypto.SecuredCEK secureCEK(javax.crypto.SecretKey,com.amazonaws.services.s3.model.EncryptionMaterials,com.amazonaws.services.s3.internal.crypto.S3KeyWrapScheme,java.security.SecureRandom,java.security.Provider,com.amazonaws.services.kms.AWSKMS,com.amazonaws.AmazonWebServiceRequest)>
		SHA-256: 14ca8fb7c12bb639076783d0ca87cfd61e31633b0f0e230a21c162b46f326c20
		Secure: false
	Object:
		Variable: varReplacer881
		Type: java.lang.String
		Statement: specialinvoke r26.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r6, varReplacer881)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial: javax.crypto.SecretKey cek(byte[],java.lang.String,com.amazonaws.services.s3.model.EncryptionMaterials,java.security.Provider,com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme,com.amazonaws.services.kms.AWSKMS)>
		SHA-256: 481a6448532eabd614e54b6d0495a98a22eb3290d9543bd12de5e2813f3111d
		Secure: false
	Object:
		Variable: r6
		Type: byte[]
		Statement: r6 = virtualinvoke r22.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r0)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial: javax.crypto.SecretKey cek(byte[],java.lang.String,com.amazonaws.services.s3.model.EncryptionMaterials,java.security.Provider,com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme,com.amazonaws.services.kms.AWSKMS)>
		SHA-256: d3d00d949a81198f10e5ef580839e788f0cbb8dd9b6f124ee0ece6effe2b177a
		Secure: false
	Object:
		Variable: r22
		Type: javax.crypto.Cipher
		Statement: r22 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r8)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial: javax.crypto.SecretKey cek(byte[],java.lang.String,com.amazonaws.services.s3.model.EncryptionMaterials,java.security.Provider,com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme,com.amazonaws.services.kms.AWSKMS)>
		SHA-256: abc03d846f21b8e517dbc81c7c129bb5d2240abd158d9fcc428c7c2ccf13bc8e
		Secure: false
	Object:
		Variable: r20
		Type: java.lang.String
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, r20)
		Method: <com.amazonaws.auth.AwsChunkedEncodingInputStream: void <init>(java.io.InputStream,int,byte[],java.lang.String,java.lang.String,java.lang.String,com.amazonaws.auth.AWS4Signer)>
		SHA-256: 7e1327eb8bcd58915727f652c3b6a0b7528088b8d0e43c0b10e7e6590d5885e4
		Secure: false
	Object:
		Variable: r22
		Type: javax.crypto.Cipher
		Statement: r22 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>($r10, r3)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial: javax.crypto.SecretKey cek(byte[],java.lang.String,com.amazonaws.services.s3.model.EncryptionMaterials,java.security.Provider,com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme,com.amazonaws.services.kms.AWSKMS)>
		SHA-256: acd6ed67570803317a02850614fcbdeb520c873593917d96df242b88e9b0d8b1
		Secure: false
	Object:
		Variable: r0
		Type: javax.crypto.SecretKey
		Statement: $r13 = virtualinvoke r37.<javax.crypto.Cipher: byte[] wrap(java.security.Key)>(r0)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial: com.amazonaws.services.s3.internal.crypto.SecuredCEK secureCEK(javax.crypto.SecretKey,com.amazonaws.services.s3.model.EncryptionMaterials,com.amazonaws.services.s3.internal.crypto.S3KeyWrapScheme,java.security.SecureRandom,java.security.Provider,com.amazonaws.services.kms.AWSKMS,com.amazonaws.AmazonWebServiceRequest)>
		SHA-256: 174d2b2058ff0a866890e9c072bacb903e6667f36e73150e7e55240caf7f81a9
		Secure: false
	Object:
		Variable: r30
		Type: javax.crypto.SecretKey
		Statement: r30 = virtualinvoke r4.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.amazonaws.services.s3.internal.crypto.S3CryptoModuleBase: javax.crypto.SecretKey generateCEK(com.amazonaws.services.s3.model.EncryptionMaterials,java.security.Provider)>
		SHA-256: 85cd5717113cf93cac62d829ceee7c3b9e78e52b8da110af66d0696ff24ccdec
		Secure: false
	Object:
		Variable: r16
		Type: javax.crypto.Cipher
		Statement: r16 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r6)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme: com.amazonaws.services.s3.internal.crypto.CipherLite createCipherLite(javax.crypto.SecretKey,byte[],int,java.security.Provider)>
		SHA-256: 37f827521d078d92596c61071444281eb77aac65550fdc1f7d1634b804f796b
		Secure: true
	Object:
		Variable: r16
		Type: javax.crypto.Cipher
		Statement: r16 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>($r7, r3)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme: com.amazonaws.services.s3.internal.crypto.CipherLite createCipherLite(javax.crypto.SecretKey,byte[],int,java.security.Provider)>
		SHA-256: 25a1275b15dd8043123d6251c8350c71eaa9da1614e03c111f70f74088fc91e3
		Secure: true
	Object:
		Variable: $r9
		Type: javax.crypto.Mac
		Statement: $r9 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(r20)
		Method: <com.amazonaws.auth.AwsChunkedEncodingInputStream: void <init>(java.io.InputStream,int,byte[],java.lang.String,java.lang.String,java.lang.String,com.amazonaws.auth.AWS4Signer)>
		SHA-256: 9ee1a9189b144fc5b5f0b2f5cee277e6ef42608bbc7a44b66e70d5910047064e
		Secure: false
	Object:
		Variable: $r36
		Type: javax.crypto.Cipher
		Statement: $r36 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>(r35, r4)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial: com.amazonaws.services.s3.internal.crypto.SecuredCEK secureCEK(javax.crypto.SecretKey,com.amazonaws.services.s3.model.EncryptionMaterials,com.amazonaws.services.s3.internal.crypto.S3KeyWrapScheme,java.security.SecureRandom,java.security.Provider,com.amazonaws.services.kms.AWSKMS,com.amazonaws.AmazonWebServiceRequest)>
		SHA-256: 910a254b4ebf8ff5b8270bc631cb4e2c6f9ce8de535367cec7107c178fd37c4e
		Secure: false
	Object:
		Variable: r38
		Type: javax.crypto.Cipher
		Statement: r38 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r8)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial: com.amazonaws.services.s3.internal.crypto.SecuredCEK secureCEK(javax.crypto.SecretKey,com.amazonaws.services.s3.model.EncryptionMaterials,com.amazonaws.services.s3.internal.crypto.S3KeyWrapScheme,java.security.SecureRandom,java.security.Provider,com.amazonaws.services.kms.AWSKMS,com.amazonaws.AmazonWebServiceRequest)>
		SHA-256: 549d77d2ccd6c9db92e8c137e1c6aea900ab9a6303b1cabad08b6a33be3090e2
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer473)
		Method: <com.amazonaws.services.s3.internal.MD5DigestCalculatingInputStream: java.security.MessageDigest newMD5()>
		SHA-256: a6e56d39514d47f7249b92b6af695f35a0acaab1aa1c3b5b4c1918cc97c0e066
		Secure: false
	Object:
		Variable: r20
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r20.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r2)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme: com.amazonaws.services.s3.internal.crypto.CipherLite createCipherLite(javax.crypto.SecretKey,byte[],int,java.security.Provider)>
		SHA-256: fbdb1402135f85a03d3146b031d58dc035b1fc3c7f2bf8ee66c49463244c5967
		Secure: false
	Object:
		Variable: $r26
		Type: javax.crypto.KeyGenerator
		Statement: $r26 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(r3)
		Method: <com.amazonaws.services.s3.internal.crypto.S3CryptoModuleBase: javax.crypto.SecretKey generateCEK(com.amazonaws.services.s3.model.EncryptionMaterials,java.security.Provider)>
		SHA-256: 6ea72a608145e99be36d16e4a9625baf3f2ecbe7f2409900c1600a5a32c74e2f
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, r20)
		Method: <com.amazonaws.auth.AwsChunkedEncodingInputStream: void <init>(java.io.InputStream,int,byte[],java.lang.String,java.lang.String,java.lang.String,com.amazonaws.auth.AWS4Signer)>
		SHA-256: 7bba06de4be39faf991c8dddf0b97af88cdf72db8de9f030c3fb6db30212d5e9
		Secure: false
	Object:
		Variable: r0
		Type: byte[]
		Statement: r6 = virtualinvoke r22.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r0)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial: javax.crypto.SecretKey cek(byte[],java.lang.String,com.amazonaws.services.s3.model.EncryptionMaterials,java.security.Provider,com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme,com.amazonaws.services.kms.AWSKMS)>
		SHA-256: cd90302390ae8f01b6c374c3109d57f856780416cc1af7161d4763e3d534c03c
		Secure: false
	Object:
		Variable: $r14
		Type: java.lang.String
		Statement: specialinvoke $r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r13, $r14)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial: javax.crypto.SecretKey cekByKMS(byte[],java.lang.String,com.amazonaws.services.s3.model.EncryptionMaterials,com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme,com.amazonaws.services.kms.AWSKMS)>
		SHA-256: 1a371668f4c74cca7f19a48cf59ceb579cdf11fc8d49dd0a9bed13c25ef43653
		Secure: false
	Object:
		Variable: r66
		Type: java.security.MessageDigest
		Statement: r66 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1298)
		Method: <com.amazonaws.services.s3.AmazonS3Client: com.amazonaws.services.s3.model.S3Object getObject(com.amazonaws.services.s3.model.GetObjectRequest)>
		SHA-256: a73d73ce0c5a9cbec786286a1b3f4508c1d8565ab9cde4521fba7892f5ca0742
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.MessageDigest
		Statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3446)
		Method: <com.amazonaws.auth.AwsChunkedEncodingInputStream: void <init>(java.io.InputStream,int,byte[],java.lang.String,java.lang.String,java.lang.String,com.amazonaws.auth.AWS4Signer)>
		SHA-256: 828aeeb41b2634b6a10af12f5336978b898e5cba980051171ada97f19f177c78
		Secure: false
	Object:
		Variable: r7
		Type: byte[]
		Statement: $r11 = virtualinvoke r38.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r7)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial: com.amazonaws.services.s3.internal.crypto.SecuredCEK secureCEK(javax.crypto.SecretKey,com.amazonaws.services.s3.model.EncryptionMaterials,com.amazonaws.services.s3.internal.crypto.S3KeyWrapScheme,java.security.SecureRandom,java.security.Provider,com.amazonaws.services.kms.AWSKMS,com.amazonaws.AmazonWebServiceRequest)>
		SHA-256: da18363e4ca34d64ba6c5b5c01a360ee08be227935b769699e98019a30a5b628
		Secure: false
	Object:
		Variable: $r36
		Type: javax.crypto.Cipher
		Statement: $r36 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r35)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial: com.amazonaws.services.s3.internal.crypto.SecuredCEK secureCEK(javax.crypto.SecretKey,com.amazonaws.services.s3.model.EncryptionMaterials,com.amazonaws.services.s3.internal.crypto.S3KeyWrapScheme,java.security.SecureRandom,java.security.Provider,com.amazonaws.services.kms.AWSKMS,com.amazonaws.AmazonWebServiceRequest)>
		SHA-256: e780970632b5b03ae9c83c8274fe257f7dc0938194a68cebafaf8a63873e94c9
		Secure: false
	Object:
		Variable: $r13
		Type: byte[]
		Statement: $r13 = virtualinvoke r37.<javax.crypto.Cipher: byte[] wrap(java.security.Key)>(r0)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial: com.amazonaws.services.s3.internal.crypto.SecuredCEK secureCEK(javax.crypto.SecretKey,com.amazonaws.services.s3.model.EncryptionMaterials,com.amazonaws.services.s3.internal.crypto.S3KeyWrapScheme,java.security.SecureRandom,java.security.Provider,com.amazonaws.services.kms.AWSKMS,com.amazonaws.AmazonWebServiceRequest)>
		SHA-256: 145f9175359ae6744285b1a39c33fcd2d5ece191f266774864a4ecd4721d7c4d
		Secure: false
	Object:
		Variable: $r28
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r28.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r30, $r32)
		Method: <com.amazonaws.services.s3.internal.crypto.S3CryptoModuleBase: com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial buildContentCryptoMaterial(com.amazonaws.services.s3.model.EncryptionMaterials,java.security.Provider,com.amazonaws.AmazonWebServiceRequest)>
		SHA-256: 9a3fc9e30990c1329c741789a224b696ceab1acd111dacf17a34f128e34808de
		Secure: false
	Object:
		Variable: $r20
		Type: javax.crypto.Cipher
		Statement: $r20 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r1)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial: javax.crypto.SecretKey cek(byte[],java.lang.String,com.amazonaws.services.s3.model.EncryptionMaterials,java.security.Provider,com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme,com.amazonaws.services.kms.AWSKMS)>
		SHA-256: 31d5c56a75c032bb0f0d73539dbba95954f377da07d5035763167172e2064ce1
		Secure: false
	Object:
		Variable: $r11
		Type: byte[]
		Statement: $r11 = virtualinvoke r38.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r7)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial: com.amazonaws.services.s3.internal.crypto.SecuredCEK secureCEK(javax.crypto.SecretKey,com.amazonaws.services.s3.model.EncryptionMaterials,com.amazonaws.services.s3.internal.crypto.S3KeyWrapScheme,java.security.SecureRandom,java.security.Provider,com.amazonaws.services.kms.AWSKMS,com.amazonaws.AmazonWebServiceRequest)>
		SHA-256: 6518dab76002cc3c9a909a754c982b5afaee0a9c9ae41315952e222486209ae7
		Secure: false
	Object:
		Variable: $r11
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r13, $r14)
		Method: <com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial: javax.crypto.SecretKey cekByKMS(byte[],java.lang.String,com.amazonaws.services.s3.model.EncryptionMaterials,com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme,com.amazonaws.services.kms.AWSKMS)>
		SHA-256: 1c4f40b42e7b2022e95e122a8d866519e477716624d28ff20a4eb94406c62a99
		Secure: false
	Object:
		Variable: $r32
		Type: java.lang.String
		Statement: specialinvoke $r28.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r30, $r32)
		Method: <com.amazonaws.services.s3.internal.crypto.S3CryptoModuleBase: com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial buildContentCryptoMaterial(com.amazonaws.services.s3.model.EncryptionMaterials,java.security.Provider,com.amazonaws.AmazonWebServiceRequest)>
		SHA-256: 6869af176fdd8f37b8d3659ff6947e2f903394d29631abd1fd2a715b02530220
		Secure: false
	Object:
		Variable: $r26
		Type: javax.crypto.KeyGenerator
		Statement: $r26 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.security.Provider)>(r3, r2)
		Method: <com.amazonaws.services.s3.internal.crypto.S3CryptoModuleBase: javax.crypto.SecretKey generateCEK(com.amazonaws.services.s3.model.EncryptionMaterials,java.security.Provider)>
		SHA-256: 96497cfd4508a31dca201f033fa6d7d99fc11e96cde42d6715c2bbbae6dbc709
		Secure: false

Findings in Java Class: com.amazonaws.services.s3.internal.MD5DigestCalculatingInputStream

	 in Method: java.security.MessageDigest newMD5()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #a6e56d39514d47f7249b92b6af695f35a0acaab1aa1c3b5b4c1918cc97c0e066)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer473)


	 in Method: byte[] getMd5Digest()
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #a6e56d39514d47f7249b92b6af695f35a0acaab1aa1c3b5b4c1918cc97c0e066)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()


	 in Method: void reset()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #a6e56d39514d47f7249b92b6af695f35a0acaab1aa1c3b5b4c1918cc97c0e066)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r5 = specialinvoke r0.<com.amazonaws.services.s3.internal.MD5DigestCalculatingInputStream: java.security.MessageDigest cloneFrom(java.security.MessageDigest)>($r3)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #a6e56d39514d47f7249b92b6af695f35a0acaab1aa1c3b5b4c1918cc97c0e066)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r5 = specialinvoke r0.<com.amazonaws.services.s3.internal.MD5DigestCalculatingInputStream: java.security.MessageDigest cloneFrom(java.security.MessageDigest)>($r3)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #a6e56d39514d47f7249b92b6af695f35a0acaab1aa1c3b5b4c1918cc97c0e066)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r5 = specialinvoke r0.<com.amazonaws.services.s3.internal.MD5DigestCalculatingInputStream: java.security.MessageDigest newMD5()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #a6e56d39514d47f7249b92b6af695f35a0acaab1aa1c3b5b4c1918cc97c0e066)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r5 = specialinvoke r0.<com.amazonaws.services.s3.internal.MD5DigestCalculatingInputStream: java.security.MessageDigest newMD5()>()


Findings in Java Class: com.amazonaws.services.s3.AmazonS3Client

	 in Method: com.amazonaws.services.s3.model.UploadPartResult uploadPart(com.amazonaws.services.s3.model.UploadPartRequest)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #a6e56d39514d47f7249b92b6af695f35a0acaab1aa1c3b5b4c1918cc97c0e066)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: staticinvoke <com.amazonaws.services.s3.model.S3DataSource$Utils: void cleanupDataSource(com.amazonaws.services.s3.model.S3DataSource,java.io.File,java.io.InputStream,java.io.InputStream,org.apache.commons.logging.Log)>(r33, r1, r2, r52, $r41)


	 in Method: com.amazonaws.services.s3.model.PutObjectResult putObject(com.amazonaws.services.s3.model.PutObjectRequest)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #a6e56d39514d47f7249b92b6af695f35a0acaab1aa1c3b5b4c1918cc97c0e066)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r75)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #a6e56d39514d47f7249b92b6af695f35a0acaab1aa1c3b5b4c1918cc97c0e066)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: staticinvoke <com.amazonaws.services.s3.model.S3DataSource$Utils: void cleanupDataSource(com.amazonaws.services.s3.model.S3DataSource,java.io.File,java.io.InputStream,java.io.InputStream,org.apache.commons.logging.Log)>(r70, r1, r2, r112, $r17)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #a6e56d39514d47f7249b92b6af695f35a0acaab1aa1c3b5b4c1918cc97c0e066)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r39 = virtualinvoke r75.<com.amazonaws.services.s3.internal.MD5DigestCalculatingInputStream: byte[] getMd5Digest()>()


	 in Method: com.amazonaws.services.s3.model.UploadPartResult doUploadPart(java.lang.String,java.lang.String,java.lang.String,int,long,com.amazonaws.Request,java.io.InputStream,com.amazonaws.services.s3.internal.MD5DigestCalculatingInputStream,com.amazonaws.event.ProgressListener)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #a6e56d39514d47f7249b92b6af695f35a0acaab1aa1c3b5b4c1918cc97c0e066)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: interfaceinvoke r4.<com.amazonaws.Request: void setContent(java.io.InputStream)>(r5)


	 in Method: com.amazonaws.services.s3.model.S3Object getObject(com.amazonaws.services.s3.model.GetObjectRequest)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #a73d73ce0c5a9cbec786286a1b3f4508c1d8565ab9cde4521fba7892f5ca0742)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r66 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1298)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #a73d73ce0c5a9cbec786286a1b3f4508c1d8565ab9cde4521fba7892f5ca0742)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke r73.<com.amazonaws.services.s3.internal.DigestValidationInputStream: void <init>(java.io.InputStream,java.security.MessageDigest,byte[])>(r78, r66, r6)


Findings in Java Class: com.amazonaws.services.s3.internal.crypto.S3CryptoModuleBase

	 in Method: javax.crypto.SecretKey generateCEK(com.amazonaws.services.s3.model.EncryptionMaterials,java.security.Provider)
		RequiredPredicateError violating CrySL rule for javax.crypto.KeyGenerator
			Second parameter was not properly generated as randomized
			at statement: virtualinvoke r4.<javax.crypto.KeyGenerator: void init(int,java.security.SecureRandom)>($i0, $r10)

		TypestateError violating CrySL rule for javax.crypto.KeyGenerator (on Object #6ea72a608145e99be36d16e4a9625baf3f2ecbe7f2409900c1600a5a32c74e2f)
			Unexpected call to method generateKey on object of type javax.crypto.KeyGenerator.
			at statement: r31 = virtualinvoke r4.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()

		TypestateError violating CrySL rule for javax.crypto.KeyGenerator (on Object #96497cfd4508a31dca201f033fa6d7d99fc11e96cde42d6715c2bbbae6dbc709)
			Unexpected call to method generateKey on object of type javax.crypto.KeyGenerator.
			at statement: r31 = virtualinvoke r4.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()


	 in Method: com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial buildContentCryptoMaterial(com.amazonaws.services.s3.model.EncryptionMaterials,java.security.Provider,com.amazonaws.AmazonWebServiceRequest)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r28.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r30, $r32)


Findings in Java Class: com.amazonaws.services.s3.internal.crypto.ContentCryptoMaterial

	 in Method: javax.crypto.SecretKey cek(byte[],java.lang.String,com.amazonaws.services.s3.model.EncryptionMaterials,java.security.Provider,com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme,com.amazonaws.services.kms.AWSKMS)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r22.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer880, r32)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #31d5c56a75c032bb0f0d73539dbba95954f377da07d5035763167172e2064ce1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: $r11 = virtualinvoke r21.<javax.crypto.Cipher: java.security.Key unwrap(byte[],java.lang.String,int)>(r0, r1, varReplacer878)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #359aebbdbfdade1accbe5ec15253114e82f5eec52ffdeb3829addd9f12827d16)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: $r11 = virtualinvoke r21.<javax.crypto.Cipher: java.security.Key unwrap(byte[],java.lang.String,int)>(r0, r1, varReplacer878)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r26.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r6, varReplacer881)

		ForbiddenMethodError violating CrySL rule for javax.crypto.Cipher
			Detected call to forbidden method void init(int,java.security.Key) of class javax.crypto.Cipher. Instead, call method <javax.crypto.Cipher: void init(int,java.security.Key)>.
			at statement: virtualinvoke r21.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer876, r29)


	 in Method: com.amazonaws.services.s3.internal.crypto.SecuredCEK secureCEK(javax.crypto.SecretKey,com.amazonaws.services.s3.model.EncryptionMaterials,com.amazonaws.services.s3.internal.crypto.S3KeyWrapScheme,java.security.SecureRandom,java.security.Provider,com.amazonaws.services.kms.AWSKMS,com.amazonaws.AmazonWebServiceRequest)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke r37.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom)>(varReplacer926, r45, r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r38.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer925, r47)

		ForbiddenMethodError violating CrySL rule for javax.crypto.Cipher
			Detected call to forbidden method void init(int,java.security.Key,java.security.SecureRandom) of class javax.crypto.Cipher. Instead, call method <javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom)>.
			at statement: virtualinvoke r37.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom)>(varReplacer926, r45, r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r37.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom)>(varReplacer926, r45, r3)


	 in Method: javax.crypto.SecretKey cekByKMS(byte[],java.lang.String,com.amazonaws.services.s3.model.EncryptionMaterials,com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme,com.amazonaws.services.kms.AWSKMS)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r13, $r14)


Findings in Java Class: com.amazonaws.services.s3.internal.AWSS3V4Signer

	 in Method: void processRequestPayload(com.amazonaws.SignableRequest,byte[],byte[],com.amazonaws.auth.internal.AWS4SignerRequestParams)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #9ee1a9189b144fc5b5f0b2f5cee277e6ef42608bbc7a44b66e70d5910047064e)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: interfaceinvoke r1.<com.amazonaws.SignableRequest: void setContent(java.io.InputStream)>(r12)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #828aeeb41b2634b6a10af12f5336978b898e5cba980051171ada97f19f177c78)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: interfaceinvoke r1.<com.amazonaws.SignableRequest: void setContent(java.io.InputStream)>(r12)


Findings in Java Class: com.amazonaws.services.s3.internal.crypto.ContentCryptoScheme

	 in Method: com.amazonaws.services.s3.internal.crypto.CipherLite createCipherLite(javax.crypto.SecretKey,byte[],int,java.security.Provider)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r20.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r2)


Findings in Java Class: com.amazonaws.auth.AwsChunkedEncodingInputStream

	 in Method: void <init>(java.io.InputStream,int,byte[],java.lang.String,java.lang.String,java.lang.String,com.amazonaws.auth.AWS4Signer)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, r20)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 34

	CogniCrypt found the following violations. For details see description above.
	ForbiddenMethodError: 2
	ConstraintError: 2
	TypestateError: 3
	RequiredPredicateError: 10
	IncompleteOperationError: 14
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 11 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 14.05 s

Current Proejct: log4j-1.2.17.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 730.5 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 3.860 s

Current Proejct: junit-4.12.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 500.6 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 2.185 s

Current Proejct: maven-plugin-annotations-3.3.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 492.2 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.396 s

Current Proejct: hamcrest-all-1.3.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 540.2 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 2.412 s

Current Proejct: hadoop-hdfs-2.7.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 3.293 s 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 8 analysis seeds within 8 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 8
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.13

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 8
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.25

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 8
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.38

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 8
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 8
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.63

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 8
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.75

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 8
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.88

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r13
		Type: java.security.DigestInputStream
		Statement: specialinvoke r13.<java.security.DigestInputStream: void <init>(java.io.InputStream,java.security.MessageDigest)>(r1, r2)
		Method: <org.apache.hadoop.hdfs.util.MD5FileUtils: org.apache.hadoop.io.MD5Hash computeMd5ForFile(java.io.File)>
		SHA-256: 444f78872f188cfcbca16979b7762417833495aeb5468c11dd633eace39537a3
		Secure: false
	Object:
		Variable: $r25
		Type: java.security.DigestOutputStream
		Statement: specialinvoke $r25.<java.security.DigestOutputStream: void <init>(java.io.OutputStream,java.security.MessageDigest)>(r10, r9)
		Method: <org.apache.hadoop.hdfs.server.namenode.FSImageFormat$Saver: void save(java.io.File,org.apache.hadoop.hdfs.server.namenode.FSImageCompression)>
		SHA-256: ca6e15f1b2f33d11ab367c0981b839b3ca811d0b1586f7d739621e98b1feb7e0
		Secure: false
	Object:
		Variable: r46
		Type: java.security.DigestOutputStream
		Statement: specialinvoke r46.<java.security.DigestOutputStream: void <init>(java.io.OutputStream,java.security.MessageDigest)>(r45, r5)
		Method: <org.apache.hadoop.hdfs.server.namenode.FSImageFormatProtobuf$Saver: void saveInternal(java.io.FileOutputStream,org.apache.hadoop.hdfs.server.namenode.FSImageCompression,java.lang.String)>
		SHA-256: 336d20b637844ca5d903b8a61367081e65c2236c1bb8ea9a85f393ee2b5504ce
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.apache.hadoop.hdfs.security.token.block.BlockTokenSecretManager: void <init>(boolean,long,long,java.lang.String,java.lang.String)>
		SHA-256: 71f201fa690ccf63f7574ad63a1e93888b75aaa67d18cc66d8062cadd66fb336
		Secure: true
	Object:
		Variable: r89
		Type: java.security.DigestInputStream
		Statement: specialinvoke r89.<java.security.DigestInputStream: void <init>(java.io.InputStream,java.security.MessageDigest)>(r102, r76)
		Method: <org.apache.hadoop.hdfs.server.namenode.TransferFsImage: org.apache.hadoop.io.MD5Hash receiveFile(java.lang.String,java.util.List,org.apache.hadoop.hdfs.server.common.Storage,boolean,long,org.apache.hadoop.io.MD5Hash,java.lang.String,java.io.InputStream,org.apache.hadoop.hdfs.util.DataTransferThrottler)>
		SHA-256: 64841c8d2019445193e36f249b02de42596362778def1980e1f7a5ed6bd401a4
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.DigestInputStream
		Statement: specialinvoke $r11.<java.security.DigestInputStream: void <init>(java.io.InputStream,java.security.MessageDigest)>($r12, r4)
		Method: <org.apache.hadoop.hdfs.server.namenode.FSImageFormat$Loader: void load(java.io.File)>
		SHA-256: 62531ff07c81d5965ad386acdd63a577dc59a0a48091d380dadb00a62b7dec26
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <org.apache.hadoop.hdfs.DFSUtil$2: java.security.SecureRandom initialValue()>
		SHA-256: 3e422b639228b02d62658631ea0697a5d1f7d1e9a317a2484be295f75ca5a24d
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.apache.hadoop.hdfs.security.token.block.BlockTokenSecretManager: void <init>(long,long,int,java.lang.String,java.lang.String)>
		SHA-256: 71f201fa690ccf63f7574ad63a1e93888b75aaa67d18cc66d8062cadd66fb336
		Secure: true

Findings in Java Class: org.apache.hadoop.hdfs.server.namenode.FSImageFormat$Loader

	 in Method: void load(java.io.File)
		IncompleteOperationError violating CrySL rule for java.security.DigestInputStream (on Object #62531ff07c81d5965ad386acdd63a577dc59a0a48091d380dadb00a62b7dec26)
			Operation on object of type java.security.DigestInputStream object not completed. Expected call to read
			at statement: specialinvoke $r13.<java.io.DataInputStream: void <init>(java.io.InputStream)>(r5)

		IncompleteOperationError violating CrySL rule for java.security.DigestInputStream (on Object #62531ff07c81d5965ad386acdd63a577dc59a0a48091d380dadb00a62b7dec26)
			Operation on object of type java.security.DigestInputStream object not completed. Expected call to read
			at statement: r91 = virtualinvoke r92.<org.apache.hadoop.hdfs.server.namenode.FSImageCompression: java.io.DataInputStream unwrapInputStream(java.io.InputStream)>(r5)


Findings in Java Class: org.apache.hadoop.hdfs.server.namenode.FSImageFormat$Saver

	 in Method: void save(java.io.File,org.apache.hadoop.hdfs.server.namenode.FSImageCompression)
		IncompleteOperationError violating CrySL rule for java.security.DigestOutputStream (on Object #ca6e15f1b2f33d11ab367c0981b839b3ca811d0b1586f7d739621e98b1feb7e0)
			Operation on object of type java.security.DigestOutputStream object not completed. Expected call to write
			at statement: specialinvoke $r25.<java.security.DigestOutputStream: void <init>(java.io.OutputStream,java.security.MessageDigest)>(r10, r9)


Findings in Java Class: org.apache.hadoop.hdfs.server.namenode.FSImageFormatProtobuf$Saver

	 in Method: void saveInternal(java.io.FileOutputStream,org.apache.hadoop.hdfs.server.namenode.FSImageCompression,java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.DigestOutputStream (on Object #336d20b637844ca5d903b8a61367081e65c2236c1bb8ea9a85f393ee2b5504ce)
			Operation on object of type java.security.DigestOutputStream object not completed. Expected call to write
			at statement: $r17 = r0.<org.apache.hadoop.hdfs.server.namenode.FSImageFormatProtobuf$Saver: java.io.OutputStream underlxOutputStream>

		IncompleteOperationError violating CrySL rule for java.security.DigestOutputStream (on Object #336d20b637844ca5d903b8a61367081e65c2236c1bb8ea9a85f393ee2b5504ce)
			Operation on object of type java.security.DigestOutputStream object not completed. Expected call to write
			at statement: $r41 = interfaceinvoke $r40.<org.apache.hadoop.io.compress.CompressionCodec: org.apache.hadoop.io.compress.CompressionOutputStream createOutputStream(java.io.OutputStream)>($r39)


	 in Method: void saveNameSystemSection(org.apache.hadoop.hdfs.server.namenode.FsImageProto$FileSummary$Builder)
		IncompleteOperationError violating CrySL rule for java.security.DigestOutputStream (on Object #336d20b637844ca5d903b8a61367081e65c2236c1bb8ea9a85f393ee2b5504ce)
			Operation on object of type java.security.DigestOutputStream object not completed. Expected call to write
			at statement: virtualinvoke r6.<org.apache.hadoop.hdfs.server.namenode.FsImageProto$NameSystemSection: void writeDelimitedTo(java.io.OutputStream)>(r3)


Findings in Java Class: org.apache.hadoop.hdfs.server.namenode.ImageServlet$2

	 in Method: java.lang.Void run()
		IncompleteOperationError violating CrySL rule for java.security.DigestInputStream (on Object #64841c8d2019445193e36f249b02de42596362778def1980e1f7a5ed6bd401a4)
			Operation on object of type java.security.DigestInputStream object not completed. Expected call to read
			at statement: r2 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.TransferFsImage: org.apache.hadoop.io.MD5Hash handleUploadImageRequest(javax.servlet.http.HttpServletRequest,long,org.apache.hadoop.hdfs.server.common.Storage,java.io.InputStream,long,org.apache.hadoop.hdfs.util.DataTransferThrottler)>($r13, l0, $r14, r40, $l3, $r17)


Findings in Java Class: org.apache.hadoop.hdfs.server.namenode.TransferFsImage

	 in Method: org.apache.hadoop.io.MD5Hash doGetUrl(java.net.URL,java.util.List,org.apache.hadoop.hdfs.server.common.Storage,boolean)
		IncompleteOperationError violating CrySL rule for java.security.DigestInputStream (on Object #64841c8d2019445193e36f249b02de42596362778def1980e1f7a5ed6bd401a4)
			Operation on object of type java.security.DigestInputStream object not completed. Expected call to read
			at statement: $r16 = staticinvoke <org.apache.hadoop.hdfs.server.namenode.TransferFsImage: org.apache.hadoop.io.MD5Hash receiveFile(java.lang.String,java.util.List,org.apache.hadoop.hdfs.server.common.Storage,boolean,long,org.apache.hadoop.io.MD5Hash,java.lang.String,java.io.InputStream,org.apache.hadoop.hdfs.util.DataTransferThrottler)>($r15, r1, r2, z0, l2, r5, r6, r7, varReplacer29946)


	 in Method: org.apache.hadoop.io.MD5Hash receiveFile(java.lang.String,java.util.List,org.apache.hadoop.hdfs.server.common.Storage,boolean,long,org.apache.hadoop.io.MD5Hash,java.lang.String,java.io.InputStream,org.apache.hadoop.hdfs.util.DataTransferThrottler)
		IncompleteOperationError violating CrySL rule for java.security.DigestInputStream (on Object #64841c8d2019445193e36f249b02de42596362778def1980e1f7a5ed6bd401a4)
			Operation on object of type java.security.DigestInputStream object not completed. Expected call to read
			at statement: r73 = r89

		IncompleteOperationError violating CrySL rule for java.security.DigestInputStream (on Object #64841c8d2019445193e36f249b02de42596362778def1980e1f7a5ed6bd401a4)
			Operation on object of type java.security.DigestInputStream object not completed. Expected call to read
			at statement: virtualinvoke r105.<java.io.InputStream: void close()>()


Findings in Java Class: org.apache.hadoop.hdfs.util.MD5FileUtils

	 in Method: org.apache.hadoop.io.MD5Hash computeMd5ForFile(java.io.File)
		IncompleteOperationError violating CrySL rule for java.security.DigestInputStream (on Object #444f78872f188cfcbca16979b7762417833495aeb5468c11dd633eace39537a3)
			Operation on object of type java.security.DigestInputStream object not completed. Expected call to read
			at statement: staticinvoke <org.apache.hadoop.io.IOUtils: void copyBytes(java.io.InputStream,java.io.OutputStream,int)>(r3, r16, varReplacer32776)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 8

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 11
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 9 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 29.90 s

Current Proejct: scala-reflect-2.11.12.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 1.734 s 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 1 analysis seeds within 6 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2215)
		Method: <scala.reflect.internal.StdNames$compactify$: void <init>(scala.reflect.internal.SymbolTable)>
		SHA-256: 9f39846444669c32c1828396ff72ba7627cd7831a3519efe10eb6c662747a7df
		Secure: false

Findings in Java Class: scala.reflect.internal.StdNames$compactify$

	 in Method: void <init>(scala.reflect.internal.SymbolTable)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #9f39846444669c32c1828396ff72ba7627cd7831a3519efe10eb6c662747a7df)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2215)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #9f39846444669c32c1828396ff72ba7627cd7831a3519efe10eb6c662747a7df)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2215)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 1

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 1
	IncompleteOperationError: 1
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 6 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 17.44 s

Current Proejct: commons-lang3-3.4.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 488.8 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 2.921 s

Current Proejct: json-schema-validator-0.1.10.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 451.9 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.387 s

Current Proejct: juneau-marshall-rdf-7.2.1.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 422.5 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.523 s

Current Proejct: ant-junit.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 586.8 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 2.358 s

Current Proejct: tape-1.2.3.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 387.4 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.188 s

Current Proejct: maven-verifier-1.6.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 546.9 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.532 s

Current Proejct: maven-plugin-tools-generators-3.3.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 410.5 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.291 s

Current Proejct: google-oauth-client-jetty-1.22.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 463.7 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.369 s

Current Proejct: guava-20.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 1.027 s 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 6 analysis seeds within 1 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 7
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.14

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 8
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.25

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 9
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 10
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.4

[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <com.google.common.collect.ImmutableMap: boolean isPartialView()> for class java.util.LinkedHashMap
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.util.Collection: boolean contains(java.lang.Object)> for class com.google.common.hash.MacHashFunction$MacHasher
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.util.Collection: boolean contains(java.lang.Object)> for class com.google.common.hash.AbstractCompositeHashFunction$1
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.util.Collection: boolean contains(java.lang.Object)> for class com.google.common.hash.MacHashFunction$MacHasher
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.45

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.55

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.64

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.73

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.82

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.91

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer2648)
		Method: <com.google.common.hash.Hashing: com.google.common.hash.HashFunction hmacSha512(byte[])>
		SHA-256: ad377e2e31cdee56cd4344f4e79a6d8cfc400c9d492f3206eeaac01e2e06579d
		Secure: false
	Object:
		Variable: r6
		Type: javax.crypto.Mac
		Statement: r6 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(r0)
		Method: <com.google.common.hash.MacHashFunction: javax.crypto.Mac getMac(java.lang.String,java.security.Key)>
		SHA-256: 2b635b32d646ba18c7a22a7878f70a67ff2f874a3aaa2d92bf15034b9baccefb
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer2639)
		Method: <com.google.common.hash.Hashing: com.google.common.hash.HashFunction hmacMd5(byte[])>
		SHA-256: 4d01f3afb2cad571d7c0491ad66bfcbc8a3fc9d0e13c3d8b72fb410fe535773
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<javax.crypto.Mac: byte[] doFinal()>()
		Method: <com.google.common.hash.MacHashFunction$MacHasher: com.google.common.hash.HashCode hash()>
		SHA-256: a89d37061ba0dac61e1b08aaf3eb3497c39726681770418d4469691a8e1f6dbc
		Secure: false
	Object:
		Variable: varReplacer2639
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer2639)
		Method: <com.google.common.hash.Hashing: com.google.common.hash.HashFunction hmacMd5(byte[])>
		SHA-256: 73dace75a8e13054930baecdedf6571a857450e29f512cc26153269cbfc8689f
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer2642)
		Method: <com.google.common.hash.Hashing: com.google.common.hash.HashFunction hmacSha1(byte[])>
		SHA-256: f55540602fb4b360e8fdcb8187943ad6c515fd8ce806de8382712ef3724cbcf7
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer2645)
		Method: <com.google.common.hash.Hashing: com.google.common.hash.HashFunction hmacSha256(byte[])>
		SHA-256: 3bc6884c4c1eebeb54b76b14f1551446198d343143ab00a9fd314c14654e8a8f
		Secure: false
	Object:
		Variable: varReplacer2648
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer2648)
		Method: <com.google.common.hash.Hashing: com.google.common.hash.HashFunction hmacSha512(byte[])>
		SHA-256: ae0cca25f2994137bb977e10f9e88680e6a6e214021f84efbba669eb0366789b
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r0)
		Method: <com.google.common.hash.MessageDigestHashFunction: java.security.MessageDigest getMessageDigest(java.lang.String)>
		SHA-256: 8a2b1b369fb084db34b2d3f7cf631b0662e57b3014565a24a949a09142bef2d1
		Secure: false
	Object:
		Variable: varReplacer2642
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer2642)
		Method: <com.google.common.hash.Hashing: com.google.common.hash.HashFunction hmacSha1(byte[])>
		SHA-256: 47bef262b991064f9e44f0ec84f89bf70856fe09a5c5c31e07de893b1cfe2f3e
		Secure: false
	Object:
		Variable: varReplacer2645
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer2645)
		Method: <com.google.common.hash.Hashing: com.google.common.hash.HashFunction hmacSha256(byte[])>
		SHA-256: 49a562a4135ed46bf2a403ff8606874b9f40fe3ae4c5d37d406f274a8280ea2
		Secure: false

Findings in Java Class: com.google.common.hash.Hashing

	 in Method: com.google.common.hash.HashFunction hmacMd5(byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #2b635b32d646ba18c7a22a7878f70a67ff2f874a3aaa2d92bf15034b9baccefb)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: return $r4

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #4d01f3afb2cad571d7c0491ad66bfcbc8a3fc9d0e13c3d8b72fb410fe535773)
			Second parameter (with value "HmacMD5") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer2639)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer2639)


	 in Method: com.google.common.hash.HashFunction hmacSha1(byte[])
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #f55540602fb4b360e8fdcb8187943ad6c515fd8ce806de8382712ef3724cbcf7)
			Second parameter (with value "HmacSHA1") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer2642)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #2b635b32d646ba18c7a22a7878f70a67ff2f874a3aaa2d92bf15034b9baccefb)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: return $r4

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer2642)


	 in Method: com.google.common.hash.HashFunction hmacSha512(byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #2b635b32d646ba18c7a22a7878f70a67ff2f874a3aaa2d92bf15034b9baccefb)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: return $r4

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer2648)


	 in Method: com.google.common.hash.HashFunction hmacSha256(byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #2b635b32d646ba18c7a22a7878f70a67ff2f874a3aaa2d92bf15034b9baccefb)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: return $r4

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer2645)


Findings in Java Class: com.google.common.hash.MacHashFunction$MacHasher

	 in Method: void update(byte[],int,int)
		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #2b635b32d646ba18c7a22a7878f70a67ff2f874a3aaa2d92bf15034b9baccefb)
			Second parameter (with value 0)Variable offsetmust be  lesser than len
			at statement: virtualinvoke $r2.<javax.crypto.Mac: void update(byte[],int,int)>(r1, i0, i1)

		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #2b635b32d646ba18c7a22a7878f70a67ff2f874a3aaa2d92bf15034b9baccefb)
			Unexpected call to method update on object of type javax.crypto.Mac. Expect a call to one of the following methods getInstance
			at statement: virtualinvoke $r2.<javax.crypto.Mac: void update(byte[],int,int)>(r1, i0, i1)


	 in Method: void update(byte[])
		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #2b635b32d646ba18c7a22a7878f70a67ff2f874a3aaa2d92bf15034b9baccefb)
			Unexpected call to method update on object of type javax.crypto.Mac. Expect a call to one of the following methods getInstance
			at statement: virtualinvoke $r2.<javax.crypto.Mac: void update(byte[])>(r1)


	 in Method: com.google.common.hash.HashCode hash()
		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #2b635b32d646ba18c7a22a7878f70a67ff2f874a3aaa2d92bf15034b9baccefb)
			Unexpected call to method doFinal on object of type javax.crypto.Mac. Expect a call to one of the following methods getInstance
			at statement: $r2 = virtualinvoke $r1.<javax.crypto.Mac: byte[] doFinal()>()


Findings in Java Class: com.google.common.hash.AbstractStreamingHashFunction

	 in Method: com.google.common.hash.HashCode hashString(java.lang.CharSequence,java.nio.charset.Charset)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #2b635b32d646ba18c7a22a7878f70a67ff2f874a3aaa2d92bf15034b9baccefb)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, getInstance, doFinal
			at statement: $r5 = interfaceinvoke $r4.<com.google.common.hash.Hasher: com.google.common.hash.HashCode hash()>()


	 in Method: com.google.common.hash.HashCode hashBytes(byte[],int,int)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #2b635b32d646ba18c7a22a7878f70a67ff2f874a3aaa2d92bf15034b9baccefb)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, getInstance, doFinal
			at statement: $r4 = interfaceinvoke $r3.<com.google.common.hash.Hasher: com.google.common.hash.HashCode hash()>()


	 in Method: com.google.common.hash.HashCode hashInt(int)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #2b635b32d646ba18c7a22a7878f70a67ff2f874a3aaa2d92bf15034b9baccefb)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, getInstance, doFinal
			at statement: $r3 = interfaceinvoke $r2.<com.google.common.hash.Hasher: com.google.common.hash.HashCode hash()>()


	 in Method: com.google.common.hash.Hasher newHasher(int)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #2b635b32d646ba18c7a22a7878f70a67ff2f874a3aaa2d92bf15034b9baccefb)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, getInstance, doFinal
			at statement: return $r1


	 in Method: com.google.common.hash.HashCode hashObject(java.lang.Object,com.google.common.hash.Funnel)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #2b635b32d646ba18c7a22a7878f70a67ff2f874a3aaa2d92bf15034b9baccefb)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, getInstance, doFinal
			at statement: $r5 = interfaceinvoke $r4.<com.google.common.hash.Hasher: com.google.common.hash.HashCode hash()>()


	 in Method: com.google.common.hash.HashCode hashLong(long)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #2b635b32d646ba18c7a22a7878f70a67ff2f874a3aaa2d92bf15034b9baccefb)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, getInstance, doFinal
			at statement: $r3 = interfaceinvoke $r2.<com.google.common.hash.Hasher: com.google.common.hash.HashCode hash()>()


	 in Method: com.google.common.hash.HashCode hashBytes(byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #2b635b32d646ba18c7a22a7878f70a67ff2f874a3aaa2d92bf15034b9baccefb)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, getInstance, doFinal
			at statement: $r4 = interfaceinvoke $r3.<com.google.common.hash.Hasher: com.google.common.hash.HashCode hash()>()


	 in Method: com.google.common.hash.HashCode hashUnencodedChars(java.lang.CharSequence)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #2b635b32d646ba18c7a22a7878f70a67ff2f874a3aaa2d92bf15034b9baccefb)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, getInstance, doFinal
			at statement: $r4 = interfaceinvoke $r3.<com.google.common.hash.Hasher: com.google.common.hash.HashCode hash()>()


Findings in Java Class: com.google.common.io.ByteSource

	 in Method: com.google.common.hash.HashCode hash(com.google.common.hash.HashFunction)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #2b635b32d646ba18c7a22a7878f70a67ff2f874a3aaa2d92bf15034b9baccefb)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, getInstance, doFinal
			at statement: $r4 = interfaceinvoke r2.<com.google.common.hash.Hasher: com.google.common.hash.HashCode hash()>()


Findings in Java Class: com.google.common.hash.HashingInputStream

	 in Method: void <init>(com.google.common.hash.HashFunction,java.io.InputStream)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #2b635b32d646ba18c7a22a7878f70a67ff2f874a3aaa2d92bf15034b9baccefb)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, getInstance, doFinal
			at statement: $r7 = (com.google.common.hash.Hasher) $r6


Findings in Java Class: com.google.common.hash.HashingOutputStream

	 in Method: void <init>(com.google.common.hash.HashFunction,java.io.OutputStream)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #2b635b32d646ba18c7a22a7878f70a67ff2f874a3aaa2d92bf15034b9baccefb)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, getInstance, doFinal
			at statement: $r7 = (com.google.common.hash.Hasher) $r6


Findings in Java Class: com.google.common.hash.MessageDigestHashFunction

	 in Method: java.security.MessageDigest getMessageDigest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #8a2b1b369fb084db34b2d3f7cf631b0662e57b3014565a24a949a09142bef2d1)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r0)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #8a2b1b369fb084db34b2d3f7cf631b0662e57b3014565a24a949a09142bef2d1)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r0)


Findings in Java Class: com.google.common.hash.MessageDigestHashFunction$SerializedForm

	 in Method: java.lang.Object readResolve()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #8a2b1b369fb084db34b2d3f7cf631b0662e57b3014565a24a949a09142bef2d1)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: return $r1


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 11

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 16
	TypestateError: 3
	RequiredPredicateError: 4
	ConstraintError: 5
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 20 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 27.84 s

Current Proejct: scala-parser-combinators_2.11-1.1.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 461.9 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.948 s

Current Proejct: google-api-services-plus-v1-rev530-1.23.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 459.4 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.567 s

Current Proejct: powermock-module-junit4-1.7.1.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 519.7 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.341 s

Current Proejct: google-http-client-jackson2-1.23.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 392.9 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.084 s

Current Proejct: json-flattener-0.5.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 527.0 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.382 s

Current Proejct: maven-compat-3.3.3.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 591.6 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 2.699 s

Current Proejct: mockito-all-1.10.19.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 850.5 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 3.905 s

Current Proejct: jackson-datatype-joda-2.9.8.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 422.9 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.310 s

Current Proejct: juneau-marshall-7.2.1.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 837.2 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 2 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 2 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 8.364 s

Current Proejct: scala-library-2.11.12.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 2.198 s 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 3 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 3 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 22.37 s

Current Proejct: logback-core-1.2.3.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 622.0 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 10 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.09

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.18

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.27

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.36

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.45

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.55

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.64

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.73

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 12
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.75

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 12
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.83

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 12
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.92

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: $r5
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r5 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.lang.String)>($r3, $r4)
		Method: <ch.qos.logback.core.net.ssl.TrustManagerFactoryFactoryBean: javax.net.ssl.TrustManagerFactory createTrustManagerFactory()>
		SHA-256: 28e237724c44b7cb5a54e9bef6718e3c2fc9f23f0f6b3adfb84ff06d0a1cb83d
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.KeyStore
		Statement: $r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.lang.String)>($r3, $r4)
		Method: <ch.qos.logback.core.net.ssl.KeyStoreFactoryBean: java.security.KeyStore newKeyStore()>
		SHA-256: 35c5b2a7fa9a5429c8a3be83501e8229e9f099e364f7b2b2368798fb4e967b4b
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.KeyStore
		Statement: $r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <ch.qos.logback.core.net.ssl.KeyStoreFactoryBean: java.security.KeyStore newKeyStore()>
		SHA-256: 3f24647a1c76d1e2ba65456eab6fbc8977dd1ee982d41b5c299f82ead1c46c9f
		Secure: false
	Object:
		Variable: $r19
		Type: java.security.SecureRandom
		Statement: $r19 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>($r2)
		Method: <ch.qos.logback.core.net.ssl.SecureRandomFactoryBean: java.security.SecureRandom createSecureRandom()>
		SHA-256: eb0fc2ccf204e1d7ca88bfc41e4b4a6c908454d34f002badfc2193505d064c85
		Secure: true
	Object:
		Variable: $r5
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r5 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r2)
		Method: <ch.qos.logback.core.net.ssl.KeyManagerFactoryFactoryBean: javax.net.ssl.KeyManagerFactory createKeyManagerFactory()>
		SHA-256: f5cd077e4b61dbd09c55ed58d90f762dafc0a33e20bfbee92816d970dc352196
		Secure: false
	Object:
		Variable: $r28
		Type: javax.net.ssl.TrustManager[]
		Statement: $r28 = virtualinvoke r3.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <ch.qos.logback.core.net.ssl.SSLContextFactoryBean: javax.net.ssl.TrustManager[] createTrustManagers(ch.qos.logback.core.spi.ContextAware)>
		SHA-256: 766c36eef1797fc3a5f23d2baa4a6ff8d958a4862b239fa480470ae8474d89c
		Secure: false
	Object:
		Variable: $r5
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r5 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String,java.lang.String)>($r3, $r4)
		Method: <ch.qos.logback.core.net.ssl.KeyManagerFactoryFactoryBean: javax.net.ssl.KeyManagerFactory createKeyManagerFactory()>
		SHA-256: 7d5c8188b36ccf1ccbcdfcc02ce2f3e49fb7750b3652713e1c443657c5448455
		Secure: false
	Object:
		Variable: $r19
		Type: java.security.SecureRandom
		Statement: $r19 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>($r3, $r4)
		Method: <ch.qos.logback.core.net.ssl.SecureRandomFactoryBean: java.security.SecureRandom createSecureRandom()>
		SHA-256: a7a2a1c4a12409c96a7cdbe101d4f2ce6fa76e5ebe883e581162659c7b1d1b86
		Secure: true
	Object:
		Variable: $r19
		Type: javax.net.ssl.SSLContext
		Statement: $r19 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r7)
		Method: <ch.qos.logback.core.net.ssl.SSLContextFactoryBean: javax.net.ssl.SSLContext createContext(ch.qos.logback.core.spi.ContextAware)>
		SHA-256: 59dbff64e897747b3fc3086da6aae80b97fed1a18dbb6351ee3e6fdcf335109f
		Secure: false
	Object:
		Variable: $r19
		Type: javax.net.ssl.SSLContext
		Statement: $r19 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>($r17, $r18)
		Method: <ch.qos.logback.core.net.ssl.SSLContextFactoryBean: javax.net.ssl.SSLContext createContext(ch.qos.logback.core.spi.ContextAware)>
		SHA-256: 6870a55781c37f44892acc65bbba5db06a05747515ebe2ad30db27519dda7f87
		Secure: false
	Object:
		Variable: $r31
		Type: javax.net.ssl.KeyManager[]
		Statement: $r31 = virtualinvoke r3.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <ch.qos.logback.core.net.ssl.SSLContextFactoryBean: javax.net.ssl.KeyManager[] createKeyManagers(ch.qos.logback.core.spi.ContextAware)>
		SHA-256: 791c2282f038bbe70086b62aea7acdfedac2dfcca746b2bde43aab3adec96913
		Secure: false
	Object:
		Variable: $r5
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r5 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r2)
		Method: <ch.qos.logback.core.net.ssl.TrustManagerFactoryFactoryBean: javax.net.ssl.TrustManagerFactory createTrustManagerFactory()>
		SHA-256: d56a5c86e0fd1c56b5354c8404e29ebb2a1220e19ce368d6ac06cbd48da0e2be
		Secure: false

Findings in Java Class: ch.qos.logback.core.net.ssl.SSLContextFactoryBean

	 in Method: javax.net.ssl.KeyManager[] createKeyManagers(ch.qos.logback.core.spi.ContextAware)
		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #7d5c8188b36ccf1ccbcdfcc02ce2f3e49fb7750b3652713e1c443657c5448455)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r3.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r2, r4)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r3.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r2, r4)


	 in Method: javax.net.ssl.TrustManager[] createTrustManagers(ch.qos.logback.core.spi.ContextAware)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r3.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(r2)


	 in Method: javax.net.ssl.SSLContext createContext(ch.qos.logback.core.spi.ContextAware)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(r3, r4, r5)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(r3, r4, r5)


Findings in Java Class: ch.qos.logback.core.net.ssl.KeyStoreFactoryBean

	 in Method: java.security.KeyStore createKeyStore()
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #35c5b2a7fa9a5429c8a3be83501e8229e9f099e364f7b2b2368798fb4e967b4b)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r1.<java.security.KeyStore: void load(java.io.InputStream,char[])>(r46, $r9)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 12

	CogniCrypt found the following violations. For details see description above.
	NeverTypeOfError: 2
	RequiredPredicateError: 4
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 3.343 s

Current Proejct: elasticsearch-2.4.6.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 5.026 s 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 2 analysis seeds within 6 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 2
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <org.elasticsearch.common.hash.MessageDigests$1: java.security.MessageDigest initialValue()>
		SHA-256: 84b36b3a4b5b6e4e322f93a7d9a53ae984e30d1099c485d3dd2b6adf5395b999
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <org.elasticsearch.common.SecureRandomHolder: void <clinit>()>
		SHA-256: d91e9f84a91d9635f5aef8b9d10176715c5134c28a96dd8abd9cdc0844dc30c5
		Secure: true

Findings in Java Class: org.elasticsearch.common.hash.MessageDigests$1

	 in Method: java.lang.Object initialValue()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #84b36b3a4b5b6e4e322f93a7d9a53ae984e30d1099c485d3dd2b6adf5395b999)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: return $r1


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 2

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 1
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 17 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 35.97 s

Current Proejct: commons-io-2.5.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 551.0 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 2.494 s

Current Proejct: commons-httpclient.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 594.1 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 4 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 12
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.08

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 14
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.14

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 16
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.19

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.24

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.29

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.35

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.41

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.47

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.53

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.59

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.65

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.71

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.76

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 14 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.82

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 15 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.88

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 16 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.94

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: $r81
		Type: byte[]
		Statement: $r82 = virtualinvoke r9.<java.security.MessageDigest: byte[] digest(byte[])>($r81)
		Method: <org.apache.commons.httpclient.auth.DigestScheme: java.lang.String createDigest(java.lang.String,java.lang.String)>
		SHA-256: 4a48774724a93bb8c96ac89ca705513c0cf6f13c80b8038f90c534dfcc54fb00
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke r1.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <org.apache.commons.httpclient.auth.DigestScheme: java.lang.String createCnonce()>
		SHA-256: 49279efe36cfbce5e89fae4ce3d77da6f81597be6bc85837de7f6fd4708ab7a9
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r10, varReplacer2058)
		Method: <org.apache.commons.httpclient.auth.NTLM: javax.crypto.Cipher getCipher(byte[])>
		SHA-256: fbdf004ec925a9577e1135171f692e4b8850c9056f8f336a45f843edcb450a03
		Secure: false
	Object:
		Variable: $r82
		Type: byte[]
		Statement: $r82 = virtualinvoke r9.<java.security.MessageDigest: byte[] digest(byte[])>($r81)
		Method: <org.apache.commons.httpclient.auth.DigestScheme: java.lang.String createDigest(java.lang.String,java.lang.String)>
		SHA-256: 8f9350673163056cda0429edf7d63751211f26fbb94eecd5b1cb6efaaec44502
		Secure: false
	Object:
		Variable: r9
		Type: java.security.MessageDigest
		Statement: r9 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1972)
		Method: <org.apache.commons.httpclient.auth.DigestScheme: java.lang.String createDigest(java.lang.String,java.lang.String)>
		SHA-256: 8ec408f19bc91f3944503b1723b70ef06c372d0cd67a7eb04601f5ac3515276a
		Secure: false
	Object:
		Variable: $r24
		Type: byte[]
		Statement: $r24 = virtualinvoke r9.<java.security.MessageDigest: byte[] digest(byte[])>($r23)
		Method: <org.apache.commons.httpclient.auth.DigestScheme: java.lang.String createDigest(java.lang.String,java.lang.String)>
		SHA-256: c5eeb8a21720b699f7376c6811eebfd093311141142f58a123b9c0628707839d
		Secure: false
	Object:
		Variable: $r23
		Type: byte[]
		Statement: $r24 = virtualinvoke r9.<java.security.MessageDigest: byte[] digest(byte[])>($r23)
		Method: <org.apache.commons.httpclient.auth.DigestScheme: java.lang.String createDigest(java.lang.String,java.lang.String)>
		SHA-256: 9b83413faf38dbce757cbe4c9757d470b7f50d1e91128ae27dc90a82df87cb68
		Secure: false
	Object:
		Variable: r1
		Type: java.security.MessageDigest
		Statement: r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2005)
		Method: <org.apache.commons.httpclient.auth.DigestScheme: java.lang.String createCnonce()>
		SHA-256: 4a642ed7c171c9b41463723f663bc27ce57c67f4b447b0ca4e0a4b6fb596318a
		Secure: false
	Object:
		Variable: r8
		Type: byte[]
		Statement: r8 = virtualinvoke r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r2)
		Method: <org.apache.commons.httpclient.auth.NTLM: byte[] encrypt(byte[],byte[])>
		SHA-256: bd265b394300b77ddc92cf6ff5f22baaae91897ea8788637237fdecf7f2011a
		Secure: false
	Object:
		Variable: $r61
		Type: byte[]
		Statement: $r61 = virtualinvoke r9.<java.security.MessageDigest: byte[] digest(byte[])>($r60)
		Method: <org.apache.commons.httpclient.auth.DigestScheme: java.lang.String createDigest(java.lang.String,java.lang.String)>
		SHA-256: 10c7446279881755ff4ab5feff7d36b4f409bb645c9e8c4b793b99dd3e0b3feb
		Secure: false
	Object:
		Variable: varReplacer2058
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r10, varReplacer2058)
		Method: <org.apache.commons.httpclient.auth.NTLM: javax.crypto.Cipher getCipher(byte[])>
		SHA-256: e966798546c0e28783dfd502cea17ae79071490cec718d8c8d6a4b07007cf92c
		Secure: false
	Object:
		Variable: $r60
		Type: byte[]
		Statement: $r61 = virtualinvoke r9.<java.security.MessageDigest: byte[] digest(byte[])>($r60)
		Method: <org.apache.commons.httpclient.auth.DigestScheme: java.lang.String createDigest(java.lang.String,java.lang.String)>
		SHA-256: 51cdf56ca62447d324bbe8fdedccdfe3b1a85172ebfae73ebec48438bdc45e12
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r5 = virtualinvoke r1.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <org.apache.commons.httpclient.auth.DigestScheme: java.lang.String createCnonce()>
		SHA-256: ad2aad47d38e36e8e4b531880f371a5107b9c2e9e2fb8cba8ac7a2575abad356
		Secure: false
	Object:
		Variable: $r88
		Type: byte[]
		Statement: $r89 = virtualinvoke r9.<java.security.MessageDigest: byte[] digest(byte[])>($r88)
		Method: <org.apache.commons.httpclient.auth.DigestScheme: java.lang.String createDigest(java.lang.String,java.lang.String)>
		SHA-256: 1f21d079438d0806fa3384120d1a0dfc3605e198d8b6410c50c70865b97b4465
		Secure: false
	Object:
		Variable: r2
		Type: byte[]
		Statement: r8 = virtualinvoke r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r2)
		Method: <org.apache.commons.httpclient.auth.NTLM: byte[] encrypt(byte[],byte[])>
		SHA-256: d140285075be76cea6460350db3f3a6466a028470925b4aa96de138e4c7a9226
		Secure: false
	Object:
		Variable: r9
		Type: javax.crypto.Cipher
		Statement: r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2057)
		Method: <org.apache.commons.httpclient.auth.NTLM: javax.crypto.Cipher getCipher(byte[])>
		SHA-256: 2428a91187d162c7b6945efac723d02f35919d2a728d2d6d519a75eaba0dd45e
		Secure: false
	Object:
		Variable: $r89
		Type: byte[]
		Statement: $r89 = virtualinvoke r9.<java.security.MessageDigest: byte[] digest(byte[])>($r88)
		Method: <org.apache.commons.httpclient.auth.DigestScheme: java.lang.String createDigest(java.lang.String,java.lang.String)>
		SHA-256: ede6a96c8c1e9db7f2e49ed65bd17f243ee9be0f199eeaef4146837a3fdbf75f
		Secure: false

Findings in Java Class: org.apache.commons.httpclient.auth.DigestScheme

	 in Method: java.lang.String createDigest(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #8ec408f19bc91f3944503b1723b70ef06c372d0cd67a7eb04601f5ac3515276a)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r9 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1972)


	 in Method: java.lang.String createCnonce()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #4a642ed7c171c9b41463723f663bc27ce57c67f4b447b0ca4e0a4b6fb596318a)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2005)


Findings in Java Class: org.apache.commons.httpclient.auth.NTLM

	 in Method: javax.crypto.Cipher getCipher(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r10, varReplacer2058)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #2428a91187d162c7b6945efac723d02f35919d2a728d2d6d519a75eaba0dd45e)
			First parameter (with value "DES/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2057)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #fbdf004ec925a9577e1135171f692e4b8850c9056f8f336a45f843edcb450a03)
			Second parameter (with value "DES") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r10, varReplacer2058)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r9.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2055, $r1)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 17

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 2
	ConstraintError: 4
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 3.458 s

Current Proejct: jackson-databind-2.9.8.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 694.7 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 1 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 1 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 5.263 s

Current Proejct: maven-plugin-tools-api-3.3.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 425.7 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.101 s

Current Proejct: jackson-annotations-2.9.8.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 500.7 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.359 s

Current Proejct: cassandra-driver-mapping-3.3.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 531.4 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.547 s

Current Proejct: streams-plugin-pojo-0.6.1-SNAPSHOT.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 410.4 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.107 s

Current Proejct: hadoop-client-2.7.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 444.0 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.222 s

Current Proejct: maven-artifact-3.3.3.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 413.3 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.433 s

Current Proejct: httpcore.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 538.1 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.732 s

Current Proejct: aws-java-sdk-kinesis-1.11.184.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 556.8 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 3.986 s

Current Proejct: commons-validator-1.6.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 571.0 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 2.171 s

Current Proejct: netty-3.8.0.Final.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 670.2 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 4 analysis seeds within 1 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 6
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.17

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 7
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.29

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 9
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 10
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.4

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 10
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 10
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.6

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 10
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.7

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 10
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.8

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 10
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.9

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r7
		Type: java.security.MessageDigest
		Statement: r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2841)
		Method: <org.jboss.netty.handler.codec.http.websocketx.WebSocketUtil: org.jboss.netty.buffer.ChannelBuffer md5(org.jboss.netty.buffer.ChannelBuffer)>
		SHA-256: 74e6bd0d81a481c23bcacbae5747094f842d60535d6ab67e29e388c4b0bc5b93
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke r7.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.jboss.netty.handler.codec.http.websocketx.WebSocketUtil: org.jboss.netty.buffer.ChannelBuffer md5(org.jboss.netty.buffer.ChannelBuffer)>
		SHA-256: 9efd8123184ac3d3d31829741d3a58f465d8571c583b07f2f46d624dcdb4bcc2
		Secure: false
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r1 = virtualinvoke r4.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <org.jboss.netty.handler.codec.http.websocketx.WebSocketUtil: byte[] sha1(byte[])>
		SHA-256: 9e269227ee7f51cd46bb4209a0c2b9705dc9ce55a953ec29694d5aa2ceeb6422
		Secure: false
	Object:
		Variable: r4
		Type: java.security.MessageDigest
		Statement: r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2840)
		Method: <org.jboss.netty.handler.codec.http.websocketx.WebSocketUtil: byte[] md5(byte[])>
		SHA-256: c4ca4a97e25df71e205c6afa47c532ddf6d4b4d2b3b26d8a67557b416dfb91d6
		Secure: false
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r1 = virtualinvoke r4.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <org.jboss.netty.handler.codec.http.websocketx.WebSocketUtil: byte[] md5(byte[])>
		SHA-256: 9b720ab872dea7a4d9671781414089a8d1e6abee0a38511af8101234075ecfc1
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke r4.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <org.jboss.netty.handler.codec.http.websocketx.WebSocketUtil: byte[] sha1(byte[])>
		SHA-256: e23c82b3a3d3fc9e084d1bad2786d3bc5de206cb3ee7ba9a818d564c3069896e
		Secure: false
	Object:
		Variable: r7
		Type: java.security.MessageDigest
		Statement: r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2845)
		Method: <org.jboss.netty.handler.codec.http.websocketx.WebSocketUtil: org.jboss.netty.buffer.ChannelBuffer sha1(org.jboss.netty.buffer.ChannelBuffer)>
		SHA-256: af13c03b5391aab1d22b506963455d3ff73279966edc9ba93ce5a06f117ae409
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke r4.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <org.jboss.netty.handler.codec.http.websocketx.WebSocketUtil: byte[] md5(byte[])>
		SHA-256: a078fc31170b70d47c901d2d38663766a5bac64f14bddd71a651c66eb6269676
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke r7.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.jboss.netty.handler.codec.http.websocketx.WebSocketUtil: org.jboss.netty.buffer.ChannelBuffer sha1(org.jboss.netty.buffer.ChannelBuffer)>
		SHA-256: 9ea1c40af166160b6e3665e99c660ca2cdb0e0a3172d057a894751e0895bd638
		Secure: false
	Object:
		Variable: r4
		Type: java.security.MessageDigest
		Statement: r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2843)
		Method: <org.jboss.netty.handler.codec.http.websocketx.WebSocketUtil: byte[] sha1(byte[])>
		SHA-256: 30ca6c92bbcbbffe22c24f63f072440f55170d9d5283bb05d560256020124271
		Secure: false

Findings in Java Class: org.jboss.netty.handler.codec.http.websocketx.WebSocketUtil

	 in Method: byte[] md5(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #c4ca4a97e25df71e205c6afa47c532ddf6d4b4d2b3b26d8a67557b416dfb91d6)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2840)


	 in Method: org.jboss.netty.buffer.ChannelBuffer md5(org.jboss.netty.buffer.ChannelBuffer)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #74e6bd0d81a481c23bcacbae5747094f842d60535d6ab67e29e388c4b0bc5b93)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2841)


	 in Method: byte[] sha1(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #30ca6c92bbcbbffe22c24f63f072440f55170d9d5283bb05d560256020124271)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2843)


	 in Method: org.jboss.netty.buffer.ChannelBuffer sha1(org.jboss.netty.buffer.ChannelBuffer)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #af13c03b5391aab1d22b506963455d3ff73279966edc9ba93ce5a06f117ae409)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2845)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 10

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 4
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 1 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 5.168 s

Current Proejct: commons-lang3-3.6.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 672.1 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 3.672 s

Current Proejct: powermock-api-mockito-1.7.1.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 551.5 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.402 s

Current Proejct: lucene-codecs-5.5.4.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 463.8 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 2.923 s

Current Proejct: mongo-java-driver-3.5.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 811.7 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 14 analysis seeds within 1 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 14
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.07

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 14
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.14

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 15
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.2

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 15
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.27

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.29

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 18
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 19
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.37

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 21
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.38

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 22
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.41

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 22
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.45

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.48

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.52

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.57

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 14 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.61

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 15 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.65

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 16 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.7

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 17 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.74

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 18 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.78

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 19 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.83

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 20 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.87

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 21 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.91

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 22 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.96

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: $r5
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, r2, i0, varReplacer2453)
		Method: <com.mongodb.connection.ScramSha1Authenticator$ScramSha1SaslClient: byte[] hi(java.lang.String,byte[],int)>
		SHA-256: 4fc7d5efc2f7d3d1d28edc52894445d573ee1e57aa4bf7a35d22ffe257e9e5e2
		Secure: false
	Object:
		Variable: r4
		Type: javax.crypto.Mac
		Statement: r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer2457)
		Method: <com.mongodb.connection.ScramSha1Authenticator$ScramSha1SaslClient: byte[] hmac(byte[],java.lang.String)>
		SHA-256: c0738bbabff5b742c087f78e8f5117514007bd9faa8072bb7c25cb61f0e8cedc
		Secure: true
	Object:
		Variable: varReplacer2456
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer2456)
		Method: <com.mongodb.connection.ScramSha1Authenticator$ScramSha1SaslClient: byte[] hmac(byte[],java.lang.String)>
		SHA-256: b5fa8c95acf772ff7dc432ac69fa32574828948b4c38da52fa489c41af4a3a4d
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2451)
		Method: <com.mongodb.connection.ScramSha1Authenticator$ScramSha1SaslClient: byte[] h(byte[])>
		SHA-256: cd334cd558af5fa3f87422fd4a8da8b577332609a864309f0d168ee16c10e550
		Secure: false
	Object:
		Variable: r59
		Type: java.security.MessageDigest
		Statement: r59 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10)
		Method: <com.mongodb.gridfs.CLI: void main(java.lang.String[])>
		SHA-256: 20e94d202f64b194d3e3e5c7745b211bb46f8532e225a21a5f2ec20ed2761e8e
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.bson.types.ObjectId: void <clinit>()>
		SHA-256: 99eb94eecac36541583dd850926cad75d030e84ec51d1770a56cbd9de0468b63
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer2456)
		Method: <com.mongodb.connection.ScramSha1Authenticator$ScramSha1SaslClient: byte[] hmac(byte[],java.lang.String)>
		SHA-256: 7cd4ea93111dde2926b66a78d50f7202582f3902735fdae260a9c1d872d2edf7
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: specialinvoke $r5.<java.security.SecureRandom: void <init>()>()
		Method: <org.bson.types.ObjectId: short createProcessIdentifier()>
		SHA-256: 6ce7ed2bd5adb4bb038437abe8670d4db664e8fe5956bd95a769ad2edbe8a002
		Secure: true
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke r4.<javax.crypto.Mac: byte[] doFinal(byte[])>($r6)
		Method: <com.mongodb.connection.ScramSha1Authenticator$ScramSha1SaslClient: byte[] hmac(byte[],java.lang.String)>
		SHA-256: f78828cd009c98247a256529a9d223f69bd5dfde5b85a3de9a673836150ba0e6
		Secure: true
	Object:
		Variable: $r16
		Type: java.security.MessageDigest
		Statement: $r16 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer375)
		Method: <com.mongodb.client.gridfs.GridFSUploadStreamImpl: void <init>(com.mongodb.client.MongoCollection,com.mongodb.client.MongoCollection,org.bson.BsonValue,java.lang.String,int,org.bson.Document)>
		SHA-256: 64b7ee91163c94f551ed809affafe47c474a717c90966cb5d3aa5c4ec71dcf7e
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.SecretKey
		Statement: $r7 = virtualinvoke r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r3)
		Method: <com.mongodb.connection.ScramSha1Authenticator$ScramSha1SaslClient: byte[] hi(java.lang.String,byte[],int)>
		SHA-256: 4d42b14896c0931f7a9f456e31470b874487a422a030b1e77dc6b17d03814cb9
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r7 = virtualinvoke r4.<javax.crypto.Mac: byte[] doFinal(byte[])>($r6)
		Method: <com.mongodb.connection.ScramSha1Authenticator$ScramSha1SaslClient: byte[] hmac(byte[],java.lang.String)>
		SHA-256: dea7cee226e2e5d8466316defa19c405200f0507a77d9f149b13789ddbe61367
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>(r1)
		Method: <com.mongodb.connection.ScramSha1Authenticator$ScramSha1SaslClient: byte[] h(byte[])>
		SHA-256: 31ee1480fe1f004f96090e9592bc1987e6250d07d690fd5a4285894d97560e4f
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.DigestInputStream
		Statement: specialinvoke $r9.<java.security.DigestInputStream: void <init>(java.io.InputStream,java.security.MessageDigest)>($r10, r59)
		Method: <com.mongodb.gridfs.CLI: void main(java.lang.String[])>
		SHA-256: ace0ce6225d6328fe3e64ea6057e74d1ff79859f4f1a26196998294a4a4dfbea
		Secure: true
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mongodb.client.gridfs.GridFSUploadStreamImpl: void close()>
		SHA-256: 685ff837ec078a4ec7df9907100aba1091b7920850701e96ce57909294252335
		Secure: false
	Object:
		Variable: varReplacer2453
		Type: int
		Statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, r2, i0, varReplacer2453)
		Method: <com.mongodb.connection.ScramSha1Authenticator$ScramSha1SaslClient: byte[] hi(java.lang.String,byte[],int)>
		SHA-256: c19417466838e1f1e1b53d0106b58c747f18968b0707a19c7cbeb7b67e5558a7
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <com.mongodb.connection.ScramSha1Authenticator$DefaultRandomStringGenerator: java.lang.String generate(int)>
		SHA-256: 3c9f917efee28098c5f8afd3f740ed72246134663b84fb5e0c8903362b4e7f0f
		Secure: true
	Object:
		Variable: r5
		Type: java.security.MessageDigest
		Statement: r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3842)
		Method: <com.mongodb.internal.HexUtils: java.lang.String hexMD5(byte[])>
		SHA-256: fd687d779442969b31b931bec77779d2e5a6227cfb60d9d2d56984aa34eff60b
		Secure: false
	Object:
		Variable: $r14
		Type: java.security.SecureRandom
		Statement: specialinvoke $r14.<java.security.SecureRandom: void <init>()>()
		Method: <org.bson.types.ObjectId: int createMachineIdentifier()>
		SHA-256: a00d65631f0d440d724b7003eb514ed02f7c5843deb9719efa4840488a31d883
		Secure: true
	Object:
		Variable: r1
		Type: byte[]
		Statement: r1 = virtualinvoke r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mongodb.internal.HexUtils: java.lang.String hexMD5(byte[])>
		SHA-256: b3364508dc9860b87494328c8b0412f27a11992c5b51748bdb5748d897807497
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.MessageDigest
		Statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3693)
		Method: <com.mongodb.gridfs.GridFSInputFile: void <init>(com.mongodb.gridfs.GridFS,java.io.InputStream,java.lang.String,boolean)>
		SHA-256: fe663374535b6fa40e92588e279c2427957b08d00f4239b3c7dc5feba0432a80
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>(r1)
		Method: <com.mongodb.connection.ScramSha1Authenticator$ScramSha1SaslClient: byte[] h(byte[])>
		SHA-256: 42e3ebebfc5841b3be8dbb8b08e863aaaa19d2c7eb39bd295eed4b7218dc2ca5
		Secure: false
	Object:
		Variable: r4
		Type: javax.crypto.SecretKeyFactory
		Statement: r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer2454)
		Method: <com.mongodb.connection.ScramSha1Authenticator$ScramSha1SaslClient: byte[] hi(java.lang.String,byte[],int)>
		SHA-256: 47187f5c121dfe7c42c88c30f54c579b3299344e242933bff897b297b518eed7
		Secure: false

Findings in Java Class: com.mongodb.connection.netty.NettyStream

	 in Method: javax.net.ssl.SSLContext getSslContext()
		ForbiddenMethodError violating CrySL rule for javax.net.ssl.SSLContext
			Detected call to forbidden method javax.net.ssl.SSLContext getDefault() of class javax.net.ssl.SSLContext. Instead, call method <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>.
			at statement: $r7 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getDefault()>()


Findings in Java Class: com.mongodb.connection.SocketStreamFactory

	 in Method: javax.net.ssl.SSLContext getSslContext()
		ForbiddenMethodError violating CrySL rule for javax.net.ssl.SSLContext
			Detected call to forbidden method javax.net.ssl.SSLContext getDefault() of class javax.net.ssl.SSLContext. Instead, call method <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>.
			at statement: $r7 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getDefault()>()


Findings in Java Class: com.mongodb.gridfs.CLI

	 in Method: void main(java.lang.String[])
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #20e94d202f64b194d3e3e5c7745b211bb46f8532e225a21a5f2ec20ed2761e8e)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: r60 = virtualinvoke r59.<java.security.MessageDigest: byte[] digest()>()

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #20e94d202f64b194d3e3e5c7745b211bb46f8532e225a21a5f2ec20ed2761e8e)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r59 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10)


Findings in Java Class: com.mongodb.client.gridfs.GridFSUploadStreamImpl

	 in Method: void <init>(com.mongodb.client.MongoCollection,com.mongodb.client.MongoCollection,org.bson.BsonValue,java.lang.String,int,org.bson.Document)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #64b7ee91163c94f551ed809affafe47c474a717c90966cb5d3aa5c4ec71dcf7e)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r16 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer375)


	 in Method: void close()
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #64b7ee91163c94f551ed809affafe47c474a717c90966cb5d3aa5c4ec71dcf7e)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r8 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest()>()


	 in Method: void write(byte[],int,int)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #64b7ee91163c94f551ed809affafe47c474a717c90966cb5d3aa5c4ec71dcf7e)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke r0.<com.mongodb.client.gridfs.GridFSUploadStreamImpl: void checkClosed()>()


Findings in Java Class: com.mongodb.client.gridfs.GridFSBucketImpl

	 in Method: void uploadFromStream(org.bson.BsonValue,java.lang.String,java.io.InputStream,com.mongodb.client.gridfs.model.GridFSUploadOptions)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #64b7ee91163c94f551ed809affafe47c474a717c90966cb5d3aa5c4ec71dcf7e)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: virtualinvoke r5.<com.mongodb.client.gridfs.GridFSUploadStream: void close()>()


	 in Method: com.mongodb.client.gridfs.GridFSUploadStream openUploadStream(java.lang.String,com.mongodb.client.gridfs.model.GridFSUploadOptions)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #64b7ee91163c94f551ed809affafe47c474a717c90966cb5d3aa5c4ec71dcf7e)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: return $r4


	 in Method: com.mongodb.client.gridfs.GridFSUploadStream openUploadStream(java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #64b7ee91163c94f551ed809affafe47c474a717c90966cb5d3aa5c4ec71dcf7e)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: return $r3


Findings in Java Class: com.mongodb.connection.ScramSha1Authenticator$ScramSha1SaslClient

	 in Method: byte[] h(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #cd334cd558af5fa3f87422fd4a8da8b577332609a864309f0d168ee16c10e550)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2451)


	 in Method: byte[] hi(java.lang.String,byte[],int)
		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #47187f5c121dfe7c42c88c30f54c579b3299344e242933bff897b297b518eed7)
			First parameter (with value "PBKDF2WithHmacSHA1") should be any of {PBKDF2WithHmacSHA512, PBKDF2WithHmacSHA384, PBKDF2WithHmacSHA256, PBKDF2WithHmacSHA224, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer2454)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #4fc7d5efc2f7d3d1d28edc52894445d573ee1e57aa4bf7a35d22ffe257e9e5e2)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r7 = virtualinvoke r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: $r7 = virtualinvoke r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, r2, i0, varReplacer2453)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #4fc7d5efc2f7d3d1d28edc52894445d573ee1e57aa4bf7a35d22ffe257e9e5e2)
			Third parameter (with value 0)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, r2, i0, varReplacer2453)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #4fc7d5efc2f7d3d1d28edc52894445d573ee1e57aa4bf7a35d22ffe257e9e5e2)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r6, r2, i0, varReplacer2453)


	 in Method: byte[] hmac(byte[],java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer2456)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #7cd4ea93111dde2926b66a78d50f7202582f3902735fdae260a9c1d872d2edf7)
			Second parameter (with value "HmacSHA1") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer2456)


Findings in Java Class: com.mongodb.gridfs.GridFSInputFile

	 in Method: void <init>(com.mongodb.gridfs.GridFS,java.io.InputStream,java.lang.String,boolean)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #fe663374535b6fa40e92588e279c2427957b08d00f4239b3c7dc5feba0432a80)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3693)


Findings in Java Class: com.mongodb.gridfs.GridFS

	 in Method: com.mongodb.gridfs.GridFSInputFile createFile()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #fe663374535b6fa40e92588e279c2427957b08d00f4239b3c7dc5feba0432a80)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: return $r1


	 in Method: com.mongodb.gridfs.GridFSInputFile createFile(java.io.InputStream)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #fe663374535b6fa40e92588e279c2427957b08d00f4239b3c7dc5feba0432a80)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: return $r2


	 in Method: com.mongodb.gridfs.GridFSInputFile createFile(java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #fe663374535b6fa40e92588e279c2427957b08d00f4239b3c7dc5feba0432a80)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: return $r2


	 in Method: com.mongodb.gridfs.GridFSInputFile createFile(byte[])
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #fe663374535b6fa40e92588e279c2427957b08d00f4239b3c7dc5feba0432a80)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: return $r3


Findings in Java Class: com.mongodb.internal.HexUtils

	 in Method: java.lang.String hexMD5(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #fd687d779442969b31b931bec77779d2e5a6227cfb60d9d2d56984aa34eff60b)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3842)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 23

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 8
	NeverTypeOfError: 1
	TypestateError: 2
	ForbiddenMethodError: 2
	RequiredPredicateError: 3
	IncompleteOperationError: 9
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 2 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 7.363 s

Current Proejct: jcl-over-slf4j-1.7.25.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 403.1 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.142 s

Current Proejct: org.testng-6.9.10.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 623.5 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 4.005 s

Current Proejct: freemarker-2.3.28.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 1.004 s 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 3 analysis seeds within 1 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 4
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.25

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 5
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.4

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 5
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.6

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 5
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.8

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r5
		Type: java.security.MessageDigest
		Statement: r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6218)
		Method: <freemarker.debug.DebuggerClient: freemarker.debug.Debugger getDebugger(java.net.InetAddress,int,java.lang.String)>
		SHA-256: 9913b5740e25d9e50086cf11a8513a0761a09b5ea5a577b1592accbc5a3ab684
		Secure: false
	Object:
		Variable: r3
		Type: java.security.MessageDigest
		Statement: r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6224)
		Method: <freemarker.debug.impl.DebuggerServer$DebuggerAuthProtocol: void run()>
		SHA-256: 28f3e628b3092e0e5f6b1e5331660a226318ba05def2d5bca72f85715f53f95c
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <freemarker.debug.impl.DebuggerServer: void <clinit>()>
		SHA-256: 99e9f61513670856546af8dc411292b93cd42252fef81d06ed6616d5e45e279a
		Secure: true
	Object:
		Variable: $r16
		Type: byte[]
		Statement: $r16 = virtualinvoke r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <freemarker.debug.DebuggerClient: freemarker.debug.Debugger getDebugger(java.net.InetAddress,int,java.lang.String)>
		SHA-256: 3c48ad5ab9feb9c08b178680e379e8e5887cd98a88a9b2598d432aea84462aa8
		Secure: false
	Object:
		Variable: $r16
		Type: byte[]
		Statement: $r16 = virtualinvoke r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <freemarker.debug.impl.DebuggerServer$DebuggerAuthProtocol: void run()>
		SHA-256: 547889ec93a353efcfca8957a361f85e2f91909db8e35cc0c4c5d6a5c49cd8d1
		Secure: false

Findings in Java Class: freemarker.debug.DebuggerClient

	 in Method: freemarker.debug.Debugger getDebugger(java.net.InetAddress,int,java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #9913b5740e25d9e50086cf11a8513a0761a09b5ea5a577b1592accbc5a3ab684)
			First parameter (with value "SHA") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6218)


Findings in Java Class: freemarker.debug.impl.DebuggerServer$DebuggerAuthProtocol

	 in Method: void run()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #28f3e628b3092e0e5f6b1e5331660a226318ba05def2d5bca72f85715f53f95c)
			First parameter (with value "SHA") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6224)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 5

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 2
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 11 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 16.47 s

Current Proejct: commons-io.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 508.4 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.977 s

Current Proejct: maven-plugin-testing-harness-3.3.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 436.9 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.318 s

Current Proejct: jackson-core-2.9.8.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 451.4 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 2.686 s

Current Proejct: google-api-client-1.23.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 453.9 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.879 s

Current Proejct: testng-6.11.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 609.6 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 3.828 s

Current Proejct: riak-client-2.1.1.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 1.352 s 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 3 analysis seeds within 2 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 5
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.2

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 6
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 7
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.43

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 7
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.57

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 7
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.71

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 7
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.86

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: $r33
		Type: javax.net.ssl.TrustManager[]
		Statement: $r33 = virtualinvoke r50.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <com.basho.riak.client.core.RiakNode: void setupTLSAndAuthenticate(io.netty.channel.Channel)>
		SHA-256: a798ef8218ee9568586fa4a41a4f692e4d6ae73e60b3c58f199a815a118a25e9
		Secure: false
	Object:
		Variable: r51
		Type: javax.net.ssl.KeyManagerFactory
		Statement: r51 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r28)
		Method: <com.basho.riak.client.core.RiakNode: void setupTLSAndAuthenticate(io.netty.channel.Channel)>
		SHA-256: 9af0022fb188e288ecb9c1f868a24a6bae52fb66d6603cdee65aee556f7ec59c
		Secure: false
	Object:
		Variable: r2
		Type: javax.net.ssl.SSLContext
		Statement: r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1543)
		Method: <com.basho.riak.client.core.RiakNode: void setupTLSAndAuthenticate(io.netty.channel.Channel)>
		SHA-256: 8e4acd192c4935807968f883cc3ce87ae3c3fe0006c395c29bfe94aacaec5456
		Secure: false
	Object:
		Variable: $r7
		Type: javax.net.ssl.TrustManager[]
		Statement: $r7 = virtualinvoke r50.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <com.basho.riak.client.core.RiakNode: void setupTLSAndAuthenticate(io.netty.channel.Channel)>
		SHA-256: 8c62ae07c34a0dd3c676f4acecbdb7aa4977a99f1bca6c74101a5fbf847b717
		Secure: false
	Object:
		Variable: r50
		Type: javax.net.ssl.TrustManagerFactory
		Statement: r50 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r4)
		Method: <com.basho.riak.client.core.RiakNode: void setupTLSAndAuthenticate(io.netty.channel.Channel)>
		SHA-256: 59622cf535802d90da862d1bbd4d6dda1ea3a2c5aa85589445c42650da7f123c
		Secure: false
	Object:
		Variable: r54
		Type: javax.net.ssl.SSLEngine
		Statement: r54 = virtualinvoke r2.<javax.net.ssl.SSLContext: javax.net.ssl.SSLEngine createSSLEngine()>()
		Method: <com.basho.riak.client.core.RiakNode: void setupTLSAndAuthenticate(io.netty.channel.Channel)>
		SHA-256: 1c31411645be669df0fc18f2a7f176bf856758346e22b628861d634a111d4fc8
		Secure: false
	Object:
		Variable: $r32
		Type: javax.net.ssl.KeyManager[]
		Statement: $r32 = virtualinvoke r51.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <com.basho.riak.client.core.RiakNode: void setupTLSAndAuthenticate(io.netty.channel.Channel)>
		SHA-256: fe3878545fcb7f404ae4f4c2c8bc7b4c558287ba93028e9eebbe769a59ab1470
		Secure: false

Findings in Java Class: com.basho.riak.client.core.RiakNode

	 in Method: void setupTLSAndAuthenticate(io.netty.channel.Channel)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r32, $r33, varReplacer1530)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #8e4acd192c4935807968f883cc3ce87ae3c3fe0006c395c29bfe94aacaec5456)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1543)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1535, $r7, varReplacer1535)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #9af0022fb188e288ecb9c1f868a24a6bae52fb66d6603cdee65aee556f7ec59c)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r51.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r31, $r52)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #9af0022fb188e288ecb9c1f868a24a6bae52fb66d6603cdee65aee556f7ec59c)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r51.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r31, $r52)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r50.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r5)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r51.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r31, $r52)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 7

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 4
	ConstraintError: 1
	NeverTypeOfError: 2
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 3 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 9.867 s

Current Proejct: maven-plugin-api-3.3.3.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 417.9 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.282 s

Current Proejct: zookeeper-3.4.5.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 603.1 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 1 analysis seeds within 1 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 3
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 3
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r2
		Type: byte[]
		Statement: r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <org.apache.zookeeper.server.auth.DigestAuthenticationProvider: java.lang.String generateDigest(java.lang.String)>
		SHA-256: 439159b0f8606c5cfaa38b5ee2ae24b38549247c191a9456c70811a7f7e17948
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <org.apache.zookeeper.server.auth.DigestAuthenticationProvider: java.lang.String generateDigest(java.lang.String)>
		SHA-256: fe5432a77924b3454c03bd970ab1e1503028a3d5ce7e83ce22e3607e843e2dfc
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4991)
		Method: <org.apache.zookeeper.server.auth.DigestAuthenticationProvider: java.lang.String generateDigest(java.lang.String)>
		SHA-256: 7456268813ee38d60224b633f5cccbe59bc24e375d47812c9aa0b924d51f7bd2
		Secure: false

Findings in Java Class: org.apache.zookeeper.server.auth.DigestAuthenticationProvider

	 in Method: java.lang.String generateDigest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #7456268813ee38d60224b633f5cccbe59bc24e375d47812c9aa0b924d51f7bd2)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4991)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 3

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 1
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 1 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 4.914 s

Current Proejct: commons-codec-1.10.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 418.2 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 3 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 24
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.04

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 39
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.05

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.08

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.1

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.13

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.15

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.18

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.2

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.23

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.25

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.28

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.3

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 14 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.35

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 15 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.38

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 16 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.4

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 17 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.43

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 18 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.45

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 19 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.48

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 20 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 21 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.53

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 22 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.55

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 23 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.58

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 24 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.6

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 25 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.63

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 26 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.65

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 27 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.68

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 28 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.7

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 29 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.73

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 30 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.75

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 31 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.78

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 32 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.8

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 33 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.83

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 34 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.85

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 35 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.88

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 36 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.9

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 37 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.93

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 38 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.95

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 39 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.98

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <org.apache.commons.codec.digest.DigestUtils: byte[] sha384(byte[])>
		SHA-256: 555b15450d9b9f67d610fe51c522ea556aaee17c2739338b62ea6b59a4271f76
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <org.apache.commons.codec.digest.DigestUtils: byte[] md5(byte[])>
		SHA-256: 4a4dd18e6187b325d9cb47c1cd7cc8489f28760532723e1ba285d1f23b4d1c9d
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.commons.codec.digest.DigestUtils: byte[] digest(java.security.MessageDigest,java.io.InputStream)>
		SHA-256: 6a74c7a23efe31554dd0f6d4a4f9c4af9b76b2cc2cf92458311947525aea785e
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, r0)
		Method: <org.apache.commons.codec.digest.HmacUtils: javax.crypto.Mac getInitializedMac(java.lang.String,byte[])>
		SHA-256: 394b58790fe148394c6e87c0c4093b433591b9dd9826146ceb21a032f1849200
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <org.apache.commons.codec.digest.DigestUtils: byte[] sha256(byte[])>
		SHA-256: b4669333235e4348b59a5cb6c6e53c9916a201b1217ee843fe05ae9a67a0316d
		Secure: false
	Object:
		Variable: r28
		Type: byte[]
		Statement: r28 = virtualinvoke r25.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.commons.codec.digest.Sha2Crypt: java.lang.String sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)>
		SHA-256: 71b129715a0e6159512027414bdc73e9ec2396d3d3255bd9a2a6c56d89315ce6
		Secure: false
	Object:
		Variable: r2
		Type: javax.crypto.Mac
		Statement: r2 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(r0)
		Method: <org.apache.commons.codec.digest.HmacUtils: javax.crypto.Mac getInitializedMac(java.lang.String,byte[])>
		SHA-256: 121a39d0408e38af7cd24010b0a2fab8d7f314e62b238e0df4a62a414507db2a
		Secure: true
	Object:
		Variable: r28
		Type: byte[]
		Statement: r28 = virtualinvoke r25.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.commons.codec.digest.Sha2Crypt: java.lang.String sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)>
		SHA-256: 71b129715a0e6159512027414bdc73e9ec2396d3d3255bd9a2a6c56d89315ce6
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>(r1)
		Method: <org.apache.commons.codec.digest.HmacUtils: byte[] hmacSha384(byte[],byte[])>
		SHA-256: af3559619d07115c81619a44b28b76984932083d6cc39c7e122601dddf9605f5
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>(r1)
		Method: <org.apache.commons.codec.digest.HmacUtils: byte[] hmacSha512(byte[],byte[])>
		SHA-256: 90c76d8344e83c4ca04b2f510e850b65a054a2dd82d219f6408194e046443202
		Secure: true
	Object:
		Variable: r32
		Type: byte[]
		Statement: r32 = virtualinvoke r31.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.commons.codec.digest.Sha2Crypt: java.lang.String sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)>
		SHA-256: afa001f9f58bedd7a7e2d2e9d8232d222ffb8828ba5d8bb60adb7fcca2b063a5
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal()>()
		Method: <org.apache.commons.codec.digest.HmacUtils: byte[] hmacSha384(byte[],java.io.InputStream)>
		SHA-256: 55a2ae20604a653cdaa0073856c9b5b8ee5cf0cfbf413e39efb88e1ba1ea56c3
		Secure: true
	Object:
		Variable: r30
		Type: byte[]
		Statement: r30 = virtualinvoke r29.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.commons.codec.digest.Sha2Crypt: java.lang.String sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)>
		SHA-256: 8e88449544b9f7e414adbe2f34a17243ec3612919023a8a0bd098e3a201ba472
		Secure: false
	Object:
		Variable: r27
		Type: byte[]
		Statement: r27 = virtualinvoke r26.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.commons.codec.digest.Sha2Crypt: java.lang.String sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)>
		SHA-256: 5fb42a87fe423bb69f0ebf7816322b0439faff1c3dfaaf5b78d8370148b37d3e
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <org.apache.commons.codec.digest.DigestUtils: byte[] sha384(byte[])>
		SHA-256: e74450188f985523d9855f9d90cbc6d2b99a9d05a356a38652cd742d9b74088c
		Secure: false
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <org.apache.commons.codec.digest.DigestUtils: byte[] sha256(byte[])>
		SHA-256: c5437c9ce65f8e48f3a76c6e35eb7d6d07b1025940f526110b27d239aaff1e3
		Secure: false
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <org.apache.commons.codec.digest.DigestUtils: byte[] md5(byte[])>
		SHA-256: a4b7e841fc462f8d73a506e9805cd4d1408ef7266e8613db710f40ddac41b158
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>(r1)
		Method: <org.apache.commons.codec.digest.HmacUtils: byte[] hmacSha256(byte[],byte[])>
		SHA-256: 77f79fa467f5ce9d3f93e7eddb1ef4e043b42c5633e388795f50224f9f032d47
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal()>()
		Method: <org.apache.commons.codec.digest.HmacUtils: byte[] hmacSha256(byte[],java.io.InputStream)>
		SHA-256: 53e79c31cee5a667e65b708db095755e4030751890234b9b5ab15ebaadda0f02
		Secure: true
	Object:
		Variable: r1
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>(r1)
		Method: <org.apache.commons.codec.digest.HmacUtils: byte[] hmacSha1(byte[],byte[])>
		SHA-256: 57275a6a0540fc96e2e84ac02a5c1ee9fa287e1d1e1b154c06040ea15a44ef31
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <org.apache.commons.codec.digest.DigestUtils: byte[] sha512(byte[])>
		SHA-256: 793b536133ee27f28c84471a4b0c835449549b607ab02fb866e83514cfa002c9
		Secure: false
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <org.apache.commons.codec.digest.DigestUtils: byte[] md2(byte[])>
		SHA-256: e2e03ceec4484eab16cfd224ed100d41ce0c24ed3b496bf77a6483a221e878c3
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <org.apache.commons.codec.digest.DigestUtils: byte[] sha1(byte[])>
		SHA-256: 83395eaa9342ece4b24da66768537fe97d75438d6493ad67319a3999d1d4058e
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal()>()
		Method: <org.apache.commons.codec.digest.HmacUtils: byte[] hmacMd5(byte[],java.io.InputStream)>
		SHA-256: 6d924b19cfdc7ab538c35fce21d5d0fde82c1a27741a57649406a95c37779671
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>(r1)
		Method: <org.apache.commons.codec.digest.HmacUtils: byte[] hmacSha1(byte[],byte[])>
		SHA-256: 3448e19381e93103b447fb7e6713e366df7ec5eccfd7c62c0ad931849f85c71c
		Secure: true
	Object:
		Variable: r0
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, r0)
		Method: <org.apache.commons.codec.digest.HmacUtils: javax.crypto.Mac getInitializedMac(java.lang.String,byte[])>
		SHA-256: 673f432608ebebbfde686808e1976348928f13d4604f0040fce1eb16dc2523d2
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>(r1)
		Method: <org.apache.commons.codec.digest.HmacUtils: byte[] hmacSha256(byte[],byte[])>
		SHA-256: 5bd14b19dd834d63b7b1aa586494bf84972917899611497805d2090d9c220ce8
		Secure: true
	Object:
		Variable: r34
		Type: byte[]
		Statement: r34 = virtualinvoke r31.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.commons.codec.digest.Md5Crypt: java.lang.String md5Crypt(byte[],java.lang.String,java.lang.String)>
		SHA-256: 2f1171658a2a32c35554e48fdd03e563875d21b9c40c562b7023d295495b4bf
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal()>()
		Method: <org.apache.commons.codec.digest.HmacUtils: byte[] hmacSha512(byte[],java.io.InputStream)>
		SHA-256: 7348a7a1ac549775fe686c773b53a362902032ed8ee0e1ecee5d3cfe13d3b7ed
		Secure: true
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <org.apache.commons.codec.digest.DigestUtils: byte[] sha1(byte[])>
		SHA-256: 92d0c06680bcfabefd3968d3ed6d4813b895a475fa281863c8d26fbf3945ebe6
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r0)
		Method: <org.apache.commons.codec.digest.DigestUtils: java.security.MessageDigest getDigest(java.lang.String)>
		SHA-256: e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337
		Secure: false
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <org.apache.commons.codec.digest.DigestUtils: byte[] sha512(byte[])>
		SHA-256: 9f4c297e8b55ca8f8e840c8184d8d43a9e8cf6178bd74e24161706b73442496f
		Secure: false
	Object:
		Variable: r34
		Type: byte[]
		Statement: r34 = virtualinvoke r32.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.commons.codec.digest.Md5Crypt: java.lang.String md5Crypt(byte[],java.lang.String,java.lang.String)>
		SHA-256: 7fc927c52220e9c87c89ed43cb6a1010d2763202f829b2f00d00ee87dd45d3ce
		Secure: false
	Object:
		Variable: r33
		Type: byte[]
		Statement: r33 = virtualinvoke r32.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.commons.codec.digest.Md5Crypt: java.lang.String md5Crypt(byte[],java.lang.String,java.lang.String)>
		SHA-256: 6f2f24959121bd7da6c4ff2497b1fcc5b652b469c3a5264ea5fdc076954e6970
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>(r1)
		Method: <org.apache.commons.codec.digest.HmacUtils: byte[] hmacMd5(byte[],byte[])>
		SHA-256: d8daa1374f9a4a20fb54eadfddcc36a2ca0d02f12e3dab6300ca12f883d96c75
		Secure: true
	Object:
		Variable: r1
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>(r1)
		Method: <org.apache.commons.codec.digest.HmacUtils: byte[] hmacSha512(byte[],byte[])>
		SHA-256: 7d736474531fe90f5cee75172bfead9377e70e78bfa250c3d93d7a3649833266
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <org.apache.commons.codec.digest.DigestUtils: byte[] md2(byte[])>
		SHA-256: f2a8d60e4721bd2ba7a581814edc7b0074c941b7bb2512272883a92071e85225
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal()>()
		Method: <org.apache.commons.codec.digest.HmacUtils: byte[] hmacSha1(byte[],java.io.InputStream)>
		SHA-256: 64b38dfba6e4b727b70a43f1eaaaad641835edf8077607e7219bc2121d1fbc1
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>(r1)
		Method: <org.apache.commons.codec.digest.HmacUtils: byte[] hmacSha384(byte[],byte[])>
		SHA-256: 21c17370bbced8abcb755b55e1d0dd891d91e2dd97313e878a00ac848586fdc6
		Secure: true
	Object:
		Variable: r1
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>(r1)
		Method: <org.apache.commons.codec.digest.HmacUtils: byte[] hmacMd5(byte[],byte[])>
		SHA-256: 7e8cadffdf04dead760972935b0e5ffc7e13126e3d1239b198bbdf104a1cf910
		Secure: true

Findings in Java Class: org.apache.commons.codec.digest.DigestUtils

	 in Method: java.security.MessageDigest getDigest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			First parameter (with value "MD2") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r0)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r0)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r0)


	 in Method: byte[] digest(java.security.MessageDigest,java.io.InputStream)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()


	 in Method: java.security.MessageDigest getShaDigest()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: return $r0


Findings in Java Class: org.apache.commons.codec.digest.Sha2Crypt

	 in Method: java.lang.String sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: r30 = virtualinvoke r29.<java.security.MessageDigest: byte[] digest()>()

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: r32 = virtualinvoke r31.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: org.apache.commons.codec.digest.Md5Crypt

	 in Method: java.lang.String md5Crypt(byte[],java.lang.String,java.lang.String)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: r34 = virtualinvoke r31.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: org.apache.commons.codec.digest.HmacUtils

	 in Method: javax.crypto.Mac getInitializedMac(java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, r0)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 40

	CogniCrypt found the following violations. For details see description above.
	TypestateError: 4
	RequiredPredicateError: 1
	IncompleteOperationError: 1
	ConstraintError: 3
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 2 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 3.659 s

Current Proejct: facebook4j-core-2.4.10.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 749.1 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 2 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 4
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.25

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 5
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.4

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 5
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.6

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 5
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.8

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r10, varReplacer143)
		Method: <facebook4j.auth.OAuthAuthorization: java.lang.String generateAppSecretProof()>
		SHA-256: b992411b1995b1ee10d9e239bba5d6a4398d50c6ac7eecb27829e204f9acb27
		Secure: false
	Object:
		Variable: r20
		Type: byte[]
		Statement: r20 = virtualinvoke r21.<javax.crypto.Mac: byte[] doFinal(byte[])>($r11)
		Method: <facebook4j.auth.OAuthAuthorization: java.lang.String generateAppSecretProof()>
		SHA-256: 17e74f435ffa9e79f01bbc722f1dada4ae3a6c953a12e376e2abfdb10bf1dfdb
		Secure: true
	Object:
		Variable: $r11
		Type: byte[]
		Statement: r20 = virtualinvoke r21.<javax.crypto.Mac: byte[] doFinal(byte[])>($r11)
		Method: <facebook4j.auth.OAuthAuthorization: java.lang.String generateAppSecretProof()>
		SHA-256: 333977f4217ac7c89b5a939106f3fb2cf6cb4dd0c6bcbce89cb0a78b1e6c97fe
		Secure: true
	Object:
		Variable: varReplacer143
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r10, varReplacer143)
		Method: <facebook4j.auth.OAuthAuthorization: java.lang.String generateAppSecretProof()>
		SHA-256: 188aa9086f4729263ff9b4f85ad5ed58f0d075ba1e2b9628cbdb0ff4875e0025
		Secure: false
	Object:
		Variable: r21
		Type: javax.crypto.Mac
		Statement: r21 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer146)
		Method: <facebook4j.auth.OAuthAuthorization: java.lang.String generateAppSecretProof()>
		SHA-256: ad0b2a9ee39bfabaaf369cdf7fad9a0f50ffe1b01239400347d172d0df157775
		Secure: true

Findings in Java Class: facebook4j.auth.OAuthAuthorization

	 in Method: java.lang.String generateAppSecretProof()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r10, varReplacer143)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 5

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 1
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 1 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 4.310 s

Current Proejct: hbase-client-1.2.3.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 652.4 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 4 analysis seeds within 1 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 5
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.2

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 6
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 7
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.43

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 7
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.57

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 7
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.71

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 7
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.86

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: $r10
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r6, $r11)
		Method: <org.apache.hadoop.hbase.security.EncryptionUtil: java.security.Key getUnwrapKey(org.apache.hadoop.conf.Configuration,java.lang.String,org.apache.hadoop.hbase.protobuf.generated.EncryptionProtos$WrappedKey,org.apache.hadoop.hbase.io.crypto.Cipher)>
		SHA-256: 1f7347b7e61c8e1aa26ec9614f780d5f68099b49cf8b44fc2a6e46e863562b13
		Secure: false
	Object:
		Variable: $r11
		Type: java.lang.String
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r6, $r11)
		Method: <org.apache.hadoop.hbase.security.EncryptionUtil: java.security.Key getUnwrapKey(org.apache.hadoop.conf.Configuration,java.lang.String,org.apache.hadoop.hbase.protobuf.generated.EncryptionProtos$WrappedKey,org.apache.hadoop.hbase.io.crypto.Cipher)>
		SHA-256: 99dd4876634c8040540e0a3b9820b56721031bd0034b507c626cd72ad6f4f1b
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, r2)
		Method: <org.apache.hadoop.hbase.security.EncryptionUtil: byte[] wrapKey(org.apache.hadoop.conf.Configuration,byte[],java.lang.String)>
		SHA-256: 98c95a78c090d6bdc2d95112c8e461628d1c1b1f045bfd8d218dfa74849e93f8
		Secure: false
	Object:
		Variable: r2
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, r2)
		Method: <org.apache.hadoop.hbase.security.EncryptionUtil: byte[] wrapKey(org.apache.hadoop.conf.Configuration,byte[],java.lang.String)>
		SHA-256: 2bac8055783a37ba903034297be274cbf5f8e42cab3231702cda014688691e58
		Secure: false
	Object:
		Variable: r6
		Type: byte[]
		Statement: r6 = interfaceinvoke r2.<java.security.Key: byte[] getEncoded()>()
		Method: <org.apache.hadoop.hbase.security.EncryptionUtil: byte[] wrapKey(org.apache.hadoop.conf.Configuration,java.lang.String,java.security.Key)>
		SHA-256: f3ade92b05e2601632fdba48298074cb8cd7111c6f813a285f45e3a12707716
		Secure: true
	Object:
		Variable: r2
		Type: java.security.Key
		Statement: r6 = interfaceinvoke r2.<java.security.Key: byte[] getEncoded()>()
		Method: <org.apache.hadoop.hbase.security.EncryptionUtil: byte[] wrapKey(org.apache.hadoop.conf.Configuration,java.lang.String,java.security.Key)>
		SHA-256: 4234239e2963dd208ff172e439236d200c00bdf699eb5e17bc4bb95eeba8d698
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <org.apache.hadoop.hbase.security.EncryptionUtil: void <clinit>()>
		SHA-256: 231feaf9239477d82b2c05d332542686db08fa144170e855bb909b4626e8ce78
		Secure: true

Findings in Java Class: org.apache.hadoop.hbase.security.EncryptionUtil

	 in Method: java.security.Key getUnwrapKey(org.apache.hadoop.conf.Configuration,java.lang.String,org.apache.hadoop.hbase.protobuf.generated.EncryptionProtos$WrappedKey,org.apache.hadoop.hbase.io.crypto.Cipher)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r6, $r11)


	 in Method: byte[] wrapKey(org.apache.hadoop.conf.Configuration,byte[],java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, r2)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 7

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 2
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 8 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 12.26 s

Current Proejct: httpcore-4.4.8.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 480.3 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 9 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 10
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.1

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 10
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.2

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 10
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.3

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.36

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.45

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.55

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.64

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.73

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.82

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.91

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r5
		Type: java.lang.Object[]
		Statement: r5 = virtualinvoke r4.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <org.apache.http.ssl.SSLContextBuilder: org.apache.http.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[],org.apache.http.ssl.PrivateKeyStrategy)>
		SHA-256: 1ea876b37c6abd161a04a567c7b9ddb00b7d622ff55d3e071ea3a5e796fe943e
		Secure: true
	Object:
		Variable: r5
		Type: java.security.KeyStore
		Statement: r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r9)
		Method: <org.apache.http.ssl.SSLContextBuilder: org.apache.http.ssl.SSLContextBuilder loadKeyMaterial(java.io.File,char[],char[],org.apache.http.ssl.PrivateKeyStrategy)>
		SHA-256: 513ef26476cf54f06d8fd0c0bf6830fe9958034d3d24bd143d2cff5a8db93c51
		Secure: true
	Object:
		Variable: r9
		Type: javax.net.ssl.SSLContext
		Statement: r9 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(r1, $r7)
		Method: <org.apache.http.ssl.SSLContextBuilder: javax.net.ssl.SSLContext build()>
		SHA-256: ad6d944b2b1ea4e227efe778c3dc3d27acf160d6725a8f24cb12b791425ecd74
		Secure: false
	Object:
		Variable: r6
		Type: javax.net.ssl.SSLContext
		Statement: r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1543)
		Method: <org.apache.http.ssl.SSLContexts: javax.net.ssl.SSLContext createDefault()>
		SHA-256: d992430b8583c4e51598c9c98f2a56c8ed788810671632657f48eb1b5c5f3876
		Secure: false
	Object:
		Variable: r3
		Type: javax.net.ssl.TrustManagerFactory
		Statement: r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r10)
		Method: <org.apache.http.ssl.SSLContextBuilder: org.apache.http.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore,org.apache.http.ssl.TrustStrategy)>
		SHA-256: e2938ff6fdc62519f4377a97c76c4e48e17f5debef102d651f33a61b74443a77
		Secure: true
	Object:
		Variable: r4
		Type: java.security.KeyStore
		Statement: r4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r8)
		Method: <org.apache.http.ssl.SSLContextBuilder: org.apache.http.ssl.SSLContextBuilder loadTrustMaterial(java.net.URL,char[],org.apache.http.ssl.TrustStrategy)>
		SHA-256: 2ae9e45495be98490a8cf7e986c1da4f46ec3d08c04f0de79430b0d6741fcb4e
		Secure: true
	Object:
		Variable: r4
		Type: javax.net.ssl.KeyManagerFactory
		Statement: r4 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r11)
		Method: <org.apache.http.ssl.SSLContextBuilder: org.apache.http.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[],org.apache.http.ssl.PrivateKeyStrategy)>
		SHA-256: f887b9eb5b0bea7bd8e7f2619f2a30b8b2e6358a49e2c68428106c3a0da112ae
		Secure: true
	Object:
		Variable: r5
		Type: java.security.KeyStore
		Statement: r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r9)
		Method: <org.apache.http.ssl.SSLContextBuilder: org.apache.http.ssl.SSLContextBuilder loadKeyMaterial(java.net.URL,char[],char[],org.apache.http.ssl.PrivateKeyStrategy)>
		SHA-256: 513ef26476cf54f06d8fd0c0bf6830fe9958034d3d24bd143d2cff5a8db93c51
		Secure: true
	Object:
		Variable: r9
		Type: javax.net.ssl.SSLContext
		Statement: r9 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(r1)
		Method: <org.apache.http.ssl.SSLContextBuilder: javax.net.ssl.SSLContext build()>
		SHA-256: 17297cadaf15cdc3f26bbd5bf8ebab087678c4d3aba0139ec991d49b0723822f
		Secure: false
	Object:
		Variable: r4
		Type: java.lang.Object[]
		Statement: r4 = virtualinvoke r3.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <org.apache.http.ssl.SSLContextBuilder: org.apache.http.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore,org.apache.http.ssl.TrustStrategy)>
		SHA-256: 958cd47db3f267cb4a37c5d640c89a98379a425baeaf193a6b47be852863fe2
		Secure: true
	Object:
		Variable: r4
		Type: java.security.KeyStore
		Statement: r4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r8)
		Method: <org.apache.http.ssl.SSLContextBuilder: org.apache.http.ssl.SSLContextBuilder loadTrustMaterial(java.io.File,char[],org.apache.http.ssl.TrustStrategy)>
		SHA-256: 2ae9e45495be98490a8cf7e986c1da4f46ec3d08c04f0de79430b0d6741fcb4e
		Secure: true

Findings in Java Class: org.apache.http.ssl.SSLContexts

	 in Method: javax.net.ssl.SSLContext createSystemDefault()
		ForbiddenMethodError violating CrySL rule for javax.net.ssl.SSLContext
			Detected call to forbidden method javax.net.ssl.SSLContext getDefault() of class javax.net.ssl.SSLContext. Instead, call method <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>.
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getDefault()>()


	 in Method: javax.net.ssl.SSLContext createDefault()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1544, varReplacer1544, varReplacer1544)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #d992430b8583c4e51598c9c98f2a56c8ed788810671632657f48eb1b5c5f3876)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1543)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1544, varReplacer1544, varReplacer1544)


Findings in Java Class: org.apache.http.ssl.SSLContextBuilder

	 in Method: javax.net.ssl.SSLContext build()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #17297cadaf15cdc3f26bbd5bf8ebab087678c4d3aba0139ec991d49b0723822f)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: r9 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(r1)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #ad6d944b2b1ea4e227efe778c3dc3d27acf160d6725a8f24cb12b791425ecd74)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: r9 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(r1, $r7)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 11

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 3
	RequiredPredicateError: 2
	ForbiddenMethodError: 1
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 2.826 s

Current Proejct: scala-compiler-2.11.12.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 8.775 s 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 1 analysis seeds within 13 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r22
		Type: java.security.SecureRandom
		Statement: specialinvoke r22.<java.security.SecureRandom: void <init>()>()
		Method: <scala.tools.nsc.CompileSocket: void setPort(int)>
		SHA-256: 1b95f638948a8c86982d49d3ab046d6b29d939d4823afb4fd7d243236f74a258
		Secure: true

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 1
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 13 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 40.43 s

Current Proejct: jackson-dataformat-yaml-2.9.8.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 514.2 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.604 s

Current Proejct: flink-java-1.4.2.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 515.0 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 2.665 s

Current Proejct: commons-collections-3.2.2.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 579.0 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 3.693 s

Current Proejct: jaxb-utilities-1.3.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 540.4 ms 
Exception in thread "main" java.lang.RuntimeException: This operation requires resolving level SIGNATURES but javax.xml.transform.stream.StreamSource is at resolving level DANGLING
If you are extending Soot, try to add the following call before calling soot.Main.main(..):
Scene.v().addBasicClass(javax.xml.transform.stream.StreamSource,SIGNATURES);
Otherwise, try whole-program mode (-w).
	at soot.SootClass.checkLevelIgnoreResolving(SootClass.java:198)
	at soot.SootClass.checkLevel(SootClass.java:180)
	at soot.SootClass.getMethodUnsafe(SootClass.java:399)
	at soot.EntryPoints.clinitsOf(EntryPoints.java:187)
	at soot.jimple.toolkits.callgraph.OnFlyCallGraphBuilder.getImplicitTargets(OnFlyCallGraphBuilder.java:897)
	at soot.jimple.toolkits.callgraph.OnFlyCallGraphBuilder.processNewMethod(OnFlyCallGraphBuilder.java:765)
	at soot.jimple.toolkits.callgraph.OnFlyCallGraphBuilder.processReachables(OnFlyCallGraphBuilder.java:273)
	at soot.jimple.toolkits.callgraph.CallGraphBuilder.build(CallGraphBuilder.java:111)
	at soot.jimple.toolkits.callgraph.CHATransformer.internalTransform(CHATransformer.java:51)
	at soot.SceneTransformer.transform(SceneTransformer.java:36)
	at soot.Transform.apply(Transform.java:102)
	at soot.RadioScenePack.internalApply(RadioScenePack.java:68)
	at soot.jimple.toolkits.callgraph.CallGraphPack.internalApply(CallGraphPack.java:58)
	at soot.Pack.apply(Pack.java:117)
	at crypto.HeadlessCryptoScanner.analyse(HeadlessCryptoScanner.java:198)
	at crypto.HeadlessCryptoScanner.exec(HeadlessCryptoScanner.java:167)
	at crypto.HeadlessCryptoScanner.main(HeadlessCryptoScanner.java:72)

Current Proejct: reflections-0.9.11.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 482.0 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.760 s

Current Proejct: aalto-xml-1.1.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 577.9 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 3.798 s

Current Proejct: google-http-client-jackson2-1.22.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 523.9 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.522 s

Current Proejct: reactivestreams-core.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 780.7 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 2.684 s

Current Proejct: neo4j-java-driver-1.5.1.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 1.080 s 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 26 analysis seeds within 2 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 26
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.04

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 27
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.07

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 27
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.11

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 27
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.15

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 27
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.19

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 28
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.21

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 29
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.24

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 29
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.28

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 29
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.31

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 31
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.35

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 31
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.39

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 31
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.42

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 14 of 35
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.4

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 15 of 35
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.43

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 16 of 39
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.41

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 17 of 39
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.44

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 18 of 39
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.46

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 19 of 39
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.49

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 20 of 39
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.51

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 21 of 39
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.54

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 22 of 39
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.56

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 23 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.58

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 24 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.6

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 25 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.63

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 26 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.63

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 27 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.66

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 28 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.68

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 29 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.71

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 30 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.73

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 31 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.76

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 32 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.78

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 33 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.8

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 34 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.83

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 35 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.85

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 36 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.88

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 37 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.9

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 38 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.93

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 39 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.95

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 40 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.98

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r22
		Type: javax.net.ssl.TrustManagerFactory
		Statement: r22 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r11)
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ReferenceCountedOpenSslClientContext: org.neo4j.driver.internal.shaded.io.netty.handler.ssl.OpenSslSessionContext newSessionContext(org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ReferenceCountedOpenSslContext,long,org.neo4j.driver.internal.shaded.io.netty.handler.ssl.OpenSslEngineMap,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory)>
		SHA-256: 6e776ee9266c96327398a35bd0a51bbfe29c9d29bfc00fa730251e19cc6a2cb3
		Secure: false
	Object:
		Variable: $r10
		Type: javax.net.ssl.KeyManager[]
		Statement: $r10 = virtualinvoke r36.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ReferenceCountedOpenSslServerContext: org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ReferenceCountedOpenSslServerContext$ServerContext newSessionContext(org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ReferenceCountedOpenSslContext,long,org.neo4j.driver.internal.shaded.io.netty.handler.ssl.OpenSslEngineMap,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory)>
		SHA-256: dfb73f0e674ebc77900e3fea1d8d5e395b667d9d3533833977800b792a7cfb0b
		Secure: false
	Object:
		Variable: r0
		Type: org.neo4j.driver.internal.shaded.io.netty.handler.ssl.util.ThreadLocalInsecureRandom
		Statement: specialinvoke r0.<java.security.SecureRandom: void <init>()>()
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.util.ThreadLocalInsecureRandom: void <init>()>
		SHA-256: 46a0bd64f535b57484537e537f98f9e41f2f93ed1ca917868b32c341773fdb95
		Secure: true
	Object:
		Variable: r2
		Type: byte[]
		Statement: r2 = virtualinvoke r1.<java.security.SecureRandom: byte[] generateSeed(int)>(varReplacer3514)
		Method: <org.neo4j.driver.internal.shaded.io.netty.util.internal.ThreadLocalRandom$1: void run()>
		SHA-256: d0103c0ffdf31458ccb11ca613894eac1513424b2119bbf3068986b1191336fb
		Secure: true
	Object:
		Variable: r6
		Type: javax.net.ssl.KeyManagerFactory
		Statement: r6 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(r1)
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.SslContext: javax.net.ssl.KeyManagerFactory buildKeyManagerFactory(java.security.cert.X509Certificate[],java.lang.String,java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory)>
		SHA-256: 8c84333848e193c4abf36d346a33be3d8a4358fc1f01ff589d1e6f74d2b2d6d0
		Secure: false
	Object:
		Variable: r6
		Type: javax.crypto.Cipher
		Statement: r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r10)
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.SslContext: java.security.spec.PKCS8EncodedKeySpec generateKeySpec(char[],byte[])>
		SHA-256: 75783602b7c7dea9335aace96ce14e1788e2631b71b853aefb20e70b107597aa
		Secure: false
	Object:
		Variable: r3
		Type: javax.net.ssl.SSLContext
		Statement: r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer244)
		Method: <org.neo4j.driver.internal.security.SecurityPlan: org.neo4j.driver.internal.security.SecurityPlan forCustomCASignedCertificates(java.io.File)>
		SHA-256: 15852783e54e1e0ac36db4765961fa9191de98816c7efb0be798c4ad28cf7ca0
		Secure: false
	Object:
		Variable: $r17
		Type: javax.net.ssl.TrustManager[]
		Statement: $r17 = virtualinvoke r13.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.JdkSslServerContext: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long)>
		SHA-256: 64ed63e14b68055ba1988b796d6b823837ff3ad9c45d21d87c7c878e00a24f81
		Secure: true
	Object:
		Variable: r5
		Type: java.security.KeyPair
		Statement: r5 = virtualinvoke r42.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.util.SelfSignedCertificate: void <init>(java.lang.String,java.security.SecureRandom,int,java.util.Date,java.util.Date)>
		SHA-256: 86cb81f3b17f266d370350b860a2145fa33d06b4ae46ed94b7383efca2feb325
		Secure: false
	Object:
		Variable: r5
		Type: javax.crypto.SecretKey
		Statement: r5 = virtualinvoke r3.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r4)
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.SslContext: java.security.spec.PKCS8EncodedKeySpec generateKeySpec(char[],byte[])>
		SHA-256: e0cef9eca484cf273c5e243ed2f847a8d3255200120945c83142071df9855c58
		Secure: false
	Object:
		Variable: $r15
		Type: javax.net.ssl.KeyManager[]
		Statement: $r15 = virtualinvoke r11.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.JdkSslClientContext: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long)>
		SHA-256: cfb354b07fa4616db41d7207dfe907f05977eed59b69d77c0fa5b5a6d00b034f
		Secure: false
	Object:
		Variable: r0
		Type: org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ReferenceCountedOpenSslEngine
		Statement: specialinvoke r0.<javax.net.ssl.SSLEngine: void <init>(java.lang.String,int)>(r3, i0)
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ReferenceCountedOpenSslEngine: void <init>(org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ReferenceCountedOpenSslContext,org.neo4j.driver.internal.shaded.io.netty.buffer.ByteBufAllocator,java.lang.String,int,boolean,boolean)>
		SHA-256: 6c319d7a075ff67b2a65fc572e9634e239252783aae602180cd74c19bda0533d
		Secure: false
	Object:
		Variable: r37
		Type: javax.net.ssl.SSLEngine
		Statement: r37 = virtualinvoke r0.<javax.net.ssl.SSLContext: javax.net.ssl.SSLEngine createSSLEngine()>()
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.JdkSslContext: void <clinit>()>
		SHA-256: 77805c34749f10d76b04822710a8f96c27d517774008d6fb18bb36b79746a334
		Secure: false
	Object:
		Variable: $r27
		Type: javax.net.ssl.TrustManager[]
		Statement: $r27 = virtualinvoke r22.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ReferenceCountedOpenSslClientContext: org.neo4j.driver.internal.shaded.io.netty.handler.ssl.OpenSslSessionContext newSessionContext(org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ReferenceCountedOpenSslContext,long,org.neo4j.driver.internal.shaded.io.netty.handler.ssl.OpenSslEngineMap,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory)>
		SHA-256: 271fc3a419a175be86815003ae7c1c052ef7a36cadb116d08d1fc49bae866d73
		Secure: true
	Object:
		Variable: $r15
		Type: javax.net.ssl.SSLContext
		Statement: $r15 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2095)
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.JdkSslServerContext: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long)>
		SHA-256: 599cf68f5b7a0b3bcfd2f084c62351c94a03aeabda75d1074eebfe21e33d90e6
		Secure: false
	Object:
		Variable: $r12
		Type: javax.net.ssl.SSLContext
		Statement: $r12 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2125)
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.JdkSslClientContext: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long)>
		SHA-256: 25086dbbbd5411eee0aa49b3fcaba6d1b5ffb5635307640fd10923d0f6413e38
		Secure: false
	Object:
		Variable: r0
		Type: org.neo4j.driver.internal.shaded.io.netty.handler.ssl.JdkSslEngine
		Statement: specialinvoke r0.<javax.net.ssl.SSLEngine: void <init>()>()
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.JdkSslEngine: void <init>(javax.net.ssl.SSLEngine)>
		SHA-256: 3ef976940fde996d8da07e66af3563c3ad52e8b3e2d0eb1abf08c8dbc6ab2dc5
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke r11.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.neo4j.driver.internal.security.TrustOnFirstUseTrustManager: java.lang.String fingerprint(java.security.cert.X509Certificate)>
		SHA-256: 97ae4aad198cd91a1c72b07acc86f3f1536ca1978cfe8a076de9da1616a71fc2
		Secure: true
	Object:
		Variable: r35
		Type: javax.net.ssl.TrustManagerFactory
		Statement: r35 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r23)
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ReferenceCountedOpenSslServerContext: org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ReferenceCountedOpenSslServerContext$ServerContext newSessionContext(org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ReferenceCountedOpenSslContext,long,org.neo4j.driver.internal.shaded.io.netty.handler.ssl.OpenSslEngineMap,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory)>
		SHA-256: 5eda7447050e1d0f66050f1815dbd59973c20737d3e8a7120af21769fd7d7feb
		Secure: false
	Object:
		Variable: $r5
		Type: javax.net.ssl.TrustManager[]
		Statement: $r5 = virtualinvoke r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <org.neo4j.driver.internal.security.SecurityPlan: org.neo4j.driver.internal.security.SecurityPlan forCustomCASignedCertificates(java.io.File)>
		SHA-256: ecb2f528f4843e8135281431a11477f435b9d2b851aaaca89dcb7568f6494ab3
		Secure: true
	Object:
		Variable: r0
		Type: javax.net.ssl.SSLContext
		Statement: r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1389)
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.JdkSslContext: void <clinit>()>
		SHA-256: cff23491c95c195016362e66d3d14fd4897e8e5b9f3dfb6f2f0703f03cb1d4db
		Secure: false
	Object:
		Variable: r6
		Type: javax.net.ssl.TrustManagerFactory
		Statement: r6 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r5)
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.SslContext: javax.net.ssl.TrustManagerFactory buildTrustManagerFactory(java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory)>
		SHA-256: fd7f27531409aacfca88befca40d2bc26c0b3b939742eb6150468ac26bc385f0
		Secure: true
	Object:
		Variable: $r40
		Type: javax.net.ssl.TrustManager[]
		Statement: $r40 = virtualinvoke r35.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ReferenceCountedOpenSslServerContext: org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ReferenceCountedOpenSslServerContext$ServerContext newSessionContext(org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ReferenceCountedOpenSslContext,long,org.neo4j.driver.internal.shaded.io.netty.handler.ssl.OpenSslEngineMap,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory)>
		SHA-256: 9577be1eada7e4b8ab0734163d846f4a8447bae305021e036de0cade8711c29
		Secure: true
	Object:
		Variable: r3
		Type: java.security.KeyStore
		Statement: r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer1958)
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.SslContext: java.security.KeyStore buildKeyStore(java.security.cert.X509Certificate[],java.security.PrivateKey,char[])>
		SHA-256: 6e058249abb1bd50d0b5b841bfb204b30f0cf06d5411eae0b71031999dab34ac
		Secure: true
	Object:
		Variable: r42
		Type: java.security.KeyPairGenerator
		Statement: r42 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer2178)
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.util.SelfSignedCertificate: void <init>(java.lang.String,java.security.SecureRandom,int,java.util.Date,java.util.Date)>
		SHA-256: ea5215d46c3ede16f6327f78abf2f3f9b4f92148cf6d0dc83e5dfdbf826a3c38
		Secure: false
	Object:
		Variable: $r16
		Type: javax.net.ssl.TrustManager[]
		Statement: $r16 = virtualinvoke r10.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.JdkSslClientContext: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long)>
		SHA-256: 40e6279df6a4cbbb6508b21e9d38859c319025e85c0a215637a4af9b61a1cb9d
		Secure: true
	Object:
		Variable: r3
		Type: javax.net.ssl.SSLContext
		Statement: r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer250)
		Method: <org.neo4j.driver.internal.security.SecurityPlan: org.neo4j.driver.internal.security.SecurityPlan forTrustOnFirstUse(java.io.File,org.neo4j.driver.internal.BoltServerAddress,org.neo4j.driver.v1.Logger)>
		SHA-256: 35181ef5ae8f704a401dcf8b0d46d3953ab1595c465b2822134bdee68ebe4ba1
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1413)
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.util.FingerprintTrustManagerFactory$1: java.security.MessageDigest initialValue()>
		SHA-256: e5b7437548d8b2795b54bf8ad07e5dcf430dbd6b9ce6ea5395f237e283721ad4
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.neo4j.driver.internal.shaded.io.netty.util.internal.ThreadLocalRandom$1: void run()>
		SHA-256: 7b5a6c8dae3abffe2514936e7c1020b7c1c22c0810a3c866ee45528de51e28a7
		Secure: true
	Object:
		Variable: r11
		Type: java.security.MessageDigest
		Statement: r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer811)
		Method: <org.neo4j.driver.internal.security.TrustOnFirstUseTrustManager: java.lang.String fingerprint(java.security.cert.X509Certificate)>
		SHA-256: 7c64c8acb052de22e51d9a186d151feb99a591f3d6b654a8745d9d260a30a549
		Secure: true
	Object:
		Variable: $r13
		Type: javax.net.ssl.KeyManager[]
		Statement: $r13 = virtualinvoke r23.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ReferenceCountedOpenSslClientContext: org.neo4j.driver.internal.shaded.io.netty.handler.ssl.OpenSslSessionContext newSessionContext(org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ReferenceCountedOpenSslContext,long,org.neo4j.driver.internal.shaded.io.netty.handler.ssl.OpenSslEngineMap,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory)>
		SHA-256: d3cc5dbc0b3f60d96304dada0b63c548569a8c99dd6455887d65dd4c177cf02
		Secure: false
	Object:
		Variable: r0
		Type: javax.net.ssl.SSLContext
		Statement: r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer236)
		Method: <org.neo4j.driver.internal.security.SecurityPlan: org.neo4j.driver.internal.security.SecurityPlan forAllCertificates()>
		SHA-256: cbd97d502070dd6035bdfdafa6dc46bc22b4e0e285cb65ea6a85bfa50c204be3
		Secure: false
	Object:
		Variable: $r12
		Type: javax.net.ssl.SSLContext
		Statement: $r12 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer2126, r0)
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.JdkSslClientContext: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long)>
		SHA-256: 25d4a225a8d5958636ac09f6919ee1c89f008f22f30697239662ea109ccb3a00
		Secure: false
	Object:
		Variable: r0
		Type: javax.net.ssl.SSLEngine
		Statement: r0 = virtualinvoke r23.<javax.net.ssl.SSLContext: javax.net.ssl.SSLEngine createSSLEngine()>()
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.Java9SslUtils: void <clinit>()>
		SHA-256: 9090fbc19abf03c50512680f012acf6277ca242d4a6b012fbc9981527a07a5dd
		Secure: false
	Object:
		Variable: r1
		Type: java.security.KeyStore
		Statement: r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer242)
		Method: <org.neo4j.driver.internal.security.SecurityPlan: org.neo4j.driver.internal.security.SecurityPlan forCustomCASignedCertificates(java.io.File)>
		SHA-256: d4b17cd7d0565dd26bb57c150f13d0019aab3fc6238bceff1a8aea211ef374c9
		Secure: true
	Object:
		Variable: r3
		Type: javax.crypto.SecretKeyFactory
		Statement: r3 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>($r8)
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.SslContext: java.security.spec.PKCS8EncodedKeySpec generateKeySpec(char[],byte[])>
		SHA-256: 436149b8daa596b6e53a6ec47fbcfc7024fd8a9a94ca6ec263f1046a649a7624
		Secure: false
	Object:
		Variable: $r15
		Type: javax.net.ssl.SSLContext
		Statement: $r15 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer2093, r0)
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.JdkSslServerContext: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long)>
		SHA-256: d5917e45e194a79727bca746dda495d8a2cb5fad3c614faf21243ce515908bc0
		Secure: false
	Object:
		Variable: r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(varReplacer237)
		Method: <org.neo4j.driver.internal.security.SecurityPlan: org.neo4j.driver.internal.security.SecurityPlan forCustomCASignedCertificates(java.io.File)>
		SHA-256: ab0e665dd2236e121f516ec61f690afebe4aa60c0f7e2ed0cd9501de468b4b93
		Secure: true
	Object:
		Variable: r23
		Type: javax.net.ssl.SSLContext
		Statement: r23 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1795)
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.Java9SslUtils: void <clinit>()>
		SHA-256: 803c12f11952cd793fd54299044aa1fa326b37a71322d6cce396102738c76c0f
		Secure: false
	Object:
		Variable: r1
		Type: java.security.KeyStore
		Statement: r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer1971)
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.SslContext: javax.net.ssl.TrustManagerFactory buildTrustManagerFactory(java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory)>
		SHA-256: cc6b041afa8f3a32b6fd112a791585074075718ba441d6a02650bded72d928a6
		Secure: true
	Object:
		Variable: $r6
		Type: javax.net.ssl.KeyManager[]
		Statement: $r6 = virtualinvoke r14.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.JdkSslServerContext: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long)>
		SHA-256: 4f3f67867f20ca927bb0959c7083932677e2b3fa8de297aa02f36b9efeda18a3
		Secure: false

Findings in Java Class: org.neo4j.driver.internal.security.SecurityPlan

	 in Method: org.neo4j.driver.internal.security.SecurityPlan forSystemCASignedCertificates()
		ForbiddenMethodError violating CrySL rule for javax.net.ssl.SSLContext
			Detected call to forbidden method javax.net.ssl.SSLContext getDefault() of class javax.net.ssl.SSLContext. Instead, call method <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>.
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getDefault()>()


	 in Method: org.neo4j.driver.internal.security.SecurityPlan forAllCertificates()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r3, r7, varReplacer233)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #cbd97d502070dd6035bdfdafa6dc46bc22b4e0e285cb65ea6a85bfa50c204be3)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer236)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r3, r7, varReplacer233)


	 in Method: org.neo4j.driver.internal.security.SecurityPlan forCustomCASignedCertificates(java.io.File)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r4, $r5, varReplacer243)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r4, $r5, varReplacer243)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #15852783e54e1e0ac36db4765961fa9191de98816c7efb0be798c4ad28cf7ca0)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer244)


	 in Method: org.neo4j.driver.internal.security.SecurityPlan forTrustOnFirstUse(java.io.File,org.neo4j.driver.internal.BoltServerAddress,org.neo4j.driver.v1.Logger)
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #35181ef5ae8f704a401dcf8b0d46d3953ab1595c465b2822134bdee68ebe4ba1)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer250)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r6, r10, varReplacer247)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r6, r10, varReplacer247)


Findings in Java Class: org.neo4j.driver.internal.shaded.io.netty.handler.ssl.SslContext

	 in Method: java.security.spec.PKCS8EncodedKeySpec generateKeySpec(char[],byte[])
		ForbiddenMethodError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Detected call to forbidden method void <init>(char[]) of class javax.crypto.spec.PBEKeySpec. Instead, call method <javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>.
			at statement: specialinvoke $r9.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>(r0)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #75783602b7c7dea9335aace96ce14e1788e2631b71b853aefb20e70b107597aa)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: $r12 = virtualinvoke r2.<javax.crypto.EncryptedPrivateKeyInfo: java.security.spec.PKCS8EncodedKeySpec getKeySpec(javax.crypto.Cipher)>(r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: r5 = virtualinvoke r3.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r4)


	 in Method: javax.net.ssl.KeyManagerFactory buildKeyManagerFactory(java.security.cert.X509Certificate[],java.lang.String,java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory)
		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #8c84333848e193c4abf36d346a33be3d8a4358fc1f01ff589d1e6f74d2b2d6d0)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r6.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r5, r4)


Findings in Java Class: org.neo4j.driver.internal.shaded.io.netty.handler.ssl.JdkSslContext

	 in Method: void <clinit>()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #cff23491c95c195016362e66d3d14fd4897e8e5b9f3dfb6f2f0703f03cb1d4db)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1389)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1392, varReplacer1392, varReplacer1392)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1392, varReplacer1392, varReplacer1392)


Findings in Java Class: org.neo4j.driver.internal.shaded.io.netty.handler.ssl.util.FingerprintTrustManagerFactory$1

	 in Method: java.security.MessageDigest initialValue()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e5b7437548d8b2795b54bf8ad07e5dcf430dbd6b9ce6ea5395f237e283721ad4)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1413)


Findings in Java Class: org.neo4j.driver.internal.shaded.io.netty.handler.ssl.Java9SslUtils

	 in Method: void <clinit>()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r23.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1797, varReplacer1797, varReplacer1797)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #803c12f11952cd793fd54299044aa1fa326b37a71322d6cce396102738c76c0f)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: r23 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1795)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r23.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1797, varReplacer1797, varReplacer1797)


Findings in Java Class: org.neo4j.driver.internal.shaded.io.netty.handler.ssl.JdkSslServerContext

	 in Method: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r16.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r6, $r17, varReplacer2096)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #d5917e45e194a79727bca746dda495d8a2cb5fad3c614faf21243ce515908bc0)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r15 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer2093, r0)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #599cf68f5b7a0b3bcfd2f084c62351c94a03aeabda75d1074eebfe21e33d90e6)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r15 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2095)


Findings in Java Class: org.neo4j.driver.internal.shaded.io.netty.handler.ssl.JdkSslClientContext

	 in Method: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long)
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #25d4a225a8d5958636ac09f6919ee1c89f008f22f30697239662ea109ccb3a00)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r12 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer2126, r0)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #25086dbbbd5411eee0aa49b3fcaba6d1b5ffb5635307640fd10923d0f6413e38)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r12 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2125)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r13.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r15, $r16, varReplacer2124)


Findings in Java Class: org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ConscryptAlpnSslEngine$ServerEngine

	 in Method: void <init>(javax.net.ssl.SSLEngine,org.neo4j.driver.internal.shaded.io.netty.buffer.ByteBufAllocator,org.neo4j.driver.internal.shaded.io.netty.handler.ssl.JdkApplicationProtocolNegotiator)
		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLEngine (on Object #3ef976940fde996d8da07e66af3563c3ad52e8b3e2d0eb1abf08c8dbc6ab2dc5)
			Operation on object of type org.neo4j.driver.internal.shaded.io.netty.handler.ssl.JdkSslEngine object not completed. Expected call to setEnabledCipherSuites, setEnabledProtocols
			at statement: staticinvoke <org.conscrypt.Conscrypt$Engines: void setHandshakeListener(javax.net.ssl.SSLEngine,org.conscrypt.HandshakeListener)>(r1, $r5)


Findings in Java Class: org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ConscryptAlpnSslEngine$ClientEngine

	 in Method: void <init>(javax.net.ssl.SSLEngine,org.neo4j.driver.internal.shaded.io.netty.buffer.ByteBufAllocator,org.neo4j.driver.internal.shaded.io.netty.handler.ssl.JdkApplicationProtocolNegotiator)
		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLEngine (on Object #3ef976940fde996d8da07e66af3563c3ad52e8b3e2d0eb1abf08c8dbc6ab2dc5)
			Operation on object of type org.neo4j.driver.internal.shaded.io.netty.handler.ssl.JdkSslEngine object not completed. Expected call to setEnabledCipherSuites, setEnabledProtocols
			at statement: staticinvoke <org.conscrypt.Conscrypt$Engines: void setHandshakeListener(javax.net.ssl.SSLEngine,org.conscrypt.HandshakeListener)>(r1, $r5)


Findings in Java Class: org.neo4j.driver.internal.shaded.io.netty.handler.ssl.util.SelfSignedCertificate

	 in Method: void <init>(java.lang.String,java.security.SecureRandom,int,java.util.Date,java.util.Date)
		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #ea5215d46c3ede16f6327f78abf2f3f9b4f92148cf6d0dc83e5dfdbf826a3c38)
			First parameter (with value 1024) should be any of {4096, 3072, 2048}
			at statement: virtualinvoke r42.<java.security.KeyPairGenerator: void initialize(int,java.security.SecureRandom)>(i0, r2)


Findings in Java Class: org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ReferenceCountedOpenSslEngine

	 in Method: void <init>(org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ReferenceCountedOpenSslContext,org.neo4j.driver.internal.shaded.io.netty.buffer.ByteBufAllocator,java.lang.String,int,boolean,boolean)
		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLEngine (on Object #6c319d7a075ff67b2a65fc572e9634e239252783aae602180cd74c19bda0533d)
			Operation on object of type org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ReferenceCountedOpenSslEngine object not completed. Expected call to setEnabledCipherSuites, setEnabledProtocols
			at statement: r32 = r0


	 in Method: void setClientAuth(org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ClientAuth)
		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLEngine (on Object #6c319d7a075ff67b2a65fc572e9634e239252783aae602180cd74c19bda0533d)
			Operation on object of type org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ReferenceCountedOpenSslEngine object not completed. Expected call to setEnabledCipherSuites, setEnabledProtocols
			at statement: r2 = r0


Findings in Java Class: org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ReferenceCountedOpenSslClientContext

	 in Method: org.neo4j.driver.internal.shaded.io.netty.handler.ssl.OpenSslSessionContext newSessionContext(org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ReferenceCountedOpenSslContext,long,org.neo4j.driver.internal.shaded.io.netty.handler.ssl.OpenSslEngineMap,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r22.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r12)


Findings in Java Class: org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ReferenceCountedOpenSslServerContext

	 in Method: org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ReferenceCountedOpenSslServerContext$ServerContext newSessionContext(org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ReferenceCountedOpenSslContext,long,org.neo4j.driver.internal.shaded.io.netty.handler.ssl.OpenSslEngineMap,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r35.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r24)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 41

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 11
	IncompleteOperationError: 5
	NeverTypeOfError: 1
	ForbiddenMethodError: 2
	RequiredPredicateError: 15
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 17 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 24.15 s

Current Proejct: slf4j-api-1.7.25.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 498.6 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.358 s

Current Proejct: streams-plugin-hbase-0.6.1-SNAPSHOT.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 402.0 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.095 s

Current Proejct: streams-plugin-pig-0.6.1-SNAPSHOT.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 399.9 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.229 s

Current Proejct: google-api-client-1.22.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 578.6 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.773 s

Current Proejct: fmpp-0.9.15.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 465.2 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 2.694 s

Current Proejct: hadoop-common-2.7.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 1.335 s 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 28 analysis seeds within 3 seconds!
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.io.Closeable: void close()> for class org.apache.commons.compress.archivers.tar.TarArchiveInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.hadoop.fs.FSOutputSummer: void flushBuffer()> for class org.apache.commons.compress.archivers.tar.TarArchiveInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.hadoop.io.compress.CompressorStream: void finish()> for class org.apache.commons.compress.archivers.tar.TarArchiveInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.hadoop.fs.FSOutputSummer: void flushBuffer()> for class java.io.FileInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.hadoop.io.compress.CompressorStream: void finish()> for class java.io.FileInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.hadoop.io.file.tfile.TFile$Writer: void finishDataBlock(boolean)> for class java.io.FileInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.hadoop.io.file.tfile.TFile$Writer: void finishDataBlock(boolean)> for class org.apache.commons.compress.archivers.tar.TarArchiveInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.hadoop.io.compress.bzip2.CBZip2InputStream: long getProcessedByteCount()> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.hadoop.io.compress.bzip2.CBZip2InputStream: void reportCRCError()> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.hadoop.io.compress.bzip2.CBZip2InputStream: boolean skipToNextMarker(long,int)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.hadoop.io.compress.bzip2.CBZip2InputStream: void reportCRCError()> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.hadoop.io.compress.bzip2.CBZip2InputStream: void updateProcessedByteCount(int)> for class java.io.BufferedInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.hadoop.io.compress.DecompressorStream: void checkStream()> for class java.io.BufferedInputStream
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.03

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.07

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.1

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 31
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.13

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 31
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.16

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 31
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.19

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 31
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.23

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 31
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.26

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 32
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.28

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.3

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.36

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.39

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 14 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.42

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 15 of 34
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.44

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 16 of 35
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.46

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 17 of 36
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.47

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 18 of 37
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.49

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 19 of 37
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.51

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 20 of 38
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.53

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 21 of 38
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.55

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 22 of 39
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.56

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 23 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.58

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 24 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.6

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 25 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.63

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 26 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.65

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 27 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.68

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 28 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.68

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 29 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.71

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 30 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.73

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 31 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.76

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 32 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.78

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 33 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.8

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 34 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.83

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 35 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.85

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 36 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.88

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 37 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.9

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 38 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.93

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 39 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.95

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 40 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.98

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r2
		Type: java.nio.ByteBuffer
		Statement: virtualinvoke $r4.<javax.crypto.Cipher: int doFinal(java.nio.ByteBuffer,java.nio.ByteBuffer)>(r1, r2)
		Method: <org.apache.hadoop.crypto.JceAesCtrCryptoCodec$JceAesCtrCipher: void process(java.nio.ByteBuffer,java.nio.ByteBuffer)>
		SHA-256: 304de7a2976e358ce97ac22bb28829713e3cb44e4911f74fe481c993691a2948
		Secure: false
	Object:
		Variable: $r15
		Type: byte[]
		Statement: $r15 = virtualinvoke r21.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.hadoop.io.SequenceFile$Writer: void <init>(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)>
		SHA-256: fa10f306be422788e09b7f55fc5b8b54e3233fdfcc5e798b94c3745faf56f6f9
		Secure: false
	Object:
		Variable: r23
		Type: javax.net.ssl.TrustManagerFactory
		Statement: r23 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r19)
		Method: <org.apache.hadoop.security.ssl.ReloadingX509TrustManager: javax.net.ssl.X509TrustManager loadTrustManager()>
		SHA-256: 925d633ef8b6b730b17fb75ef4df5f02cab74d00e374d0baa4018461e7921c42
		Secure: false
	Object:
		Variable: $r27
		Type: javax.net.ssl.KeyManager[]
		Statement: $r27 = virtualinvoke r89.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <org.apache.hadoop.security.ssl.FileBasedKeyStoresFactory: void init(org.apache.hadoop.security.ssl.SSLFactory$Mode)>
		SHA-256: 38923d33b0df3d9aaf0812b9db81e9213830db017f4d833d8a89b8701010580a
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer13434)
		Method: <org.apache.hadoop.security.ssl.SSLFactory: void init()>
		SHA-256: e606faf7e58c21659d2b9ac44a8e2cd96e65eb6ee44b065ac6301b4de8e798b9
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)
		Method: <org.apache.hadoop.crypto.JceAesCtrCryptoCodec$JceAesCtrCipher: void <init>(int,java.lang.String)>
		SHA-256: e045959ed77b475ca864f2ce6128895b6e2052e2c697b1ece6b7cae717710d5a
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>($r6, r1)
		Method: <org.apache.hadoop.crypto.JceAesCtrCryptoCodec$JceAesCtrCipher: void <init>(int,java.lang.String)>
		SHA-256: 48c3ddba4cc7fcd5037864d87426f9c109e2fe79712ffb95ccae51713c1fbcb
		Secure: false
	Object:
		Variable: r1
		Type: javax.crypto.KeyGenerator
		Statement: r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(r5)
		Method: <org.apache.hadoop.crypto.key.KeyProvider: byte[] generateKey(int,java.lang.String)>
		SHA-256: fa7a3443ff5fc4ed824754dfe0cffcefb1f3342c6b72c837d2ede1f073326acb
		Secure: true
	Object:
		Variable: r39
		Type: java.security.MessageDigest
		Statement: r39 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7030)
		Method: <org.apache.hadoop.io.SequenceFile$Writer: void <init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.io.SequenceFile$Writer$Option[])>
		SHA-256: 1b9ad0f558fc2e6ceed19279d9c6dd912eebd9f51e2abdce66fa03b9c06d7101
		Secure: false
	Object:
		Variable: r3
		Type: java.security.KeyStore
		Statement: r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(r2)
		Method: <org.apache.hadoop.security.ssl.FileBasedKeyStoresFactory: void init(org.apache.hadoop.security.ssl.SSLFactory$Mode)>
		SHA-256: 39edd228a22ce518bb2b261ff386491fc880eaf500826d56e7ae9a1d5b3d8a95
		Secure: false
	Object:
		Variable: r22
		Type: java.security.MessageDigest
		Statement: r22 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7056)
		Method: <org.apache.hadoop.io.SequenceFile$Writer: void <init>(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class,org.apache.hadoop.util.Progressable,org.apache.hadoop.io.SequenceFile$Metadata)>
		SHA-256: 42b1184317258928fd59e74ea79654947c2139f26eef7a0b5d9848d21bdddb1c
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, varReplacer12425)
		Method: <org.apache.hadoop.security.alias.JavaKeyStoreProvider: org.apache.hadoop.security.alias.CredentialProvider$CredentialEntry innerSetCredential(java.lang.String,char[])>
		SHA-256: 167fd0dd4bf90a9472e2b05aac2a78c427028c570dccd96a4e698909b96a18ae
		Secure: false
	Object:
		Variable: $r17
		Type: byte[]
		Statement: $r17 = virtualinvoke r22.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.hadoop.io.SequenceFile$Writer: void <init>(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class,int,short,long,org.apache.hadoop.util.Progressable,org.apache.hadoop.io.SequenceFile$Metadata)>
		SHA-256: 5a61f088d48b7a457a4c62307d2837e0904efa4a01505b2a6fb33692211cae65
		Secure: false
	Object:
		Variable: r89
		Type: javax.net.ssl.KeyManagerFactory
		Statement: r89 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r26)
		Method: <org.apache.hadoop.security.ssl.FileBasedKeyStoresFactory: void init(org.apache.hadoop.security.ssl.SSLFactory$Mode)>
		SHA-256: 42032859f8112374d98fe14ba244f19abbcbbbb690005b4bc1e2565b4d135e7e
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <org.apache.hadoop.crypto.random.OpensslSecureRandom: void <init>()>
		SHA-256: db883c21a83af0910f1c4b216f6e284e7ed8cb0c5c75f17e5a8f5858035366f7
		Secure: true
	Object:
		Variable: r4
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r3, r4)
		Method: <org.apache.hadoop.crypto.key.JavaKeyStoreProvider: org.apache.hadoop.crypto.key.KeyProvider$KeyVersion innerSetKeyVersion(java.lang.String,java.lang.String,byte[],java.lang.String)>
		SHA-256: 7f69dbfecae6118688e72d215c72b26a8dca59bd7ec6a401d34bf9881e7c2ede
		Secure: false
	Object:
		Variable: $r22
		Type: byte[]
		Statement: $r22 = virtualinvoke r39.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.hadoop.io.SequenceFile$Writer: void <init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.io.SequenceFile$Writer$Option[])>
		SHA-256: da1872b935962aef4625d27d2a7c687e1e921bbcef252b98279c469133c3cbf1
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6376)
		Method: <org.apache.hadoop.io.MD5Hash$1: java.security.MessageDigest initialValue()>
		SHA-256: eba571a948d383fae590598f8eef07158a4676d9c73759f7b3d7ac62b2f3c69d
		Secure: false
	Object:
		Variable: $r17
		Type: byte[]
		Statement: $r17 = virtualinvoke r22.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.hadoop.io.SequenceFile$Writer: void <init>(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class,org.apache.hadoop.util.Progressable,org.apache.hadoop.io.SequenceFile$Metadata)>
		SHA-256: 5a61f088d48b7a457a4c62307d2837e0904efa4a01505b2a6fb33692211cae65
		Secure: false
	Object:
		Variable: $r14
		Type: java.security.KeyStore
		Statement: $r14 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer420)
		Method: <org.apache.hadoop.crypto.key.JavaKeyStoreProvider: void <init>(java.net.URI,org.apache.hadoop.conf.Configuration)>
		SHA-256: 5e76ed86baa365b6369ff96d5eaee18e3c398231a8d2e4618b6f2bfac51cb2ce
		Secure: false
	Object:
		Variable: r1
		Type: java.nio.ByteBuffer
		Statement: virtualinvoke $r4.<javax.crypto.Cipher: int doFinal(java.nio.ByteBuffer,java.nio.ByteBuffer)>(r1, r2)
		Method: <org.apache.hadoop.crypto.JceAesCtrCryptoCodec$JceAesCtrCipher: void process(java.nio.ByteBuffer,java.nio.ByteBuffer)>
		SHA-256: a33a4f05e70347491c026e2b6e32609ce5d50e1a62365f42a8269f12e3f3f2f8
		Secure: false
	Object:
		Variable: varReplacer12425
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, varReplacer12425)
		Method: <org.apache.hadoop.security.alias.JavaKeyStoreProvider: org.apache.hadoop.security.alias.CredentialProvider$CredentialEntry innerSetCredential(java.lang.String,char[])>
		SHA-256: 65ab1d5b0b25f5fa75d4e62f150c7c8fb62e9b4ba64f273c3d5613c0593769a5
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r3, r4)
		Method: <org.apache.hadoop.crypto.key.JavaKeyStoreProvider: org.apache.hadoop.crypto.key.KeyProvider$KeyVersion innerSetKeyVersion(java.lang.String,java.lang.String,byte[],java.lang.String)>
		SHA-256: 7f88239e2e9e684ad98b90dfad6a68984ef1694579812217f84c62cef96cc455
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.SecureRandom
		Statement: $r12 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>(r2, $r6)
		Method: <org.apache.hadoop.crypto.JceAesCtrCryptoCodec: void setConf(org.apache.hadoop.conf.Configuration)>
		SHA-256: 9ff36213f337ea6a196605911834e3438f0c7a52aa8197eb597ce1055bd97fe0
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer402)
		Method: <org.apache.hadoop.crypto.JceAesCtrCryptoCodec$JceAesCtrCipher: void init(byte[],byte[])>
		SHA-256: 289ff9e90323445a2a7ff95bea43fbdc92a5cf74bbd7afdba56e79b277ad4f30
		Secure: false
	Object:
		Variable: r13
		Type: java.security.SecureRandom
		Statement: specialinvoke r13.<java.security.SecureRandom: void <init>()>()
		Method: <org.apache.hadoop.crypto.JceAesCtrCryptoCodec: void setConf(org.apache.hadoop.conf.Configuration)>
		SHA-256: a2d5d21165025242e61d735c1a02793631731a4aeba58d8aaa31f912c227b962
		Secure: true
	Object:
		Variable: r1
		Type: java.security.KeyStore
		Statement: r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r6)
		Method: <org.apache.hadoop.security.ssl.ReloadingX509TrustManager: javax.net.ssl.X509TrustManager loadTrustManager()>
		SHA-256: 60bebc183685b43a543933d765043a217a42f4c71905b1054b8b2740b53d67f
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Mac
		Statement: $r2 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer13860)
		Method: <org.apache.hadoop.security.token.SecretManager$1: javax.crypto.Mac initialValue()>
		SHA-256: 20ec34b93cc992a4f0e96fcfe6a8d50be4b1c0c0ad932e052f5939a09f690033
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r2)
		Method: <org.apache.hadoop.crypto.JceAesCtrCryptoCodec$JceAesCtrCipher: void init(byte[],byte[])>
		SHA-256: bcd0bf47a84a6d56534e9e4495be121f90c8923003b6be6b9edad4f0ab7e4059
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.KeyGenerator
		Statement: $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer13862)
		Method: <org.apache.hadoop.security.token.SecretManager: void <init>()>
		SHA-256: cc4e29848daafde6903dfeadedce5a52a9b86895ebfbee82a79ac025b561e78b
		Secure: false
	Object:
		Variable: varReplacer13865
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r0, varReplacer13865)
		Method: <org.apache.hadoop.security.token.SecretManager: javax.crypto.SecretKey createSecretKey(byte[])>
		SHA-256: b3f5ee6aa7be3ef7d9c53fcd53a863a9ba84b5dc5f02bc0272937b64c892ffc1
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <org.apache.hadoop.crypto.key.KeyProviderCryptoExtension$DefaultCryptoExtension$1: java.security.SecureRandom initialValue()>
		SHA-256: 3c3c52182f07c9e864f67bc3bfe9f9ae59b00e04ff3a4dc51417cb63036d6fdc
		Secure: true
	Object:
		Variable: $r15
		Type: java.security.SecureRandom
		Statement: specialinvoke $r15.<java.security.SecureRandom: void <init>()>()
		Method: <org.apache.hadoop.crypto.OpensslAesCtrCryptoCodec: void setConf(org.apache.hadoop.conf.Configuration)>
		SHA-256: bd625778f34aabdd690f6c343de67bd847d1073b2c10368d4303bb35012823eb
		Secure: true
	Object:
		Variable: r21
		Type: java.security.MessageDigest
		Statement: r21 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7048)
		Method: <org.apache.hadoop.io.SequenceFile$Writer: void <init>(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)>
		SHA-256: a3b335dc58f5b5c2a99447979dd6a860021f46c1d0a1907d8f61396d2fb9c3
		Secure: false
	Object:
		Variable: varReplacer402
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer402)
		Method: <org.apache.hadoop.crypto.JceAesCtrCryptoCodec$JceAesCtrCipher: void init(byte[],byte[])>
		SHA-256: 6e91475953b8df66eba7e80aba49ba2198506105a6985f7c73fd9a28a1c3f7f5
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.SecureRandom
		Statement: $r12 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(r2)
		Method: <org.apache.hadoop.crypto.JceAesCtrCryptoCodec: void setConf(org.apache.hadoop.conf.Configuration)>
		SHA-256: c9fa7774cf85c0bdf96088f91b81bfd7fb2d3f55ab0a8cb9ac3924b2c34d61b4
		Secure: true
	Object:
		Variable: r22
		Type: java.security.MessageDigest
		Statement: r22 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7060)
		Method: <org.apache.hadoop.io.SequenceFile$Writer: void <init>(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class,int,short,long,org.apache.hadoop.util.Progressable,org.apache.hadoop.io.SequenceFile$Metadata)>
		SHA-256: 61cf417be877ebcfa28b2d8ae09bf841afa3d4c9fe9f405641f6b7f322142831
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r0, varReplacer13865)
		Method: <org.apache.hadoop.security.token.SecretManager: javax.crypto.SecretKey createSecretKey(byte[])>
		SHA-256: a3c1b1df51dbb8fd58b3517276be4beff541b136e15eff4fac00a9046a4695f5
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.apache.hadoop.crypto.key.KeyProvider: byte[] generateKey(int,java.lang.String)>
		SHA-256: 9d504817b5cf6eaa6399f320e5dd79a2a8285525331bb5a3facead57876e5161
		Secure: true
	Object:
		Variable: r3
		Type: javax.net.ssl.TrustManager[]
		Statement: r3 = virtualinvoke r23.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <org.apache.hadoop.security.ssl.ReloadingX509TrustManager: javax.net.ssl.X509TrustManager loadTrustManager()>
		SHA-256: 5cc7d487d565e92e21d3b22a0509dca63c52fc9ec0b00fa5bf19a2b53e5274bf
		Secure: false
	Object:
		Variable: $r13
		Type: java.security.KeyStore
		Statement: $r13 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer12399)
		Method: <org.apache.hadoop.security.alias.JavaKeyStoreProvider: void <init>(java.net.URI,org.apache.hadoop.conf.Configuration)>
		SHA-256: 876a0d52c7cbdfe840acbdc447bce4ef70a6b9b4610d6e8b845ded3c96e0b452
		Secure: false

Findings in Java Class: org.apache.hadoop.crypto.JceAesCtrCryptoCodec$JceAesCtrCipher

	 in Method: void process(java.nio.ByteBuffer,java.nio.ByteBuffer)
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #48c3ddba4cc7fcd5037864d87426f9c109e2fe79712ffb95ccae51713c1fbcb)
			Unexpected call to method update on object of type javax.crypto.Cipher.
			at statement: i0 = virtualinvoke $r3.<javax.crypto.Cipher: int update(java.nio.ByteBuffer,java.nio.ByteBuffer)>(r1, r2)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #e045959ed77b475ca864f2ce6128895b6e2052e2c697b1ece6b7cae717710d5a)
			Unexpected call to method update on object of type javax.crypto.Cipher. Expect a call to one of the following methods init
			at statement: i0 = virtualinvoke $r3.<javax.crypto.Cipher: int update(java.nio.ByteBuffer,java.nio.ByteBuffer)>(r1, r2)


	 in Method: void init(byte[],byte[])
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #48c3ddba4cc7fcd5037864d87426f9c109e2fe79712ffb95ccae51713c1fbcb)
			Unexpected call to method init on object of type javax.crypto.Cipher.
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($i0, $r6, $r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($i0, $r6, $r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer402)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared G C M
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($i0, $r6, $r8)


Findings in Java Class: org.apache.hadoop.fs.crypto.CryptoFSDataInputStream

	 in Method: void <init>(org.apache.hadoop.fs.FSDataInputStream,org.apache.hadoop.crypto.CryptoCodec,byte[],byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #e045959ed77b475ca864f2ce6128895b6e2052e2c697b1ece6b7cae717710d5a)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: specialinvoke r0.<org.apache.hadoop.fs.FSDataInputStream: void <init>(java.io.InputStream)>($r5)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #48c3ddba4cc7fcd5037864d87426f9c109e2fe79712ffb95ccae51713c1fbcb)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: specialinvoke r0.<org.apache.hadoop.fs.FSDataInputStream: void <init>(java.io.InputStream)>($r5)


	 in Method: void <init>(org.apache.hadoop.fs.FSDataInputStream,org.apache.hadoop.crypto.CryptoCodec,int,byte[],byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #48c3ddba4cc7fcd5037864d87426f9c109e2fe79712ffb95ccae51713c1fbcb)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: specialinvoke r0.<org.apache.hadoop.fs.FSDataInputStream: void <init>(java.io.InputStream)>($r5)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #e045959ed77b475ca864f2ce6128895b6e2052e2c697b1ece6b7cae717710d5a)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: specialinvoke r0.<org.apache.hadoop.fs.FSDataInputStream: void <init>(java.io.InputStream)>($r5)


Findings in Java Class: org.apache.hadoop.fs.FSDataInputStream

	 in Method: int read(long,byte[],int,int)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #48c3ddba4cc7fcd5037864d87426f9c109e2fe79712ffb95ccae51713c1fbcb)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: $i3 = interfaceinvoke $r3.<org.apache.hadoop.fs.PositionedReadable: int read(long,byte[],int,int)>(l0, r1, i1, i2)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #e045959ed77b475ca864f2ce6128895b6e2052e2c697b1ece6b7cae717710d5a)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $i3 = interfaceinvoke $r3.<org.apache.hadoop.fs.PositionedReadable: int read(long,byte[],int,int)>(l0, r1, i1, i2)


	 in Method: void readFully(long,byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #48c3ddba4cc7fcd5037864d87426f9c109e2fe79712ffb95ccae51713c1fbcb)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: interfaceinvoke $r3.<org.apache.hadoop.fs.PositionedReadable: void readFully(long,byte[],int,int)>(l0, r1, varReplacer1766, $i1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #e045959ed77b475ca864f2ce6128895b6e2052e2c697b1ece6b7cae717710d5a)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: interfaceinvoke $r3.<org.apache.hadoop.fs.PositionedReadable: void readFully(long,byte[],int,int)>(l0, r1, varReplacer1766, $i1)


	 in Method: void readFully(long,byte[],int,int)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #e045959ed77b475ca864f2ce6128895b6e2052e2c697b1ece6b7cae717710d5a)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: interfaceinvoke $r3.<org.apache.hadoop.fs.PositionedReadable: void readFully(long,byte[],int,int)>(l0, r1, i1, i2)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #48c3ddba4cc7fcd5037864d87426f9c109e2fe79712ffb95ccae51713c1fbcb)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: interfaceinvoke $r3.<org.apache.hadoop.fs.PositionedReadable: void readFully(long,byte[],int,int)>(l0, r1, i1, i2)


	 in Method: void <init>(java.io.InputStream)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #48c3ddba4cc7fcd5037864d87426f9c109e2fe79712ffb95ccae51713c1fbcb)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: specialinvoke r0.<java.io.DataInputStream: void <init>(java.io.InputStream)>(r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #e045959ed77b475ca864f2ce6128895b6e2052e2c697b1ece6b7cae717710d5a)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: specialinvoke r0.<java.io.DataInputStream: void <init>(java.io.InputStream)>(r1)


Findings in Java Class: org.apache.hadoop.crypto.key.KeyProviderCryptoExtension$DefaultCryptoExtension

	 in Method: org.apache.hadoop.crypto.key.KeyProviderCryptoExtension$EncryptedKeyVersion generateEncryptedKey(java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #e045959ed77b475ca864f2ce6128895b6e2052e2c697b1ece6b7cae717710d5a)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to doFinal
			at statement: interfaceinvoke r7.<org.apache.hadoop.crypto.Encryptor: void encrypt(java.nio.ByteBuffer,java.nio.ByteBuffer)>(r8, r9)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #48c3ddba4cc7fcd5037864d87426f9c109e2fe79712ffb95ccae51713c1fbcb)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to doFinal
			at statement: interfaceinvoke r7.<org.apache.hadoop.crypto.Encryptor: void encrypt(java.nio.ByteBuffer,java.nio.ByteBuffer)>(r8, r9)


	 in Method: org.apache.hadoop.crypto.key.KeyProvider$KeyVersion decryptEncryptedKey(org.apache.hadoop.crypto.key.KeyProviderCryptoExtension$EncryptedKeyVersion)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #e045959ed77b475ca864f2ce6128895b6e2052e2c697b1ece6b7cae717710d5a)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to doFinal
			at statement: interfaceinvoke r6.<org.apache.hadoop.crypto.Decryptor: void decrypt(java.nio.ByteBuffer,java.nio.ByteBuffer)>(r8, r9)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #48c3ddba4cc7fcd5037864d87426f9c109e2fe79712ffb95ccae51713c1fbcb)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to doFinal
			at statement: interfaceinvoke r6.<org.apache.hadoop.crypto.Decryptor: void decrypt(java.nio.ByteBuffer,java.nio.ByteBuffer)>(r8, r9)


Findings in Java Class: org.apache.hadoop.crypto.CryptoOutputStream

	 in Method: void <init>(java.io.OutputStream,org.apache.hadoop.crypto.CryptoCodec,int,byte[],byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #48c3ddba4cc7fcd5037864d87426f9c109e2fe79712ffb95ccae51713c1fbcb)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: specialinvoke r0.<org.apache.hadoop.crypto.CryptoOutputStream: void <init>(java.io.OutputStream,org.apache.hadoop.crypto.CryptoCodec,int,byte[],byte[],long)>(r1, r2, i0, r3, r4, varReplacer368)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #e045959ed77b475ca864f2ce6128895b6e2052e2c697b1ece6b7cae717710d5a)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: specialinvoke r0.<org.apache.hadoop.crypto.CryptoOutputStream: void <init>(java.io.OutputStream,org.apache.hadoop.crypto.CryptoCodec,int,byte[],byte[],long)>(r1, r2, i0, r3, r4, varReplacer368)


	 in Method: void <init>(java.io.OutputStream,org.apache.hadoop.crypto.CryptoCodec,byte[],byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #48c3ddba4cc7fcd5037864d87426f9c109e2fe79712ffb95ccae51713c1fbcb)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: specialinvoke r0.<org.apache.hadoop.crypto.CryptoOutputStream: void <init>(java.io.OutputStream,org.apache.hadoop.crypto.CryptoCodec,byte[],byte[],long)>(r1, r2, r3, r4, varReplacer370)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #e045959ed77b475ca864f2ce6128895b6e2052e2c697b1ece6b7cae717710d5a)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: specialinvoke r0.<org.apache.hadoop.crypto.CryptoOutputStream: void <init>(java.io.OutputStream,org.apache.hadoop.crypto.CryptoCodec,byte[],byte[],long)>(r1, r2, r3, r4, varReplacer370)


Findings in Java Class: org.apache.hadoop.fs.crypto.CryptoFSDataOutputStream

	 in Method: void <init>(org.apache.hadoop.fs.FSDataOutputStream,org.apache.hadoop.crypto.CryptoCodec,byte[],byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #48c3ddba4cc7fcd5037864d87426f9c109e2fe79712ffb95ccae51713c1fbcb)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: specialinvoke r0.<org.apache.hadoop.fs.FSDataOutputStream: void <init>(java.io.OutputStream,org.apache.hadoop.fs.FileSystem$Statistics,long)>($r5, varReplacer1216, $l1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #48c3ddba4cc7fcd5037864d87426f9c109e2fe79712ffb95ccae51713c1fbcb)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: specialinvoke r0.<org.apache.hadoop.fs.FSDataOutputStream: void <init>(java.io.OutputStream,org.apache.hadoop.fs.FileSystem$Statistics,long)>($r5, varReplacer1216, $l1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #e045959ed77b475ca864f2ce6128895b6e2052e2c697b1ece6b7cae717710d5a)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: specialinvoke r0.<org.apache.hadoop.fs.FSDataOutputStream: void <init>(java.io.OutputStream,org.apache.hadoop.fs.FileSystem$Statistics,long)>($r5, varReplacer1216, $l1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #e045959ed77b475ca864f2ce6128895b6e2052e2c697b1ece6b7cae717710d5a)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: specialinvoke r0.<org.apache.hadoop.fs.FSDataOutputStream: void <init>(java.io.OutputStream,org.apache.hadoop.fs.FileSystem$Statistics,long)>($r5, varReplacer1216, $l1)


	 in Method: void <init>(org.apache.hadoop.fs.FSDataOutputStream,org.apache.hadoop.crypto.CryptoCodec,int,byte[],byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #48c3ddba4cc7fcd5037864d87426f9c109e2fe79712ffb95ccae51713c1fbcb)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: specialinvoke r0.<org.apache.hadoop.fs.FSDataOutputStream: void <init>(java.io.OutputStream,org.apache.hadoop.fs.FileSystem$Statistics,long)>($r5, varReplacer1215, $l2)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #48c3ddba4cc7fcd5037864d87426f9c109e2fe79712ffb95ccae51713c1fbcb)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: specialinvoke r0.<org.apache.hadoop.fs.FSDataOutputStream: void <init>(java.io.OutputStream,org.apache.hadoop.fs.FileSystem$Statistics,long)>($r5, varReplacer1215, $l2)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #e045959ed77b475ca864f2ce6128895b6e2052e2c697b1ece6b7cae717710d5a)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: specialinvoke r0.<org.apache.hadoop.fs.FSDataOutputStream: void <init>(java.io.OutputStream,org.apache.hadoop.fs.FileSystem$Statistics,long)>($r5, varReplacer1215, $l2)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #e045959ed77b475ca864f2ce6128895b6e2052e2c697b1ece6b7cae717710d5a)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: specialinvoke r0.<org.apache.hadoop.fs.FSDataOutputStream: void <init>(java.io.OutputStream,org.apache.hadoop.fs.FileSystem$Statistics,long)>($r5, varReplacer1215, $l2)


Findings in Java Class: org.apache.hadoop.crypto.CryptoInputStream

	 in Method: void readFully(long,byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #48c3ddba4cc7fcd5037864d87426f9c109e2fe79712ffb95ccae51713c1fbcb)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r0.<org.apache.hadoop.crypto.CryptoInputStream: void readFully(long,byte[],int,int)>(l0, r1, varReplacer349, $i1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #e045959ed77b475ca864f2ce6128895b6e2052e2c697b1ece6b7cae717710d5a)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: virtualinvoke r0.<org.apache.hadoop.crypto.CryptoInputStream: void readFully(long,byte[],int,int)>(l0, r1, varReplacer349, $i1)


Findings in Java Class: org.apache.hadoop.crypto.key.JavaKeyStoreProvider

	 in Method: org.apache.hadoop.fs.permission.FsPermission tryLoadIncompleteFlush(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #5e76ed86baa365b6369ff96d5eaee18e3c398231a8d2e4618b6f2bfac51cb2ce)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r5.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer437, $r4)

		TypestateError violating CrySL rule for java.security.KeyStore (on Object #5e76ed86baa365b6369ff96d5eaee18e3c398231a8d2e4618b6f2bfac51cb2ce)
			Unexpected call to method load on object of type java.security.KeyStore. Expect a call to one of the following methods getKey,getEntry,setEntry
			at statement: virtualinvoke $r5.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer437, $r4)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #5e76ed86baa365b6369ff96d5eaee18e3c398231a8d2e4618b6f2bfac51cb2ce)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r5.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer437, $r4)


	 in Method: org.apache.hadoop.fs.permission.FsPermission loadFromPath(org.apache.hadoop.fs.Path,char[])
		TypestateError violating CrySL rule for java.security.KeyStore (on Object #5e76ed86baa365b6369ff96d5eaee18e3c398231a8d2e4618b6f2bfac51cb2ce)
			Unexpected call to method load on object of type java.security.KeyStore. Expect a call to one of the following methods getKey,getEntry,setEntry
			at statement: virtualinvoke $r10.<java.security.KeyStore: void load(java.io.InputStream,char[])>(r3, r2)


	 in Method: org.apache.hadoop.fs.permission.FsPermission tryLoadFromPath(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)
		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #5e76ed86baa365b6369ff96d5eaee18e3c398231a8d2e4618b6f2bfac51cb2ce)
			Operation on object of type java.security.KeyStore object not completed. Expected call to load
			at statement: $z1 = specialinvoke r0.<org.apache.hadoop.crypto.key.JavaKeyStoreProvider: boolean isBadorWrongPassword(java.io.IOException)>(r23)


	 in Method: void <init>(java.net.URI,org.apache.hadoop.conf.Configuration)
		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #5e76ed86baa365b6369ff96d5eaee18e3c398231a8d2e4618b6f2bfac51cb2ce)
			Operation on object of type java.security.KeyStore object not completed. Expected call to load
			at statement: $r14 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer420)


	 in Method: org.apache.hadoop.fs.permission.FsPermission loadAndReturnPerm(org.apache.hadoop.fs.Path,org.apache.hadoop.fs.Path)
		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #5e76ed86baa365b6369ff96d5eaee18e3c398231a8d2e4618b6f2bfac51cb2ce)
			Operation on object of type java.security.KeyStore object not completed. Expected call to load
			at statement: $z2 = specialinvoke r0.<org.apache.hadoop.crypto.key.JavaKeyStoreProvider: boolean isBadorWrongPassword(java.io.IOException)>(r13)


	 in Method: org.apache.hadoop.crypto.key.KeyProvider$KeyVersion innerSetKeyVersion(java.lang.String,java.lang.String,byte[],java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r3, r4)


Findings in Java Class: org.apache.hadoop.crypto.key.KeyProviderFactory

	 in Method: java.util.List getProviders(org.apache.hadoop.conf.Configuration)
		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #5e76ed86baa365b6369ff96d5eaee18e3c398231a8d2e4618b6f2bfac51cb2ce)
			Operation on object of type java.security.KeyStore object not completed. Expected call to load
			at statement: interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r4)

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #5e76ed86baa365b6369ff96d5eaee18e3c398231a8d2e4618b6f2bfac51cb2ce)
			Operation on object of type java.security.KeyStore object not completed. Expected call to load
			at statement: r4 = staticinvoke <org.apache.hadoop.crypto.key.KeyProviderFactory: org.apache.hadoop.crypto.key.KeyProvider get(java.net.URI,org.apache.hadoop.conf.Configuration)>(r22, r0)


Findings in Java Class: org.apache.hadoop.io.MD5Hash$1

	 in Method: java.security.MessageDigest initialValue()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #eba571a948d383fae590598f8eef07158a4676d9c73759f7b3d7ac62b2f3c69d)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6376)


	 in Method: java.lang.Object initialValue()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #eba571a948d383fae590598f8eef07158a4676d9c73759f7b3d7ac62b2f3c69d)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: return $r1


Findings in Java Class: org.apache.hadoop.io.SequenceFile$Writer

	 in Method: void <init>(org.apache.hadoop.conf.Configuration,org.apache.hadoop.io.SequenceFile$Writer$Option[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #1b9ad0f558fc2e6ceed19279d9c6dd912eebd9f51e2abdce66fa03b9c06d7101)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r39 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7030)


	 in Method: void <init>(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #a3b335dc58f5b5c2a99447979dd6a860021f46c1d0a1907d8f61396d2fb9c3)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r21 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7048)


	 in Method: void <init>(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class,org.apache.hadoop.util.Progressable,org.apache.hadoop.io.SequenceFile$Metadata)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #42b1184317258928fd59e74ea79654947c2139f26eef7a0b5d9848d21bdddb1c)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r22 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7056)


	 in Method: void <init>(org.apache.hadoop.fs.FileSystem,org.apache.hadoop.conf.Configuration,org.apache.hadoop.fs.Path,java.lang.Class,java.lang.Class,int,short,long,org.apache.hadoop.util.Progressable,org.apache.hadoop.io.SequenceFile$Metadata)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #61cf417be877ebcfa28b2d8ae09bf841afa3d4c9fe9f405641f6b7f322142831)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r22 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7060)


Findings in Java Class: org.apache.hadoop.security.alias.JavaKeyStoreProvider

	 in Method: void <init>(java.net.URI,org.apache.hadoop.conf.Configuration)
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #876a0d52c7cbdfe840acbdc447bce4ef70a6b9b4610d6e8b845ded3c96e0b452)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r18.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer12392, $r17)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #876a0d52c7cbdfe840acbdc447bce4ef70a6b9b4610d6e8b845ded3c96e0b452)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r18.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer12392, $r17)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #876a0d52c7cbdfe840acbdc447bce4ef70a6b9b4610d6e8b845ded3c96e0b452)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r18.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer12392, $r17)


	 in Method: org.apache.hadoop.security.alias.CredentialProvider$CredentialEntry innerSetCredential(java.lang.String,char[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, varReplacer12425)


Findings in Java Class: org.apache.hadoop.security.ssl.FileBasedKeyStoresFactory

	 in Method: void init(org.apache.hadoop.security.ssl.SSLFactory$Mode)
		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #39edd228a22ce518bb2b261ff386491fc880eaf500826d56e7ae9a1d5b3d8a95)
			Operation on object of type java.security.KeyStore object not completed. Expected call to load
			at statement: r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(r2)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r89.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r3, $r90)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #42032859f8112374d98fe14ba244f19abbcbbbb690005b4bc1e2565b4d135e7e)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r89.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r3, $r90)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #39edd228a22ce518bb2b261ff386491fc880eaf500826d56e7ae9a1d5b3d8a95)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r3.<java.security.KeyStore: void load(java.io.InputStream,char[])>(r87, $r18)


Findings in Java Class: org.apache.hadoop.security.ssl.ReloadingX509TrustManager

	 in Method: javax.net.ssl.X509TrustManager loadTrustManager()
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #60bebc183685b43a543933d765043a217a42f4c71905b1054b8b2740b53d67f)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r1.<java.security.KeyStore: void load(java.io.InputStream,char[])>(r2, $r11)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r23.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(r1)


Findings in Java Class: org.apache.hadoop.security.ssl.SSLFactory

	 in Method: void init()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r6, $r8, varReplacer13433)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r6, $r8, varReplacer13433)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #e606faf7e58c21659d2b9ac44a8e2cd96e65eb6ee44b065ac6301b4de8e798b9)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer13434)


Findings in Java Class: org.apache.hadoop.security.token.SecretManager$1

	 in Method: java.lang.Object initialValue()
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #20ec34b93cc992a4f0e96fcfe6a8d50be4b1c0c0ad932e052f5939a09f690033)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: return $r1


Findings in Java Class: org.apache.hadoop.security.token.SecretManager

	 in Method: void <init>()
		ConstraintError violating CrySL rule for javax.crypto.KeyGenerator (on Object #cc4e29848daafde6903dfeadedce5a52a9b86895ebfbee82a79ac025b561e78b)
			First parameter (with value "HmacSHA1") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer13862)


	 in Method: javax.crypto.SecretKey createSecretKey(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r0, varReplacer13865)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #a3c1b1df51dbb8fd58b3517276be4beff541b136e15eff4fac00a9046a4695f5)
			Second parameter (with value "HmacSHA1") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r0, varReplacer13865)


Findings in Java Class: org.apache.hadoop.security.token.delegation.web.DelegationTokenManager

	 in Method: void init()
		IncompleteOperationError violating CrySL rule for javax.crypto.KeyGenerator (on Object #cc4e29848daafde6903dfeadedce5a52a9b86895ebfbee82a79ac025b561e78b)
			Operation on object of type javax.crypto.KeyGenerator object not completed. Expected call to generateKey
			at statement: $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.Class getClass()>()


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 41

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 8
	TypestateError: 5
	RequiredPredicateError: 11
	NeverTypeOfError: 8
	IncompleteOperationError: 39
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 78 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.440 min

Current Proejct: clojure-contrib-1.2.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 444.1 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 2.036 s

Current Proejct: pulsar-zookeeper.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 628.6 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 13 analysis seeds within 1 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 13
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.08

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 13
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.15

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 14
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.21

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 14
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.29

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 15
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 15
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.4

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 15
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.47

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 16
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 16
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.56

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 16
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.63

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.65

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.71

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 19
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.68

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 14 of 19
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.74

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 15 of 19
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.79

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 16 of 19
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.84

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 17 of 19
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.89

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 18 of 19
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.95

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r26
		Type: javax.net.ssl.SSLEngine
		Statement: r26 = virtualinvoke r24.<javax.net.ssl.SSLContext: javax.net.ssl.SSLEngine createSSLEngine()>()
		Method: <org.apache.zookeeper.server.NettyServerCnxnFactory: void initSSL(io.netty.channel.ChannelPipeline)>
		SHA-256: 50835494a2f290567dd1f780cfb1e94f2f0d3f88db29fc6f7a2852cc3e033b97
		Secure: false
	Object:
		Variable: r5
		Type: javax.crypto.SecretKey
		Statement: r5 = virtualinvoke r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r13)
		Method: <org.apache.zookeeper.util.PemReader: java.security.PrivateKey loadPrivateKey(java.lang.String,java.util.Optional)>
		SHA-256: 651933658fca0d95665e40b94857c897e7fdeca83c66df5005cb50b2679b2d81
		Secure: false
	Object:
		Variable: r3
		Type: javax.net.ssl.KeyManagerFactory
		Statement: r3 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer206)
		Method: <org.apache.zookeeper.common.X509Util: javax.net.ssl.X509KeyManager createKeyManager(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 13221ea5cbb77d51bb82f80d187e92bca3cb46ef61f1f6f4c7c5bcc3a8a6f49d
		Secure: false
	Object:
		Variable: r24
		Type: javax.net.ssl.SSLContext
		Statement: r24 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3286)
		Method: <org.apache.zookeeper.server.NettyServerCnxnFactory: void initSSL(io.netty.channel.ChannelPipeline)>
		SHA-256: 2471762996c4e2b59682db8c6f1bce3d332e31ae7ca553edd9971e21a3263dc4
		Secure: false
	Object:
		Variable: r4
		Type: javax.crypto.SecretKeyFactory
		Statement: r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>($r12)
		Method: <org.apache.zookeeper.util.PemReader: java.security.PrivateKey loadPrivateKey(java.lang.String,java.util.Optional)>
		SHA-256: 1eeda54420a3a576132bf676de31e349658dacc4aff54a2bee59aff4581c0dc0
		Secure: false
	Object:
		Variable: r4
		Type: javax.net.ssl.TrustManagerFactory
		Statement: r4 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(varReplacer216)
		Method: <org.apache.zookeeper.common.X509Util: javax.net.ssl.X509TrustManager createTrustManager(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>
		SHA-256: a4e4c6ac5fb56c8d4f168de609497b20caa039876a7c4103034ba7c60556f474
		Secure: true
	Object:
		Variable: r6
		Type: javax.crypto.Cipher
		Statement: r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r17)
		Method: <org.apache.zookeeper.util.PemReader: java.security.PrivateKey loadPrivateKey(java.lang.String,java.util.Optional)>
		SHA-256: 5577859ef072cb64d6bf4d0b15c57688a28f61cbb9595831857190c613ac05dc
		Secure: false
	Object:
		Variable: r1
		Type: java.security.KeyStore
		Statement: r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer5205)
		Method: <org.apache.zookeeper.util.PemReader: java.security.KeyStore loadTrustStore(java.io.File)>
		SHA-256: 5f97b893b8c0d349882a091dd476b1186bb25366850ba8632303531cd7f1cf87
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5584)
		Method: <org.apache.zookeeper.server.auth.DigestAuthenticationProvider: java.lang.String generateDigest(java.lang.String)>
		SHA-256: 4ff3fd62f4433609baccfd7f38faacba86d21181419a1d04c60f5c5a267b51c5
		Secure: false
	Object:
		Variable: r5
		Type: javax.net.ssl.TrustManager[]
		Statement: r5 = virtualinvoke r4.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <org.apache.zookeeper.common.X509Util: javax.net.ssl.X509TrustManager createTrustManager(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>
		SHA-256: 5b82aab939da004dea00e9253bb3e4d6a29f3e246c55522146f4c3bbf1742192
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer1081)
		Method: <org.apache.zookeeper.common.PKCS12FileLoader: java.security.KeyStore keyStoreInstance()>
		SHA-256: 2357b255753a14b8e35b32706c09811eac4acdebe5e4f217118140b298df3ee9
		Secure: false
	Object:
		Variable: r4
		Type: javax.net.ssl.KeyManager[]
		Statement: r4 = virtualinvoke r3.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <org.apache.zookeeper.common.X509Util: javax.net.ssl.X509KeyManager createKeyManager(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 47ffce06e6ad4c12d8512b6f72c16c19a8970fb704c429677f8090bbb858c11f
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.cert.PKIXBuilderParameters
		Statement: specialinvoke $r11.<java.security.cert.PKIXBuilderParameters: void <init>(java.security.KeyStore,java.security.cert.CertSelector)>(r2, $r12)
		Method: <org.apache.zookeeper.common.X509Util: javax.net.ssl.X509TrustManager createTrustManager(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>
		SHA-256: 4f2aecbe10640274dc505ea714a388a400621d5951fa41005374799e7c3d2187
		Secure: true
	Object:
		Variable: r5
		Type: java.security.KeyStore
		Statement: r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer5211)
		Method: <org.apache.zookeeper.util.PemReader: java.security.KeyStore loadKeyStore(java.io.File,java.io.File,java.util.Optional)>
		SHA-256: f398cd5cbac609b40037cfe3b4f0a8ff71dfb5744079044933e3b31b3ddcc47f
		Secure: true
	Object:
		Variable: r66
		Type: javax.net.ssl.SSLContext
		Statement: r66 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(r65)
		Method: <org.apache.zookeeper.common.X509Util: org.apache.zookeeper.common.SSLContextAndOptions createSSLContextAndOptions(org.apache.zookeeper.common.ZKConfig)>
		SHA-256: aa2c2fa42ed604ebb008c9d703cf753d0275e803b7303bdee9a39724c3fbc949
		Secure: false
	Object:
		Variable: $r22
		Type: javax.net.ssl.CertPathTrustManagerParameters
		Statement: specialinvoke $r22.<javax.net.ssl.CertPathTrustManagerParameters: void <init>(java.security.cert.CertPathParameters)>(r3)
		Method: <org.apache.zookeeper.common.X509Util: javax.net.ssl.X509TrustManager createTrustManager(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)>
		SHA-256: 55d7fc67b2bcf96007766fd39bc680f08dc2599b86078af67e2d14ed7f07bdb8
		Secure: true
	Object:
		Variable: r2
		Type: byte[]
		Statement: r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <org.apache.zookeeper.server.auth.DigestAuthenticationProvider: java.lang.String generateDigest(java.lang.String)>
		SHA-256: 439159b0f8606c5cfaa38b5ee2ae24b38549247c191a9456c70811a7f7e17948
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer130)
		Method: <org.apache.zookeeper.common.JKSFileLoader: java.security.KeyStore keyStoreInstance()>
		SHA-256: e00a14953c32289c56443b7d2986dc13165eca689927ed840f217cbf98fff2ee
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <org.apache.zookeeper.server.auth.DigestAuthenticationProvider: java.lang.String generateDigest(java.lang.String)>
		SHA-256: fe5432a77924b3454c03bd970ab1e1503028a3d5ce7e83ce22e3607e843e2dfc
		Secure: false

Findings in Java Class: org.apache.zookeeper.util.PemReader

	 in Method: java.security.PrivateKey loadPrivateKey(java.lang.String,java.util.Optional)
		ForbiddenMethodError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Detected call to forbidden method void <init>(char[]) of class javax.crypto.spec.PBEKeySpec. Instead, call method <javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>.
			at statement: specialinvoke $r13.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>($r16)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: r5 = virtualinvoke r4.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r13)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #5577859ef072cb64d6bf4d0b15c57688a28f61cbb9595831857190c613ac05dc)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: r25 = virtualinvoke r24.<javax.crypto.EncryptedPrivateKeyInfo: java.security.spec.PKCS8EncodedKeySpec getKeySpec(javax.crypto.Cipher)>(r6)


Findings in Java Class: org.apache.zookeeper.common.StandardTypeFileKeyStoreLoader

	 in Method: java.security.KeyStore loadKeyStore()
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #e00a14953c32289c56443b7d2986dc13165eca689927ed840f217cbf98fff2ee)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r16.<java.security.KeyStore: void load(java.io.InputStream,char[])>(r1, $r10)


Findings in Java Class: org.apache.zookeeper.common.X509Util

	 in Method: javax.net.ssl.X509KeyManager createKeyManager(java.lang.String,java.lang.String,java.lang.String)
		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #13221ea5cbb77d51bb82f80d187e92bca3cb46ef61f1f6f4c7c5bcc3a8a6f49d)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r3.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r2, $r10)


	 in Method: org.apache.zookeeper.common.SSLContextAndOptions createSSLContextAndOptions(org.apache.zookeeper.common.ZKConfig)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r66.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(r78, r79, varReplacer199)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r66.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(r78, r79, varReplacer199)


Findings in Java Class: org.apache.zookeeper.server.NettyServerCnxnFactory

	 in Method: void initSSL(io.netty.channel.ChannelPipeline)
		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLContext (on Object #2471762996c4e2b59682db8c6f1bce3d332e31ae7ca553edd9971e21a3263dc4)
			Operation on object of type javax.net.ssl.SSLContext object not completed. Expected call to init
			at statement: r24 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3286)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r24.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r9, $r11, varReplacer3292)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r24.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r9, $r11, varReplacer3292)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #2471762996c4e2b59682db8c6f1bce3d332e31ae7ca553edd9971e21a3263dc4)
			First parameter (with value "TLSv1") should be any of {TLSv1.2}
			at statement: r24 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3286)


Findings in Java Class: org.apache.zookeeper.server.auth.DigestAuthenticationProvider

	 in Method: java.lang.String generateDigest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #4ff3fd62f4433609baccfd7f38faacba86d21181419a1d04c60f5c5a267b51c5)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5584)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 19

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 5
	ForbiddenMethodError: 1
	ConstraintError: 2
	NeverTypeOfError: 2
	IncompleteOperationError: 2
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 1 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 5.749 s

Current Proejct: log4j-over-slf4j-1.7.25.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 409.0 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.061 s

Current Proejct: config-1.3.2.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 726.7 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 3.056 s

Current Proejct: listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 390.9 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.256 s

Current Proejct: slf4j-log4j12-1.7.25.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 416.0 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.174 s

Current Proejct: streams-plugin-cassandra-0.6.1-SNAPSHOT.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 501.4 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.488 s

Current Proejct: jackson-dataformat-xml-2.9.8.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 471.4 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.707 s

Current Proejct: streams-plugin-scala-0.6.1-SNAPSHOT.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 412.3 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.131 s

Current Proejct: joda-convert-1.8.1.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 445.1 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.377 s

Current Proejct: commons-codec.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 394.2 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 1 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 5
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.2

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 5
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.4

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 5
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.6

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 5
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.8

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <org.apache.commons.codec.digest.DigestUtils: byte[] md5(byte[])>
		SHA-256: a4b7e841fc462f8d73a506e9805cd4d1408ef7266e8613db710f40ddac41b158
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <org.apache.commons.codec.digest.DigestUtils: byte[] md5(byte[])>
		SHA-256: 4a4dd18e6187b325d9cb47c1cd7cc8489f28760532723e1ba285d1f23b4d1c9d
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r0)
		Method: <org.apache.commons.codec.digest.DigestUtils: java.security.MessageDigest getDigest(java.lang.String)>
		SHA-256: e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337
		Secure: false
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <org.apache.commons.codec.digest.DigestUtils: byte[] sha(byte[])>
		SHA-256: 9fa58850892e4912611f0ae44f0e3f2633efc2e19a1b89ae59ee3d47cebea811
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <org.apache.commons.codec.digest.DigestUtils: byte[] sha(byte[])>
		SHA-256: a857946cfb971a6a666a25c2e3477c877e2f7589100ab4644c7210284daad93e
		Secure: false

Findings in Java Class: org.apache.commons.codec.digest.DigestUtils

	 in Method: java.security.MessageDigest getDigest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			First parameter (with value "SHA") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r0)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r0)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 5

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 2
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.361 s

Current Proejct: clojure-1.2.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 1.266 s 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 1 analysis seeds within 7 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 3
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 3
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r1
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>(r1)
		Method: <clojure.asm.commons.SerialVersionUIDAdder: byte[] computeSHAdigest(byte[])>
		SHA-256: f656c3d414da592bc71caead9ee3e5fff94223aa6cba1aea8fab47f8dc316012
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer832)
		Method: <clojure.asm.commons.SerialVersionUIDAdder: byte[] computeSHAdigest(byte[])>
		SHA-256: 4880f2e7904aa634f54bb2f893374edae72802a7e60ca59f8a52c43e3ff5ee39
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>(r1)
		Method: <clojure.asm.commons.SerialVersionUIDAdder: byte[] computeSHAdigest(byte[])>
		SHA-256: d07457ab9a1509d84a8dcce04f824895e3a79378fa4eca276a400a3637f76cf7
		Secure: false

Findings in Java Class: clojure.asm.commons.SerialVersionUIDAdder

	 in Method: byte[] computeSHAdigest(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #4880f2e7904aa634f54bb2f893374edae72802a7e60ca59f8a52c43e3ff5ee39)
			First parameter (with value "SHA") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer832)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 3

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 1
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 7 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 9.108 min

Current Proejct: streams-plugin-elasticsearch-0.6.1-SNAPSHOT.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 405.8 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.075 s

Current Proejct: httpclient-4.5.4.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 663.7 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 19 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 19
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.05

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 20
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.1

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 21
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.14

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 21
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.19

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 29
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.17

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.2

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 32
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.22

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.24

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 34
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.26

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 36
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.28

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 38
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.29

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.3

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 42
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.31

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 14 of 43
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 15 of 45
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 16 of 47
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.34

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 17 of 48
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.35

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 18 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.32

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 19 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 20 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.35

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 21 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.37

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 22 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.39

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 23 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.4

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 24 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.42

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 25 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.44

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 26 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.46

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 27 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.47

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 28 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.49

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 29 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.51

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 30 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.53

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 31 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.54

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 32 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.56

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 33 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.58

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 34 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.6

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 35 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.61

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 36 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.63

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 37 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.65

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 38 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 39 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.68

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 40 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.7

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 41 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.72

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 42 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.74

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 43 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.75

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 44 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.77

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 45 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.79

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 46 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.81

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 47 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.82

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 48 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.84

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 49 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.86

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 50 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.88

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 51 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.89

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 52 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.91

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 53 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.93

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 54 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.95

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 55 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.96

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 56 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.98

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r1
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] update(byte[])>(r1)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$Handle: byte[] encrypt(byte[])>
		SHA-256: 4db5ff77fc47fbb0db2fa58cb349dd00558cfee6076928d6c2b06a007225c505
		Secure: false
	Object:
		Variable: $r36
		Type: byte[]
		Statement: $r37 = virtualinvoke r10.<java.security.MessageDigest: byte[] digest(byte[])>($r36)
		Method: <org.apache.http.impl.auth.DigestScheme: org.apache.http.Header createDigestHeader(org.apache.http.auth.Credentials,org.apache.http.HttpRequest)>
		SHA-256: 3cf353a004f69d65ef432d35aa7b6c43f53e334c975d655765d7f2d5d48a7fda
		Secure: false
	Object:
		Variable: $r151
		Type: byte[]
		Statement: $r151 = virtualinvoke r10.<java.security.MessageDigest: byte[] digest(byte[])>($r150)
		Method: <org.apache.http.impl.auth.DigestScheme: org.apache.http.Header createDigestHeader(org.apache.http.auth.Credentials,org.apache.http.HttpRequest)>
		SHA-256: 3606ee9580d36126844cc90ecd4773e54c3540ba61da227af5802e98cc6ce9dd
		Secure: false
	Object:
		Variable: varReplacer437
		Type: java.lang.String
		Statement: specialinvoke r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer437)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$Handle: javax.crypto.Cipher initCipher()>
		SHA-256: 6489b686bca1c880c728001889d88032755beb1be066c68aa759cfff67a6f8ce
		Secure: false
	Object:
		Variable: r5
		Type: byte[]
		Statement: r5 = virtualinvoke r18.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r3)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: 298ecbdc05de07fa8243b96b7b8953513eb255dde72086b7d68b11bc72f40bfa
		Secure: false
	Object:
		Variable: r3
		Type: byte[]
		Statement: r4 = virtualinvoke r17.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r3)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: 8c544e0b8e17ee6a08f95b7d3ed00979b0c1372b28e64454f8771ef2823623f8
		Secure: false
	Object:
		Variable: $r37
		Type: byte[]
		Statement: $r37 = virtualinvoke r10.<java.security.MessageDigest: byte[] digest(byte[])>($r36)
		Method: <org.apache.http.impl.auth.DigestScheme: org.apache.http.Header createDigestHeader(org.apache.http.auth.Credentials,org.apache.http.HttpRequest)>
		SHA-256: e648f888c75704bb2e8cef41b8056e31250a21b3539d5ea548b2cf8e03107076
		Secure: false
	Object:
		Variable: $r111
		Type: byte[]
		Statement: $r111 = virtualinvoke r10.<java.security.MessageDigest: byte[] digest(byte[])>($r110)
		Method: <org.apache.http.impl.auth.DigestScheme: org.apache.http.Header createDigestHeader(org.apache.http.auth.Credentials,org.apache.http.HttpRequest)>
		SHA-256: e3c5007c1fd2174ee0e3b25483a626d06cc4dfedb70b6567243dc5301142fec0
		Secure: false
	Object:
		Variable: r12
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer438)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$Handle: javax.crypto.Cipher initCipher()>
		SHA-256: c7250469dd7f7ef3f3bb6f360786a39a3574a53abe0b7f6dac8068e4f8495123
		Secure: false
	Object:
		Variable: r3
		Type: byte[]
		Statement: r3 = virtualinvoke r10.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: byte[] ntlm2SessionResponse(byte[],byte[],byte[])>
		SHA-256: c0f3e7e8a8c5d70f41fedded307610fbc6d232e6a1cd13018dddc296bf160e11
		Secure: false
	Object:
		Variable: r6
		Type: byte[]
		Statement: r6 = virtualinvoke r5.<java.security.MessageDigest: byte[] digest(byte[])>(r19)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$Type3Message: byte[] addGssMicAvsToTargetInfo(byte[],java.security.cert.Certificate)>
		SHA-256: 745328da6ad161cb0f54bd6a808f447fd1afb9bbfd937cb471f4f0e00666bc8
		Secure: true
	Object:
		Variable: r3
		Type: byte[]
		Statement: r5 = virtualinvoke r18.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r3)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: b1c498446616f1f794ef5ed673822b48811747780f76dc24e78a311e8456d69a
		Secure: false
	Object:
		Variable: r7
		Type: javax.crypto.Cipher
		Statement: r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3442)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: byte[] RC4(byte[],byte[])>
		SHA-256: e433c3b264ac45d526e211f94a28feda8d6f1c68ab031dfa2716444815910022
		Secure: false
	Object:
		Variable: r13
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer437)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$Handle: javax.crypto.Cipher initCipher()>
		SHA-256: 488b5f017d9dfcf3443fb1c68d0aa978efdb3b414f33477aa5e8c3bf90ab7fdc
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$HMACMD5: byte[] getOutput()>
		SHA-256: 22505513c95e6063eefdf0c997b443cb4e4a5031da10189b8a77ecfa90349a0a
		Secure: false
	Object:
		Variable: r3
		Type: javax.net.ssl.TrustManagerFactory
		Statement: r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r6)
		Method: <org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore,org.apache.http.conn.ssl.TrustStrategy)>
		SHA-256: 6b27f20073a702916ea38984a07c41336f9d5c31df3fe292ab1e805babfe473c
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: virtualinvoke r0.<java.security.SecureRandom: void nextBytes(byte[])>(r1)
		Method: <org.apache.http.impl.auth.DigestScheme: java.lang.String createCnonce()>
		SHA-256: 156cbf551d6e1beb81241eb72d74c33b8c0683b6a4ddbbd561927c6397757da7
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer3496)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: java.security.Key createDESKey(byte[],int)>
		SHA-256: c57231a014f68a08b552e7a7b4fd48366bb6c102e938cc6f10132684c21f0feb
		Secure: false
	Object:
		Variable: $r150
		Type: byte[]
		Statement: $r151 = virtualinvoke r10.<java.security.MessageDigest: byte[] digest(byte[])>($r150)
		Method: <org.apache.http.impl.auth.DigestScheme: org.apache.http.Header createDigestHeader(org.apache.http.auth.Credentials,org.apache.http.HttpRequest)>
		SHA-256: 1e7f738c754f6c0133fcd7900274dcab708df39d619f56d67e656ce2f9482db1
		Secure: false
	Object:
		Variable: varReplacer3443
		Type: java.lang.String
		Statement: specialinvoke r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer3443)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: byte[] RC4(byte[],byte[])>
		SHA-256: a4711155f5947a217c4340c53009c2dec7ab02e5dda9334282098836fac6f35c
		Secure: false
	Object:
		Variable: r1
		Type: javax.net.ssl.SSLContext
		Statement: r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r14)
		Method: <org.apache.http.conn.ssl.SSLContextBuilder: javax.net.ssl.SSLContext build()>
		SHA-256: 323c65677a5ccffe4cadf1d642bbf7f0cc11c2ad4bf8c847cb9434d4e0c61ec9
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke r15.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$Handle: void <init>(byte[],org.apache.http.impl.auth.NTLMEngineImpl$Mode,boolean)>
		SHA-256: d51d9e50d339c641b61d4ba3fa80118bbe638375baf4d2fbc85e39c18550a5b2
		Secure: false
	Object:
		Variable: $r155
		Type: byte[]
		Statement: $r156 = virtualinvoke r10.<java.security.MessageDigest: byte[] digest(byte[])>($r155)
		Method: <org.apache.http.impl.auth.DigestScheme: org.apache.http.Header createDigestHeader(org.apache.http.auth.Credentials,org.apache.http.HttpRequest)>
		SHA-256: eb59109de525c31de5f9e12daca408474529400d2509035a6392e14ade1d4f13
		Secure: false
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r3 = virtualinvoke r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r0)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: byte[] RC4(byte[],byte[])>
		SHA-256: f6202941bd439f85ecef0a312b1c84967db36819e2140eb8bfc5cb96fecc0f49
		Secure: false
	Object:
		Variable: r7
		Type: byte[]
		Statement: r4 = virtualinvoke r8.<java.security.MessageDigest: byte[] digest(byte[])>(r7)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$Type3Message: byte[] addGssMicAvsToTargetInfo(byte[],java.security.cert.Certificate)>
		SHA-256: f4cb92d663ea523a66832637a2af6d09cfd06da2f571c733d32b7b20dbde9aea
		Secure: false
	Object:
		Variable: r5
		Type: javax.crypto.Cipher
		Statement: r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3468)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: byte[] lmResponse(byte[],byte[])>
		SHA-256: a40ee5c80c452369b2bbd5194de0509571190d594113e56a3a4ad1aac935ec62
		Secure: false
	Object:
		Variable: r5
		Type: javax.crypto.Cipher
		Statement: r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3458)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: byte[] lmHash(java.lang.String)>
		SHA-256: c09e9cb0c643649874d2a08c44e3e52b352044f8a181e5f2c146f9f5ece6cd3c
		Secure: false
	Object:
		Variable: r4
		Type: javax.net.ssl.KeyManagerFactory
		Statement: r4 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r7)
		Method: <org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[],org.apache.http.conn.ssl.PrivateKeyStrategy)>
		SHA-256: e583fd691e38f136ba11f1fe50c9350acdc0da5a7df79230440be603a5329624
		Secure: false
	Object:
		Variable: r4
		Type: byte[]
		Statement: r6 = virtualinvoke r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r4)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: byte[] lmHash(java.lang.String)>
		SHA-256: 783bef0e378e78e183fe641c8af51ce20770cb0e3148505b1bf67f3e0df957d6
		Secure: false
	Object:
		Variable: r17
		Type: javax.crypto.Cipher
		Statement: r17 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3325)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: 8f1647d38cf1d2dd47f47e8782eaf846adee647a841bba63ba8c91efcba0e38f
		Secure: false
	Object:
		Variable: r19
		Type: byte[]
		Statement: r6 = virtualinvoke r5.<java.security.MessageDigest: byte[] digest(byte[])>(r19)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$Type3Message: byte[] addGssMicAvsToTargetInfo(byte[],java.security.cert.Certificate)>
		SHA-256: e8a1fa835b62da682d8b494d73b2a635e2a74b070251470a417a2d08c8e91d78
		Secure: true
	Object:
		Variable: r6
		Type: javax.net.ssl.SSLContext
		Statement: r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer175)
		Method: <org.apache.http.conn.ssl.SSLContexts: javax.net.ssl.SSLContext createDefault()>
		SHA-256: 7428232105ffe718e0db679726f5514853163cb4e34b99b49e4bcb7597ee1a4d
		Secure: false
	Object:
		Variable: r4
		Type: byte[]
		Statement: r4 = virtualinvoke r17.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r3)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: 51ebfe205ce0e9b1d6d5f4b5331c1e59573af5415f24889a693b2d75522d9e54
		Secure: false
	Object:
		Variable: r4
		Type: byte[]
		Statement: r4 = virtualinvoke r8.<java.security.MessageDigest: byte[] digest(byte[])>(r7)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$Type3Message: byte[] addGssMicAvsToTargetInfo(byte[],java.security.cert.Certificate)>
		SHA-256: e7106d47e8fbbf44418721c82f064499f0c89a121f16bd8aabf5c5dea79deb0a
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3504)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: java.security.MessageDigest getMD5()>
		SHA-256: ab93564e623f33a029126121c0293286c0aadf48a5b3a19b3c74b8d4da1b0116
		Secure: false
	Object:
		Variable: varReplacer3496
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer3496)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: java.security.Key createDESKey(byte[],int)>
		SHA-256: d0f7e3a8676ee53b38057fecdda12f1ff08822e839f9171126a9fe13ec1949d3
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r0)
		Method: <org.apache.http.impl.auth.DigestScheme: java.security.MessageDigest createMessageDigest(java.lang.String)>
		SHA-256: bd3823a5d9aa45b9e8dcdb57b0361fb1187bdae63ecc0a8465b6a3387976558
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: $r6 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>(r1)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$HMACMD5: byte[] getOutput()>
		SHA-256: bc8aef628fba0720e0f9048c0b8d277cbd4b156ad83f38497d37a2147e7a01d2
		Secure: false
	Object:
		Variable: r18
		Type: javax.crypto.Cipher
		Statement: r18 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3318)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: 64ee71ae8d81979502aedb89a62a9c7eefc9e2ca10d419265a562c811dc2e139
		Secure: false
	Object:
		Variable: r6
		Type: byte[]
		Statement: r6 = virtualinvoke r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r4)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: byte[] lmHash(java.lang.String)>
		SHA-256: 630fb4138afd719581916fcb0ac190179d90373af7ae8db362e4a0f23f37ede
		Secure: false
	Object:
		Variable: $r110
		Type: byte[]
		Statement: $r111 = virtualinvoke r10.<java.security.MessageDigest: byte[] digest(byte[])>($r110)
		Method: <org.apache.http.impl.auth.DigestScheme: org.apache.http.Header createDigestHeader(org.apache.http.auth.Credentials,org.apache.http.HttpRequest)>
		SHA-256: c935514416b40b81a8c0a9fae4b17978168e98c6b1ef21c9844d3b3104353ce9
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>(r1)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$HMACMD5: byte[] getOutput()>
		SHA-256: 42e4e815460f87460b7298ed2cdec1f4eebbc08bbcb97d21ac11df00c0389ca7
		Secure: false
	Object:
		Variable: r1
		Type: javax.crypto.Cipher
		Statement: r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer441)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$Handle: javax.crypto.Cipher initCipher()>
		SHA-256: 6476e12024219bcd456ae862dd19c0dd09d327c443035a54ea7679649f401ffd
		Secure: false
	Object:
		Variable: r14
		Type: byte[]
		Statement: r14 = virtualinvoke $r13.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$HMACMD5: void <init>(byte[])>
		SHA-256: e6ce6ac68411b57059e1bbb6af2baaf55aaffce358f53237b972fc6fe5d99b85
		Secure: false
	Object:
		Variable: r9
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer3443)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: byte[] RC4(byte[],byte[])>
		SHA-256: 698ed239c6c381a25f0671c2e47f58b10b950ab9da892d2c7701bae5e08fbaf8
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r0)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: byte[] RC4(byte[],byte[])>
		SHA-256: b82d1849c7337db6637c2fc3d1a3052af43c59fa37baba925847f124876581ef
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] update(byte[])>(r1)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$Handle: byte[] encrypt(byte[])>
		SHA-256: a265e168c9d556bfeb50c0b8a502ce5107d6118476a184863edcc313cebd112d
		Secure: false
	Object:
		Variable: varReplacer438
		Type: java.lang.String
		Statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer438)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$Handle: javax.crypto.Cipher initCipher()>
		SHA-256: 534b50206a685a8f37ba50e654f86d2421555a46a19e051f6f6388aaccaf1985
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$Handle: void advanceMessageSequence()>
		SHA-256: b4114d6952b8200fb672057ec3fd497aa1772392a87f8062974400f9874147c9
		Secure: false
	Object:
		Variable: r6
		Type: byte[]
		Statement: r6 = virtualinvoke r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r1)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: byte[] lmResponse(byte[],byte[])>
		SHA-256: 709642c2bbfffb4afd1c653cc908f558e5999ff98cf098e83601388c64d2d3de
		Secure: false
	Object:
		Variable: r5
		Type: java.lang.Object[]
		Statement: r5 = virtualinvoke r4.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[],org.apache.http.conn.ssl.PrivateKeyStrategy)>
		SHA-256: f2d1963fc56e84fa18233366c4954d4fe9ee70a1b96261469237a512dbb35b80
		Secure: false
	Object:
		Variable: $r156
		Type: byte[]
		Statement: $r156 = virtualinvoke r10.<java.security.MessageDigest: byte[] digest(byte[])>($r155)
		Method: <org.apache.http.impl.auth.DigestScheme: org.apache.http.Header createDigestHeader(org.apache.http.auth.Credentials,org.apache.http.HttpRequest)>
		SHA-256: 16adf8de92bf8819a09dda245c7a6d2700f29945715db3ffb9d42d6662b23e0f
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: r6 = virtualinvoke r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r1)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: byte[] lmResponse(byte[],byte[])>
		SHA-256: b26464e44971761bc16eb31b9c4fee8a67678d7feaceaebd6155060791d8c73c
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.apache.http.impl.auth.DigestScheme: java.lang.String createCnonce()>
		SHA-256: 3ab96751e89c150e150dd9be52b85fae8d30261ca023ff283d340abfdbc1669
		Secure: true
	Object:
		Variable: r4
		Type: java.lang.Object[]
		Statement: r4 = virtualinvoke r3.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore,org.apache.http.conn.ssl.TrustStrategy)>
		SHA-256: 5a03678b5fe66b52cc209e417248044007623f8065d27a13e827b83c6faea2f5
		Secure: false
	Object:
		Variable: r5
		Type: java.security.MessageDigest
		Statement: r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2309)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$Type3Message: byte[] addGssMicAvsToTargetInfo(byte[],java.security.cert.Certificate)>
		SHA-256: d01787011d841fb77c18404f7591c58288994bf0ec9424a8a3fd868a11540f3f
		Secure: true
	Object:
		Variable: r14
		Type: java.security.SecureRandom
		Statement: r14 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer3508)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: void <clinit>()>
		SHA-256: 7d07deaf83dfe522e65707b1eff4c73e07116f26c6b33e5786e1eaa92bd61987
		Secure: true

Findings in Java Class: org.apache.http.conn.ssl.SSLContexts

	 in Method: javax.net.ssl.SSLContext createSystemDefault()
		ForbiddenMethodError violating CrySL rule for javax.net.ssl.SSLContext
			Detected call to forbidden method javax.net.ssl.SSLContext getDefault() of class javax.net.ssl.SSLContext. Instead, call method <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>.
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getDefault()>()


	 in Method: javax.net.ssl.SSLContext createDefault()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer172, varReplacer172, varReplacer172)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer172, varReplacer172, varReplacer172)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #7428232105ffe718e0db679726f5514853163cb4e34b99b49e4bcb7597ee1a4d)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer175)


Findings in Java Class: org.apache.http.conn.ssl.SSLContextBuilder

	 in Method: org.apache.http.conn.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[],org.apache.http.conn.ssl.PrivateKeyStrategy)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r4.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r1, r2)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #e583fd691e38f136ba11f1fe50c9350acdc0da5a7df79230440be603a5329624)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r4.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r1, r2)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #e583fd691e38f136ba11f1fe50c9350acdc0da5a7df79230440be603a5329624)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r4.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r1, r2)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #e583fd691e38f136ba11f1fe50c9350acdc0da5a7df79230440be603a5329624)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r4.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r1, r2)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #e583fd691e38f136ba11f1fe50c9350acdc0da5a7df79230440be603a5329624)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r4.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r1, r2)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #e583fd691e38f136ba11f1fe50c9350acdc0da5a7df79230440be603a5329624)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r4.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r1, r2)


	 in Method: javax.net.ssl.SSLContext build()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #323c65677a5ccffe4cadf1d642bbf7f0cc11c2ad4bf8c847cb9434d4e0c61ec9)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r14)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r17, $r18, $r19)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r17, $r18, $r19)


	 in Method: org.apache.http.conn.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore,org.apache.http.conn.ssl.TrustStrategy)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r3.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(r1)


Findings in Java Class: org.apache.http.impl.auth.DigestScheme

	 in Method: java.security.MessageDigest createMessageDigest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #bd3823a5d9aa45b9e8dcdb57b0361fb1187bdae63ecc0a8465b6a3387976558)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r0)


Findings in Java Class: org.apache.http.impl.auth.HttpEntityDigester

	 in Method: void close()
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #bd3823a5d9aa45b9e8dcdb57b0361fb1187bdae63ecc0a8465b6a3387976558)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: org.apache.http.impl.auth.NTLMEngineImpl$Handle

	 in Method: javax.crypto.Cipher initCipher()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer438)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r1.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer440, r12)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #488b5f017d9dfcf3443fb1c68d0aa978efdb3b414f33477aa5e8c3bf90ab7fdc)
			Second parameter (with value "RC4") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer437)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #6476e12024219bcd456ae862dd19c0dd09d327c443035a54ea7679649f401ffd)
			First parameter (with value "RC4") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer441)


	 in Method: void <init>(byte[],org.apache.http.impl.auth.NTLMEngineImpl$Mode,boolean)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #ab93564e623f33a029126121c0293286c0aadf48a5b3a19b3c74b8d4da1b0116)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r8 = virtualinvoke r3.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: org.apache.http.impl.auth.CredSspScheme

	 in Method: org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #6476e12024219bcd456ae862dd19c0dd09d327c443035a54ea7679649f401ffd)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to doFinal
			at statement: specialinvoke r89.<org.apache.http.impl.auth.NTLMEngineImpl$Handle: void <init>(byte[],org.apache.http.impl.auth.NTLMEngineImpl$Mode,boolean)>(r77, $r50, varReplacer3233)


	 in Method: void verifyPubKeyAuthResponse(byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #6476e12024219bcd456ae862dd19c0dd09d327c443035a54ea7679649f401ffd)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: r2 = virtualinvoke $r3.<org.apache.http.impl.auth.NTLMEngineImpl$Handle: byte[] decryptAndVerifySignedMessage(byte[])>(r1)


	 in Method: byte[] createAuthInfo(org.apache.http.auth.NTCredentials)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #6476e12024219bcd456ae862dd19c0dd09d327c443035a54ea7679649f401ffd)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: $r50 = virtualinvoke $r49.<org.apache.http.impl.auth.NTLMEngineImpl$Handle: byte[] signAndEncryptMessage(byte[])>(r16)


	 in Method: void wrap(java.nio.ByteBuffer,java.nio.ByteBuffer)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #6476e12024219bcd456ae862dd19c0dd09d327c443035a54ea7679649f401ffd)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: r3 = specialinvoke r0.<org.apache.http.impl.auth.CredSspScheme: javax.net.ssl.SSLEngine getSSLEngine()>()


Findings in Java Class: org.apache.http.impl.auth.NTLMEngineImpl$CipherGen

	 in Method: byte[] getLanManagerSessionKey()
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #64ee71ae8d81979502aedb89a62a9c7eefc9e2ca10d419265a562c811dc2e139)
			First parameter (with value "DES/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r18 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3318)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r17.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3322, r1)


Findings in Java Class: org.apache.http.impl.auth.NTLMEngineImpl

	 in Method: byte[] RC4(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3444, r9)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #e433c3b264ac45d526e211f94a28feda8d6f1c68ab031dfa2716444815910022)
			First parameter (with value "RC4") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3442)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer3443)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #698ed239c6c381a25f0671c2e47f58b10b950ab9da892d2c7701bae5e08fbaf8)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer3443)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #698ed239c6c381a25f0671c2e47f58b10b950ab9da892d2c7701bae5e08fbaf8)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer3443)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #698ed239c6c381a25f0671c2e47f58b10b950ab9da892d2c7701bae5e08fbaf8)
			Second parameter (with value "RC4") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer3443)


	 in Method: byte[] lmHash(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #c09e9cb0c643649874d2a08c44e3e52b352044f8a181e5f2c146f9f5ece6cd3c)
			First parameter (with value "DES/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3458)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #c09e9cb0c643649874d2a08c44e3e52b352044f8a181e5f2c146f9f5ece6cd3c)
			Unexpected call to method init on object of type javax.crypto.Cipher.
			at statement: virtualinvoke r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3449, r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3449, r3)


	 in Method: byte[] lmResponse(byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #a40ee5c80c452369b2bbd5194de0509571190d594113e56a3a4ad1aac935ec62)
			First parameter (with value "DES/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3468)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3469, r3)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #a40ee5c80c452369b2bbd5194de0509571190d594113e56a3a4ad1aac935ec62)
			Unexpected call to method init on object of type javax.crypto.Cipher.
			at statement: virtualinvoke r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3469, r3)


	 in Method: java.security.Key createDESKey(byte[],int)
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #c57231a014f68a08b552e7a7b4fd48366bb6c102e938cc6f10132684c21f0feb)
			Second parameter (with value "DES") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer3496)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer3496)


	 in Method: java.security.MessageDigest getMD5()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ab93564e623f33a029126121c0293286c0aadf48a5b3a19b3c74b8d4da1b0116)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3504)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 57

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 12
	IncompleteOperationError: 4
	TypestateError: 4
	RequiredPredicateError: 14
	ForbiddenMethodError: 1
	NeverTypeOfError: 7
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 13 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 15.94 s

Current Proejct: maven-plugin-plugin-3.4.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 421.7 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.289 s

Current Proejct: catalina-storeconfig.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 491.3 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.466 s

Current Proejct: google-api-services-youtube-v3-rev178-1.22.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 484.6 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 2.109 s

Current Proejct: streams-converters-0.6.1-SNAPSHOT.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 531.9 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.501 s

Current Proejct: maven-aether-provider-3.3.3.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 411.5 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.303 s

Current Proejct: maven-core-3.3.3.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 664.7 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 3.028 s

Current Proejct: cassandra-driver-core-3.3.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 624.3 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 3 analysis seeds within 1 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 4
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.25

Exception in thread "main" java.lang.ClassCastException: soot.jimple.internal.JReturnVoidStmt cannot be cast to soot.jimple.internal.JAssignStmt
	at crypto.analysis.errors.AbstractError.<init>(AbstractError.java:28)
	at crypto.analysis.errors.ErrorWithObjectAllocation.<init>(ErrorWithObjectAllocation.java:15)
	at crypto.analysis.errors.IncompleteOperationError.<init>(IncompleteOperationError.java:27)
	at crypto.analysis.AnalysisSeedWithSpecification.computeTypestateErrorsForEndOfObjectLifeTime(AnalysisSeedWithSpecification.java:214)
	at crypto.analysis.AnalysisSeedWithSpecification.execute(AnalysisSeedWithSpecification.java:136)
	at crypto.analysis.CryptoScanner.scan(CryptoScanner.java:83)
	at crypto.HeadlessCryptoScanner$3.internalTransform(HeadlessCryptoScanner.java:275)
	at soot.SceneTransformer.transform(SceneTransformer.java:36)
	at soot.Transform.apply(Transform.java:102)
	at soot.ScenePack.internalApply(ScenePack.java:35)
	at soot.Pack.apply(Pack.java:117)
	at crypto.HeadlessCryptoScanner.analyse(HeadlessCryptoScanner.java:199)
	at crypto.HeadlessCryptoScanner.exec(HeadlessCryptoScanner.java:167)
	at crypto.HeadlessCryptoScanner.main(HeadlessCryptoScanner.java:72)

Current Proejct: cassandra-all-3.11.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 3.105 s 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 22 analysis seeds within 5 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 22
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.05

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.09

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.13

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.17

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 24
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.21

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 24
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.25

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 24
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.29

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 24
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.cli.CommandLineParser: org.apache.commons.cli.CommandLine parse(org.apache.commons.cli.Options,java.lang.String[],boolean)> for class org.apache.commons.cli.GnuParser
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.cli.CommandLineParser: org.apache.commons.cli.CommandLine parse(org.apache.commons.cli.Options,java.lang.String[],boolean)> for class org.apache.commons.cli.GnuParser
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.cli.CommandLineParser: org.apache.commons.cli.CommandLine parse(org.apache.commons.cli.Options,java.lang.String[],boolean)> for class org.apache.commons.cli.GnuParser
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.cli.CommandLineParser: org.apache.commons.cli.CommandLine parse(org.apache.commons.cli.Options,java.lang.String[],boolean)> for class org.apache.commons.cli.GnuParser
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.cli.CommandLineParser: org.apache.commons.cli.CommandLine parse(org.apache.commons.cli.Options,java.lang.String[])> for class org.apache.commons.cli.PosixParser
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.cli.CommandLineParser: org.apache.commons.cli.CommandLine parse(org.apache.commons.cli.Options,java.lang.String[],boolean)> for class org.apache.commons.cli.GnuParser
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 24
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.38

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 24
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.42

[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.util.Set: boolean removeAll(java.util.Collection)> for class org.apache.cassandra.hints.HintsDescriptor
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.util.Set: boolean isEmpty()> for class org.apache.cassandra.hints.HintsDescriptor
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.util.Set: boolean contains(java.lang.Object)> for class org.apache.cassandra.hints.HintsDescriptor
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.util.Collection: java.util.Iterator iterator()> for class org.apache.cassandra.hints.HintsDescriptor
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 24
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.46

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 24
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.cli.CommandLineParser: org.apache.commons.cli.CommandLine parse(org.apache.commons.cli.Options,java.lang.String[],boolean)> for class org.apache.commons.cli.GnuParser
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 25
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.52

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 14 of 25
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.56

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 15 of 25
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.6

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 16 of 26
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.62

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 17 of 26
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.65

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 18 of 27
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

Killed

Current Proejct: freemarker.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 1.244 s 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 3 analysis seeds within 1 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 4
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.25

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 5
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.4

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 5
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.6

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 5
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.8

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r3
		Type: java.security.MessageDigest
		Statement: r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3904)
		Method: <freemarker.debug.impl.DebuggerServer$DebuggerAuthProtocol: void run()>
		SHA-256: d31098449cfd82cccfbaa074f59b219f7433edcb3e4fccee5e7125fd9cdf95c0
		Secure: false
	Object:
		Variable: r5
		Type: java.security.MessageDigest
		Statement: r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3900)
		Method: <freemarker.debug.DebuggerClient: freemarker.debug.Debugger getDebugger(java.net.InetAddress,int,java.lang.String)>
		SHA-256: 4a2a508c64d226cc41fd258d30519de88f8baad7bb4a86b6d94f406e0114f8c
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <freemarker.debug.impl.DebuggerServer: void <clinit>()>
		SHA-256: 99e9f61513670856546af8dc411292b93cd42252fef81d06ed6616d5e45e279a
		Secure: true
	Object:
		Variable: $r16
		Type: byte[]
		Statement: $r16 = virtualinvoke r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <freemarker.debug.impl.DebuggerServer$DebuggerAuthProtocol: void run()>
		SHA-256: 547889ec93a353efcfca8957a361f85e2f91909db8e35cc0c4c5d6a5c49cd8d1
		Secure: false
	Object:
		Variable: $r16
		Type: byte[]
		Statement: $r16 = virtualinvoke r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <freemarker.debug.DebuggerClient: freemarker.debug.Debugger getDebugger(java.net.InetAddress,int,java.lang.String)>
		SHA-256: 3c48ad5ab9feb9c08b178680e379e8e5887cd98a88a9b2598d432aea84462aa8
		Secure: false

Findings in Java Class: freemarker.debug.DebuggerClient

	 in Method: freemarker.debug.Debugger getDebugger(java.net.InetAddress,int,java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #4a2a508c64d226cc41fd258d30519de88f8baad7bb4a86b6d94f406e0114f8c)
			First parameter (with value "SHA") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3900)


Findings in Java Class: freemarker.debug.impl.DebuggerServer$DebuggerAuthProtocol

	 in Method: void run()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #d31098449cfd82cccfbaa074f59b219f7433edcb3e4fccee5e7125fd9cdf95c0)
			First parameter (with value "SHA") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3904)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 5

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 2
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 8 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 13.39 s

Current Proejct: json-path-2.4.0.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 563.0 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.876 s

Current Proejct: arquillian-testng.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 547.4 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.475 s

Current Proejct: lucene-test-framework-5.5.4.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 593.7 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 1 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 1 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 5.302 s

Current Proejct: juneau-rest-client-7.2.1.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 591.7 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 2 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 3
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 3
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r3
		Type: javax.net.ssl.TrustManager[]
		Statement: r3 = virtualinvoke r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <org.apache.juneau.rest.client.SimpleX509TrustManager: void <init>(boolean)>
		SHA-256: d84ce3b64211cf9fd709badebcbd03e5657b4e169158e7678ec167672a298cda
		Secure: false
	Object:
		Variable: r1
		Type: java.security.KeyStore
		Statement: r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer499)
		Method: <org.apache.juneau.rest.client.SimpleX509TrustManager: void <init>(boolean)>
		SHA-256: 1294617cf660e0e5bb71e4861ece4e5d007f1e5e7e97a797693e82a65bd91b5d
		Secure: false
	Object:
		Variable: r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r5)
		Method: <org.apache.juneau.rest.client.SimpleX509TrustManager: void <init>(boolean)>
		SHA-256: 9d277978c3c27ac2cf931248270a6b0b9f6796e638c830b21956537e8aba541f
		Secure: false

Findings in Java Class: org.apache.juneau.rest.client.SimpleX509TrustManager

	 in Method: void <init>(boolean)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(r1)

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #1294617cf660e0e5bb71e4861ece4e5d007f1e5e7e97a797693e82a65bd91b5d)
			Operation on object of type java.security.KeyStore object not completed. Expected call to load
			at statement: virtualinvoke r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(r1)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 3

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 1
	IncompleteOperationError: 1
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.967 s
