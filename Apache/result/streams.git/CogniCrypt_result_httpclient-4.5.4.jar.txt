[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 663.7 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 19 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 19
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.05

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 20
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.1

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 21
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.14

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 21
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.19

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 29
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.17

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.2

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 32
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.22

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.24

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 34
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.26

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 36
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.28

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 38
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.29

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.3

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 42
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.31

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 14 of 43
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 15 of 45
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 16 of 47
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.34

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 17 of 48
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.35

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 18 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.32

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 19 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 20 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.35

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 21 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.37

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 22 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.39

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 23 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.4

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 24 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.42

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 25 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.44

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 26 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.46

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 27 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.47

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 28 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.49

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 29 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.51

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 30 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.53

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 31 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.54

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 32 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.56

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 33 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.58

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 34 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.6

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 35 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.61

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 36 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.63

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 37 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.65

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 38 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 39 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.68

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 40 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.7

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 41 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.72

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 42 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.74

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 43 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.75

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 44 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.77

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 45 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.79

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 46 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.81

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 47 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.82

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 48 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.84

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 49 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.86

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 50 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.88

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 51 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.89

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 52 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.91

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 53 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.93

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 54 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.95

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 55 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.96

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 56 of 57
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.98

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r1
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] update(byte[])>(r1)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$Handle: byte[] encrypt(byte[])>
		SHA-256: 4db5ff77fc47fbb0db2fa58cb349dd00558cfee6076928d6c2b06a007225c505
		Secure: false
	Object:
		Variable: $r36
		Type: byte[]
		Statement: $r37 = virtualinvoke r10.<java.security.MessageDigest: byte[] digest(byte[])>($r36)
		Method: <org.apache.http.impl.auth.DigestScheme: org.apache.http.Header createDigestHeader(org.apache.http.auth.Credentials,org.apache.http.HttpRequest)>
		SHA-256: 3cf353a004f69d65ef432d35aa7b6c43f53e334c975d655765d7f2d5d48a7fda
		Secure: false
	Object:
		Variable: $r151
		Type: byte[]
		Statement: $r151 = virtualinvoke r10.<java.security.MessageDigest: byte[] digest(byte[])>($r150)
		Method: <org.apache.http.impl.auth.DigestScheme: org.apache.http.Header createDigestHeader(org.apache.http.auth.Credentials,org.apache.http.HttpRequest)>
		SHA-256: 3606ee9580d36126844cc90ecd4773e54c3540ba61da227af5802e98cc6ce9dd
		Secure: false
	Object:
		Variable: varReplacer437
		Type: java.lang.String
		Statement: specialinvoke r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer437)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$Handle: javax.crypto.Cipher initCipher()>
		SHA-256: 6489b686bca1c880c728001889d88032755beb1be066c68aa759cfff67a6f8ce
		Secure: false
	Object:
		Variable: r5
		Type: byte[]
		Statement: r5 = virtualinvoke r18.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r3)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: 298ecbdc05de07fa8243b96b7b8953513eb255dde72086b7d68b11bc72f40bfa
		Secure: false
	Object:
		Variable: r3
		Type: byte[]
		Statement: r4 = virtualinvoke r17.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r3)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: 8c544e0b8e17ee6a08f95b7d3ed00979b0c1372b28e64454f8771ef2823623f8
		Secure: false
	Object:
		Variable: $r37
		Type: byte[]
		Statement: $r37 = virtualinvoke r10.<java.security.MessageDigest: byte[] digest(byte[])>($r36)
		Method: <org.apache.http.impl.auth.DigestScheme: org.apache.http.Header createDigestHeader(org.apache.http.auth.Credentials,org.apache.http.HttpRequest)>
		SHA-256: e648f888c75704bb2e8cef41b8056e31250a21b3539d5ea548b2cf8e03107076
		Secure: false
	Object:
		Variable: $r111
		Type: byte[]
		Statement: $r111 = virtualinvoke r10.<java.security.MessageDigest: byte[] digest(byte[])>($r110)
		Method: <org.apache.http.impl.auth.DigestScheme: org.apache.http.Header createDigestHeader(org.apache.http.auth.Credentials,org.apache.http.HttpRequest)>
		SHA-256: e3c5007c1fd2174ee0e3b25483a626d06cc4dfedb70b6567243dc5301142fec0
		Secure: false
	Object:
		Variable: r12
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer438)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$Handle: javax.crypto.Cipher initCipher()>
		SHA-256: c7250469dd7f7ef3f3bb6f360786a39a3574a53abe0b7f6dac8068e4f8495123
		Secure: false
	Object:
		Variable: r3
		Type: byte[]
		Statement: r3 = virtualinvoke r10.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: byte[] ntlm2SessionResponse(byte[],byte[],byte[])>
		SHA-256: c0f3e7e8a8c5d70f41fedded307610fbc6d232e6a1cd13018dddc296bf160e11
		Secure: false
	Object:
		Variable: r6
		Type: byte[]
		Statement: r6 = virtualinvoke r5.<java.security.MessageDigest: byte[] digest(byte[])>(r19)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$Type3Message: byte[] addGssMicAvsToTargetInfo(byte[],java.security.cert.Certificate)>
		SHA-256: 745328da6ad161cb0f54bd6a808f447fd1afb9bbfd937cb471f4f0e00666bc8
		Secure: true
	Object:
		Variable: r3
		Type: byte[]
		Statement: r5 = virtualinvoke r18.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r3)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: b1c498446616f1f794ef5ed673822b48811747780f76dc24e78a311e8456d69a
		Secure: false
	Object:
		Variable: r7
		Type: javax.crypto.Cipher
		Statement: r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3442)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: byte[] RC4(byte[],byte[])>
		SHA-256: e433c3b264ac45d526e211f94a28feda8d6f1c68ab031dfa2716444815910022
		Secure: false
	Object:
		Variable: r13
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer437)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$Handle: javax.crypto.Cipher initCipher()>
		SHA-256: 488b5f017d9dfcf3443fb1c68d0aa978efdb3b414f33477aa5e8c3bf90ab7fdc
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$HMACMD5: byte[] getOutput()>
		SHA-256: 22505513c95e6063eefdf0c997b443cb4e4a5031da10189b8a77ecfa90349a0a
		Secure: false
	Object:
		Variable: r3
		Type: javax.net.ssl.TrustManagerFactory
		Statement: r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r6)
		Method: <org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore,org.apache.http.conn.ssl.TrustStrategy)>
		SHA-256: 6b27f20073a702916ea38984a07c41336f9d5c31df3fe292ab1e805babfe473c
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: virtualinvoke r0.<java.security.SecureRandom: void nextBytes(byte[])>(r1)
		Method: <org.apache.http.impl.auth.DigestScheme: java.lang.String createCnonce()>
		SHA-256: 156cbf551d6e1beb81241eb72d74c33b8c0683b6a4ddbbd561927c6397757da7
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer3496)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: java.security.Key createDESKey(byte[],int)>
		SHA-256: c57231a014f68a08b552e7a7b4fd48366bb6c102e938cc6f10132684c21f0feb
		Secure: false
	Object:
		Variable: $r150
		Type: byte[]
		Statement: $r151 = virtualinvoke r10.<java.security.MessageDigest: byte[] digest(byte[])>($r150)
		Method: <org.apache.http.impl.auth.DigestScheme: org.apache.http.Header createDigestHeader(org.apache.http.auth.Credentials,org.apache.http.HttpRequest)>
		SHA-256: 1e7f738c754f6c0133fcd7900274dcab708df39d619f56d67e656ce2f9482db1
		Secure: false
	Object:
		Variable: varReplacer3443
		Type: java.lang.String
		Statement: specialinvoke r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer3443)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: byte[] RC4(byte[],byte[])>
		SHA-256: a4711155f5947a217c4340c53009c2dec7ab02e5dda9334282098836fac6f35c
		Secure: false
	Object:
		Variable: r1
		Type: javax.net.ssl.SSLContext
		Statement: r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r14)
		Method: <org.apache.http.conn.ssl.SSLContextBuilder: javax.net.ssl.SSLContext build()>
		SHA-256: 323c65677a5ccffe4cadf1d642bbf7f0cc11c2ad4bf8c847cb9434d4e0c61ec9
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke r15.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$Handle: void <init>(byte[],org.apache.http.impl.auth.NTLMEngineImpl$Mode,boolean)>
		SHA-256: d51d9e50d339c641b61d4ba3fa80118bbe638375baf4d2fbc85e39c18550a5b2
		Secure: false
	Object:
		Variable: $r155
		Type: byte[]
		Statement: $r156 = virtualinvoke r10.<java.security.MessageDigest: byte[] digest(byte[])>($r155)
		Method: <org.apache.http.impl.auth.DigestScheme: org.apache.http.Header createDigestHeader(org.apache.http.auth.Credentials,org.apache.http.HttpRequest)>
		SHA-256: eb59109de525c31de5f9e12daca408474529400d2509035a6392e14ade1d4f13
		Secure: false
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r3 = virtualinvoke r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r0)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: byte[] RC4(byte[],byte[])>
		SHA-256: f6202941bd439f85ecef0a312b1c84967db36819e2140eb8bfc5cb96fecc0f49
		Secure: false
	Object:
		Variable: r7
		Type: byte[]
		Statement: r4 = virtualinvoke r8.<java.security.MessageDigest: byte[] digest(byte[])>(r7)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$Type3Message: byte[] addGssMicAvsToTargetInfo(byte[],java.security.cert.Certificate)>
		SHA-256: f4cb92d663ea523a66832637a2af6d09cfd06da2f571c733d32b7b20dbde9aea
		Secure: false
	Object:
		Variable: r5
		Type: javax.crypto.Cipher
		Statement: r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3468)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: byte[] lmResponse(byte[],byte[])>
		SHA-256: a40ee5c80c452369b2bbd5194de0509571190d594113e56a3a4ad1aac935ec62
		Secure: false
	Object:
		Variable: r5
		Type: javax.crypto.Cipher
		Statement: r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3458)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: byte[] lmHash(java.lang.String)>
		SHA-256: c09e9cb0c643649874d2a08c44e3e52b352044f8a181e5f2c146f9f5ece6cd3c
		Secure: false
	Object:
		Variable: r4
		Type: javax.net.ssl.KeyManagerFactory
		Statement: r4 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r7)
		Method: <org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[],org.apache.http.conn.ssl.PrivateKeyStrategy)>
		SHA-256: e583fd691e38f136ba11f1fe50c9350acdc0da5a7df79230440be603a5329624
		Secure: false
	Object:
		Variable: r4
		Type: byte[]
		Statement: r6 = virtualinvoke r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r4)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: byte[] lmHash(java.lang.String)>
		SHA-256: 783bef0e378e78e183fe641c8af51ce20770cb0e3148505b1bf67f3e0df957d6
		Secure: false
	Object:
		Variable: r17
		Type: javax.crypto.Cipher
		Statement: r17 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3325)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: 8f1647d38cf1d2dd47f47e8782eaf846adee647a841bba63ba8c91efcba0e38f
		Secure: false
	Object:
		Variable: r19
		Type: byte[]
		Statement: r6 = virtualinvoke r5.<java.security.MessageDigest: byte[] digest(byte[])>(r19)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$Type3Message: byte[] addGssMicAvsToTargetInfo(byte[],java.security.cert.Certificate)>
		SHA-256: e8a1fa835b62da682d8b494d73b2a635e2a74b070251470a417a2d08c8e91d78
		Secure: true
	Object:
		Variable: r6
		Type: javax.net.ssl.SSLContext
		Statement: r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer175)
		Method: <org.apache.http.conn.ssl.SSLContexts: javax.net.ssl.SSLContext createDefault()>
		SHA-256: 7428232105ffe718e0db679726f5514853163cb4e34b99b49e4bcb7597ee1a4d
		Secure: false
	Object:
		Variable: r4
		Type: byte[]
		Statement: r4 = virtualinvoke r17.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r3)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: 51ebfe205ce0e9b1d6d5f4b5331c1e59573af5415f24889a693b2d75522d9e54
		Secure: false
	Object:
		Variable: r4
		Type: byte[]
		Statement: r4 = virtualinvoke r8.<java.security.MessageDigest: byte[] digest(byte[])>(r7)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$Type3Message: byte[] addGssMicAvsToTargetInfo(byte[],java.security.cert.Certificate)>
		SHA-256: e7106d47e8fbbf44418721c82f064499f0c89a121f16bd8aabf5c5dea79deb0a
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3504)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: java.security.MessageDigest getMD5()>
		SHA-256: ab93564e623f33a029126121c0293286c0aadf48a5b3a19b3c74b8d4da1b0116
		Secure: false
	Object:
		Variable: varReplacer3496
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer3496)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: java.security.Key createDESKey(byte[],int)>
		SHA-256: d0f7e3a8676ee53b38057fecdda12f1ff08822e839f9171126a9fe13ec1949d3
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r0)
		Method: <org.apache.http.impl.auth.DigestScheme: java.security.MessageDigest createMessageDigest(java.lang.String)>
		SHA-256: bd3823a5d9aa45b9e8dcdb57b0361fb1187bdae63ecc0a8465b6a3387976558
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: $r6 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>(r1)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$HMACMD5: byte[] getOutput()>
		SHA-256: bc8aef628fba0720e0f9048c0b8d277cbd4b156ad83f38497d37a2147e7a01d2
		Secure: false
	Object:
		Variable: r18
		Type: javax.crypto.Cipher
		Statement: r18 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3318)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: 64ee71ae8d81979502aedb89a62a9c7eefc9e2ca10d419265a562c811dc2e139
		Secure: false
	Object:
		Variable: r6
		Type: byte[]
		Statement: r6 = virtualinvoke r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r4)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: byte[] lmHash(java.lang.String)>
		SHA-256: 630fb4138afd719581916fcb0ac190179d90373af7ae8db362e4a0f23f37ede
		Secure: false
	Object:
		Variable: $r110
		Type: byte[]
		Statement: $r111 = virtualinvoke r10.<java.security.MessageDigest: byte[] digest(byte[])>($r110)
		Method: <org.apache.http.impl.auth.DigestScheme: org.apache.http.Header createDigestHeader(org.apache.http.auth.Credentials,org.apache.http.HttpRequest)>
		SHA-256: c935514416b40b81a8c0a9fae4b17978168e98c6b1ef21c9844d3b3104353ce9
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>(r1)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$HMACMD5: byte[] getOutput()>
		SHA-256: 42e4e815460f87460b7298ed2cdec1f4eebbc08bbcb97d21ac11df00c0389ca7
		Secure: false
	Object:
		Variable: r1
		Type: javax.crypto.Cipher
		Statement: r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer441)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$Handle: javax.crypto.Cipher initCipher()>
		SHA-256: 6476e12024219bcd456ae862dd19c0dd09d327c443035a54ea7679649f401ffd
		Secure: false
	Object:
		Variable: r14
		Type: byte[]
		Statement: r14 = virtualinvoke $r13.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$HMACMD5: void <init>(byte[])>
		SHA-256: e6ce6ac68411b57059e1bbb6af2baaf55aaffce358f53237b972fc6fe5d99b85
		Secure: false
	Object:
		Variable: r9
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer3443)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: byte[] RC4(byte[],byte[])>
		SHA-256: 698ed239c6c381a25f0671c2e47f58b10b950ab9da892d2c7701bae5e08fbaf8
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r0)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: byte[] RC4(byte[],byte[])>
		SHA-256: b82d1849c7337db6637c2fc3d1a3052af43c59fa37baba925847f124876581ef
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] update(byte[])>(r1)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$Handle: byte[] encrypt(byte[])>
		SHA-256: a265e168c9d556bfeb50c0b8a502ce5107d6118476a184863edcc313cebd112d
		Secure: false
	Object:
		Variable: varReplacer438
		Type: java.lang.String
		Statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer438)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$Handle: javax.crypto.Cipher initCipher()>
		SHA-256: 534b50206a685a8f37ba50e654f86d2421555a46a19e051f6f6388aaccaf1985
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$Handle: void advanceMessageSequence()>
		SHA-256: b4114d6952b8200fb672057ec3fd497aa1772392a87f8062974400f9874147c9
		Secure: false
	Object:
		Variable: r6
		Type: byte[]
		Statement: r6 = virtualinvoke r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r1)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: byte[] lmResponse(byte[],byte[])>
		SHA-256: 709642c2bbfffb4afd1c653cc908f558e5999ff98cf098e83601388c64d2d3de
		Secure: false
	Object:
		Variable: r5
		Type: java.lang.Object[]
		Statement: r5 = virtualinvoke r4.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[],org.apache.http.conn.ssl.PrivateKeyStrategy)>
		SHA-256: f2d1963fc56e84fa18233366c4954d4fe9ee70a1b96261469237a512dbb35b80
		Secure: false
	Object:
		Variable: $r156
		Type: byte[]
		Statement: $r156 = virtualinvoke r10.<java.security.MessageDigest: byte[] digest(byte[])>($r155)
		Method: <org.apache.http.impl.auth.DigestScheme: org.apache.http.Header createDigestHeader(org.apache.http.auth.Credentials,org.apache.http.HttpRequest)>
		SHA-256: 16adf8de92bf8819a09dda245c7a6d2700f29945715db3ffb9d42d6662b23e0f
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: r6 = virtualinvoke r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r1)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: byte[] lmResponse(byte[],byte[])>
		SHA-256: b26464e44971761bc16eb31b9c4fee8a67678d7feaceaebd6155060791d8c73c
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.apache.http.impl.auth.DigestScheme: java.lang.String createCnonce()>
		SHA-256: 3ab96751e89c150e150dd9be52b85fae8d30261ca023ff283d340abfdbc1669
		Secure: true
	Object:
		Variable: r4
		Type: java.lang.Object[]
		Statement: r4 = virtualinvoke r3.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore,org.apache.http.conn.ssl.TrustStrategy)>
		SHA-256: 5a03678b5fe66b52cc209e417248044007623f8065d27a13e827b83c6faea2f5
		Secure: false
	Object:
		Variable: r5
		Type: java.security.MessageDigest
		Statement: r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2309)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$Type3Message: byte[] addGssMicAvsToTargetInfo(byte[],java.security.cert.Certificate)>
		SHA-256: d01787011d841fb77c18404f7591c58288994bf0ec9424a8a3fd868a11540f3f
		Secure: true
	Object:
		Variable: r14
		Type: java.security.SecureRandom
		Statement: r14 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer3508)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: void <clinit>()>
		SHA-256: 7d07deaf83dfe522e65707b1eff4c73e07116f26c6b33e5786e1eaa92bd61987
		Secure: true

Findings in Java Class: org.apache.http.conn.ssl.SSLContexts

	 in Method: javax.net.ssl.SSLContext createSystemDefault()
		ForbiddenMethodError violating CrySL rule for javax.net.ssl.SSLContext
			Detected call to forbidden method javax.net.ssl.SSLContext getDefault() of class javax.net.ssl.SSLContext. Instead, call method <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>.
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getDefault()>()


	 in Method: javax.net.ssl.SSLContext createDefault()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer172, varReplacer172, varReplacer172)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer172, varReplacer172, varReplacer172)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #7428232105ffe718e0db679726f5514853163cb4e34b99b49e4bcb7597ee1a4d)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer175)


Findings in Java Class: org.apache.http.conn.ssl.SSLContextBuilder

	 in Method: org.apache.http.conn.ssl.SSLContextBuilder loadKeyMaterial(java.security.KeyStore,char[],org.apache.http.conn.ssl.PrivateKeyStrategy)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r4.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r1, r2)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #e583fd691e38f136ba11f1fe50c9350acdc0da5a7df79230440be603a5329624)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r4.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r1, r2)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #e583fd691e38f136ba11f1fe50c9350acdc0da5a7df79230440be603a5329624)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r4.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r1, r2)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #e583fd691e38f136ba11f1fe50c9350acdc0da5a7df79230440be603a5329624)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r4.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r1, r2)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #e583fd691e38f136ba11f1fe50c9350acdc0da5a7df79230440be603a5329624)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r4.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r1, r2)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #e583fd691e38f136ba11f1fe50c9350acdc0da5a7df79230440be603a5329624)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r4.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r1, r2)


	 in Method: javax.net.ssl.SSLContext build()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #323c65677a5ccffe4cadf1d642bbf7f0cc11c2ad4bf8c847cb9434d4e0c61ec9)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r14)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r17, $r18, $r19)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r17, $r18, $r19)


	 in Method: org.apache.http.conn.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore,org.apache.http.conn.ssl.TrustStrategy)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r3.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(r1)


Findings in Java Class: org.apache.http.impl.auth.DigestScheme

	 in Method: java.security.MessageDigest createMessageDigest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #bd3823a5d9aa45b9e8dcdb57b0361fb1187bdae63ecc0a8465b6a3387976558)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r0)


Findings in Java Class: org.apache.http.impl.auth.HttpEntityDigester

	 in Method: void close()
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #bd3823a5d9aa45b9e8dcdb57b0361fb1187bdae63ecc0a8465b6a3387976558)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: org.apache.http.impl.auth.NTLMEngineImpl$Handle

	 in Method: javax.crypto.Cipher initCipher()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer438)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r1.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer440, r12)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #488b5f017d9dfcf3443fb1c68d0aa978efdb3b414f33477aa5e8c3bf90ab7fdc)
			Second parameter (with value "RC4") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer437)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #6476e12024219bcd456ae862dd19c0dd09d327c443035a54ea7679649f401ffd)
			First parameter (with value "RC4") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer441)


	 in Method: void <init>(byte[],org.apache.http.impl.auth.NTLMEngineImpl$Mode,boolean)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #ab93564e623f33a029126121c0293286c0aadf48a5b3a19b3c74b8d4da1b0116)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r8 = virtualinvoke r3.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: org.apache.http.impl.auth.CredSspScheme

	 in Method: org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #6476e12024219bcd456ae862dd19c0dd09d327c443035a54ea7679649f401ffd)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to doFinal
			at statement: specialinvoke r89.<org.apache.http.impl.auth.NTLMEngineImpl$Handle: void <init>(byte[],org.apache.http.impl.auth.NTLMEngineImpl$Mode,boolean)>(r77, $r50, varReplacer3233)


	 in Method: void verifyPubKeyAuthResponse(byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #6476e12024219bcd456ae862dd19c0dd09d327c443035a54ea7679649f401ffd)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: r2 = virtualinvoke $r3.<org.apache.http.impl.auth.NTLMEngineImpl$Handle: byte[] decryptAndVerifySignedMessage(byte[])>(r1)


	 in Method: byte[] createAuthInfo(org.apache.http.auth.NTCredentials)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #6476e12024219bcd456ae862dd19c0dd09d327c443035a54ea7679649f401ffd)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: $r50 = virtualinvoke $r49.<org.apache.http.impl.auth.NTLMEngineImpl$Handle: byte[] signAndEncryptMessage(byte[])>(r16)


	 in Method: void wrap(java.nio.ByteBuffer,java.nio.ByteBuffer)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #6476e12024219bcd456ae862dd19c0dd09d327c443035a54ea7679649f401ffd)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: r3 = specialinvoke r0.<org.apache.http.impl.auth.CredSspScheme: javax.net.ssl.SSLEngine getSSLEngine()>()


Findings in Java Class: org.apache.http.impl.auth.NTLMEngineImpl$CipherGen

	 in Method: byte[] getLanManagerSessionKey()
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #64ee71ae8d81979502aedb89a62a9c7eefc9e2ca10d419265a562c811dc2e139)
			First parameter (with value "DES/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r18 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3318)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r17.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3322, r1)


Findings in Java Class: org.apache.http.impl.auth.NTLMEngineImpl

	 in Method: byte[] RC4(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3444, r9)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #e433c3b264ac45d526e211f94a28feda8d6f1c68ab031dfa2716444815910022)
			First parameter (with value "RC4") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3442)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer3443)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #698ed239c6c381a25f0671c2e47f58b10b950ab9da892d2c7701bae5e08fbaf8)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer3443)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #698ed239c6c381a25f0671c2e47f58b10b950ab9da892d2c7701bae5e08fbaf8)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer3443)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #698ed239c6c381a25f0671c2e47f58b10b950ab9da892d2c7701bae5e08fbaf8)
			Second parameter (with value "RC4") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer3443)


	 in Method: byte[] lmHash(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #c09e9cb0c643649874d2a08c44e3e52b352044f8a181e5f2c146f9f5ece6cd3c)
			First parameter (with value "DES/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3458)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #c09e9cb0c643649874d2a08c44e3e52b352044f8a181e5f2c146f9f5ece6cd3c)
			Unexpected call to method init on object of type javax.crypto.Cipher.
			at statement: virtualinvoke r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3449, r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3449, r3)


	 in Method: byte[] lmResponse(byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #a40ee5c80c452369b2bbd5194de0509571190d594113e56a3a4ad1aac935ec62)
			First parameter (with value "DES/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3468)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3469, r3)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #a40ee5c80c452369b2bbd5194de0509571190d594113e56a3a4ad1aac935ec62)
			Unexpected call to method init on object of type javax.crypto.Cipher.
			at statement: virtualinvoke r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3469, r3)


	 in Method: java.security.Key createDESKey(byte[],int)
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #c57231a014f68a08b552e7a7b4fd48366bb6c102e938cc6f10132684c21f0feb)
			Second parameter (with value "DES") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer3496)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r2, varReplacer3496)


	 in Method: java.security.MessageDigest getMD5()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ab93564e623f33a029126121c0293286c0aadf48a5b3a19b3c74b8d4da1b0116)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3504)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 57

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 12
	IncompleteOperationError: 4
	TypestateError: 4
	RequiredPredicateError: 14
	ForbiddenMethodError: 1
	NeverTypeOfError: 7
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 13 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 15.94 s

