[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 5.026 s 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 2 analysis seeds within 6 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 2
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <org.elasticsearch.common.hash.MessageDigests$1: java.security.MessageDigest initialValue()>
		SHA-256: 84b36b3a4b5b6e4e322f93a7d9a53ae984e30d1099c485d3dd2b6adf5395b999
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <org.elasticsearch.common.SecureRandomHolder: void <clinit>()>
		SHA-256: d91e9f84a91d9635f5aef8b9d10176715c5134c28a96dd8abd9cdc0844dc30c5
		Secure: true

Findings in Java Class: org.elasticsearch.common.hash.MessageDigests$1

	 in Method: java.lang.Object initialValue()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #84b36b3a4b5b6e4e322f93a7d9a53ae984e30d1099c485d3dd2b6adf5395b999)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: return $r1


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 2

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 1
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 17 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 35.97 s

