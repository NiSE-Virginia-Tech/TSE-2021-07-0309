[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 418.2 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 3 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 24
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.04

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 39
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.05

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.08

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.1

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.13

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.15

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.18

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.2

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.23

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.25

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.28

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.3

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 14 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.35

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 15 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.38

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 16 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.4

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 17 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.43

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 18 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.45

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 19 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.48

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 20 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 21 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.53

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 22 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.55

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 23 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.58

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 24 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.6

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 25 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.63

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 26 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.65

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 27 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.68

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 28 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.7

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 29 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.73

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 30 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.75

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 31 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.78

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 32 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.8

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 33 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.83

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 34 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.85

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 35 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.88

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 36 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.9

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 37 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.93

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 38 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.95

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 39 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.98

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <org.apache.commons.codec.digest.DigestUtils: byte[] sha384(byte[])>
		SHA-256: 555b15450d9b9f67d610fe51c522ea556aaee17c2739338b62ea6b59a4271f76
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <org.apache.commons.codec.digest.DigestUtils: byte[] md5(byte[])>
		SHA-256: 4a4dd18e6187b325d9cb47c1cd7cc8489f28760532723e1ba285d1f23b4d1c9d
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.commons.codec.digest.DigestUtils: byte[] digest(java.security.MessageDigest,java.io.InputStream)>
		SHA-256: 6a74c7a23efe31554dd0f6d4a4f9c4af9b76b2cc2cf92458311947525aea785e
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, r0)
		Method: <org.apache.commons.codec.digest.HmacUtils: javax.crypto.Mac getInitializedMac(java.lang.String,byte[])>
		SHA-256: 394b58790fe148394c6e87c0c4093b433591b9dd9826146ceb21a032f1849200
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <org.apache.commons.codec.digest.DigestUtils: byte[] sha256(byte[])>
		SHA-256: b4669333235e4348b59a5cb6c6e53c9916a201b1217ee843fe05ae9a67a0316d
		Secure: false
	Object:
		Variable: r28
		Type: byte[]
		Statement: r28 = virtualinvoke r25.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.commons.codec.digest.Sha2Crypt: java.lang.String sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)>
		SHA-256: 71b129715a0e6159512027414bdc73e9ec2396d3d3255bd9a2a6c56d89315ce6
		Secure: false
	Object:
		Variable: r2
		Type: javax.crypto.Mac
		Statement: r2 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(r0)
		Method: <org.apache.commons.codec.digest.HmacUtils: javax.crypto.Mac getInitializedMac(java.lang.String,byte[])>
		SHA-256: 121a39d0408e38af7cd24010b0a2fab8d7f314e62b238e0df4a62a414507db2a
		Secure: true
	Object:
		Variable: r28
		Type: byte[]
		Statement: r28 = virtualinvoke r25.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.commons.codec.digest.Sha2Crypt: java.lang.String sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)>
		SHA-256: 71b129715a0e6159512027414bdc73e9ec2396d3d3255bd9a2a6c56d89315ce6
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>(r1)
		Method: <org.apache.commons.codec.digest.HmacUtils: byte[] hmacSha384(byte[],byte[])>
		SHA-256: af3559619d07115c81619a44b28b76984932083d6cc39c7e122601dddf9605f5
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>(r1)
		Method: <org.apache.commons.codec.digest.HmacUtils: byte[] hmacSha512(byte[],byte[])>
		SHA-256: 90c76d8344e83c4ca04b2f510e850b65a054a2dd82d219f6408194e046443202
		Secure: true
	Object:
		Variable: r32
		Type: byte[]
		Statement: r32 = virtualinvoke r31.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.commons.codec.digest.Sha2Crypt: java.lang.String sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)>
		SHA-256: afa001f9f58bedd7a7e2d2e9d8232d222ffb8828ba5d8bb60adb7fcca2b063a5
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal()>()
		Method: <org.apache.commons.codec.digest.HmacUtils: byte[] hmacSha384(byte[],java.io.InputStream)>
		SHA-256: 55a2ae20604a653cdaa0073856c9b5b8ee5cf0cfbf413e39efb88e1ba1ea56c3
		Secure: true
	Object:
		Variable: r30
		Type: byte[]
		Statement: r30 = virtualinvoke r29.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.commons.codec.digest.Sha2Crypt: java.lang.String sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)>
		SHA-256: 8e88449544b9f7e414adbe2f34a17243ec3612919023a8a0bd098e3a201ba472
		Secure: false
	Object:
		Variable: r27
		Type: byte[]
		Statement: r27 = virtualinvoke r26.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.commons.codec.digest.Sha2Crypt: java.lang.String sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)>
		SHA-256: 5fb42a87fe423bb69f0ebf7816322b0439faff1c3dfaaf5b78d8370148b37d3e
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <org.apache.commons.codec.digest.DigestUtils: byte[] sha384(byte[])>
		SHA-256: e74450188f985523d9855f9d90cbc6d2b99a9d05a356a38652cd742d9b74088c
		Secure: false
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <org.apache.commons.codec.digest.DigestUtils: byte[] sha256(byte[])>
		SHA-256: c5437c9ce65f8e48f3a76c6e35eb7d6d07b1025940f526110b27d239aaff1e3
		Secure: false
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <org.apache.commons.codec.digest.DigestUtils: byte[] md5(byte[])>
		SHA-256: a4b7e841fc462f8d73a506e9805cd4d1408ef7266e8613db710f40ddac41b158
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>(r1)
		Method: <org.apache.commons.codec.digest.HmacUtils: byte[] hmacSha256(byte[],byte[])>
		SHA-256: 77f79fa467f5ce9d3f93e7eddb1ef4e043b42c5633e388795f50224f9f032d47
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal()>()
		Method: <org.apache.commons.codec.digest.HmacUtils: byte[] hmacSha256(byte[],java.io.InputStream)>
		SHA-256: 53e79c31cee5a667e65b708db095755e4030751890234b9b5ab15ebaadda0f02
		Secure: true
	Object:
		Variable: r1
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>(r1)
		Method: <org.apache.commons.codec.digest.HmacUtils: byte[] hmacSha1(byte[],byte[])>
		SHA-256: 57275a6a0540fc96e2e84ac02a5c1ee9fa287e1d1e1b154c06040ea15a44ef31
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <org.apache.commons.codec.digest.DigestUtils: byte[] sha512(byte[])>
		SHA-256: 793b536133ee27f28c84471a4b0c835449549b607ab02fb866e83514cfa002c9
		Secure: false
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <org.apache.commons.codec.digest.DigestUtils: byte[] md2(byte[])>
		SHA-256: e2e03ceec4484eab16cfd224ed100d41ce0c24ed3b496bf77a6483a221e878c3
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <org.apache.commons.codec.digest.DigestUtils: byte[] sha1(byte[])>
		SHA-256: 83395eaa9342ece4b24da66768537fe97d75438d6493ad67319a3999d1d4058e
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal()>()
		Method: <org.apache.commons.codec.digest.HmacUtils: byte[] hmacMd5(byte[],java.io.InputStream)>
		SHA-256: 6d924b19cfdc7ab538c35fce21d5d0fde82c1a27741a57649406a95c37779671
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>(r1)
		Method: <org.apache.commons.codec.digest.HmacUtils: byte[] hmacSha1(byte[],byte[])>
		SHA-256: 3448e19381e93103b447fb7e6713e366df7ec5eccfd7c62c0ad931849f85c71c
		Secure: true
	Object:
		Variable: r0
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, r0)
		Method: <org.apache.commons.codec.digest.HmacUtils: javax.crypto.Mac getInitializedMac(java.lang.String,byte[])>
		SHA-256: 673f432608ebebbfde686808e1976348928f13d4604f0040fce1eb16dc2523d2
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>(r1)
		Method: <org.apache.commons.codec.digest.HmacUtils: byte[] hmacSha256(byte[],byte[])>
		SHA-256: 5bd14b19dd834d63b7b1aa586494bf84972917899611497805d2090d9c220ce8
		Secure: true
	Object:
		Variable: r34
		Type: byte[]
		Statement: r34 = virtualinvoke r31.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.commons.codec.digest.Md5Crypt: java.lang.String md5Crypt(byte[],java.lang.String,java.lang.String)>
		SHA-256: 2f1171658a2a32c35554e48fdd03e563875d21b9c40c562b7023d295495b4bf
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal()>()
		Method: <org.apache.commons.codec.digest.HmacUtils: byte[] hmacSha512(byte[],java.io.InputStream)>
		SHA-256: 7348a7a1ac549775fe686c773b53a362902032ed8ee0e1ecee5d3cfe13d3b7ed
		Secure: true
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <org.apache.commons.codec.digest.DigestUtils: byte[] sha1(byte[])>
		SHA-256: 92d0c06680bcfabefd3968d3ed6d4813b895a475fa281863c8d26fbf3945ebe6
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r0)
		Method: <org.apache.commons.codec.digest.DigestUtils: java.security.MessageDigest getDigest(java.lang.String)>
		SHA-256: e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337
		Secure: false
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <org.apache.commons.codec.digest.DigestUtils: byte[] sha512(byte[])>
		SHA-256: 9f4c297e8b55ca8f8e840c8184d8d43a9e8cf6178bd74e24161706b73442496f
		Secure: false
	Object:
		Variable: r34
		Type: byte[]
		Statement: r34 = virtualinvoke r32.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.commons.codec.digest.Md5Crypt: java.lang.String md5Crypt(byte[],java.lang.String,java.lang.String)>
		SHA-256: 7fc927c52220e9c87c89ed43cb6a1010d2763202f829b2f00d00ee87dd45d3ce
		Secure: false
	Object:
		Variable: r33
		Type: byte[]
		Statement: r33 = virtualinvoke r32.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.commons.codec.digest.Md5Crypt: java.lang.String md5Crypt(byte[],java.lang.String,java.lang.String)>
		SHA-256: 6f2f24959121bd7da6c4ff2497b1fcc5b652b469c3a5264ea5fdc076954e6970
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>(r1)
		Method: <org.apache.commons.codec.digest.HmacUtils: byte[] hmacMd5(byte[],byte[])>
		SHA-256: d8daa1374f9a4a20fb54eadfddcc36a2ca0d02f12e3dab6300ca12f883d96c75
		Secure: true
	Object:
		Variable: r1
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>(r1)
		Method: <org.apache.commons.codec.digest.HmacUtils: byte[] hmacSha512(byte[],byte[])>
		SHA-256: 7d736474531fe90f5cee75172bfead9377e70e78bfa250c3d93d7a3649833266
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <org.apache.commons.codec.digest.DigestUtils: byte[] md2(byte[])>
		SHA-256: f2a8d60e4721bd2ba7a581814edc7b0074c941b7bb2512272883a92071e85225
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal()>()
		Method: <org.apache.commons.codec.digest.HmacUtils: byte[] hmacSha1(byte[],java.io.InputStream)>
		SHA-256: 64b38dfba6e4b727b70a43f1eaaaad641835edf8077607e7219bc2121d1fbc1
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>(r1)
		Method: <org.apache.commons.codec.digest.HmacUtils: byte[] hmacSha384(byte[],byte[])>
		SHA-256: 21c17370bbced8abcb755b55e1d0dd891d91e2dd97313e878a00ac848586fdc6
		Secure: true
	Object:
		Variable: r1
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>(r1)
		Method: <org.apache.commons.codec.digest.HmacUtils: byte[] hmacMd5(byte[],byte[])>
		SHA-256: 7e8cadffdf04dead760972935b0e5ffc7e13126e3d1239b198bbdf104a1cf910
		Secure: true

Findings in Java Class: org.apache.commons.codec.digest.DigestUtils

	 in Method: java.security.MessageDigest getDigest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			First parameter (with value "MD2") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r0)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r0)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r0)


	 in Method: byte[] digest(java.security.MessageDigest,java.io.InputStream)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()


	 in Method: java.security.MessageDigest getShaDigest()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: return $r0


Findings in Java Class: org.apache.commons.codec.digest.Sha2Crypt

	 in Method: java.lang.String sha2Crypt(byte[],java.lang.String,java.lang.String,int,java.lang.String)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: r30 = virtualinvoke r29.<java.security.MessageDigest: byte[] digest()>()

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: r32 = virtualinvoke r31.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: org.apache.commons.codec.digest.Md5Crypt

	 in Method: java.lang.String md5Crypt(byte[],java.lang.String,java.lang.String)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: r34 = virtualinvoke r31.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: org.apache.commons.codec.digest.HmacUtils

	 in Method: javax.crypto.Mac getInitializedMac(java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, r0)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 40

	CogniCrypt found the following violations. For details see description above.
	TypestateError: 4
	RequiredPredicateError: 1
	IncompleteOperationError: 1
	ConstraintError: 3
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 2 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 3.659 s

