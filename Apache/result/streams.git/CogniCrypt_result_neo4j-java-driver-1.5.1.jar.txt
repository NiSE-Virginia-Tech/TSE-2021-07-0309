[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 1.080 s 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 26 analysis seeds within 2 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 26
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.04

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 27
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.07

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 27
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.11

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 27
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.15

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 27
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.19

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 28
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.21

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 29
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.24

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 29
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.28

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 29
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.31

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 31
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.35

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 31
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.39

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 31
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.42

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 14 of 35
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.4

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 15 of 35
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.43

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 16 of 39
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.41

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 17 of 39
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.44

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 18 of 39
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.46

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 19 of 39
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.49

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 20 of 39
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.51

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 21 of 39
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.54

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 22 of 39
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.56

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 23 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.58

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 24 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.6

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 25 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.63

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 26 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.63

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 27 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.66

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 28 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.68

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 29 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.71

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 30 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.73

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 31 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.76

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 32 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.78

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 33 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.8

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 34 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.83

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 35 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.85

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 36 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.88

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 37 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.9

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 38 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.93

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 39 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.95

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 40 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.98

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r22
		Type: javax.net.ssl.TrustManagerFactory
		Statement: r22 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r11)
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ReferenceCountedOpenSslClientContext: org.neo4j.driver.internal.shaded.io.netty.handler.ssl.OpenSslSessionContext newSessionContext(org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ReferenceCountedOpenSslContext,long,org.neo4j.driver.internal.shaded.io.netty.handler.ssl.OpenSslEngineMap,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory)>
		SHA-256: 6e776ee9266c96327398a35bd0a51bbfe29c9d29bfc00fa730251e19cc6a2cb3
		Secure: false
	Object:
		Variable: $r10
		Type: javax.net.ssl.KeyManager[]
		Statement: $r10 = virtualinvoke r36.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ReferenceCountedOpenSslServerContext: org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ReferenceCountedOpenSslServerContext$ServerContext newSessionContext(org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ReferenceCountedOpenSslContext,long,org.neo4j.driver.internal.shaded.io.netty.handler.ssl.OpenSslEngineMap,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory)>
		SHA-256: dfb73f0e674ebc77900e3fea1d8d5e395b667d9d3533833977800b792a7cfb0b
		Secure: false
	Object:
		Variable: r0
		Type: org.neo4j.driver.internal.shaded.io.netty.handler.ssl.util.ThreadLocalInsecureRandom
		Statement: specialinvoke r0.<java.security.SecureRandom: void <init>()>()
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.util.ThreadLocalInsecureRandom: void <init>()>
		SHA-256: 46a0bd64f535b57484537e537f98f9e41f2f93ed1ca917868b32c341773fdb95
		Secure: true
	Object:
		Variable: r2
		Type: byte[]
		Statement: r2 = virtualinvoke r1.<java.security.SecureRandom: byte[] generateSeed(int)>(varReplacer3514)
		Method: <org.neo4j.driver.internal.shaded.io.netty.util.internal.ThreadLocalRandom$1: void run()>
		SHA-256: d0103c0ffdf31458ccb11ca613894eac1513424b2119bbf3068986b1191336fb
		Secure: true
	Object:
		Variable: r6
		Type: javax.net.ssl.KeyManagerFactory
		Statement: r6 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(r1)
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.SslContext: javax.net.ssl.KeyManagerFactory buildKeyManagerFactory(java.security.cert.X509Certificate[],java.lang.String,java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory)>
		SHA-256: 8c84333848e193c4abf36d346a33be3d8a4358fc1f01ff589d1e6f74d2b2d6d0
		Secure: false
	Object:
		Variable: r6
		Type: javax.crypto.Cipher
		Statement: r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r10)
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.SslContext: java.security.spec.PKCS8EncodedKeySpec generateKeySpec(char[],byte[])>
		SHA-256: 75783602b7c7dea9335aace96ce14e1788e2631b71b853aefb20e70b107597aa
		Secure: false
	Object:
		Variable: r3
		Type: javax.net.ssl.SSLContext
		Statement: r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer244)
		Method: <org.neo4j.driver.internal.security.SecurityPlan: org.neo4j.driver.internal.security.SecurityPlan forCustomCASignedCertificates(java.io.File)>
		SHA-256: 15852783e54e1e0ac36db4765961fa9191de98816c7efb0be798c4ad28cf7ca0
		Secure: false
	Object:
		Variable: $r17
		Type: javax.net.ssl.TrustManager[]
		Statement: $r17 = virtualinvoke r13.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.JdkSslServerContext: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long)>
		SHA-256: 64ed63e14b68055ba1988b796d6b823837ff3ad9c45d21d87c7c878e00a24f81
		Secure: true
	Object:
		Variable: r5
		Type: java.security.KeyPair
		Statement: r5 = virtualinvoke r42.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.util.SelfSignedCertificate: void <init>(java.lang.String,java.security.SecureRandom,int,java.util.Date,java.util.Date)>
		SHA-256: 86cb81f3b17f266d370350b860a2145fa33d06b4ae46ed94b7383efca2feb325
		Secure: false
	Object:
		Variable: r5
		Type: javax.crypto.SecretKey
		Statement: r5 = virtualinvoke r3.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r4)
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.SslContext: java.security.spec.PKCS8EncodedKeySpec generateKeySpec(char[],byte[])>
		SHA-256: e0cef9eca484cf273c5e243ed2f847a8d3255200120945c83142071df9855c58
		Secure: false
	Object:
		Variable: $r15
		Type: javax.net.ssl.KeyManager[]
		Statement: $r15 = virtualinvoke r11.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.JdkSslClientContext: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long)>
		SHA-256: cfb354b07fa4616db41d7207dfe907f05977eed59b69d77c0fa5b5a6d00b034f
		Secure: false
	Object:
		Variable: r0
		Type: org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ReferenceCountedOpenSslEngine
		Statement: specialinvoke r0.<javax.net.ssl.SSLEngine: void <init>(java.lang.String,int)>(r3, i0)
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ReferenceCountedOpenSslEngine: void <init>(org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ReferenceCountedOpenSslContext,org.neo4j.driver.internal.shaded.io.netty.buffer.ByteBufAllocator,java.lang.String,int,boolean,boolean)>
		SHA-256: 6c319d7a075ff67b2a65fc572e9634e239252783aae602180cd74c19bda0533d
		Secure: false
	Object:
		Variable: r37
		Type: javax.net.ssl.SSLEngine
		Statement: r37 = virtualinvoke r0.<javax.net.ssl.SSLContext: javax.net.ssl.SSLEngine createSSLEngine()>()
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.JdkSslContext: void <clinit>()>
		SHA-256: 77805c34749f10d76b04822710a8f96c27d517774008d6fb18bb36b79746a334
		Secure: false
	Object:
		Variable: $r27
		Type: javax.net.ssl.TrustManager[]
		Statement: $r27 = virtualinvoke r22.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ReferenceCountedOpenSslClientContext: org.neo4j.driver.internal.shaded.io.netty.handler.ssl.OpenSslSessionContext newSessionContext(org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ReferenceCountedOpenSslContext,long,org.neo4j.driver.internal.shaded.io.netty.handler.ssl.OpenSslEngineMap,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory)>
		SHA-256: 271fc3a419a175be86815003ae7c1c052ef7a36cadb116d08d1fc49bae866d73
		Secure: true
	Object:
		Variable: $r15
		Type: javax.net.ssl.SSLContext
		Statement: $r15 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2095)
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.JdkSslServerContext: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long)>
		SHA-256: 599cf68f5b7a0b3bcfd2f084c62351c94a03aeabda75d1074eebfe21e33d90e6
		Secure: false
	Object:
		Variable: $r12
		Type: javax.net.ssl.SSLContext
		Statement: $r12 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2125)
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.JdkSslClientContext: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long)>
		SHA-256: 25086dbbbd5411eee0aa49b3fcaba6d1b5ffb5635307640fd10923d0f6413e38
		Secure: false
	Object:
		Variable: r0
		Type: org.neo4j.driver.internal.shaded.io.netty.handler.ssl.JdkSslEngine
		Statement: specialinvoke r0.<javax.net.ssl.SSLEngine: void <init>()>()
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.JdkSslEngine: void <init>(javax.net.ssl.SSLEngine)>
		SHA-256: 3ef976940fde996d8da07e66af3563c3ad52e8b3e2d0eb1abf08c8dbc6ab2dc5
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke r11.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.neo4j.driver.internal.security.TrustOnFirstUseTrustManager: java.lang.String fingerprint(java.security.cert.X509Certificate)>
		SHA-256: 97ae4aad198cd91a1c72b07acc86f3f1536ca1978cfe8a076de9da1616a71fc2
		Secure: true
	Object:
		Variable: r35
		Type: javax.net.ssl.TrustManagerFactory
		Statement: r35 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r23)
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ReferenceCountedOpenSslServerContext: org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ReferenceCountedOpenSslServerContext$ServerContext newSessionContext(org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ReferenceCountedOpenSslContext,long,org.neo4j.driver.internal.shaded.io.netty.handler.ssl.OpenSslEngineMap,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory)>
		SHA-256: 5eda7447050e1d0f66050f1815dbd59973c20737d3e8a7120af21769fd7d7feb
		Secure: false
	Object:
		Variable: $r5
		Type: javax.net.ssl.TrustManager[]
		Statement: $r5 = virtualinvoke r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <org.neo4j.driver.internal.security.SecurityPlan: org.neo4j.driver.internal.security.SecurityPlan forCustomCASignedCertificates(java.io.File)>
		SHA-256: ecb2f528f4843e8135281431a11477f435b9d2b851aaaca89dcb7568f6494ab3
		Secure: true
	Object:
		Variable: r0
		Type: javax.net.ssl.SSLContext
		Statement: r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1389)
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.JdkSslContext: void <clinit>()>
		SHA-256: cff23491c95c195016362e66d3d14fd4897e8e5b9f3dfb6f2f0703f03cb1d4db
		Secure: false
	Object:
		Variable: r6
		Type: javax.net.ssl.TrustManagerFactory
		Statement: r6 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r5)
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.SslContext: javax.net.ssl.TrustManagerFactory buildTrustManagerFactory(java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory)>
		SHA-256: fd7f27531409aacfca88befca40d2bc26c0b3b939742eb6150468ac26bc385f0
		Secure: true
	Object:
		Variable: $r40
		Type: javax.net.ssl.TrustManager[]
		Statement: $r40 = virtualinvoke r35.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ReferenceCountedOpenSslServerContext: org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ReferenceCountedOpenSslServerContext$ServerContext newSessionContext(org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ReferenceCountedOpenSslContext,long,org.neo4j.driver.internal.shaded.io.netty.handler.ssl.OpenSslEngineMap,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory)>
		SHA-256: 9577be1eada7e4b8ab0734163d846f4a8447bae305021e036de0cade8711c29
		Secure: true
	Object:
		Variable: r3
		Type: java.security.KeyStore
		Statement: r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer1958)
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.SslContext: java.security.KeyStore buildKeyStore(java.security.cert.X509Certificate[],java.security.PrivateKey,char[])>
		SHA-256: 6e058249abb1bd50d0b5b841bfb204b30f0cf06d5411eae0b71031999dab34ac
		Secure: true
	Object:
		Variable: r42
		Type: java.security.KeyPairGenerator
		Statement: r42 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer2178)
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.util.SelfSignedCertificate: void <init>(java.lang.String,java.security.SecureRandom,int,java.util.Date,java.util.Date)>
		SHA-256: ea5215d46c3ede16f6327f78abf2f3f9b4f92148cf6d0dc83e5dfdbf826a3c38
		Secure: false
	Object:
		Variable: $r16
		Type: javax.net.ssl.TrustManager[]
		Statement: $r16 = virtualinvoke r10.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.JdkSslClientContext: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long)>
		SHA-256: 40e6279df6a4cbbb6508b21e9d38859c319025e85c0a215637a4af9b61a1cb9d
		Secure: true
	Object:
		Variable: r3
		Type: javax.net.ssl.SSLContext
		Statement: r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer250)
		Method: <org.neo4j.driver.internal.security.SecurityPlan: org.neo4j.driver.internal.security.SecurityPlan forTrustOnFirstUse(java.io.File,org.neo4j.driver.internal.BoltServerAddress,org.neo4j.driver.v1.Logger)>
		SHA-256: 35181ef5ae8f704a401dcf8b0d46d3953ab1595c465b2822134bdee68ebe4ba1
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1413)
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.util.FingerprintTrustManagerFactory$1: java.security.MessageDigest initialValue()>
		SHA-256: e5b7437548d8b2795b54bf8ad07e5dcf430dbd6b9ce6ea5395f237e283721ad4
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.neo4j.driver.internal.shaded.io.netty.util.internal.ThreadLocalRandom$1: void run()>
		SHA-256: 7b5a6c8dae3abffe2514936e7c1020b7c1c22c0810a3c866ee45528de51e28a7
		Secure: true
	Object:
		Variable: r11
		Type: java.security.MessageDigest
		Statement: r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer811)
		Method: <org.neo4j.driver.internal.security.TrustOnFirstUseTrustManager: java.lang.String fingerprint(java.security.cert.X509Certificate)>
		SHA-256: 7c64c8acb052de22e51d9a186d151feb99a591f3d6b654a8745d9d260a30a549
		Secure: true
	Object:
		Variable: $r13
		Type: javax.net.ssl.KeyManager[]
		Statement: $r13 = virtualinvoke r23.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ReferenceCountedOpenSslClientContext: org.neo4j.driver.internal.shaded.io.netty.handler.ssl.OpenSslSessionContext newSessionContext(org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ReferenceCountedOpenSslContext,long,org.neo4j.driver.internal.shaded.io.netty.handler.ssl.OpenSslEngineMap,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory)>
		SHA-256: d3cc5dbc0b3f60d96304dada0b63c548569a8c99dd6455887d65dd4c177cf02
		Secure: false
	Object:
		Variable: r0
		Type: javax.net.ssl.SSLContext
		Statement: r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer236)
		Method: <org.neo4j.driver.internal.security.SecurityPlan: org.neo4j.driver.internal.security.SecurityPlan forAllCertificates()>
		SHA-256: cbd97d502070dd6035bdfdafa6dc46bc22b4e0e285cb65ea6a85bfa50c204be3
		Secure: false
	Object:
		Variable: $r12
		Type: javax.net.ssl.SSLContext
		Statement: $r12 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer2126, r0)
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.JdkSslClientContext: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long)>
		SHA-256: 25d4a225a8d5958636ac09f6919ee1c89f008f22f30697239662ea109ccb3a00
		Secure: false
	Object:
		Variable: r0
		Type: javax.net.ssl.SSLEngine
		Statement: r0 = virtualinvoke r23.<javax.net.ssl.SSLContext: javax.net.ssl.SSLEngine createSSLEngine()>()
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.Java9SslUtils: void <clinit>()>
		SHA-256: 9090fbc19abf03c50512680f012acf6277ca242d4a6b012fbc9981527a07a5dd
		Secure: false
	Object:
		Variable: r1
		Type: java.security.KeyStore
		Statement: r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer242)
		Method: <org.neo4j.driver.internal.security.SecurityPlan: org.neo4j.driver.internal.security.SecurityPlan forCustomCASignedCertificates(java.io.File)>
		SHA-256: d4b17cd7d0565dd26bb57c150f13d0019aab3fc6238bceff1a8aea211ef374c9
		Secure: true
	Object:
		Variable: r3
		Type: javax.crypto.SecretKeyFactory
		Statement: r3 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>($r8)
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.SslContext: java.security.spec.PKCS8EncodedKeySpec generateKeySpec(char[],byte[])>
		SHA-256: 436149b8daa596b6e53a6ec47fbcfc7024fd8a9a94ca6ec263f1046a649a7624
		Secure: false
	Object:
		Variable: $r15
		Type: javax.net.ssl.SSLContext
		Statement: $r15 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer2093, r0)
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.JdkSslServerContext: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long)>
		SHA-256: d5917e45e194a79727bca746dda495d8a2cb5fad3c614faf21243ce515908bc0
		Secure: false
	Object:
		Variable: r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(varReplacer237)
		Method: <org.neo4j.driver.internal.security.SecurityPlan: org.neo4j.driver.internal.security.SecurityPlan forCustomCASignedCertificates(java.io.File)>
		SHA-256: ab0e665dd2236e121f516ec61f690afebe4aa60c0f7e2ed0cd9501de468b4b93
		Secure: true
	Object:
		Variable: r23
		Type: javax.net.ssl.SSLContext
		Statement: r23 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1795)
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.Java9SslUtils: void <clinit>()>
		SHA-256: 803c12f11952cd793fd54299044aa1fa326b37a71322d6cce396102738c76c0f
		Secure: false
	Object:
		Variable: r1
		Type: java.security.KeyStore
		Statement: r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer1971)
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.SslContext: javax.net.ssl.TrustManagerFactory buildTrustManagerFactory(java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory)>
		SHA-256: cc6b041afa8f3a32b6fd112a791585074075718ba441d6a02650bded72d928a6
		Secure: true
	Object:
		Variable: $r6
		Type: javax.net.ssl.KeyManager[]
		Statement: $r6 = virtualinvoke r14.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <org.neo4j.driver.internal.shaded.io.netty.handler.ssl.JdkSslServerContext: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long)>
		SHA-256: 4f3f67867f20ca927bb0959c7083932677e2b3fa8de297aa02f36b9efeda18a3
		Secure: false

Findings in Java Class: org.neo4j.driver.internal.security.SecurityPlan

	 in Method: org.neo4j.driver.internal.security.SecurityPlan forSystemCASignedCertificates()
		ForbiddenMethodError violating CrySL rule for javax.net.ssl.SSLContext
			Detected call to forbidden method javax.net.ssl.SSLContext getDefault() of class javax.net.ssl.SSLContext. Instead, call method <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>.
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getDefault()>()


	 in Method: org.neo4j.driver.internal.security.SecurityPlan forAllCertificates()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r3, r7, varReplacer233)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #cbd97d502070dd6035bdfdafa6dc46bc22b4e0e285cb65ea6a85bfa50c204be3)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer236)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r3, r7, varReplacer233)


	 in Method: org.neo4j.driver.internal.security.SecurityPlan forCustomCASignedCertificates(java.io.File)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r4, $r5, varReplacer243)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r4, $r5, varReplacer243)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #15852783e54e1e0ac36db4765961fa9191de98816c7efb0be798c4ad28cf7ca0)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer244)


	 in Method: org.neo4j.driver.internal.security.SecurityPlan forTrustOnFirstUse(java.io.File,org.neo4j.driver.internal.BoltServerAddress,org.neo4j.driver.v1.Logger)
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #35181ef5ae8f704a401dcf8b0d46d3953ab1595c465b2822134bdee68ebe4ba1)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer250)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r6, r10, varReplacer247)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r6, r10, varReplacer247)


Findings in Java Class: org.neo4j.driver.internal.shaded.io.netty.handler.ssl.SslContext

	 in Method: java.security.spec.PKCS8EncodedKeySpec generateKeySpec(char[],byte[])
		ForbiddenMethodError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Detected call to forbidden method void <init>(char[]) of class javax.crypto.spec.PBEKeySpec. Instead, call method <javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>.
			at statement: specialinvoke $r9.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>(r0)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #75783602b7c7dea9335aace96ce14e1788e2631b71b853aefb20e70b107597aa)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: $r12 = virtualinvoke r2.<javax.crypto.EncryptedPrivateKeyInfo: java.security.spec.PKCS8EncodedKeySpec getKeySpec(javax.crypto.Cipher)>(r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: r5 = virtualinvoke r3.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r4)


	 in Method: javax.net.ssl.KeyManagerFactory buildKeyManagerFactory(java.security.cert.X509Certificate[],java.lang.String,java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory)
		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #8c84333848e193c4abf36d346a33be3d8a4358fc1f01ff589d1e6f74d2b2d6d0)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r6.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r5, r4)


Findings in Java Class: org.neo4j.driver.internal.shaded.io.netty.handler.ssl.JdkSslContext

	 in Method: void <clinit>()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #cff23491c95c195016362e66d3d14fd4897e8e5b9f3dfb6f2f0703f03cb1d4db)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1389)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1392, varReplacer1392, varReplacer1392)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1392, varReplacer1392, varReplacer1392)


Findings in Java Class: org.neo4j.driver.internal.shaded.io.netty.handler.ssl.util.FingerprintTrustManagerFactory$1

	 in Method: java.security.MessageDigest initialValue()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e5b7437548d8b2795b54bf8ad07e5dcf430dbd6b9ce6ea5395f237e283721ad4)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1413)


Findings in Java Class: org.neo4j.driver.internal.shaded.io.netty.handler.ssl.Java9SslUtils

	 in Method: void <clinit>()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r23.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1797, varReplacer1797, varReplacer1797)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #803c12f11952cd793fd54299044aa1fa326b37a71322d6cce396102738c76c0f)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: r23 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1795)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r23.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1797, varReplacer1797, varReplacer1797)


Findings in Java Class: org.neo4j.driver.internal.shaded.io.netty.handler.ssl.JdkSslServerContext

	 in Method: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r16.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r6, $r17, varReplacer2096)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #d5917e45e194a79727bca746dda495d8a2cb5fad3c614faf21243ce515908bc0)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r15 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer2093, r0)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #599cf68f5b7a0b3bcfd2f084c62351c94a03aeabda75d1074eebfe21e33d90e6)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r15 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2095)


Findings in Java Class: org.neo4j.driver.internal.shaded.io.netty.handler.ssl.JdkSslClientContext

	 in Method: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long)
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #25d4a225a8d5958636ac09f6919ee1c89f008f22f30697239662ea109ccb3a00)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r12 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer2126, r0)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #25086dbbbd5411eee0aa49b3fcaba6d1b5ffb5635307640fd10923d0f6413e38)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r12 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2125)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r13.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r15, $r16, varReplacer2124)


Findings in Java Class: org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ConscryptAlpnSslEngine$ServerEngine

	 in Method: void <init>(javax.net.ssl.SSLEngine,org.neo4j.driver.internal.shaded.io.netty.buffer.ByteBufAllocator,org.neo4j.driver.internal.shaded.io.netty.handler.ssl.JdkApplicationProtocolNegotiator)
		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLEngine (on Object #3ef976940fde996d8da07e66af3563c3ad52e8b3e2d0eb1abf08c8dbc6ab2dc5)
			Operation on object of type org.neo4j.driver.internal.shaded.io.netty.handler.ssl.JdkSslEngine object not completed. Expected call to setEnabledCipherSuites, setEnabledProtocols
			at statement: staticinvoke <org.conscrypt.Conscrypt$Engines: void setHandshakeListener(javax.net.ssl.SSLEngine,org.conscrypt.HandshakeListener)>(r1, $r5)


Findings in Java Class: org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ConscryptAlpnSslEngine$ClientEngine

	 in Method: void <init>(javax.net.ssl.SSLEngine,org.neo4j.driver.internal.shaded.io.netty.buffer.ByteBufAllocator,org.neo4j.driver.internal.shaded.io.netty.handler.ssl.JdkApplicationProtocolNegotiator)
		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLEngine (on Object #3ef976940fde996d8da07e66af3563c3ad52e8b3e2d0eb1abf08c8dbc6ab2dc5)
			Operation on object of type org.neo4j.driver.internal.shaded.io.netty.handler.ssl.JdkSslEngine object not completed. Expected call to setEnabledCipherSuites, setEnabledProtocols
			at statement: staticinvoke <org.conscrypt.Conscrypt$Engines: void setHandshakeListener(javax.net.ssl.SSLEngine,org.conscrypt.HandshakeListener)>(r1, $r5)


Findings in Java Class: org.neo4j.driver.internal.shaded.io.netty.handler.ssl.util.SelfSignedCertificate

	 in Method: void <init>(java.lang.String,java.security.SecureRandom,int,java.util.Date,java.util.Date)
		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #ea5215d46c3ede16f6327f78abf2f3f9b4f92148cf6d0dc83e5dfdbf826a3c38)
			First parameter (with value 1024) should be any of {4096, 3072, 2048}
			at statement: virtualinvoke r42.<java.security.KeyPairGenerator: void initialize(int,java.security.SecureRandom)>(i0, r2)


Findings in Java Class: org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ReferenceCountedOpenSslEngine

	 in Method: void <init>(org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ReferenceCountedOpenSslContext,org.neo4j.driver.internal.shaded.io.netty.buffer.ByteBufAllocator,java.lang.String,int,boolean,boolean)
		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLEngine (on Object #6c319d7a075ff67b2a65fc572e9634e239252783aae602180cd74c19bda0533d)
			Operation on object of type org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ReferenceCountedOpenSslEngine object not completed. Expected call to setEnabledCipherSuites, setEnabledProtocols
			at statement: r32 = r0


	 in Method: void setClientAuth(org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ClientAuth)
		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLEngine (on Object #6c319d7a075ff67b2a65fc572e9634e239252783aae602180cd74c19bda0533d)
			Operation on object of type org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ReferenceCountedOpenSslEngine object not completed. Expected call to setEnabledCipherSuites, setEnabledProtocols
			at statement: r2 = r0


Findings in Java Class: org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ReferenceCountedOpenSslClientContext

	 in Method: org.neo4j.driver.internal.shaded.io.netty.handler.ssl.OpenSslSessionContext newSessionContext(org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ReferenceCountedOpenSslContext,long,org.neo4j.driver.internal.shaded.io.netty.handler.ssl.OpenSslEngineMap,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r22.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r12)


Findings in Java Class: org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ReferenceCountedOpenSslServerContext

	 in Method: org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ReferenceCountedOpenSslServerContext$ServerContext newSessionContext(org.neo4j.driver.internal.shaded.io.netty.handler.ssl.ReferenceCountedOpenSslContext,long,org.neo4j.driver.internal.shaded.io.netty.handler.ssl.OpenSslEngineMap,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r35.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r24)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 41

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 11
	IncompleteOperationError: 5
	NeverTypeOfError: 1
	ForbiddenMethodError: 2
	RequiredPredicateError: 15
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 17 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 24.15 s

