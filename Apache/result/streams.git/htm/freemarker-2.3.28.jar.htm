<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>SpotBugs Report</title>
<style type="text/css">
		.tablerow0 {
			background: #EEEEEE;
		}

		.tablerow1 {
			background: white;
		}

		.detailrow0 {
			background: #EEEEEE;
		}

		.detailrow1 {
			background: white;
		}

		.tableheader {
			background: #b9b9fe;
			font-size: larger;
		}

		.tablerow0:hover, .tablerow1:hover {
			background: #aaffaa;
		}

		.priority-1 {
		    color: red;
		    font-weight: bold;
		}
		.priority-2 {
		    color: orange;
		    font-weight: bold;
		}
		.priority-3 {
		    color: green;
		    font-weight: bold;
		}
		.priority-4 {
		    color: blue;
		    font-weight: bold;
		}
		</style>
<script type="text/javascript">
			function toggleRow(elid) {
				if (document.getElementById) {
					element = document.getElementById(elid);
					if (element) {
						if (element.style.display == 'none') {
							element.style.display = 'block';
							//window.status = 'Toggle on!';
						} else {
							element.style.display = 'none';
							//window.status = 'Toggle off!';
						}
					}
				}
			}
		</script>
</head>
<body>
<h1>
<a href="https://spotbugs.github.io/">SpotBugs</a> Report</h1>
<h2>Project Information</h2>
<p>Project: 
		</p>
<p>SpotBugs version: 3.1.12</p>
<p>Code analyzed:</p>
<ul>
<li>/home/x/CryptoAPIDetect/dataset/group/streams.git/freemarker-2.3.28.jar</li>
</ul>
<p>
<br/>
<br/>
</p>
<h2>Metrics</h2>
<p>46198 lines of code analyzed,
	in 1124 classes, 
	in 17 packages.</p>
<table width="500" cellpadding="5" cellspacing="2">
<tr class="tableheader">
<th align="left">Metric</th>
<th align="right">Total</th>
<th align="right">Density*</th>
</tr>
<tr class="tablerow0">
<td>High Priority Warnings</td>
<td align="right">8</td>
<td align="right">0.17</td>
</tr>
<tr class="tablerow1">
<td>Medium Priority Warnings</td>
<td align="right">54</td>
<td align="right">1.17</td>
</tr>
<tr class="$totalClass">
<td>
<b>Total Warnings</b>
</td>
<td align="right">
<b>62</b>
</td>
<td align="right">
<b>1.34</b>
</td>
</tr>
</table>
<p>
<i>(* Defects per Thousand lines of non-commenting source statements)</i>
</p>
<p>
<br/>
<br/>
</p>
<h2>Contents</h2>
<ul>
<li>
<a href="#Warnings_SECURITY">Security Warnings</a>
</li>
<li>
<a href="#Details">Details</a>
</li>
</ul>
<h1>Summary</h1>
<table width="500" cellpadding="5" cellspacing="2">
<tr class="tableheader">
<th align="left">Warning Type</th>
<th align="right">Number</th>
</tr>
<tr class="tablerow0">
<td>
<a href="#Warnings_SECURITY">Security Warnings</a>
</td>
<td align="right">62</td>
</tr>
<tr class="tablerow1">
<td>
<b>Total</b>
</td>
<td align="right">
<b>62</b>
</td>
</tr>
</table>
<h1>Warnings</h1>
<p>Click on a warning row to see full context information.</p>
<h2>
<a name="Warnings_SECURITY">Security Warnings</a>
</h2>
<table class="warningtable" width="100%" cellspacing="0">
<tr class="tableheader">
<th align="left">Code</th>
<th align="left">Warning</th>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69607');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69607" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class freemarker.template.TemplateException$PrintStreamStackTraceWriter<br/>In method freemarker.template.TemplateException$PrintStreamStackTraceWriter.printStandardStackTrace(Throwable)<br/>At TemplateException.java:[line 625]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69661');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69661" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class freemarker.template.TemplateException$PrintWriterStackTraceWriter<br/>In method freemarker.template.TemplateException$PrintWriterStackTraceWriter.printStandardStackTrace(Throwable)<br/>At TemplateException.java:[line 655]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70063');">
<td>
<span class="priority-2">SECCI</span>
</td>
<td>This usage of java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process; can be vulnerable to Command Injection</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70063" style="display: none;">
<a href="#COMMAND_INJECTION">Bug type COMMAND_INJECTION (click for details)</a>
<br/>In class freemarker.template.utility.Execute<br/>In method freemarker.template.utility.Execute.exec(List)<br/>At Execute.java:[line 83]<br/>Sink method java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process;<br/>Sink parameter 0<br/>Unknown source freemarker/template/utility/Execute.exec(Ljava/util/List;)Ljava/lang/Object; parameter 0<br/>Method usage not detected<br/>At Execute.java:[line 80]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67454');">
<td>
<span class="priority-2">SECFREEM</span>
</td>
<td>Potential template injection with Freemarker template</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67454" style="display: none;">
<a href="#TEMPLATE_INJECTION_FREEMARKER">Bug type TEMPLATE_INJECTION_FREEMARKER (click for details)</a>
<br/>In class freemarker.ext.dom.JaxenXPathSupport<br/>In method freemarker.ext.dom.JaxenXPathSupport.createInputSource(String, Template)<br/>At JaxenXPathSupport.java:[line 211]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67934');">
<td>
<span class="priority-2">SECFREEM</span>
</td>
<td>Potential template injection with Freemarker template</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67934" style="display: none;">
<a href="#TEMPLATE_INJECTION_FREEMARKER">Bug type TEMPLATE_INJECTION_FREEMARKER (click for details)</a>
<br/>In class freemarker.ext.dom.Transform<br/>In method freemarker.ext.dom.Transform.transform()<br/>At Transform.java:[line 106]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68377');">
<td>
<span class="priority-2">SECFREEM</span>
</td>
<td>Potential template injection with Freemarker template</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68377" style="display: none;">
<a href="#TEMPLATE_INJECTION_FREEMARKER">Bug type TEMPLATE_INJECTION_FREEMARKER (click for details)</a>
<br/>In class freemarker.ext.jdom.NodeListModel<br/>In method freemarker.ext.jdom.NodeListModel.main(String[])<br/>At NodeListModel.java:[line 1146]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68755');">
<td>
<span class="priority-2">SECFREEM</span>
</td>
<td>Potential template injection with Freemarker template</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68755" style="display: none;">
<a href="#TEMPLATE_INJECTION_FREEMARKER">Bug type TEMPLATE_INJECTION_FREEMARKER (click for details)</a>
<br/>In class freemarker.ext.jsp.FreemarkerTag<br/>In method freemarker.ext.jsp.FreemarkerTag.doEndTag()<br/>At FreemarkerTag.java:[line 112]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66253');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in freemarker.debug.DebuggerClient.getDebugger(InetAddress, int, String)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66253" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class freemarker.debug.DebuggerClient<br/>In method freemarker.debug.DebuggerClient.getDebugger(InetAddress, int, String)<br/>At DebuggerClient.java:[line 73]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66307');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in freemarker.debug.DebuggerClient.getDebugger(InetAddress, int, String)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66307" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class freemarker.debug.DebuggerClient<br/>In method freemarker.debug.DebuggerClient.getDebugger(InetAddress, int, String)<br/>At DebuggerClient.java:[line 78]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66531');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in freemarker.debug.impl.DebuggerServer$DebuggerAuthProtocol.run()</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66531" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class freemarker.debug.impl.DebuggerServer$DebuggerAuthProtocol<br/>In method freemarker.debug.impl.DebuggerServer$DebuggerAuthProtocol.run()<br/>At DebuggerServer.java:[line 101]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65551');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65551" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class freemarker.cache.FileTemplateLoader<br/>In method new freemarker.cache.FileTemplateLoader()<br/>At FileTemplateLoader.java:[line 87]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/security/AccessController.doPrivileged(Ljava/security/PrivilegedAction;)Ljava/lang/Object;<br/>Unknown source freemarker/template/utility/SecurityUtilities.getSystemProperty(Ljava/lang/String;)Ljava/lang/String;<br/>At FileTemplateLoader.java:[line 87]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65635');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65635" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class freemarker.cache.FileTemplateLoader$2<br/>In method freemarker.cache.FileTemplateLoader$2.run()<br/>At FileTemplateLoader.java:[line 158]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source freemarker/cache/FileTemplateLoader$2.val$name<br/>At FileTemplateLoader.java:[line 157]<br/>At FileTemplateLoader.java:[line 158]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65724');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65724" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class freemarker.cache.URLTemplateSource<br/>In method freemarker.cache.URLTemplateSource.lastModified()<br/>At URLTemplateSource.java:[line 78]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/net/JarURLConnection.getJarFileURL()Ljava/net/URL;<br/>Unknown source java/net/URL.getFile()Ljava/lang/String;<br/>At URLTemplateSource.java:[line 78]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65808');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65808" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class freemarker.cache.URLTemplateSource<br/>In method freemarker.cache.URLTemplateSource.lastModified()<br/>At URLTemplateSource.java:[line 99]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source freemarker/cache/URLTemplateSource.url<br/>Unknown source java/net/URL.getFile()Ljava/lang/String;<br/>At URLTemplateSource.java:[line 99]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66149');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66149" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class freemarker.cache.WebappTemplateLoader<br/>In method freemarker.cache.WebappTemplateLoader.findTemplateSource(String)<br/>At WebappTemplateLoader.java:[line 102]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source freemarker/cache/WebappTemplateLoader.findTemplateSource(Ljava/lang/String;)Ljava/lang/Object; parameter 0<br/>Unknown source freemarker/cache/WebappTemplateLoader.subdirPath<br/>Unknown source javax/servlet/ServletContext.getRealPath(Ljava/lang/String;)Ljava/lang/String;<br/>Method usage not detected<br/>At WebappTemplateLoader.java:[line 95]<br/>At WebappTemplateLoader.java:[line 100]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66643');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66643" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class freemarker.ext.ant.FreemarkerXmlTask<br/>In method freemarker.ext.ant.FreemarkerXmlTask.ensureDirectoryFor(File)<br/>At FreemarkerXmlTask.java:[line 596]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.getParent()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66712');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66712" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class freemarker.ext.ant.FreemarkerXmlTask<br/>In method freemarker.ext.ant.FreemarkerXmlTask.execute()<br/>At FreemarkerXmlTask.java:[line 389]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source freemarker/ext/ant/FreemarkerXmlTask.templateName<br/>At FreemarkerXmlTask.java:[line 389]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66791');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66791" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class freemarker.ext.ant.FreemarkerXmlTask<br/>In method freemarker.ext.ant.FreemarkerXmlTask.execute()<br/>At FreemarkerXmlTask.java:[line 391]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source freemarker/ext/ant/FreemarkerXmlTask.templateName<br/>At FreemarkerXmlTask.java:[line 391]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66870');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66870" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class freemarker.ext.ant.FreemarkerXmlTask<br/>In method freemarker.ext.ant.FreemarkerXmlTask.execute()<br/>At FreemarkerXmlTask.java:[line 400]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source freemarker/ext/ant/FreemarkerXmlTask.templateName<br/>At FreemarkerXmlTask.java:[line 400]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66949');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66949" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class freemarker.ext.ant.FreemarkerXmlTask<br/>In method freemarker.ext.ant.FreemarkerXmlTask.execute()<br/>At FreemarkerXmlTask.java:[line 403]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source freemarker/ext/ant/FreemarkerXmlTask.templateName<br/>At FreemarkerXmlTask.java:[line 403]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67028');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67028" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class freemarker.ext.ant.FreemarkerXmlTask<br/>In method freemarker.ext.ant.FreemarkerXmlTask.execute()<br/>At FreemarkerXmlTask.java:[line 421]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source freemarker/ext/ant/FreemarkerXmlTask.projectAttribute<br/>At FreemarkerXmlTask.java:[line 421]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67107');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67107" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class freemarker.ext.ant.FreemarkerXmlTask<br/>In method freemarker.ext.ant.FreemarkerXmlTask.process(File, String, File)<br/>At FreemarkerXmlTask.java:[line 476]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source freemarker/ext/ant/FreemarkerXmlTask.process(Ljava/io/File;Ljava/lang/String;Ljava/io/File;)V parameter 1<br/>At FreemarkerXmlTask.java:[line 451]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67186');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67186" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class freemarker.ext.ant.FreemarkerXmlTask<br/>In method freemarker.ext.ant.FreemarkerXmlTask.process(File, String, File)<br/>At FreemarkerXmlTask.java:[line 479]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source freemarker/ext/ant/FreemarkerXmlTask.extension<br/>Unknown source freemarker/ext/ant/FreemarkerXmlTask.process(Ljava/io/File;Ljava/lang/String;Ljava/io/File;)V parameter 1<br/>At FreemarkerXmlTask.java:[line 451]<br/>At FreemarkerXmlTask.java:[line 479]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67682');">
<td>
<span class="priority-1">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67682" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class freemarker.ext.dom.Transform<br/>In method freemarker.ext.dom.Transform.transformFromArgs(String[])<br/>At Transform.java:[line 157]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source freemarker/ext/dom/Transform.transformFromArgs([Ljava/lang/String;)Lfreemarker/ext/dom/Transform; parameter 0<br/>Method usage with tainted arguments detected<br/>At Transform.java:[line 54]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67766');">
<td>
<span class="priority-1">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67766" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class freemarker.ext.dom.Transform<br/>In method freemarker.ext.dom.Transform.transformFromArgs(String[])<br/>At Transform.java:[line 158]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source freemarker/ext/dom/Transform.transformFromArgs([Ljava/lang/String;)Lfreemarker/ext/dom/Transform; parameter 0<br/>Method usage with tainted arguments detected<br/>At Transform.java:[line 54]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67850');">
<td>
<span class="priority-1">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67850" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class freemarker.ext.dom.Transform<br/>In method freemarker.ext.dom.Transform.transformFromArgs(String[])<br/>At Transform.java:[line 173]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source freemarker/ext/dom/Transform.transformFromArgs([Ljava/lang/String;)Lfreemarker/ext/dom/Transform; parameter 0<br/>Method usage with tainted arguments detected<br/>At Transform.java:[line 54]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68308');">
<td>
<span class="priority-1">SECPTI</span>
</td>
<td>This API (java/io/FileReader.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68308" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class freemarker.ext.jdom.NodeListModel<br/>In method freemarker.ext.jdom.NodeListModel.main(String[])<br/>At NodeListModel.java:[line 1143]<br/>Sink method java/io/FileReader.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Tainted source freemarker/ext/jdom/NodeListModel.main([Ljava/lang/String;)V parameter 0</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68809');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68809" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class freemarker.ext.jsp.TaglibFactory<br/>In method freemarker.ext.jsp.TaglibFactory.urlToFileOrNull(URL)<br/>At TaglibFactory.java:[line 1030]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source freemarker/ext/jsp/TaglibFactory.urlToFileOrNull(Ljava/net/URL;)Ljava/io/File; parameter 0<br/>Unknown source java/net/URL.getFile()Ljava/lang/String;<br/>Unknown source java/net/URI.getSchemeSpecificPart()Ljava/lang/String;<br/>Unknown source java/net/URL.toURI()Ljava/net/URI;<br/>Unknown source java/net/URLDecoder.decode(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At TaglibFactory.java:[line 502]<br/>At TaglibFactory.java:[line 517]<br/>At TaglibFactory.java:[line 521]<br/>At TaglibFactory.java:[line 603]<br/>At TaglibFactory.java:[line 676]<br/>At TaglibFactory.java:[line 681]<br/>At TaglibFactory.java:[line 685]<br/>At TaglibFactory.java:[line 1020]<br/>At TaglibFactory.java:[line 1025]<br/>At TaglibFactory.java:[line 1040]<br/>At TaglibFactory.java:[line 1046]<br/>At TaglibFactory.java:[line 1953]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69418');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69418" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class freemarker.ext.servlet.InitParamParser<br/>In method freemarker.ext.servlet.InitParamParser.createTemplateLoader(String, Configuration, Class, ServletContext)<br/>At InitParamParser.java:[line 83]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source freemarker/ext/servlet/InitParamParser.createTemplateLoader(Ljava/lang/String;Lfreemarker/template/Configuration;Ljava/lang/Class;Ljavax/servlet/ServletContext;)Lfreemarker/cache/TemplateLoader; parameter 3<br/>At FreemarkerServlet.java:[line 591]<br/>At FreemarkerServlet.java:[line 758]<br/>At InitParamParser.java:[line 60]<br/>At InitParamParser.java:[line 61]<br/>At InitParamParser.java:[line 82]<br/>At InitParamParser.java:[line 90]<br/>At InitParamParser.java:[line 91]<br/>At InitParamParser.java:[line 94]<br/>At InitParamParser.java:[line 95]<br/>At InitParamParser.java:[line 164]<br/>At InitParamParser.java:[line 166]<br/>At InitParamParser.java:[line 170]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70147');">
<td>
<span class="priority-1">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70147" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class freemarker.template.utility.ToCanonical<br/>In method freemarker.template.utility.ToCanonical.main(String[])<br/>At ToCanonical.java:[line 49]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Tainted source freemarker/template/utility/ToCanonical.main([Ljava/lang/String;)V parameter 0</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70216');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70216" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class freemarker.template.utility.ToCanonical<br/>In method freemarker.template.utility.ToCanonical.convertFile(File)<br/>At ToCanonical.java:[line 66]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.getName()Ljava/lang/String;<br/>At ToCanonical.java:[line 66]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69715');">
<td>
<span class="priority-2">SECRD</span>
</td>
<td>The regular expression "(-?[0-9]+)-([0-9]{2})-([0-9]{2})T([0-9]{2}):([0-9]{2}):([0-9]{2})(?:\\.([0-9]+))?(Z|(?:[-+][0-9]{2}:[0-9]{2}))?" is vulnerable to a denial of service attack (ReDOS)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69715" style="display: none;">
<a href="#REDOS">Bug type REDOS (click for details)</a>
<br/>Value (-?[0-9]+)-([0-9]{2})-([0-9]{2})T([0-9]{2}):([0-9]{2}):([0-9]{2})(?:\\.([0-9]+))?(Z|(?:[-+][0-9]{2}:[0-9]{2}))?<br/>In class freemarker.template.utility.DateUtil<br/>In method freemarker.template.utility.DateUtil.&lt;static initializer for DateUtil&gt;()<br/>At DateUtil.java:[line 105]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69773');">
<td>
<span class="priority-2">SECRD</span>
</td>
<td>The regular expression "(-?[0-9]{4,})-([0-9]{2})-([0-9]{2})T([0-9]{2})(?::([0-9]{2})(?::([0-9]{2})(?:[\\.,]([0-9]+))?)?)?(Z|(?:[-+][0-9]{2}(?::[0-9]{2})?))?" is vulnerable to a denial of service attack (ReDOS)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69773" style="display: none;">
<a href="#REDOS">Bug type REDOS (click for details)</a>
<br/>Value (-?[0-9]{4,})-([0-9]{2})-([0-9]{2})T([0-9]{2})(?::([0-9]{2})(?::([0-9]{2})(?:[\\.,]([0-9]+))?)?)?(Z|(?:[-+][0-9]{2}(?::[0-9]{2})?))?<br/>In class freemarker.template.utility.DateUtil<br/>In method freemarker.template.utility.DateUtil.&lt;static initializer for DateUtil&gt;()<br/>At DateUtil.java:[line 113]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69831');">
<td>
<span class="priority-2">SECRD</span>
</td>
<td>The regular expression "(-?[0-9]{4,}?)([0-9]{2})([0-9]{2})T([0-9]{2})(?:([0-9]{2})(?:([0-9]{2})(?:[\\.,]([0-9]+))?)?)?(Z|(?:[-+][0-9]{2}(?:[0-9]{2})?))?" is vulnerable to a denial of service attack (ReDOS)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69831" style="display: none;">
<a href="#REDOS">Bug type REDOS (click for details)</a>
<br/>Value (-?[0-9]{4,}?)([0-9]{2})([0-9]{2})T([0-9]{2})(?:([0-9]{2})(?:([0-9]{2})(?:[\\.,]([0-9]+))?)?)?(Z|(?:[-+][0-9]{2}(?:[0-9]{2})?))?<br/>In class freemarker.template.utility.DateUtil<br/>In method freemarker.template.utility.DateUtil.&lt;static initializer for DateUtil&gt;()<br/>At DateUtil.java:[line 109]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69889');">
<td>
<span class="priority-2">SECRD</span>
</td>
<td>The regular expression "([0-9]{2})(?:([0-9]{2})(?:([0-9]{2})(?:[\\.,]([0-9]+))?)?)?(Z|(?:[-+][0-9]{2}(?:[0-9]{2})?))?" is vulnerable to a denial of service attack (ReDOS)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69889" style="display: none;">
<a href="#REDOS">Bug type REDOS (click for details)</a>
<br/>Value ([0-9]{2})(?:([0-9]{2})(?:([0-9]{2})(?:[\\.,]([0-9]+))?)?)?(Z|(?:[-+][0-9]{2}(?:[0-9]{2})?))?<br/>In class freemarker.template.utility.DateUtil<br/>In method freemarker.template.utility.DateUtil.&lt;static initializer for DateUtil&gt;()<br/>At DateUtil.java:[line 100]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69947');">
<td>
<span class="priority-2">SECRD</span>
</td>
<td>The regular expression "([0-9]{2})(?::([0-9]{2})(?::([0-9]{2})(?:[\\.,]([0-9]+))?)?)?(Z|(?:[-+][0-9]{2}(?::[0-9]{2})?))?" is vulnerable to a denial of service attack (ReDOS)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69947" style="display: none;">
<a href="#REDOS">Bug type REDOS (click for details)</a>
<br/>Value ([0-9]{2})(?::([0-9]{2})(?::([0-9]{2})(?:[\\.,]([0-9]+))?)?)?(Z|(?:[-+][0-9]{2}(?::[0-9]{2})?))?<br/>In class freemarker.template.utility.DateUtil<br/>In method freemarker.template.utility.DateUtil.&lt;static initializer for DateUtil&gt;()<br/>At DateUtil.java:[line 102]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70005');">
<td>
<span class="priority-2">SECRD</span>
</td>
<td>The regular expression "([0-9]{2}):([0-9]{2}):([0-9]{2})(?:\\.([0-9]+))?(Z|(?:[-+][0-9]{2}:[0-9]{2}))?" is vulnerable to a denial of service attack (ReDOS)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70005" style="display: none;">
<a href="#REDOS">Bug type REDOS (click for details)</a>
<br/>Value ([0-9]{2}):([0-9]{2}):([0-9]{2})(?:\\.([0-9]+))?(Z|(?:[-+][0-9]{2}:[0-9]{2}))?<br/>In class freemarker.template.utility.DateUtil<br/>In method freemarker.template.utility.DateUtil.&lt;static initializer for DateUtil&gt;()<br/>At DateUtil.java:[line 98]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68431');">
<td>
<span class="priority-2">SECSFDR</span>
</td>
<td>RequestDispatcher populated with user controlled parameters</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68431" style="display: none;">
<a href="#REQUESTDISPATCHER_FILE_DISCLOSURE">Bug type REQUESTDISPATCHER_FILE_DISCLOSURE (click for details)</a>
<br/>In class freemarker.ext.jsp.FreeMarkerPageContext<br/>In method freemarker.ext.jsp.FreeMarkerPageContext.forward(String)<br/>At FreeMarkerPageContext.java:[line 384]<br/>Sink method javax/servlet/RequestDispatcher.forward(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V<br/>Sink parameter 2<br/>Unknown source freemarker/ext/jsp/FreeMarkerPageContext.forward(Ljava/lang/String;)V parameter 0<br/>Unknown source javax/servlet/http/HttpServletRequest.getRequestDispatcher(Ljava/lang/String;)Ljavax/servlet/RequestDispatcher;<br/>Method usage not detected<br/>At FreeMarkerPageContext.java:[line 384]<br/>At _FreeMarkerPageContext2.java:[line 39]<br/>At _FreeMarkerPageContext21.java:[line 45]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68539');">
<td>
<span class="priority-2">SECSFDR</span>
</td>
<td>RequestDispatcher populated with user controlled parameters</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68539" style="display: none;">
<a href="#REQUESTDISPATCHER_FILE_DISCLOSURE">Bug type REQUESTDISPATCHER_FILE_DISCLOSURE (click for details)</a>
<br/>In class freemarker.ext.jsp.FreeMarkerPageContext<br/>In method freemarker.ext.jsp.FreeMarkerPageContext.include(String)<br/>At FreeMarkerPageContext.java:[line 390]<br/>Sink method javax/servlet/RequestDispatcher.include(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V<br/>Sink parameter 2<br/>Unknown source javax/servlet/http/HttpServletRequest.getRequestDispatcher(Ljava/lang/String;)Ljavax/servlet/RequestDispatcher;<br/>Unknown source freemarker/ext/jsp/FreeMarkerPageContext.include(Ljava/lang/String;)V parameter 0<br/>Method usage not detected<br/>At FreeMarkerPageContext.java:[line 390]<br/>At _FreeMarkerPageContext2.java:[line 39]<br/>At _FreeMarkerPageContext2.java:[line 90]<br/>At _FreeMarkerPageContext21.java:[line 45]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68657');">
<td>
<span class="priority-2">SECSFDR</span>
</td>
<td>RequestDispatcher populated with user controlled parameters</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68657" style="display: none;">
<a href="#REQUESTDISPATCHER_FILE_DISCLOSURE">Bug type REQUESTDISPATCHER_FILE_DISCLOSURE (click for details)</a>
<br/>In class freemarker.ext.jsp.FreeMarkerPageContext<br/>In method freemarker.ext.jsp.FreeMarkerPageContext.include(String, boolean)<br/>At FreeMarkerPageContext.java:[line 399]<br/>Sink method javax/servlet/RequestDispatcher.include(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V<br/>Sink parameter 2<br/>Unknown source javax/servlet/http/HttpServletRequest.getRequestDispatcher(Ljava/lang/String;)Ljavax/servlet/RequestDispatcher;<br/>Unknown source freemarker/ext/jsp/FreeMarkerPageContext.include(Ljava/lang/String;Z)V parameter 1<br/>Method usage not detected<br/>At FreeMarkerPageContext.java:[line 399]<br/>At _FreeMarkerPageContext21.java:[line 45]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69335');">
<td>
<span class="priority-2">SECSFDR</span>
</td>
<td>RequestDispatcher populated with user controlled parameters</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69335" style="display: none;">
<a href="#REQUESTDISPATCHER_FILE_DISCLOSURE">Bug type REQUESTDISPATCHER_FILE_DISCLOSURE (click for details)</a>
<br/>In class freemarker.ext.servlet.IncludePage<br/>In method freemarker.ext.servlet.IncludePage.execute(Environment, Map, TemplateModel[], TemplateDirectiveBody)<br/>At IncludePage.java:[line 158]<br/>Sink method javax/servlet/RequestDispatcher.include(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V<br/>Sink parameter 2<br/>Unknown source javax/servlet/http/HttpServletRequest.getRequestDispatcher(Ljava/lang/String;)Ljavax/servlet/RequestDispatcher;<br/>Unknown source freemarker/template/TemplateScalarModel.getAsString()Ljava/lang/String;<br/>At IncludePage.java:[line 158]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66419');">
<td>
<span class="priority-2">SECSHA1</span>
</td>
<td>This API SHA (SHA-1) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66419" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_SHA1">Bug type WEAK_MESSAGE_DIGEST_SHA1 (click for details)</a>
<br/>In class freemarker.debug.DebuggerClient<br/>In method freemarker.debug.DebuggerClient.getDebugger(InetAddress, int, String)<br/>At DebuggerClient.java:[line 74]<br/>Value SHA</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66585');">
<td>
<span class="priority-2">SECSHA1</span>
</td>
<td>This API SHA (SHA-1) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66585" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_SHA1">Bug type WEAK_MESSAGE_DIGEST_SHA1 (click for details)</a>
<br/>In class freemarker.debug.impl.DebuggerServer$DebuggerAuthProtocol<br/>In method freemarker.debug.impl.DebuggerServer$DebuggerAuthProtocol.run()<br/>At DebuggerServer.java:[line 98]<br/>Value SHA</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65892');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65892" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class freemarker.cache.URLTemplateSource<br/>In method new freemarker.cache.URLTemplateSource(URL, Boolean)<br/>At URLTemplateSource.java:[line 43]<br/>Sink method java/net/URL.openConnection()Ljava/net/URLConnection;<br/>Sink parameter 0<br/>Unknown source freemarker/cache/URLTemplateSource.&lt;init&gt;(Ljava/net/URL;Ljava/lang/Boolean;)V parameter 1<br/>At URLTemplateLoader.java:[line 44]<br/>At WebappTemplateLoader.java:[line 95]<br/>At WebappTemplateLoader.java:[line 115]<br/>At WebappTemplateLoader.java:[line 121]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66001');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66001" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class freemarker.cache.URLTemplateSource<br/>In method freemarker.cache.URLTemplateSource.getInputStream()<br/>At URLTemplateSource.java:[line 115]<br/>Sink method java/net/URL.openConnection()Ljava/net/URLConnection;<br/>Sink parameter 0<br/>Unknown source freemarker/cache/URLTemplateSource.url<br/>At URLTemplateSource.java:[line 115]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66080');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66080" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class freemarker.cache.URLTemplateSource<br/>In method freemarker.cache.URLTemplateSource.lastModified()<br/>At URLTemplateSource.java:[line 83]<br/>Sink method java/net/URL.openConnection()Ljava/net/URLConnection;<br/>Sink parameter 0<br/>Unknown source java/net/JarURLConnection.getJarFileURL()Ljava/net/URL;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69018');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69018" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class freemarker.ext.jsp.TaglibFactory<br/>In method freemarker.ext.jsp.TaglibFactory.addTldLocationsFromJarDirectoryEntryURL(URL)<br/>At TaglibFactory.java:[line 666]<br/>Sink method java/net/URL.openConnection()Ljava/net/URLConnection;<br/>Sink parameter 0<br/>Unknown source freemarker/ext/jsp/TaglibFactory.addTldLocationsFromJarDirectoryEntryURL(Ljava/net/URL;)V parameter 0<br/>At TaglibFactory.java:[line 502]<br/>At TaglibFactory.java:[line 521]<br/>At TaglibFactory.java:[line 1953]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69117');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69117" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class freemarker.ext.jsp.TaglibFactory<br/>In method freemarker.ext.jsp.TaglibFactory.addTldLocationsFromJarDirectoryEntryURL(URL)<br/>At TaglibFactory.java:[line 710]<br/>Sink method java/net/URL.openStream()Ljava/io/InputStream;<br/>Sink parameter 0<br/>Unknown source java/net/URL.&lt;init&gt;(Ljava/lang/String;)V<br/>Unknown source freemarker/ext/jsp/TaglibFactory.addTldLocationsFromJarDirectoryEntryURL(Ljava/net/URL;)V parameter 0<br/>Unknown source java/net/URL.toExternalForm()Ljava/lang/String;<br/>At TaglibFactory.java:[line 502]<br/>At TaglibFactory.java:[line 521]<br/>At TaglibFactory.java:[line 676]<br/>At TaglibFactory.java:[line 681]<br/>At TaglibFactory.java:[line 710]<br/>At TaglibFactory.java:[line 1953]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69256');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69256" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class freemarker.ext.jsp.TaglibFactory$JarEntryTldLocation<br/>In method freemarker.ext.jsp.TaglibFactory$JarEntryTldLocation.getInputStream()<br/>At TaglibFactory.java:[line 1312]<br/>Sink method java/net/URL.openStream()Ljava/io/InputStream;<br/>Sink parameter 0<br/>Unknown source freemarker/ext/jsp/TaglibFactory$JarEntryTldLocation.entryUrl<br/>At TaglibFactory.java:[line 1312]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67988');">
<td>
<span class="priority-2">SECUHE</span>
</td>
<td>Unsafe comparison of hash that are susceptible to timing attack</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67988" style="display: none;">
<a href="#UNSAFE_HASH_EQUALS">Bug type UNSAFE_HASH_EQUALS (click for details)</a>
<br/>In class freemarker.ext.dom.Transform<br/>In method freemarker.ext.dom.Transform.transformFromArgs(String[])<br/>At Transform.java:[line 122]<br/>Sink method java/lang/String.equals(Ljava/lang/Object;)Z<br/>Sink parameter 0</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68052');">
<td>
<span class="priority-2">SECUHE</span>
</td>
<td>Unsafe comparison of hash that are susceptible to timing attack</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68052" style="display: none;">
<a href="#UNSAFE_HASH_EQUALS">Bug type UNSAFE_HASH_EQUALS (click for details)</a>
<br/>In class freemarker.ext.dom.Transform<br/>In method freemarker.ext.dom.Transform.transformFromArgs(String[])<br/>At Transform.java:[line 127]<br/>Sink method java/lang/String.equals(Ljava/lang/Object;)Z<br/>Sink parameter 0</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68116');">
<td>
<span class="priority-2">SECUHE</span>
</td>
<td>Unsafe comparison of hash that are susceptible to timing attack</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68116" style="display: none;">
<a href="#UNSAFE_HASH_EQUALS">Bug type UNSAFE_HASH_EQUALS (click for details)</a>
<br/>In class freemarker.ext.dom.Transform<br/>In method freemarker.ext.dom.Transform.transformFromArgs(String[])<br/>At Transform.java:[line 132]<br/>Sink method java/lang/String.equals(Ljava/lang/Object;)Z<br/>Sink parameter 0</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68180');">
<td>
<span class="priority-2">SECUHE</span>
</td>
<td>Unsafe comparison of hash that are susceptible to timing attack</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68180" style="display: none;">
<a href="#UNSAFE_HASH_EQUALS">Bug type UNSAFE_HASH_EQUALS (click for details)</a>
<br/>In class freemarker.ext.dom.Transform<br/>In method freemarker.ext.dom.Transform.transformFromArgs(String[])<br/>At Transform.java:[line 137]<br/>Sink method java/lang/String.equals(Ljava/lang/Object;)Z<br/>Sink parameter 0</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68244');">
<td>
<span class="priority-2">SECUHE</span>
</td>
<td>Unsafe comparison of hash that are susceptible to timing attack</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68244" style="display: none;">
<a href="#UNSAFE_HASH_EQUALS">Bug type UNSAFE_HASH_EQUALS (click for details)</a>
<br/>In class freemarker.ext.dom.Transform<br/>In method freemarker.ext.dom.Transform.transformFromArgs(String[])<br/>At Transform.java:[line 142]<br/>Sink method java/lang/String.equals(Ljava/lang/Object;)Z<br/>Sink parameter 0</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66361');">
<td>
<span class="priority-2">SECUS</span>
</td>
<td>Unencrypted socket to freemarker.debug.DebuggerClient (instead of SSLSocket)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66361" style="display: none;">
<a href="#UNENCRYPTED_SOCKET">Bug type UNENCRYPTED_SOCKET (click for details)</a>
<br/>In class freemarker.debug.DebuggerClient<br/>In method freemarker.debug.DebuggerClient.getDebugger(InetAddress, int, String)<br/>At DebuggerClient.java:[line 63]<br/>Value remote host</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66477');">
<td>
<span class="priority-2">SECUSS</span>
</td>
<td>Unencrypted server socket (instead of SSLServerSocket)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66477" style="display: none;">
<a href="#UNENCRYPTED_SERVER_SOCKET">Bug type UNENCRYPTED_SERVER_SOCKET (click for details)</a>
<br/>In class freemarker.debug.impl.DebuggerServer<br/>In method freemarker.debug.impl.DebuggerServer.startInternal()<br/>At DebuggerServer.java:[line 73]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67280');">
<td>
<span class="priority-2">SECXXEDOC</span>
</td>
<td>The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67280" style="display: none;">
<a href="#XXE_DOCUMENT">Bug type XXE_DOCUMENT (click for details)</a>
<br/>In class freemarker.ext.ant.FreemarkerXmlTask<br/>In method freemarker.ext.ant.FreemarkerXmlTask.process(File, String, File)<br/>At FreemarkerXmlTask.java:[line 493]<br/>Value DocumentBuilder.parse(...)</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67338');">
<td>
<span class="priority-2">SECXXEDOC</span>
</td>
<td>The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67338" style="display: none;">
<a href="#XXE_DOCUMENT">Bug type XXE_DOCUMENT (click for details)</a>
<br/>In class freemarker.ext.ant.FreemarkerXmlTask<br/>In method freemarker.ext.ant.FreemarkerXmlTask.process(File, String, File)<br/>At FreemarkerXmlTask.java:[line 494]<br/>Value DocumentBuilder.parse(...)</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67396');">
<td>
<span class="priority-2">SECXXEDOC</span>
</td>
<td>The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67396" style="display: none;">
<a href="#XXE_DOCUMENT">Bug type XXE_DOCUMENT (click for details)</a>
<br/>In class freemarker.ext.ant.FreemarkerXmlTask<br/>In method freemarker.ext.ant.FreemarkerXmlTask.process(File, String, File)<br/>At FreemarkerXmlTask.java:[line 499]<br/>Value DocumentBuilder.parse(...)</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67508');">
<td>
<span class="priority-2">SECXXEDOC</span>
</td>
<td>The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67508" style="display: none;">
<a href="#XXE_DOCUMENT">Bug type XXE_DOCUMENT (click for details)</a>
<br/>In class freemarker.ext.dom.JaxenXPathSupport$5<br/>In method freemarker.ext.dom.JaxenXPathSupport$5.getDocument(String)<br/>At JaxenXPathSupport.java:[line 180]<br/>Value DocumentBuilder.parse(...)</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67566');">
<td>
<span class="priority-2">SECXXEDOC</span>
</td>
<td>The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67566" style="display: none;">
<a href="#XXE_DOCUMENT">Bug type XXE_DOCUMENT (click for details)</a>
<br/>In class freemarker.ext.dom.NodeModel<br/>In method freemarker.ext.dom.NodeModel.parse(File, boolean, boolean)<br/>At NodeModel.java:[line 265]<br/>Value DocumentBuilder.parse(...)</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67624');">
<td>
<span class="priority-2">SECXXEDOC</span>
</td>
<td>The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67624" style="display: none;">
<a href="#XXE_DOCUMENT">Bug type XXE_DOCUMENT (click for details)</a>
<br/>In class freemarker.ext.dom.NodeModel<br/>In method freemarker.ext.dom.NodeModel.parse(InputSource, boolean, boolean)<br/>At NodeModel.java:[line 220]<br/>Value DocumentBuilder.parse(...)</p>
</td>
</tr>
</table>
<h1>
<a name="Details">Details</a>
</h1>
<h2>
<a name="INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE: Information Exposure Through An Error Message</a>
</h2>
            
<p>
The sensitive information may be valuable information on its own (such as a password), or it may be useful for launching other, more deadly attacks. If an attack fails, an attacker may use error information provided by the server to launch another more focused attack. For example, an attempt to exploit a path traversal weakness (CWE-22) might yield the full pathname of the installed application. In turn, this could be used to select the proper number of ".." sequences to navigate to the targeted file. An attack using SQL injection (CWE-89) might not initially succeed, but an error message could reveal the malformed query, which would expose query logic and possibly even passwords or other sensitive information used within the query.
</p>
<p>
    <b>Vulnerable Code:</b><br/>
<pre>try {
  out = httpResponse.getOutputStream()
} catch (Exception e) {
  e.printStackTrace(out);
}</pre>
</p>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/209.html">CWE-209: Information Exposure Through an Error Message</a><br/>
<a href="https://cwe.mitre.org/data/definitions/211.html">CWE-211: Information Exposure Through Externally-Generated Error Message</a><br/>
</p>
            
        
<h2>
<a name="COMMAND_INJECTION">COMMAND_INJECTION: Potential Command Injection</a>
</h2>
            
<p>The highlighted API is used to execute a system command. If unfiltered input is passed to this API, it can lead to arbitrary command execution.</p>
<br/>
<p>
    <b>Vulnerable Code:</b><br/>
<pre>import java.lang.Runtime;

Runtime r = Runtime.getRuntime();
r.exec("/bin/sh -c some_tool" + input);</pre>
</p>
<p>
<b>References</b><br/>
<a href="https://www.owasp.org/index.php/Command_Injection">OWASP: Command Injection</a><br/>
<a href="https://www.owasp.org/index.php/Top_10_2013-A1-Injection">OWASP: Top 10 2013-A1-Injection</a><br/>
<a href="https://cwe.mitre.org/data/definitions/78.html">CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')</a>
</p>

        
<h2>
<a name="TEMPLATE_INJECTION_FREEMARKER">TEMPLATE_INJECTION_FREEMARKER: Potential template injection with Freemarker</a>
</h2>
            
<p>
Freemarker template engine is powerful. It is possible to add logic including condition statements, loops and external calls.
It is not design to be sandbox to templating operations. A malicious user in control of a template can run malicious code
on the server-side. Freemarker templates should be seen as scripts.
</p>
<p>
    <b>Vulnerable Code:</b>
<pre>Template template = cfg.getTemplate(inputTemplate);
[...]
template.process(data, swOut);</pre>
</p>
<p>
    <b>Solution:</b>
<br/>
Avoid letting end users manipulate templates with Freemarker. If you need to expose template editing to your users,
prefer logic-less template engines such as Handlebars or Moustache (See references).
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://portswigger.net/research/server-side-template-injection">PortSwigger: Server-Side Template Injection</a><br/>
<a href="https://jknack.github.io/handlebars.java/">Handlebars.java</a><br/>
</p>
            
        
<h2>
<a name="OBJECT_DESERIALIZATION">OBJECT_DESERIALIZATION: Object deserialization is used in {1}</a>
</h2>
            
<p>
    Object deserialization of untrusted data can lead to remote code execution, if there is a class in classpath that allows
    the trigger of malicious operation.
</p>
<p>
    Libraries developers tend to fix class that provided potential malicious trigger. There are still classes that are
    known to trigger Denial of Service<sup>[1]</sup>.
</p>
<p>
    Deserialization is a sensible operation that has a great history of vulnerabilities. The web application might
    become vulnerable as soon as a new vulnerability is found in the Java Virtual Machine<sup>[2] [3]</sup>.
</p>

<p>
<b>Code at risk:</b><br/>
<pre>
public UserData deserializeObject(InputStream receivedFile) throws IOException, ClassNotFoundException {

    try (ObjectInputStream in = new ObjectInputStream(receivedFile)) {
        return (UserData) in.readObject();
    }
}
</pre>
</p>

<p>
<b>Solutions:</b><br/>
<p>
Avoid deserializing object provided by remote users.
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/502.html">CWE-502: Deserialization of Untrusted Data</a><br/>
<a href="https://www.owasp.org/index.php/Deserialization_of_untrusted_data">Deserialization of untrusted data</a><br/>
<a href="https://www.oracle.com/technetwork/java/seccodeguide-139067.html#8">Serialization and Deserialization </a><br/>
<a href="https://github.com/frohoff/ysoserial">A tool for generating payloads that exploit unsafe Java object deserialization</a><br/>
[1] <a href="https://gist.github.com/coekie/a27cc406fc9f3dc7a70d">Example of Denial of Service using the class <code>java.util.HashSet</code></a><br/>
[2] <a href="https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2015-2590">OpenJDK: Deserialization issue in ObjectInputStream.readSerialData() (CVE-2015-2590)</a><br/>
[3] <a href="https://www.rapid7.com/db/modules/exploit/multi/browser/java_calendar_deserialize">Rapid7: Sun Java Calendar Deserialization Privilege Escalation (CVE-2008-5353)</a>
</p>

        
<h2>
<a name="PATH_TRAVERSAL_IN">PATH_TRAVERSAL_IN: Potential Path Traversal (file read)</a>
</h2>
            
<p>A file is opened to read its content. The filename comes from an <b>input</b> parameter.
If an unfiltered parameter is passed to this file API, files from an arbitrary filesystem location could be read.</p>
<p>This rule identifies <b>potential</b> path traversal vulnerabilities. In many cases, the constructed file path cannot be controlled
by the user. If that is the case, the reported instance is a false positive.</p>
<br/>

<p>
    <b>Vulnerable Code:</b><br/>
<pre>@GET
@Path("/images/{image}")
@Produces("images/*")
public Response getImage(@javax.ws.rs.PathParam("image") String image) {
    File file = new File("resources/images/", image); //Weak point

    if (!file.exists()) {
        return Response.status(Status.NOT_FOUND).build();
    }

    return Response.ok().entity(new FileInputStream(file)).build();
}</pre>
</p>
<br/>

<p>
    <b>Solution:</b><br/>
<pre>import org.apache.commons.io.FilenameUtils;

@GET
@Path("/images/{image}")
@Produces("images/*")
public Response getImage(@javax.ws.rs.PathParam("image") String image) {
    File file = new File("resources/images/", FilenameUtils.getName(image)); //Fix

    if (!file.exists()) {
        return Response.status(Status.NOT_FOUND).build();
    }

    return Response.ok().entity(new FileInputStream(file)).build();
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="http://projects.webappsec.org/w/page/13246952/Path%20Traversal">WASC: Path Traversal</a><br/>
<a href="https://www.owasp.org/index.php/Path_Traversal">OWASP: Path Traversal</a><br/>
<a href="https://capec.mitre.org/data/definitions/126.html">CAPEC-126: Path Traversal</a><br/>
<a href="https://cwe.mitre.org/data/definitions/22.html">CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')</a>
</p>

        
<h2>
<a name="REDOS">REDOS: Regex DOS (ReDOS)</a>
</h2>
            
<p>
    Regular expressions (Regex) are frequently subject to Denial of Service (DOS) attacks (called ReDOS). This is due to the fact that regex engines
    may take a large amount of time when analyzing certain strings, depending on how the regex is defined.
<p>
    For example, for the regex: <code>^(a+)+$</code>, the input "<code>aaaaaaaaaaaaaaaaX</code>" will cause the regex engine to analyze 65536
different paths.<sup>[1] Example taken from OWASP references</sup></p>
<p>
Therefore, it is possible that a single request may cause a large amount of computation on the server side.
The problem with this regex, and others like it, is that there are two different ways the same input character can be accepted by the
Regex due to the <code>+</code> (or a <code>*</code>) inside the parenthesis, and the <code>+</code> (or a <code>*</code>) outside the parenthesis. The way this is written, either <code>+</code> could
consume the character 'a'. To fix this, the regex should be rewritten to eliminate the ambiguity. For example, this could simply be
rewritten as: <code>^a+$</code>, which is presumably what the author meant anyway (any number of a's). Assuming that's what the original
regex meant, this new regex can be evaluated quickly, and is not subject to ReDOS.
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://sebastiankuebeck.wordpress.com/2011/03/01/detecting-and-preventing-redos-vulnerabilities/">Sebastian Kubeck's Weblog: Detecting and Preventing ReDoS Vulnerabilities</a><br/>
<sup>[1]</sup> <a href="https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS">OWASP: Regular expression Denial of Service</a><br/>
<a href="https://cwe.mitre.org/data/definitions/400.html">CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion')</a>
</p>

        
<h2>
<a name="REQUESTDISPATCHER_FILE_DISCLOSURE">REQUESTDISPATCHER_FILE_DISCLOSURE: RequestDispatcher File Disclosure</a>
</h2>
            
<p>
Constructing a server-side redirect path with user input could allow an attacker to download application binaries (including application classes or jar files) or view arbitrary files within protected directories.<br/>
An attacker may be able to forge a request parameter to match sensitive file locations. For example, requesting <code>"http://example.com/?jspFile=../applicationContext.xml%3F"</code> would display the application's <code>applicationContext.xml</code> file. The attacker would be able to locate and download the <code>applicationContext.xml</code> referenced in the other configuration files, and even class files or jar files, obtaining sensitive information and launching other types of attacks.
</p>
<p>
    <b>Vulnerable Code:</b><br/>
<pre>...
String jspFile = request.getParameter("jspFile");
request.getRequestDispatcher("/WEB-INF/jsps/" + jspFile + ".jsp").include(request, response);
...</pre>
</p>
<p>
    <b>Solution:</b><br/>
Avoid constructing server-side redirects using user controlled input.
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/552.html">CWE-552: Files or Directories Accessible to External Parties</a><br/>
</p>
            
        
<h2>
<a name="WEAK_MESSAGE_DIGEST_SHA1">WEAK_MESSAGE_DIGEST_SHA1: SHA-1 is a weak hash function</a>
</h2>
            
<p>The algorithms SHA-1 is not a recommended algorithm for hash password, for signature verification and other
uses. <b>PBKDF2</b> should be used to hash password for example.</p>

<blockquote>
    "<b>SHA-1 for digital signature generation:</b><br/>
    SHA-1 may only be used for digital signature generation where specifically allowed by NIST protocol-specific guidance.
    For all other applications, <u>SHA-1 shall not be used for digital signature generation</u>.<br/>
    <b>SHA-1 for digital signature verification:</b><br/>
    For digital signature verification, <u>SHA-1 is allowed for legacy-use</u>.<br/>
    [...]<br/>
    <b>SHA-224, SHA-256, SHA-384, SHA-512, SHA-512/224, and SHA-512/256</b>:<br/>
    The use of these hash functions is acceptable for all hash function applications."<br/>
    - <a href="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-131Ar2.pdf">NIST: Transitioning the Use of Cryptographic Algorithms and Key Lengths p.15</a>
</blockquote>
<blockquote>
    "The main idea of a PBKDF is to slow dictionary or brute force attacks on the passwords by increasing the time
    needed to test each password. An attacker with a list of likely passwords can evaluate the PBKDF using the known
    iteration counter and the salt. Since an attacker has to spend a significant amount of computing time for each try,
    it becomes harder to apply the dictionary or brute force attacks."<br/>
- <a href="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-132.pdf">NIST: Recommendation for Password-Based Key Derivation  p.12</a>

</blockquote>
<br/>
<p>
    <b>Vulnerable Code:</b><br/>
    <pre>MessageDigest sha1Digest = MessageDigest.getInstance("SHA1");
    sha1Digest.update(password.getBytes());
    byte[] hashValue = sha1Digest.digest();</pre>
    <br/>
    <pre>byte[] hashValue = DigestUtils.getSha1Digest().digest(password.getBytes());</pre>
</p>
<br/>
<p>
    <b>Solution (Using bouncy castle):</b><br/>
    <pre>public static byte[] getEncryptedPassword(String password, byte[] salt) throws NoSuchAlgorithmException, InvalidKeySpecException {
    PKCS5S2ParametersGenerator gen = new PKCS5S2ParametersGenerator(new SHA256Digest());
    gen.init(password.getBytes("UTF-8"), salt.getBytes(), 4096);
    return ((KeyParameter) gen.generateDerivedParameters(256)).getKey();
}</pre>
    <br/>
    <b>Solution (Java 8 and later):</b><br/>
    <pre>public static byte[] getEncryptedPassword(String password, byte[] salt) throws NoSuchAlgorithmException, InvalidKeySpecException {
    KeySpec spec = new PBEKeySpec(password.toCharArray(), salt, 4096, 256 * 8);
    SecretKeyFactory f = SecretKeyFactory.getInstance("PBKDF2WithHmacSHA256");
    return f.generateSecret(spec).getEncoded();
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://community.qualys.com/blogs/securitylabs/2014/09/09/sha1-deprecation-what-you-need-to-know">Qualys blog: SHA1 Deprecation: What You Need to Know</a><br/>
<a href="https://googleonlinesecurity.blogspot.ca/2014/09/gradually-sunsetting-sha-1.html">Google Online Security Blog: Gradually sunsetting SHA-1</a><br/>
<a href="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-131Ar2.pdf">NIST: Transitioning the Use of Cryptographic Algorithms and Key Lengths</a><br/>
<a href="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-132.pdf">NIST: Recommendation for Password-Based Key Derivation</a><br/>
<a href="https://stackoverflow.com/q/22580853/89769">Stackoverflow: Reliable implementation of PBKDF2-HMAC-SHA256 for Java</a><br/>
<a href="https://cwe.mitre.org/data/definitions/327.html">CWE-327: Use of a Broken or Risky Cryptographic Algorithm</a>
</p>

        
<h2>
<a name="URLCONNECTION_SSRF_FD">URLCONNECTION_SSRF_FD: URLConnection Server-Side Request Forgery (SSRF) and File Disclosure</a>
</h2>
            
<p>
    Server-Side Request Forgery occur when a web server executes a request to a user supplied destination
    parameter that is not validated. Such vulnerabilities could allow an attacker to access internal services
    or to launch attacks from your web server.
</p>
<p>
    URLConnection can be used with file:// protocol or other protocols to access local filesystem and potentially other services.
<p>
    <b>Vulnerable Code:</b>
<pre>
new URL(String url).openConnection()
</pre>

<pre>
new URL(String url).openStream()
</pre>

<pre>
new URL(String url).getContent()
</pre>
</p>
<p>
    <b>Solution/Countermeasures:</b><br/>
    <ul>
        <li>Don't accept URL destinations from users</li>
        <li>Accept a destination key, and use it to look up the target destination associate with the key</li>
        <li>White list URLs (if possible)</li>
        <li>Validate that the beginning of the URL is part of a white list</li>
    </ul>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a><br/>
<a href="https://www.bishopfox.com/blog/2015/04/vulnerable-by-design-understanding-server-side-request-forgery/">Understanding Server-Side Request Forgery</a><br/>
<a href="https://cwe.mitre.org/data/definitions/73.html">CWE-73: External Control of File Name or Path</a><br/>
<a href="https://www.pwntester.com/blog/2013/11/28/abusing-jar-downloads/">Abusing jar:// downloads</a><br />
</p>
            
<h2>
<a name="UNSAFE_HASH_EQUALS">UNSAFE_HASH_EQUALS: Unsafe hash equals</a>
</h2>
            
<p>
An attacker might be able to detect the value of the secret hash due to the exposure of comparison timing. When the
functions <code>Arrays.equals()</code> or <code>String.equals()</code> are called, they will exit earlier if fewer
bytes are matched.
</p>
<p>
<p><b>Vulnerable Code:</b><br/>

<pre>
String actualHash = ...

if(userInput.equals(actualHash)) {
    ...
}</pre>
</p>
<p><b>Solution:</b><br/>

<pre>
String actualHash = ...

if(MessageDigest.isEqual(userInput.getBytes(),actualHash.getBytes())) {
    ...
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/203.html">CWE-203: Information Exposure Through DiscrepancyKey</a><br/>
</p>

        
<h2>
<a name="UNENCRYPTED_SOCKET">UNENCRYPTED_SOCKET: Unencrypted Socket</a>
</h2>
            
<p>
The communication channel used is not encrypted. The traffic could be read by an attacker intercepting the network traffic.
</p>
<p>
<b>Vulnerable Code:</b><br/>
Plain socket (Cleartext communication):
<pre>Socket soc = new Socket("www.google.com",80);</pre>
</p>
<p>
<b>Solution:</b><br/>
SSL Socket (Secure communication):
<pre>Socket soc = SSLSocketFactory.getDefault().createSocket("www.google.com", 443);</pre>
</p>
<p>Beyond using an SSL socket, you need to make sure your use of SSLSocketFactory does all the appropriate certificate validation checks to
make sure you are not subject to man-in-the-middle attacks. Please read the OWASP Transport Layer Protection Cheat Sheet for details on how
to do this correctly.
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://www.owasp.org/index.php/Top_10_2010-A9">OWASP: Top 10 2010-A9-Insufficient Transport Layer Protection</a><br/>
<a href="https://www.owasp.org/index.php/Top_10_2013-A6-Sensitive_Data_Exposure">OWASP: Top 10 2013-A6-Sensitive Data Exposure</a><br/>
<a href="https://www.owasp.org/index.php/Transport_Layer_Protection_Cheat_Sheet">OWASP: Transport Layer Protection Cheat Sheet</a><br/>
<a href="http://projects.webappsec.org/w/page/13246945/Insufficient%20Transport%20Layer%20Protection">WASC-04: Insufficient Transport Layer Protection</a><br/>
<a href="https://cwe.mitre.org/data/definitions/319.html">CWE-319: Cleartext Transmission of Sensitive Information</a>
</p>

        
<h2>
<a name="UNENCRYPTED_SERVER_SOCKET">UNENCRYPTED_SERVER_SOCKET: Unencrypted Server Socket</a>
</h2>
            
<p>
The communication channel used is not encrypted. The traffic could be read by an attacker intercepting the network traffic.
</p>
<p>
<b>Vulnerable Code:</b><br/>
Plain server socket (Cleartext communication):
<pre>ServerSocket soc = new ServerSocket(1234);</pre>
</p>
<p>
<b>Solution:</b><br/>
SSL Server Socket (Secure communication):
<pre>ServerSocket soc = SSLServerSocketFactory.getDefault().createServerSocket(1234);</pre>
</p>
<p>Beyond using an SSL server socket, you need to make sure your use of SSLServerSocketFactory does all the appropriate certificate validation checks to
make sure you are not subject to man-in-the-middle attacks. Please read the OWASP Transport Layer Protection Cheat Sheet for details on how
to do this correctly.
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://www.owasp.org/index.php/Top_10_2010-A9">OWASP: Top 10 2010-A9-Insufficient Transport Layer Protection</a><br/>
<a href="https://www.owasp.org/index.php/Top_10_2013-A6-Sensitive_Data_Exposure">OWASP: Top 10 2013-A6-Sensitive Data Exposure</a><br/>
<a href="https://www.owasp.org/index.php/Transport_Layer_Protection_Cheat_Sheet">OWASP: Transport Layer Protection Cheat Sheet</a><br/>
<a href="http://projects.webappsec.org/w/page/13246945/Insufficient%20Transport%20Layer%20Protection">WASC-04: Insufficient Transport Layer Protection</a><br/>
<a href="https://cwe.mitre.org/data/definitions/319.html">CWE-319: Cleartext Transmission of Sensitive Information</a>
</p>

        
<h2>
<a name="XXE_DOCUMENT">XXE_DOCUMENT: XML parsing vulnerable to XXE (DocumentBuilder)</a>
</h2>
            
<!--XXE_GENERIC_START-->
<h3>Attack</h3>
<p>XML External Entity (XXE) attacks can occur when an XML parser supports XML entities while processing XML received
from an untrusted source.</p>
<p><b>Risk 1: Expose local file content (XXE: <u>X</u>ML E<u>x</u>ternal <u>E</u>ntity)</b></p>
<p>
<pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;
&lt;!DOCTYPE foo [
   &lt;!ENTITY xxe SYSTEM &quot;file:///etc/passwd&quot; &gt; ]&gt;
&lt;foo&gt;&amp;xxe;&lt;/foo&gt;</pre>
</p>
<b>Risk 2: Denial of service (XEE: <u>X</u>ML <u>E</u>ntity <u>E</u>xpansion)</b>
<p>
<pre>
&lt;?xml version=&quot;1.0&quot;?&gt;
&lt;!DOCTYPE lolz [
 &lt;!ENTITY lol &quot;lol&quot;&gt;
 &lt;!ELEMENT lolz (#PCDATA)&gt;
 &lt;!ENTITY lol1 &quot;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&quot;&gt;
 &lt;!ENTITY lol2 &quot;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&quot;&gt;
 &lt;!ENTITY lol3 &quot;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&quot;&gt;
[...]
 &lt;!ENTITY lol9 &quot;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&quot;&gt;
]&gt;
&lt;lolz&gt;&amp;lol9;&lt;/lolz&gt;</pre>
</p>

<h3>Solution</h3>
<p>
In order to avoid exposing dangerous feature of the XML parser, you can do the following change to the code.
</p>
<!--XXE_GENERIC_END-->

<p><b>Vulnerable Code:</b></p>
<p>
<pre>
DocumentBuilder db = DocumentBuilderFactory.newInstance().newDocumentBuilder();

Document doc = db.parse(input);</pre>
</p>
<br/>
<p>
The following snippets show two available solutions. You can set one feature or both.
</p>

<p><b>Solution using "Secure processing" mode:</b></p>
<p>
This setting will protect you against Denial of Service attack and remote file access.
<pre>
DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
DocumentBuilder db = dbf.newDocumentBuilder();

Document doc = db.parse(input);</pre>
</p>

<p><b>Solution disabling DTD:</b></p>
<p>
By disabling DTD, almost all XXE attacks will be prevented.
<pre>
DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true);
DocumentBuilder db = dbf.newDocumentBuilder();

Document doc = db.parse(input);</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<!--XXE_GENERIC_START-->
<a href="https://cwe.mitre.org/data/definitions/611.html">CWE-611: Improper Restriction of XML External Entity Reference ('XXE')</a><br/>
<a href="https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=61702260">CERT: IDS10-J. Prevent XML external entity attacks</a><br/>
<a href="https://www.owasp.org/index.php/XML_External_Entity_%28XXE%29_Processing">OWASP.org: XML External Entity (XXE) Processing</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_Entity_Expansion">WS-Attacks.org: XML Entity Expansion</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_External_Entity_DOS">WS-Attacks.org: XML External Entity DOS</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_Entity_Reference_Attack">WS-Attacks.org: XML Entity Reference Attack</a><br/>
<a href="https://blog.h3xstream.com/2014/06/identifx-xml-external-entity.html">Identifx XML External Entity vulnerability (XXE)</a><br/>
<!--XXE_GENERIC_END-->
<a href="http://xerces.apache.org/xerces2-j/features.html">Xerces2 complete features list</a>
</p>

        </body>
</html>
