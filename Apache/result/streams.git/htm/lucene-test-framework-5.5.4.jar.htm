<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>SpotBugs Report</title>
<style type="text/css">
		.tablerow0 {
			background: #EEEEEE;
		}

		.tablerow1 {
			background: white;
		}

		.detailrow0 {
			background: #EEEEEE;
		}

		.detailrow1 {
			background: white;
		}

		.tableheader {
			background: #b9b9fe;
			font-size: larger;
		}

		.tablerow0:hover, .tablerow1:hover {
			background: #aaffaa;
		}

		.priority-1 {
		    color: red;
		    font-weight: bold;
		}
		.priority-2 {
		    color: orange;
		    font-weight: bold;
		}
		.priority-3 {
		    color: green;
		    font-weight: bold;
		}
		.priority-4 {
		    color: blue;
		    font-weight: bold;
		}
		</style>
<script type="text/javascript">
			function toggleRow(elid) {
				if (document.getElementById) {
					element = document.getElementById(elid);
					if (element) {
						if (element.style.display == 'none') {
							element.style.display = 'block';
							//window.status = 'Toggle on!';
						} else {
							element.style.display = 'none';
							//window.status = 'Toggle off!';
						}
					}
				}
			}
		</script>
</head>
<body>
<h1>
<a href="https://spotbugs.github.io/">SpotBugs</a> Report</h1>
<h2>Project Information</h2>
<p>Project: 
		</p>
<p>SpotBugs version: 3.1.12</p>
<p>Code analyzed:</p>
<ul>
<li>/home/x/CryptoAPIDetect/dataset/group/streams.git/lucene-test-framework-5.5.4.jar</li>
</ul>
<p>
<br/>
<br/>
</p>
<h2>Metrics</h2>
<p>24712 lines of code analyzed,
	in 456 classes, 
	in 20 packages.</p>
<table width="500" cellpadding="5" cellspacing="2">
<tr class="tableheader">
<th align="left">Metric</th>
<th align="right">Total</th>
<th align="right">Density*</th>
</tr>
<tr class="tablerow0">
<td>High Priority Warnings</td>
<td align="right"/>
<td align="right">0.00</td>
</tr>
<tr class="tablerow1">
<td>Medium Priority Warnings</td>
<td align="right">55</td>
<td align="right">2.23</td>
</tr>
<tr class="$totalClass">
<td>
<b>Total Warnings</b>
</td>
<td align="right">
<b>55</b>
</td>
<td align="right">
<b>2.23</b>
</td>
</tr>
</table>
<p>
<i>(* Defects per Thousand lines of non-commenting source statements)</i>
</p>
<p>
<br/>
<br/>
</p>
<h2>Contents</h2>
<ul>
<li>
<a href="#Warnings_SECURITY">Security Warnings</a>
</li>
<li>
<a href="#Details">Details</a>
</li>
</ul>
<h1>Summary</h1>
<table width="500" cellpadding="5" cellspacing="2">
<tr class="tableheader">
<th align="left">Warning Type</th>
<th align="right">Number</th>
</tr>
<tr class="tablerow0">
<td>
<a href="#Warnings_SECURITY">Security Warnings</a>
</td>
<td align="right">55</td>
</tr>
<tr class="tablerow1">
<td>
<b>Total</b>
</td>
<td align="right">
<b>55</b>
</td>
</tr>
</table>
<h1>Warnings</h1>
<p>Click on a warning row to see full context information.</p>
<h2>
<a name="Warnings_SECURITY">Security Warnings</a>
</h2>
<table class="warningtable" width="100%" cellspacing="0">
<tr class="tableheader">
<th align="left">Code</th>
<th align="left">Warning</th>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65551');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65551" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class org.apache.lucene.analysis.BaseTokenStreamTestCase<br/>In method org.apache.lucene.analysis.BaseTokenStreamTestCase.checkResetException(Analyzer, String)<br/>At BaseTokenStreamTestCase.java:[line 400]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66549');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66549" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class org.apache.lucene.index.BaseIndexFileFormatTestCase<br/>In method org.apache.lucene.index.BaseIndexFileFormatTestCase.testRandomExceptions()<br/>At BaseIndexFileFormatTestCase.java:[line 445]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66603');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66603" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class org.apache.lucene.index.BaseIndexFileFormatTestCase<br/>In method org.apache.lucene.index.BaseIndexFileFormatTestCase.testRandomExceptions()<br/>At BaseIndexFileFormatTestCase.java:[line 486]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66657');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66657" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class org.apache.lucene.index.BaseIndexFileFormatTestCase<br/>In method org.apache.lucene.index.BaseIndexFileFormatTestCase.testRandomExceptions()<br/>At BaseIndexFileFormatTestCase.java:[line 502]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67175');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67175" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class org.apache.lucene.index.ThreadedIndexingAndSearchingTestCase$2<br/>In method org.apache.lucene.index.ThreadedIndexingAndSearchingTestCase$2.run()<br/>At ThreadedIndexingAndSearchingTestCase.java:[line 394]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67867');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67867" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class org.apache.lucene.search.ShardSearchingTestBase$ChangeIndices<br/>In method org.apache.lucene.search.ShardSearchingTestBase$ChangeIndices.run()<br/>At ShardSearchingTestBase.java:[line 582]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67921');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67921" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class org.apache.lucene.store.BaseLockFactoryTestCase$SearcherThread<br/>In method org.apache.lucene.store.BaseLockFactoryTestCase$SearcherThread.run()<br/>At BaseLockFactoryTestCase.java:[line 299]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67975');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67975" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class org.apache.lucene.store.BaseLockFactoryTestCase$WriterThread<br/>In method org.apache.lucene.store.BaseLockFactoryTestCase$WriterThread.run()<br/>At BaseLockFactoryTestCase.java:[line 249]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68029');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68029" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class org.apache.lucene.store.BaseLockFactoryTestCase$WriterThread<br/>In method org.apache.lucene.store.BaseLockFactoryTestCase$WriterThread.run()<br/>At BaseLockFactoryTestCase.java:[line 260]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68083');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68083" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class org.apache.lucene.store.BaseLockFactoryTestCase$WriterThread<br/>In method org.apache.lucene.store.BaseLockFactoryTestCase$WriterThread.run()<br/>At BaseLockFactoryTestCase.java:[line 269]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68137');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68137" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class org.apache.lucene.store.MockDirectoryWrapper<br/>In method org.apache.lucene.store.MockDirectoryWrapper.maybeThrowDeterministicException()<br/>At MockDirectoryWrapper.java:[line 962]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68191');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68191" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class org.apache.lucene.store.MockDirectoryWrapper<br/>In method org.apache.lucene.store.MockDirectoryWrapper.maybeThrowIOException(String)<br/>At MockDirectoryWrapper.java:[line 442]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68245');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68245" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class org.apache.lucene.store.MockDirectoryWrapper<br/>In method org.apache.lucene.store.MockDirectoryWrapper.maybeThrowIOExceptionOnOpen(String)<br/>At MockDirectoryWrapper.java:[line 452]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68357');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68357" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class org.apache.lucene.store.MockIndexInputWrapper<br/>In method org.apache.lucene.store.MockIndexInputWrapper.clone()<br/>At MockIndexInputWrapper.java:[line 74]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68411');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68411" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class org.apache.lucene.store.MockIndexInputWrapper<br/>In method org.apache.lucene.store.MockIndexInputWrapper.slice(String, long, long)<br/>At MockIndexInputWrapper.java:[line 101]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68465');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68465" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class org.apache.lucene.store.MockIndexOutputWrapper<br/>In method org.apache.lucene.store.MockIndexOutputWrapper.checkDiskFull(byte[], int, DataInput, long)<br/>At MockIndexOutputWrapper.java:[line 85]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65679');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65679" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.lucene.analysis.BaseTokenStreamTestCase<br/>In method org.apache.lucene.analysis.BaseTokenStreamTestCase.checkAnalysisConsistency(Random, Analyzer, boolean, String, boolean, Field)<br/>At BaseTokenStreamTestCase.java:[line 816]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65737');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65737" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.lucene.analysis.BaseTokenStreamTestCase<br/>In method org.apache.lucene.analysis.BaseTokenStreamTestCase.checkAnalysisConsistency(Random, Analyzer, boolean, String, boolean, Field)<br/>At BaseTokenStreamTestCase.java:[line 889]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65795');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65795" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.lucene.analysis.BaseTokenStreamTestCase<br/>In method org.apache.lucene.analysis.BaseTokenStreamTestCase.checkRandomData(Random, Analyzer, int, int, boolean, boolean)<br/>At BaseTokenStreamTestCase.java:[line 521]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65853');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65853" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.lucene.analysis.BaseTokenStreamTestCase<br/>In method org.apache.lucene.analysis.BaseTokenStreamTestCase.checkRandomData(Random, Analyzer, int, int, boolean, boolean)<br/>At BaseTokenStreamTestCase.java:[line 525]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65911');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65911" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.lucene.analysis.BaseTokenStreamTestCase$AnalysisThread<br/>In method org.apache.lucene.analysis.BaseTokenStreamTestCase$AnalysisThread.run()<br/>At BaseTokenStreamTestCase.java:[line 495]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65969');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65969" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.lucene.analysis.MockAnalyzer<br/>In method new org.apache.lucene.analysis.MockAnalyzer(Random, CharacterRunAutomaton, boolean, CharacterRunAutomaton)<br/>At MockAnalyzer.java:[line 65]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66027');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66027" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.lucene.analysis.MockGraphTokenFilter<br/>In method org.apache.lucene.analysis.MockGraphTokenFilter.reset()<br/>At MockGraphTokenFilter.java:[line 103]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66085');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66085" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.lucene.analysis.MockHoleInjectingTokenFilter<br/>In method org.apache.lucene.analysis.MockHoleInjectingTokenFilter.reset()<br/>At MockHoleInjectingTokenFilter.java:[line 50]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66143');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66143" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.lucene.analysis.MockRandomLookaheadTokenFilter<br/>In method new org.apache.lucene.analysis.MockRandomLookaheadTokenFilter(Random, TokenStream)<br/>At MockRandomLookaheadTokenFilter.java:[line 38]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66201');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66201" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.lucene.analysis.MockTokenizer<br/>In method new org.apache.lucene.analysis.MockTokenizer(AttributeFactory, CharacterRunAutomaton, boolean, int)<br/>At MockTokenizer.java:[line 89]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66259');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66259" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.lucene.codecs.mockrandom.MockRandomPostingsFormat<br/>In method new org.apache.lucene.codecs.mockrandom.MockRandomPostingsFormat(Random)<br/>At MockRandomPostingsFormat.java:[line 79]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66317');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66317" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.lucene.codecs.mockrandom.MockRandomPostingsFormat<br/>In method org.apache.lucene.codecs.mockrandom.MockRandomPostingsFormat.fieldsConsumer(SegmentWriteState)<br/>At MockRandomPostingsFormat.java:[line 117]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66375');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66375" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.lucene.codecs.mockrandom.MockRandomPostingsFormat<br/>In method org.apache.lucene.codecs.mockrandom.MockRandomPostingsFormat.fieldsProducer(SegmentReadState)<br/>At MockRandomPostingsFormat.java:[line 277]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66433');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66433" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.lucene.codecs.mockrandom.MockRandomPostingsFormat$1<br/>In method new org.apache.lucene.codecs.mockrandom.MockRandomPostingsFormat$1(MockRandomPostingsFormat, long)<br/>At MockRandomPostingsFormat.java:[line 72]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66491');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66491" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.lucene.codecs.mockrandom.MockRandomPostingsFormat$2<br/>In method new org.apache.lucene.codecs.mockrandom.MockRandomPostingsFormat$2(MockRandomPostingsFormat, long, int)<br/>At MockRandomPostingsFormat.java:[line 203]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66711');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66711" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.lucene.index.MockRandomMergePolicy<br/>In method new org.apache.lucene.index.MockRandomMergePolicy(Random)<br/>At MockRandomMergePolicy.java:[line 39]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66769');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66769" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.lucene.index.MockRandomMergePolicy$MockRandomOneMerge<br/>In method new org.apache.lucene.index.MockRandomMergePolicy$MockRandomOneMerge(List, long)<br/>At MockRandomMergePolicy.java:[line 144]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66827');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66827" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.lucene.index.RandomIndexWriter<br/>In method new org.apache.lucene.index.RandomIndexWriter(Random, Directory, IndexWriterConfig, boolean)<br/>At RandomIndexWriter.java:[line 112]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66885');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66885" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.lucene.index.RandomIndexWriter<br/>In method org.apache.lucene.index.RandomIndexWriter.mockIndexWriter(Directory, IndexWriterConfig, Random)<br/>At RandomIndexWriter.java:[line 55]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66943');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66943" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.lucene.index.RandomPostingsTester<br/>In method org.apache.lucene.index.RandomPostingsTester.testTerms(Fields, EnumSet, IndexOptions, IndexOptions, boolean)<br/>At RandomPostingsTester.java:[line 1023]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67001');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67001" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.lucene.index.RandomPostingsTester$SeedPostings<br/>In method new org.apache.lucene.index.RandomPostingsTester$SeedPostings(long, int, int, IndexOptions, boolean)<br/>At RandomPostingsTester.java:[line 248]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67059');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67059" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.lucene.index.RandomPostingsTester$SeedPostings<br/>In method new org.apache.lucene.index.RandomPostingsTester$SeedPostings(long, int, int, IndexOptions, boolean)<br/>At RandomPostingsTester.java:[line 249]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67117');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67117" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.lucene.index.ThreadedIndexingAndSearchingTestCase<br/>In method org.apache.lucene.index.ThreadedIndexingAndSearchingTestCase.runTest(String)<br/>At ThreadedIndexingAndSearchingTestCase.java:[line 431]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67229');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67229" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.lucene.mockfile.ShuffleFS<br/>In method org.apache.lucene.mockfile.ShuffleFS.newDirectoryStream(Path, DirectoryStream$Filter)<br/>At ShuffleFS.java:[line 64]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67287');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67287" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.lucene.search.AssertingIndexSearcher<br/>In method new org.apache.lucene.search.AssertingIndexSearcher(Random, IndexReader)<br/>At AssertingIndexSearcher.java:[line 36]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67345');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67345" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.lucene.search.AssertingIndexSearcher<br/>In method new org.apache.lucene.search.AssertingIndexSearcher(Random, IndexReader, ExecutorService)<br/>At AssertingIndexSearcher.java:[line 46]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67403');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67403" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.lucene.search.AssertingIndexSearcher<br/>In method new org.apache.lucene.search.AssertingIndexSearcher(Random, IndexReaderContext)<br/>At AssertingIndexSearcher.java:[line 41]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67461');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67461" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.lucene.search.AssertingIndexSearcher<br/>In method new org.apache.lucene.search.AssertingIndexSearcher(Random, IndexReaderContext, ExecutorService)<br/>At AssertingIndexSearcher.java:[line 51]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67519');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67519" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.lucene.search.AssertingQuery<br/>In method org.apache.lucene.search.AssertingQuery.createWeight(IndexSearcher, boolean)<br/>At AssertingQuery.java:[line 43]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67577');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67577" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.lucene.search.AssertingQuery<br/>In method org.apache.lucene.search.AssertingQuery.rewrite(IndexReader)<br/>At AssertingQuery.java:[line 74]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67635');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67635" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.lucene.search.AssertingWeight<br/>In method org.apache.lucene.search.AssertingWeight.bulkScorer(LeafReaderContext)<br/>At AssertingWeight.java:[line 73]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67693');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67693" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.lucene.search.AssertingWeight<br/>In method org.apache.lucene.search.AssertingWeight.scorer(LeafReaderContext)<br/>At AssertingWeight.java:[line 63]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67751');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67751" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.lucene.search.RandomApproximationQuery<br/>In method org.apache.lucene.search.RandomApproximationQuery.createWeight(IndexSearcher, boolean)<br/>At RandomApproximationQuery.java:[line 79]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67809');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67809" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.lucene.search.RandomApproximationQuery$RandomApproximationWeight<br/>In method org.apache.lucene.search.RandomApproximationQuery$RandomApproximationWeight.scorer(LeafReaderContext)<br/>At RandomApproximationQuery.java:[line 119]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68299');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68299" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.lucene.store.MockDirectoryWrapper<br/>In method new org.apache.lucene.store.MockDirectoryWrapper(Random, Directory)<br/>At MockDirectoryWrapper.java:[line 128]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68598');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68598" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.lucene.util.LuceneTestCase<br/>In method org.apache.lucene.util.LuceneTestCase.newAlcoholicMergePolicy(Random, TimeZone)<br/>At LuceneTestCase.java:[line 1043]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68656');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68656" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.lucene.util.TestRuleSetupAndRestoreClassEnv<br/>In method org.apache.lucene.util.TestRuleSetupAndRestoreClassEnv.before()<br/>At TestRuleSetupAndRestoreClassEnv.java:[line 147]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65605');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65605" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.lucene.analysis.BaseTokenStreamTestCase<br/>In method org.apache.lucene.analysis.BaseTokenStreamTestCase.toDotFile(Analyzer, String, String)<br/>At BaseTokenStreamTestCase.java:[line 911]<br/>Sink method java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;<br/>Sink parameter 1<br/>Unknown source org/apache/lucene/analysis/BaseTokenStreamTestCase.toDotFile(Lorg/apache/lucene/analysis/Analyzer;Ljava/lang/String;Ljava/lang/String;)V parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68519');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68519" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.lucene.util.LineFileDocs<br/>In method org.apache.lucene.util.LineFileDocs.open(Random)<br/>At LineFileDocs.java:[line 91]<br/>Sink method java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;<br/>Sink parameter 1<br/>Unknown source org/apache/lucene/util/LineFileDocs.path<br/>At LineFileDocs.java:[line 91]</p>
</td>
</tr>
</table>
<h1>
<a name="Details">Details</a>
</h1>
<h2>
<a name="INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE: Information Exposure Through An Error Message</a>
</h2>
            
<p>
The sensitive information may be valuable information on its own (such as a password), or it may be useful for launching other, more deadly attacks. If an attack fails, an attacker may use error information provided by the server to launch another more focused attack. For example, an attempt to exploit a path traversal weakness (CWE-22) might yield the full pathname of the installed application. In turn, this could be used to select the proper number of ".." sequences to navigate to the targeted file. An attack using SQL injection (CWE-89) might not initially succeed, but an error message could reveal the malformed query, which would expose query logic and possibly even passwords or other sensitive information used within the query.
</p>
<p>
    <b>Vulnerable Code:</b><br/>
<pre>try {
  out = httpResponse.getOutputStream()
} catch (Exception e) {
  e.printStackTrace(out);
}</pre>
</p>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/209.html">CWE-209: Information Exposure Through an Error Message</a><br/>
<a href="https://cwe.mitre.org/data/definitions/211.html">CWE-211: Information Exposure Through Externally-Generated Error Message</a><br/>
</p>
            
        
<h2>
<a name="PREDICTABLE_RANDOM">PREDICTABLE_RANDOM: Predictable pseudorandom number generator</a>
</h2>
            
<p>The use of a predictable random value can lead to vulnerabilities when used in certain security critical contexts. For example, when the value is used as:</p>
<ul>
<li>a CSRF token: a predictable token can lead to a CSRF attack as an attacker will know the value of the token</li>
<li>a password reset token (sent by email): a predictable password token can lead to an account takeover, since an attacker will guess the URL of the "change password" form</li>
<li>any other secret value</li>
</ul>
<p>
A quick fix could be to replace the use of <code>java.util.Random</code> with something stronger, such as <code>java.security.SecureRandom</code>.
</p>
<p>
<b>Vulnerable Code:</b><br/>
<pre>String generateSecretToken() {
    Random r = new Random();
    return Long.toHexString(r.nextLong());
}</pre>
</p>
<p>
<b>Solution:</b>
<pre>import org.apache.commons.codec.binary.Hex;

String generateSecretToken() {
    SecureRandom secRandom = new SecureRandom();

    byte[] result = new byte[32];
    secRandom.nextBytes(result);
    return Hex.encodeHexString(result);
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://jazzy.id.au/2010/09/20/cracking_random_number_generators_part_1.html">Cracking Random Number Generators - Part 1 (https://jazzy.id.au)</a><br/>
<a href="https://www.securecoding.cert.org/confluence/display/java/MSC02-J.+Generate+strong+random+numbers">CERT: MSC02-J. Generate strong random numbers</a><br/>
<a href="https://cwe.mitre.org/data/definitions/330.html">CWE-330: Use of Insufficiently Random Values</a><br/>
<a href="https://blog.h3xstream.com/2014/12/predicting-struts-csrf-token-cve-2014.html">Predicting Struts CSRF Token (Example of real-life vulnerability and exploitation)</a>
</p>

        
<h2>
<a name="PATH_TRAVERSAL_IN">PATH_TRAVERSAL_IN: Potential Path Traversal (file read)</a>
</h2>
            
<p>A file is opened to read its content. The filename comes from an <b>input</b> parameter.
If an unfiltered parameter is passed to this file API, files from an arbitrary filesystem location could be read.</p>
<p>This rule identifies <b>potential</b> path traversal vulnerabilities. In many cases, the constructed file path cannot be controlled
by the user. If that is the case, the reported instance is a false positive.</p>
<br/>

<p>
    <b>Vulnerable Code:</b><br/>
<pre>@GET
@Path("/images/{image}")
@Produces("images/*")
public Response getImage(@javax.ws.rs.PathParam("image") String image) {
    File file = new File("resources/images/", image); //Weak point

    if (!file.exists()) {
        return Response.status(Status.NOT_FOUND).build();
    }

    return Response.ok().entity(new FileInputStream(file)).build();
}</pre>
</p>
<br/>

<p>
    <b>Solution:</b><br/>
<pre>import org.apache.commons.io.FilenameUtils;

@GET
@Path("/images/{image}")
@Produces("images/*")
public Response getImage(@javax.ws.rs.PathParam("image") String image) {
    File file = new File("resources/images/", FilenameUtils.getName(image)); //Fix

    if (!file.exists()) {
        return Response.status(Status.NOT_FOUND).build();
    }

    return Response.ok().entity(new FileInputStream(file)).build();
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="http://projects.webappsec.org/w/page/13246952/Path%20Traversal">WASC: Path Traversal</a><br/>
<a href="https://www.owasp.org/index.php/Path_Traversal">OWASP: Path Traversal</a><br/>
<a href="https://capec.mitre.org/data/definitions/126.html">CAPEC-126: Path Traversal</a><br/>
<a href="https://cwe.mitre.org/data/definitions/22.html">CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')</a>
</p>

        </body>
</html>
