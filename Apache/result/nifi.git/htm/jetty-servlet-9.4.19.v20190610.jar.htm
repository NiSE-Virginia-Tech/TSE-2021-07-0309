<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>SpotBugs Report</title>
<style type="text/css">
		.tablerow0 {
			background: #EEEEEE;
		}

		.tablerow1 {
			background: white;
		}

		.detailrow0 {
			background: #EEEEEE;
		}

		.detailrow1 {
			background: white;
		}

		.tableheader {
			background: #b9b9fe;
			font-size: larger;
		}

		.tablerow0:hover, .tablerow1:hover {
			background: #aaffaa;
		}

		.priority-1 {
		    color: red;
		    font-weight: bold;
		}
		.priority-2 {
		    color: orange;
		    font-weight: bold;
		}
		.priority-3 {
		    color: green;
		    font-weight: bold;
		}
		.priority-4 {
		    color: blue;
		    font-weight: bold;
		}
		</style>
<script type="text/javascript">
			function toggleRow(elid) {
				if (document.getElementById) {
					element = document.getElementById(elid);
					if (element) {
						if (element.style.display == 'none') {
							element.style.display = 'block';
							//window.status = 'Toggle on!';
						} else {
							element.style.display = 'none';
							//window.status = 'Toggle off!';
						}
					}
				}
			}
		</script>
</head>
<body>
<h1>
<a href="https://spotbugs.github.io/">SpotBugs</a> Report</h1>
<h2>Project Information</h2>
<p>Project: 
		</p>
<p>SpotBugs version: 3.1.12</p>
<p>Code analyzed:</p>
<ul>
<li>/home/x/CryptoAPIDetect/dataset/group/nifi.git/jetty-servlet-9.4.19.v20190610.jar</li>
</ul>
<p>
<br/>
<br/>
</p>
<h2>Metrics</h2>
<p>3542 lines of code analyzed,
	in 48 classes, 
	in 3 packages.</p>
<table width="500" cellpadding="5" cellspacing="2">
<tr class="tableheader">
<th align="left">Metric</th>
<th align="right">Total</th>
<th align="right">Density*</th>
</tr>
<tr class="tablerow0">
<td>High Priority Warnings</td>
<td align="right"/>
<td align="right">0.00</td>
</tr>
<tr class="tablerow1">
<td>Medium Priority Warnings</td>
<td align="right">3</td>
<td align="right">0.85</td>
</tr>
<tr class="$totalClass">
<td>
<b>Total Warnings</b>
</td>
<td align="right">
<b>3</b>
</td>
<td align="right">
<b>0.85</b>
</td>
</tr>
</table>
<p>
<i>(* Defects per Thousand lines of non-commenting source statements)</i>
</p>
<p>
<br/>
<br/>
</p>
<h2>Contents</h2>
<ul>
<li>
<a href="#Warnings_SECURITY">Security Warnings</a>
</li>
<li>
<a href="#Details">Details</a>
</li>
</ul>
<h1>Summary</h1>
<table width="500" cellpadding="5" cellspacing="2">
<tr class="tableheader">
<th align="left">Warning Type</th>
<th align="right">Number</th>
</tr>
<tr class="tablerow0">
<td>
<a href="#Warnings_SECURITY">Security Warnings</a>
</td>
<td align="right">3</td>
</tr>
<tr class="tablerow1">
<td>
<b>Total</b>
</td>
<td align="right">
<b>3</b>
</td>
</tr>
</table>
<h1>Warnings</h1>
<p>Click on a warning row to see full context information.</p>
<h2>
<a name="Warnings_SECURITY">Security Warnings</a>
</h2>
<table class="warningtable" width="100%" cellspacing="0">
<tr class="tableheader">
<th align="left">Code</th>
<th align="left">Warning</th>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65551');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65551" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.eclipse.jetty.servlet.ServletHolder<br/>In method org.eclipse.jetty.servlet.ServletHolder.initJspServlet()<br/>At ServletHolder.java:[line 733]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/eclipse/jetty/servlet/ServletHolder.getInitParameter(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source java/util/Map.get(Ljava/lang/Object;)Ljava/lang/Object;<br/>Unknown source org/eclipse/jetty/servlet/Holder._initParams<br/>At Holder.java:[line 90]<br/>At ServletHolder.java:[line 733]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65650');">
<td>
<span class="priority-2">SECXSS2</span>
</td>
<td>This use of java/io/PrintWriter.write(Ljava/lang/String;)V could be vulnerable to XSS in the Servlet</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65650" style="display: none;">
<a href="#XSS_SERVLET">Bug type XSS_SERVLET (click for details)</a>
<br/>In class org.eclipse.jetty.servlet.StatisticsServlet<br/>In method org.eclipse.jetty.servlet.StatisticsServlet.sendTextResponse(HttpServletResponse)<br/>At StatisticsServlet.java:[line 308]<br/>Sink method java/io/PrintWriter.write(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/eclipse/jetty/server/handler/StatisticsHandler.toStatsHTML()Ljava/lang/String;<br/>Unknown source org/eclipse/jetty/server/Connector.getProtocols()Ljava/util/List;<br/>Unknown source java/util/Iterator.next()Ljava/lang/Object;<br/>At StatisticsServlet.java:[line 251]<br/>At StatisticsServlet.java:[line 253]<br/>At StatisticsServlet.java:[line 256]<br/>At StatisticsServlet.java:[line 257]<br/>At StatisticsServlet.java:[line 258]<br/>At StatisticsServlet.java:[line 259]<br/>At StatisticsServlet.java:[line 260]<br/>At StatisticsServlet.java:[line 267]<br/>At StatisticsServlet.java:[line 268]<br/>At StatisticsServlet.java:[line 269]<br/>At StatisticsServlet.java:[line 270]<br/>At StatisticsServlet.java:[line 271]<br/>At StatisticsServlet.java:[line 272]<br/>At StatisticsServlet.java:[line 273]<br/>At StatisticsServlet.java:[line 274]<br/>At StatisticsServlet.java:[line 275]<br/>At StatisticsServlet.java:[line 276]<br/>At StatisticsServlet.java:[line 285]<br/>At StatisticsServlet.java:[line 286]<br/>At StatisticsServlet.java:[line 287]<br/>At StatisticsServlet.java:[line 288]<br/>At StatisticsServlet.java:[line 289]<br/>At StatisticsServlet.java:[line 290]<br/>At StatisticsServlet.java:[line 291]<br/>At StatisticsServlet.java:[line 292]<br/>At StatisticsServlet.java:[line 293]<br/>At StatisticsServlet.java:[line 297]<br/>At StatisticsServlet.java:[line 302]<br/>At StatisticsServlet.java:[line 303]<br/>At StatisticsServlet.java:[line 304]<br/>At StatisticsServlet.java:[line 308]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66039');">
<td>
<span class="priority-2">SECXSS2</span>
</td>
<td>This use of java/io/PrintWriter.write(Ljava/lang/String;)V could be vulnerable to XSS in the Servlet</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66039" style="display: none;">
<a href="#XSS_SERVLET">Bug type XSS_SERVLET (click for details)</a>
<br/>In class org.eclipse.jetty.servlet.StatisticsServlet<br/>In method org.eclipse.jetty.servlet.StatisticsServlet.sendXmlResponse(HttpServletResponse)<br/>At StatisticsServlet.java:[line 245]<br/>Sink method java/io/PrintWriter.write(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/eclipse/jetty/server/Connector.getProtocols()Ljava/util/List;<br/>Unknown source java/util/Iterator.next()Ljava/lang/Object;<br/>At StatisticsServlet.java:[line 185]<br/>At StatisticsServlet.java:[line 186]<br/>At StatisticsServlet.java:[line 187]<br/>At StatisticsServlet.java:[line 188]<br/>At StatisticsServlet.java:[line 189]<br/>At StatisticsServlet.java:[line 190]<br/>At StatisticsServlet.java:[line 197]<br/>At StatisticsServlet.java:[line 198]<br/>At StatisticsServlet.java:[line 199]<br/>At StatisticsServlet.java:[line 200]<br/>At StatisticsServlet.java:[line 201]<br/>At StatisticsServlet.java:[line 202]<br/>At StatisticsServlet.java:[line 203]<br/>At StatisticsServlet.java:[line 204]<br/>At StatisticsServlet.java:[line 205]<br/>At StatisticsServlet.java:[line 206]<br/>At StatisticsServlet.java:[line 207]<br/>At StatisticsServlet.java:[line 216]<br/>At StatisticsServlet.java:[line 217]<br/>At StatisticsServlet.java:[line 218]<br/>At StatisticsServlet.java:[line 219]<br/>At StatisticsServlet.java:[line 220]<br/>At StatisticsServlet.java:[line 221]<br/>At StatisticsServlet.java:[line 222]<br/>At StatisticsServlet.java:[line 223]<br/>At StatisticsServlet.java:[line 224]<br/>At StatisticsServlet.java:[line 225]<br/>At StatisticsServlet.java:[line 229]<br/>At StatisticsServlet.java:[line 232]<br/>At StatisticsServlet.java:[line 234]<br/>At StatisticsServlet.java:[line 236]<br/>At StatisticsServlet.java:[line 237]<br/>At StatisticsServlet.java:[line 238]<br/>At StatisticsServlet.java:[line 239]<br/>At StatisticsServlet.java:[line 241]<br/>At StatisticsServlet.java:[line 245]</p>
</td>
</tr>
</table>
<h1>
<a name="Details">Details</a>
</h1>
<h2>
<a name="PATH_TRAVERSAL_IN">PATH_TRAVERSAL_IN: Potential Path Traversal (file read)</a>
</h2>
            
<p>A file is opened to read its content. The filename comes from an <b>input</b> parameter.
If an unfiltered parameter is passed to this file API, files from an arbitrary filesystem location could be read.</p>
<p>This rule identifies <b>potential</b> path traversal vulnerabilities. In many cases, the constructed file path cannot be controlled
by the user. If that is the case, the reported instance is a false positive.</p>
<br/>

<p>
    <b>Vulnerable Code:</b><br/>
<pre>@GET
@Path("/images/{image}")
@Produces("images/*")
public Response getImage(@javax.ws.rs.PathParam("image") String image) {
    File file = new File("resources/images/", image); //Weak point

    if (!file.exists()) {
        return Response.status(Status.NOT_FOUND).build();
    }

    return Response.ok().entity(new FileInputStream(file)).build();
}</pre>
</p>
<br/>

<p>
    <b>Solution:</b><br/>
<pre>import org.apache.commons.io.FilenameUtils;

@GET
@Path("/images/{image}")
@Produces("images/*")
public Response getImage(@javax.ws.rs.PathParam("image") String image) {
    File file = new File("resources/images/", FilenameUtils.getName(image)); //Fix

    if (!file.exists()) {
        return Response.status(Status.NOT_FOUND).build();
    }

    return Response.ok().entity(new FileInputStream(file)).build();
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="http://projects.webappsec.org/w/page/13246952/Path%20Traversal">WASC: Path Traversal</a><br/>
<a href="https://www.owasp.org/index.php/Path_Traversal">OWASP: Path Traversal</a><br/>
<a href="https://capec.mitre.org/data/definitions/126.html">CAPEC-126: Path Traversal</a><br/>
<a href="https://cwe.mitre.org/data/definitions/22.html">CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')</a>
</p>

        
<h2>
<a name="XSS_SERVLET">XSS_SERVLET: Potential XSS in Servlet</a>
</h2>
            
<p>
A potential XSS was found. It could be used to execute unwanted JavaScript in a client's browser. (See references)
</p>
<p>
    <b>Vulnerable Code:</b>
<pre>protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
    String input1 = req.getParameter("input1");
    [...]
    resp.getWriter().write(input1);
}</pre>
</p>
<p>
    <b>Solution:</b>
<pre>protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
    String input1 = req.getParameter("input1");
    [...]
    resp.getWriter().write(Encode.forHtml(input1));
}</pre>
</p>
<p>
The best defense against XSS is context sensitive output encoding like the example above. There are typically 4 contexts to consider:
HTML, JavaScript, CSS (styles), and URLs. Please follow the XSS protection rules defined in the OWASP XSS Prevention Cheat Sheet,
which explains these defenses in significant detail.
</p>
<p>Note that this XSS in Servlet rule looks for similar issues, but looks for them in a different way than the existing
'XSS: Servlet reflected cross site scripting vulnerability' and 'XSS: Servlet reflected cross site scripting vulnerability in error page' rules in FindBugs.
</p>
<br/>
<p>
<b>References</b><br/>
<a href="http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting">WASC-8: Cross Site Scripting</a><br/>
<a href="https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet">OWASP: XSS Prevention Cheat Sheet</a><br/>
<a href="https://www.owasp.org/index.php/Top_10_2013-A3-Cross-Site_Scripting_%28XSS%29">OWASP: Top 10 2013-A3: Cross-Site Scripting (XSS)</a><br/>
<a href="https://cwe.mitre.org/data/definitions/79.html">CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')</a><br/>
<a href="https://code.google.com/p/owasp-java-encoder/">OWASP Java Encoder</a><br/>
</p>
            
        </body>
</html>
