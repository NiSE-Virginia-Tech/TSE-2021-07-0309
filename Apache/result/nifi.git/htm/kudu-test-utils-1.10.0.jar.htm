<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>SpotBugs Report</title>
<style type="text/css">
		.tablerow0 {
			background: #EEEEEE;
		}

		.tablerow1 {
			background: white;
		}

		.detailrow0 {
			background: #EEEEEE;
		}

		.detailrow1 {
			background: white;
		}

		.tableheader {
			background: #b9b9fe;
			font-size: larger;
		}

		.tablerow0:hover, .tablerow1:hover {
			background: #aaffaa;
		}

		.priority-1 {
		    color: red;
		    font-weight: bold;
		}
		.priority-2 {
		    color: orange;
		    font-weight: bold;
		}
		.priority-3 {
		    color: green;
		    font-weight: bold;
		}
		.priority-4 {
		    color: blue;
		    font-weight: bold;
		}
		</style>
<script type="text/javascript">
			function toggleRow(elid) {
				if (document.getElementById) {
					element = document.getElementById(elid);
					if (element) {
						if (element.style.display == 'none') {
							element.style.display = 'block';
							//window.status = 'Toggle on!';
						} else {
							element.style.display = 'none';
							//window.status = 'Toggle off!';
						}
					}
				}
			}
		</script>
</head>
<body>
<h1>
<a href="https://spotbugs.github.io/">SpotBugs</a> Report</h1>
<h2>Project Information</h2>
<p>Project: 
		</p>
<p>SpotBugs version: 3.1.12</p>
<p>Code analyzed:</p>
<ul>
<li>/home/x/CryptoAPIDetect/dataset/group/nifi.git/kudu-test-utils-1.10.0.jar</li>
</ul>
<p>
<br/>
<br/>
</p>
<h2>Metrics</h2>
<p>366091 lines of code analyzed,
	in 6313 classes, 
	in 174 packages.</p>
<table width="500" cellpadding="5" cellspacing="2">
<tr class="tableheader">
<th align="left">Metric</th>
<th align="right">Total</th>
<th align="right">Density*</th>
</tr>
<tr class="tablerow0">
<td>High Priority Warnings</td>
<td align="right">24</td>
<td align="right">0.07</td>
</tr>
<tr class="tablerow1">
<td>Medium Priority Warnings</td>
<td align="right">113</td>
<td align="right">0.31</td>
</tr>
<tr class="$totalClass">
<td>
<b>Total Warnings</b>
</td>
<td align="right">
<b>137</b>
</td>
<td align="right">
<b>0.37</b>
</td>
</tr>
</table>
<p>
<i>(* Defects per Thousand lines of non-commenting source statements)</i>
</p>
<p>
<br/>
<br/>
</p>
<h2>Contents</h2>
<ul>
<li>
<a href="#Warnings_SECURITY">Security Warnings</a>
</li>
<li>
<a href="#Details">Details</a>
</li>
</ul>
<h1>Summary</h1>
<table width="500" cellpadding="5" cellspacing="2">
<tr class="tableheader">
<th align="left">Warning Type</th>
<th align="right">Number</th>
</tr>
<tr class="tablerow0">
<td>
<a href="#Warnings_SECURITY">Security Warnings</a>
</td>
<td align="right">137</td>
</tr>
<tr class="tablerow1">
<td>
<b>Total</b>
</td>
<td align="right">
<b>137</b>
</td>
</tr>
</table>
<h1>Warnings</h1>
<p>Click on a warning row to see full context information.</p>
<h2>
<a name="Warnings_SECURITY">Security Warnings</a>
</h2>
<table class="warningtable" width="100%" cellspacing="0">
<tr class="tableheader">
<th align="left">Code</th>
<th align="left">Warning</th>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70888');">
<td>
<span class="priority-1">CIPINT</span>
</td>
<td>The cipher does not provide data integrity</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70888" style="display: none;">
<a href="#CIPHER_INTEGRITY">Bug type CIPHER_INTEGRITY (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.http.impl.auth.NTLMEngineImpl<br/>In method org.apache.kudu.shaded.org.apache.http.impl.auth.NTLMEngineImpl.RC4(byte[], byte[])<br/>At NTLMEngineImpl.java:[line 582]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70942');">
<td>
<span class="priority-1">CIPINT</span>
</td>
<td>The cipher does not provide data integrity</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70942" style="display: none;">
<a href="#CIPHER_INTEGRITY">Bug type CIPHER_INTEGRITY (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.http.impl.auth.NTLMEngineImpl<br/>In method org.apache.kudu.shaded.org.apache.http.impl.auth.NTLMEngineImpl.lmHash(String)<br/>At NTLMEngineImpl.java:[line 635]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70996');">
<td>
<span class="priority-1">CIPINT</span>
</td>
<td>The cipher does not provide data integrity</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70996" style="display: none;">
<a href="#CIPHER_INTEGRITY">Bug type CIPHER_INTEGRITY (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.http.impl.auth.NTLMEngineImpl<br/>In method org.apache.kudu.shaded.org.apache.http.impl.auth.NTLMEngineImpl.lmResponse(byte[], byte[])<br/>At NTLMEngineImpl.java:[line 725]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71344');">
<td>
<span class="priority-1">CIPINT</span>
</td>
<td>The cipher does not provide data integrity</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71344" style="display: none;">
<a href="#CIPHER_INTEGRITY">Bug type CIPHER_INTEGRITY (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.http.impl.auth.NTLMEngineImpl$CipherGen<br/>In method org.apache.kudu.shaded.org.apache.http.impl.auth.NTLMEngineImpl$CipherGen.getLanManagerSessionKey()<br/>At NTLMEngineImpl.java:[line 553]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71398');">
<td>
<span class="priority-1">CIPINT</span>
</td>
<td>The cipher does not provide data integrity</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71398" style="display: none;">
<a href="#CIPHER_INTEGRITY">Bug type CIPHER_INTEGRITY (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.http.impl.auth.NTLMEngineImpl$CipherGen<br/>In method org.apache.kudu.shaded.org.apache.http.impl.auth.NTLMEngineImpl$CipherGen.getLanManagerSessionKey()<br/>At NTLMEngineImpl.java:[line 556]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71688');">
<td>
<span class="priority-1">CIPINT</span>
</td>
<td>The cipher does not provide data integrity</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71688" style="display: none;">
<a href="#CIPHER_INTEGRITY">Bug type CIPHER_INTEGRITY (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.http.impl.auth.NTLMEngineImpl$Handle<br/>In method org.apache.kudu.shaded.org.apache.http.impl.auth.NTLMEngineImpl$Handle.initCipher()<br/>At NTLMEngineImpl.java:[line 831]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65829');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65829" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class org.apache.kudu.shaded.com.google.common.base.Throwables<br/>In method org.apache.kudu.shaded.com.google.common.base.Throwables.getStackTraceAsString(Throwable)<br/>At Throwables.java:[line 352]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66377');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66377" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class org.apache.kudu.shaded.com.google.common.io.FileBackedOutputStream$1<br/>In method org.apache.kudu.shaded.com.google.common.io.FileBackedOutputStream$1.finalize()<br/>At FileBackedOutputStream.java:[line 105]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70103');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70103" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.commons.logging.impl.Jdk13LumberjackLogger<br/>In method org.apache.kudu.shaded.org.apache.commons.logging.impl.Jdk13LumberjackLogger.getClassAndMethod()<br/>At Jdk13LumberjackLogger.java:[line 101]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70157');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70157" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.commons.logging.impl.LogFactoryImpl<br/>In method org.apache.kudu.shaded.org.apache.commons.logging.impl.LogFactoryImpl.handleFlawedDiscovery(String, ClassLoader, Throwable)<br/>At LogFactoryImpl.java:[line 1281]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70211');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70211" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.commons.logging.impl.SimpleLog<br/>In method org.apache.kudu.shaded.org.apache.commons.logging.impl.SimpleLog.log(int, Object, Throwable)<br/>At SimpleLog.java:[line 321]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67456');">
<td>
<span class="priority-2">SECCI</span>
</td>
<td>This usage of java/lang/Runtime.exec([Ljava/lang/String;)Ljava/lang/Process; can be vulnerable to Command Injection</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67456" style="display: none;">
<a href="#COMMAND_INJECTION">Bug type COMMAND_INJECTION (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.commons.io.FileSystemUtils<br/>In method org.apache.kudu.shaded.org.apache.commons.io.FileSystemUtils.openProcess(String[])<br/>At FileSystemUtils.java:[line 573]<br/>Sink method java/lang/Runtime.exec([Ljava/lang/String;)Ljava/lang/Process;<br/>Sink parameter 0<br/>Unknown source org/apache/kudu/shaded/org/apache/commons/io/FileSystemUtils.openProcess([Ljava/lang/String;)Ljava/lang/Process; parameter 0<br/>Method usage not detected<br/>At FileSystemUtils.java:[line 280]<br/>At FileSystemUtils.java:[line 282]<br/>At FileSystemUtils.java:[line 284]<br/>At FileSystemUtils.java:[line 304]<br/>At FileSystemUtils.java:[line 309]<br/>At FileSystemUtils.java:[line 313]<br/>At FileSystemUtils.java:[line 316]<br/>At FileSystemUtils.java:[line 413]<br/>At FileSystemUtils.java:[line 416]<br/>At FileSystemUtils.java:[line 459]<br/>At FileSystemUtils.java:[line 466]<br/>At FileSystemUtils.java:[line 502]<br/>At FilenameUtils.java:[line 243]<br/>At FilenameUtils.java:[line 436]<br/>At FilenameUtils.java:[line 439]<br/>At FilenameUtils.java:[line 441]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N74655');">
<td>
<span class="priority-2">SECCI</span>
</td>
<td>This usage of java/lang/ProcessBuilder.&lt;init&gt;(Ljava/util/List;)V can be vulnerable to Command Injection</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N74655" style="display: none;">
<a href="#COMMAND_INJECTION">Bug type COMMAND_INJECTION (click for details)</a>
<br/>In class org.apache.kudu.test.cluster.MiniKuduCluster<br/>In method org.apache.kudu.test.cluster.MiniKuduCluster.start()<br/>At MiniKuduCluster.java:[line 188]<br/>Sink method java/lang/ProcessBuilder.&lt;init&gt;(Ljava/util/List;)V<br/>Sink parameter 0<br/>Unknown source org/apache/kudu/shaded/com/google/common/collect/Lists.newArrayList([Ljava/lang/Object;)Ljava/util/ArrayList;<br/>At Lists.java:[line 107]<br/>At MiniKuduCluster.java:[line 183]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N74902');">
<td>
<span class="priority-2">SECCI</span>
</td>
<td>This usage of java/lang/ProcessBuilder.&lt;init&gt;(Ljava/util/List;)V can be vulnerable to Command Injection</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N74902" style="display: none;">
<a href="#COMMAND_INJECTION">Bug type COMMAND_INJECTION (click for details)</a>
<br/>In class org.apache.kudu.test.junit.RetryRule$RetryStatement<br/>In method org.apache.kudu.test.junit.RetryRule$RetryStatement.wasClockUnsynchronized(File)<br/>At RetryRule.java:[line 167]<br/>Sink method java/lang/ProcessBuilder.&lt;init&gt;(Ljava/util/List;)V<br/>Sink parameter 0<br/>Unknown source org/apache/kudu/shaded/com/google/common/collect/SingletonImmutableList.&lt;init&gt;(Ljava/lang/Object;)V<br/>Unknown source org/apache/kudu/shaded/com/google/common/collect/ImmutableList.construct([Ljava/lang/Object;)Lorg/apache/kudu/shaded/com/google/common/collect/ImmutableList;<br/>Unknown source org/apache/kudu/shaded/com/google/common/collect/RegularImmutableList.&lt;init&gt;([Ljava/lang/Object;)V<br/>Unknown source org/apache/kudu/shaded/com/google/common/collect/ImmutableList.asImmutableList([Ljava/lang/Object;I)Lorg/apache/kudu/shaded/com/google/common/collect/ImmutableList;<br/>Unknown source org/apache/kudu/shaded/com/google/common/collect/ImmutableList.asImmutableList([Ljava/lang/Object;)Lorg/apache/kudu/shaded/com/google/common/collect/ImmutableList;<br/>Unknown source org/apache/kudu/shaded/com/google/common/collect/ImmutableList.of()Lorg/apache/kudu/shaded/com/google/common/collect/ImmutableList;<br/>Unknown source org/apache/kudu/shaded/com/google/common/collect/RegularImmutableList.EMPTY<br/>Unknown source org/apache/kudu/shaded/com/google/common/collect/ImmutableList.of(Ljava/lang/Object;)Lorg/apache/kudu/shaded/com/google/common/collect/ImmutableList;<br/>Unknown source org/apache/kudu/shaded/com/google/common/collect/ImmutableList.of(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lorg/apache/kudu/shaded/com/google/common/collect/ImmutableList;<br/>At ImmutableList.java:[line 82]<br/>At ImmutableList.java:[line 93]<br/>At ImmutableList.java:[line 120]<br/>At ImmutableList.java:[line 346]<br/>At ImmutableList.java:[line 355]<br/>At ImmutableList.java:[line 365]<br/>At ImmutableList.java:[line 367]<br/>At RegularImmutableList.java:[line 32]<br/>At RetryRule.java:[line 167]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N74823');">
<td>
<span class="priority-2">SECCRLFLOG</span>
</td>
<td>This use of org/slf4j/Logger.info(Ljava/lang/String;)V might be used to include CRLF characters into log messages</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N74823" style="display: none;">
<a href="#CRLF_INJECTION_LOGS">Bug type CRLF_INJECTION_LOGS (click for details)</a>
<br/>In class org.apache.kudu.test.cluster.MiniKuduCluster$ProcessInputStreamLogPrinterRunnable<br/>In method org.apache.kudu.test.cluster.MiniKuduCluster$ProcessInputStreamLogPrinterRunnable.run()<br/>At MiniKuduCluster.java:[line 543]<br/>Sink method org/slf4j/Logger.info(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Tainted source java/io/BufferedReader.readLine()Ljava/lang/String;<br/>At MiniKuduCluster.java:[line 542]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71050');">
<td>
<span class="priority-2">SECDU</span>
</td>
<td>DES should be replaced with AES</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71050" style="display: none;">
<a href="#DES_USAGE">Bug type DES_USAGE (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.http.impl.auth.NTLMEngineImpl<br/>In method org.apache.kudu.shaded.org.apache.http.impl.auth.NTLMEngineImpl.lmHash(String)<br/>At NTLMEngineImpl.java:[line 635]<br/>Sink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher;<br/>Sink parameter 0</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71114');">
<td>
<span class="priority-2">SECDU</span>
</td>
<td>DES should be replaced with AES</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71114" style="display: none;">
<a href="#DES_USAGE">Bug type DES_USAGE (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.http.impl.auth.NTLMEngineImpl<br/>In method org.apache.kudu.shaded.org.apache.http.impl.auth.NTLMEngineImpl.lmResponse(byte[], byte[])<br/>At NTLMEngineImpl.java:[line 725]<br/>Sink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher;<br/>Sink parameter 0</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71452');">
<td>
<span class="priority-2">SECDU</span>
</td>
<td>DES should be replaced with AES</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71452" style="display: none;">
<a href="#DES_USAGE">Bug type DES_USAGE (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.http.impl.auth.NTLMEngineImpl$CipherGen<br/>In method org.apache.kudu.shaded.org.apache.http.impl.auth.NTLMEngineImpl$CipherGen.getLanManagerSessionKey()<br/>At NTLMEngineImpl.java:[line 553]<br/>Sink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher;<br/>Sink parameter 0</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71516');">
<td>
<span class="priority-2">SECDU</span>
</td>
<td>DES should be replaced with AES</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71516" style="display: none;">
<a href="#DES_USAGE">Bug type DES_USAGE (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.http.impl.auth.NTLMEngineImpl$CipherGen<br/>In method org.apache.kudu.shaded.org.apache.http.impl.auth.NTLMEngineImpl$CipherGen.getLanManagerSessionKey()<br/>At NTLMEngineImpl.java:[line 556]<br/>Sink method javax/crypto/Cipher.getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher;<br/>Sink parameter 0</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71178');">
<td>
<span class="priority-1">SECECB</span>
</td>
<td>The cipher uses ECB mode, which provides poor confidentiality for encrypted data</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71178" style="display: none;">
<a href="#ECB_MODE">Bug type ECB_MODE (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.http.impl.auth.NTLMEngineImpl<br/>In method org.apache.kudu.shaded.org.apache.http.impl.auth.NTLMEngineImpl.lmHash(String)<br/>At NTLMEngineImpl.java:[line 635]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71232');">
<td>
<span class="priority-1">SECECB</span>
</td>
<td>The cipher uses ECB mode, which provides poor confidentiality for encrypted data</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71232" style="display: none;">
<a href="#ECB_MODE">Bug type ECB_MODE (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.http.impl.auth.NTLMEngineImpl<br/>In method org.apache.kudu.shaded.org.apache.http.impl.auth.NTLMEngineImpl.lmResponse(byte[], byte[])<br/>At NTLMEngineImpl.java:[line 725]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71580');">
<td>
<span class="priority-1">SECECB</span>
</td>
<td>The cipher uses ECB mode, which provides poor confidentiality for encrypted data</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71580" style="display: none;">
<a href="#ECB_MODE">Bug type ECB_MODE (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.http.impl.auth.NTLMEngineImpl$CipherGen<br/>In method org.apache.kudu.shaded.org.apache.http.impl.auth.NTLMEngineImpl$CipherGen.getLanManagerSessionKey()<br/>At NTLMEngineImpl.java:[line 553]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71634');">
<td>
<span class="priority-1">SECECB</span>
</td>
<td>The cipher uses ECB mode, which provides poor confidentiality for encrypted data</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71634" style="display: none;">
<a href="#ECB_MODE">Bug type ECB_MODE (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.http.impl.auth.NTLMEngineImpl$CipherGen<br/>In method org.apache.kudu.shaded.org.apache.http.impl.auth.NTLMEngineImpl$CipherGen.getLanManagerSessionKey()<br/>At NTLMEngineImpl.java:[line 556]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66658');">
<td>
<span class="priority-2">SECHCP</span>
</td>
<td>Hard coded password found</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66658" style="display: none;">
<a href="#HARD_CODE_PASSWORD">Bug type HARD_CODE_PASSWORD (click for details)</a>
<br/>In class org.apache.kudu.shaded.com.google.common.net.PercentEscaper<br/>Value is hard coded in field org.apache.kudu.shaded.com.google.common.net.PercentEscaper.PLUS_SIGN[C with suspicious name<br/>At PercentEscaper.java:[lines 57-230]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68623');">
<td>
<span class="priority-2">SECHCP</span>
</td>
<td>Hard coded password found</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68623" style="display: none;">
<a href="#HARD_CODE_PASSWORD">Bug type HARD_CODE_PASSWORD (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.commons.io.HexDump<br/>Value is hard coded in field org.apache.kudu.shaded.org.apache.commons.io.HexDump._hexcodes[C with suspicious name<br/>At HexDump.java:[lines 38-159]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70609');">
<td>
<span class="priority-2">SECLDAPI</span>
</td>
<td>This use of javax/naming/ldap/LdapName.&lt;init&gt;(Ljava/lang/String;)V can be vulnerable to LDAP injection</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70609" style="display: none;">
<a href="#LDAP_INJECTION">Bug type LDAP_INJECTION (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.http.conn.ssl.DefaultHostnameVerifier<br/>In method org.apache.kudu.shaded.org.apache.http.conn.ssl.DefaultHostnameVerifier.extractCN(String)<br/>At DefaultHostnameVerifier.java:[line 259]<br/>Sink method javax/naming/ldap/LdapName.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/kudu/shaded/org/apache/http/conn/ssl/DefaultHostnameVerifier.extractCN(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>At AbstractVerifier.java:[line 152]<br/>At AbstractVerifier.java:[line 233]<br/>At AbstractVerifier.java:[line 235]<br/>At DefaultHostnameVerifier.java:[line 128]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68821');">
<td>
<span class="priority-1">SECMD5</span>
</td>
<td>This API MD5 (MDX) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68821" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_MD5">Bug type WEAK_MESSAGE_DIGEST_MD5 (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.commons.io.input.MessageDigestCalculatingInputStream<br/>In method new org.apache.kudu.shaded.org.apache.commons.io.input.MessageDigestCalculatingInputStream(InputStream)<br/>At MessageDigestCalculatingInputStream.java:[line 88]<br/>Value MD5</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71286');">
<td>
<span class="priority-1">SECMD5</span>
</td>
<td>This API MD5 (MDX) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71286" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_MD5">Bug type WEAK_MESSAGE_DIGEST_MD5 (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.http.impl.auth.NTLMEngineImpl<br/>In method org.apache.kudu.shaded.org.apache.http.impl.auth.NTLMEngineImpl.getMD5()<br/>At NTLMEngineImpl.java:[line 1846]<br/>Value MD5</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N72851');">
<td>
<span class="priority-1">SECMD5</span>
</td>
<td>This API MD5 (MDX) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N72851" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_MD5">Bug type WEAK_MESSAGE_DIGEST_MD5 (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.jboss.netty.handler.codec.http.websocketx.WebSocketUtil<br/>In method org.apache.kudu.shaded.org.jboss.netty.handler.codec.http.websocketx.WebSocketUtil.md5(ChannelBuffer)<br/>At WebSocketUtil.java:[line 40]<br/>Value MD5</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65941');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in org.apache.kudu.shaded.com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy.readEntries(ObjectInputStream)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65941" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class org.apache.kudu.shaded.com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy<br/>In method org.apache.kudu.shaded.com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy.readEntries(ObjectInputStream)<br/>At MapMakerInternalMap.java:[line 2905]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65995');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in org.apache.kudu.shaded.com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy.readEntries(ObjectInputStream)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65995" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class org.apache.kudu.shaded.com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy<br/>In method org.apache.kudu.shaded.com.google.common.collect.MapMakerInternalMap$AbstractSerializationProxy.readEntries(ObjectInputStream)<br/>At MapMakerInternalMap.java:[line 2909]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66049');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in org.apache.kudu.shaded.com.google.common.collect.Serialization.populateMap(Map, ObjectInputStream, int)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66049" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class org.apache.kudu.shaded.com.google.common.collect.Serialization<br/>In method org.apache.kudu.shaded.com.google.common.collect.Serialization.populateMap(Map, ObjectInputStream, int)<br/>At Serialization.java:[line 83]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66103');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in org.apache.kudu.shaded.com.google.common.collect.Serialization.populateMap(Map, ObjectInputStream, int)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66103" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class org.apache.kudu.shaded.com.google.common.collect.Serialization<br/>In method org.apache.kudu.shaded.com.google.common.collect.Serialization.populateMap(Map, ObjectInputStream, int)<br/>At Serialization.java:[line 85]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66157');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in org.apache.kudu.shaded.com.google.common.collect.Serialization.populateMultimap(Multimap, ObjectInputStream, int)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66157" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class org.apache.kudu.shaded.com.google.common.collect.Serialization<br/>In method org.apache.kudu.shaded.com.google.common.collect.Serialization.populateMultimap(Multimap, ObjectInputStream, int)<br/>At Serialization.java:[line 173]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66211');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in org.apache.kudu.shaded.com.google.common.collect.Serialization.populateMultimap(Multimap, ObjectInputStream, int)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66211" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class org.apache.kudu.shaded.com.google.common.collect.Serialization<br/>In method org.apache.kudu.shaded.com.google.common.collect.Serialization.populateMultimap(Multimap, ObjectInputStream, int)<br/>At Serialization.java:[line 178]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66265');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in org.apache.kudu.shaded.com.google.common.collect.Serialization.populateMultiset(Multiset, ObjectInputStream, int)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66265" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class org.apache.kudu.shaded.com.google.common.collect.Serialization<br/>In method org.apache.kudu.shaded.com.google.common.collect.Serialization.populateMultiset(Multiset, ObjectInputStream, int)<br/>At Serialization.java:[line 127]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71742');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in org.apache.kudu.shaded.org.apache.http.impl.client.BasicAuthCache.get(HttpHost)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71742" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.http.impl.client.BasicAuthCache<br/>In method org.apache.kudu.shaded.org.apache.http.impl.client.BasicAuthCache.get(HttpHost)<br/>At BasicAuthCache.java:[line 130]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N72967');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in org.apache.kudu.shaded.org.jboss.netty.handler.codec.serialization.ObjectDecoder.decode(ChannelHandlerContext, Channel, ChannelBuffer)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N72967" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.jboss.netty.handler.codec.serialization.ObjectDecoder<br/>In method org.apache.kudu.shaded.org.jboss.netty.handler.codec.serialization.ObjectDecoder.decode(ChannelHandlerContext, Channel, ChannelBuffer)<br/>At ObjectDecoder.java:[line 82]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N73021');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in org.apache.kudu.shaded.org.jboss.netty.handler.codec.serialization.ObjectDecoderInputStream.readObject()</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N73021" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.jboss.netty.handler.codec.serialization.ObjectDecoderInputStream<br/>In method org.apache.kudu.shaded.org.jboss.netty.handler.codec.serialization.ObjectDecoderInputStream.readObject()<br/>At ObjectDecoderInputStream.java:[line 115]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65551');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65551" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.kudu.client.AsyncKuduClient<br/>In method new org.apache.kudu.client.AsyncKuduClient(AsyncKuduClient$AsyncKuduClientBuilder)<br/>At AsyncKuduClient.java:[line 343]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65609');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65609" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.kudu.client.AsyncKuduSession<br/>In method new org.apache.kudu.client.AsyncKuduSession(AsyncKuduClient)<br/>At AsyncKuduSession.java:[line 119]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65883');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65883" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.kudu.shaded.com.google.common.cache.Striped64<br/>In method org.apache.kudu.shaded.com.google.common.cache.Striped64.&lt;static initializer for Striped64&gt;()<br/>At Striped64.java:[line 131]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66319');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66319" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.kudu.shaded.com.google.common.hash.Striped64<br/>In method org.apache.kudu.shaded.com.google.common.hash.Striped64.&lt;static initializer for Striped64&gt;()<br/>At Striped64.java:[line 131]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67261');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67261" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.commons.codec.digest.B64<br/>In method org.apache.kudu.shaded.org.apache.commons.codec.digest.B64.getRandomSalt(int)<br/>At B64.java:[line 75]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67319');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67319" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.commons.codec.digest.UnixCrypt<br/>In method org.apache.kudu.shaded.org.apache.commons.codec.digest.UnixCrypt.crypt(byte[], String)<br/>At UnixCrypt.java:[line 200]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70772');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70772" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.http.entity.mime.MultipartEntity<br/>In method org.apache.kudu.shaded.org.apache.http.entity.mime.MultipartEntity.generateBoundary()<br/>At MultipartEntity.java:[line 109]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70830');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70830" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.http.entity.mime.MultipartEntityBuilder<br/>In method org.apache.kudu.shaded.org.apache.http.entity.mime.MultipartEntityBuilder.generateBoundary()<br/>At MultipartEntityBuilder.java:[line 193]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N72138');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N72138" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.jboss.netty.channel.AbstractChannel<br/>In method org.apache.kudu.shaded.org.jboss.netty.channel.AbstractChannel.&lt;static initializer for AbstractChannel&gt;()<br/>At AbstractChannel.java:[line 31]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N72619');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N72619" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.jboss.netty.handler.codec.http.multipart.HttpPostRequestEncoder<br/>In method org.apache.kudu.shaded.org.jboss.netty.handler.codec.http.multipart.HttpPostRequestEncoder.getNewMultipartDelimiter()<br/>At HttpPostRequestEncoder.java:[line 268]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N72677');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.lang.Math.random()) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N72677" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.jboss.netty.handler.codec.http.websocketx.WebSocket08FrameEncoder<br/>In method org.apache.kudu.shaded.org.jboss.netty.handler.codec.http.websocketx.WebSocket08FrameEncoder.encode(ChannelHandlerContext, Channel, Object)<br/>At WebSocket08FrameEncoder.java:[line 168]<br/>Value java.lang.Math.random()</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N72735');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.lang.Math.random()) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N72735" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.jboss.netty.handler.codec.http.websocketx.WebSocketClientHandshaker00<br/>In method org.apache.kudu.shaded.org.jboss.netty.handler.codec.http.websocketx.WebSocketClientHandshaker00.insertRandomCharacters(String)<br/>At WebSocketClientHandshaker00.java:[line 273]<br/>Value java.lang.Math.random()</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N72793');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.lang.Math.random()) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N72793" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.jboss.netty.handler.codec.http.websocketx.WebSocketUtil<br/>In method org.apache.kudu.shaded.org.jboss.netty.handler.codec.http.websocketx.WebSocketUtil.randomNumber(int, int)<br/>At WebSocketUtil.java:[line 115]<br/>Value java.lang.Math.random()</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N73686');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N73686" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.jboss.netty.util.internal.ThreadLocalRandom<br/>In method new org.apache.kudu.shaded.org.jboss.netty.util.internal.ThreadLocalRandom()<br/>At ThreadLocalRandom.java:[line 49]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N73744');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N73744" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.kudu.test.CapturingLogAppender<br/>In method new org.apache.kudu.test.CapturingLogAppender()<br/>At CapturingLogAppender.java:[line 50]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N73871');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N73871" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.kudu.test.CapturingToFileLogAppender<br/>In method new org.apache.kudu.test.CapturingToFileLogAppender(boolean)<br/>At CapturingToFileLogAppender.java:[line 75]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N73929');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N73929" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.kudu.test.RandomUtils<br/>In method org.apache.kudu.test.RandomUtils.getRandom()<br/>At RandomUtils.java:[line 48]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N75101');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N75101" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.kudu.util.DataGenerator$DataGeneratorBuilder<br/>In method new org.apache.kudu.util.DataGenerator$DataGeneratorBuilder()<br/>At DataGenerator.java:[line 154]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N75159');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N75159" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.apache.kudu.util.SchemaGenerator$SchemaGeneratorBuilder<br/>In method new org.apache.kudu.util.SchemaGenerator$SchemaGeneratorBuilder()<br/>At SchemaGenerator.java:[line 279]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66431');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66431" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.kudu.shaded.com.google.common.io.Files<br/>In method org.apache.kudu.shaded.com.google.common.io.Files.getFileExtension(String)<br/>At Files.java:[line 792]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/kudu/shaded/com/google/common/io/Files.getFileExtension(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66505');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66505" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.kudu.shaded.com.google.common.io.Files<br/>In method org.apache.kudu.shaded.com.google.common.io.Files.getNameWithoutExtension(String)<br/>At Files.java:[line 810]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/kudu/shaded/com/google/common/io/Files.getNameWithoutExtension(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66698');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/net/URI;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66698" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.kudu.shaded.com.google.common.reflect.ClassPath<br/>In method org.apache.kudu.shaded.com.google.common.reflect.ClassPath.toFile(URL)<br/>At ClassPath.java:[line 586]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/net/URI;)V<br/>Sink parameter 0<br/>Unknown source org/apache/kudu/shaded/com/google/common/reflect/ClassPath.toFile(Ljava/net/URL;)Ljava/io/File; parameter 0<br/>Unknown source java/net/URL.toURI()Ljava/net/URI;<br/>At ClassPath.java:[line 586]<br/>At ClassPath.java:[line 425]<br/>At ClassPath.java:[line 428]<br/>At ClassPath.java:[line 435]<br/>At ClassPath.java:[line 500]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66822');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66822" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.kudu.shaded.com.google.common.reflect.ClassPath<br/>In method org.apache.kudu.shaded.com.google.common.reflect.ClassPath.toFile(URL)<br/>At ClassPath.java:[line 588]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/kudu/shaded/com/google/common/reflect/ClassPath.toFile(Ljava/net/URL;)Ljava/io/File; parameter 0<br/>Unknown source java/net/URL.getPath()Ljava/lang/String;<br/>At ClassPath.java:[line 588]<br/>At ClassPath.java:[line 425]<br/>At ClassPath.java:[line 428]<br/>At ClassPath.java:[line 435]<br/>At ClassPath.java:[line 500]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66946');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66946" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.kudu.shaded.com.google.common.reflect.ClassPath$Scanner<br/>In method org.apache.kudu.shaded.com.google.common.reflect.ClassPath$Scanner.parseJavaClassPath()<br/>At ClassPath.java:[line 481]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/util/Iterator.next()Ljava/lang/Object;<br/>Unknown source java/lang/Iterable.iterator()Ljava/util/Iterator;<br/>Unknown source org/apache/kudu/shaded/com/google/common/base/Splitter.access$000(Lorg/apache/kudu/shaded/com/google/common/base/Splitter;Ljava/lang/CharSequence;)Ljava/util/Iterator;<br/>At ClassPath.java:[line 478]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67035');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67035" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.kudu.shaded.com.google.common.reflect.ClassPath$Scanner<br/>In method org.apache.kudu.shaded.com.google.common.reflect.ClassPath$Scanner.parseJavaClassPath()<br/>At ClassPath.java:[line 483]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/util/Iterator.next()Ljava/lang/Object;<br/>Unknown source org/apache/kudu/shaded/com/google/common/base/Splitter.access$000(Lorg/apache/kudu/shaded/com/google/common/base/Splitter;Ljava/lang/CharSequence;)Ljava/util/Iterator;<br/>Unknown source java/lang/Iterable.iterator()Ljava/util/Iterator;<br/>At ClassPath.java:[line 478]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67182');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67182" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.commons.codec.cli.Digest<br/>In method org.apache.kudu.shaded.org.apache.commons.codec.cli.Digest.run(String, MessageDigest)<br/>At Digest.java:[line 118]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/kudu/shaded/org/apache/commons/codec/cli/Digest.inputs<br/>At Digest.java:[line 117]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67377');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67377" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.commons.io.FileCleaningTracker$Tracker<br/>In method org.apache.kudu.shaded.org.apache.commons.io.FileCleaningTracker$Tracker.delete()<br/>At FileCleaningTracker.java:[line 283]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/kudu/shaded/org/apache/commons/io/FileCleaningTracker$Tracker.path<br/>At FileCleaningTracker.java:[line 283]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68663');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68663" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.commons.io.filefilter.AbstractFileFilter<br/>In method org.apache.kudu.shaded.org.apache.commons.io.filefilter.AbstractFileFilter.accept(File, String)<br/>At AbstractFileFilter.java:[line 53]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/kudu/shaded/org/apache/commons/io/filefilter/AbstractFileFilter.accept(Ljava/io/File;Ljava/lang/String;)Z parameter 0<br/>Method usage not detected<br/>At DelegateFileFilter.java:[line 94]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68747');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68747" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.commons.io.filefilter.WildcardFilter<br/>In method org.apache.kudu.shaded.org.apache.commons.io.filefilter.WildcardFilter.accept(File, String)<br/>At WildcardFilter.java:[line 109]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/kudu/shaded/org/apache/commons/io/filefilter/WildcardFilter.accept(Ljava/io/File;Ljava/lang/String;)Z parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67690');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67690" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.commons.io.FileUtils<br/>In method org.apache.kudu.shaded.org.apache.commons.io.FileUtils.copyDirectory(File, File, FileFilter, boolean)<br/>At FileUtils.java:[line 1361]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.getName()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67759');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67759" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.commons.io.FileUtils<br/>In method org.apache.kudu.shaded.org.apache.commons.io.FileUtils.copyDirectoryToDirectory(File, File)<br/>At FileUtils.java:[line 1187]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.getName()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67828');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67828" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.commons.io.FileUtils<br/>In method org.apache.kudu.shaded.org.apache.commons.io.FileUtils.copyFileToDirectory(File, File, boolean)<br/>At FileUtils.java:[line 999]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.getName()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67897');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67897" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.commons.io.FileUtils<br/>In method org.apache.kudu.shaded.org.apache.commons.io.FileUtils.doCopyDirectory(File, File, FileFilter, boolean, List)<br/>At FileUtils.java:[line 1419]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.getName()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67966');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67966" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.commons.io.FileUtils<br/>In method org.apache.kudu.shaded.org.apache.commons.io.FileUtils.getFile(File, String[])<br/>At FileUtils.java:[line 198]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/kudu/shaded/org/apache/commons/io/FileUtils.getFile(Ljava/io/File;[Ljava/lang/String;)Ljava/io/File; parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68040');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68040" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.commons.io.FileUtils<br/>In method org.apache.kudu.shaded.org.apache.commons.io.FileUtils.getFile(String[])<br/>At FileUtils.java:[line 217]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/kudu/shaded/org/apache/commons/io/FileUtils.getFile([Ljava/lang/String;)Ljava/io/File; parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68114');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68114" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.commons.io.FileUtils<br/>In method org.apache.kudu.shaded.org.apache.commons.io.FileUtils.getFile(String[])<br/>At FileUtils.java:[line 219]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/kudu/shaded/org/apache/commons/io/FileUtils.getFile([Ljava/lang/String;)Ljava/io/File; parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68188');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68188" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.commons.io.FileUtils<br/>In method org.apache.kudu.shaded.org.apache.commons.io.FileUtils.moveDirectoryToDirectory(File, File, boolean)<br/>At FileUtils.java:[line 2970]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.getName()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68257');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68257" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.commons.io.FileUtils<br/>In method org.apache.kudu.shaded.org.apache.commons.io.FileUtils.moveFileToDirectory(File, File, boolean)<br/>At FileUtils.java:[line 3048]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.getName()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68326');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68326" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.commons.io.FileUtils<br/>In method org.apache.kudu.shaded.org.apache.commons.io.FileUtils.toFile(URL)<br/>At FileUtils.java:[line 830]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/kudu/shaded/org/apache/commons/io/FileUtils.decodeUrl(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/apache/kudu/shaded/org/apache/commons/io/FileUtils.decodeUrl(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/apache/kudu/shaded/org/apache/commons/io/FileUtils.toFile(Ljava/net/URL;)Ljava/io/File; parameter 0<br/>Unknown source java/nio/charset/Charset.decode(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;<br/>Unknown source java/net/URL.getFile()Ljava/lang/String;<br/>Unknown source java/nio/CharBuffer.toString()Ljava/lang/String;<br/>Method usage not detected<br/>At FileUtils.java:[line 828]<br/>At FileUtils.java:[line 829]<br/>At FileUtils.java:[line 869]<br/>At FileUtils.java:[line 876]<br/>At FileUtils.java:[line 912]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68953');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68953" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.commons.io.monitor.FileAlterationObserver<br/>In method new org.apache.kudu.shaded.org.apache.commons.io.monitor.FileAlterationObserver(String)<br/>At FileAlterationObserver.java:[line 136]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/kudu/shaded/org/apache/commons/io/monitor/FileAlterationObserver.&lt;init&gt;(Ljava/lang/String;)V parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69027');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69027" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.commons.io.monitor.FileAlterationObserver<br/>In method new org.apache.kudu.shaded.org.apache.commons.io.monitor.FileAlterationObserver(String, FileFilter)<br/>At FileAlterationObserver.java:[line 146]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/kudu/shaded/org/apache/commons/io/monitor/FileAlterationObserver.&lt;init&gt;(Ljava/lang/String;Ljava/io/FileFilter;)V parameter 1<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69101');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69101" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.commons.io.monitor.FileAlterationObserver<br/>In method new org.apache.kudu.shaded.org.apache.commons.io.monitor.FileAlterationObserver(String, FileFilter, IOCase)<br/>At FileAlterationObserver.java:[line 159]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/kudu/shaded/org/apache/commons/io/monitor/FileAlterationObserver.&lt;init&gt;(Ljava/lang/String;Ljava/io/FileFilter;Lorg/apache/kudu/shaded/org/apache/commons/io/IOCase;)V parameter 2<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69175');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69175" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.commons.io.output.DeferredFileOutputStream<br/>In method org.apache.kudu.shaded.org.apache.commons.io.output.DeferredFileOutputStream.thresholdReached()<br/>At DeferredFileOutputStream.java:[line 220]<br/>Sink method java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;<br/>Sink parameter 0<br/>Unknown source org/apache/kudu/shaded/org/apache/commons/io/output/DeferredFileOutputStream.directory<br/>At DeferredFileOutputStream.java:[line 220]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69254');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69254" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.commons.io.output.FileWriterWithEncoding<br/>In method new org.apache.kudu.shaded.org.apache.commons.io.output.FileWriterWithEncoding(String, String)<br/>At FileWriterWithEncoding.java:[line 65]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/kudu/shaded/org/apache/commons/io/output/FileWriterWithEncoding.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V parameter 1<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69328');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69328" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.commons.io.output.FileWriterWithEncoding<br/>In method new org.apache.kudu.shaded.org.apache.commons.io.output.FileWriterWithEncoding(String, String, boolean)<br/>At FileWriterWithEncoding.java:[line 79]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/kudu/shaded/org/apache/commons/io/output/FileWriterWithEncoding.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;Z)V parameter 2<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69402');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69402" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.commons.io.output.FileWriterWithEncoding<br/>In method new org.apache.kudu.shaded.org.apache.commons.io.output.FileWriterWithEncoding(String, Charset)<br/>At FileWriterWithEncoding.java:[line 91]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/kudu/shaded/org/apache/commons/io/output/FileWriterWithEncoding.&lt;init&gt;(Ljava/lang/String;Ljava/nio/charset/Charset;)V parameter 1<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69476');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69476" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.commons.io.output.FileWriterWithEncoding<br/>In method new org.apache.kudu.shaded.org.apache.commons.io.output.FileWriterWithEncoding(String, Charset, boolean)<br/>At FileWriterWithEncoding.java:[line 105]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/kudu/shaded/org/apache/commons/io/output/FileWriterWithEncoding.&lt;init&gt;(Ljava/lang/String;Ljava/nio/charset/Charset;Z)V parameter 2<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69550');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69550" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.commons.io.output.FileWriterWithEncoding<br/>In method new org.apache.kudu.shaded.org.apache.commons.io.output.FileWriterWithEncoding(String, CharsetEncoder)<br/>At FileWriterWithEncoding.java:[line 117]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/kudu/shaded/org/apache/commons/io/output/FileWriterWithEncoding.&lt;init&gt;(Ljava/lang/String;Ljava/nio/charset/CharsetEncoder;)V parameter 1<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69624');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69624" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.commons.io.output.FileWriterWithEncoding<br/>In method new org.apache.kudu.shaded.org.apache.commons.io.output.FileWriterWithEncoding(String, CharsetEncoder, boolean)<br/>At FileWriterWithEncoding.java:[line 131]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/kudu/shaded/org/apache/commons/io/output/FileWriterWithEncoding.&lt;init&gt;(Ljava/lang/String;Ljava/nio/charset/CharsetEncoder;Z)V parameter 2<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69698');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69698" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.commons.io.output.LockableFileWriter<br/>In method new org.apache.kudu.shaded.org.apache.commons.io.output.LockableFileWriter(File, Charset, boolean, String)<br/>At LockableFileWriter.java:[line 194]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.getName()Ljava/lang/String;<br/>At LockableFileWriter.java:[line 194]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69777');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69777" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.commons.io.output.LockableFileWriter<br/>In method new org.apache.kudu.shaded.org.apache.commons.io.output.LockableFileWriter(String, boolean, String)<br/>At LockableFileWriter.java:[line 94]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/kudu/shaded/org/apache/commons/io/output/LockableFileWriter.&lt;init&gt;(Ljava/lang/String;ZLjava/lang/String;)V parameter 2<br/>Method usage not detected<br/>At LockableFileWriter.java:[line 69]<br/>At LockableFileWriter.java:[line 81]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N72308');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N72308" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.jboss.netty.handler.codec.http.multipart.AbstractDiskHttpData<br/>In method org.apache.kudu.shaded.org.jboss.netty.handler.codec.http.multipart.AbstractDiskHttpData.tempFile()<br/>At AbstractDiskHttpData.java:[line 88]<br/>Sink method java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;<br/>Sink parameter 0<br/>Unknown source org/apache/kudu/shaded/org/jboss/netty/handler/codec/http/multipart/AbstractDiskHttpData.getDiskFilename()Ljava/lang/String;<br/>Unknown source org/apache/kudu/shaded/org/jboss/netty/handler/codec/http/multipart/AbstractDiskHttpData.getPostfix()Ljava/lang/String;<br/>At AbstractDiskHttpData.java:[line 81]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N72392');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N72392" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.jboss.netty.handler.codec.http.multipart.AbstractDiskHttpData<br/>In method org.apache.kudu.shaded.org.jboss.netty.handler.codec.http.multipart.AbstractDiskHttpData.tempFile()<br/>At AbstractDiskHttpData.java:[line 90]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/kudu/shaded/org/jboss/netty/handler/codec/http/multipart/AbstractDiskHttpData.getBaseDirectory()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N72461');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N72461" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.jboss.netty.handler.codec.http.multipart.AbstractDiskHttpData<br/>In method org.apache.kudu.shaded.org.jboss.netty.handler.codec.http.multipart.AbstractDiskHttpData.tempFile()<br/>At AbstractDiskHttpData.java:[line 90]<br/>Sink method java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;<br/>Sink parameter 0<br/>Unknown source java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>At AbstractDiskHttpData.java:[line 90]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N72540');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N72540" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.jboss.netty.handler.codec.http.multipart.DiskFileUpload<br/>In method org.apache.kudu.shaded.org.jboss.netty.handler.codec.http.multipart.DiskFileUpload.getDiskFilename()<br/>At DiskFileUpload.java:[line 141]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/kudu/shaded/org/jboss/netty/handler/codec/http/multipart/DiskFileUpload.filename<br/>At DiskFileUpload.java:[line 141]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N73241');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N73241" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.jboss.netty.handler.ssl.util.SelfSignedCertificate<br/>In method new org.apache.kudu.shaded.org.jboss.netty.handler.ssl.util.SelfSignedCertificate(String, SecureRandom, int)<br/>At SelfSignedCertificate.java:[line 121]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/kudu/shaded/org/jboss/netty/handler/ssl/util/BouncyCastleSelfSignedCertGenerator.generate(Ljava/lang/String;Ljava/security/KeyPair;Ljava/security/SecureRandom;)[Ljava/lang/String;<br/>Unknown source org/apache/kudu/shaded/org/jboss/netty/handler/ssl/util/SelfSignedCertificate.newSelfSignedCertificate(Ljava/lang/String;Ljava/security/PrivateKey;Ljava/security/cert/X509Certificate;)[Ljava/lang/String;<br/>Unknown source org/apache/kudu/shaded/org/jboss/netty/handler/ssl/util/OpenJdkSelfSignedCertGenerator.generate(Ljava/lang/String;Ljava/security/KeyPair;Ljava/security/SecureRandom;)[Ljava/lang/String;<br/>At SelfSignedCertificate.java:[line 107]<br/>At SelfSignedCertificate.java:[line 112]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N73340');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N73340" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.jboss.netty.handler.ssl.util.SelfSignedCertificate<br/>In method new org.apache.kudu.shaded.org.jboss.netty.handler.ssl.util.SelfSignedCertificate(String, SecureRandom, int)<br/>At SelfSignedCertificate.java:[line 122]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/kudu/shaded/org/jboss/netty/handler/ssl/util/BouncyCastleSelfSignedCertGenerator.generate(Ljava/lang/String;Ljava/security/KeyPair;Ljava/security/SecureRandom;)[Ljava/lang/String;<br/>Unknown source org/apache/kudu/shaded/org/jboss/netty/handler/ssl/util/SelfSignedCertificate.newSelfSignedCertificate(Ljava/lang/String;Ljava/security/PrivateKey;Ljava/security/cert/X509Certificate;)[Ljava/lang/String;<br/>Unknown source org/apache/kudu/shaded/org/jboss/netty/handler/ssl/util/OpenJdkSelfSignedCertGenerator.generate(Ljava/lang/String;Ljava/security/KeyPair;Ljava/security/SecureRandom;)[Ljava/lang/String;<br/>At SelfSignedCertificate.java:[line 107]<br/>At SelfSignedCertificate.java:[line 112]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N73439');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N73439" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.jboss.netty.handler.ssl.util.SelfSignedCertificate<br/>In method org.apache.kudu.shaded.org.jboss.netty.handler.ssl.util.SelfSignedCertificate.newSelfSignedCertificate(String, PrivateKey, X509Certificate)<br/>At SelfSignedCertificate.java:[line 155]<br/>Sink method java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;<br/>Sink parameter 1<br/>Unknown source org/apache/kudu/shaded/org/jboss/netty/handler/ssl/util/SelfSignedCertificate.newSelfSignedCertificate(Ljava/lang/String;Ljava/security/PrivateKey;Ljava/security/cert/X509Certificate;)[Ljava/lang/String; parameter 2<br/>Method usage not detected<br/>At SelfSignedCertificate.java:[line 155]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N73523');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N73523" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.jboss.netty.handler.ssl.util.SelfSignedCertificate<br/>In method org.apache.kudu.shaded.org.jboss.netty.handler.ssl.util.SelfSignedCertificate.newSelfSignedCertificate(String, PrivateKey, X509Certificate)<br/>At SelfSignedCertificate.java:[line 175]<br/>Sink method java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;<br/>Sink parameter 1<br/>Unknown source org/apache/kudu/shaded/org/jboss/netty/handler/ssl/util/SelfSignedCertificate.newSelfSignedCertificate(Ljava/lang/String;Ljava/security/PrivateKey;Ljava/security/cert/X509Certificate;)[Ljava/lang/String; parameter 2<br/>Method usage not detected<br/>At SelfSignedCertificate.java:[line 175]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N73607');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N73607" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.jboss.netty.util.internal.NativeLibraryLoader<br/>In method org.apache.kudu.shaded.org.jboss.netty.util.internal.NativeLibraryLoader.load(String, ClassLoader)<br/>At NativeLibraryLoader.java:[line 187]<br/>Sink method java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;<br/>Sink parameter 0<br/>Unknown source org/apache/kudu/shaded/org/jboss/netty/util/internal/NativeLibraryLoader.WORKDIR<br/>At NativeLibraryLoader.java:[line 187]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N73987');">
<td>
<span class="priority-1">SECPTI</span>
</td>
<td>This API (java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N73987" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.kudu.test.cluster.KuduBinaryJarExtractor<br/>In method org.apache.kudu.test.cluster.KuduBinaryJarExtractor.extractJar(URI, String, Path)<br/>At KuduBinaryJarExtractor.java:[line 194]<br/>Sink method java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;<br/>Sink parameter 0<br/>Unknown source org/apache/kudu/test/cluster/KuduBinaryJarExtractor.extractJar(Ljava/net/URI;Ljava/lang/String;Ljava/nio/file/Path;)Ljava/nio/file/Path; parameter 1<br/>Method usage with tainted arguments detected<br/>At KuduBinaryJarExtractor.java:[line 72]<br/>At KuduBinaryJarExtractor.java:[line 86]<br/>At KuduBinaryJarExtractor.java:[line 119]<br/>At KuduBinaryJarExtractor.java:[line 124]<br/>At KuduBinaryJarExtractor.java:[line 131]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N74111');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N74111" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.kudu.test.cluster.KuduBinaryJarExtractor<br/>In method org.apache.kudu.test.cluster.KuduBinaryJarExtractor.extractKuduBinaryArtifact(String)<br/>At KuduBinaryJarExtractor.java:[line 131]<br/>Sink method java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;<br/>Sink parameter 1<br/>Unknown source org/apache/kudu/test/cluster/KuduBinaryJarExtractor.extractKuduBinaryArtifact(Ljava/lang/String;)Lorg/apache/kudu/test/cluster/KuduBinaryInfo; parameter 0<br/>At KuduBinaryLocator.java:[line 89]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N74190');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N74190" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.kudu.test.cluster.KuduBinaryJarExtractor<br/>In method org.apache.kudu.test.cluster.KuduBinaryJarExtractor.extractKuduBinaryArtifact(String)<br/>At KuduBinaryJarExtractor.java:[line 132]<br/>Sink method java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;<br/>Sink parameter 1<br/>Unknown source java/nio/file/Path.toString()Ljava/lang/String;<br/>Unknown source java/nio/file/Path.toAbsolutePath()Ljava/nio/file/Path;<br/>Unknown source org/apache/kudu/test/cluster/KuduBinaryJarExtractor.extractJar(Ljava/net/URI;Ljava/lang/String;Ljava/nio/file/Path;)Ljava/nio/file/Path;<br/>At KuduBinaryJarExtractor.java:[line 131]<br/>At KuduBinaryJarExtractor.java:[line 132]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N74289');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N74289" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.kudu.test.cluster.KuduBinaryJarExtractor<br/>In method org.apache.kudu.test.cluster.KuduBinaryJarExtractor.extractKuduBinaryArtifact(String)<br/>At KuduBinaryJarExtractor.java:[line 139]<br/>Sink method java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;<br/>Sink parameter 1<br/>Unknown source java/nio/file/Path.toString()Ljava/lang/String;<br/>Unknown source java/nio/file/Path.toAbsolutePath()Ljava/nio/file/Path;<br/>Unknown source org/apache/kudu/test/cluster/KuduBinaryJarExtractor.extractJar(Ljava/net/URI;Ljava/lang/String;Ljava/nio/file/Path;)Ljava/nio/file/Path;<br/>At KuduBinaryJarExtractor.java:[line 131]<br/>At KuduBinaryJarExtractor.java:[line 139]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N74388');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N74388" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.kudu.test.cluster.KuduBinaryJarExtractor$1<br/>In method org.apache.kudu.test.cluster.KuduBinaryJarExtractor$1.preVisitDirectory(Path, BasicFileAttributes)<br/>At KuduBinaryJarExtractor.java:[line 174]<br/>Sink method java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;<br/>Sink parameter 0<br/>Unknown source java/nio/file/Path.toString()Ljava/lang/String;<br/>Unknown source org/apache/kudu/test/cluster/KuduBinaryJarExtractor$1.preVisitDirectory(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult; parameter 1<br/>Method usage not detected<br/>At KuduBinaryJarExtractor.java:[line 169]<br/>At KuduBinaryJarExtractor.java:[line 174]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N74487');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N74487" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.kudu.test.cluster.KuduBinaryJarExtractor$1<br/>In method org.apache.kudu.test.cluster.KuduBinaryJarExtractor$1.visitFile(Path, BasicFileAttributes)<br/>At KuduBinaryJarExtractor.java:[line 182]<br/>Sink method java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;<br/>Sink parameter 0<br/>Unknown source java/nio/file/Path.toString()Ljava/lang/String;<br/>Unknown source org/apache/kudu/test/cluster/KuduBinaryJarExtractor$1.visitFile(Ljava/nio/file/Path;Ljava/nio/file/attribute/BasicFileAttributes;)Ljava/nio/file/FileVisitResult; parameter 1<br/>Method usage not detected<br/>At KuduBinaryJarExtractor.java:[line 169]<br/>At KuduBinaryJarExtractor.java:[line 182]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N74586');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N74586" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.kudu.test.cluster.KuduBinaryLocator<br/>In method org.apache.kudu.test.cluster.KuduBinaryLocator.findBinaryLocation()<br/>At KuduBinaryLocator.java:[line 103]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/kudu/shaded/com/google/common/io/CharStreams.toString(Ljava/lang/Readable;)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N74744');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N74744" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.kudu.test.cluster.MiniKuduCluster<br/>In method org.apache.kudu.test.cluster.MiniKuduCluster.start()<br/>At MiniKuduCluster.java:[line 219]<br/>Sink method java/nio/file/Paths.get(Ljava/lang/String;[Ljava/lang/String;)Ljava/nio/file/Path;<br/>Sink parameter 1<br/>Unknown source org/apache/kudu/test/cluster/MiniKuduCluster.clusterRoot<br/>At MiniKuduCluster.java:[line 218]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69871');">
<td>
<span class="priority-2">SECPTO</span>
</td>
<td>This API (java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;Z)V) writes to a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69871" style="display: none;">
<a href="#PATH_TRAVERSAL_OUT">Bug type PATH_TRAVERSAL_OUT (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.commons.io.output.LockableFileWriter<br/>In method org.apache.kudu.shaded.org.apache.commons.io.output.LockableFileWriter.initWriter(File, Charset, boolean)<br/>At LockableFileWriter.java:[line 268]<br/>Sink method java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;Z)V<br/>Sink parameter 1<br/>Unknown source java/io/File.getAbsolutePath()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69940');">
<td>
<span class="priority-2">SECPTO</span>
</td>
<td>This API (java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;Z)V) writes to a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69940" style="display: none;">
<a href="#PATH_TRAVERSAL_OUT">Bug type PATH_TRAVERSAL_OUT (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.commons.logging.LogFactory<br/>In method org.apache.kudu.shaded.org.apache.commons.logging.LogFactory.initDiagnostics()<br/>At LogFactory.java:[line 1476]<br/>Sink method java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;Z)V<br/>Sink parameter 1<br/>Unknown source org/apache/kudu/shaded/org/apache/commons/logging/LogFactory.getSystemProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source java/security/AccessController.doPrivileged(Ljava/security/PrivilegedAction;)Ljava/lang/Object;<br/>At LogFactory.java:[line 1459]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N73802');">
<td>
<span class="priority-2">SECPTO</span>
</td>
<td>This API (java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V) writes to a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N73802" style="display: none;">
<a href="#PATH_TRAVERSAL_OUT">Bug type PATH_TRAVERSAL_OUT (click for details)</a>
<br/>In class org.apache.kudu.test.CapturingToFileLogAppender<br/>In method org.apache.kudu.test.CapturingToFileLogAppender.createOutputStream(boolean)<br/>At CapturingToFileLogAppender.java:[line 103]<br/>Sink method java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.getPath()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N72080');">
<td>
<span class="priority-2">SECRD</span>
</td>
<td>The regular expression "%(\\d+\\$)?([-#+ 0,(\\&lt;]*)?(\\d+)?(\\.\\d+)?([tT])?([a-zA-Z%])" is vulnerable to a denial of service attack (ReDOS)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N72080" style="display: none;">
<a href="#REDOS">Bug type REDOS (click for details)</a>
<br/>Value %(\\d+\\$)?([-#+ 0,(\\&lt;]*)?(\\d+)?(\\.\\d+)?([tT])?([a-zA-Z%])<br/>In class org.apache.kudu.shaded.org.checkerframework.checker.formatter.FormatUtil<br/>In method org.apache.kudu.shaded.org.checkerframework.checker.formatter.FormatUtil.&lt;static initializer for FormatUtil&gt;()<br/>At FormatUtil.java:[line 111]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N72909');">
<td>
<span class="priority-2">SECSHA1</span>
</td>
<td>This API SHA1 (SHA-1) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N72909" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_SHA1">Bug type WEAK_MESSAGE_DIGEST_SHA1 (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.jboss.netty.handler.codec.http.websocketx.WebSocketUtil<br/>In method org.apache.kudu.shaded.org.jboss.netty.handler.codec.http.websocketx.WebSocketUtil.sha1(ChannelBuffer)<br/>At WebSocketUtil.java:[line 63]<br/>Value SHA1</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N73075');">
<td>
<span class="priority-2">SECSHA1</span>
</td>
<td>This API SHA1 (SHA-1) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N73075" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_SHA1">Bug type WEAK_MESSAGE_DIGEST_SHA1 (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.jboss.netty.handler.ssl.util.FingerprintTrustManagerFactory$1<br/>In method org.apache.kudu.shaded.org.jboss.netty.handler.ssl.util.FingerprintTrustManagerFactory$1.initialValue()<br/>At FingerprintTrustManagerFactory.java:[line 73]<br/>Value SHA1</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66579');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66579" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.apache.kudu.shaded.com.google.common.io.Resources$UrlByteSource<br/>In method org.apache.kudu.shaded.com.google.common.io.Resources$UrlByteSource.openStream()<br/>At Resources.java:[line 70]<br/>Sink method java/net/URL.openStream()Ljava/io/InputStream;<br/>Sink parameter 0<br/>Unknown source org/apache/kudu/shaded/com/google/common/io/Resources$UrlByteSource.url<br/>At Resources.java:[line 70]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68475');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68475" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.commons.io.FileUtils<br/>In method org.apache.kudu.shaded.org.apache.commons.io.FileUtils.copyURLToFile(URL, File)<br/>At FileUtils.java:[line 1456]<br/>Sink method java/net/URL.openStream()Ljava/io/InputStream;<br/>Sink parameter 0<br/>Unknown source org/apache/kudu/shaded/org/apache/commons/io/FileUtils.copyURLToFile(Ljava/net/URL;Ljava/io/File;)V parameter 1<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68549');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68549" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.commons.io.FileUtils<br/>In method org.apache.kudu.shaded.org.apache.commons.io.FileUtils.copyURLToFile(URL, File, int, int)<br/>At FileUtils.java:[line 1481]<br/>Sink method java/net/URL.openConnection()Ljava/net/URLConnection;<br/>Sink parameter 0<br/>Unknown source org/apache/kudu/shaded/org/apache/commons/io/FileUtils.copyURLToFile(Ljava/net/URL;Ljava/io/File;II)V parameter 3<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68879');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68879" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.commons.io.input.XmlStreamReader<br/>In method new org.apache.kudu.shaded.org.apache.commons.io.input.XmlStreamReader(URL)<br/>At XmlStreamReader.java:[line 241]<br/>Sink method java/net/URL.openConnection()Ljava/net/URLConnection;<br/>Sink parameter 0<br/>Unknown source org/apache/kudu/shaded/org/apache/commons/io/input/XmlStreamReader.&lt;init&gt;(Ljava/net/URL;)V parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70024');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70024" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.commons.logging.LogFactory$5<br/>In method org.apache.kudu.shaded.org.apache.commons.logging.LogFactory$5.run()<br/>At LogFactory.java:[line 1303]<br/>Sink method java/net/URL.openConnection()Ljava/net/URLConnection;<br/>Sink parameter 0<br/>Unknown source org/apache/kudu/shaded/org/apache/commons/logging/LogFactory$5.val$url<br/>At LogFactory.java:[line 1303]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71912');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71912" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.http.ssl.SSLContextBuilder<br/>In method org.apache.kudu.shaded.org.apache.http.ssl.SSLContextBuilder.loadKeyMaterial(URL, char[], char[], PrivateKeyStrategy)<br/>At SSLContextBuilder.java:[line 356]<br/>Sink method java/net/URL.openStream()Ljava/io/InputStream;<br/>Sink parameter 0<br/>Unknown source org/apache/kudu/shaded/org/apache/http/ssl/SSLContextBuilder.loadKeyMaterial(Ljava/net/URL;[C[CLorg/apache/kudu/shaded/org/apache/http/ssl/PrivateKeyStrategy;)Lorg/apache/kudu/shaded/org/apache/http/ssl/SSLContextBuilder; parameter 3<br/>Method usage not detected<br/>At SSLContextBuilder.java:[line 369]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71996');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71996" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.http.ssl.SSLContextBuilder<br/>In method org.apache.kudu.shaded.org.apache.http.ssl.SSLContextBuilder.loadTrustMaterial(URL, char[], TrustStrategy)<br/>At SSLContextBuilder.java:[line 279]<br/>Sink method java/net/URL.openStream()Ljava/io/InputStream;<br/>Sink parameter 0<br/>Unknown source org/apache/kudu/shaded/org/apache/http/ssl/SSLContextBuilder.loadTrustMaterial(Ljava/net/URL;[CLorg/apache/kudu/shaded/org/apache/http/ssl/TrustStrategy;)Lorg/apache/kudu/shaded/org/apache/http/ssl/SSLContextBuilder; parameter 2<br/>Method usage not detected<br/>At SSLContextBuilder.java:[line 291]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70265');">
<td>
<span class="priority-2">SECUS</span>
</td>
<td>Unencrypted socket to org.apache.kudu.shaded.org.apache.http.conn.MultihomePlainSocketFactory (instead of SSLSocket)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70265" style="display: none;">
<a href="#UNENCRYPTED_SOCKET">Bug type UNENCRYPTED_SOCKET (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.http.conn.MultihomePlainSocketFactory<br/>In method org.apache.kudu.shaded.org.apache.http.conn.MultihomePlainSocketFactory.connectSocket(Socket, String, int, InetAddress, int, HttpParams)<br/>At MultihomePlainSocketFactory.java:[line 142]<br/>Value remote host</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70323');">
<td>
<span class="priority-2">SECUS</span>
</td>
<td>Unencrypted socket to org.apache.kudu.shaded.org.apache.http.conn.MultihomePlainSocketFactory (instead of SSLSocket)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70323" style="display: none;">
<a href="#UNENCRYPTED_SOCKET">Bug type UNENCRYPTED_SOCKET (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.http.conn.MultihomePlainSocketFactory<br/>In method org.apache.kudu.shaded.org.apache.http.conn.MultihomePlainSocketFactory.createSocket()<br/>At MultihomePlainSocketFactory.java:[line 89]<br/>Value remote host</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70381');">
<td>
<span class="priority-2">SECUS</span>
</td>
<td>Unencrypted socket to org.apache.kudu.shaded.org.apache.http.conn.scheme.PlainSocketFactory (instead of SSLSocket)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70381" style="display: none;">
<a href="#UNENCRYPTED_SOCKET">Bug type UNENCRYPTED_SOCKET (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.http.conn.scheme.PlainSocketFactory<br/>In method org.apache.kudu.shaded.org.apache.http.conn.scheme.PlainSocketFactory.createSocket()<br/>At PlainSocketFactory.java:[line 94]<br/>Value remote host</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70439');">
<td>
<span class="priority-2">SECUS</span>
</td>
<td>Unencrypted socket to org.apache.kudu.shaded.org.apache.http.conn.scheme.PlainSocketFactory (instead of SSLSocket)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70439" style="display: none;">
<a href="#UNENCRYPTED_SOCKET">Bug type UNENCRYPTED_SOCKET (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.http.conn.scheme.PlainSocketFactory<br/>In method org.apache.kudu.shaded.org.apache.http.conn.scheme.PlainSocketFactory.createSocket(HttpParams)<br/>At PlainSocketFactory.java:[line 89]<br/>Value remote host</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70497');">
<td>
<span class="priority-2">SECUS</span>
</td>
<td>Unencrypted socket to org.apache.kudu.shaded.org.apache.http.conn.socket.PlainConnectionSocketFactory (instead of SSLSocket)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70497" style="display: none;">
<a href="#UNENCRYPTED_SOCKET">Bug type UNENCRYPTED_SOCKET (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.http.conn.socket.PlainConnectionSocketFactory<br/>In method org.apache.kudu.shaded.org.apache.http.conn.socket.PlainConnectionSocketFactory.createSocket(HttpContext)<br/>At PlainConnectionSocketFactory.java:[line 59]<br/>Value remote host</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71796');">
<td>
<span class="priority-2">SECUS</span>
</td>
<td>Unencrypted socket to org.apache.kudu.shaded.org.apache.http.impl.client.ProxyClient (instead of SSLSocket)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71796" style="display: none;">
<a href="#UNENCRYPTED_SOCKET">Bug type UNENCRYPTED_SOCKET (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.http.impl.client.ProxyClient<br/>In method org.apache.kudu.shaded.org.apache.http.impl.client.ProxyClient.tunnel(HttpHost, HttpHost, Credentials)<br/>At ProxyClient.java:[line 202]<br/>Value remote host</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71854');">
<td>
<span class="priority-2">SECUS</span>
</td>
<td>Unencrypted socket to org.apache.kudu.shaded.org.apache.http.impl.pool.BasicConnFactory (instead of SSLSocket)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71854" style="display: none;">
<a href="#UNENCRYPTED_SOCKET">Bug type UNENCRYPTED_SOCKET (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.http.impl.pool.BasicConnFactory<br/>In method org.apache.kudu.shaded.org.apache.http.impl.pool.BasicConnFactory.create(HttpHost)<br/>At BasicConnFactory.java:[line 150]<br/>Value remote host</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N72196');">
<td>
<span class="priority-2">SECUS</span>
</td>
<td>Unencrypted socket to org.apache.kudu.shaded.org.jboss.netty.channel.socket.oio.OioClientSocketChannel (instead of SSLSocket)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N72196" style="display: none;">
<a href="#UNENCRYPTED_SOCKET">Bug type UNENCRYPTED_SOCKET (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.jboss.netty.channel.socket.oio.OioClientSocketChannel<br/>In method new org.apache.kudu.shaded.org.jboss.netty.channel.socket.oio.OioClientSocketChannel(ChannelFactory, ChannelPipeline, ChannelSink)<br/>At OioClientSocketChannel.java:[line 38]<br/>Value remote host</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N72254');">
<td>
<span class="priority-2">SECUSS</span>
</td>
<td>Unencrypted server socket (instead of SSLServerSocket)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N72254" style="display: none;">
<a href="#UNENCRYPTED_SERVER_SOCKET">Bug type UNENCRYPTED_SERVER_SOCKET (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.jboss.netty.channel.socket.oio.OioServerSocketChannel<br/>In method new org.apache.kudu.shaded.org.jboss.netty.channel.socket.oio.OioServerSocketChannel(ChannelFactory, ChannelPipeline, ChannelSink)<br/>At OioServerSocketChannel.java:[line 55]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70555');">
<td>
<span class="priority-2">SECWHV</span>
</td>
<td>HostnameVerifier that accept any signed certificates makes communication vulnerable to a MITM attack</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70555" style="display: none;">
<a href="#WEAK_HOSTNAME_VERIFIER">Bug type WEAK_HOSTNAME_VERIFIER (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.http.conn.ssl.AllowAllHostnameVerifier<br/>In method org.apache.kudu.shaded.org.apache.http.conn.ssl.AllowAllHostnameVerifier.verify(String, String[], String[])<br/>At AllowAllHostnameVerifier.java:[line 54]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70718');">
<td>
<span class="priority-2">SECWHV</span>
</td>
<td>HostnameVerifier that accept any signed certificates makes communication vulnerable to a MITM attack</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70718" style="display: none;">
<a href="#WEAK_HOSTNAME_VERIFIER">Bug type WEAK_HOSTNAME_VERIFIER (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.apache.http.conn.ssl.NoopHostnameVerifier<br/>In method org.apache.kudu.shaded.org.apache.http.conn.ssl.NoopHostnameVerifier.verify(String, SSLSession)<br/>At NoopHostnameVerifier.java:[line 49]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65667');">
<td>
<span class="priority-2">SECWTM</span>
</td>
<td>TrustManager that accept any certificates makes communication vulnerable to a MITM attack</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65667" style="display: none;">
<a href="#WEAK_TRUST_MANAGER">Bug type WEAK_TRUST_MANAGER (click for details)</a>
<br/>In class org.apache.kudu.client.SecurityContext$TrustAnyCert<br/>In method org.apache.kudu.client.SecurityContext$TrustAnyCert.checkClientTrusted(X509Certificate[], String)<br/>At SecurityContext.java:[line 428]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65721');">
<td>
<span class="priority-2">SECWTM</span>
</td>
<td>TrustManager that accept any certificates makes communication vulnerable to a MITM attack</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65721" style="display: none;">
<a href="#WEAK_TRUST_MANAGER">Bug type WEAK_TRUST_MANAGER (click for details)</a>
<br/>In class org.apache.kudu.client.SecurityContext$TrustAnyCert<br/>In method org.apache.kudu.client.SecurityContext$TrustAnyCert.checkServerTrusted(X509Certificate[], String)<br/>At SecurityContext.java:[line 433]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65775');">
<td>
<span class="priority-2">SECWTM</span>
</td>
<td>TrustManager that accept any certificates makes communication vulnerable to a MITM attack</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65775" style="display: none;">
<a href="#WEAK_TRUST_MANAGER">Bug type WEAK_TRUST_MANAGER (click for details)</a>
<br/>In class org.apache.kudu.client.SecurityContext$TrustAnyCert<br/>In method org.apache.kudu.client.SecurityContext$TrustAnyCert.getAcceptedIssuers()<br/>At SecurityContext.java:[line 437]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N73133');">
<td>
<span class="priority-2">SECWTM</span>
</td>
<td>TrustManager that accept any certificates makes communication vulnerable to a MITM attack</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N73133" style="display: none;">
<a href="#WEAK_TRUST_MANAGER">Bug type WEAK_TRUST_MANAGER (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.jboss.netty.handler.ssl.util.FingerprintTrustManagerFactory$2<br/>In method org.apache.kudu.shaded.org.jboss.netty.handler.ssl.util.FingerprintTrustManagerFactory$2.getAcceptedIssuers()<br/>At FingerprintTrustManagerFactory.java:[line 115]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N73187');">
<td>
<span class="priority-2">SECWTM</span>
</td>
<td>TrustManager that accept any certificates makes communication vulnerable to a MITM attack</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N73187" style="display: none;">
<a href="#WEAK_TRUST_MANAGER">Bug type WEAK_TRUST_MANAGER (click for details)</a>
<br/>In class org.apache.kudu.shaded.org.jboss.netty.handler.ssl.util.InsecureTrustManagerFactory$1<br/>In method org.apache.kudu.shaded.org.jboss.netty.handler.ssl.util.InsecureTrustManagerFactory$1.getAcceptedIssuers()<br/>At InsecureTrustManagerFactory.java:[line 54]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67124');">
<td>
<span class="priority-2">SECXXEDOC</span>
</td>
<td>The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67124" style="display: none;">
<a href="#XXE_DOCUMENT">Bug type XXE_DOCUMENT (click for details)</a>
<br/>In class org.apache.kudu.shaded.kr.motd.maven.os.HelpMojo<br/>In method org.apache.kudu.shaded.kr.motd.maven.os.HelpMojo.build()<br/>At HelpMojo.java:[line 75]<br/>Value DocumentBuilder.parse(...)</p>
</td>
</tr>
</table>
<h1>
<a name="Details">Details</a>
</h1>
<h2>
<a name="CIPHER_INTEGRITY">CIPHER_INTEGRITY: Cipher with no integrity</a>
</h2>
            
<p>
    The ciphertext produced is susceptible to alteration by an adversary. This mean that the cipher provides no way to detect that the
    data has been tampered with. If the ciphertext can be controlled by an attacker, it could be altered without detection.
</p>
<p>
    The solution is to use a cipher that includes a Hash based Message Authentication Code (HMAC) to sign the data. Combining a HMAC function to the
    existing cipher is prone to error <sup><a href="https://moxie.org/blog/the-cryptographic-doom-principle/">[1]</a></sup>. Specifically,
    it is always recommended that you be able to verify the HMAC first, and only if the data is unmodified, do you then perform any cryptographic
    functions on the data.
</p>
<p>The following modes are vulnerable because they don't provide a HMAC:<br/>
    - CBC<br/>
    - OFB<br/>
    - CTR<br/>
    - ECB<br/><br/>
    The following snippets code are some examples of vulnerable code.<br/><br/>
    <b>Code at risk:</b><br/>
    <i>AES in CBC mode</i><br/>

    <pre>Cipher c = Cipher.getInstance("AES/CBC/PKCS5Padding");
c.init(Cipher.ENCRYPT_MODE, k, iv);
byte[] cipherText = c.doFinal(plainText);</pre>
    <br/>
    <i>Triple DES with ECB mode</i><br/>

<pre>Cipher c = Cipher.getInstance("DESede/ECB/PKCS5Padding");
c.init(Cipher.ENCRYPT_MODE, k, iv);
byte[] cipherText = c.doFinal(plainText);</pre>
</p>
<p>
    <b>Solution:</b>
    <pre>Cipher c = Cipher.getInstance("AES/GCM/NoPadding");
c.init(Cipher.ENCRYPT_MODE, k, iv);
byte[] cipherText = c.doFinal(plainText);</pre>
</p>
<p>
In the example solution above, the GCM mode introduces an HMAC into the resulting encrypted data, providing integrity of the result.
</p>
<br/>
<p>
    <b>References</b><br/>
    <a href="https://en.wikipedia.org/wiki/Authenticated_encryption">Wikipedia: Authenticated encryption</a><br/>
    <a href="https://csrc.nist.gov/projects/block-cipher-techniques/bcm/modes-develoment#01">NIST: Authenticated Encryption Modes</a><br/>
    <a href="https://moxie.org/blog/the-cryptographic-doom-principle/">Moxie Marlinspike's blog: The Cryptographic Doom Principle</a><br/>
    <a href="https://cwe.mitre.org/data/definitions/353.html">CWE-353: Missing Support for Integrity Check</a>
</p>

        
<h2>
<a name="INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE: Information Exposure Through An Error Message</a>
</h2>
            
<p>
The sensitive information may be valuable information on its own (such as a password), or it may be useful for launching other, more deadly attacks. If an attack fails, an attacker may use error information provided by the server to launch another more focused attack. For example, an attempt to exploit a path traversal weakness (CWE-22) might yield the full pathname of the installed application. In turn, this could be used to select the proper number of ".." sequences to navigate to the targeted file. An attack using SQL injection (CWE-89) might not initially succeed, but an error message could reveal the malformed query, which would expose query logic and possibly even passwords or other sensitive information used within the query.
</p>
<p>
    <b>Vulnerable Code:</b><br/>
<pre>try {
  out = httpResponse.getOutputStream()
} catch (Exception e) {
  e.printStackTrace(out);
}</pre>
</p>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/209.html">CWE-209: Information Exposure Through an Error Message</a><br/>
<a href="https://cwe.mitre.org/data/definitions/211.html">CWE-211: Information Exposure Through Externally-Generated Error Message</a><br/>
</p>
            
        
<h2>
<a name="COMMAND_INJECTION">COMMAND_INJECTION: Potential Command Injection</a>
</h2>
            
<p>The highlighted API is used to execute a system command. If unfiltered input is passed to this API, it can lead to arbitrary command execution.</p>
<br/>
<p>
    <b>Vulnerable Code:</b><br/>
<pre>import java.lang.Runtime;

Runtime r = Runtime.getRuntime();
r.exec("/bin/sh -c some_tool" + input);</pre>
</p>
<p>
<b>References</b><br/>
<a href="https://www.owasp.org/index.php/Command_Injection">OWASP: Command Injection</a><br/>
<a href="https://www.owasp.org/index.php/Top_10_2013-A1-Injection">OWASP: Top 10 2013-A1-Injection</a><br/>
<a href="https://cwe.mitre.org/data/definitions/78.html">CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')</a>
</p>

        
<h2>
<a name="CRLF_INJECTION_LOGS">CRLF_INJECTION_LOGS: Potential CRLF Injection for logs</a>
</h2>
            
<p>
    When data from an untrusted source is put into a logger and not neutralized correctly,
    an attacker could forge log entries or include malicious content.
    Inserted false entries could be used to skew statistics, distract the administrator
    or even to implicate another party in the commission of a malicious act.
    If the log file is processed automatically, the attacker can render the file unusable
    by corrupting the format of the file or injecting unexpected characters.
    An attacker may also inject code or other commands into the log file and take advantage
    of a vulnerability in the log processing utility (e.g. command injection or XSS).
</p>
<br/>
<p>
<b>Code at risk:</b><br/>
<pre>String val = request.getParameter("user");
String metadata = request.getParameter("metadata");
[...]
if(authenticated) {
    log.info("User " + val + " (" + metadata + ") was authenticated successfully");
}
else {
    log.info("User " + val + " (" + metadata + ") was not authenticated");
}
</pre>

A malicious user could send the metadata parameter with the value: <code>"Firefox) was authenticated successfully\r\n[INFO] User bbb (Internet Explorer"</code>.
</p>

<b>Solution:</b><br/>
<p>
You can manually sanitize each parameter.
<pre>
log.info("User " + val.replaceAll("[\r\n]","") + " (" + userAgent.replaceAll("[\r\n]","") + ") was not authenticated");
</pre>
</p>

<p>
You can also configure your logger service to replace new line for all message events. Here is sample configuration for LogBack <a href="https://logback.qos.ch/manual/layouts.html#replace">using the <code>replace</code> function</a>.
<pre>
&lt;pattern&gt;%-5level - %replace(%msg){'[\r\n]', ''}%n&lt;/pattern&gt;
</pre>
</p>

<p>
Finally, you can use a logger implementation that replace new line by spaces.
The project <a href="https://github.com/javabeanz/owasp-security-logging">OWASP Security Logging</a> has an implementation for Logback and Log4j.
</p>

<br/>
<p>
    <b>References</b><br/>
    <a href="https://cwe.mitre.org/data/definitions/117.html">CWE-117: Improper Output Neutralization for Logs</a><br/>
    <a href="https://cwe.mitre.org/data/definitions/93.html">CWE-93: Improper Neutralization of CRLF Sequences ('CRLF Injection')</a><br/>
    <a href="https://logback.qos.ch/manual/layouts.html#replace">CWE-93: Improper Neutralization of CRLF Sequences ('CRLF Injection')</a><br/>
    <a href="https://github.com/javabeanz/owasp-security-logging">OWASP Security Logging</a><br/>
</p>


        
<h2>
<a name="DES_USAGE">DES_USAGE: DES is insecure</a>
</h2>
            
<p>
DES is considered strong ciphers for modern applications. Currently, NIST recommends the
usage of AES block ciphers instead of DES.
</p>
<p>
    <b>Example weak code:</b>
<pre>Cipher c = Cipher.getInstance("DES/ECB/PKCS5Padding");
c.init(Cipher.ENCRYPT_MODE, k, iv);
byte[] cipherText = c.doFinal(plainText);</pre>
</p>
<p>
    <b>Example solution:</b>
    <pre>Cipher c = Cipher.getInstance("AES/GCM/NoPadding");
c.init(Cipher.ENCRYPT_MODE, k, iv);
byte[] cipherText = c.doFinal(plainText);</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://www.nist.gov/news-events/news/2005/06/nist-withdraws-outdated-data-encryption-standard">NIST Withdraws Outdated Data Encryption Standard</a><br/>
<a href="https://cwe.mitre.org/data/definitions/326.html">CWE-326: Inadequate Encryption Strength</a>
</p>

        
<h2>
<a name="ECB_MODE">ECB_MODE: ECB mode is insecure</a>
</h2>
            
<p>An authentication cipher mode which provides better confidentiality of the encrypted data should be used instead of Electronic Code Book (ECB) mode,
which does not provide good confidentiality. Specifically, ECB mode produces the same output for the same input each time. So,
for example, if a user is sending a password, the encrypted value is the same each time. This allows an attacker to intercept
and replay the data.</p>
<p>
To fix this, something like Galois/Counter Mode (GCM) should be used instead.
</p>
<p>
<b>Code at risk:</b>
    <pre>Cipher c = Cipher.getInstance("AES/ECB/NoPadding");
c.init(Cipher.ENCRYPT_MODE, k, iv);
byte[] cipherText = c.doFinal(plainText);</pre>
</p>
<p>
    <b>Solution:</b>
    <pre>Cipher c = Cipher.getInstance("AES/GCM/NoPadding");
c.init(Cipher.ENCRYPT_MODE, k, iv);
byte[] cipherText = c.doFinal(plainText);</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://en.wikipedia.org/wiki/Authenticated_encryption">Wikipedia: Authenticated encryption</a><br/>
<a href="https://csrc.nist.gov/projects/block-cipher-techniques/bcm/modes-develoment#01">NIST: Authenticated Encryption Modes</a><br/>
<a href="https://en.wikipedia.org/wiki/Block_cipher_modes_of_operation#Electronic_codebook_.28ECB.29">Wikipedia: Block cipher modes of operation</a><br/>
<a href="https://csrc.nist.gov/publications/detail/sp/800-38a/final">NIST: Recommendation for Block Cipher Modes of Operation</a>
</p>

        
<h2>
<a name="HARD_CODE_PASSWORD">HARD_CODE_PASSWORD: Hard coded password</a>
</h2>
            
<p>
Passwords should not be kept in the source code. The source code can be widely shared in an enterprise environment, and is
certainly shared in open source. To be managed safely, passwords and secret keys should be stored in separate configuration files or keystores.
(Hard coded keys are reported separately by <i>Hard Coded Key</i> pattern)
</p>
<p>
<p><b>Vulnerable Code:</b><br/>

<pre>private String SECRET_PASSWORD = "letMeIn!";

Properties props = new Properties();
props.put(Context.SECURITY_CREDENTIALS, "p@ssw0rd");</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/259.html">CWE-259: Use of Hard-coded Password</a>
</p>

        
<h2>
<a name="LDAP_INJECTION">LDAP_INJECTION: Potential LDAP Injection</a>
</h2>
            
<p>
Just like SQL, all inputs passed to an LDAP query need to be passed in safely. Unfortunately, LDAP doesn't have prepared statement interfaces like SQL.
Therefore, the primary defense against LDAP injection is strong input validation of any untrusted data before including it in an LDAP query.
</p>
<p>
    <b>Code at risk:</b><br/>
    <pre>NamingEnumeration&lt;SearchResult&gt; answers = context.search("dc=People,dc=example,dc=com",
        "(uid=" + username + ")", ctrls);</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="http://projects.webappsec.org/w/page/13246947/LDAP%20Injection">WASC-29: LDAP Injection</a><br/>
<a href="https://www.owasp.org/index.php/Top_10_2013-A1-Injection">OWASP: Top 10 2013-A1-Injection</a><br/>
<a href="https://cwe.mitre.org/data/definitions/90.html">CWE-90: Improper Neutralization of Special Elements used in an LDAP Query ('LDAP Injection')</a><br/>
<a href="https://www.veracode.com/security/ldap-injection">LDAP Injection Guide: Learn How to Detect LDAP Injections and Improve LDAP Security</a>
</p>

        
<h2>
<a name="WEAK_MESSAGE_DIGEST_MD5">WEAK_MESSAGE_DIGEST_MD5: MD2, MD4 and MD5 are weak hash functions</a>
</h2>
            
<p>The algorithms MD2, MD4 and MD5 are not a recommended MessageDigest. <b>PBKDF2</b> should be used to hash password for example.</p>

<blockquote>
    "The security of the MD5 hash function is severely compromised. A collision attack exists that can find collisions
    within seconds on a computer with a 2.6 GHz Pentium 4 processor (complexity of 2<sup>24.1</sup>).[1] Further, there is also a
    chosen-prefix collision attack that can produce a collision for two inputs with specified prefixes within hours, using
    off-the-shelf computing hardware (complexity 2<sup>39</sup>).[2]"<br/>
    - <a href="https://en.wikipedia.org/wiki/MD5#Security">Wikipedia: MD5 - Security</a>
</blockquote>

<blockquote>
    "<b>SHA-224, SHA-256, SHA-384, SHA-512, SHA-512/224, and SHA-512/256</b>:<br/>
    The use of these hash functions is acceptable for all hash function applications."<br/>
    - <a href="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-131Ar2.pdf">NIST: Transitioning the Use of Cryptographic Algorithms and Key Lengths p.15</a>
</blockquote>
<blockquote>
    "The main idea of a PBKDF is to slow dictionary or brute force attacks on the passwords by increasing the time
    needed to test each password. An attacker with a list of likely passwords can evaluate the PBKDF using the known
    iteration counter and the salt. Since an attacker has to spend a significant amount of computing time for each try,
    it becomes harder to apply the dictionary or brute force attacks."<br/>
- <a href="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-132.pdf">NIST: Recommendation for Password-Based Key Derivation  p.12</a>
</blockquote>
<br/>
<p>
    <b>Vulnerable Code:</b><br/>
    <pre>MessageDigest md5Digest = MessageDigest.getInstance("MD5");
    md5Digest.update(password.getBytes());
    byte[] hashValue = md5Digest.digest();</pre>
    <br/>
    <pre>byte[] hashValue = DigestUtils.getMd5Digest().digest(password.getBytes());</pre>
</p>
<br/>
<p>
    <b>Solution (Using bouncy castle):</b><br/>
    <pre>public static byte[] getEncryptedPassword(String password, byte[] salt) throws NoSuchAlgorithmException, InvalidKeySpecException {
    PKCS5S2ParametersGenerator gen = new PKCS5S2ParametersGenerator(new SHA256Digest());
    gen.init(password.getBytes("UTF-8"), salt.getBytes(), 4096);
    return ((KeyParameter) gen.generateDerivedParameters(256)).getKey();
}</pre>
    <br/>
    <b>Solution (Java 8 and later):</b><br/>
    <pre>public static byte[] getEncryptedPassword(String password, byte[] salt) throws NoSuchAlgorithmException, InvalidKeySpecException {
    KeySpec spec = new PBEKeySpec(password.toCharArray(), salt, 4096, 256 * 8);
    SecretKeyFactory f = SecretKeyFactory.getInstance("PBKDF2WithHmacSHA256");
    return f.generateSecret(spec).getEncoded();
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
[1] <a href="https://www.win.tue.nl/hashclash/On%20Collisions%20for%20MD5%20-%20M.M.J.%20Stevens.pdf">On Collisions for MD5</a>: Master Thesis by M.M.J. Stevens<br/>
[2] <a href="https://homepages.cwi.nl/~stevens/papers/stJOC%20-%20Chosen-Prefix%20Collisions%20for%20MD5%20and%20Applications.pdf">Chosen-prefix collisions for MD5 and applications</a>: Paper written by Marc Stevens<br/>
<a href="https://en.wikipedia.org/wiki/MD5">Wikipedia: MD5</a><br/>
<a href="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-131Ar2.pdf">NIST: Transitioning the Use of Cryptographic Algorithms and Key Lengths</a><br/>
<a href="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-132.pdf">NIST: Recommendation for Password-Based Key Derivation</a><br/>
<a href="https://stackoverflow.com/q/22580853/89769">Stackoverflow: Reliable implementation of PBKDF2-HMAC-SHA256 for Java</a><br/>
<a href="https://cwe.mitre.org/data/definitions/327.html">CWE-327: Use of a Broken or Risky Cryptographic Algorithm</a>
</p>

        
<h2>
<a name="OBJECT_DESERIALIZATION">OBJECT_DESERIALIZATION: Object deserialization is used in {1}</a>
</h2>
            
<p>
    Object deserialization of untrusted data can lead to remote code execution, if there is a class in classpath that allows
    the trigger of malicious operation.
</p>
<p>
    Libraries developers tend to fix class that provided potential malicious trigger. There are still classes that are
    known to trigger Denial of Service<sup>[1]</sup>.
</p>
<p>
    Deserialization is a sensible operation that has a great history of vulnerabilities. The web application might
    become vulnerable as soon as a new vulnerability is found in the Java Virtual Machine<sup>[2] [3]</sup>.
</p>

<p>
<b>Code at risk:</b><br/>
<pre>
public UserData deserializeObject(InputStream receivedFile) throws IOException, ClassNotFoundException {

    try (ObjectInputStream in = new ObjectInputStream(receivedFile)) {
        return (UserData) in.readObject();
    }
}
</pre>
</p>

<p>
<b>Solutions:</b><br/>
<p>
Avoid deserializing object provided by remote users.
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/502.html">CWE-502: Deserialization of Untrusted Data</a><br/>
<a href="https://www.owasp.org/index.php/Deserialization_of_untrusted_data">Deserialization of untrusted data</a><br/>
<a href="https://www.oracle.com/technetwork/java/seccodeguide-139067.html#8">Serialization and Deserialization </a><br/>
<a href="https://github.com/frohoff/ysoserial">A tool for generating payloads that exploit unsafe Java object deserialization</a><br/>
[1] <a href="https://gist.github.com/coekie/a27cc406fc9f3dc7a70d">Example of Denial of Service using the class <code>java.util.HashSet</code></a><br/>
[2] <a href="https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2015-2590">OpenJDK: Deserialization issue in ObjectInputStream.readSerialData() (CVE-2015-2590)</a><br/>
[3] <a href="https://www.rapid7.com/db/modules/exploit/multi/browser/java_calendar_deserialize">Rapid7: Sun Java Calendar Deserialization Privilege Escalation (CVE-2008-5353)</a>
</p>

        
<h2>
<a name="PREDICTABLE_RANDOM">PREDICTABLE_RANDOM: Predictable pseudorandom number generator</a>
</h2>
            
<p>The use of a predictable random value can lead to vulnerabilities when used in certain security critical contexts. For example, when the value is used as:</p>
<ul>
<li>a CSRF token: a predictable token can lead to a CSRF attack as an attacker will know the value of the token</li>
<li>a password reset token (sent by email): a predictable password token can lead to an account takeover, since an attacker will guess the URL of the "change password" form</li>
<li>any other secret value</li>
</ul>
<p>
A quick fix could be to replace the use of <code>java.util.Random</code> with something stronger, such as <code>java.security.SecureRandom</code>.
</p>
<p>
<b>Vulnerable Code:</b><br/>
<pre>String generateSecretToken() {
    Random r = new Random();
    return Long.toHexString(r.nextLong());
}</pre>
</p>
<p>
<b>Solution:</b>
<pre>import org.apache.commons.codec.binary.Hex;

String generateSecretToken() {
    SecureRandom secRandom = new SecureRandom();

    byte[] result = new byte[32];
    secRandom.nextBytes(result);
    return Hex.encodeHexString(result);
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://jazzy.id.au/2010/09/20/cracking_random_number_generators_part_1.html">Cracking Random Number Generators - Part 1 (https://jazzy.id.au)</a><br/>
<a href="https://www.securecoding.cert.org/confluence/display/java/MSC02-J.+Generate+strong+random+numbers">CERT: MSC02-J. Generate strong random numbers</a><br/>
<a href="https://cwe.mitre.org/data/definitions/330.html">CWE-330: Use of Insufficiently Random Values</a><br/>
<a href="https://blog.h3xstream.com/2014/12/predicting-struts-csrf-token-cve-2014.html">Predicting Struts CSRF Token (Example of real-life vulnerability and exploitation)</a>
</p>

        
<h2>
<a name="PATH_TRAVERSAL_IN">PATH_TRAVERSAL_IN: Potential Path Traversal (file read)</a>
</h2>
            
<p>A file is opened to read its content. The filename comes from an <b>input</b> parameter.
If an unfiltered parameter is passed to this file API, files from an arbitrary filesystem location could be read.</p>
<p>This rule identifies <b>potential</b> path traversal vulnerabilities. In many cases, the constructed file path cannot be controlled
by the user. If that is the case, the reported instance is a false positive.</p>
<br/>

<p>
    <b>Vulnerable Code:</b><br/>
<pre>@GET
@Path("/images/{image}")
@Produces("images/*")
public Response getImage(@javax.ws.rs.PathParam("image") String image) {
    File file = new File("resources/images/", image); //Weak point

    if (!file.exists()) {
        return Response.status(Status.NOT_FOUND).build();
    }

    return Response.ok().entity(new FileInputStream(file)).build();
}</pre>
</p>
<br/>

<p>
    <b>Solution:</b><br/>
<pre>import org.apache.commons.io.FilenameUtils;

@GET
@Path("/images/{image}")
@Produces("images/*")
public Response getImage(@javax.ws.rs.PathParam("image") String image) {
    File file = new File("resources/images/", FilenameUtils.getName(image)); //Fix

    if (!file.exists()) {
        return Response.status(Status.NOT_FOUND).build();
    }

    return Response.ok().entity(new FileInputStream(file)).build();
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="http://projects.webappsec.org/w/page/13246952/Path%20Traversal">WASC: Path Traversal</a><br/>
<a href="https://www.owasp.org/index.php/Path_Traversal">OWASP: Path Traversal</a><br/>
<a href="https://capec.mitre.org/data/definitions/126.html">CAPEC-126: Path Traversal</a><br/>
<a href="https://cwe.mitre.org/data/definitions/22.html">CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')</a>
</p>

        
<h2>
<a name="PATH_TRAVERSAL_OUT">PATH_TRAVERSAL_OUT: Potential Path Traversal (file write)</a>
</h2>
            
<p>A file is opened to write to its contents. The filename comes from an <b>input</b> parameter.
If an unfiltered parameter is passed to this file API, files at an arbitrary filesystem location could be modified.</p>
<p>This rule identifies <b>potential</b> path traversal vulnerabilities. In many cases, the constructed file path cannot be controlled
by the user. If that is the case, the reported instance is a false positive.</p>
<br/>
<p>
<b>References</b><br/>
<a href="http://projects.webappsec.org/w/page/13246952/Path%20Traversal">WASC-33: Path Traversal</a><br/>
<a href="https://www.owasp.org/index.php/Path_Traversal">OWASP: Path Traversal</a><br/>
<a href="https://capec.mitre.org/data/definitions/126.html">CAPEC-126: Path Traversal</a><br/>
<a href="https://cwe.mitre.org/data/definitions/22.html">CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')</a>
</p>

        
<h2>
<a name="REDOS">REDOS: Regex DOS (ReDOS)</a>
</h2>
            
<p>
    Regular expressions (Regex) are frequently subject to Denial of Service (DOS) attacks (called ReDOS). This is due to the fact that regex engines
    may take a large amount of time when analyzing certain strings, depending on how the regex is defined.
<p>
    For example, for the regex: <code>^(a+)+$</code>, the input "<code>aaaaaaaaaaaaaaaaX</code>" will cause the regex engine to analyze 65536
different paths.<sup>[1] Example taken from OWASP references</sup></p>
<p>
Therefore, it is possible that a single request may cause a large amount of computation on the server side.
The problem with this regex, and others like it, is that there are two different ways the same input character can be accepted by the
Regex due to the <code>+</code> (or a <code>*</code>) inside the parenthesis, and the <code>+</code> (or a <code>*</code>) outside the parenthesis. The way this is written, either <code>+</code> could
consume the character 'a'. To fix this, the regex should be rewritten to eliminate the ambiguity. For example, this could simply be
rewritten as: <code>^a+$</code>, which is presumably what the author meant anyway (any number of a's). Assuming that's what the original
regex meant, this new regex can be evaluated quickly, and is not subject to ReDOS.
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://sebastiankuebeck.wordpress.com/2011/03/01/detecting-and-preventing-redos-vulnerabilities/">Sebastian Kubeck's Weblog: Detecting and Preventing ReDoS Vulnerabilities</a><br/>
<sup>[1]</sup> <a href="https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS">OWASP: Regular expression Denial of Service</a><br/>
<a href="https://cwe.mitre.org/data/definitions/400.html">CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion')</a>
</p>

        
<h2>
<a name="WEAK_MESSAGE_DIGEST_SHA1">WEAK_MESSAGE_DIGEST_SHA1: SHA-1 is a weak hash function</a>
</h2>
            
<p>The algorithms SHA-1 is not a recommended algorithm for hash password, for signature verification and other
uses. <b>PBKDF2</b> should be used to hash password for example.</p>

<blockquote>
    "<b>SHA-1 for digital signature generation:</b><br/>
    SHA-1 may only be used for digital signature generation where specifically allowed by NIST protocol-specific guidance.
    For all other applications, <u>SHA-1 shall not be used for digital signature generation</u>.<br/>
    <b>SHA-1 for digital signature verification:</b><br/>
    For digital signature verification, <u>SHA-1 is allowed for legacy-use</u>.<br/>
    [...]<br/>
    <b>SHA-224, SHA-256, SHA-384, SHA-512, SHA-512/224, and SHA-512/256</b>:<br/>
    The use of these hash functions is acceptable for all hash function applications."<br/>
    - <a href="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-131Ar2.pdf">NIST: Transitioning the Use of Cryptographic Algorithms and Key Lengths p.15</a>
</blockquote>
<blockquote>
    "The main idea of a PBKDF is to slow dictionary or brute force attacks on the passwords by increasing the time
    needed to test each password. An attacker with a list of likely passwords can evaluate the PBKDF using the known
    iteration counter and the salt. Since an attacker has to spend a significant amount of computing time for each try,
    it becomes harder to apply the dictionary or brute force attacks."<br/>
- <a href="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-132.pdf">NIST: Recommendation for Password-Based Key Derivation  p.12</a>

</blockquote>
<br/>
<p>
    <b>Vulnerable Code:</b><br/>
    <pre>MessageDigest sha1Digest = MessageDigest.getInstance("SHA1");
    sha1Digest.update(password.getBytes());
    byte[] hashValue = sha1Digest.digest();</pre>
    <br/>
    <pre>byte[] hashValue = DigestUtils.getSha1Digest().digest(password.getBytes());</pre>
</p>
<br/>
<p>
    <b>Solution (Using bouncy castle):</b><br/>
    <pre>public static byte[] getEncryptedPassword(String password, byte[] salt) throws NoSuchAlgorithmException, InvalidKeySpecException {
    PKCS5S2ParametersGenerator gen = new PKCS5S2ParametersGenerator(new SHA256Digest());
    gen.init(password.getBytes("UTF-8"), salt.getBytes(), 4096);
    return ((KeyParameter) gen.generateDerivedParameters(256)).getKey();
}</pre>
    <br/>
    <b>Solution (Java 8 and later):</b><br/>
    <pre>public static byte[] getEncryptedPassword(String password, byte[] salt) throws NoSuchAlgorithmException, InvalidKeySpecException {
    KeySpec spec = new PBEKeySpec(password.toCharArray(), salt, 4096, 256 * 8);
    SecretKeyFactory f = SecretKeyFactory.getInstance("PBKDF2WithHmacSHA256");
    return f.generateSecret(spec).getEncoded();
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://community.qualys.com/blogs/securitylabs/2014/09/09/sha1-deprecation-what-you-need-to-know">Qualys blog: SHA1 Deprecation: What You Need to Know</a><br/>
<a href="https://googleonlinesecurity.blogspot.ca/2014/09/gradually-sunsetting-sha-1.html">Google Online Security Blog: Gradually sunsetting SHA-1</a><br/>
<a href="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-131Ar2.pdf">NIST: Transitioning the Use of Cryptographic Algorithms and Key Lengths</a><br/>
<a href="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-132.pdf">NIST: Recommendation for Password-Based Key Derivation</a><br/>
<a href="https://stackoverflow.com/q/22580853/89769">Stackoverflow: Reliable implementation of PBKDF2-HMAC-SHA256 for Java</a><br/>
<a href="https://cwe.mitre.org/data/definitions/327.html">CWE-327: Use of a Broken or Risky Cryptographic Algorithm</a>
</p>

        
<h2>
<a name="URLCONNECTION_SSRF_FD">URLCONNECTION_SSRF_FD: URLConnection Server-Side Request Forgery (SSRF) and File Disclosure</a>
</h2>
            
<p>
    Server-Side Request Forgery occur when a web server executes a request to a user supplied destination
    parameter that is not validated. Such vulnerabilities could allow an attacker to access internal services
    or to launch attacks from your web server.
</p>
<p>
    URLConnection can be used with file:// protocol or other protocols to access local filesystem and potentially other services.
<p>
    <b>Vulnerable Code:</b>
<pre>
new URL(String url).openConnection()
</pre>

<pre>
new URL(String url).openStream()
</pre>

<pre>
new URL(String url).getContent()
</pre>
</p>
<p>
    <b>Solution/Countermeasures:</b><br/>
    <ul>
        <li>Don't accept URL destinations from users</li>
        <li>Accept a destination key, and use it to look up the target destination associate with the key</li>
        <li>White list URLs (if possible)</li>
        <li>Validate that the beginning of the URL is part of a white list</li>
    </ul>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a><br/>
<a href="https://www.bishopfox.com/blog/2015/04/vulnerable-by-design-understanding-server-side-request-forgery/">Understanding Server-Side Request Forgery</a><br/>
<a href="https://cwe.mitre.org/data/definitions/73.html">CWE-73: External Control of File Name or Path</a><br/>
<a href="https://www.pwntester.com/blog/2013/11/28/abusing-jar-downloads/">Abusing jar:// downloads</a><br />
</p>
            
<h2>
<a name="UNENCRYPTED_SOCKET">UNENCRYPTED_SOCKET: Unencrypted Socket</a>
</h2>
            
<p>
The communication channel used is not encrypted. The traffic could be read by an attacker intercepting the network traffic.
</p>
<p>
<b>Vulnerable Code:</b><br/>
Plain socket (Cleartext communication):
<pre>Socket soc = new Socket("www.google.com",80);</pre>
</p>
<p>
<b>Solution:</b><br/>
SSL Socket (Secure communication):
<pre>Socket soc = SSLSocketFactory.getDefault().createSocket("www.google.com", 443);</pre>
</p>
<p>Beyond using an SSL socket, you need to make sure your use of SSLSocketFactory does all the appropriate certificate validation checks to
make sure you are not subject to man-in-the-middle attacks. Please read the OWASP Transport Layer Protection Cheat Sheet for details on how
to do this correctly.
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://www.owasp.org/index.php/Top_10_2010-A9">OWASP: Top 10 2010-A9-Insufficient Transport Layer Protection</a><br/>
<a href="https://www.owasp.org/index.php/Top_10_2013-A6-Sensitive_Data_Exposure">OWASP: Top 10 2013-A6-Sensitive Data Exposure</a><br/>
<a href="https://www.owasp.org/index.php/Transport_Layer_Protection_Cheat_Sheet">OWASP: Transport Layer Protection Cheat Sheet</a><br/>
<a href="http://projects.webappsec.org/w/page/13246945/Insufficient%20Transport%20Layer%20Protection">WASC-04: Insufficient Transport Layer Protection</a><br/>
<a href="https://cwe.mitre.org/data/definitions/319.html">CWE-319: Cleartext Transmission of Sensitive Information</a>
</p>

        
<h2>
<a name="UNENCRYPTED_SERVER_SOCKET">UNENCRYPTED_SERVER_SOCKET: Unencrypted Server Socket</a>
</h2>
            
<p>
The communication channel used is not encrypted. The traffic could be read by an attacker intercepting the network traffic.
</p>
<p>
<b>Vulnerable Code:</b><br/>
Plain server socket (Cleartext communication):
<pre>ServerSocket soc = new ServerSocket(1234);</pre>
</p>
<p>
<b>Solution:</b><br/>
SSL Server Socket (Secure communication):
<pre>ServerSocket soc = SSLServerSocketFactory.getDefault().createServerSocket(1234);</pre>
</p>
<p>Beyond using an SSL server socket, you need to make sure your use of SSLServerSocketFactory does all the appropriate certificate validation checks to
make sure you are not subject to man-in-the-middle attacks. Please read the OWASP Transport Layer Protection Cheat Sheet for details on how
to do this correctly.
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://www.owasp.org/index.php/Top_10_2010-A9">OWASP: Top 10 2010-A9-Insufficient Transport Layer Protection</a><br/>
<a href="https://www.owasp.org/index.php/Top_10_2013-A6-Sensitive_Data_Exposure">OWASP: Top 10 2013-A6-Sensitive Data Exposure</a><br/>
<a href="https://www.owasp.org/index.php/Transport_Layer_Protection_Cheat_Sheet">OWASP: Transport Layer Protection Cheat Sheet</a><br/>
<a href="http://projects.webappsec.org/w/page/13246945/Insufficient%20Transport%20Layer%20Protection">WASC-04: Insufficient Transport Layer Protection</a><br/>
<a href="https://cwe.mitre.org/data/definitions/319.html">CWE-319: Cleartext Transmission of Sensitive Information</a>
</p>

        
<h2>
<a name="WEAK_HOSTNAME_VERIFIER">WEAK_HOSTNAME_VERIFIER: HostnameVerifier that accept any signed certificates</a>
</h2>
            
<p>A <code>HostnameVerifier</code> that accept any host are often use because of certificate reuse on many hosts.
As a consequence, this is vulnerable to
<a href="https://en.wikipedia.org/wiki/Man-in-the-middle_attack">Man-in-the-middle attacks</a>
since the client will trust any certificate.
</p>
<p>
A TrustManager allowing specific certificates (based on a truststore for example) should be built.
Wildcard certificates should be created for reused on multiples subdomains.
Detailed information for a proper implementation is available at:
<a href="https://stackoverflow.com/a/6378872/89769">[1]</a>
<a href="https://stackoverflow.com/a/5493452/89769">[2]</a>
</p>
<br/>
<p>
    <b>Vulnerable Code:</b><br/>
<pre>public class AllHosts implements HostnameVerifier {
    public boolean verify(final String hostname, final SSLSession session) {
        return true;
    }
}</pre>
</p>
<br/>
<p>
    <b>Solution (TrustMangager based on a keystore):</b><br/>
<pre>KeyStore ks = //Load keystore containing the certificates trusted

SSLContext sc = SSLContext.getInstance("TLS");

TrustManagerFactory tmf = TrustManagerFactory.getInstance("SunX509");
tmf.init(ks);

sc.init(kmf.getKeyManagers(), tmf.getTrustManagers(),null);
</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="http://projects.webappsec.org/w/page/13246945/Insufficient%20Transport%20Layer%20Protection">WASC-04: Insufficient Transport Layer Protection</a><br/>
<a href="https://cwe.mitre.org/data/definitions/295.html">CWE-295: Improper Certificate Validation</a>
</p>

        
<h2>
<a name="WEAK_TRUST_MANAGER">WEAK_TRUST_MANAGER: TrustManager that accept any certificates</a>
</h2>
            
<p>Empty TrustManager implementations are often used to connect easily to a host that is not signed by a root
<a href="https://en.wikipedia.org/wiki/Certificate_authority">certificate authority</a>. As a consequence, this is vulnerable to
<a href="https://en.wikipedia.org/wiki/Man-in-the-middle_attack">Man-in-the-middle attacks</a>
since the client will trust any certificate.
</p>
<p>
A TrustManager allowing specific certificates (based on a TrustStore for example) should be built.
Detailed information for a proper implementation is available at:
<a href="https://stackoverflow.com/a/6378872/89769">[1]</a>
<a href="https://stackoverflow.com/a/5493452/89769">[2]</a>
</p>
<br/>
<p>
    <b>Vulnerable Code:</b><br/>
<pre>class TrustAllManager implements X509TrustManager {

    @Override
    public void checkClientTrusted(X509Certificate[] x509Certificates, String s) throws CertificateException {
        //Trust any client connecting (no certificate validation)
    }

    @Override
    public void checkServerTrusted(X509Certificate[] x509Certificates, String s) throws CertificateException {
        //Trust any remote server (no certificate validation)
    }

    @Override
    public X509Certificate[] getAcceptedIssuers() {
        return null;
    }
}</pre>
</p>
<br/>
<p>
    <b>Solution (TrustMangager based on a keystore):</b><br/>
<pre>KeyStore ks = //Load keystore containing the certificates trusted

SSLContext sc = SSLContext.getInstance("TLS");

TrustManagerFactory tmf = TrustManagerFactory.getInstance("SunX509");
tmf.init(ks);

sc.init(kmf.getKeyManagers(), tmf.getTrustManagers(),null);
</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="http://projects.webappsec.org/w/page/13246945/Insufficient%20Transport%20Layer%20Protection">WASC-04: Insufficient Transport Layer Protection</a><br/>
<a href="https://cwe.mitre.org/data/definitions/295.html">CWE-295: Improper Certificate Validation</a>
</p>

        
<h2>
<a name="XXE_DOCUMENT">XXE_DOCUMENT: XML parsing vulnerable to XXE (DocumentBuilder)</a>
</h2>
            
<!--XXE_GENERIC_START-->
<h3>Attack</h3>
<p>XML External Entity (XXE) attacks can occur when an XML parser supports XML entities while processing XML received
from an untrusted source.</p>
<p><b>Risk 1: Expose local file content (XXE: <u>X</u>ML E<u>x</u>ternal <u>E</u>ntity)</b></p>
<p>
<pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;
&lt;!DOCTYPE foo [
   &lt;!ENTITY xxe SYSTEM &quot;file:///etc/passwd&quot; &gt; ]&gt;
&lt;foo&gt;&amp;xxe;&lt;/foo&gt;</pre>
</p>
<b>Risk 2: Denial of service (XEE: <u>X</u>ML <u>E</u>ntity <u>E</u>xpansion)</b>
<p>
<pre>
&lt;?xml version=&quot;1.0&quot;?&gt;
&lt;!DOCTYPE lolz [
 &lt;!ENTITY lol &quot;lol&quot;&gt;
 &lt;!ELEMENT lolz (#PCDATA)&gt;
 &lt;!ENTITY lol1 &quot;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&quot;&gt;
 &lt;!ENTITY lol2 &quot;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&quot;&gt;
 &lt;!ENTITY lol3 &quot;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&quot;&gt;
[...]
 &lt;!ENTITY lol9 &quot;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&quot;&gt;
]&gt;
&lt;lolz&gt;&amp;lol9;&lt;/lolz&gt;</pre>
</p>

<h3>Solution</h3>
<p>
In order to avoid exposing dangerous feature of the XML parser, you can do the following change to the code.
</p>
<!--XXE_GENERIC_END-->

<p><b>Vulnerable Code:</b></p>
<p>
<pre>
DocumentBuilder db = DocumentBuilderFactory.newInstance().newDocumentBuilder();

Document doc = db.parse(input);</pre>
</p>
<br/>
<p>
The following snippets show two available solutions. You can set one feature or both.
</p>

<p><b>Solution using "Secure processing" mode:</b></p>
<p>
This setting will protect you against Denial of Service attack and remote file access.
<pre>
DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
DocumentBuilder db = dbf.newDocumentBuilder();

Document doc = db.parse(input);</pre>
</p>

<p><b>Solution disabling DTD:</b></p>
<p>
By disabling DTD, almost all XXE attacks will be prevented.
<pre>
DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true);
DocumentBuilder db = dbf.newDocumentBuilder();

Document doc = db.parse(input);</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<!--XXE_GENERIC_START-->
<a href="https://cwe.mitre.org/data/definitions/611.html">CWE-611: Improper Restriction of XML External Entity Reference ('XXE')</a><br/>
<a href="https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=61702260">CERT: IDS10-J. Prevent XML external entity attacks</a><br/>
<a href="https://www.owasp.org/index.php/XML_External_Entity_%28XXE%29_Processing">OWASP.org: XML External Entity (XXE) Processing</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_Entity_Expansion">WS-Attacks.org: XML Entity Expansion</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_External_Entity_DOS">WS-Attacks.org: XML External Entity DOS</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_Entity_Reference_Attack">WS-Attacks.org: XML Entity Reference Attack</a><br/>
<a href="https://blog.h3xstream.com/2014/06/identifx-xml-external-entity.html">Identifx XML External Entity vulnerability (XXE)</a><br/>
<!--XXE_GENERIC_END-->
<a href="http://xerces.apache.org/xerces2-j/features.html">Xerces2 complete features list</a>
</p>

        </body>
</html>
