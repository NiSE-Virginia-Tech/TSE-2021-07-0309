[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 599.3 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 20 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 28
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.04

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 28
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.07

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 34
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.09

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 35
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.11

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 35
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.14

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 37
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.16

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 38
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.18

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 38
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.21

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.23

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.24

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.27

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 43
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.28

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 44
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.3

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 14 of 44
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.32

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 15 of 50
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.3

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 16 of 51
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.31

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 17 of 51
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 18 of 53
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.34

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 19 of 54
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.35

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 20 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.36

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 21 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.38

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 22 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.4

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 23 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.42

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 24 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.44

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 25 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.45

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 26 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.47

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 27 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.49

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 28 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.51

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 29 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.53

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 30 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.55

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 31 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.56

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 32 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.58

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 33 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.6

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 34 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.62

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 35 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.64

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 36 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.65

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 37 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 38 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.69

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 39 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.71

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 40 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.73

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 41 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.75

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 42 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.76

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 43 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.78

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 44 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.8

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 45 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.82

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 46 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.84

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 47 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.85

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 48 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.87

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 49 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.89

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 50 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.91

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 51 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.93

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 52 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.95

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 53 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.96

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 54 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.98

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r1
		Type: byte[]
		Statement: virtualinvoke r14.<java.security.SecureRandom: void nextBytes(byte[])>(r1)
		Method: <org.snmp4j.security.Salt: void <init>()>
		SHA-256: f30872e381e97117fb1d3b1ab05eb192121cafa3d7af15e63a365c452dbeed11
		Secure: true
	Object:
		Variable: r61
		Type: javax.crypto.Cipher
		Statement: r61 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer686)
		Method: <org.snmp4j.security.PrivAES: byte[] encrypt(byte[],int,int,byte[],long,long,org.snmp4j.security.DecryptParams)>
		SHA-256: 2637ee3c7578c5e5a93ed74547d9d8008c572f97dd816abaa00721a8c251dd46
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: i35 = virtualinvoke r39.<javax.crypto.Cipher: int update(byte[],int,int,byte[])>(r1, i0, i1, r38)
		Method: <org.snmp4j.security.Priv3DES: byte[] encrypt(byte[],int,int,byte[],long,long,org.snmp4j.security.DecryptParams)>
		SHA-256: 81143a707e7c525eeafc73a9dc735b679f2eb7d6f8100d6bb263ca9bcef13056
		Secure: false
	Object:
		Variable: $r12
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r37)
		Method: <org.snmp4j.security.Priv3DES: byte[] encrypt(byte[],int,int,byte[],long,long,org.snmp4j.security.DecryptParams)>
		SHA-256: 796e5174d1d25ecdd4130f9da96b4ba7c8ff4b276836c09256761ffc6ddcdebb
		Secure: false
	Object:
		Variable: r38
		Type: byte[]
		Statement: i35 = virtualinvoke r39.<javax.crypto.Cipher: int update(byte[],int,int,byte[])>(r1, i0, i1, r38)
		Method: <org.snmp4j.security.PrivDES: byte[] encrypt(byte[],int,int,byte[],long,long,org.snmp4j.security.DecryptParams)>
		SHA-256: 5fb956c9159f346a564d7443455dc28350e108365fa678a8a13fc06b33ea614b
		Secure: false
	Object:
		Variable: $r11
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>(r2, varReplacer689, $i7, varReplacer690)
		Method: <org.snmp4j.security.PrivAES: byte[] encrypt(byte[],int,int,byte[],long,long,org.snmp4j.security.DecryptParams)>
		SHA-256: fc0b8819f6ab1b9c5eb46a9075d9fa0212bd5759ccf678c1cdd5188b23b313ea
		Secure: false
	Object:
		Variable: r34
		Type: javax.crypto.Cipher
		Statement: r34 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer741)
		Method: <org.snmp4j.security.PrivDES: byte[] decrypt(byte[],int,int,byte[],long,long,org.snmp4j.security.DecryptParams)>
		SHA-256: 28c94a3b4d9b199f444cd0b57818ac059347b1cccf4eab60931c5bb85b13cc26
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.snmp4j.security.AuthGeneric: byte[] hash(byte[])>
		SHA-256: 6d76a4f73e6e43694a7ac95c0da89770627d420c41429c9c7b065ddb163f484e
		Secure: true
	Object:
		Variable: r1
		Type: byte[]
		Statement: r57 = virtualinvoke r58.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>(r1, i0, i1)
		Method: <org.snmp4j.security.PrivAES: byte[] decrypt(byte[],int,int,byte[],long,long,org.snmp4j.security.DecryptParams)>
		SHA-256: 5761ce7d96d967770cfd249bbdba7988df503824ebed72b694f5278f298e25dc
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.snmp4j.security.AuthGeneric: byte[] hash(byte[],int,int)>
		SHA-256: 6d76a4f73e6e43694a7ac95c0da89770627d420c41429c9c7b065ddb163f484e
		Secure: true
	Object:
		Variable: r1
		Type: byte[]
		Statement: r33 = virtualinvoke r34.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>(r1, i0, i1)
		Method: <org.snmp4j.security.PrivDES: byte[] decrypt(byte[],int,int,byte[],long,long,org.snmp4j.security.DecryptParams)>
		SHA-256: 7dabb8914defe959215ca59e82baa8c2e5640c5b9f8a7166829bbae5a736ca35
		Secure: false
	Object:
		Variable: r38
		Type: byte[]
		Statement: r38 = virtualinvoke r39.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>(r1, i0, i1)
		Method: <org.snmp4j.security.Priv3DES: byte[] encrypt(byte[],int,int,byte[],long,long,org.snmp4j.security.DecryptParams)>
		SHA-256: 96ad719508a20cfa231d640f333343b07ae650589a040b5c44f7db3e9dbcb86d
		Secure: false
	Object:
		Variable: r39
		Type: javax.crypto.Cipher
		Statement: r39 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer717)
		Method: <org.snmp4j.security.PrivDES: byte[] encrypt(byte[],int,int,byte[],long,long,org.snmp4j.security.DecryptParams)>
		SHA-256: e20af5d4d4bd189a3224f69a44188a04bb4e6af806ebaa7f59500c403e3b8b4c
		Secure: false
	Object:
		Variable: $r11
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>(r2, varReplacer651, varReplacer652, varReplacer653)
		Method: <org.snmp4j.security.Priv3DES: byte[] encrypt(byte[],int,int,byte[],long,long,org.snmp4j.security.DecryptParams)>
		SHA-256: 68c35084c8cba9fcf1eff6b70951d62fc1813b5405bd98ce741a558355ff324
		Secure: false
	Object:
		Variable: varReplacer653
		Type: java.lang.String
		Statement: specialinvoke $r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>(r2, varReplacer651, varReplacer652, varReplacer653)
		Method: <org.snmp4j.security.Priv3DES: byte[] encrypt(byte[],int,int,byte[],long,long,org.snmp4j.security.DecryptParams)>
		SHA-256: e6cdd823377cb051e64b457fac21f1521193812f5830839f62161bdd64283f88
		Secure: false
	Object:
		Variable: r35
		Type: javax.crypto.Cipher
		Statement: r35 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer657)
		Method: <org.snmp4j.security.Priv3DES: byte[] decrypt(byte[],int,int,byte[],long,long,org.snmp4j.security.DecryptParams)>
		SHA-256: 64784cb782745c786342241e5424c3b4ad379d95d2036c2026f989b560861ad4
		Secure: false
	Object:
		Variable: r60
		Type: byte[]
		Statement: r60 = virtualinvoke r61.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>(r1, i0, i1)
		Method: <org.snmp4j.security.PrivAES: byte[] encrypt(byte[],int,int,byte[],long,long,org.snmp4j.security.DecryptParams)>
		SHA-256: 90f4db8e18d0d066018a7d10a646c9c3fe3798a6a26e467e979dcad4538f3ba8
		Secure: false
	Object:
		Variable: r33
		Type: byte[]
		Statement: r33 = virtualinvoke r34.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>(r1, i0, i1)
		Method: <org.snmp4j.security.PrivDES: byte[] decrypt(byte[],int,int,byte[],long,long,org.snmp4j.security.DecryptParams)>
		SHA-256: dfb6e6c3ca30e9d9b040563b4f62fcaf791072e944dd253ea512f9bcc5c6aa35
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>(r2, varReplacer735, varReplacer736, varReplacer737)
		Method: <org.snmp4j.security.PrivDES: byte[] decrypt(byte[],int,int,byte[],long,long,org.snmp4j.security.DecryptParams)>
		SHA-256: 7c0efc8d0e9f7b466f619f7f077d51da1d9b861e33f92e213042a6258d4e66b5
		Secure: false
	Object:
		Variable: r8
		Type: byte[]
		Statement: r8 = virtualinvoke r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.snmp4j.security.AuthGeneric: boolean authenticate(byte[],byte[],int,int,org.snmp4j.security.ByteArrayWindow)>
		SHA-256: 1ecf1226c9ba1f5833d8b7c4f0582bf3162782b297f38cb8bb493dd192b00169
		Secure: true
	Object:
		Variable: r1
		Type: byte[]
		Statement: r38 = virtualinvoke r39.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>(r1, i0, i1)
		Method: <org.snmp4j.security.PrivDES: byte[] encrypt(byte[],int,int,byte[],long,long,org.snmp4j.security.DecryptParams)>
		SHA-256: d2b758f946428cba0b8e9d0068b34176b2f2ba0c13940a9ce160783767cc66b5
		Secure: false
	Object:
		Variable: varReplacer720
		Type: java.lang.String
		Statement: specialinvoke $r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>(r2, varReplacer718, varReplacer719, varReplacer720)
		Method: <org.snmp4j.security.PrivDES: byte[] encrypt(byte[],int,int,byte[],long,long,org.snmp4j.security.DecryptParams)>
		SHA-256: ee53f6eb17858efd5141a0440cf446258f9cd7f4b82c9275792ceeb53ade72ca
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: i35 = virtualinvoke r39.<javax.crypto.Cipher: int update(byte[],int,int,byte[])>(r1, i0, i1, r38)
		Method: <org.snmp4j.security.PrivDES: byte[] encrypt(byte[],int,int,byte[],long,long,org.snmp4j.security.DecryptParams)>
		SHA-256: b4ee2cd8b81aea1e271e0cdf9b8c73d2b160b56e8b445dad85602cbdd7f0df14
		Secure: false
	Object:
		Variable: $r12
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r37)
		Method: <org.snmp4j.security.PrivDES: byte[] encrypt(byte[],int,int,byte[],long,long,org.snmp4j.security.DecryptParams)>
		SHA-256: 20a9ec1720304b7aa3edfa08b6bb4f38eb8f7c9ddb7b10e6a2d887afd1f4abae
		Secure: false
	Object:
		Variable: $r25
		Type: byte[]
		Statement: $r25 = virtualinvoke r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.snmp4j.security.AuthGeneric: byte[] changeDelta(byte[],byte[],byte[])>
		SHA-256: 7a2d20d6fe9862489f4be10cffa376fbe0d01503e6dcbeeb115eb60cad48f078
		Secure: true
	Object:
		Variable: r7
		Type: byte[]
		Statement: r7 = virtualinvoke r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.snmp4j.security.AuthGeneric: boolean authenticate(byte[],byte[],int,int,org.snmp4j.security.ByteArrayWindow)>
		SHA-256: f64050347f0dd7849a15e88d94429326be5635611cab47e0f53823dbff999270
		Secure: true
	Object:
		Variable: varReplacer690
		Type: java.lang.String
		Statement: specialinvoke $r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>(r2, varReplacer689, $i7, varReplacer690)
		Method: <org.snmp4j.security.PrivAES: byte[] encrypt(byte[],int,int,byte[],long,long,org.snmp4j.security.DecryptParams)>
		SHA-256: 999ba8f7ed302daf06f45a7829288426d535802e6d332d70aedcd37575abe280
		Secure: false
	Object:
		Variable: r34
		Type: byte[]
		Statement: r34 = virtualinvoke r35.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>(r1, i0, i1)
		Method: <org.snmp4j.security.Priv3DES: byte[] decrypt(byte[],int,int,byte[],long,long,org.snmp4j.security.DecryptParams)>
		SHA-256: 22612ed69f1e25fa1d55449f0117a549bdb44b75022b8f133a8e583e8392ce2c
		Secure: false
	Object:
		Variable: r26
		Type: byte[]
		Statement: r26 = virtualinvoke r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.snmp4j.security.AuthGeneric: byte[] passwordToKey(org.snmp4j.smi.OctetString,byte[])>
		SHA-256: 61a8059cdc38fd3bbbfb565b622d3f07bf5bbdbaae935e4a5f960cdf9d78b5ff
		Secure: true
	Object:
		Variable: r1
		Type: byte[]
		Statement: r34 = virtualinvoke r35.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>(r1, i0, i1)
		Method: <org.snmp4j.security.Priv3DES: byte[] decrypt(byte[],int,int,byte[],long,long,org.snmp4j.security.DecryptParams)>
		SHA-256: 1f3850f5a757ae246d486cffc3e002998da5f9636acf5dcc1ed81c19e2c381c2
		Secure: false
	Object:
		Variable: $r11
		Type: byte[]
		Statement: $r11 = virtualinvoke r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.snmp4j.security.AuthGeneric: byte[] changeDelta(byte[],byte[],byte[])>
		SHA-256: ed294b578ec20ca7d479386deab24635db5dc24f4b3da4819860b51825110bba
		Secure: true
	Object:
		Variable: varReplacer660
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>(r2, varReplacer658, varReplacer659, varReplacer660)
		Method: <org.snmp4j.security.Priv3DES: byte[] decrypt(byte[],int,int,byte[],long,long,org.snmp4j.security.DecryptParams)>
		SHA-256: d8191fbf2772c41d55029b2b431655fa0bb1ef215843664d0b76cfc49155a3c0
		Secure: false
	Object:
		Variable: $r11
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>(r2, varReplacer718, varReplacer719, varReplacer720)
		Method: <org.snmp4j.security.PrivDES: byte[] encrypt(byte[],int,int,byte[],long,long,org.snmp4j.security.DecryptParams)>
		SHA-256: 33a02f99308e4effa0574378b131d74b1f2c8d4b9c02bf0dd37a7436ecc2b7da
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r4)
		Method: <org.snmp4j.security.PrivDES: byte[] decrypt(byte[],int,int,byte[],long,long,org.snmp4j.security.DecryptParams)>
		SHA-256: d4cfcb0abbe93733e98e9b4dcdf4961a1b4c0431ff0ef408f046843724ae3db0
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r4)
		Method: <org.snmp4j.security.Priv3DES: byte[] decrypt(byte[],int,int,byte[],long,long,org.snmp4j.security.DecryptParams)>
		SHA-256: c46408fe54619d0467a257ede2ffff66eba2365af4c5651ac862c87c7485c64e
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: r60 = virtualinvoke r61.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>(r1, i0, i1)
		Method: <org.snmp4j.security.PrivAES: byte[] encrypt(byte[],int,int,byte[],long,long,org.snmp4j.security.DecryptParams)>
		SHA-256: 593437ba5028050afa2a8f14d1c56078d63fd0b8a59ebc59c9f183669c4fca88
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>(r2, varReplacer658, varReplacer659, varReplacer660)
		Method: <org.snmp4j.security.Priv3DES: byte[] decrypt(byte[],int,int,byte[],long,long,org.snmp4j.security.DecryptParams)>
		SHA-256: a617add90af78f693e7c111ae17796cca2718a3062f62011f81aeecbe879fee5
		Secure: false
	Object:
		Variable: r1
		Type: java.security.MessageDigest
		Statement: r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)
		Method: <org.snmp4j.security.AuthGeneric: java.security.MessageDigest getDigestObject()>
		SHA-256: 24a8997783c830625eb1de7ec5aa7736d67cc4fe2089577a85489d9524017319
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r4)
		Method: <org.snmp4j.security.PrivAES: byte[] decrypt(byte[],int,int,byte[],long,long,org.snmp4j.security.DecryptParams)>
		SHA-256: 3f756f06102a653ab9979a1da32ec7023dfe8b48ee616e98deaea317fd93b18f
		Secure: false
	Object:
		Variable: r6
		Type: byte[]
		Statement: $i13 = virtualinvoke r39.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>(r6, varReplacer640, $i12, r38, i35)
		Method: <org.snmp4j.security.Priv3DES: byte[] encrypt(byte[],int,int,byte[],long,long,org.snmp4j.security.DecryptParams)>
		SHA-256: 8509cfe16254e9cbbe83cc678588783722984217ee53f0ae12e28c492608384f
		Secure: false
	Object:
		Variable: varReplacer694
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>(r2, varReplacer693, $i36, varReplacer694)
		Method: <org.snmp4j.security.PrivAES: byte[] decrypt(byte[],int,int,byte[],long,long,org.snmp4j.security.DecryptParams)>
		SHA-256: 929ac3cdbe631e7b01225cd11366c594a4e56ef4da689da494d93b69d631021e
		Secure: false
	Object:
		Variable: r38
		Type: byte[]
		Statement: $i13 = virtualinvoke r39.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>(r6, varReplacer640, $i12, r38, i35)
		Method: <org.snmp4j.security.Priv3DES: byte[] encrypt(byte[],int,int,byte[],long,long,org.snmp4j.security.DecryptParams)>
		SHA-256: c17684d943bea4b5fff94824fc5faa8f7638d5d1255ea67500849d7fc605e063
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>(r2, varReplacer693, $i36, varReplacer694)
		Method: <org.snmp4j.security.PrivAES: byte[] decrypt(byte[],int,int,byte[],long,long,org.snmp4j.security.DecryptParams)>
		SHA-256: cce2ce8d2521c889ff764b5717ba0e3e43efdebe97e697921b8fbbcd766fd34d
		Secure: false
	Object:
		Variable: r39
		Type: javax.crypto.Cipher
		Statement: r39 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer644)
		Method: <org.snmp4j.security.Priv3DES: byte[] encrypt(byte[],int,int,byte[],long,long,org.snmp4j.security.DecryptParams)>
		SHA-256: 79b5ca5d6153aeb48e0fc0771642904a61d30dabf84dbecd404fa19343e88e4
		Secure: false
	Object:
		Variable: r58
		Type: javax.crypto.Cipher
		Statement: r58 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer704)
		Method: <org.snmp4j.security.PrivAES: byte[] decrypt(byte[],int,int,byte[],long,long,org.snmp4j.security.DecryptParams)>
		SHA-256: 735a7a34f0f8f0059e242b5bcc7b10c18d57fefe3903577dfe5b65e41a2e7844
		Secure: false
	Object:
		Variable: r6
		Type: byte[]
		Statement: $i13 = virtualinvoke r39.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>(r6, varReplacer723, $i12, r38, i35)
		Method: <org.snmp4j.security.PrivDES: byte[] encrypt(byte[],int,int,byte[],long,long,org.snmp4j.security.DecryptParams)>
		SHA-256: e1c7f5625cd9da8ff91042f8b00bab05f7b428c98c5fcfa48aafd30fa22b0932
		Secure: false
	Object:
		Variable: varReplacer737
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>(r2, varReplacer735, varReplacer736, varReplacer737)
		Method: <org.snmp4j.security.PrivDES: byte[] decrypt(byte[],int,int,byte[],long,long,org.snmp4j.security.DecryptParams)>
		SHA-256: 7c829a303b93a7cf9d1fb05dfd0550c47379788887f37eae8e7dfd1400201ad6
		Secure: false
	Object:
		Variable: r27
		Type: byte[]
		Statement: r27 = virtualinvoke r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.snmp4j.security.AuthGeneric: byte[] passwordToKey(org.snmp4j.smi.OctetString,byte[])>
		SHA-256: 29c9b8649c6b75c07e7ae810c5ea8b73248e03ffa65bbc60ca5f8b4f7c61b853
		Secure: true
	Object:
		Variable: r38
		Type: byte[]
		Statement: $i13 = virtualinvoke r39.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>(r6, varReplacer723, $i12, r38, i35)
		Method: <org.snmp4j.security.PrivDES: byte[] encrypt(byte[],int,int,byte[],long,long,org.snmp4j.security.DecryptParams)>
		SHA-256: c2deb7b5a5399484f3b8e8a8591276f2086f008bc3b3d067aafaff2062e7c502
		Secure: false
	Object:
		Variable: r38
		Type: byte[]
		Statement: r38 = virtualinvoke r39.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>(r1, i0, i1)
		Method: <org.snmp4j.security.PrivDES: byte[] encrypt(byte[],int,int,byte[],long,long,org.snmp4j.security.DecryptParams)>
		SHA-256: fd9f7912323cdff046d7404d0a24bb35c2c55ef37602252327f6e7eda33d0a9e
		Secure: false
	Object:
		Variable: r38
		Type: byte[]
		Statement: i35 = virtualinvoke r39.<javax.crypto.Cipher: int update(byte[],int,int,byte[])>(r1, i0, i1, r38)
		Method: <org.snmp4j.security.Priv3DES: byte[] encrypt(byte[],int,int,byte[],long,long,org.snmp4j.security.DecryptParams)>
		SHA-256: 46f6e5686f728bdcf47e2436cb25ce9d86af827becaab8f135ac3754805c26a6
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: r38 = virtualinvoke r39.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>(r1, i0, i1)
		Method: <org.snmp4j.security.Priv3DES: byte[] encrypt(byte[],int,int,byte[],long,long,org.snmp4j.security.DecryptParams)>
		SHA-256: 3c396045d334c2e47f4066df3cc4d9973e4344a9a228b0fc69db849153b008a1
		Secure: false
	Object:
		Variable: r57
		Type: byte[]
		Statement: r57 = virtualinvoke r58.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>(r1, i0, i1)
		Method: <org.snmp4j.security.PrivAES: byte[] decrypt(byte[],int,int,byte[],long,long,org.snmp4j.security.DecryptParams)>
		SHA-256: efc28d0d5ee782443cfb4cebab617dc4e726d79465af1fee102f8101168cb378
		Secure: false
	Object:
		Variable: $r12
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r4)
		Method: <org.snmp4j.security.PrivAES: byte[] encrypt(byte[],int,int,byte[],long,long,org.snmp4j.security.DecryptParams)>
		SHA-256: 57bde0c234ed1a7bb62aae1d01b610c2db9e71f8628029eaaf278b52ab0dd586
		Secure: false
	Object:
		Variable: r14
		Type: java.security.SecureRandom
		Statement: r14 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer750)
		Method: <org.snmp4j.security.Salt: void <init>()>
		SHA-256: aa5f9a8c4c60103072c4592c82a7a7cd1a54288cc4ea23725eb6a3aff73d7bee
		Secure: true

Findings in Java Class: org.snmp4j.security.AuthGeneric

	 in Method: byte[] passwordToKey(org.snmp4j.smi.OctetString,byte[])
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #24a8997783c830625eb1de7ec5aa7736d67cc4fe2089577a85489d9524017319)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: r26 = virtualinvoke r3.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: org.snmp4j.security.Priv3DES

	 in Method: byte[] encrypt(byte[],int,int,byte[],long,long,org.snmp4j.security.DecryptParams)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r37)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r39.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer642, r4, r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke r39.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer642, r4, r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>(r2, varReplacer651, varReplacer652, varReplacer653)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #79b5ca5d6153aeb48e0fc0771642904a61d30dabf84dbecd404fa19343e88e4)
			First parameter (with value "DESede/CBC/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r39 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer644)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #68c35084c8cba9fcf1eff6b70951d62fc1813b5405bd98ce741a558355ff324)
			Fourth parameter (with value "DESede") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>(r2, varReplacer651, varReplacer652, varReplacer653)


	 in Method: byte[] decrypt(byte[],int,int,byte[],long,long,org.snmp4j.security.DecryptParams)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #64784cb782745c786342241e5424c3b4ad379d95d2036c2026f989b560861ad4)
			First parameter (with value "DESede/CBC/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r35 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer657)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r4)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #a617add90af78f693e7c111ae17796cca2718a3062f62011f81aeecbe879fee5)
			Fourth parameter (with value "DESede") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>(r2, varReplacer658, varReplacer659, varReplacer660)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r35.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer663, r5, r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>(r2, varReplacer658, varReplacer659, varReplacer660)


Findings in Java Class: org.snmp4j.security.PrivDES

	 in Method: byte[] encrypt(byte[],int,int,byte[],long,long,org.snmp4j.security.DecryptParams)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #e20af5d4d4bd189a3224f69a44188a04bb4e6af806ebaa7f59500c403e3b8b4c)
			First parameter (with value "DES/CBC/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r39 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer717)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>(r2, varReplacer718, varReplacer719, varReplacer720)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r39.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer722, r4, r5)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #33a02f99308e4effa0574378b131d74b1f2c8d4b9c02bf0dd37a7436ecc2b7da)
			Fourth parameter (with value "DES") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>(r2, varReplacer718, varReplacer719, varReplacer720)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke r39.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer722, r4, r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r37)


	 in Method: byte[] decrypt(byte[],int,int,byte[],long,long,org.snmp4j.security.DecryptParams)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r4)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #28c94a3b4d9b199f444cd0b57818ac059347b1cccf4eab60931c5bb85b13cc26)
			First parameter (with value "DES/CBC/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r34 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer741)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #7c0efc8d0e9f7b466f619f7f077d51da1d9b861e33f92e213042a6258d4e66b5)
			Fourth parameter (with value "DES") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>(r2, varReplacer735, varReplacer736, varReplacer737)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>(r2, varReplacer735, varReplacer736, varReplacer737)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r34.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer742, r5, r6)


Findings in Java Class: org.snmp4j.security.PrivAES

	 in Method: byte[] encrypt(byte[],int,int,byte[],long,long,org.snmp4j.security.DecryptParams)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke r61.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer687, r5, r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r61.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer687, r5, r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>(r2, varReplacer689, $i7, varReplacer690)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r4)


	 in Method: byte[] decrypt(byte[],int,int,byte[],long,long,org.snmp4j.security.DecryptParams)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>(r2, varReplacer693, $i36, varReplacer694)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r58.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer701, r5, r6)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 55

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 21
	TypestateError: 1
	ConstraintError: 8
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 3 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 6.102 s

