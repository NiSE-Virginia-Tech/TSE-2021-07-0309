[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 1.555 s 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 14 analysis seeds within 4 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 15
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.07

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 16
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.13

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 20
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.15

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 20
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.2

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 20
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.25

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 21
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.29

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.3

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 24
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 26
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.35

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 26
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.38

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 28
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.39

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.4

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 31
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.42

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 14 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.42

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 15 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.45

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 16 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.48

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 17 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.52

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 18 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.55

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 19 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.58

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 20 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.61

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 21 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.64

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 22 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 23 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.7

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 24 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.73

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 25 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.76

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 26 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.79

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 27 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.82

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 28 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.85

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 29 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.88

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 30 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.91

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 31 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.94

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 32 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.97

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r6
		Type: java.security.MessageDigest
		Statement: r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer24316)
		Method: <org.apache.solr.util.CryptoKeys: java.lang.String decodeAES(java.lang.String,java.lang.String,int)>
		SHA-256: ffdc610552cb94aa532cace7820899f1a8bd6fd6e50c90862277b4aa5e41b504
		Secure: false
	Object:
		Variable: r13
		Type: java.security.KeyPairGenerator
		Statement: r13 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer24294)
		Method: <org.apache.solr.util.CryptoKeys$RSAKeyPair: void <init>()>
		SHA-256: a3fb2d8f9a919048d567a81fe21c86f6bc4f2962a3ab4119add04d9984044701
		Secure: false
	Object:
		Variable: r15
		Type: java.security.KeyPair
		Statement: r15 = virtualinvoke r13.<java.security.KeyPairGenerator: java.security.KeyPair genKeyPair()>()
		Method: <org.apache.solr.util.CryptoKeys$RSAKeyPair: void <init>()>
		SHA-256: e49e024f98d913f33d4abd800627f2860850f639de6de5017bdfc4c639862569
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke r8.<java.security.Signature: byte[] sign()>()
		Method: <org.apache.solr.util.CryptoKeys$RSAKeyPair: byte[] signSha256(byte[])>
		SHA-256: 7da46abb46941dc43991a620cc856b919ff9bb5573a5e6eea86781cd6920153b
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: z1 = virtualinvoke r6.<java.security.Signature: boolean verify(byte[])>(r1)
		Method: <org.apache.solr.util.CryptoKeys: boolean verify(java.security.PublicKey,byte[],java.nio.ByteBuffer)>
		SHA-256: 40f3e3c460dc32711a9b818f4054b3271c4a8b9a482b657fd4f833aa3b0b5b6f
		Secure: false
	Object:
		Variable: r2
		Type: java.security.MessageDigest
		Statement: r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer20697)
		Method: <org.apache.solr.security.Sha256AuthenticationProvider: java.lang.String sha256(java.lang.String,java.lang.String)>
		SHA-256: cd0b6a934e1e8bb34255848cceba962958ae3efe24630bea4be95d5a1b5f0d33
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r4 = virtualinvoke r8.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r3, $i0, $i1)
		Method: <org.apache.solr.util.CryptoKeys$RSAKeyPair: byte[] encrypt(java.nio.ByteBuffer)>
		SHA-256: 7c32bc8eb6305a3438bd41d521704adf59acbf5d1b8f0de2f0d2d27b8f04f63f
		Secure: false
	Object:
		Variable: r6
		Type: byte[]
		Statement: r6 = virtualinvoke r0.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.solr.util.CryptoKeys: byte[][] evpBytesTokey(int,int,java.security.MessageDigest,byte[],byte[],int)>
		SHA-256: 5d4bf1d0b4e94d4f90fd7d2a093f5c7b2e4df5dab96c149ed1c3cdbf3ac52fa4
		Secure: false
	Object:
		Variable: r12
		Type: byte[]
		Statement: r12 = virtualinvoke r2.<java.security.MessageDigest: byte[] digest(byte[])>(r11)
		Method: <org.apache.solr.security.Sha256AuthenticationProvider: java.lang.String sha256(java.lang.String,java.lang.String)>
		SHA-256: 5d27ca5b599c0eca26f9e9d6c66503670bf951e6e57e1f65a511e16aac68dfd1
		Secure: true
	Object:
		Variable: r6
		Type: java.security.Signature
		Statement: r6 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer24304)
		Method: <org.apache.solr.util.CryptoKeys: boolean verify(java.security.PublicKey,byte[],java.nio.ByteBuffer)>
		SHA-256: 3a7699c924f2a522e1b08e35c7ffe271d4dec11acfab628d173b7d5b89d98696
		Secure: false
	Object:
		Variable: $r14
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r14.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r15)
		Method: <org.apache.solr.util.CryptoKeys: java.lang.String decodeAES(java.lang.String,java.lang.String,int)>
		SHA-256: f87a04c04cefcb6820d4b3f4bbba7d1271a145b33f48beb5b53fe875f25b5300
		Secure: false
	Object:
		Variable: z1
		Type: boolean
		Statement: z1 = virtualinvoke r6.<java.security.Signature: boolean verify(byte[])>(r1)
		Method: <org.apache.solr.util.CryptoKeys: boolean verify(java.security.PublicKey,byte[],java.nio.ByteBuffer)>
		SHA-256: 982f5e101a03e364dcd1f31720d78ba347c153fc4f45c197bdd4f71fe730498a
		Secure: false
	Object:
		Variable: r11
		Type: byte[]
		Statement: r12 = virtualinvoke r2.<java.security.MessageDigest: byte[] digest(byte[])>(r11)
		Method: <org.apache.solr.security.Sha256AuthenticationProvider: java.lang.String sha256(java.lang.String,java.lang.String)>
		SHA-256: cfaeeccdf1200e9d563a530b2b4e21872a5c2ef50a1f14af6f278f84e191e370
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: r11 = virtualinvoke r2.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <org.apache.solr.security.Sha256AuthenticationProvider: java.lang.String sha256(java.lang.String,java.lang.String)>
		SHA-256: 3badc0374f214b3861f3ad1cec03a726bf41a5c6444a8866756d561ace0abe12
		Secure: true
	Object:
		Variable: r8
		Type: java.security.Signature
		Statement: r8 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer24297)
		Method: <org.apache.solr.util.CryptoKeys$RSAKeyPair: byte[] signSha256(byte[])>
		SHA-256: e16aadc1422c052a070df538d9da5d584641b23e1508f55cbba409bec97eeba1
		Secure: false
	Object:
		Variable: r16
		Type: java.security.SecureRandom
		Statement: specialinvoke r16.<java.security.SecureRandom: void <init>()>()
		Method: <org.apache.solr.util.CryptoKeys$RSAKeyPair: void <init>()>
		SHA-256: e0b818de216692f657033f439ca27ef2b8acc484ba6110d6f471c6ffeb699f24
		Secure: true
	Object:
		Variable: r10
		Type: byte[]
		Statement: r10 = virtualinvoke r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r4)
		Method: <org.apache.solr.util.CryptoKeys: java.lang.String decodeAES(java.lang.String,java.lang.String,int)>
		SHA-256: f84b033b5bc30a36a6798ca09464c768476e977a78b7ae77e52a6f375d4b6dee
		Secure: false
	Object:
		Variable: r6
		Type: byte[]
		Statement: r6 = virtualinvoke r0.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.solr.util.CryptoKeys: byte[][] evpBytesTokey(int,int,java.security.MessageDigest,byte[],byte[],int)>
		SHA-256: 5d4bf1d0b4e94d4f90fd7d2a093f5c7b2e4df5dab96c149ed1c3cdbf3ac52fa4
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>(r0, varReplacer24322, $i0)
		Method: <org.apache.solr.util.CryptoKeys: byte[] decryptRSA(byte[],java.security.PublicKey)>
		SHA-256: e3ea0eeccb77c1b2b6167ffdec71955d689cf6ee896e0bc464e7f548e357382
		Secure: false
	Object:
		Variable: r8
		Type: javax.crypto.Cipher
		Statement: r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer24296)
		Method: <org.apache.solr.util.CryptoKeys$RSAKeyPair: byte[] encrypt(java.nio.ByteBuffer)>
		SHA-256: f9ad909553244d45bfb01b94fb553a5cf0c9c8f6667274b70ec1b0959b49f9de
		Secure: false
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r3 = virtualinvoke r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>(r0, varReplacer24322, $i0)
		Method: <org.apache.solr.util.CryptoKeys: byte[] decryptRSA(byte[],java.security.PublicKey)>
		SHA-256: ba9c2f7f6d650dcbc588615e0cbea4a63195432cc90cf58e8925347c9f9e4bb0
		Secure: false
	Object:
		Variable: r2
		Type: byte[]
		Statement: virtualinvoke r1.<java.util.Random: void nextBytes(byte[])>(r2)
		Method: <org.apache.solr.security.Sha256AuthenticationProvider: java.lang.String getSaltedHashedValue(java.lang.String)>
		SHA-256: 910b63036dd0b6ee257bf70b9f8f3c8d97cdad26903bd08e97a7388d81090034
		Secure: true
	Object:
		Variable: r11
		Type: byte[]
		Statement: r11 = virtualinvoke r2.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <org.apache.solr.security.Sha256AuthenticationProvider: java.lang.String sha256(java.lang.String,java.lang.String)>
		SHA-256: f65e1ed324c263a55cc6567063de6e91bdc6b1ce4a513858ec71d9591066471e
		Secure: true
	Object:
		Variable: r6
		Type: java.security.MessageDigest
		Statement: r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5803)
		Method: <org.apache.solr.handler.BlobHandler: void handleRequestBody(org.apache.solr.request.SolrQueryRequest,org.apache.solr.response.SolrQueryResponse)>
		SHA-256: 8ed5a14543ef80f5a13432ea67b44dec886287bac9952548ea462ade42b99072
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke r8.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r3, $i0, $i1)
		Method: <org.apache.solr.util.CryptoKeys$RSAKeyPair: byte[] encrypt(java.nio.ByteBuffer)>
		SHA-256: 9d02d868fa5c729d900ecd0e8f24ab51f351e720c51fbc5134f5847b404693a6
		Secure: false
	Object:
		Variable: varReplacer24315
		Type: java.lang.String
		Statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r13, varReplacer24315)
		Method: <org.apache.solr.util.CryptoKeys: java.lang.String decodeAES(java.lang.String,java.lang.String,int)>
		SHA-256: 1300d8af106e1454e247f853d3e94d9ee5c6ac56090ab1a9ced70f2fc511ce49
		Secure: false
	Object:
		Variable: $r12
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r13, varReplacer24315)
		Method: <org.apache.solr.util.CryptoKeys: java.lang.String decodeAES(java.lang.String,java.lang.String,int)>
		SHA-256: c5451a9e1b3c5b6cc264cfb464b0a801f3a2117b3544dbb3911fc8c867fd4b18
		Secure: false
	Object:
		Variable: $r40
		Type: byte[]
		Statement: $r40 = virtualinvoke r6.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.solr.handler.BlobHandler: void handleRequestBody(org.apache.solr.request.SolrQueryRequest,org.apache.solr.response.SolrQueryResponse)>
		SHA-256: 37a6052a801fe627e835c817cfed4127a59055c564834f54214d1dc29a619a3d
		Secure: false
	Object:
		Variable: r4
		Type: byte[]
		Statement: r10 = virtualinvoke r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r4)
		Method: <org.apache.solr.util.CryptoKeys: java.lang.String decodeAES(java.lang.String,java.lang.String,int)>
		SHA-256: 2986eda7549f6c6204b71768b5de370b9d4ffdf34b5a0dc239b69eae93c34ac9
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: specialinvoke $r5.<java.security.SecureRandom: void <init>()>()
		Method: <org.apache.solr.security.Sha256AuthenticationProvider: java.lang.String getSaltedHashedValue(java.lang.String)>
		SHA-256: 6368930287c1211d09eeefe333d01e124324782f434d6f917f35a92458034827
		Secure: true
	Object:
		Variable: r7
		Type: javax.crypto.Cipher
		Statement: r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer24321)
		Method: <org.apache.solr.util.CryptoKeys: byte[] decryptRSA(byte[],java.security.PublicKey)>
		SHA-256: a4b98e82625591a2a5c7c4df796a84de6f7e87351e984c957fadc7d968fcdb02
		Secure: false
	Object:
		Variable: r5
		Type: javax.crypto.Cipher
		Statement: r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer24311)
		Method: <org.apache.solr.util.CryptoKeys: java.lang.String decodeAES(java.lang.String,java.lang.String,int)>
		SHA-256: 55956cb5f5fb7056dcf0d6e3b98b0f06e156cfe022e8f1237a1fa14b1e3ceaa3
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer23895)
		Method: <org.apache.solr.update.processor.MD5Signature$1: java.security.MessageDigest initialValue()>
		SHA-256: a683714395d96c846af949b6f09356585f2072e17e4170ff12a01a15d9cb23e1
		Secure: false

Findings in Java Class: org.apache.solr.handler.BlobHandler

	 in Method: void handleRequestBody(org.apache.solr.request.SolrQueryRequest,org.apache.solr.response.SolrQueryResponse)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #8ed5a14543ef80f5a13432ea67b44dec886287bac9952548ea462ade42b99072)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5803)


Findings in Java Class: org.apache.solr.update.processor.MD5Signature$1

	 in Method: java.security.MessageDigest initialValue()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #a683714395d96c846af949b6f09356585f2072e17e4170ff12a01a15d9cb23e1)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer23895)


	 in Method: java.lang.Object initialValue()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #a683714395d96c846af949b6f09356585f2072e17e4170ff12a01a15d9cb23e1)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: return $r1


Findings in Java Class: org.apache.solr.util.CryptoKeys$RSAKeyPair

	 in Method: void <init>()
		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #a3fb2d8f9a919048d567a81fe21c86f6bc4f2962a3ab4119add04d9984044701)
			First parameter (with value 1024) should be any of {4096, 3072, 2048}
			at statement: virtualinvoke r13.<java.security.KeyPairGenerator: void initialize(int)>(varReplacer24293)


	 in Method: byte[] encrypt(java.nio.ByteBuffer)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #f9ad909553244d45bfb01b94fb553a5cf0c9c8f6667274b70ec1b0959b49f9de)
			First parameter (with value "RSA/ECB/nopadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer24296)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r8.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer24295, $r2)


	 in Method: byte[] signSha256(byte[])
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Privkey
			at statement: virtualinvoke r8.<java.security.Signature: void initSign(java.security.PrivateKey)>($r3)


Findings in Java Class: org.apache.solr.util.CryptoKeys

	 in Method: boolean verify(java.security.PublicKey,byte[],java.nio.ByteBuffer)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generated Pubkey
			at statement: virtualinvoke r6.<java.security.Signature: void initVerify(java.security.PublicKey)>(r0)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #3a7699c924f2a522e1b08e35c7ffe271d4dec11acfab628d173b7d5b89d98696)
			First parameter (with value "SHA1withRSA") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA224withDSA, NONEwithDSA, SHA1withDSA}
			at statement: r6 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer24304)


	 in Method: java.lang.String decodeAES(java.lang.String,java.lang.String,int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r14.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r15)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ffdc610552cb94aa532cace7820899f1a8bd6fd6e50c90862277b4aa5e41b504)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer24316)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer24309, r8, r9)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r12.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r13, varReplacer24315)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #ffdc610552cb94aa532cace7820899f1a8bd6fd6e50c90862277b4aa5e41b504)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: r7 = staticinvoke <org.apache.solr.util.CryptoKeys: byte[][] evpBytesTokey(int,int,java.security.MessageDigest,byte[],byte[],int)>($i5, $i6, r6, r3, $r11, varReplacer24318)


	 in Method: byte[] decryptRSA(byte[],java.security.PublicKey)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer24323, r1)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #a4b98e82625591a2a5c7c4df796a84de6f7e87351e984c957fadc7d968fcdb02)
			First parameter (with value "RSA/ECB/nopadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer24321)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 33

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 7
	RequiredPredicateError: 7
	IncompleteOperationError: 2
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 5 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 18.18 s

