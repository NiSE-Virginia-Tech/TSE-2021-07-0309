[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 505.8 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 7 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 7
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.14

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 9
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.22

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 10
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.3

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 10
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.4

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.45

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.55

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 12
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.58

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 12
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 12
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.75

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 12
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.83

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 12
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.92

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r4
		Type: java.security.SecureRandom
		Statement: r4 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer224)
		Method: <org.apache.tomcat.websocket.Util: byte[] generateMask()>
		SHA-256: d1c1a74def9cd7ff4138ec79f0b487c8704ecdb62678f0fc29052b6cdca72936
		Secure: true
	Object:
		Variable: r2
		Type: byte[]
		Statement: r4 = virtualinvoke r3.<java.security.MessageDigest: byte[] digest(byte[])>(r2)
		Method: <org.apache.tomcat.websocket.DigestAuthenticator: java.lang.String encodeMD5(java.lang.String)>
		SHA-256: 2324fcc07f0e6964400b54256ea4805d2643e94bf4e2cfd5e92c3a61192139af
		Secure: false
	Object:
		Variable: $r32
		Type: javax.net.ssl.TrustManager[]
		Statement: $r32 = virtualinvoke r31.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <org.apache.tomcat.websocket.WsWebSocketContainer: javax.net.ssl.SSLEngine createSSLEngine(java.util.Map,java.lang.String,int)>
		SHA-256: 9f97699519c4c67f6a0a3dfac31e1ffc2bfa9af0e61798f8ca33fdd475793fde
		Secure: false
	Object:
		Variable: r6
		Type: byte[]
		Statement: virtualinvoke r4.<java.security.SecureRandom: void nextBytes(byte[])>(r6)
		Method: <org.apache.tomcat.websocket.Util: byte[] generateMask()>
		SHA-256: fe4c0278ff8af9edf0bf1f785b1f8ea186f2e681d9ca89a17cd951264cfaf915
		Secure: true
	Object:
		Variable: r3
		Type: java.security.MessageDigest
		Statement: r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer155)
		Method: <org.apache.tomcat.websocket.DigestAuthenticator: java.lang.String encodeMD5(java.lang.String)>
		SHA-256: 390393e0e4e460ce57e871e1fe2ba08002e37d9dcc6c8cb4cd7c6e4336a132bf
		Secure: false
	Object:
		Variable: r31
		Type: javax.net.ssl.TrustManagerFactory
		Statement: r31 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r30)
		Method: <org.apache.tomcat.websocket.WsWebSocketContainer: javax.net.ssl.SSLEngine createSSLEngine(java.util.Map,java.lang.String,int)>
		SHA-256: bda143008563b09061039fbff7ca6cc49a266679f5e7058ad3de90dc44202b66
		Secure: false
	Object:
		Variable: r33
		Type: javax.net.ssl.SSLEngine
		Statement: r33 = virtualinvoke r22.<javax.net.ssl.SSLContext: javax.net.ssl.SSLEngine createSSLEngine(java.lang.String,int)>(r2, i0)
		Method: <org.apache.tomcat.websocket.WsWebSocketContainer: javax.net.ssl.SSLEngine createSSLEngine(java.util.Map,java.lang.String,int)>
		SHA-256: 7662b1ae9fb37f7204578675dc2a4c1810d24589790bb0291d407fd4624e6e80
		Secure: false
	Object:
		Variable: r103
		Type: java.security.SecureRandom
		Statement: specialinvoke r103.<java.security.SecureRandom: void <init>()>()
		Method: <org.apache.tomcat.websocket.DigestAuthenticator: java.lang.String getAuthorization(java.lang.String,java.lang.String,java.util.Map)>
		SHA-256: 9094136ccd2028e75e9cad4452faa86ccf5e3c4e25df925b4a3cd72f596a2ebc
		Secure: true
	Object:
		Variable: r22
		Type: javax.net.ssl.SSLContext
		Statement: r22 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer679)
		Method: <org.apache.tomcat.websocket.WsWebSocketContainer: javax.net.ssl.SSLEngine createSSLEngine(java.util.Map,java.lang.String,int)>
		SHA-256: 1a0b243c242348aebfcf57f230292bab40300c661321a7c1255e71ee4351d23c
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.apache.tomcat.websocket.Util: byte[] generateMask()>
		SHA-256: dd8930e4be1875c91a19fa760a86e505a2441982dad548726944b746989ec202
		Secure: true
	Object:
		Variable: r4
		Type: byte[]
		Statement: r4 = virtualinvoke r3.<java.security.MessageDigest: byte[] digest(byte[])>(r2)
		Method: <org.apache.tomcat.websocket.DigestAuthenticator: java.lang.String encodeMD5(java.lang.String)>
		SHA-256: fafd4baac9a08b603d597adf8c8295dc78fc1686d7ce5b2479603289b9154253
		Secure: false
	Object:
		Variable: r3
		Type: java.security.KeyStore
		Statement: r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer685)
		Method: <org.apache.tomcat.websocket.WsWebSocketContainer: javax.net.ssl.SSLEngine createSSLEngine(java.util.Map,java.lang.String,int)>
		SHA-256: b96920e46421b8ba784fccdbce8dfdbc3863bf6c72f91c0e2b4e542cb38651f4
		Secure: false

Findings in Java Class: org.apache.tomcat.websocket.DigestAuthenticator

	 in Method: java.lang.String encodeMD5(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #390393e0e4e460ce57e871e1fe2ba08002e37d9dcc6c8cb4cd7c6e4336a132bf)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer155)


Findings in Java Class: org.apache.tomcat.websocket.WsWebSocketContainer

	 in Method: javax.net.ssl.SSLEngine createSSLEngine(java.util.Map,java.lang.String,int)
		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #b96920e46421b8ba784fccdbce8dfdbc3863bf6c72f91c0e2b4e542cb38651f4)
			Operation on object of type java.security.KeyStore object not completed. Expected call to load
			at statement: virtualinvoke r31.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(r3)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r22.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer686, $r32, varReplacer686)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #1a0b243c242348aebfcf57f230292bab40300c661321a7c1255e71ee4351d23c)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: r22 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer679)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r22.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer686, $r32, varReplacer686)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r31.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(r3)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 12

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 2
	IncompleteOperationError: 1
	RequiredPredicateError: 3
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 6 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 8.280 s

