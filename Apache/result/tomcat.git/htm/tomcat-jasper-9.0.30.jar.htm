<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>SpotBugs Report</title>
<style type="text/css">
		.tablerow0 {
			background: #EEEEEE;
		}

		.tablerow1 {
			background: white;
		}

		.detailrow0 {
			background: #EEEEEE;
		}

		.detailrow1 {
			background: white;
		}

		.tableheader {
			background: #b9b9fe;
			font-size: larger;
		}

		.tablerow0:hover, .tablerow1:hover {
			background: #aaffaa;
		}

		.priority-1 {
		    color: red;
		    font-weight: bold;
		}
		.priority-2 {
		    color: orange;
		    font-weight: bold;
		}
		.priority-3 {
		    color: green;
		    font-weight: bold;
		}
		.priority-4 {
		    color: blue;
		    font-weight: bold;
		}
		</style>
<script type="text/javascript">
			function toggleRow(elid) {
				if (document.getElementById) {
					element = document.getElementById(elid);
					if (element) {
						if (element.style.display == 'none') {
							element.style.display = 'block';
							//window.status = 'Toggle on!';
						} else {
							element.style.display = 'none';
							//window.status = 'Toggle off!';
						}
					}
				}
			}
		</script>
</head>
<body>
<h1>
<a href="https://spotbugs.github.io/">SpotBugs</a> Report</h1>
<h2>Project Information</h2>
<p>Project: 
		</p>
<p>SpotBugs version: 3.1.12</p>
<p>Code analyzed:</p>
<ul>
<li>/home/x/CryptoAPIDetect/dataset/group/tomcat.git/tomcat-jasper-9.0.30.jar</li>
</ul>
<p>
<br/>
<br/>
</p>
<h2>Metrics</h2>
<p>19901 lines of code analyzed,
	in 238 classes, 
	in 10 packages.</p>
<table width="500" cellpadding="5" cellspacing="2">
<tr class="tableheader">
<th align="left">Metric</th>
<th align="right">Total</th>
<th align="right">Density*</th>
</tr>
<tr class="tablerow0">
<td>High Priority Warnings</td>
<td align="right">5</td>
<td align="right">0.25</td>
</tr>
<tr class="tablerow1">
<td>Medium Priority Warnings</td>
<td align="right">55</td>
<td align="right">2.76</td>
</tr>
<tr class="$totalClass">
<td>
<b>Total Warnings</b>
</td>
<td align="right">
<b>60</b>
</td>
<td align="right">
<b>3.01</b>
</td>
</tr>
</table>
<p>
<i>(* Defects per Thousand lines of non-commenting source statements)</i>
</p>
<p>
<br/>
<br/>
</p>
<h2>Contents</h2>
<ul>
<li>
<a href="#Warnings_SECURITY">Security Warnings</a>
</li>
<li>
<a href="#Details">Details</a>
</li>
</ul>
<h1>Summary</h1>
<table width="500" cellpadding="5" cellspacing="2">
<tr class="tableheader">
<th align="left">Warning Type</th>
<th align="right">Number</th>
</tr>
<tr class="tablerow0">
<td>
<a href="#Warnings_SECURITY">Security Warnings</a>
</td>
<td align="right">60</td>
</tr>
<tr class="tablerow1">
<td>
<b>Total</b>
</td>
<td align="right">
<b>60</b>
</td>
</tr>
</table>
<h1>Warnings</h1>
<p>Click on a warning row to see full context information.</p>
<h2>
<a name="Warnings_SECURITY">Security Warnings</a>
</h2>
<table class="warningtable" width="100%" cellspacing="0">
<tr class="tableheader">
<th align="left">Code</th>
<th align="left">Warning</th>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70205');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70205" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class org.apache.jasper.servlet.JspCServletContext<br/>In method org.apache.jasper.servlet.JspCServletContext.log(String, Throwable)<br/>At JspCServletContext.java:[line 587]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68747');">
<td>
<span class="priority-2">SECEL</span>
</td>
<td>This use of javax/el/ExpressionFactory.createValueExpression(Ljavax/el/ELContext;Ljava/lang/String;Ljava/lang/Class;)Ljavax/el/ValueExpression; could be vulnerable to code injection (Expression Language)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68747" style="display: none;">
<a href="#EL_INJECTION">Bug type EL_INJECTION (click for details)</a>
<br/>In class org.apache.jasper.compiler.Node$JspAttribute<br/>In method org.apache.jasper.compiler.Node$JspAttribute.validateEL(ExpressionFactory, ELContext)<br/>At Node.java:[line 2165]<br/>Sink method javax/el/ExpressionFactory.createValueExpression(Ljavax/el/ELContext;Ljava/lang/String;Ljava/lang/Class;)Ljavax/el/ValueExpression;<br/>Sink parameter 1<br/>Unknown source org/apache/jasper/compiler/Node$JspAttribute.value<br/>At Node.java:[line 2165]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69455');">
<td>
<span class="priority-2">SECEL</span>
</td>
<td>This use of javax/el/ExpressionFactory.createValueExpression(Ljavax/el/ELContext;Ljava/lang/String;Ljava/lang/Class;)Ljavax/el/ValueExpression; could be vulnerable to code injection (Expression Language)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69455" style="display: none;">
<a href="#EL_INJECTION">Bug type EL_INJECTION (click for details)</a>
<br/>In class org.apache.jasper.compiler.Validator$ValidateVisitor<br/>In method org.apache.jasper.compiler.Validator$ValidateVisitor.prepareExpression(ELNode$Nodes, Node, String)<br/>At Validator.java:[line 1630]<br/>Sink method javax/el/ExpressionFactory.createValueExpression(Ljavax/el/ELContext;Ljava/lang/String;Ljava/lang/Class;)Ljavax/el/ValueExpression;<br/>Sink parameter 1<br/>Unknown source org/apache/jasper/compiler/Validator$ValidateVisitor.prepareExpression(Lorg/apache/jasper/compiler/ELNode$Nodes;Lorg/apache/jasper/compiler/Node;Ljava/lang/String;)V parameter 0<br/>At Node.java:[line 332]<br/>At Node.java:[line 945]<br/>At Validator.java:[line 752]<br/>At Validator.java:[line 753]<br/>At Validator.java:[line 759]<br/>At Validator.java:[line 1475]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69584');">
<td>
<span class="priority-2">SECEL</span>
</td>
<td>This use of javax/el/ExpressionFactory.createValueExpression(Ljavax/el/ELContext;Ljava/lang/String;Ljava/lang/Class;)Ljavax/el/ValueExpression; could be vulnerable to code injection (Expression Language)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69584" style="display: none;">
<a href="#EL_INJECTION">Bug type EL_INJECTION (click for details)</a>
<br/>In class org.apache.jasper.el.ExpressionEvaluatorImpl<br/>In method org.apache.jasper.el.ExpressionEvaluatorImpl.parseExpression(String, Class, FunctionMapper)<br/>At ExpressionEvaluatorImpl.java:[line 47]<br/>Sink method javax/el/ExpressionFactory.createValueExpression(Ljavax/el/ELContext;Ljava/lang/String;Ljava/lang/Class;)Ljavax/el/ValueExpression;<br/>Sink parameter 1<br/>Unknown source org/apache/jasper/el/ExpressionEvaluatorImpl.parseExpression(Ljava/lang/String;Ljava/lang/Class;Ljavax/servlet/jsp/el/FunctionMapper;)Ljavax/servlet/jsp/el/Expression; parameter 2<br/>Method usage not detected<br/>At ExpressionEvaluatorImpl.java:[line 59]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69816');">
<td>
<span class="priority-2">SECEL</span>
</td>
<td>This use of javax/el/ExpressionFactory.createValueExpression(Ljavax/el/ELContext;Ljava/lang/String;Ljava/lang/Class;)Ljavax/el/ValueExpression; could be vulnerable to code injection (Expression Language)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69816" style="display: none;">
<a href="#EL_INJECTION">Bug type EL_INJECTION (click for details)</a>
<br/>In class org.apache.jasper.runtime.PageContextImpl<br/>In method org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate(String, Class, PageContext, ProtectedFunctionMapper)<br/>At PageContextImpl.java:[line 700]<br/>Sink method javax/el/ExpressionFactory.createValueExpression(Ljavax/el/ELContext;Ljava/lang/String;Ljava/lang/Class;)Ljavax/el/ValueExpression;<br/>Sink parameter 1<br/>Unknown source org/apache/jasper/runtime/PageContextImpl.proprietaryEvaluate(Ljava/lang/String;Ljava/lang/Class;Ljavax/servlet/jsp/PageContext;Lorg/apache/jasper/runtime/ProtectedFunctionMapper;)Ljava/lang/Object; parameter 3<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69890');">
<td>
<span class="priority-1">SECJSPINC</span>
</td>
<td>Dynamic JSP inclusion could lead to arbitrary code execution</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69890" style="display: none;">
<a href="#JSP_INCLUDE">Bug type JSP_INCLUDE (click for details)</a>
<br/>In class org.apache.jasper.runtime.PageContextImpl<br/>In method org.apache.jasper.runtime.PageContextImpl.include(String)<br/>At PageContextImpl.java:[line 490]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69944');">
<td>
<span class="priority-1">SECJSPINC</span>
</td>
<td>Dynamic JSP inclusion could lead to arbitrary code execution</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69944" style="display: none;">
<a href="#JSP_INCLUDE">Bug type JSP_INCLUDE (click for details)</a>
<br/>In class org.apache.jasper.runtime.PageContextImpl<br/>In method org.apache.jasper.runtime.PageContextImpl.include(String, boolean)<br/>At PageContextImpl.java:[line 496]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66953');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66953" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.jasper.compiler.AntCompiler<br/>In method org.apache.jasper.compiler.AntCompiler.generateClass(Map)<br/>At AntCompiler.java:[line 153]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/jasper/JspCompilationContext.classPath<br/>Unknown source org/apache/jasper/compiler/JspRuntimeContext.classpath<br/>Unknown source org/apache/jasper/compiler/JspRuntimeContext.getClassPath()Ljava/lang/String;<br/>Unknown source org/apache/jasper/JspCompilationContext.getClassPath()Ljava/lang/String;<br/>Unknown source java/util/StringTokenizer.nextToken()Ljava/lang/String;<br/>Unknown source java/util/StringTokenizer.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V<br/>At JspCompilationContext.java:[line 150]<br/>At JspCompilationContext.java:[line 152]<br/>At AntCompiler.java:[line 131]<br/>At AntCompiler.java:[line 137]<br/>At AntCompiler.java:[line 150]<br/>At AntCompiler.java:[line 152]<br/>At JspRuntimeContext.java:[line 427]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67117');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67117" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.jasper.compiler.AntCompiler<br/>In method org.apache.jasper.compiler.AntCompiler.generateClass(Map)<br/>At AntCompiler.java:[line 251]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/jasper/JspCompilationContext.getServletJavaFileName()Ljava/lang/String;<br/>Unknown source org/apache/jasper/JspCompilationContext.servletJavaFileName<br/>At JspCompilationContext.java:[line 506]<br/>At AntCompiler.java:[line 130]<br/>At AntCompiler.java:[line 136]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67221');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67221" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.jasper.compiler.Compiler<br/>In method org.apache.jasper.compiler.Compiler.compile(boolean, boolean)<br/>At Compiler.java:[line 387]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/jasper/JspCompilationContext.getServletJavaFileName()Ljava/lang/String;<br/>Unknown source org/apache/jasper/JspCompilationContext.servletJavaFileName<br/>At JspCompilationContext.java:[line 506]<br/>At Compiler.java:[line 387]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67315');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67315" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.jasper.compiler.Compiler<br/>In method org.apache.jasper.compiler.Compiler.compile(boolean, boolean)<br/>At Compiler.java:[line 395]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/jasper/JspCompilationContext.getClassFileName()Ljava/lang/String;<br/>Unknown source org/apache/jasper/JspCompilationContext.classFileName<br/>At JspCompilationContext.java:[line 547]<br/>At Compiler.java:[line 395]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67409');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67409" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.jasper.compiler.Compiler<br/>In method org.apache.jasper.compiler.Compiler.generateJava()<br/>At Compiler.java:[line 273]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/jasper/JspCompilationContext.getServletJavaFileName()Ljava/lang/String;<br/>Unknown source org/apache/jasper/JspCompilationContext.servletJavaFileName<br/>At JspCompilationContext.java:[line 506]<br/>At Compiler.java:[line 181]<br/>At Compiler.java:[line 267]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67513');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67513" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.jasper.compiler.Compiler<br/>In method org.apache.jasper.compiler.Compiler.isOutDated(boolean)<br/>At Compiler.java:[line 468]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/jasper/JspCompilationContext.getClassFileName()Ljava/lang/String;<br/>Unknown source org/apache/jasper/JspCompilationContext.classFileName<br/>At JspCompilationContext.java:[line 547]<br/>At Compiler.java:[line 468]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67607');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67607" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.jasper.compiler.Compiler<br/>In method org.apache.jasper.compiler.Compiler.isOutDated(boolean)<br/>At Compiler.java:[line 470]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/jasper/JspCompilationContext.getServletJavaFileName()Ljava/lang/String;<br/>Unknown source org/apache/jasper/JspCompilationContext.servletJavaFileName<br/>At JspCompilationContext.java:[line 506]<br/>At Compiler.java:[line 470]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67701');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67701" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.jasper.compiler.Compiler<br/>In method org.apache.jasper.compiler.Compiler.removeGeneratedClassFiles()<br/>At Compiler.java:[line 595]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/jasper/JspCompilationContext.getClassFileName()Ljava/lang/String;<br/>Unknown source org/apache/jasper/JspCompilationContext.classFileName<br/>At JspCompilationContext.java:[line 547]<br/>At Compiler.java:[line 595]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67795');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67795" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.jasper.compiler.Compiler<br/>In method org.apache.jasper.compiler.Compiler.removeGeneratedFiles()<br/>At Compiler.java:[line 576]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/jasper/JspCompilationContext.getServletJavaFileName()Ljava/lang/String;<br/>Unknown source org/apache/jasper/JspCompilationContext.servletJavaFileName<br/>At JspCompilationContext.java:[line 506]<br/>At Compiler.java:[line 576]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68443');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68443" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.jasper.compiler.JavacErrorDetail<br/>In method new org.apache.jasper.compiler.JavacErrorDetail(String, int, String, int, StringBuilder, JspCompilationContext)<br/>At JavacErrorDetail.java:[line 103]<br/>Sink method java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/jasper/JspCompilationContext.getServletJavaFileName()Ljava/lang/String;<br/>Unknown source org/apache/jasper/JspCompilationContext.servletJavaFileName<br/>At JspCompilationContext.java:[line 506]<br/>At JavacErrorDetail.java:[line 103]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68171');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68171" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.jasper.compiler.JDTCompiler<br/>In method org.apache.jasper.compiler.JDTCompiler.generateClass(Map)<br/>At JDTCompiler.java:[line 509]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/jasper/JspCompilationContext.getServletJavaFileName()Ljava/lang/String;<br/>Unknown source org/apache/jasper/JspCompilationContext.servletJavaFileName<br/>At JspCompilationContext.java:[line 506]<br/>At JDTCompiler.java:[line 509]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68265');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68265" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.jasper.compiler.JDTCompiler$1CompilationUnit<br/>In method org.apache.jasper.compiler.JDTCompiler$1CompilationUnit.getContents()<br/>At JDTCompiler.java:[line 109]<br/>Sink method java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/jasper/compiler/JDTCompiler$1CompilationUnit.sourceFile<br/>At JDTCompiler.java:[line 109]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68653');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68653" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.jasper.compiler.JspRuntimeContext<br/>In method org.apache.jasper.compiler.JspRuntimeContext.initSecurity()<br/>At JspRuntimeContext.java:[line 523]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.toString()Ljava/lang/String;<br/>Unknown source org/apache/jasper/Options.getScratchDir()Ljava/io/File;<br/>At JspRuntimeContext.java:[line 517]<br/>At JspRuntimeContext.java:[line 521]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68826');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68826" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.jasper.compiler.SmapUtil<br/>In method org.apache.jasper.compiler.SmapUtil.generateSmap(JspCompilationContext, Node$Nodes)<br/>At SmapUtil.java:[line 97]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/jasper/JspCompilationContext.getClassFileName()Ljava/lang/String;<br/>Unknown source org/apache/jasper/JspCompilationContext.classFileName<br/>At JspCompilationContext.java:[line 547]<br/>At SmapUtil.java:[line 91]<br/>At SmapUtil.java:[line 97]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68930');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68930" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.jasper.compiler.SmapUtil<br/>In method org.apache.jasper.compiler.SmapUtil.generateSmap(JspCompilationContext, Node$Nodes)<br/>At SmapUtil.java:[line 120]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/util/Map$Entry.getKey()Ljava/lang/Object;<br/>Unknown source org/apache/jasper/compiler/SmapUtil.evaluateNodes(Lorg/apache/jasper/compiler/Node$Nodes;Lorg/apache/jasper/compiler/SmapStratum;Ljava/util/HashMap;Z)V parameter 1<br/>Unknown source org/apache/jasper/compiler/SmapUtil$PreScanVisitor.getMap()Ljava/util/HashMap;<br/>Unknown source java/util/Iterator.next()Ljava/lang/Object;<br/>Unknown source org/apache/jasper/compiler/SmapUtil$PreScanVisitor.map<br/>Unknown source org/apache/jasper/JspCompilationContext.getClassFileName()Ljava/lang/String;<br/>Unknown source org/apache/jasper/JspCompilationContext.classFileName<br/>At JspCompilationContext.java:[line 547]<br/>At SmapUtil.java:[line 81]<br/>At SmapUtil.java:[line 91]<br/>At SmapUtil.java:[line 97]<br/>At SmapUtil.java:[line 107]<br/>At SmapUtil.java:[line 108]<br/>At SmapUtil.java:[line 113]<br/>At SmapUtil.java:[line 120]<br/>At SmapUtil.java:[line 445]<br/>At SmapUtil.java:[line 690]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69129');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69129" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.jasper.compiler.SmapUtil<br/>In method org.apache.jasper.compiler.SmapUtil.installSmap(Map)<br/>At SmapUtil.java:[line 141]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/jasper/compiler/SmapStratum.getClassFileName()Ljava/lang/String;<br/>Unknown source org/apache/jasper/compiler/SmapStratum.classFileName<br/>At SmapStratum.java:[line 290]<br/>At SmapUtil.java:[line 141]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69223');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69223" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.jasper.compiler.SmapUtil$SDEInstaller<br/>In method org.apache.jasper.compiler.SmapUtil$SDEInstaller.install(File, byte[])<br/>At SmapUtil.java:[line 176]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.getPath()Ljava/lang/String;<br/>At SmapUtil.java:[line 176]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65551');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65551" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.jasper.EmbeddedServletOptions<br/>In method new org.apache.jasper.EmbeddedServletOptions(ServletConfig, ServletContext)<br/>At EmbeddedServletOptions.java:[line 663]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source javax/servlet/ServletConfig.getInitParameter(Ljava/lang/String;)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65620');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65620" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.jasper.JspC<br/>In method org.apache.jasper.JspC.execute()<br/>At JspC.java:[line 1457]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/jasper/JspC.pages<br/>At JspC.java:[line 1456]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65699');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65699" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.jasper.JspC<br/>In method org.apache.jasper.JspC.execute()<br/>At JspC.java:[line 1469]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/jasper/JspC.uriRoot<br/>At JspC.java:[line 1469]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65778');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65778" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.jasper.JspC<br/>In method org.apache.jasper.JspC.execute()<br/>At JspC.java:[line 1492]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/jasper/JspC.pages<br/>At JspC.java:[line 1490]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65857');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65857" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.jasper.JspC<br/>In method org.apache.jasper.JspC.execute()<br/>At JspC.java:[line 1494]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/jasper/JspC.pages<br/>At JspC.java:[line 1490]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65936');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65936" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.jasper.JspC<br/>In method org.apache.jasper.JspC.initClassLoader()<br/>At JspC.java:[line 1724]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/util/StringTokenizer.nextToken()Ljava/lang/String;<br/>Unknown source java/util/StringTokenizer.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V<br/>Unknown source org/apache/jasper/JspC.classPath<br/>At JspC.java:[line 1719]<br/>At JspC.java:[line 1722]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66035');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66035" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.jasper.JspC<br/>In method org.apache.jasper.JspC.initClassLoader()<br/>At JspC.java:[line 1734]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/jasper/JspC.uriRoot<br/>At JspC.java:[line 1734]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66114');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66114" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.jasper.JspC<br/>In method org.apache.jasper.JspC.initClassLoader()<br/>At JspC.java:[line 1763]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.list()[Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66183');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66183" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.jasper.JspC<br/>In method org.apache.jasper.JspC.initServletContext(ClassLoader)<br/>At JspC.java:[line 1677]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/jasper/JspC.uriRoot<br/>At JspC.java:[line 1677]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66262');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66262" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.jasper.JspC<br/>In method org.apache.jasper.JspC.initWebXml()<br/>At JspC.java:[line 1611]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/jasper/JspC.webxmlFile<br/>At JspC.java:[line 1611]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66341');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66341" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.jasper.JspC<br/>In method org.apache.jasper.JspC.locateUriRoot(File)<br/>At JspC.java:[line 1797]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.getAbsolutePath()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66410');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66410" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.jasper.JspC<br/>In method org.apache.jasper.JspC.locateUriRoot(File)<br/>At JspC.java:[line 1818]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.getParent()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66479');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66479" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.jasper.JspC<br/>In method org.apache.jasper.JspC.locateUriRoot(File)<br/>At JspC.java:[line 1826]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/jasper/JspC.uriRoot<br/>At JspC.java:[line 1826]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66558');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66558" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.jasper.JspC<br/>In method org.apache.jasper.JspC.mergeIntoWebXml()<br/>At JspC.java:[line 1194]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/jasper/JspC.uriRoot<br/>At JspC.java:[line 1194]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66637');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66637" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.jasper.JspC<br/>In method org.apache.jasper.JspC.mergeIntoWebXml()<br/>At JspC.java:[line 1203]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/jasper/JspC.webxmlFile<br/>At JspC.java:[line 1203]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66716');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66716" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.jasper.JspC<br/>In method org.apache.jasper.JspC.mergeIntoWebXml()<br/>At JspC.java:[line 1274]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/jasper/JspC.webxmlFile<br/>At JspC.java:[line 1274]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66795');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66795" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.jasper.JspCompilationContext<br/>In method org.apache.jasper.JspCompilationContext.checkOutputDir()<br/>At JspCompilationContext.java:[line 665]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/jasper/JspCompilationContext.outputDir<br/>At JspCompilationContext.java:[line 665]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66874');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66874" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.jasper.JspCompilationContext<br/>In method org.apache.jasper.JspCompilationContext.makeOutputDir()<br/>At JspCompilationContext.java:[line 675]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/jasper/JspCompilationContext.outputDir<br/>At JspCompilationContext.java:[line 675]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70259');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/net/URI;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70259" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.jasper.servlet.JspCServletContext<br/>In method org.apache.jasper.servlet.JspCServletContext.getRealPath(String)<br/>At JspCServletContext.java:[line 351]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/net/URI;)V<br/>Sink parameter 0<br/>Unknown source org/apache/jasper/servlet/JspCServletContext.myResourceBaseURL<br/>Unknown source org/apache/tomcat/Jar.getURL(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/apache/jasper/servlet/JspCServletContext.getResource(Ljava/lang/String;)Ljava/net/URL;<br/>Unknown source org/apache/jasper/servlet/JspCServletContext.getRealPath(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/net/URL.&lt;init&gt;(Ljava/net/URL;Ljava/lang/String;)V<br/>Unknown source java/net/URL.&lt;init&gt;(Ljava/lang/String;)V<br/>Unknown source org/apache/jasper/servlet/JspCServletContext.getResource(Ljava/lang/String;)Ljava/net/URL; parameter 0<br/>Unknown source java/net/URL.toURI()Ljava/net/URI;<br/>At JspC.java:[line 1421]<br/>At JspC.java:[line 1426]<br/>At JspC.java:[line 1427]<br/>At JspC.java:[line 1429]<br/>At JspCServletContext.java:[line 351]<br/>At JspCServletContext.java:[line 388]<br/>At JspCServletContext.java:[line 390]<br/>At JspCServletContext.java:[line 404]<br/>At JspCServletContext.java:[line 443]<br/>At JspCServletContext.java:[line 445]<br/>At JspCServletContext.java:[line 454]<br/>At JspCServletContext.java:[line 456]<br/>At JspCServletContext.java:[line 479]<br/>At JspCServletContext.java:[line 482]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70503');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70503" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.jasper.servlet.JspCServletContext<br/>In method org.apache.jasper.servlet.JspCServletContext.getResourcePaths(String)<br/>At JspCServletContext.java:[line 447]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.getAbsolutePath()Ljava/lang/String;<br/>Unknown source org/apache/jasper/servlet/JspCServletContext.getRealPath(Ljava/lang/String;)Ljava/lang/String;<br/>At JspCServletContext.java:[line 445]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70587');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70587" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.apache.jasper.servlet.JspCServletContext<br/>In method org.apache.jasper.servlet.JspCServletContext.getResourcePaths(String)<br/>At JspCServletContext.java:[line 452]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.list()[Ljava/lang/String;<br/>Unknown source java/io/File.getAbsolutePath()Ljava/lang/String;<br/>Unknown source org/apache/jasper/servlet/JspCServletContext.getRealPath(Ljava/lang/String;)Ljava/lang/String;<br/>At JspCServletContext.java:[line 445]<br/>At JspCServletContext.java:[line 452]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67889');">
<td>
<span class="priority-2">SECPTO</span>
</td>
<td>This API (java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V) writes to a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67889" style="display: none;">
<a href="#PATH_TRAVERSAL_OUT">Bug type PATH_TRAVERSAL_OUT (click for details)</a>
<br/>In class org.apache.jasper.compiler.Compiler<br/>In method org.apache.jasper.compiler.Compiler.setupContextWriter(String)<br/>At Compiler.java:[line 312]<br/>Sink method java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/jasper/compiler/Compiler.setupContextWriter(Ljava/lang/String;)Lorg/apache/jasper/compiler/ServletWriter; parameter 0<br/>At JspCompilationContext.java:[line 506]<br/>At Compiler.java:[line 181]<br/>At Compiler.java:[line 216]<br/>At Compiler.java:[line 256]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68344');">
<td>
<span class="priority-2">SECPTO</span>
</td>
<td>This API (java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V) writes to a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68344" style="display: none;">
<a href="#PATH_TRAVERSAL_OUT">Bug type PATH_TRAVERSAL_OUT (click for details)</a>
<br/>In class org.apache.jasper.compiler.JDTCompiler$2<br/>In method org.apache.jasper.compiler.JDTCompiler$2.acceptResult(CompilationResult)<br/>At JDTCompiler.java:[line 462]<br/>Sink method java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/jasper/compiler/JDTCompiler$2.val$outputDir<br/>At JDTCompiler.java:[line 452]<br/>At JDTCompiler.java:[line 460]<br/>At JDTCompiler.java:[line 462]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69668');">
<td>
<span class="priority-1">SECSFDR</span>
</td>
<td>RequestDispatcher populated with user controlled parameters</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69668" style="display: none;">
<a href="#REQUESTDISPATCHER_FILE_DISCLOSURE">Bug type REQUESTDISPATCHER_FILE_DISCLOSURE (click for details)</a>
<br/>In class org.apache.jasper.runtime.JspRuntimeLibrary<br/>In method org.apache.jasper.runtime.JspRuntimeLibrary.include(ServletRequest, ServletResponse, String, JspWriter, boolean)<br/>At JspRuntimeLibrary.java:[line 955]<br/>Sink method javax/servlet/RequestDispatcher.include(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V<br/>Sink parameter 2<br/>Tainted source org/apache/jasper/runtime/JspRuntimeLibrary.getContextRelativePath(Ljavax/servlet/ServletRequest;Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source javax/servlet/ServletRequest.getAttribute(Ljava/lang/String;)Ljava/lang/Object;<br/>Tainted source javax/servlet/http/HttpServletRequest.getServletPath()Ljava/lang/String;<br/>Unknown source org/apache/jasper/runtime/JspRuntimeLibrary.getContextRelativePath(Ljavax/servlet/ServletRequest;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Tainted source javax/servlet/ServletRequest.getRequestDispatcher(Ljava/lang/String;)Ljavax/servlet/RequestDispatcher;<br/>At JspRuntimeLibrary.java:[line 909]<br/>At JspRuntimeLibrary.java:[line 913]<br/>At JspRuntimeLibrary.java:[line 915]<br/>At JspRuntimeLibrary.java:[line 917]<br/>At JspRuntimeLibrary.java:[line 952]<br/>At JspRuntimeLibrary.java:[line 953]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69998');">
<td>
<span class="priority-1">SECSFDR</span>
</td>
<td>RequestDispatcher populated with user controlled parameters</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69998" style="display: none;">
<a href="#REQUESTDISPATCHER_FILE_DISCLOSURE">Bug type REQUESTDISPATCHER_FILE_DISCLOSURE (click for details)</a>
<br/>In class org.apache.jasper.runtime.PageContextImpl<br/>In method org.apache.jasper.runtime.PageContextImpl.forward(String)<br/>At PageContextImpl.java:[line 530]<br/>Sink method javax/servlet/RequestDispatcher.forward(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V<br/>Sink parameter 2<br/>Unknown source org/apache/jasper/runtime/PageContextImpl.getAbsolutePathRelativeToContext(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source javax/servlet/ServletRequest.getAttribute(Ljava/lang/String;)Ljava/lang/Object;<br/>Tainted source org/apache/jasper/runtime/PageContextImpl.getAbsolutePathRelativeToContext(Ljava/lang/String;)Ljava/lang/String;<br/>Tainted source javax/servlet/http/HttpServletRequest.getServletPath()Ljava/lang/String;<br/>Tainted source javax/servlet/ServletContext.getRequestDispatcher(Ljava/lang/String;)Ljavax/servlet/RequestDispatcher;<br/>At PageContextImpl.java:[line 478]<br/>At PageContextImpl.java:[line 479]<br/>At PageContextImpl.java:[line 480]<br/>At PageContextImpl.java:[line 524]<br/>At PageContextImpl.java:[line 530]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67998');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67998" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.apache.jasper.compiler.Compiler<br/>In method org.apache.jasper.compiler.Compiler.isOutDated(boolean)<br/>At Compiler.java:[line 526]<br/>Sink method java/net/URL.openConnection()Ljava/net/URLConnection;<br/>Sink parameter 0<br/>Unknown source java/util/Map$Entry.getKey()Ljava/lang/Object;<br/>Unknown source org/apache/jasper/servlet/JspServletWrapper.getDependants()Ljava/util/Map;<br/>Unknown source java/util/Map.entrySet()Ljava/util/Set;<br/>Unknown source java/util/Iterator.next()Ljava/lang/Object;<br/>Unknown source java/net/URL.&lt;init&gt;(Ljava/lang/String;)V<br/>At Compiler.java:[line 505]<br/>At Compiler.java:[line 507]<br/>At Compiler.java:[line 519]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69302');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69302" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.apache.jasper.compiler.TagLibraryInfoImpl<br/>In method new org.apache.jasper.compiler.TagLibraryInfoImpl(JspCompilationContext, ParserController, PageInfo, String, String, TldResourcePath, ErrorDispatcher)<br/>At TagLibraryInfoImpl.java:[line 147]<br/>Sink method java/net/URL.openConnection()Ljava/net/URLConnection;<br/>Sink parameter 0<br/>Unknown source org/apache/tomcat/Jar.getJarFileURL()Ljava/net/URL;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69371');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69371" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.apache.jasper.compiler.TldCache<br/>In method org.apache.jasper.compiler.TldCache.getLastModified(TldResourcePath)<br/>At TldCache.java:[line 132]<br/>Sink method java/net/URL.openConnection()Ljava/net/URLConnection;<br/>Sink parameter 0<br/>Unknown source javax/servlet/ServletContext.getResource(Ljava/lang/String;)Ljava/net/URL;<br/>Unknown source org/apache/tomcat/util/descriptor/tld/TldResourcePath.getWebappPath()Ljava/lang/String;<br/>At TldCache.java:[line 131]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70136');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70136" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.apache.jasper.servlet.JasperLoader<br/>In method org.apache.jasper.servlet.JasperLoader.getResourceAsStream(String)<br/>At JasperLoader.java:[line 144]<br/>Sink method java/net/URL.openStream()Ljava/io/InputStream;<br/>Sink parameter 0<br/>Unknown source org/apache/jasper/servlet/JasperLoader.findResource(Ljava/lang/String;)Ljava/net/URL;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70686');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70686" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.apache.jasper.servlet.JspCServletContext<br/>In method org.apache.jasper.servlet.JspCServletContext.getResource(String)<br/>At JspCServletContext.java:[line 391]<br/>Sink method java/net/URL.openStream()Ljava/io/InputStream;<br/>Sink parameter 0<br/>Unknown source org/apache/jasper/servlet/JspCServletContext.myResourceBaseURL<br/>Unknown source java/net/URL.&lt;init&gt;(Ljava/net/URL;Ljava/lang/String;)V<br/>Unknown source org/apache/jasper/servlet/JspCServletContext.getResource(Ljava/lang/String;)Ljava/net/URL; parameter 0<br/>At JspC.java:[line 1421]<br/>At JspC.java:[line 1426]<br/>At JspC.java:[line 1427]<br/>At JspC.java:[line 1429]<br/>At JspCServletContext.java:[line 156]<br/>At JspCServletContext.java:[line 351]<br/>At JspCServletContext.java:[line 388]<br/>At JspCServletContext.java:[line 390]<br/>At JspCServletContext.java:[line 424]<br/>At JspCServletContext.java:[line 443]<br/>At JspCServletContext.java:[line 445]<br/>At JspCServletContext.java:[line 454]<br/>At JspCServletContext.java:[line 456]<br/>At JspCServletContext.java:[line 479]<br/>At JspCServletContext.java:[line 482]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70915');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70915" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.apache.jasper.servlet.JspCServletContext<br/>In method org.apache.jasper.servlet.JspCServletContext.getResourceAsStream(String)<br/>At JspCServletContext.java:[line 424]<br/>Sink method java/net/URL.openStream()Ljava/io/InputStream;<br/>Sink parameter 0<br/>Unknown source org/apache/jasper/servlet/JspCServletContext.myResourceBaseURL<br/>Unknown source org/apache/tomcat/Jar.getURL(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/apache/jasper/servlet/JspCServletContext.getResource(Ljava/lang/String;)Ljava/net/URL;<br/>Unknown source java/net/URL.&lt;init&gt;(Ljava/net/URL;Ljava/lang/String;)V<br/>Unknown source java/net/URL.&lt;init&gt;(Ljava/lang/String;)V<br/>Unknown source org/apache/jasper/servlet/JspCServletContext.getResource(Ljava/lang/String;)Ljava/net/URL; parameter 0<br/>Unknown source org/apache/jasper/servlet/JspCServletContext.getResourceAsStream(Ljava/lang/String;)Ljava/io/InputStream; parameter 0<br/>Method usage not detected<br/>At JspCServletContext.java:[line 388]<br/>At JspCServletContext.java:[line 390]<br/>At JspCServletContext.java:[line 404]<br/>At JspCServletContext.java:[line 424]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71059');">
<td>
<span class="priority-1">SECXSS2</span>
</td>
<td>This use of javax/servlet/http/HttpServletResponse.sendError(ILjava/lang/String;)V could be vulnerable to XSS in the Servlet</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71059" style="display: none;">
<a href="#XSS_SERVLET">Bug type XSS_SERVLET (click for details)</a>
<br/>In class org.apache.jasper.servlet.JspServlet<br/>In method org.apache.jasper.servlet.JspServlet.handleMissingResource(HttpServletRequest, HttpServletResponse, String)<br/>At JspServlet.java:[line 410]<br/>Sink method javax/servlet/http/HttpServletResponse.sendError(ILjava/lang/String;)V<br/>Sink parameter 0<br/>Tainted source javax/servlet/http/HttpServletRequest.getRequestURI()Ljava/lang/String;<br/>At JspServlet.java:[line 411]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71138');">
<td>
<span class="priority-2">SECXSS2</span>
</td>
<td>This use of javax/servlet/http/HttpServletResponse.sendError(ILjava/lang/String;)V could be vulnerable to XSS in the Servlet</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71138" style="display: none;">
<a href="#XSS_SERVLET">Bug type XSS_SERVLET (click for details)</a>
<br/>In class org.apache.jasper.servlet.JspServletWrapper<br/>In method org.apache.jasper.servlet.JspServletWrapper.service(HttpServletRequest, HttpServletResponse, boolean)<br/>At JspServletWrapper.java:[line 496]<br/>Sink method javax/servlet/http/HttpServletResponse.sendError(ILjava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source javax/servlet/UnavailableException.getMessage()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68537');">
<td>
<span class="priority-2">SECXXESAX</span>
</td>
<td>The use of SAXParser.parse(...) (SAXParser) is vulnerable to XML External Entity attacks</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68537" style="display: none;">
<a href="#XXE_SAXPARSER">Bug type XXE_SAXPARSER (click for details)</a>
<br/>In class org.apache.jasper.compiler.JspDocumentParser<br/>In method org.apache.jasper.compiler.JspDocumentParser.parse(ParserController, String, Jar, Node, boolean, boolean, String, String, boolean, boolean)<br/>At JspDocumentParser.java:[line 191]<br/>Value SAXParser.parse(...)</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68595');">
<td>
<span class="priority-2">SECXXESAX</span>
</td>
<td>The use of SAXParser.parse(...) (SAXParser) is vulnerable to XML External Entity attacks</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68595" style="display: none;">
<a href="#XXE_SAXPARSER">Bug type XXE_SAXPARSER (click for details)</a>
<br/>In class org.apache.jasper.compiler.JspDocumentParser<br/>In method org.apache.jasper.compiler.JspDocumentParser.parse(ParserController, String, Jar, Node, boolean, boolean, String, String, boolean, boolean)<br/>At JspDocumentParser.java:[line 201]<br/>Value SAXParser.parse(...)</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68117');">
<td>
<span class="priority-2">SECXXESTR</span>
</td>
<td>The XML parsing is vulnerable to XML External Entity attacks</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68117" style="display: none;">
<a href="#XXE_XMLSTREAMREADER">Bug type XXE_XMLSTREAMREADER (click for details)</a>
<br/>In class org.apache.jasper.compiler.EncodingDetector<br/>In method org.apache.jasper.compiler.EncodingDetector.getPrologEncoding(InputStream)<br/>At EncodingDetector.java:[line 89]</p>
</td>
</tr>
</table>
<h1>
<a name="Details">Details</a>
</h1>
<h2>
<a name="INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE: Information Exposure Through An Error Message</a>
</h2>
            
<p>
The sensitive information may be valuable information on its own (such as a password), or it may be useful for launching other, more deadly attacks. If an attack fails, an attacker may use error information provided by the server to launch another more focused attack. For example, an attempt to exploit a path traversal weakness (CWE-22) might yield the full pathname of the installed application. In turn, this could be used to select the proper number of ".." sequences to navigate to the targeted file. An attack using SQL injection (CWE-89) might not initially succeed, but an error message could reveal the malformed query, which would expose query logic and possibly even passwords or other sensitive information used within the query.
</p>
<p>
    <b>Vulnerable Code:</b><br/>
<pre>try {
  out = httpResponse.getOutputStream()
} catch (Exception e) {
  e.printStackTrace(out);
}</pre>
</p>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/209.html">CWE-209: Information Exposure Through an Error Message</a><br/>
<a href="https://cwe.mitre.org/data/definitions/211.html">CWE-211: Information Exposure Through Externally-Generated Error Message</a><br/>
</p>
            
        
<h2>
<a name="EL_INJECTION">EL_INJECTION: Potential code injection when using Expression Language (EL)</a>
</h2>
            
<p>
    An expression is built with a dynamic value. The source of the value(s) should be verified to avoid
    that unfiltered values fall into this risky code evaluation.
</p>
<p><b>Code at risk:</b></p>
<p>
<pre>public void evaluateExpression(String expression) {
    FacesContext context = FacesContext.getCurrentInstance();
    ExpressionFactory expressionFactory = context.getApplication().getExpressionFactory();
    ELContext elContext = context.getELContext();
    ValueExpression vex = expressionFactory.createValueExpression(elContext, expression, String.class);
    return (String) vex.getValue(elContext);
}</pre>
</p>
<br/>
<p>
    <b>References</b><br/>
    <a href="https://blog.mindedsecurity.com/2015/11/reliable-os-shell-with-el-expression.html">Minded Security: Abusing EL for executing OS commands</a><br/>
    <a href="https://docs.oracle.com/javaee/6/tutorial/doc/gjddd.html">The Java EE 6 Tutorial: Expression Language</a><br/>
    <a href="https://cwe.mitre.org/data/definitions/94.html">CWE-94: Improper Control of Generation of Code ('Code Injection')</a><br/>
    <a href="https://cwe.mitre.org/data/definitions/95.html">CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')</a><br/>
    <a href="https://www.mindedsecurity.com/fileshare/ExpressionLanguageInjection.pdf">Minded Security: Expression Language Injection</a><br/>
    <a href="http://danamodio.com/appsec/research/spring-remote-code-with-expression-language-injection/">Dan Amodio's blog: Remote Code with Expression Language Injection</a><br/>
    <a href="https://blog.h3xstream.com/2014/11/remote-code-execution-by-design.html">Remote Code Execution .. by design</a>: Example of malicious payload. The samples given could be used to test sandboxing rules.<br/>
</p>

        
<h2>
<a name="JSP_INCLUDE">JSP_INCLUDE: Dynamic JSP inclusion</a>
</h2>
            
<p>The inclusion of JSP file allow the entry of dynamic value. It may allow an attacker to control the JSP page included.
If this is the case, an attacker will try to include a file on disk that he controls. By including arbitrary files, the
attacker gets the ability to execute any code.
</p>
<p>
    <b>Vulnerable Code:</b>
    <pre>&lt;jsp:include page="${param.secret_param}" /&gt;</pre>
</p>
<p>
    <b>Solution:</b>
    <pre>&lt;c:if test="${param.secret_param == 'page1'}"&gt;
    &lt;jsp:include page="page1.jsp" /&gt;
&lt;/c:if&gt;</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://resources.infosecinstitute.com/file-inclusion-attacks/">InfosecInstitute: File Inclusion Attacks</a><br/>
<a href="http://projects.webappsec.org/w/page/13246955/Remote%20File%20Inclusion">WASC-05: Remote File Inclusion</a><br/>
</p>
            
        
<h2>
<a name="PATH_TRAVERSAL_IN">PATH_TRAVERSAL_IN: Potential Path Traversal (file read)</a>
</h2>
            
<p>A file is opened to read its content. The filename comes from an <b>input</b> parameter.
If an unfiltered parameter is passed to this file API, files from an arbitrary filesystem location could be read.</p>
<p>This rule identifies <b>potential</b> path traversal vulnerabilities. In many cases, the constructed file path cannot be controlled
by the user. If that is the case, the reported instance is a false positive.</p>
<br/>

<p>
    <b>Vulnerable Code:</b><br/>
<pre>@GET
@Path("/images/{image}")
@Produces("images/*")
public Response getImage(@javax.ws.rs.PathParam("image") String image) {
    File file = new File("resources/images/", image); //Weak point

    if (!file.exists()) {
        return Response.status(Status.NOT_FOUND).build();
    }

    return Response.ok().entity(new FileInputStream(file)).build();
}</pre>
</p>
<br/>

<p>
    <b>Solution:</b><br/>
<pre>import org.apache.commons.io.FilenameUtils;

@GET
@Path("/images/{image}")
@Produces("images/*")
public Response getImage(@javax.ws.rs.PathParam("image") String image) {
    File file = new File("resources/images/", FilenameUtils.getName(image)); //Fix

    if (!file.exists()) {
        return Response.status(Status.NOT_FOUND).build();
    }

    return Response.ok().entity(new FileInputStream(file)).build();
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="http://projects.webappsec.org/w/page/13246952/Path%20Traversal">WASC: Path Traversal</a><br/>
<a href="https://www.owasp.org/index.php/Path_Traversal">OWASP: Path Traversal</a><br/>
<a href="https://capec.mitre.org/data/definitions/126.html">CAPEC-126: Path Traversal</a><br/>
<a href="https://cwe.mitre.org/data/definitions/22.html">CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')</a>
</p>

        
<h2>
<a name="PATH_TRAVERSAL_OUT">PATH_TRAVERSAL_OUT: Potential Path Traversal (file write)</a>
</h2>
            
<p>A file is opened to write to its contents. The filename comes from an <b>input</b> parameter.
If an unfiltered parameter is passed to this file API, files at an arbitrary filesystem location could be modified.</p>
<p>This rule identifies <b>potential</b> path traversal vulnerabilities. In many cases, the constructed file path cannot be controlled
by the user. If that is the case, the reported instance is a false positive.</p>
<br/>
<p>
<b>References</b><br/>
<a href="http://projects.webappsec.org/w/page/13246952/Path%20Traversal">WASC-33: Path Traversal</a><br/>
<a href="https://www.owasp.org/index.php/Path_Traversal">OWASP: Path Traversal</a><br/>
<a href="https://capec.mitre.org/data/definitions/126.html">CAPEC-126: Path Traversal</a><br/>
<a href="https://cwe.mitre.org/data/definitions/22.html">CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')</a>
</p>

        
<h2>
<a name="REQUESTDISPATCHER_FILE_DISCLOSURE">REQUESTDISPATCHER_FILE_DISCLOSURE: RequestDispatcher File Disclosure</a>
</h2>
            
<p>
Constructing a server-side redirect path with user input could allow an attacker to download application binaries (including application classes or jar files) or view arbitrary files within protected directories.<br/>
An attacker may be able to forge a request parameter to match sensitive file locations. For example, requesting <code>"http://example.com/?jspFile=../applicationContext.xml%3F"</code> would display the application's <code>applicationContext.xml</code> file. The attacker would be able to locate and download the <code>applicationContext.xml</code> referenced in the other configuration files, and even class files or jar files, obtaining sensitive information and launching other types of attacks.
</p>
<p>
    <b>Vulnerable Code:</b><br/>
<pre>...
String jspFile = request.getParameter("jspFile");
request.getRequestDispatcher("/WEB-INF/jsps/" + jspFile + ".jsp").include(request, response);
...</pre>
</p>
<p>
    <b>Solution:</b><br/>
Avoid constructing server-side redirects using user controlled input.
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/552.html">CWE-552: Files or Directories Accessible to External Parties</a><br/>
</p>
            
        
<h2>
<a name="URLCONNECTION_SSRF_FD">URLCONNECTION_SSRF_FD: URLConnection Server-Side Request Forgery (SSRF) and File Disclosure</a>
</h2>
            
<p>
    Server-Side Request Forgery occur when a web server executes a request to a user supplied destination
    parameter that is not validated. Such vulnerabilities could allow an attacker to access internal services
    or to launch attacks from your web server.
</p>
<p>
    URLConnection can be used with file:// protocol or other protocols to access local filesystem and potentially other services.
<p>
    <b>Vulnerable Code:</b>
<pre>
new URL(String url).openConnection()
</pre>

<pre>
new URL(String url).openStream()
</pre>

<pre>
new URL(String url).getContent()
</pre>
</p>
<p>
    <b>Solution/Countermeasures:</b><br/>
    <ul>
        <li>Don't accept URL destinations from users</li>
        <li>Accept a destination key, and use it to look up the target destination associate with the key</li>
        <li>White list URLs (if possible)</li>
        <li>Validate that the beginning of the URL is part of a white list</li>
    </ul>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a><br/>
<a href="https://www.bishopfox.com/blog/2015/04/vulnerable-by-design-understanding-server-side-request-forgery/">Understanding Server-Side Request Forgery</a><br/>
<a href="https://cwe.mitre.org/data/definitions/73.html">CWE-73: External Control of File Name or Path</a><br/>
<a href="https://www.pwntester.com/blog/2013/11/28/abusing-jar-downloads/">Abusing jar:// downloads</a><br />
</p>
            
<h2>
<a name="XSS_SERVLET">XSS_SERVLET: Potential XSS in Servlet</a>
</h2>
            
<p>
A potential XSS was found. It could be used to execute unwanted JavaScript in a client's browser. (See references)
</p>
<p>
    <b>Vulnerable Code:</b>
<pre>protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
    String input1 = req.getParameter("input1");
    [...]
    resp.getWriter().write(input1);
}</pre>
</p>
<p>
    <b>Solution:</b>
<pre>protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
    String input1 = req.getParameter("input1");
    [...]
    resp.getWriter().write(Encode.forHtml(input1));
}</pre>
</p>
<p>
The best defense against XSS is context sensitive output encoding like the example above. There are typically 4 contexts to consider:
HTML, JavaScript, CSS (styles), and URLs. Please follow the XSS protection rules defined in the OWASP XSS Prevention Cheat Sheet,
which explains these defenses in significant detail.
</p>
<p>Note that this XSS in Servlet rule looks for similar issues, but looks for them in a different way than the existing
'XSS: Servlet reflected cross site scripting vulnerability' and 'XSS: Servlet reflected cross site scripting vulnerability in error page' rules in FindBugs.
</p>
<br/>
<p>
<b>References</b><br/>
<a href="http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting">WASC-8: Cross Site Scripting</a><br/>
<a href="https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet">OWASP: XSS Prevention Cheat Sheet</a><br/>
<a href="https://www.owasp.org/index.php/Top_10_2013-A3-Cross-Site_Scripting_%28XSS%29">OWASP: Top 10 2013-A3: Cross-Site Scripting (XSS)</a><br/>
<a href="https://cwe.mitre.org/data/definitions/79.html">CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')</a><br/>
<a href="https://code.google.com/p/owasp-java-encoder/">OWASP Java Encoder</a><br/>
</p>
            
        
<h2>
<a name="XXE_SAXPARSER">XXE_SAXPARSER: XML parsing vulnerable to XXE (SAXParser)</a>
</h2>
            
<!--XXE_GENERIC_START-->
<h3>Attack</h3>
<p>XML External Entity (XXE) attacks can occur when an XML parser supports XML entities while processing XML received
from an untrusted source.</p>
<p><b>Risk 1: Expose local file content (XXE: <u>X</u>ML E<u>x</u>ternal <u>E</u>ntity)</b></p>
<p>
<pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;
&lt;!DOCTYPE foo [
   &lt;!ENTITY xxe SYSTEM &quot;file:///etc/passwd&quot; &gt; ]&gt;
&lt;foo&gt;&amp;xxe;&lt;/foo&gt;</pre>
</p>
<b>Risk 2: Denial of service (XEE: <u>X</u>ML <u>E</u>ntity <u>E</u>xpansion)</b>
<p>
<pre>
&lt;?xml version=&quot;1.0&quot;?&gt;
&lt;!DOCTYPE lolz [
 &lt;!ENTITY lol &quot;lol&quot;&gt;
 &lt;!ELEMENT lolz (#PCDATA)&gt;
 &lt;!ENTITY lol1 &quot;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&quot;&gt;
 &lt;!ENTITY lol2 &quot;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&quot;&gt;
 &lt;!ENTITY lol3 &quot;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&quot;&gt;
[...]
 &lt;!ENTITY lol9 &quot;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&quot;&gt;
]&gt;
&lt;lolz&gt;&amp;lol9;&lt;/lolz&gt;</pre>
</p>

<h3>Solution</h3>
<p>
In order to avoid exposing dangerous feature of the XML parser, you can do the following change to the code.
</p>
<!--XXE_GENERIC_END-->

<p><b>Vulnerable Code:</b></p>
<p>
<pre>
SAXParser parser = SAXParserFactory.newInstance().newSAXParser();

parser.parse(inputStream, customHandler);</pre>
</p>
<br/>
<p>
The following snippets show two available solutions. You can set one feature or both.
</p>

<p><b>Solution using "Secure processing" mode:</b></p>
<p>
This setting will protect you against Denial of Service attack and remote file access.
<pre>
SAXParserFactory spf = SAXParserFactory.newInstance();
spf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
SAXParser parser = spf.newSAXParser();

parser.parse(inputStream, customHandler);</pre>
</p>

<p><b>Solution disabling DTD:</b></p>
<p>
By disabling DTD, almost all XXE attacks will be prevented.
<pre>
SAXParserFactory spf = SAXParserFactory.newInstance();
spf.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true);
SAXParser parser = spf.newSAXParser();

parser.parse(inputStream, customHandler);</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<!--XXE_GENERIC_START-->
<a href="https://cwe.mitre.org/data/definitions/611.html">CWE-611: Improper Restriction of XML External Entity Reference ('XXE')</a><br/>
<a href="https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=61702260">CERT: IDS10-J. Prevent XML external entity attacks</a><br/>
<a href="https://www.owasp.org/index.php/XML_External_Entity_%28XXE%29_Processing">OWASP.org: XML External Entity (XXE) Processing</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_Entity_Expansion">WS-Attacks.org: XML Entity Expansion</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_External_Entity_DOS">WS-Attacks.org: XML External Entity DOS</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_Entity_Reference_Attack">WS-Attacks.org: XML Entity Reference Attack</a><br/>
<a href="https://blog.h3xstream.com/2014/06/identifx-xml-external-entity.html">Identifx XML External Entity vulnerability (XXE)</a><br/>
<!--XXE_GENERIC_END-->
<a href="https://xerces.apache.org/xerces-j/features.html">Xerces complete features list</a>
</p>

        
<h2>
<a name="XXE_XMLSTREAMREADER">XXE_XMLSTREAMREADER: XML parsing vulnerable to XXE (XMLStreamReader)</a>
</h2>
            
<!--XXE_GENERIC_START-->
<h3>Attack</h3>
<p>XML External Entity (XXE) attacks can occur when an XML parser supports XML entities while processing XML received
from an untrusted source.</p>
<p><b>Risk 1: Expose local file content (XXE: <u>X</u>ML E<u>x</u>ternal <u>E</u>ntity)</b></p>
<p>
<pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;
&lt;!DOCTYPE foo [
   &lt;!ENTITY xxe SYSTEM &quot;file:///etc/passwd&quot; &gt; ]&gt;
&lt;foo&gt;&amp;xxe;&lt;/foo&gt;</pre>
</p>
<b>Risk 2: Denial of service (XEE: <u>X</u>ML <u>E</u>ntity <u>E</u>xpansion)</b>
<p>
<pre>
&lt;?xml version=&quot;1.0&quot;?&gt;
&lt;!DOCTYPE lolz [
 &lt;!ENTITY lol &quot;lol&quot;&gt;
 &lt;!ELEMENT lolz (#PCDATA)&gt;
 &lt;!ENTITY lol1 &quot;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&quot;&gt;
 &lt;!ENTITY lol2 &quot;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&quot;&gt;
 &lt;!ENTITY lol3 &quot;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&quot;&gt;
[...]
 &lt;!ENTITY lol9 &quot;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&quot;&gt;
]&gt;
&lt;lolz&gt;&amp;lol9;&lt;/lolz&gt;</pre>
</p>

<h3>Solution</h3>
<p>
In order to avoid exposing dangerous feature of the XML parser, you can do the following change to the code.
</p>
<!--XXE_GENERIC_END-->

<p><b>Vulnerable Code:</b></p>
<p>
<pre>public void parseXML(InputStream input) throws XMLStreamException {

    XMLInputFactory factory = XMLInputFactory.newFactory();
    XMLStreamReader reader = factory.createXMLStreamReader(input);
    [...]
}</pre>
</p>
<br/>
<p>
The following snippets show two available solutions. You can set one property or both.
</p>

<p><b>Solution disabling External Entities:</b></p>
<p>
<pre>public void parseXML(InputStream input) throws XMLStreamException {

    XMLInputFactory factory = XMLInputFactory.newFactory();
    factory.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false);
    XMLStreamReader reader = factory.createXMLStreamReader(input);
    [...]
}</pre>
</p>

<p><b>Solution disabling DTD:</b></p>
<p>
<pre>public void parseXML(InputStream input) throws XMLStreamException {

    XMLInputFactory factory = XMLInputFactory.newFactory();
    factory.setProperty(XMLInputFactory.SUPPORT_DTD, false);
    XMLStreamReader reader = factory.createXMLStreamReader(input);
    [...]
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<!--XXE_GENERIC_START-->
<a href="https://cwe.mitre.org/data/definitions/611.html">CWE-611: Improper Restriction of XML External Entity Reference ('XXE')</a><br/>
<a href="https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=61702260">CERT: IDS10-J. Prevent XML external entity attacks</a><br/>
<a href="https://www.owasp.org/index.php/XML_External_Entity_%28XXE%29_Processing">OWASP.org: XML External Entity (XXE) Processing</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_Entity_Expansion">WS-Attacks.org: XML Entity Expansion</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_External_Entity_DOS">WS-Attacks.org: XML External Entity DOS</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_Entity_Reference_Attack">WS-Attacks.org: XML Entity Reference Attack</a><br/>
<a href="https://blog.h3xstream.com/2014/06/identifx-xml-external-entity.html">Identifx XML External Entity vulnerability (XXE)</a><br/>
<!--XXE_GENERIC_END-->
<a href="https://openjdk.java.net/jeps/185">JEP 185: Restrict Fetching of External XML Resources</a>
</p>

        </body>
</html>
