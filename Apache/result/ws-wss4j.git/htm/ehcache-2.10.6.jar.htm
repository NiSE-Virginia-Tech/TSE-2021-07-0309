<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>SpotBugs Report</title>
<style type="text/css">
		.tablerow0 {
			background: #EEEEEE;
		}

		.tablerow1 {
			background: white;
		}

		.detailrow0 {
			background: #EEEEEE;
		}

		.detailrow1 {
			background: white;
		}

		.tableheader {
			background: #b9b9fe;
			font-size: larger;
		}

		.tablerow0:hover, .tablerow1:hover {
			background: #aaffaa;
		}

		.priority-1 {
		    color: red;
		    font-weight: bold;
		}
		.priority-2 {
		    color: orange;
		    font-weight: bold;
		}
		.priority-3 {
		    color: green;
		    font-weight: bold;
		}
		.priority-4 {
		    color: blue;
		    font-weight: bold;
		}
		</style>
<script type="text/javascript">
			function toggleRow(elid) {
				if (document.getElementById) {
					element = document.getElementById(elid);
					if (element) {
						if (element.style.display == 'none') {
							element.style.display = 'block';
							//window.status = 'Toggle on!';
						} else {
							element.style.display = 'none';
							//window.status = 'Toggle off!';
						}
					}
				}
			}
		</script>
</head>
<body>
<h1>
<a href="https://spotbugs.github.io/">SpotBugs</a> Report</h1>
<h2>Project Information</h2>
<p>Project: 
		</p>
<p>SpotBugs version: 3.1.12</p>
<p>Code analyzed:</p>
<ul>
<li>/home/x/CryptoAPIDetect/dataset/group/ws-wss4j.git/ehcache-2.10.6.jar</li>
</ul>
<p>
<br/>
<br/>
</p>
<h2>Metrics</h2>
<p>52488 lines of code analyzed,
	in 1284 classes, 
	in 101 packages.</p>
<table width="500" cellpadding="5" cellspacing="2">
<tr class="tableheader">
<th align="left">Metric</th>
<th align="right">Total</th>
<th align="right">Density*</th>
</tr>
<tr class="tablerow0">
<td>High Priority Warnings</td>
<td align="right">10</td>
<td align="right">0.19</td>
</tr>
<tr class="tablerow1">
<td>Medium Priority Warnings</td>
<td align="right">26</td>
<td align="right">0.50</td>
</tr>
<tr class="$totalClass">
<td>
<b>Total Warnings</b>
</td>
<td align="right">
<b>36</b>
</td>
<td align="right">
<b>0.69</b>
</td>
</tr>
</table>
<p>
<i>(* Defects per Thousand lines of non-commenting source statements)</i>
</p>
<p>
<br/>
<br/>
</p>
<h2>Contents</h2>
<ul>
<li>
<a href="#Warnings_SECURITY">Security Warnings</a>
</li>
<li>
<a href="#Details">Details</a>
</li>
</ul>
<h1>Summary</h1>
<table width="500" cellpadding="5" cellspacing="2">
<tr class="tableheader">
<th align="left">Warning Type</th>
<th align="right">Number</th>
</tr>
<tr class="tablerow0">
<td>
<a href="#Warnings_SECURITY">Security Warnings</a>
</td>
<td align="right">36</td>
</tr>
<tr class="tablerow1">
<td>
<b>Total</b>
</td>
<td align="right">
<b>36</b>
</td>
</tr>
</table>
<h1>Warnings</h1>
<p>Click on a warning row to see full context information.</p>
<h2>
<a name="Warnings_SECURITY">Security Warnings</a>
</h2>
<table class="warningtable" width="100%" cellspacing="0">
<tr class="tableheader">
<th align="left">Code</th>
<th align="left">Warning</th>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66086');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in net.sf.ehcache.Element.deepCopy(Object)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66086" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class net.sf.ehcache.Element<br/>In method net.sf.ehcache.Element.deepCopy(Object)<br/>At Element.java:[line 614]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67233');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in net.sf.ehcache.store.compound.ReadWriteSerializationCopyStrategy.copyForRead(Element, ClassLoader)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67233" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class net.sf.ehcache.store.compound.ReadWriteSerializationCopyStrategy<br/>In method net.sf.ehcache.store.compound.ReadWriteSerializationCopyStrategy.copyForRead(Element, ClassLoader)<br/>At ReadWriteSerializationCopyStrategy.java:[line 93]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67287');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in net.sf.ehcache.store.disk.DiskStorageFactory.loadIndex()</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67287" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class net.sf.ehcache.store.disk.DiskStorageFactory<br/>In method net.sf.ehcache.store.disk.DiskStorageFactory.loadIndex()<br/>At DiskStorageFactory.java:[line 1136]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67341');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in net.sf.ehcache.store.disk.DiskStorageFactory.loadIndex()</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67341" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class net.sf.ehcache.store.disk.DiskStorageFactory<br/>In method net.sf.ehcache.store.disk.DiskStorageFactory.loadIndex()<br/>At DiskStorageFactory.java:[line 1137]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67395');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in net.sf.ehcache.store.disk.DiskStorageFactory.loadIndex()</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67395" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class net.sf.ehcache.store.disk.DiskStorageFactory<br/>In method net.sf.ehcache.store.disk.DiskStorageFactory.loadIndex()<br/>At DiskStorageFactory.java:[line 1149]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67449');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in net.sf.ehcache.store.disk.DiskStorageFactory.loadIndex()</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67449" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class net.sf.ehcache.store.disk.DiskStorageFactory<br/>In method net.sf.ehcache.store.disk.DiskStorageFactory.loadIndex()<br/>At DiskStorageFactory.java:[line 1150]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67503');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in net.sf.ehcache.store.disk.DiskStorageFactory.read(DiskStorageFactory$DiskMarker)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67503" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class net.sf.ehcache.store.disk.DiskStorageFactory<br/>In method net.sf.ehcache.store.disk.DiskStorageFactory.read(DiskStorageFactory$DiskMarker)<br/>At DiskStorageFactory.java:[line 371]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67615');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in net.sf.ehcache.terracotta.RotatingSnapshotFile.readAll()</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67615" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class net.sf.ehcache.terracotta.RotatingSnapshotFile<br/>In method net.sf.ehcache.terracotta.RotatingSnapshotFile.readAll()<br/>At RotatingSnapshotFile.java:[line 143]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68155');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in org.terracotta.modules.ehcache.collections.SerializationHelper.deserialize(byte[])</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68155" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class org.terracotta.modules.ehcache.collections.SerializationHelper<br/>In method org.terracotta.modules.ehcache.collections.SerializationHelper.deserialize(byte[])<br/>At SerializationHelper.java:[line 34]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68209');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in org.terracotta.modules.ehcache.collections.SerializationHelper.deserializeFromString(String, ClassLoader)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68209" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class org.terracotta.modules.ehcache.collections.SerializationHelper<br/>In method org.terracotta.modules.ehcache.collections.SerializationHelper.deserializeFromString(String, ClassLoader)<br/>At SerializationHelper.java:[line 57]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66515');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66515" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class net.sf.ehcache.distribution.RMIBootstrapCacheLoader<br/>In method net.sf.ehcache.distribution.RMIBootstrapCacheLoader.doLoad(Ehcache)<br/>At RMIBootstrapCacheLoader.java:[line 137]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67117');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67117" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class net.sf.ehcache.store.AbstractPolicy<br/>In method net.sf.ehcache.store.AbstractPolicy.&lt;static initializer for AbstractPolicy&gt;()<br/>At AbstractPolicy.java:[line 38]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67175');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67175" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class net.sf.ehcache.store.chm.SelectableConcurrentHashMap<br/>In method new net.sf.ehcache.store.chm.SelectableConcurrentHashMap(PoolAccessor, int, float, int, long, RegisteredEventListeners)<br/>At SelectableConcurrentHashMap.java:[line 103]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67557');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67557" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class net.sf.ehcache.store.disk.DiskStore<br/>In method new net.sf.ehcache.store.disk.DiskStore(DiskStorageFactory, Ehcache, Pool, Pool)<br/>At DiskStore.java:[line 102]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67669');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67669" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class net.sf.ehcache.util.concurrent.Striped64$HashCode<br/>In method net.sf.ehcache.util.concurrent.Striped64$HashCode.&lt;static initializer for HashCode&gt;()<br/>At Striped64.java:[line 110]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67727');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67727" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class net.sf.ehcache.util.concurrent.ThreadLocalRandom<br/>In method new net.sf.ehcache.util.concurrent.ThreadLocalRandom()<br/>At ThreadLocalRandom.java:[line 76]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68097');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.lang.Math.random()) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68097" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.terracotta.modules.ehcache.WanAwareToolkitCache<br/>In method org.terracotta.modules.ehcache.WanAwareToolkitCache.goLive()<br/>At WanAwareToolkitCache.java:[line 657]<br/>Value java.lang.Math.random()</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68263');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68263" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.terracotta.statistics.jsr166e.Striped64$HashCode<br/>In method org.terracotta.statistics.jsr166e.Striped64$HashCode.&lt;static initializer for HashCode&gt;()<br/>At Striped64.java:[line 116]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68321');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68321" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.terracotta.statistics.jsr166e.ThreadLocalRandom<br/>In method new org.terracotta.statistics.jsr166e.ThreadLocalRandom()<br/>At ThreadLocalRandom.java:[line 80]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65551');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65551" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class net.sf.ehcache.CacheManager<br/>In method net.sf.ehcache.CacheManager.newInstance(String)<br/>At CacheManager.java:[line 939]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source net/sf/ehcache/CacheManager.newInstance(Ljava/lang/String;)Lnet/sf/ehcache/CacheManager; parameter 0<br/>Method usage not detected<br/>At CacheManager.java:[line 918]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65635');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65635" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class net.sf.ehcache.DiskStorePathManager<br/>In method new net.sf.ehcache.DiskStorePathManager()<br/>At DiskStorePathManager.java:[line 86]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/util/regex/Matcher.quoteReplacement(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source net/sf/ehcache/config/DiskStoreConfiguration$Env.substitute(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source net/sf/ehcache/config/DiskStoreConfiguration$Env.variable<br/>Unknown source net/sf/ehcache/config/DiskStoreConfiguration$Env.substitute(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source net/sf/ehcache/config/DiskStoreConfiguration.getDefaultPath()Ljava/lang/String;<br/>At DiskStorePathManager.java:[line 86]<br/>At DiskStoreConfiguration.java:[line 86]<br/>At DiskStoreConfiguration.java:[line 69]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65754');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65754" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class net.sf.ehcache.DiskStorePathManager<br/>In method new net.sf.ehcache.DiskStorePathManager(String)<br/>At DiskStorePathManager.java:[line 78]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source net/sf/ehcache/DiskStorePathManager.&lt;init&gt;(Ljava/lang/String;)V parameter 0<br/>At CacheManager.java:[line 769]<br/>At TerracottaBootstrapCacheLoader.java:[line 70]<br/>At TerracottaBootstrapCacheLoader.java:[line 81]<br/>At TerracottaBootstrapCacheLoader.java:[line 92]<br/>At TerracottaBootstrapCacheLoader.java:[line 105]<br/>At TerracottaBootstrapCacheLoaderFactory.java:[line 27]<br/>At TerracottaBootstrapCacheLoaderFactory.java:[line 35]<br/>At TerracottaBootstrapCacheLoaderFactory.java:[line 40]<br/>At TerracottaBootstrapCacheLoaderFactory.java:[line 43]<br/>At PropertyUtil.java:[line 53]<br/>At PropertyUtil.java:[line 55]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65933');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65933" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class net.sf.ehcache.DiskStorePathManager<br/>In method net.sf.ehcache.DiskStorePathManager.resolveAndLockIfExists(String)<br/>At DiskStorePathManager.java:[line 109]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source net/sf/ehcache/DiskStorePathManager.resolveAndLockIfExists(Ljava/lang/String;)Z parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66007');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66007" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class net.sf.ehcache.DiskStorePathManager<br/>In method net.sf.ehcache.DiskStorePathManager.resolveAndLockIfNeeded(boolean)<br/>At DiskStorePathManager.java:[line 152]<br/>Sink method java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;<br/>Sink parameter 0<br/>Unknown source net/sf/ehcache/DiskStorePathManager.initialPath<br/>At DiskStorePathManager.java:[line 152]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66627');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66627" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class net.sf.ehcache.management.DevModeClassLoader<br/>In method net.sf.ehcache.management.DevModeClassLoader.constructMavenLocalFile(String, String, String, String)<br/>At DevModeClassLoader.java:[line 123]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source net/sf/ehcache/management/DevModeClassLoader.constructMavenLocalFile(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/net/URL; parameter 3<br/>Unknown source net/sf/ehcache/management/DevModeClassLoader.constructMavenLocalFile(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/net/URL; parameter 2<br/>Unknown source net/sf/ehcache/management/DevModeClassLoader.constructMavenLocalFile(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/net/URL; parameter 1<br/>Unknown source net/sf/ehcache/management/DevModeClassLoader.constructMavenLocalFile(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/net/URL; parameter 0<br/>At DevModeClassLoader.java:[line 97]<br/>At DevModeClassLoader.java:[line 123]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66830');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66830" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class net.sf.ehcache.management.ResourceClassLoader<br/>In method net.sf.ehcache.management.ResourceClassLoader.translateFromVFSToPhysicalURL(URL)<br/>At ResourceClassLoader.java:[line 217]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/net/URL.getFile()Ljava/lang/String;<br/>Unknown source java/lang/reflect/Method.invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;<br/>At ResourceClassLoader.java:[line 217]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66914');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66914" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class net.sf.ehcache.management.ResourceClassLoader<br/>In method net.sf.ehcache.management.ResourceClassLoader.unpackVfsResourceToPhysicalURLLocation(URL, Object, Method)<br/>At ResourceClassLoader.java:[line 242]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/net/URL.getFile()Ljava/lang/String;<br/>Unknown source net/sf/ehcache/management/ResourceClassLoader.unpackVfsResourceToPhysicalURLLocation(Ljava/net/URL;Ljava/lang/Object;Ljava/lang/reflect/Method;)V parameter 2<br/>At ResourceClassLoader.java:[line 221]<br/>At ResourceClassLoader.java:[line 241]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67785');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67785" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.terracotta.modules.ehcache.ToolkitInstanceFactoryImpl$EhcacheTcConfig<br/>In method org.terracotta.modules.ehcache.ToolkitInstanceFactoryImpl$EhcacheTcConfig.isFile(String)<br/>At ToolkitInstanceFactoryImpl.java:[line 874]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/terracotta/modules/ehcache/ToolkitInstanceFactoryImpl$EhcacheTcConfig.isFile(Ljava/lang/String;)Z parameter 0<br/>At TerracottaClientConfiguration.java:[line 100]<br/>At ToolkitInstanceFactoryImpl.java:[line 852]<br/>At ToolkitInstanceFactoryImpl.java:[line 853]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67884');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67884" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.terracotta.modules.ehcache.ToolkitInstanceFactoryImpl$EhcacheTcConfig<br/>In method org.terracotta.modules.ehcache.ToolkitInstanceFactoryImpl$EhcacheTcConfig.slurpFile(String)<br/>At ToolkitInstanceFactoryImpl.java:[line 867]<br/>Sink method java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/terracotta/modules/ehcache/ToolkitInstanceFactoryImpl$EhcacheTcConfig.slurpFile(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>At TerracottaClientConfiguration.java:[line 100]<br/>At ToolkitInstanceFactoryImpl.java:[line 852]<br/>At ToolkitInstanceFactoryImpl.java:[line 854]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66140');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66140" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class net.sf.ehcache.config.ConfigurationFactory<br/>In method net.sf.ehcache.config.ConfigurationFactory.parseConfiguration(URL)<br/>At ConfigurationFactory.java:[line 102]<br/>Sink method java/net/URL.openStream()Ljava/io/InputStream;<br/>Sink parameter 0<br/>Unknown source net/sf/ehcache/config/ConfigurationFactory.parseConfiguration(Ljava/net/URL;)Lnet/sf/ehcache/config/Configuration; parameter 0<br/>At CacheManager.java:[line 331]<br/>At CacheManager.java:[line 389]<br/>At CacheManager.java:[line 746]<br/>At CacheManager.java:[line 971]<br/>At CacheManager.java:[line 1004]<br/>At ConfigurationSource.java:[line 147]<br/>At EhCacheProvider.java:[line 90]<br/>At EhCacheProvider.java:[line 97]<br/>At EhCacheProvider.java:[line 101]<br/>At EhCacheRegionFactory.java:[line 66]<br/>At EhCacheRegionFactory.java:[line 74]<br/>At EhCacheRegionFactory.java:[line 78]<br/>At HibernateUtil.java:[line 47]<br/>At SingletonEhCacheProvider.java:[line 87]<br/>At SingletonEhCacheProvider.java:[line 95]<br/>At SingletonEhCacheProvider.java:[line 104]<br/>At SingletonEhCacheRegionFactory.java:[line 59]<br/>At SingletonEhCacheRegionFactory.java:[line 67]<br/>At SingletonEhCacheRegionFactory.java:[line 76]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66731');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66731" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class net.sf.ehcache.management.DevModeClassLoader<br/>In method net.sf.ehcache.management.DevModeClassLoader.getResourceAsStream(String)<br/>At DevModeClassLoader.java:[line 193]<br/>Sink method java/net/URL.openStream()Ljava/io/InputStream;<br/>Sink parameter 0<br/>Unknown source net/sf/ehcache/management/DevModeClassLoader.getResource(Ljava/lang/String;)Ljava/net/URL;<br/>Unknown source net/sf/ehcache/management/DevModeClassLoader.findResource(Ljava/lang/String;)Ljava/net/URL;<br/>Unknown source java/net/URLClassLoader.findResource(Ljava/lang/String;)Ljava/net/URL;<br/>At DevModeClassLoader.java:[line 163]<br/>At DevModeClassLoader.java:[line 190]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67008');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67008" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class net.sf.ehcache.pool.sizeof.filter.ResourceSizeOfFilter<br/>In method new net.sf.ehcache.pool.sizeof.filter.ResourceSizeOfFilter(URL)<br/>At ResourceSizeOfFilter.java:[line 49]<br/>Sink method java/net/URL.openStream()Ljava/io/InputStream;<br/>Sink parameter 0<br/>Unknown source net/sf/ehcache/pool/sizeof/filter/ResourceSizeOfFilter.&lt;init&gt;(Ljava/net/URL;)V parameter 0<br/>At DefaultSizeOfEngine.java:[line 158]<br/>At DefaultSizeOfEngine.java:[line 162]<br/>At DefaultSizeOfEngine.java:[line 163]<br/>At DefaultSizeOfEngine.java:[line 166]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67983');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67983" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.terracotta.modules.ehcache.ToolkitInstanceFactoryImpl$EhcacheTcConfig<br/>In method org.terracotta.modules.ehcache.ToolkitInstanceFactoryImpl$EhcacheTcConfig.fetchConfigFromURL(String)<br/>At ToolkitInstanceFactoryImpl.java:[line 880]<br/>Sink method java/net/URL.openStream()Ljava/io/InputStream;<br/>Sink parameter 0<br/>Unknown source org/terracotta/modules/ehcache/ToolkitInstanceFactoryImpl$EhcacheTcConfig.fetchConfigFromURL(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/net/URL.&lt;init&gt;(Ljava/lang/String;)V<br/>At TerracottaClientConfiguration.java:[line 100]<br/>At ToolkitInstanceFactoryImpl.java:[line 852]<br/>At ToolkitInstanceFactoryImpl.java:[line 856]<br/>At ToolkitInstanceFactoryImpl.java:[line 880]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66573');">
<td>
<span class="priority-2">SECUSS</span>
</td>
<td>Unencrypted server socket (instead of SSLServerSocket)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66573" style="display: none;">
<a href="#UNENCRYPTED_SERVER_SOCKET">Bug type UNENCRYPTED_SERVER_SOCKET (click for details)</a>
<br/>In class net.sf.ehcache.distribution.RMICacheManagerPeerListener<br/>In method net.sf.ehcache.distribution.RMICacheManagerPeerListener.getFreePort()<br/>At RMICacheManagerPeerListener.java:[line 180]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66399');">
<td>
<span class="priority-2">SECXXESAX</span>
</td>
<td>The use of SAXParser.parse(...) (SAXParser) is vulnerable to XML External Entity attacks</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66399" style="display: none;">
<a href="#XXE_SAXPARSER">Bug type XXE_SAXPARSER (click for details)</a>
<br/>In class net.sf.ehcache.config.ConfigurationFactory<br/>In method net.sf.ehcache.config.ConfigurationFactory.parseCacheConfiguration(String)<br/>At ConfigurationFactory.java:[line 174]<br/>Value SAXParser.parse(...)</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66457');">
<td>
<span class="priority-2">SECXXESAX</span>
</td>
<td>The use of SAXParser.parse(...) (SAXParser) is vulnerable to XML External Entity attacks</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66457" style="display: none;">
<a href="#XXE_SAXPARSER">Bug type XXE_SAXPARSER (click for details)</a>
<br/>In class net.sf.ehcache.config.ConfigurationFactory<br/>In method net.sf.ehcache.config.ConfigurationFactory.parseConfiguration(InputStream)<br/>At ConfigurationFactory.java:[line 157]<br/>Value SAXParser.parse(...)</p>
</td>
</tr>
</table>
<h1>
<a name="Details">Details</a>
</h1>
<h2>
<a name="OBJECT_DESERIALIZATION">OBJECT_DESERIALIZATION: Object deserialization is used in {1}</a>
</h2>
            
<p>
    Object deserialization of untrusted data can lead to remote code execution, if there is a class in classpath that allows
    the trigger of malicious operation.
</p>
<p>
    Libraries developers tend to fix class that provided potential malicious trigger. There are still classes that are
    known to trigger Denial of Service<sup>[1]</sup>.
</p>
<p>
    Deserialization is a sensible operation that has a great history of vulnerabilities. The web application might
    become vulnerable as soon as a new vulnerability is found in the Java Virtual Machine<sup>[2] [3]</sup>.
</p>

<p>
<b>Code at risk:</b><br/>
<pre>
public UserData deserializeObject(InputStream receivedFile) throws IOException, ClassNotFoundException {

    try (ObjectInputStream in = new ObjectInputStream(receivedFile)) {
        return (UserData) in.readObject();
    }
}
</pre>
</p>

<p>
<b>Solutions:</b><br/>
<p>
Avoid deserializing object provided by remote users.
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/502.html">CWE-502: Deserialization of Untrusted Data</a><br/>
<a href="https://www.owasp.org/index.php/Deserialization_of_untrusted_data">Deserialization of untrusted data</a><br/>
<a href="https://www.oracle.com/technetwork/java/seccodeguide-139067.html#8">Serialization and Deserialization </a><br/>
<a href="https://github.com/frohoff/ysoserial">A tool for generating payloads that exploit unsafe Java object deserialization</a><br/>
[1] <a href="https://gist.github.com/coekie/a27cc406fc9f3dc7a70d">Example of Denial of Service using the class <code>java.util.HashSet</code></a><br/>
[2] <a href="https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2015-2590">OpenJDK: Deserialization issue in ObjectInputStream.readSerialData() (CVE-2015-2590)</a><br/>
[3] <a href="https://www.rapid7.com/db/modules/exploit/multi/browser/java_calendar_deserialize">Rapid7: Sun Java Calendar Deserialization Privilege Escalation (CVE-2008-5353)</a>
</p>

        
<h2>
<a name="PREDICTABLE_RANDOM">PREDICTABLE_RANDOM: Predictable pseudorandom number generator</a>
</h2>
            
<p>The use of a predictable random value can lead to vulnerabilities when used in certain security critical contexts. For example, when the value is used as:</p>
<ul>
<li>a CSRF token: a predictable token can lead to a CSRF attack as an attacker will know the value of the token</li>
<li>a password reset token (sent by email): a predictable password token can lead to an account takeover, since an attacker will guess the URL of the "change password" form</li>
<li>any other secret value</li>
</ul>
<p>
A quick fix could be to replace the use of <code>java.util.Random</code> with something stronger, such as <code>java.security.SecureRandom</code>.
</p>
<p>
<b>Vulnerable Code:</b><br/>
<pre>String generateSecretToken() {
    Random r = new Random();
    return Long.toHexString(r.nextLong());
}</pre>
</p>
<p>
<b>Solution:</b>
<pre>import org.apache.commons.codec.binary.Hex;

String generateSecretToken() {
    SecureRandom secRandom = new SecureRandom();

    byte[] result = new byte[32];
    secRandom.nextBytes(result);
    return Hex.encodeHexString(result);
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://jazzy.id.au/2010/09/20/cracking_random_number_generators_part_1.html">Cracking Random Number Generators - Part 1 (https://jazzy.id.au)</a><br/>
<a href="https://www.securecoding.cert.org/confluence/display/java/MSC02-J.+Generate+strong+random+numbers">CERT: MSC02-J. Generate strong random numbers</a><br/>
<a href="https://cwe.mitre.org/data/definitions/330.html">CWE-330: Use of Insufficiently Random Values</a><br/>
<a href="https://blog.h3xstream.com/2014/12/predicting-struts-csrf-token-cve-2014.html">Predicting Struts CSRF Token (Example of real-life vulnerability and exploitation)</a>
</p>

        
<h2>
<a name="PATH_TRAVERSAL_IN">PATH_TRAVERSAL_IN: Potential Path Traversal (file read)</a>
</h2>
            
<p>A file is opened to read its content. The filename comes from an <b>input</b> parameter.
If an unfiltered parameter is passed to this file API, files from an arbitrary filesystem location could be read.</p>
<p>This rule identifies <b>potential</b> path traversal vulnerabilities. In many cases, the constructed file path cannot be controlled
by the user. If that is the case, the reported instance is a false positive.</p>
<br/>

<p>
    <b>Vulnerable Code:</b><br/>
<pre>@GET
@Path("/images/{image}")
@Produces("images/*")
public Response getImage(@javax.ws.rs.PathParam("image") String image) {
    File file = new File("resources/images/", image); //Weak point

    if (!file.exists()) {
        return Response.status(Status.NOT_FOUND).build();
    }

    return Response.ok().entity(new FileInputStream(file)).build();
}</pre>
</p>
<br/>

<p>
    <b>Solution:</b><br/>
<pre>import org.apache.commons.io.FilenameUtils;

@GET
@Path("/images/{image}")
@Produces("images/*")
public Response getImage(@javax.ws.rs.PathParam("image") String image) {
    File file = new File("resources/images/", FilenameUtils.getName(image)); //Fix

    if (!file.exists()) {
        return Response.status(Status.NOT_FOUND).build();
    }

    return Response.ok().entity(new FileInputStream(file)).build();
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="http://projects.webappsec.org/w/page/13246952/Path%20Traversal">WASC: Path Traversal</a><br/>
<a href="https://www.owasp.org/index.php/Path_Traversal">OWASP: Path Traversal</a><br/>
<a href="https://capec.mitre.org/data/definitions/126.html">CAPEC-126: Path Traversal</a><br/>
<a href="https://cwe.mitre.org/data/definitions/22.html">CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')</a>
</p>

        
<h2>
<a name="URLCONNECTION_SSRF_FD">URLCONNECTION_SSRF_FD: URLConnection Server-Side Request Forgery (SSRF) and File Disclosure</a>
</h2>
            
<p>
    Server-Side Request Forgery occur when a web server executes a request to a user supplied destination
    parameter that is not validated. Such vulnerabilities could allow an attacker to access internal services
    or to launch attacks from your web server.
</p>
<p>
    URLConnection can be used with file:// protocol or other protocols to access local filesystem and potentially other services.
<p>
    <b>Vulnerable Code:</b>
<pre>
new URL(String url).openConnection()
</pre>

<pre>
new URL(String url).openStream()
</pre>

<pre>
new URL(String url).getContent()
</pre>
</p>
<p>
    <b>Solution/Countermeasures:</b><br/>
    <ul>
        <li>Don't accept URL destinations from users</li>
        <li>Accept a destination key, and use it to look up the target destination associate with the key</li>
        <li>White list URLs (if possible)</li>
        <li>Validate that the beginning of the URL is part of a white list</li>
    </ul>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a><br/>
<a href="https://www.bishopfox.com/blog/2015/04/vulnerable-by-design-understanding-server-side-request-forgery/">Understanding Server-Side Request Forgery</a><br/>
<a href="https://cwe.mitre.org/data/definitions/73.html">CWE-73: External Control of File Name or Path</a><br/>
<a href="https://www.pwntester.com/blog/2013/11/28/abusing-jar-downloads/">Abusing jar:// downloads</a><br />
</p>
            
<h2>
<a name="UNENCRYPTED_SERVER_SOCKET">UNENCRYPTED_SERVER_SOCKET: Unencrypted Server Socket</a>
</h2>
            
<p>
The communication channel used is not encrypted. The traffic could be read by an attacker intercepting the network traffic.
</p>
<p>
<b>Vulnerable Code:</b><br/>
Plain server socket (Cleartext communication):
<pre>ServerSocket soc = new ServerSocket(1234);</pre>
</p>
<p>
<b>Solution:</b><br/>
SSL Server Socket (Secure communication):
<pre>ServerSocket soc = SSLServerSocketFactory.getDefault().createServerSocket(1234);</pre>
</p>
<p>Beyond using an SSL server socket, you need to make sure your use of SSLServerSocketFactory does all the appropriate certificate validation checks to
make sure you are not subject to man-in-the-middle attacks. Please read the OWASP Transport Layer Protection Cheat Sheet for details on how
to do this correctly.
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://www.owasp.org/index.php/Top_10_2010-A9">OWASP: Top 10 2010-A9-Insufficient Transport Layer Protection</a><br/>
<a href="https://www.owasp.org/index.php/Top_10_2013-A6-Sensitive_Data_Exposure">OWASP: Top 10 2013-A6-Sensitive Data Exposure</a><br/>
<a href="https://www.owasp.org/index.php/Transport_Layer_Protection_Cheat_Sheet">OWASP: Transport Layer Protection Cheat Sheet</a><br/>
<a href="http://projects.webappsec.org/w/page/13246945/Insufficient%20Transport%20Layer%20Protection">WASC-04: Insufficient Transport Layer Protection</a><br/>
<a href="https://cwe.mitre.org/data/definitions/319.html">CWE-319: Cleartext Transmission of Sensitive Information</a>
</p>

        
<h2>
<a name="XXE_SAXPARSER">XXE_SAXPARSER: XML parsing vulnerable to XXE (SAXParser)</a>
</h2>
            
<!--XXE_GENERIC_START-->
<h3>Attack</h3>
<p>XML External Entity (XXE) attacks can occur when an XML parser supports XML entities while processing XML received
from an untrusted source.</p>
<p><b>Risk 1: Expose local file content (XXE: <u>X</u>ML E<u>x</u>ternal <u>E</u>ntity)</b></p>
<p>
<pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;
&lt;!DOCTYPE foo [
   &lt;!ENTITY xxe SYSTEM &quot;file:///etc/passwd&quot; &gt; ]&gt;
&lt;foo&gt;&amp;xxe;&lt;/foo&gt;</pre>
</p>
<b>Risk 2: Denial of service (XEE: <u>X</u>ML <u>E</u>ntity <u>E</u>xpansion)</b>
<p>
<pre>
&lt;?xml version=&quot;1.0&quot;?&gt;
&lt;!DOCTYPE lolz [
 &lt;!ENTITY lol &quot;lol&quot;&gt;
 &lt;!ELEMENT lolz (#PCDATA)&gt;
 &lt;!ENTITY lol1 &quot;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&quot;&gt;
 &lt;!ENTITY lol2 &quot;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&quot;&gt;
 &lt;!ENTITY lol3 &quot;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&quot;&gt;
[...]
 &lt;!ENTITY lol9 &quot;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&quot;&gt;
]&gt;
&lt;lolz&gt;&amp;lol9;&lt;/lolz&gt;</pre>
</p>

<h3>Solution</h3>
<p>
In order to avoid exposing dangerous feature of the XML parser, you can do the following change to the code.
</p>
<!--XXE_GENERIC_END-->

<p><b>Vulnerable Code:</b></p>
<p>
<pre>
SAXParser parser = SAXParserFactory.newInstance().newSAXParser();

parser.parse(inputStream, customHandler);</pre>
</p>
<br/>
<p>
The following snippets show two available solutions. You can set one feature or both.
</p>

<p><b>Solution using "Secure processing" mode:</b></p>
<p>
This setting will protect you against Denial of Service attack and remote file access.
<pre>
SAXParserFactory spf = SAXParserFactory.newInstance();
spf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
SAXParser parser = spf.newSAXParser();

parser.parse(inputStream, customHandler);</pre>
</p>

<p><b>Solution disabling DTD:</b></p>
<p>
By disabling DTD, almost all XXE attacks will be prevented.
<pre>
SAXParserFactory spf = SAXParserFactory.newInstance();
spf.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true);
SAXParser parser = spf.newSAXParser();

parser.parse(inputStream, customHandler);</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<!--XXE_GENERIC_START-->
<a href="https://cwe.mitre.org/data/definitions/611.html">CWE-611: Improper Restriction of XML External Entity Reference ('XXE')</a><br/>
<a href="https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=61702260">CERT: IDS10-J. Prevent XML external entity attacks</a><br/>
<a href="https://www.owasp.org/index.php/XML_External_Entity_%28XXE%29_Processing">OWASP.org: XML External Entity (XXE) Processing</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_Entity_Expansion">WS-Attacks.org: XML Entity Expansion</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_External_Entity_DOS">WS-Attacks.org: XML External Entity DOS</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_Entity_Reference_Attack">WS-Attacks.org: XML Entity Reference Attack</a><br/>
<a href="https://blog.h3xstream.com/2014/06/identifx-xml-external-entity.html">Identifx XML External Entity vulnerability (XXE)</a><br/>
<!--XXE_GENERIC_END-->
<a href="https://xerces.apache.org/xerces-j/features.html">Xerces complete features list</a>
</p>

        </body>
</html>
