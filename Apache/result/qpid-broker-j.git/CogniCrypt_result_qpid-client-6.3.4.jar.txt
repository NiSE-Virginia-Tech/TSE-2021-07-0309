[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 907.1 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 33 analysis seeds within 1 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.03

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 34
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.06

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 35
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.09

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 36
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.11

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 38
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.13

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.15

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.17

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 42
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.19

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 42
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.21

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 42
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.24

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 42
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.26

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 42
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.29

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 42
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.31

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 14 of 42
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 15 of 42
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.36

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 16 of 43
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.37

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 17 of 43
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.4

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 18 of 43
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.42

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 19 of 43
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.44

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 20 of 43
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.47

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 21 of 44
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.48

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 22 of 45
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.49

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 23 of 46
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 24 of 46
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.52

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 25 of 47
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.53

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 26 of 47
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.55

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 27 of 48
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.56

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 28 of 50
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.56

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 29 of 52
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.56

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 30 of 53
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.57

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 31 of 53
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.58

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 32 of 53
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.6

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 33 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.6

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 34 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.62

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 35 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.64

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 36 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.65

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 37 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 38 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.69

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 39 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.71

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 40 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.73

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 41 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.75

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 42 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.76

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 43 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.78

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 44 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.8

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 45 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.82

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 46 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.84

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 47 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.85

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 48 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.87

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 49 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.89

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 50 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.91

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 51 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.93

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 52 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.95

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 53 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.96

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 54 of 55
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.98

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r3
		Type: java.security.KeyStore
		Statement: r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r8)
		Method: <org.apache.qpid.transport.ConnectionSettings: javax.net.ssl.TrustManager[] getTrustManagers(java.lang.String)>
		SHA-256: bb1f4588cd5d7e40d30d3da817753f6843001ad1c747c342602a570257086c3a
		Secure: true
	Object:
		Variable: r18
		Type: javax.net.ssl.TrustManagerFactory
		Statement: r18 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r9)
		Method: <org.apache.qpid.transport.ConnectionSettings: javax.net.ssl.TrustManager[] getTrustManagers(java.lang.String)>
		SHA-256: 93ce8aa61fbbcd29702579277bbd10b3f5e807d69f7c9658d3b5d973b5448735
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke r3.<javax.crypto.Mac: byte[] doFinal()>()
		Method: <org.apache.qpid.client.security.scram.AbstractScramSaslClient: byte[] computeHmac(byte[],java.lang.String)>
		SHA-256: 80142936b8470242575da4d798d13260fca20507d717472c8fd710f784918db7
		Secure: true
	Object:
		Variable: r7
		Type: javax.net.ssl.KeyManagerFactory
		Statement: r7 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(r5)
		Method: <org.apache.qpid.transport.network.security.ssl.QpidClientX509KeyManager: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: bd70fa277a62327ca5a02048fc9971241a6d6f0e9f553ed670078cbae470553a
		Secure: false
	Object:
		Variable: r47
		Type: javax.crypto.Cipher
		Statement: r47 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r4)
		Method: <org.apache.qpid.client.message.Encrypted091MessageFactory: org.apache.qpid.client.message.AbstractJMSMessage createMessage(org.apache.qpid.client.message.AbstractAMQMessageDelegate,java.nio.ByteBuffer)>
		SHA-256: 152970406409c046821ba04681ad92d207109ba7f434e66b2e7c5c3532953d6a
		Secure: false
	Object:
		Variable: r4
		Type: byte[]
		Statement: r4 = virtualinvoke r16.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.qpid.client.PooledConnectionFactory$ConnectionDetailsIdentifier: org.apache.qpid.client.PooledConnectionFactory$ConnectionDetailsIdentifier newInstance(byte[],java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: eff14ed01767d343d048c34b7020e9f34a0b9b1c8908edebef2f656e407f4073
		Secure: true
	Object:
		Variable: r21
		Type: javax.crypto.Cipher
		Statement: r21 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r4)
		Method: <org.apache.qpid.client.message.MessageEncryptionHelper: byte[] encrypt(javax.crypto.spec.SecretKeySpec,byte[],byte[])>
		SHA-256: 7383bea51d6325c4ce676cb5af4238ed9ee713be871bd0dba367ae61bdd83ad8
		Secure: false
	Object:
		Variable: r8
		Type: javax.crypto.Cipher
		Statement: r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r4)
		Method: <org.apache.qpid.client.message.MessageEncryptionHelper: java.util.List getKeyTransportRecipientInfo(java.util.List,javax.crypto.spec.SecretKeySpec)>
		SHA-256: 61bac3a3920e2ae6bddb6bdf20575f96e7d068c2491b2d1faf51cc0b4aed8b5d
		Secure: false
	Object:
		Variable: r6
		Type: javax.net.ssl.TrustManager[]
		Statement: r6 = virtualinvoke r5.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <org.apache.qpid.ssl.SSLContextFactory: javax.net.ssl.TrustManager[] getTrustManagers(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 321f741d0bde9703166eda54edcb7d00d5698c6634f34e194232fed4458eb0
		Secure: false
	Object:
		Variable: r5
		Type: byte[]
		Statement: r5 = virtualinvoke r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.qpid.client.security.UsernameHashedPasswordCallbackHandler: char[] getHash(java.lang.String)>
		SHA-256: fddbe4f45f9483c3d6cd1169ff1874a135e397be495263a4f0f1484a242874f8
		Secure: false
	Object:
		Variable: r44
		Type: java.security.KeyStore
		Statement: r44 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r43)
		Method: <org.apache.qpid.transport.ConnectionSettings: javax.net.ssl.KeyManager[] getKeyManagers(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: dd3bbeefa653aa6981c723d805cedc6d82b573811fa57bc54108b13b9b691466
		Secure: false
	Object:
		Variable: $r9
		Type: javax.net.ssl.KeyManager[]
		Statement: $r9 = virtualinvoke r7.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <org.apache.qpid.transport.network.security.ssl.QpidClientX509KeyManager: void <init>(java.lang.String,java.net.URL,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: efca9e354385fab1d3b42720ff22d2537ca5f44a49e85881c57fa3006a368ce2
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r8.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r9, r2)
		Method: <org.apache.qpid.client.message.MessageEncryptionHelper: byte[] readFromCipherStream(byte[],int,int,javax.crypto.Cipher)>
		SHA-256: 11a030a84a947ef1c53dfb3fa65a8be208f7a7a8244ac4a28f3a1e4483ec8b64
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: virtualinvoke $r6.<java.security.SecureRandom: void nextBytes(byte[])>(r1)
		Method: <org.apache.qpid.client.message.MessageEncryptionHelper: void getRandomBytes(byte[])>
		SHA-256: 200870f3cd376e114985fd1ea84949e8204cd6d2bfb5ee07ffec3018859a3285
		Secure: true
	Object:
		Variable: r11
		Type: javax.crypto.Cipher
		Statement: r11 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r6)
		Method: <org.apache.qpid.client.message.Encrypted010MessageFactory: javax.crypto.spec.SecretKeySpec getContentEncryptionKey(java.util.Collection,java.lang.String,org.apache.qpid.client.AMQSession)>
		SHA-256: 92464d0c04b3d5e74d825144f105e5ae77d8d81619ca58b8d752a1f466981128
		Secure: false
	Object:
		Variable: r16
		Type: java.security.MessageDigest
		Statement: r16 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2289)
		Method: <org.apache.qpid.client.PooledConnectionFactory$ConnectionDetailsIdentifier: org.apache.qpid.client.PooledConnectionFactory$ConnectionDetailsIdentifier newInstance(byte[],java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 7197fe15aeb5e21d8aed618e8364a5ad34e9136999eece4c8433321206e91697
		Secure: true
	Object:
		Variable: $r26
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r26.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r12, $r28)
		Method: <org.apache.qpid.client.message.Encrypted010MessageFactory: javax.crypto.spec.SecretKeySpec getContentEncryptionKey(java.util.Collection,java.lang.String,org.apache.qpid.client.AMQSession)>
		SHA-256: f799be11da7beefea4be569f41d136384ddd69a66bf084dd5059a1c2e3de0467
		Secure: false
	Object:
		Variable: $r28
		Type: java.lang.String
		Statement: specialinvoke $r26.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r12, $r28)
		Method: <org.apache.qpid.client.message.Encrypted091MessageFactory: javax.crypto.spec.SecretKeySpec getContentEncryptionKey(java.util.Collection,java.lang.String,org.apache.qpid.client.AMQSession)>
		SHA-256: 5ee91e55cc97eb995a51ab0756f3e9b4c1f7421427cb8fc5cae47d8dc31dd475
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.SecureRandom
		Statement: specialinvoke $r7.<java.security.SecureRandom: void <init>()>()
		Method: <org.apache.qpid.client.message.MessageEncryptionHelper: void getRandomBytes(byte[])>
		SHA-256: f3ef831bebb0f368ad204e3f286730895f429fe47113ec1257e89ede22c282e4
		Secure: true
	Object:
		Variable: r2
		Type: javax.crypto.Mac
		Statement: r2 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r5)
		Method: <org.apache.qpid.client.security.scram.AbstractScramSaslClient: javax.crypto.Mac createHmac(byte[])>
		SHA-256: 40a5a502e521cc9dece557b57da6eb521d0c5980c8eb560ceb5c68e43ed7ae6d
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r3)
		Method: <org.apache.qpid.client.message.MessageEncryptionHelper: byte[] encrypt(javax.crypto.spec.SecretKeySpec,byte[],byte[])>
		SHA-256: 17eded62656c3910a242451ff2dc6e27e396db0b2c1c4c21e2c8244199adb04d
		Secure: true
	Object:
		Variable: $r26
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r26.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r12, $r28)
		Method: <org.apache.qpid.client.message.Encrypted091MessageFactory: javax.crypto.spec.SecretKeySpec getContentEncryptionKey(java.util.Collection,java.lang.String,org.apache.qpid.client.AMQSession)>
		SHA-256: 28a690d4451a2537b353141bb0fb948ed82a51f0123c789ac7f8821a46bf5452
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer2389)
		Method: <org.apache.qpid.client.message.MessageEncryptionHelper: javax.crypto.spec.SecretKeySpec createSecretKey()>
		SHA-256: 1347697e42f7248fd38b6090dc46eb5b32762ece996b8cc3b156ce15347e92ff
		Secure: false
	Object:
		Variable: r3
		Type: byte[]
		Statement: r3 = virtualinvoke r2.<javax.crypto.Mac: byte[] doFinal()>()
		Method: <org.apache.qpid.client.security.scram.AbstractScramSaslClient: byte[] generateSaltedPassword(byte[])>
		SHA-256: a2f3ef16439c61a496a9ad978c4239c3c27f3ba600ccaa58bf6b8788e97096bc
		Secure: true
	Object:
		Variable: r5
		Type: byte[]
		Statement: r5 = virtualinvoke r16.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.qpid.client.PooledConnectionFactory$ConnectionDetailsIdentifier: org.apache.qpid.client.PooledConnectionFactory$ConnectionDetailsIdentifier newInstance(byte[],java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 72fd3cbed04c067b663c5528a17fcf36d11a574513f739b311eecf07da5f2480
		Secure: true
	Object:
		Variable: r11
		Type: javax.crypto.Cipher
		Statement: r11 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r6)
		Method: <org.apache.qpid.client.message.Encrypted091MessageFactory: javax.crypto.spec.SecretKeySpec getContentEncryptionKey(java.util.Collection,java.lang.String,org.apache.qpid.client.AMQSession)>
		SHA-256: 870c13bef55d0be71f78662baf93d140f816695065bf10408711dd9c9a4395a3
		Secure: false
	Object:
		Variable: r53
		Type: java.security.KeyStore
		Statement: r53 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r24)
		Method: <org.apache.qpid.client.AMQConnection: java.security.KeyStore getBrokerSuppliedTrustStore(java.lang.String)>
		SHA-256: 41de6ae9e7eddf7d37a58988d5e6a1aaf83581e46ed43b52bfc61ee8dedd3aaf
		Secure: false
	Object:
		Variable: r9
		Type: byte[]
		Statement: r9 = virtualinvoke r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r22)
		Method: <org.apache.qpid.client.message.MessageEncryptionHelper: java.util.List getKeyTransportRecipientInfo(java.util.List,javax.crypto.spec.SecretKeySpec)>
		SHA-256: 8a886d18f1d9409d103725c0ec89bf7551258e11dbb6b260100011e8671e504
		Secure: false
	Object:
		Variable: r3
		Type: java.security.MessageDigest
		Statement: r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6412)
		Method: <org.apache.qpid.client.security.UsernameHashedPasswordCallbackHandler: char[] getHash(java.lang.String)>
		SHA-256: 8d6735d519aa07b59a6992fc4c90696e63b2b6e39240af545273a83ac6ea0469
		Secure: false
	Object:
		Variable: r7
		Type: javax.net.ssl.KeyManagerFactory
		Statement: r7 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(r3)
		Method: <org.apache.qpid.ssl.SSLContextFactory: javax.net.ssl.KeyManager[] getKeyManagers(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 9b0b98f08d7487580c3e27d90fc44fc608f3403eb65fa84a8bc786a9972bb558
		Secure: false
	Object:
		Variable: r5
		Type: javax.net.ssl.TrustManagerFactory
		Statement: r5 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(r3)
		Method: <org.apache.qpid.ssl.SSLContextFactory: javax.net.ssl.TrustManager[] getTrustManagers(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: aa28090bf036f6b9704c0af83b7650714eafaff2d81227e731b2e421be3226fd
		Secure: false
	Object:
		Variable: r5
		Type: javax.net.ssl.KeyManagerFactory
		Statement: r5 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(r4)
		Method: <org.apache.qpid.transport.network.security.ssl.QpidClientX509KeyManager: void <init>(java.lang.String,java.security.KeyStore,java.lang.String,java.lang.String)>
		SHA-256: 12eae5c8ccd9f7cee7b8e89002c966f3bb0ff22bbfd76faf532ac328daf4b5ab
		Secure: false
	Object:
		Variable: r12
		Type: byte[]
		Statement: r12 = virtualinvoke $r51.<java.security.MessageDigest: byte[] digest(byte[])>(r11)
		Method: <org.apache.qpid.client.security.scram.AbstractScramSaslClient: byte[] calculateClientProof(byte[])>
		SHA-256: 4026b894e19c947b80efd6014889722ccd43df81af27cbe92f30c9671add81ef
		Secure: true
	Object:
		Variable: $r51
		Type: java.security.MessageDigest
		Statement: $r51 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r50)
		Method: <org.apache.qpid.client.security.scram.AbstractScramSaslClient: byte[] calculateClientProof(byte[])>
		SHA-256: fda2ad56fbfd7205ad60ddaeaf0c5681e049436fc6eb3af693e8e5485169c76c
		Secure: true
	Object:
		Variable: r10
		Type: java.lang.Object[]
		Statement: r10 = virtualinvoke r7.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <org.apache.qpid.ssl.SSLContextFactory: javax.net.ssl.KeyManager[] getKeyManagers(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 49acfcb47097afadf122715414fe018bb3c110992842a0c9492cbabf06bd1dff
		Secure: false
	Object:
		Variable: $r7
		Type: javax.net.ssl.KeyManager[]
		Statement: $r7 = virtualinvoke r5.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <org.apache.qpid.transport.network.security.ssl.QpidClientX509KeyManager: void <init>(java.lang.String,java.security.KeyStore,java.lang.String,java.lang.String)>
		SHA-256: 7f8aec5c55579176d8eb203bc3b1ec22ccbf4ed8da9a40fdc3c4668cd0d4f4c
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r8.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r9, r1)
		Method: <org.apache.qpid.client.message.Encrypted010MessageFactory: byte[] decryptData(javax.crypto.Cipher,byte[],int,int)>
		SHA-256: 40246d82282d507363e663b81f39345749e9001e3c3e5a43c50b82d2af903c38
		Secure: false
	Object:
		Variable: r15
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r15.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, $r4)
		Method: <org.apache.qpid.client.security.scram.AbstractScramSaslClient: javax.crypto.Mac createHmac(byte[])>
		SHA-256: 128ecb8da5bdf6dad6514064595edbb401c6c0b11ede3ad4f223b4011d45d4b0
		Secure: false
	Object:
		Variable: $r4
		Type: java.lang.String
		Statement: specialinvoke r15.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, $r4)
		Method: <org.apache.qpid.client.security.scram.AbstractScramSaslClient: javax.crypto.Mac createHmac(byte[])>
		SHA-256: ce137156cae5773f381f07648e047e9093fc1031c2093506d01b36b50fc9d0db
		Secure: false
	Object:
		Variable: r19
		Type: javax.net.ssl.TrustManager[]
		Statement: r19 = virtualinvoke r18.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <org.apache.qpid.transport.ConnectionSettings: javax.net.ssl.TrustManager[] getTrustManagers(java.lang.String)>
		SHA-256: 5e129c3be42fcd51a9ffac6f3ecd8fb49ef55a81c58ccf717f421badbc6cae6c
		Secure: true
	Object:
		Variable: varReplacer2389
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer2389)
		Method: <org.apache.qpid.client.message.MessageEncryptionHelper: javax.crypto.spec.SecretKeySpec createSecretKey()>
		SHA-256: e34a3b492be584384e8d7cff025f59109ea98b5ecb075f6c69a8856a59a49c63
		Secure: false
	Object:
		Variable: $r20
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r20.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r50)
		Method: <org.apache.qpid.client.message.Encrypted010MessageFactory: org.apache.qpid.client.message.AbstractJMSMessage createMessage(org.apache.qpid.client.message.AbstractAMQMessageDelegate,java.nio.ByteBuffer)>
		SHA-256: 282f11b96af3be1753c2e62ce7888c319b1d083db1dd4f3fc7027c6b872bd938
		Secure: false
	Object:
		Variable: r52
		Type: javax.crypto.Cipher
		Statement: r52 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(r4)
		Method: <org.apache.qpid.client.message.Encrypted010MessageFactory: org.apache.qpid.client.message.AbstractJMSMessage createMessage(org.apache.qpid.client.message.AbstractAMQMessageDelegate,java.nio.ByteBuffer)>
		SHA-256: 67f6c55125eb16da90bba801f401bc6cc2a9ed678c75099c9fc4d345aa76c218
		Secure: false
	Object:
		Variable: r3
		Type: java.security.KeyStore
		Statement: r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(r2)
		Method: <org.apache.qpid.transport.network.security.ssl.SSLUtil: java.security.KeyStore getInitializedKeyStore(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: bc573b82d366bb589d86a86ccb43971892afa4ebd87f3dbe4cfccbd6bfdeafc
		Secure: false
	Object:
		Variable: r11
		Type: byte[]
		Statement: r12 = virtualinvoke $r51.<java.security.MessageDigest: byte[] digest(byte[])>(r11)
		Method: <org.apache.qpid.client.security.scram.AbstractScramSaslClient: byte[] calculateClientProof(byte[])>
		SHA-256: ee7dcf605f1019658d8139e0e698dc06c293e34802c051a6b4395277fc13c
		Secure: true
	Object:
		Variable: r7
		Type: javax.net.ssl.KeyManagerFactory
		Statement: r7 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(r5)
		Method: <org.apache.qpid.transport.network.security.ssl.QpidClientX509KeyManager: void <init>(java.lang.String,java.net.URL,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: bd70fa277a62327ca5a02048fc9971241a6d6f0e9f553ed670078cbae470553a
		Secure: false
	Object:
		Variable: $r18
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r18.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r45)
		Method: <org.apache.qpid.client.message.Encrypted091MessageFactory: org.apache.qpid.client.message.AbstractJMSMessage createMessage(org.apache.qpid.client.message.AbstractAMQMessageDelegate,java.nio.ByteBuffer)>
		SHA-256: 67bd776fbda52db48788ee124fc6a45cf958da1388875c17bd5c4a3eafd3cbb8
		Secure: false
	Object:
		Variable: $r9
		Type: javax.net.ssl.KeyManager[]
		Statement: $r9 = virtualinvoke r7.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <org.apache.qpid.transport.network.security.ssl.QpidClientX509KeyManager: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: efca9e354385fab1d3b42720ff22d2537ca5f44a49e85881c57fa3006a368ce2
		Secure: false
	Object:
		Variable: $r27
		Type: javax.net.ssl.SSLEngine
		Statement: $r27 = virtualinvoke r3.<javax.net.ssl.SSLContext: javax.net.ssl.SSLEngine createSSLEngine()>()
		Method: <org.apache.qpid.transport.network.security.SecurityLayerFactory$SSLSecurityLayer: void <init>(org.apache.qpid.transport.ConnectionSettings,org.apache.qpid.transport.network.security.SecurityLayer)>
		SHA-256: 3615206296c8ead2e901a457ae3c43398914bed490decddf7635bbd9bad0d69b
		Secure: false
	Object:
		Variable: r3
		Type: java.security.KeyStore
		Statement: r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(r2)
		Method: <org.apache.qpid.transport.network.security.ssl.SSLUtil: java.security.KeyStore getInitializedKeyStore(java.net.URL,java.lang.String,java.lang.String)>
		SHA-256: bc573b82d366bb589d86a86ccb43971892afa4ebd87f3dbe4cfccbd6bfdeafc
		Secure: false
	Object:
		Variable: $r16
		Type: javax.net.ssl.SSLEngine
		Statement: $r16 = virtualinvoke r3.<javax.net.ssl.SSLContext: javax.net.ssl.SSLEngine createSSLEngine(java.lang.String,int)>($r15, $i1)
		Method: <org.apache.qpid.transport.network.security.SecurityLayerFactory$SSLSecurityLayer: void <init>(org.apache.qpid.transport.ConnectionSettings,org.apache.qpid.transport.network.security.SecurityLayer)>
		SHA-256: 67a1fe1ffe89def54933182ffc2fcc11ae28a04e987accb9e4229cf4f394611
		Secure: false
	Object:
		Variable: $r8
		Type: javax.net.ssl.SSLContext
		Statement: $r8 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(r2)
		Method: <org.apache.qpid.transport.network.security.ssl.SSLUtil: javax.net.ssl.SSLContext tryGetSSLContext(java.lang.String[])>
		SHA-256: d97c6d84e5184a946b7d536c0a7a85db0cf5bf71b19597db2363e6e9386061f9
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r8.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r9, r1)
		Method: <org.apache.qpid.client.message.Encrypted091MessageFactory: byte[] decryptData(javax.crypto.Cipher,byte[],int,int)>
		SHA-256: ae860e5a11b1c23ec0bbda19d89c9abf4004ce583d3072b70020d3c68c7194d8
		Secure: false
	Object:
		Variable: $r28
		Type: java.lang.String
		Statement: specialinvoke $r26.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r12, $r28)
		Method: <org.apache.qpid.client.message.Encrypted010MessageFactory: javax.crypto.spec.SecretKeySpec getContentEncryptionKey(java.util.Collection,java.lang.String,org.apache.qpid.client.AMQSession)>
		SHA-256: 6515ad65f4048fd5dd2ced5d3214d46a11323266e6cb6d9a83732d19ec3e683d
		Secure: false
	Object:
		Variable: $r22
		Type: byte[]
		Statement: r9 = virtualinvoke r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r22)
		Method: <org.apache.qpid.client.message.MessageEncryptionHelper: java.util.List getKeyTransportRecipientInfo(java.util.List,javax.crypto.spec.SecretKeySpec)>
		SHA-256: a3189b08dce4b1f6b4a613684bb38e043cd1b35e0d1824b87e02ca7c13762331
		Secure: false

Findings in Java Class: org.apache.qpid.client.AMQConnection

	 in Method: java.security.KeyStore getBrokerSuppliedTrustStore(java.lang.String)
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #41de6ae9e7eddf7d37a58988d5e6a1aaf83581e46ed43b52bfc61ee8dedd3aaf)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r53.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer1336, r55)


Findings in Java Class: org.apache.qpid.transport.network.security.ssl.QpidClientX509KeyManager

	 in Method: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r7.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r6, $r8)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #bd70fa277a62327ca5a02048fc9971241a6d6f0e9f553ed670078cbae470553a)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r7.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r6, $r8)


	 in Method: void <init>(java.lang.String,java.net.URL,java.lang.String,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r7.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r6, $r8)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #bd70fa277a62327ca5a02048fc9971241a6d6f0e9f553ed670078cbae470553a)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r7.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r6, $r8)


	 in Method: void <init>(java.lang.String,java.security.KeyStore,java.lang.String,java.lang.String)
		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #12eae5c8ccd9f7cee7b8e89002c966f3bb0ff22bbfd76faf532ac328daf4b5ab)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r5.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r2, $r6)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r5.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r2, $r6)


Findings in Java Class: org.apache.qpid.client.message.MessageEncryptionHelper

	 in Method: byte[] readFromCipherStream(byte[],int,int,javax.crypto.Cipher)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #11a030a84a947ef1c53dfb3fa65a8be208f7a7a8244ac4a28f3a1e4483ec8b64)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to close
			at statement: $i10 = virtualinvoke r4.<javax.crypto.CipherInputStream: int read(byte[],int,int)>(r15, i7, $i9)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #11a030a84a947ef1c53dfb3fa65a8be208f7a7a8244ac4a28f3a1e4483ec8b64)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to java.io.FilterInputStream: void close(), java.lang.AutoCloseable: void close(), javax.crypto.CipherInputStream: void close(), java.io.Closeable: void close(), java.io.InputStream: void close()
			at statement: virtualinvoke r4.<javax.crypto.CipherInputStream: void close()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #11a030a84a947ef1c53dfb3fa65a8be208f7a7a8244ac4a28f3a1e4483ec8b64)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to java.io.FilterInputStream: void close(), java.lang.AutoCloseable: void close(), javax.crypto.CipherInputStream: void close(), java.io.Closeable: void close(), java.io.InputStream: void close()
			at statement: virtualinvoke r4.<javax.crypto.CipherInputStream: void close()>()


	 in Method: byte[] encrypt(javax.crypto.spec.SecretKeySpec,byte[],byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #7383bea51d6325c4ce676cb5af4238ed9ee713be871bd0dba367ae61bdd83ad8)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: $r7 = virtualinvoke r0.<org.apache.qpid.client.message.MessageEncryptionHelper: byte[] readFromCipherStream(byte[],javax.crypto.Cipher,org.apache.qpid.client.AMQSession)>(r2, r21, $r6)


	 in Method: java.security.PrivateKey getEncryptionPrivateKey(javax.security.auth.x500.X500Principal,java.math.BigInteger)
		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #bc573b82d366bb589d86a86ccb43971892afa4ebd87f3dbe4cfccbd6bfdeafc)
			Operation on object of type java.security.KeyStore object not completed. Expected call to getKey
			at statement: r4 = virtualinvoke r3.<org.apache.qpid.transport.ConnectionSettings: java.security.KeyStore getEncryptionKeyStore()>()

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #bc573b82d366bb589d86a86ccb43971892afa4ebd87f3dbe4cfccbd6bfdeafc)
			Operation on object of type java.security.KeyStore object not completed. Expected call to getKey
			at statement: $r11 = virtualinvoke r4.<java.security.KeyStore: java.util.Enumeration aliases()>()

		TypestateError violating CrySL rule for java.security.KeyStore (on Object #bc573b82d366bb589d86a86ccb43971892afa4ebd87f3dbe4cfccbd6bfdeafc)
			Unexpected call to method getEntry on object of type java.security.KeyStore. Expect a call to one of the following methods getKey
			at statement: r23 = virtualinvoke r4.<java.security.KeyStore: java.security.KeyStore$Entry getEntry(java.lang.String,java.security.KeyStore$ProtectionParameter)>(r6, $r14)

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #bc573b82d366bb589d86a86ccb43971892afa4ebd87f3dbe4cfccbd6bfdeafc)
			Operation on object of type java.security.KeyStore object not completed. Expected call to getKey
			at statement: r23 = virtualinvoke r4.<java.security.KeyStore: java.security.KeyStore$Entry getEntry(java.lang.String,java.security.KeyStore$ProtectionParameter)>(r6, $r14)


	 in Method: java.util.List getKeyTransportRecipientInfo(java.util.List,javax.crypto.spec.SecretKeySpec)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r8.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2385, $r21)


	 in Method: javax.crypto.spec.SecretKeySpec createSecretKey()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, varReplacer2389)


Findings in Java Class: org.apache.qpid.client.message.Encrypted010MessageFactory

	 in Method: org.apache.qpid.client.message.AbstractJMSMessage createMessage(org.apache.qpid.client.message.AbstractAMQMessageDelegate,java.nio.ByteBuffer)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #67f6c55125eb16da90bba801f401bc6cc2a9ed678c75099c9fc4d345aa76c218)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: r5 = specialinvoke r0.<org.apache.qpid.client.message.Encrypted010MessageFactory: byte[] decryptData(javax.crypto.Cipher,byte[],int,int)>(r52, r53, i8, i9)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r20.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r50)


	 in Method: byte[] decryptData(javax.crypto.Cipher,byte[],int,int)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #40246d82282d507363e663b81f39345749e9001e3c3e5a43c50b82d2af903c38)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to close
			at statement: $i10 = virtualinvoke r4.<javax.crypto.CipherInputStream: int read(byte[],int,int)>(r15, i7, $i9)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #40246d82282d507363e663b81f39345749e9001e3c3e5a43c50b82d2af903c38)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to java.io.FilterInputStream: void close(), java.lang.AutoCloseable: void close(), javax.crypto.CipherInputStream: void close(), java.io.Closeable: void close(), java.io.InputStream: void close()
			at statement: virtualinvoke r4.<javax.crypto.CipherInputStream: void close()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #40246d82282d507363e663b81f39345749e9001e3c3e5a43c50b82d2af903c38)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to java.io.FilterInputStream: void close(), java.lang.AutoCloseable: void close(), javax.crypto.CipherInputStream: void close(), java.io.Closeable: void close(), java.io.InputStream: void close()
			at statement: virtualinvoke r4.<javax.crypto.CipherInputStream: void close()>()


	 in Method: javax.crypto.spec.SecretKeySpec getContentEncryptionKey(java.util.Collection,java.lang.String,org.apache.qpid.client.AMQSession)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #92464d0c04b3d5e74d825144f105e5ae77d8d81619ca58b8d752a1f466981128)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: r12 = specialinvoke r0.<org.apache.qpid.client.message.Encrypted010MessageFactory: byte[] decryptData(javax.crypto.Cipher,byte[],int,int)>(r11, r9, varReplacer2424, $i1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r26.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r12, $r28)

		ForbiddenMethodError violating CrySL rule for javax.crypto.Cipher
			Detected call to forbidden method void init(int,java.security.Key) of class javax.crypto.Cipher. Instead, call method <javax.crypto.Cipher: void init(int,java.security.Key)>.
			at statement: virtualinvoke r11.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2426, r10)


Findings in Java Class: org.apache.qpid.client.message.Encrypted091MessageFactory

	 in Method: org.apache.qpid.client.message.AbstractJMSMessage createMessage(org.apache.qpid.client.message.AbstractAMQMessageDelegate,java.nio.ByteBuffer)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #152970406409c046821ba04681ad92d207109ba7f434e66b2e7c5c3532953d6a)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: r5 = specialinvoke r0.<org.apache.qpid.client.message.Encrypted091MessageFactory: byte[] decryptData(javax.crypto.Cipher,byte[],int,int)>(r47, r48, i8, i9)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r18.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r45)


	 in Method: byte[] decryptData(javax.crypto.Cipher,byte[],int,int)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #ae860e5a11b1c23ec0bbda19d89c9abf4004ce583d3072b70020d3c68c7194d8)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to java.io.FilterInputStream: void close(), java.lang.AutoCloseable: void close(), javax.crypto.CipherInputStream: void close(), java.io.Closeable: void close(), java.io.InputStream: void close()
			at statement: virtualinvoke r4.<javax.crypto.CipherInputStream: void close()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #ae860e5a11b1c23ec0bbda19d89c9abf4004ce583d3072b70020d3c68c7194d8)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to java.io.FilterInputStream: void close(), java.lang.AutoCloseable: void close(), javax.crypto.CipherInputStream: void close(), java.io.Closeable: void close(), java.io.InputStream: void close()
			at statement: virtualinvoke r4.<javax.crypto.CipherInputStream: void close()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #ae860e5a11b1c23ec0bbda19d89c9abf4004ce583d3072b70020d3c68c7194d8)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to close
			at statement: $i10 = virtualinvoke r4.<javax.crypto.CipherInputStream: int read(byte[],int,int)>(r15, i7, $i9)


	 in Method: javax.crypto.spec.SecretKeySpec getContentEncryptionKey(java.util.Collection,java.lang.String,org.apache.qpid.client.AMQSession)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r26.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r12, $r28)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #870c13bef55d0be71f78662baf93d140f816695065bf10408711dd9c9a4395a3)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: r12 = specialinvoke r0.<org.apache.qpid.client.message.Encrypted091MessageFactory: byte[] decryptData(javax.crypto.Cipher,byte[],int,int)>(r11, r9, varReplacer2453, $i1)

		ForbiddenMethodError violating CrySL rule for javax.crypto.Cipher
			Detected call to forbidden method void init(int,java.security.Key) of class javax.crypto.Cipher. Instead, call method <javax.crypto.Cipher: void init(int,java.security.Key)>.
			at statement: virtualinvoke r11.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2451, r10)


Findings in Java Class: org.apache.qpid.ssl.SSLContextFactory

	 in Method: javax.net.ssl.KeyManager[] getKeyManagers(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #9b0b98f08d7487580c3e27d90fc44fc608f3403eb65fa84a8bc786a9972bb558)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r7.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r5, r6)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r7.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r5, r6)


	 in Method: javax.net.ssl.TrustManager[] getTrustManagers(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r5.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(r4)


	 in Method: javax.net.ssl.SSLContext buildClientContext(javax.net.ssl.TrustManager[],javax.net.ssl.KeyManager[])
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(r1, r0, varReplacer3322)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(r1, r0, varReplacer3322)


Findings in Java Class: org.apache.qpid.transport.ConnectionSettings

	 in Method: javax.net.ssl.KeyManager[] getKeyManagers(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #dd3bbeefa653aa6981c723d805cedc6d82b573811fa57bc54108b13b9b691466)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r44.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer5510, r46)


Findings in Java Class: org.apache.qpid.client.security.UsernameHashedPasswordCallbackHandler

	 in Method: char[] getHash(java.lang.String)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #8d6735d519aa07b59a6992fc4c90696e63b2b6e39240af545273a83ac6ea0469)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: r5 = virtualinvoke r3.<java.security.MessageDigest: byte[] digest()>()

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #8d6735d519aa07b59a6992fc4c90696e63b2b6e39240af545273a83ac6ea0469)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6412)


Findings in Java Class: org.apache.qpid.client.security.scram.AbstractScramSaslClient

	 in Method: byte[] generateSaltedPassword(byte[])
		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #40a5a502e521cc9dece557b57da6eb521d0c5980c8eb560ceb5c68e43ed7ae6d)
			Unexpected call to method update on object of type javax.crypto.Mac.
			at statement: virtualinvoke r2.<javax.crypto.Mac: void update(byte[])>($r8)


	 in Method: javax.crypto.Mac createHmac(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r15.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r1, $r4)


Findings in Java Class: org.apache.qpid.transport.network.security.ssl.SSLUtil

	 in Method: java.security.KeyStore getInitializedKeyStore(java.lang.String,java.lang.String,java.lang.String)
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #bc573b82d366bb589d86a86ccb43971892afa4ebd87f3dbe4cfccbd6bfdeafc)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r3.<java.security.KeyStore: void load(java.io.InputStream,char[])>(r28, r4)

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #bc573b82d366bb589d86a86ccb43971892afa4ebd87f3dbe4cfccbd6bfdeafc)
			Operation on object of type java.security.KeyStore object not completed. Expected call to load
			at statement: r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(r2)


	 in Method: java.security.KeyStore getInitializedKeyStore(java.net.URL,java.lang.String,java.lang.String)
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #bc573b82d366bb589d86a86ccb43971892afa4ebd87f3dbe4cfccbd6bfdeafc)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r3.<java.security.KeyStore: void load(java.io.InputStream,char[])>(r4, r19)

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #bc573b82d366bb589d86a86ccb43971892afa4ebd87f3dbe4cfccbd6bfdeafc)
			Operation on object of type java.security.KeyStore object not completed. Expected call to load
			at statement: r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(r2)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 55

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 19
	TypestateError: 3
	ConstraintError: 1
	RequiredPredicateError: 14
	ForbiddenMethodError: 2
	NeverTypeOfError: 8
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 4 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 9.302 s

