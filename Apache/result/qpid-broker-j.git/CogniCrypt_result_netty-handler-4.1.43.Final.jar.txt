[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 503.1 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 27 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 27
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.04

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 28
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.07

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 29
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.1

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 29
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.14

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.17

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.2

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.23

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 31
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.26

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 32
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.28

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 32
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.31

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 32
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.34

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 35
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.34

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 35
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.37

[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <java.io.InputStream: void close()> for class io.netty.buffer.ByteBufInputStream
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 14 of 37
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.38

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 15 of 37
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.41

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 16 of 38
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.42

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 17 of 38
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.45

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 18 of 38
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.47

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 19 of 39
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.49

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 20 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 21 of 40
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.53

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 22 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.54

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 23 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.56

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 24 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.59

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 25 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.61

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 26 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.63

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 27 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.66

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 28 of 45
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.62

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 29 of 45
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.64

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 30 of 45
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 31 of 45
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.69

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 32 of 45
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.71

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 33 of 45
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.73

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 34 of 45
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.76

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 35 of 45
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.78

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 36 of 45
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.8

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 37 of 45
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.82

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 38 of 45
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.84

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 39 of 45
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.87

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 40 of 45
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.89

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 41 of 45
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.91

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 42 of 45
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.93

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 43 of 45
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.96

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 44 of 45
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.98

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: $r13
		Type: javax.net.ssl.SSLContext
		Statement: $r13 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1492)
		Method: <io.netty.handler.ssl.JdkSslClientContext: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long,java.lang.String)>
		SHA-256: ff2cd00c3a3bb94c2a08d93288158bf6f5688e86acb944ddbd8c717b356455c
		Secure: false
	Object:
		Variable: r0
		Type: javax.net.ssl.SSLContext
		Statement: r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer789)
		Method: <io.netty.handler.ssl.JdkSslContext: void <clinit>()>
		SHA-256: a0e28df0f26d5f11b92ca277fd12e08a8491b4d4a1c54a21737f8044567fd040
		Secure: false
	Object:
		Variable: r0
		Type: io.netty.handler.ssl.ReferenceCountedOpenSslEngine
		Statement: specialinvoke r0.<javax.net.ssl.SSLEngine: void <init>(java.lang.String,int)>(r3, i0)
		Method: <io.netty.handler.ssl.ReferenceCountedOpenSslEngine: void <init>(io.netty.handler.ssl.ReferenceCountedOpenSslContext,io.netty.buffer.ByteBufAllocator,java.lang.String,int,boolean,boolean)>
		SHA-256: 6c319d7a075ff67b2a65fc572e9634e239252783aae602180cd74c19bda0533d
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(r2)
		Method: <io.netty.handler.ssl.OpenSslX509KeyManagerFactory: io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi newOpenSslKeyManagerFactorySpi(java.lang.String,java.security.Provider)>
		SHA-256: e029ece63adde15e6e2f260bce04fca70816ac8c184fdbe4f90bf7aa3c8297f7
		Secure: false
	Object:
		Variable: r44
		Type: java.security.KeyPairGenerator
		Statement: r44 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer24)
		Method: <io.netty.handler.ssl.util.SelfSignedCertificate: void <init>(java.lang.String,java.security.SecureRandom,int,java.util.Date,java.util.Date)>
		SHA-256: 47c6faac527d29fc0ad7d28da6d5d882af40e6586d37c95fcd0540377bd49f7a
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String,java.security.Provider)>(r2, r0)
		Method: <io.netty.handler.ssl.OpenSslX509KeyManagerFactory: io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi newOpenSslKeyManagerFactorySpi(java.lang.String,java.security.Provider)>
		SHA-256: a14a09cf41f3b877beab0cc043bd4912c80380c362bdf59041da9af6cf6fb23e
		Secure: false
	Object:
		Variable: r7
		Type: javax.net.ssl.SSLEngine
		Statement: r7 = virtualinvoke r1.<javax.net.ssl.SSLContext: javax.net.ssl.SSLEngine createSSLEngine()>()
		Method: <io.netty.handler.ssl.JdkSslContext: void <init>(javax.net.ssl.SSLContext,boolean,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.JdkApplicationProtocolNegotiator,io.netty.handler.ssl.ClientAuth,java.lang.String[],boolean)>
		SHA-256: acd3dfa0601b1c74a3b3def8c08c106250ace4faf6a662f3bd0b6db7c8cb0d9b
		Secure: false
	Object:
		Variable: r5
		Type: java.security.KeyPair
		Statement: r5 = virtualinvoke r44.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <io.netty.handler.ssl.util.SelfSignedCertificate: void <init>(java.lang.String,java.security.SecureRandom,int,java.util.Date,java.util.Date)>
		SHA-256: d1d1cc83a8795621dc772c0bdb5b153a059e58479488dd0a4eefe12e8b615c3a
		Secure: true
	Object:
		Variable: $r13
		Type: javax.net.ssl.SSLContext
		Statement: $r13 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer1487, r0)
		Method: <io.netty.handler.ssl.JdkSslClientContext: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long,java.lang.String)>
		SHA-256: ad1137bab306efd6827b99c637e780732a54da195cd1e1ce3c199f03ac2a6f06
		Secure: false
	Object:
		Variable: r6
		Type: javax.crypto.Cipher
		Statement: r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r10)
		Method: <io.netty.handler.ssl.SslContext: java.security.spec.PKCS8EncodedKeySpec generateKeySpec(char[],byte[])>
		SHA-256: 75783602b7c7dea9335aace96ce14e1788e2631b71b853aefb20e70b107597aa
		Secure: false
	Object:
		Variable: r5
		Type: javax.crypto.SecretKey
		Statement: r5 = virtualinvoke r3.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r4)
		Method: <io.netty.handler.ssl.SslContext: java.security.spec.PKCS8EncodedKeySpec generateKeySpec(char[],byte[])>
		SHA-256: e0cef9eca484cf273c5e243ed2f847a8d3255200120945c83142071df9855c58
		Secure: false
	Object:
		Variable: $r16
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r16 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r15)
		Method: <io.netty.handler.ssl.ReferenceCountedOpenSslClientContext: io.netty.handler.ssl.OpenSslSessionContext newSessionContext(io.netty.handler.ssl.ReferenceCountedOpenSslContext,long,io.netty.handler.ssl.OpenSslEngineMap,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.String)>
		SHA-256: ea75960f531df923d6b27c1262224d5dc67b9ff5eb892c83dd1a85b49c68e0f7
		Secure: false
	Object:
		Variable: varReplacer334
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer334)
		Method: <io.netty.handler.ssl.ReferenceCountedOpenSslEngine: javax.crypto.spec.SecretKeySpec masterKey()>
		SHA-256: d71c6ec68127c8dd65e8b15428c14898169060d6c811397a88db6dcba373644d
		Secure: false
	Object:
		Variable: r0
		Type: io.netty.handler.ssl.util.ThreadLocalInsecureRandom
		Statement: specialinvoke r0.<java.security.SecureRandom: void <init>()>()
		Method: <io.netty.handler.ssl.util.ThreadLocalInsecureRandom: void <init>()>
		SHA-256: 46a0bd64f535b57484537e537f98f9e41f2f93ed1ca917868b32c341773fdb95
		Secure: true
	Object:
		Variable: $r0
		Type: javax.net.ssl.SSLContext
		Statement: $r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer974)
		Method: <io.netty.handler.ssl.OpenSslX509TrustManagerWrapper: javax.net.ssl.SSLContext newSSLContext()>
		SHA-256: a10c630ee037816dbc14584759d2286ee2f55034770fd3b964da6e48c65fc9cd
		Secure: false
	Object:
		Variable: $r21
		Type: java.security.PublicKey
		Statement: $r21 = virtualinvoke r1.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <io.netty.handler.ssl.util.OpenJdkSelfSignedCertGenerator: java.lang.String[] generate(java.lang.String,java.security.KeyPair,java.security.SecureRandom,java.util.Date,java.util.Date)>
		SHA-256: d1f4844e786379cb027e4f10bdaf8250c1d1ff17c7cd726be346413c2bca1078
		Secure: true
	Object:
		Variable: $r23
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r23 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r22)
		Method: <io.netty.handler.ssl.ReferenceCountedOpenSslServerContext: io.netty.handler.ssl.OpenSslServerSessionContext newSessionContext(io.netty.handler.ssl.ReferenceCountedOpenSslContext,long,io.netty.handler.ssl.OpenSslEngineMap,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.String)>
		SHA-256: b5014ff5dcde3a4907f06fa9958d5dd849f268b744c877a844f625a3ed3c5991
		Secure: false
	Object:
		Variable: $r7
		Type: javax.net.ssl.KeyManager[]
		Statement: $r7 = virtualinvoke r15.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <io.netty.handler.ssl.JdkSslServerContext: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long,java.lang.String)>
		SHA-256: 3191ba040931edd917d4173fc5e8dbc2935312e12ae683eea43512b057a7f413
		Secure: false
	Object:
		Variable: $r16
		Type: javax.net.ssl.SSLContext
		Statement: $r16 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer116)
		Method: <io.netty.handler.ssl.JdkSslServerContext: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long,java.lang.String)>
		SHA-256: f2586b049efdab9e26c584501e92ca4fa38ffaa2b4124427b965192fb2745166
		Secure: false
	Object:
		Variable: r1
		Type: java.security.KeyStore
		Statement: r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(r7)
		Method: <io.netty.handler.ssl.SslContext: javax.net.ssl.TrustManagerFactory buildTrustManagerFactory(java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.lang.String)>
		SHA-256: f52c9d314347a7303a2c34851a433100748b65f84d93496f749fe7703794d9d4
		Secure: true
	Object:
		Variable: r30
		Type: javax.net.ssl.SSLEngine
		Statement: r30 = virtualinvoke r0.<javax.net.ssl.SSLContext: javax.net.ssl.SSLEngine createSSLEngine()>()
		Method: <io.netty.handler.ssl.JdkSslContext: void <clinit>()>
		SHA-256: 6a975f687e26451578fc308500b8d9954567afe326e6d9fbaea536b16ede0312
		Secure: false
	Object:
		Variable: r25
		Type: javax.net.ssl.TrustManagerFactory
		Statement: r25 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r9)
		Method: <io.netty.handler.ssl.ReferenceCountedOpenSslClientContext: io.netty.handler.ssl.OpenSslSessionContext newSessionContext(io.netty.handler.ssl.ReferenceCountedOpenSslContext,long,io.netty.handler.ssl.OpenSslEngineMap,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.String)>
		SHA-256: 5d8cb4bd4dbdf042c5a7c65bc380005fca97e0aa340d2e0f58edfbcc0fd5e86a
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer334)
		Method: <io.netty.handler.ssl.ReferenceCountedOpenSslEngine: javax.crypto.spec.SecretKeySpec masterKey()>
		SHA-256: d16dd08cb594c3f412416ee8d2b9f8652c7e8bc6de18d85b20e077c075821c47
		Secure: false
	Object:
		Variable: r16
		Type: javax.crypto.Mac
		Statement: r16 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(r3)
		Method: <io.netty.handler.ssl.PseudoRandomFunction: byte[] hash(byte[],byte[],byte[],int,java.lang.String)>
		SHA-256: 6b628f8d3f7b39f8bebbd6d80a24db5d13efb862db9f72c0f73fbf0e93ce44ad
		Secure: false
	Object:
		Variable: $r33
		Type: javax.net.ssl.TrustManager[]
		Statement: $r33 = virtualinvoke r25.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <io.netty.handler.ssl.ReferenceCountedOpenSslClientContext: io.netty.handler.ssl.OpenSslSessionContext newSessionContext(io.netty.handler.ssl.ReferenceCountedOpenSslContext,long,io.netty.handler.ssl.OpenSslEngineMap,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.String)>
		SHA-256: f7effa3b4b19c6a3c194d09e63a9ed5b5d1465a9fe93b83c085d2e8527cb8959
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer677)
		Method: <io.netty.handler.ssl.util.FingerprintTrustManagerFactory$1: java.security.MessageDigest initialValue()>
		SHA-256: 9a774fecc03c308b1d0ce452be1ae7c65ba0f3db60d02760220558553064aaad
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.PrivateKey
		Statement: $r12 = virtualinvoke r5.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <io.netty.handler.ssl.util.SelfSignedCertificate: void <init>(java.lang.String,java.security.SecureRandom,int,java.util.Date,java.util.Date)>
		SHA-256: c22bbffa7d8c8a308107babc44ebe1f3c83d965ac8b49459e59f11cfc44ceb26
		Secure: true
	Object:
		Variable: r3
		Type: javax.net.ssl.KeyManagerFactory
		Statement: r3 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(r1)
		Method: <io.netty.handler.ssl.SslContext: javax.net.ssl.KeyManagerFactory buildKeyManagerFactory(java.security.KeyStore,java.lang.String,char[],javax.net.ssl.KeyManagerFactory)>
		SHA-256: 3d8aff3e7acf76ebaeb09ad12a6d200fe988645367dd3075d157a46e9372ceeb
		Secure: false
	Object:
		Variable: $r42
		Type: javax.net.ssl.TrustManager[]
		Statement: $r42 = virtualinvoke r34.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <io.netty.handler.ssl.ReferenceCountedOpenSslServerContext: io.netty.handler.ssl.OpenSslServerSessionContext newSessionContext(io.netty.handler.ssl.ReferenceCountedOpenSslContext,long,io.netty.handler.ssl.OpenSslEngineMap,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.String)>
		SHA-256: f0e0ee5879f67fc480b4cb2e0539c17801c6befcd29ad91a71c8664611e88a19
		Secure: true
	Object:
		Variable: r3
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r0, r3)
		Method: <io.netty.handler.ssl.PseudoRandomFunction: byte[] hash(byte[],byte[],byte[],int,java.lang.String)>
		SHA-256: 6738e7f1605e8c17ff7fafefb73711952b5923d4eb55348ff7f4327569c4b88f
		Secure: false
	Object:
		Variable: $r17
		Type: javax.net.ssl.TrustManager[]
		Statement: $r17 = virtualinvoke r11.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <io.netty.handler.ssl.JdkSslClientContext: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long,java.lang.String)>
		SHA-256: 63850acb880d0e047af0bd4d75c3404729e69af80eaa62bbd23c7f849f8bc617
		Secure: true
	Object:
		Variable: r18
		Type: byte[]
		Statement: r18 = virtualinvoke r16.<javax.crypto.Mac: byte[] doFinal(byte[])>(r18)
		Method: <io.netty.handler.ssl.PseudoRandomFunction: byte[] hash(byte[],byte[],byte[],int,java.lang.String)>
		SHA-256: 1c17bcd01b78a039ee429a12cc02effbf150a0ac45139d3cf53f4f5b7895b96c
		Secure: true
	Object:
		Variable: $r18
		Type: javax.net.ssl.TrustManager[]
		Statement: $r18 = virtualinvoke r14.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <io.netty.handler.ssl.JdkSslServerContext: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long,java.lang.String)>
		SHA-256: 37c4ba1d818d0398dcae59b303b6aafcbbc08173afa5d2e7b025a1f9dae4ee20
		Secure: true
	Object:
		Variable: r3
		Type: java.security.KeyStore
		Statement: r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(r4)
		Method: <io.netty.handler.ssl.SslContext: java.security.KeyStore buildKeyStore(java.security.cert.X509Certificate[],java.security.PrivateKey,char[],java.lang.String)>
		SHA-256: a9d4713960844cad3486775f95840822bd5721de340668a7e0befd5b846a4d32
		Secure: true
	Object:
		Variable: r0
		Type: io.netty.handler.ssl.JdkSslEngine
		Statement: specialinvoke r0.<javax.net.ssl.SSLEngine: void <init>()>()
		Method: <io.netty.handler.ssl.JdkSslEngine: void <init>(javax.net.ssl.SSLEngine)>
		SHA-256: 3ef976940fde996d8da07e66af3563c3ad52e8b3e2d0eb1abf08c8dbc6ab2dc5
		Secure: false
	Object:
		Variable: $r16
		Type: javax.net.ssl.SSLContext
		Statement: $r16 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer112, r0)
		Method: <io.netty.handler.ssl.JdkSslServerContext: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long,java.lang.String)>
		SHA-256: 577c9457cf74c031c791b0adec52581ff37f2e23db922a509e7212b0994dfe8f
		Secure: false
	Object:
		Variable: $r28
		Type: java.security.PublicKey
		Statement: $r28 = virtualinvoke r1.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <io.netty.handler.ssl.util.OpenJdkSelfSignedCertGenerator: java.lang.String[] generate(java.lang.String,java.security.KeyPair,java.security.SecureRandom,java.util.Date,java.util.Date)>
		SHA-256: 385c25a3f10c9b9ccbd597b7e67b2af38ed0a5f416667b7838bb65a530aab9ef
		Secure: true
	Object:
		Variable: r34
		Type: javax.net.ssl.TrustManagerFactory
		Statement: r34 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r18)
		Method: <io.netty.handler.ssl.ReferenceCountedOpenSslServerContext: io.netty.handler.ssl.OpenSslServerSessionContext newSessionContext(io.netty.handler.ssl.ReferenceCountedOpenSslContext,long,io.netty.handler.ssl.OpenSslEngineMap,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.String)>
		SHA-256: 902fb49ab81a62cb56dcfe03efe4489824e912489bfb661161ca2f39892fd9cd
		Secure: false
	Object:
		Variable: r6
		Type: javax.net.ssl.TrustManagerFactory
		Statement: r6 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r5)
		Method: <io.netty.handler.ssl.SslContext: javax.net.ssl.TrustManagerFactory buildTrustManagerFactory(java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.lang.String)>
		SHA-256: fd7f27531409aacfca88befca40d2bc26c0b3b939742eb6150468ac26bc385f0
		Secure: true
	Object:
		Variable: r23
		Type: javax.net.ssl.SSLContext
		Statement: r23 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1178)
		Method: <io.netty.handler.ssl.Java9SslUtils: void <clinit>()>
		SHA-256: cf5acd2fa381c3a3d84933e4424537d3bab7e2a13f98e870948db2ebcbb34b3c
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r0, r3)
		Method: <io.netty.handler.ssl.PseudoRandomFunction: byte[] hash(byte[],byte[],byte[],int,java.lang.String)>
		SHA-256: ff8ce6c68d3c84d482e851c2b0a250773eb21b79f68ef3752a374fe56ffc6294
		Secure: false
	Object:
		Variable: $r16
		Type: javax.net.ssl.KeyManager[]
		Statement: $r16 = virtualinvoke r12.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <io.netty.handler.ssl.JdkSslClientContext: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long,java.lang.String)>
		SHA-256: 50e7561a967cb662f9e9456763eb93cc3170159811ef55c7397019830a4063ff
		Secure: false
	Object:
		Variable: r0
		Type: javax.net.ssl.SSLEngine
		Statement: r0 = virtualinvoke r23.<javax.net.ssl.SSLContext: javax.net.ssl.SSLEngine createSSLEngine()>()
		Method: <io.netty.handler.ssl.Java9SslUtils: void <clinit>()>
		SHA-256: 9090fbc19abf03c50512680f012acf6277ca242d4a6b012fbc9981527a07a5dd
		Secure: false
	Object:
		Variable: r5
		Type: java.security.PrivateKey
		Statement: r5 = virtualinvoke r1.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <io.netty.handler.ssl.util.OpenJdkSelfSignedCertGenerator: java.lang.String[] generate(java.lang.String,java.security.KeyPair,java.security.SecureRandom,java.util.Date,java.util.Date)>
		SHA-256: 123d2a88e02c3704e3b0cf5681f4fbe31a58d85a2148c285ad390c0bf934d860
		Secure: true
	Object:
		Variable: r3
		Type: javax.crypto.SecretKeyFactory
		Statement: r3 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>($r8)
		Method: <io.netty.handler.ssl.SslContext: java.security.spec.PKCS8EncodedKeySpec generateKeySpec(char[],byte[])>
		SHA-256: 436149b8daa596b6e53a6ec47fbcfc7024fd8a9a94ca6ec263f1046a649a7624
		Secure: false

Findings in Java Class: io.netty.handler.ssl.SslContext

	 in Method: java.security.spec.PKCS8EncodedKeySpec generateKeySpec(char[],byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #75783602b7c7dea9335aace96ce14e1788e2631b71b853aefb20e70b107597aa)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: $r12 = virtualinvoke r2.<javax.crypto.EncryptedPrivateKeyInfo: java.security.spec.PKCS8EncodedKeySpec getKeySpec(javax.crypto.Cipher)>(r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as specced Key
			at statement: r5 = virtualinvoke r3.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>(r4)

		ForbiddenMethodError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Detected call to forbidden method void <init>(char[]) of class javax.crypto.spec.PBEKeySpec. Instead, call method <javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>.
			at statement: specialinvoke $r9.<javax.crypto.spec.PBEKeySpec: void <init>(char[])>(r0)


	 in Method: javax.net.ssl.KeyManagerFactory buildKeyManagerFactory(java.security.KeyStore,java.lang.String,char[],javax.net.ssl.KeyManagerFactory)
		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #3d8aff3e7acf76ebaeb09ad12a6d200fe988645367dd3075d157a46e9372ceeb)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r3.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r0, r2)


Findings in Java Class: io.netty.handler.ssl.JdkSslServerContext

	 in Method: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long,java.lang.String)
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #f2586b049efdab9e26c584501e92ca4fa38ffaa2b4124427b965192fb2745166)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r16 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer116)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r17.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r7, $r18, varReplacer113)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #577c9457cf74c031c791b0adec52581ff37f2e23db922a509e7212b0994dfe8f)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r16 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer112, r0)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r17.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r7, $r18, varReplacer113)


Findings in Java Class: io.netty.handler.ssl.ReferenceCountedOpenSslServerContext

	 in Method: io.netty.handler.ssl.OpenSslServerSessionContext newSessionContext(io.netty.handler.ssl.ReferenceCountedOpenSslContext,long,io.netty.handler.ssl.OpenSslEngineMap,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #b5014ff5dcde3a4907f06fa9958d5dd849f268b744c877a844f625a3ed3c5991)
			Operation on object of type javax.net.ssl.KeyManagerFactory object not completed. Expected call to init
			at statement: specialinvoke r51.<io.netty.handler.ssl.OpenSslCachingX509KeyManagerFactory: void <init>(javax.net.ssl.KeyManagerFactory)>($r23)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r34.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r19)


Findings in Java Class: io.netty.handler.ssl.ReferenceCountedOpenSslEngine

	 in Method: void <init>(io.netty.handler.ssl.ReferenceCountedOpenSslContext,io.netty.buffer.ByteBufAllocator,java.lang.String,int,boolean,boolean)
		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLEngine (on Object #6c319d7a075ff67b2a65fc572e9634e239252783aae602180cd74c19bda0533d)
			Operation on object of type io.netty.handler.ssl.ReferenceCountedOpenSslEngine object not completed. Expected call to setEnabledCipherSuites, setEnabledProtocols
			at statement: r37 = r0


	 in Method: void setClientAuth(io.netty.handler.ssl.ClientAuth)
		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLEngine (on Object #6c319d7a075ff67b2a65fc572e9634e239252783aae602180cd74c19bda0533d)
			Operation on object of type io.netty.handler.ssl.ReferenceCountedOpenSslEngine object not completed. Expected call to setEnabledCipherSuites, setEnabledProtocols
			at statement: r2 = r0


	 in Method: javax.crypto.spec.SecretKeySpec masterKey()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer334)


Findings in Java Class: io.netty.handler.ssl.util.FingerprintTrustManagerFactory$1

	 in Method: java.security.MessageDigest initialValue()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #9a774fecc03c308b1d0ce452be1ae7c65ba0f3db60d02760220558553064aaad)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer677)


	 in Method: java.lang.Object initialValue()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #9a774fecc03c308b1d0ce452be1ae7c65ba0f3db60d02760220558553064aaad)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: return $r1


Findings in Java Class: io.netty.handler.ssl.JdkSslContext

	 in Method: void <clinit>()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #a0e28df0f26d5f11b92ca277fd12e08a8491b4d4a1c54a21737f8044567fd040)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer789)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer786, varReplacer786, varReplacer786)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer786, varReplacer786, varReplacer786)


Findings in Java Class: io.netty.handler.ssl.OpenSslX509KeyManagerFactory

	 in Method: io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi newOpenSslKeyManagerFactorySpi(java.lang.String,java.security.Provider)
		IncompleteOperationError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #a14a09cf41f3b877beab0cc043bd4912c80380c362bdf59041da9af6cf6fb23e)
			Operation on object of type javax.net.ssl.KeyManagerFactory object not completed. Expected call to init
			at statement: specialinvoke $r1.<io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi: void <init>(javax.net.ssl.KeyManagerFactory)>($r3)

		IncompleteOperationError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #e029ece63adde15e6e2f260bce04fca70816ac8c184fdbe4f90bf7aa3c8297f7)
			Operation on object of type javax.net.ssl.KeyManagerFactory object not completed. Expected call to init
			at statement: specialinvoke $r1.<io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi: void <init>(javax.net.ssl.KeyManagerFactory)>($r3)


Findings in Java Class: io.netty.handler.ssl.PseudoRandomFunction

	 in Method: byte[] hash(byte[],byte[],byte[],int,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r0, r3)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #6b628f8d3f7b39f8bebbd6d80a24db5d13efb862db9f72c0f73fbf0e93ce44ad)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: $i2 = virtualinvoke r16.<javax.crypto.Mac: int getMacLength()>()

		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #6b628f8d3f7b39f8bebbd6d80a24db5d13efb862db9f72c0f73fbf0e93ce44ad)
			Unexpected call to method doFinal on object of type javax.crypto.Mac.
			at statement: $r8 = virtualinvoke r16.<javax.crypto.Mac: byte[] doFinal(byte[])>($r7)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #6b628f8d3f7b39f8bebbd6d80a24db5d13efb862db9f72c0f73fbf0e93ce44ad)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to javax.crypto.Mac: void doFinal(byte[],int), javax.crypto.Mac: byte[] doFinal(byte[]), update, javax.crypto.Mac: byte[] doFinal()
			at statement: $r8 = virtualinvoke r16.<javax.crypto.Mac: byte[] doFinal(byte[])>($r7)


Findings in Java Class: io.netty.handler.ssl.OpenSslX509TrustManagerWrapper

	 in Method: javax.net.ssl.SSLContext newSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #a10c630ee037816dbc14584759d2286ee2f55034770fd3b964da6e48c65fc9cd)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer974)


	 in Method: void <clinit>()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r14.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer975, r20, varReplacer975)


Findings in Java Class: io.netty.handler.ssl.Java9SslUtils

	 in Method: void <clinit>()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r23.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1175, varReplacer1175, varReplacer1175)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r23.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1175, varReplacer1175, varReplacer1175)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #cf5acd2fa381c3a3d84933e4424537d3bab7e2a13f98e870948db2ebcbb34b3c)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: r23 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1178)


Findings in Java Class: io.netty.handler.ssl.ConscryptAlpnSslEngine$ServerEngine

	 in Method: void <init>(javax.net.ssl.SSLEngine,io.netty.buffer.ByteBufAllocator,io.netty.handler.ssl.JdkApplicationProtocolNegotiator)
		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLEngine (on Object #3ef976940fde996d8da07e66af3563c3ad52e8b3e2d0eb1abf08c8dbc6ab2dc5)
			Operation on object of type io.netty.handler.ssl.JdkSslEngine object not completed. Expected call to setEnabledCipherSuites, setEnabledProtocols
			at statement: staticinvoke <org.conscrypt.Conscrypt: void setHandshakeListener(javax.net.ssl.SSLEngine,org.conscrypt.HandshakeListener)>(r1, $r5)


Findings in Java Class: io.netty.handler.ssl.ReferenceCountedOpenSslContext$AbstractCertificateVerifier

	 in Method: int verify(long,byte[][],java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLEngine (on Object #3ef976940fde996d8da07e66af3563c3ad52e8b3e2d0eb1abf08c8dbc6ab2dc5)
			Operation on object of type io.netty.handler.ssl.JdkSslEngine object not completed. Expected call to init, setEnabledCipherSuites, setEnabledProtocols
			at statement: virtualinvoke r0.<io.netty.handler.ssl.ReferenceCountedOpenSslContext$AbstractCertificateVerifier: void verify(io.netty.handler.ssl.ReferenceCountedOpenSslEngine,java.security.cert.X509Certificate[],java.lang.String)>(r3, r4, r2)


Findings in Java Class: io.netty.handler.ssl.ConscryptAlpnSslEngine$ClientEngine

	 in Method: void <init>(javax.net.ssl.SSLEngine,io.netty.buffer.ByteBufAllocator,io.netty.handler.ssl.JdkApplicationProtocolNegotiator)
		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLEngine (on Object #3ef976940fde996d8da07e66af3563c3ad52e8b3e2d0eb1abf08c8dbc6ab2dc5)
			Operation on object of type io.netty.handler.ssl.JdkSslEngine object not completed. Expected call to setEnabledCipherSuites, setEnabledProtocols
			at statement: staticinvoke <org.conscrypt.Conscrypt: void setHandshakeListener(javax.net.ssl.SSLEngine,org.conscrypt.HandshakeListener)>(r1, $r5)


Findings in Java Class: io.netty.handler.ssl.ReferenceCountedOpenSslClientContext

	 in Method: io.netty.handler.ssl.OpenSslSessionContext newSessionContext(io.netty.handler.ssl.ReferenceCountedOpenSslContext,long,io.netty.handler.ssl.OpenSslEngineMap,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r25.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r10)

		IncompleteOperationError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #ea75960f531df923d6b27c1262224d5dc67b9ff5eb892c83dd1a85b49c68e0f7)
			Operation on object of type javax.net.ssl.KeyManagerFactory object not completed. Expected call to init
			at statement: specialinvoke r41.<io.netty.handler.ssl.OpenSslCachingX509KeyManagerFactory: void <init>(javax.net.ssl.KeyManagerFactory)>($r16)


Findings in Java Class: io.netty.handler.ssl.JdkSslClientContext

	 in Method: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long,java.lang.String)
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #ad1137bab306efd6827b99c637e780732a54da195cd1e1ce3c199f03ac2a6f06)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r13 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer1487, r0)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r14.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r16, $r17, varReplacer1491)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r14.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r16, $r17, varReplacer1491)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #ff2cd00c3a3bb94c2a08d93288158bf6f5688e86acb944ddbd8c717b356455c)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r13 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1492)


Findings in Java Class: io.netty.handler.ssl.OpenSslX509TrustManagerWrapper$UnsafeTrustManagerWrapper

	 in Method: javax.net.ssl.X509TrustManager wrapIfNeeded(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r8.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer7, r11, varReplacer7)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 45

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 15
	TypestateError: 1
	ForbiddenMethodError: 1
	NeverTypeOfError: 1
	IncompleteOperationError: 13
	ConstraintError: 8
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 17 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 19.76 s

