[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 629.5 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 10 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 12
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.08

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 13
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.15

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 15
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.2

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 16
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.25

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 18
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.28

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 20
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.3

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 21
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 22
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.36

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 22
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.41

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.43

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.48

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.52

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.57

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 14 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.61

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 15 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.65

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 16 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.7

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 17 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.74

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 18 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.78

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 19 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.83

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 20 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.87

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 21 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.91

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 22 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.96

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r4
		Type: javax.crypto.Mac
		Statement: r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer947)
		Method: <org.apache.commons.net.imap.AuthenticatingIMAPClient: boolean auth(org.apache.commons.net.imap.AuthenticatingIMAPClient$AUTH_METHOD,java.lang.String,java.lang.String)>
		SHA-256: b0292f67f5f2e22cf2660d5f388f30f69008556a7f4e70b3d1576bacbaf0b8b
		Secure: true
	Object:
		Variable: r5
		Type: javax.crypto.Mac
		Statement: r5 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer1618)
		Method: <org.apache.commons.net.pop3.ExtendedPOP3Client: boolean auth(org.apache.commons.net.pop3.ExtendedPOP3Client$AUTH_METHOD,java.lang.String,java.lang.String)>
		SHA-256: 8cca7ed07a7a514e65d1e787e8866da789e2f70b23f85052d46e6d00a69973d0
		Secure: true
	Object:
		Variable: varReplacer1617
		Type: java.lang.String
		Statement: specialinvoke $r14.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r16, varReplacer1617)
		Method: <org.apache.commons.net.pop3.ExtendedPOP3Client: boolean auth(org.apache.commons.net.pop3.ExtendedPOP3Client$AUTH_METHOD,java.lang.String,java.lang.String)>
		SHA-256: e7c78d8dff1f82f1220646aa03b447142b722515b75dda7c55bc738960e06afc
		Secure: false
	Object:
		Variable: $r26
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r26.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r28, varReplacer1792)
		Method: <org.apache.commons.net.smtp.AuthenticatingSMTPClient: boolean auth(org.apache.commons.net.smtp.AuthenticatingSMTPClient$AUTH_METHOD,java.lang.String,java.lang.String)>
		SHA-256: 17e36d50ffd27dafd1e81b98db9a3fabd94e32435683538f470ac1fd1c727452
		Secure: false
	Object:
		Variable: r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(r1)
		Method: <org.apache.commons.net.util.TrustManagerUtils: javax.net.ssl.X509TrustManager getDefaultTrustManager(java.security.KeyStore)>
		SHA-256: f2e043fb4e90f83cc96295ecb4507138afa7220ff25ea70ff7dcb95bb414673e
		Secure: false
	Object:
		Variable: r6
		Type: java.security.MessageDigest
		Statement: r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1671)
		Method: <org.apache.commons.net.pop3.POP3Client: boolean login(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: ef1948b6915879717735f56407dc681536de3f1b65dbcf6b40fec98c22ffa5cf
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.Key
		Statement: $r8 = virtualinvoke r1.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>($r6, $r7)
		Method: <org.apache.commons.net.util.KeyManagerUtils$ClientKeyStore: void <init>(java.security.KeyStore,java.lang.String,java.lang.String)>
		SHA-256: 2d6efa6063097cba33b23c79faf9963f92f986bc95fde69776abe3c7c313bc7a
		Secure: false
	Object:
		Variable: r41
		Type: byte[]
		Statement: $r25 = virtualinvoke r4.<javax.crypto.Mac: byte[] doFinal(byte[])>(r41)
		Method: <org.apache.commons.net.imap.AuthenticatingIMAPClient: boolean auth(org.apache.commons.net.imap.AuthenticatingIMAPClient$AUTH_METHOD,java.lang.String,java.lang.String)>
		SHA-256: 97dbae8662a7929f5d97d9b5f6292a164d0fef559ccda917137571a8840e53ae
		Secure: true
	Object:
		Variable: r4
		Type: byte[]
		Statement: $r29 = virtualinvoke r5.<javax.crypto.Mac: byte[] doFinal(byte[])>(r4)
		Method: <org.apache.commons.net.smtp.AuthenticatingSMTPClient: boolean auth(org.apache.commons.net.smtp.AuthenticatingSMTPClient$AUTH_METHOD,java.lang.String,java.lang.String)>
		SHA-256: e850ed34d7bb909cd20389d4074bec9af511c3262a875d758fb8fbb999186fc7
		Secure: true
	Object:
		Variable: $r25
		Type: byte[]
		Statement: $r25 = virtualinvoke r4.<javax.crypto.Mac: byte[] doFinal(byte[])>(r41)
		Method: <org.apache.commons.net.imap.AuthenticatingIMAPClient: boolean auth(org.apache.commons.net.imap.AuthenticatingIMAPClient$AUTH_METHOD,java.lang.String,java.lang.String)>
		SHA-256: 1d63e4c2b1e1e8cf0ac644755d35e32a7b5922f3af0f2ea33f3c6b726f7c054c
		Secure: true
	Object:
		Variable: r3
		Type: byte[]
		Statement: r3 = virtualinvoke r6.<java.security.MessageDigest: byte[] digest(byte[])>($r11)
		Method: <org.apache.commons.net.pop3.POP3Client: boolean login(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 78d94bf8b56721208f3746f9d04fa98af0c7ae40f5d756a17af74fa31dedc85d
		Secure: false
	Object:
		Variable: r5
		Type: javax.crypto.Mac
		Statement: r5 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer1787)
		Method: <org.apache.commons.net.smtp.AuthenticatingSMTPClient: boolean auth(org.apache.commons.net.smtp.AuthenticatingSMTPClient$AUTH_METHOD,java.lang.String,java.lang.String)>
		SHA-256: 26bf331930efd32245becd88b87f14e153e75bbe228037954ca67b3154394c36
		Secure: true
	Object:
		Variable: varReplacer1792
		Type: java.lang.String
		Statement: specialinvoke $r26.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r28, varReplacer1792)
		Method: <org.apache.commons.net.smtp.AuthenticatingSMTPClient: boolean auth(org.apache.commons.net.smtp.AuthenticatingSMTPClient$AUTH_METHOD,java.lang.String,java.lang.String)>
		SHA-256: 6e528d1a28a97fec73158f72026442d2732ab872812204a1563f1a25c77fd373
		Secure: false
	Object:
		Variable: varReplacer951
		Type: java.lang.String
		Statement: specialinvoke $r22.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r24, varReplacer951)
		Method: <org.apache.commons.net.imap.AuthenticatingIMAPClient: boolean auth(org.apache.commons.net.imap.AuthenticatingIMAPClient$AUTH_METHOD,java.lang.String,java.lang.String)>
		SHA-256: b070f4c8d44dcb94f0ec88fa624de7308c4abd18c42f8c6c15b850dfe207c5f9
		Secure: false
	Object:
		Variable: r4
		Type: byte[]
		Statement: $r17 = virtualinvoke r5.<javax.crypto.Mac: byte[] doFinal(byte[])>(r4)
		Method: <org.apache.commons.net.pop3.ExtendedPOP3Client: boolean auth(org.apache.commons.net.pop3.ExtendedPOP3Client$AUTH_METHOD,java.lang.String,java.lang.String)>
		SHA-256: a3e03b389debbcef44904aa00b47b9cdca9d6894449381f083207282285537f7
		Secure: true
	Object:
		Variable: $r11
		Type: byte[]
		Statement: r3 = virtualinvoke r6.<java.security.MessageDigest: byte[] digest(byte[])>($r11)
		Method: <org.apache.commons.net.pop3.POP3Client: boolean login(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: c95704d7700cc2f12cf277fe4f2c6027c0ba47422c615e530fe0b3bd78566643
		Secure: false
	Object:
		Variable: $r14
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r14.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r16, varReplacer1617)
		Method: <org.apache.commons.net.pop3.ExtendedPOP3Client: boolean auth(org.apache.commons.net.pop3.ExtendedPOP3Client$AUTH_METHOD,java.lang.String,java.lang.String)>
		SHA-256: 7cb74a5c3f4194a93547846001c134fd6d122204adf5364a406e0fa3afa64115
		Secure: false
	Object:
		Variable: r3
		Type: java.security.KeyStore
		Statement: r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(r0)
		Method: <org.apache.commons.net.util.KeyManagerUtils: java.security.KeyStore loadStore(java.lang.String,java.io.File,java.lang.String)>
		SHA-256: 69a5fd04f06bf141b78af57573fff1e3e465e34840141770a3c70d34ac8d972b
		Secure: false
	Object:
		Variable: r3
		Type: javax.net.ssl.SSLContext
		Statement: r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(r0)
		Method: <org.apache.commons.net.util.SSLContextUtils: javax.net.ssl.SSLContext createSSLContext(java.lang.String,javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[])>
		SHA-256: bac3d63fb582db5b29d70e8cb633e22dcbead9c0d257bb5998a6acb896390c4f
		Secure: false
	Object:
		Variable: $r17
		Type: byte[]
		Statement: $r17 = virtualinvoke r5.<javax.crypto.Mac: byte[] doFinal(byte[])>(r4)
		Method: <org.apache.commons.net.pop3.ExtendedPOP3Client: boolean auth(org.apache.commons.net.pop3.ExtendedPOP3Client$AUTH_METHOD,java.lang.String,java.lang.String)>
		SHA-256: 4e4632c9b406650cd4c50215992672073f602cf6bbd5b2ab5c2a53ffeea103af
		Secure: true
	Object:
		Variable: $r22
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r22.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r24, varReplacer951)
		Method: <org.apache.commons.net.imap.AuthenticatingIMAPClient: boolean auth(org.apache.commons.net.imap.AuthenticatingIMAPClient$AUTH_METHOD,java.lang.String,java.lang.String)>
		SHA-256: 6f0471c33060b013bdcb8e1fc0dba24ec90d6ee6d24865fd26468f8e66a5135a
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <org.apache.commons.net.util.TrustManagerUtils: javax.net.ssl.X509TrustManager getDefaultTrustManager(java.security.KeyStore)>
		SHA-256: 2b82a4ddd46fdc580444f896d372b0860d965c2851f0a0c3de5e271800f84c99
		Secure: false
	Object:
		Variable: $r29
		Type: byte[]
		Statement: $r29 = virtualinvoke r5.<javax.crypto.Mac: byte[] doFinal(byte[])>(r4)
		Method: <org.apache.commons.net.smtp.AuthenticatingSMTPClient: boolean auth(org.apache.commons.net.smtp.AuthenticatingSMTPClient$AUTH_METHOD,java.lang.String,java.lang.String)>
		SHA-256: 278276cebb699abcf61ba0e8733f23319fe97a06261a52bafb64fe9cca63d0e0
		Secure: true

Findings in Java Class: org.apache.commons.net.imap.AuthenticatingIMAPClient

	 in Method: boolean auth(org.apache.commons.net.imap.AuthenticatingIMAPClient$AUTH_METHOD,java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #6f0471c33060b013bdcb8e1fc0dba24ec90d6ee6d24865fd26468f8e66a5135a)
			Second parameter (with value "HmacMD5") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r22.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r24, varReplacer951)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r22.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r24, varReplacer951)


Findings in Java Class: org.apache.commons.net.pop3.ExtendedPOP3Client

	 in Method: boolean auth(org.apache.commons.net.pop3.ExtendedPOP3Client$AUTH_METHOD,java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #7cb74a5c3f4194a93547846001c134fd6d122204adf5364a406e0fa3afa64115)
			Second parameter (with value "HmacMD5") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r14.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r16, varReplacer1617)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r14.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r16, varReplacer1617)


Findings in Java Class: org.apache.commons.net.pop3.POP3Client

	 in Method: boolean login(java.lang.String,java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ef1948b6915879717735f56407dc681536de3f1b65dbcf6b40fec98c22ffa5cf)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1671)


Findings in Java Class: org.apache.commons.net.smtp.AuthenticatingSMTPClient

	 in Method: boolean auth(org.apache.commons.net.smtp.AuthenticatingSMTPClient$AUTH_METHOD,java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #17e36d50ffd27dafd1e81b98db9a3fabd94e32435683538f470ac1fd1c727452)
			Second parameter (with value "HmacMD5") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r26.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r28, varReplacer1792)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r26.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r28, varReplacer1792)


Findings in Java Class: org.apache.commons.net.util.KeyManagerUtils

	 in Method: java.security.KeyStore loadStore(java.lang.String,java.io.File,java.lang.String)
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #69a5fd04f06bf141b78af57573fff1e3e465e34840141770a3c70d34ac8d972b)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r3.<java.security.KeyStore: void load(java.io.InputStream,char[])>(r8, $r6)


Findings in Java Class: org.apache.commons.net.util.TrustManagerUtils

	 in Method: javax.net.ssl.X509TrustManager getDefaultTrustManager(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(r0)


Findings in Java Class: org.apache.commons.net.util.SSLContextUtils

	 in Method: javax.net.ssl.SSLContext createSSLContext(java.lang.String,javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[])
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(r1, r2, varReplacer2244)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(r1, r2, varReplacer2244)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 23

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 6
	ConstraintError: 4
	NeverTypeOfError: 1
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 1 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 4.010 s

