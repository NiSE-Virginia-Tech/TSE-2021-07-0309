<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>SpotBugs Report</title>
<style type="text/css">
		.tablerow0 {
			background: #EEEEEE;
		}

		.tablerow1 {
			background: white;
		}

		.detailrow0 {
			background: #EEEEEE;
		}

		.detailrow1 {
			background: white;
		}

		.tableheader {
			background: #b9b9fe;
			font-size: larger;
		}

		.tablerow0:hover, .tablerow1:hover {
			background: #aaffaa;
		}

		.priority-1 {
		    color: red;
		    font-weight: bold;
		}
		.priority-2 {
		    color: orange;
		    font-weight: bold;
		}
		.priority-3 {
		    color: green;
		    font-weight: bold;
		}
		.priority-4 {
		    color: blue;
		    font-weight: bold;
		}
		</style>
<script type="text/javascript">
			function toggleRow(elid) {
				if (document.getElementById) {
					element = document.getElementById(elid);
					if (element) {
						if (element.style.display == 'none') {
							element.style.display = 'block';
							//window.status = 'Toggle on!';
						} else {
							element.style.display = 'none';
							//window.status = 'Toggle off!';
						}
					}
				}
			}
		</script>
</head>
<body>
<h1>
<a href="https://spotbugs.github.io/">SpotBugs</a> Report</h1>
<h2>Project Information</h2>
<p>Project: 
		</p>
<p>SpotBugs version: 3.1.12</p>
<p>Code analyzed:</p>
<ul>
<li>/home/x/CryptoAPIDetect/dataset/group/activemq-artemis.git/jgroups-3.6.13.Final.jar</li>
</ul>
<p>
<br/>
<br/>
</p>
<h2>Metrics</h2>
<p>73812 lines of code analyzed,
	in 1115 classes, 
	in 31 packages.</p>
<table width="500" cellpadding="5" cellspacing="2">
<tr class="tableheader">
<th align="left">Metric</th>
<th align="right">Total</th>
<th align="right">Density*</th>
</tr>
<tr class="tablerow0">
<td>High Priority Warnings</td>
<td align="right">22</td>
<td align="right">0.30</td>
</tr>
<tr class="tablerow1">
<td>Medium Priority Warnings</td>
<td align="right">126</td>
<td align="right">1.71</td>
</tr>
<tr class="$totalClass">
<td>
<b>Total Warnings</b>
</td>
<td align="right">
<b>148</b>
</td>
<td align="right">
<b>2.01</b>
</td>
</tr>
</table>
<p>
<i>(* Defects per Thousand lines of non-commenting source statements)</i>
</p>
<p>
<br/>
<br/>
</p>
<h2>Contents</h2>
<ul>
<li>
<a href="#Warnings_SECURITY">Security Warnings</a>
</li>
<li>
<a href="#Details">Details</a>
</li>
</ul>
<h1>Summary</h1>
<table width="500" cellpadding="5" cellspacing="2">
<tr class="tableheader">
<th align="left">Warning Type</th>
<th align="right">Number</th>
</tr>
<tr class="tablerow0">
<td>
<a href="#Warnings_SECURITY">Security Warnings</a>
</td>
<td align="right">146</td>
</tr>
<tr class="tablerow1">
<td>
<b>Total</b>
</td>
<td align="right">
<b>146</b>
</td>
</tr>
</table>
<h1>Warnings</h1>
<p>Click on a warning row to see full context information.</p>
<h2>
<a name="Warnings_SECURITY">Security Warnings</a>
</h2>
<table class="warningtable" width="100%" cellspacing="0">
<tr class="tableheader">
<th align="left">Code</th>
<th align="left">Warning</th>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68419');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68419" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class org.jgroups.demos.Draw<br/>In method org.jgroups.demos.Draw.main(String[])<br/>At Draw.java:[line 168]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68809');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68809" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class org.jgroups.demos.StompDraw<br/>In method org.jgroups.demos.StompDraw.main(String[])<br/>At StompDraw.java:[line 77]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N74122');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N74122" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class org.jgroups.tests.MessageDispatcherSpeedTest<br/>In method org.jgroups.tests.MessageDispatcherSpeedTest.start()<br/>At MessageDispatcherSpeedTest.java:[line 55]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N74420');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N74420" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class org.jgroups.tests.RpcDispatcherSpeedTest<br/>In method org.jgroups.tests.RpcDispatcherSpeedTest.start()<br/>At RpcDispatcherSpeedTest.java:[line 95]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N76521');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N76521" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class org.jgroups.util.ProcessingQueue<br/>In method org.jgroups.util.ProcessingQueue.process()<br/>At ProcessingQueue.java:[line 58]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69919');">
<td>
<span class="priority-2">SECCI</span>
</td>
<td>This usage of java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process; can be vulnerable to Command Injection</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69919" style="display: none;">
<a href="#COMMAND_INJECTION">Bug type COMMAND_INJECTION (click for details)</a>
<br/>In class org.jgroups.protocols.FD_HOST$CommandExecutor<br/>In method org.jgroups.protocols.FD_HOST$CommandExecutor.execute(String)<br/>At FD_HOST.java:[line 443]<br/>Sink method java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process;<br/>Sink parameter 0<br/>Unknown source org/jgroups/protocols/FD_HOST$CommandExecutor.execute(Ljava/lang/String;)I parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69993');">
<td>
<span class="priority-2">SECCI</span>
</td>
<td>This usage of java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process; can be vulnerable to Command Injection</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69993" style="display: none;">
<a href="#COMMAND_INJECTION">Bug type COMMAND_INJECTION (click for details)</a>
<br/>In class org.jgroups.protocols.FD_HOST$CommandExecutor2<br/>In method org.jgroups.protocols.FD_HOST$CommandExecutor2.execute(String)<br/>At FD_HOST.java:[line 488]<br/>Sink method java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process;<br/>Sink parameter 0<br/>Unknown source org/jgroups/protocols/FD_HOST$CommandExecutor2.execute(Ljava/lang/String;)I parameter 0<br/>At FD_HOST.java:[line 436]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70072');">
<td>
<span class="priority-2">SECCI</span>
</td>
<td>This usage of java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process; can be vulnerable to Command Injection</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70072" style="display: none;">
<a href="#COMMAND_INJECTION">Bug type COMMAND_INJECTION (click for details)</a>
<br/>In class org.jgroups.protocols.FD_PING$Pinger<br/>In method org.jgroups.protocols.FD_PING$Pinger.execute(String, Log)<br/>At FD_PING.java:[line 97]<br/>Sink method java/lang/Runtime.exec(Ljava/lang/String;)Ljava/lang/Process;<br/>Sink parameter 0<br/>Unknown source org/jgroups/protocols/FD_PING$Pinger.execute(Ljava/lang/String;Lorg/jgroups/logging/Log;)I parameter 1<br/>At FD_PING.java:[line 53]<br/>At FD_PING.java:[line 54]<br/>At FD_PING.java:[line 56]<br/>At FD_PING.java:[line 59]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69633');">
<td>
<span class="priority-1">SECHCP</span>
</td>
<td>Hard coded password found</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69633" style="display: none;">
<a href="#HARD_CODE_PASSWORD">Bug type HARD_CODE_PASSWORD (click for details)</a>
<br/>In class org.jgroups.protocols.ENCRYPT<br/>In method org.jgroups.protocols.ENCRYPT.initConfiguredKey()<br/>At ENCRYPT.java:[line 307]<br/>Called method java.security.KeyStore.load(InputStream, char[])<br/>Hard coded parameter number (in reverse order) is 1<br/>Return value of String.toCharArray() of type char[]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69803');">
<td>
<span class="priority-1">SECMD5</span>
</td>
<td>This API MD5 (MDX) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69803" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_MD5">Bug type WEAK_MESSAGE_DIGEST_MD5 (click for details)</a>
<br/>In class org.jgroups.protocols.ENCRYPT<br/>In method org.jgroups.protocols.ENCRYPT.initSymCiphers(String, SecretKey)<br/>At ENCRYPT.java:[line 385]<br/>Value MD5</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69861');">
<td>
<span class="priority-1">SECMD5</span>
</td>
<td>This API MD5 (MDX) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69861" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_MD5">Bug type WEAK_MESSAGE_DIGEST_MD5 (click for details)</a>
<br/>In class org.jgroups.protocols.EncryptBase<br/>In method org.jgroups.protocols.EncryptBase.initSymCiphers(String, SecretKey)<br/>At EncryptBase.java:[line 201]<br/>Value MD5</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N77442');">
<td>
<span class="priority-1">SECMD5</span>
</td>
<td>This API MD5 (MDX) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N77442" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_MD5">Bug type WEAK_MESSAGE_DIGEST_MD5 (click for details)</a>
<br/>In class org.jgroups.util.Util<br/>In method org.jgroups.util.Util.md5(String)<br/>At Util.java:[line 4227]<br/>Value MD5</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66702');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in org.jgroups.blocks.ReplicatedHashMap.setState(InputStream)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66702" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class org.jgroups.blocks.ReplicatedHashMap<br/>In method org.jgroups.blocks.ReplicatedHashMap.setState(InputStream)<br/>At ReplicatedHashMap.java:[line 478]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N75381');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in org.jgroups.util.Base64.decodeToObject(String, int, ClassLoader)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N75381" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class org.jgroups.util.Base64<br/>In method org.jgroups.util.Base64.decodeToObject(String, int, ClassLoader)<br/>At Base64.java:[line 1372]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N76891');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in org.jgroups.util.Util.objectFromByteBuffer(byte[], int, int, ClassLoader)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N76891" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class org.jgroups.util.Util<br/>In method org.jgroups.util.Util.objectFromByteBuffer(byte[], int, int, ClassLoader)<br/>At Util.java:[line 520]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N76945');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in org.jgroups.util.Util.objectFromStream(DataInput, ClassLoader)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N76945" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class org.jgroups.util.Util<br/>In method org.jgroups.util.Util.objectFromStream(DataInput, ClassLoader)<br/>At Util.java:[line 756]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69153');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69153" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.jgroups.demos.applets.DrawApplet<br/>In method new org.jgroups.demos.applets.DrawApplet()<br/>At DrawApplet.java:[line 28]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68473');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68473" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.jgroups.demos.Draw<br/>In method new org.jgroups.demos.Draw(String, boolean, boolean, boolean, long, boolean, String, boolean, AddressGenerator)<br/>At Draw.java:[line 34]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68531');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68531" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.jgroups.demos.Draw<br/>In method new org.jgroups.demos.Draw(JChannel)<br/>At Draw.java:[line 34]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68589');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68589" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.jgroups.demos.Draw<br/>In method new org.jgroups.demos.Draw(JChannel, boolean, long)<br/>At Draw.java:[line 34]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68647');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68647" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.jgroups.demos.ExecutionServiceDemo<br/>In method org.jgroups.demos.ExecutionServiceDemo.start()<br/>At ExecutionServiceDemo.java:[line 122]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68863');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68863" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.jgroups.demos.StompDraw<br/>In method new org.jgroups.demos.StompDraw(String, String)<br/>At StompDraw.java:[line 29]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68921');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.lang.Math.random()) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68921" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.jgroups.demos.TotalOrder<br/>In method org.jgroups.demos.TotalOrder.createRandomRequest()<br/>At TotalOrder.java:[line 310]<br/>Value java.lang.Math.random()</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68979');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.lang.Math.random()) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68979" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.jgroups.demos.TotalOrder<br/>In method org.jgroups.demos.TotalOrder.createRandomRequest()<br/>At TotalOrder.java:[line 311]<br/>Value java.lang.Math.random()</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69037');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.lang.Math.random()) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69037" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.jgroups.demos.TotalOrder<br/>In method org.jgroups.demos.TotalOrder.createRandomRequest()<br/>At TotalOrder.java:[line 312]<br/>Value java.lang.Math.random()</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69095');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.lang.Math.random()) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69095" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.jgroups.demos.TotalOrder<br/>In method org.jgroups.demos.TotalOrder.createRandomRequest()<br/>At TotalOrder.java:[line 313]<br/>Value java.lang.Math.random()</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69211');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.lang.Math.random()) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69211" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.jgroups.demos.wb.GraphPanel<br/>In method org.jgroups.demos.wb.GraphPanel.start(String)<br/>At GraphPanel.java:[line 264]<br/>Value java.lang.Math.random()</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69269');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.lang.Math.random()) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69269" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.jgroups.demos.wb.GraphPanel<br/>In method org.jgroups.demos.wb.GraphPanel.start(String)<br/>At GraphPanel.java:[line 265]<br/>Value java.lang.Math.random()</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69385');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69385" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.jgroups.protocols.DELAY<br/>In method org.jgroups.protocols.DELAY.&lt;static initializer for DELAY&gt;()<br/>At DELAY.java:[line 33]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69443');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.lang.Math.random()) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69443" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.jgroups.protocols.DISCARD<br/>In method org.jgroups.protocols.DISCARD.down(Event)<br/>At DISCARD.java:[line 227]<br/>Value java.lang.Math.random()</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69501');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.lang.Math.random()) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69501" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.jgroups.protocols.DISCARD<br/>In method org.jgroups.protocols.DISCARD.shouldDropUpMessage(Message, Address)<br/>At DISCARD.java:[line 278]<br/>Value java.lang.Math.random()</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N73231');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.lang.Math.random()) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N73231" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.jgroups.protocols.pbcast.STABLE$StableTask<br/>In method org.jgroups.protocols.pbcast.STABLE$StableTask.getRandom(long)<br/>At STABLE.java:[line 810]<br/>Value java.lang.Math.random()</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N74250');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.lang.Math.random()) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N74250" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.jgroups.tests.Probe<br/>In method org.jgroups.tests.Probe.sendRequest(InetAddress, InetAddress, int, int, List, String)<br/>At Probe.java:[line 138]<br/>Value java.lang.Math.random()</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N76405');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.lang.Math.random()) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N76405" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.jgroups.util.Pool<br/>In method org.jgroups.util.Pool.get()<br/>At Pool.java:[line 53]<br/>Value java.lang.Math.random()</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N76463');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.lang.Math.random()) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N76463" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.jgroups.util.Pool<br/>In method org.jgroups.util.Pool.main(String[])<br/>At Pool.java:[line 94]<br/>Value java.lang.Math.random()</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N77152');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.lang.Math.random()) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N77152" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.jgroups.util.Util<br/>In method org.jgroups.util.Util.pickRandomElement(List)<br/>At Util.java:[line 2343]<br/>Value java.lang.Math.random()</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N77210');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.lang.Math.random()) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N77210" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.jgroups.util.Util<br/>In method org.jgroups.util.Util.pickRandomElement(Object[])<br/>At Util.java:[line 2350]<br/>Value java.lang.Math.random()</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N77268');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.lang.Math.random()) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N77268" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.jgroups.util.Util<br/>In method org.jgroups.util.Util.pickSubset(List, double)<br/>At Util.java:[line 2184]<br/>Value java.lang.Math.random()</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N77326');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.lang.Math.random()) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N77326" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.jgroups.util.Util<br/>In method org.jgroups.util.Util.random(long)<br/>At Util.java:[line 1676]<br/>Value java.lang.Math.random()</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N77384');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.lang.Math.random()) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N77384" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.jgroups.util.Util<br/>In method org.jgroups.util.Util.sleepRandom(long, long)<br/>At Util.java:[line 1686]<br/>Value java.lang.Math.random()</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65630');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65630" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.jgroups.auth.sasl.SimpleAuthorizingCallbackHandler<br/>In method new org.jgroups.auth.sasl.SimpleAuthorizingCallbackHandler(Properties)<br/>At SimpleAuthorizingCallbackHandler.java:[line 66]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/jgroups/auth/sasl/SimpleAuthorizingCallbackHandler.requireProperty(Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/jgroups/auth/sasl/SimpleAuthorizingCallbackHandler.requireProperty(Ljava/util/Properties;Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/jgroups/auth/sasl/SimpleAuthorizingCallbackHandler.&lt;init&gt;(Ljava/util/Properties;)V parameter 0<br/>Unknown source java/util/Properties.getProperty(Ljava/lang/String;)Ljava/lang/String;<br/>At SimpleAuthorizingCallbackHandler.java:[line 56]<br/>At SimpleAuthorizingCallbackHandler.java:[line 64]<br/>At SimpleAuthorizingCallbackHandler.java:[line 87]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65744');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65744" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.jgroups.auth.sasl.SimpleAuthorizingCallbackHandler<br/>In method new org.jgroups.auth.sasl.SimpleAuthorizingCallbackHandler(Properties)<br/>At SimpleAuthorizingCallbackHandler.java:[line 77]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/jgroups/auth/sasl/SimpleAuthorizingCallbackHandler.&lt;init&gt;(Ljava/util/Properties;)V parameter 0<br/>Unknown source java/util/Properties.getProperty(Ljava/lang/String;)Ljava/lang/String;<br/>At SimpleAuthorizingCallbackHandler.java:[line 56]<br/>At SimpleAuthorizingCallbackHandler.java:[line 71]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65551');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65551" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.jgroups.auth.X509Token<br/>In method org.jgroups.auth.X509Token.setCertificate()<br/>At X509Token.java:[line 182]<br/>Sink method java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/jgroups/auth/X509Token.keystore_path<br/>At X509Token.java:[line 182]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65838');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65838" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.jgroups.blocks.GridFile<br/>In method new org.jgroups.blocks.GridFile(File, String, ReplCache, int, GridFilesystem)<br/>At GridFile.java:[line 44]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/jgroups/blocks/GridFile.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;Lorg/jgroups/blocks/ReplCache;ILorg/jgroups/blocks/GridFilesystem;)V parameter 3<br/>Method usage not detected<br/>At GridFilesystem.java:[line 55]<br/>At GridFilesystem.java:[line 59]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65932');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65932" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.jgroups.blocks.GridFile<br/>In method new org.jgroups.blocks.GridFile(String, String, ReplCache, int, GridFilesystem)<br/>At GridFile.java:[line 35]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/jgroups/blocks/GridFile.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;Lorg/jgroups/blocks/ReplCache;ILorg/jgroups/blocks/GridFilesystem;)V parameter 3<br/>Method usage not detected<br/>At GridFilesystem.java:[line 47]<br/>At GridFilesystem.java:[line 51]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66026');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66026" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.jgroups.blocks.GridFile<br/>In method new org.jgroups.blocks.GridFile(String, ReplCache, int, GridFilesystem)<br/>At GridFile.java:[line 26]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/jgroups/blocks/GridFile.&lt;init&gt;(Ljava/lang/String;Lorg/jgroups/blocks/ReplCache;ILorg/jgroups/blocks/GridFilesystem;)V parameter 3<br/>At Cache.java:[line 175]<br/>At GridFile.java:[line 189]<br/>At GridFile.java:[line 192]<br/>At GridFile.java:[line 199]<br/>At GridFile.java:[line 203]<br/>At GridFile.java:[line 209]<br/>At GridFile.java:[line 214]<br/>At GridFilesystem.java:[line 39]<br/>At GridFilesystem.java:[line 43]<br/>At GridFilesystem.java:[line 63]<br/>At GridFilesystem.java:[line 67]<br/>At GridFilesystem.java:[line 71]<br/>At GridFilesystem.java:[line 87]<br/>At GridFilesystem.java:[line 94]<br/>At GridFilesystemTest.java:[line 17]<br/>At GridFilesystemTest.java:[line 251]<br/>At GridFilesystemTest.java:[line 253]<br/>At GridFilesystemTest.java:[line 257]<br/>At GridFilesystemTest.java:[line 372]<br/>At GridFilesystemTest.java:[line 394]<br/>At GridFilesystemTest.java:[line 148]<br/>At GridFilesystemTest.java:[line 150]<br/>At GridFilesystemTest.java:[line 153]<br/>At GridFilesystemTest.java:[line 154]<br/>At GridFilesystemTest.java:[line 180]<br/>At GridFilesystemTest.java:[line 181]<br/>At GridFilesystemTest.java:[line 210]<br/>At GridFilesystemTest.java:[line 211]<br/>At GridFilesystemTest.java:[line 296]<br/>At GridFilesystemTest.java:[line 299]<br/>At GridFilesystemTest.java:[line 301]<br/>At GridFilesystemTest.java:[line 303]<br/>At GridFilesystemTest.java:[line 310]<br/>At GridFilesystemTest.java:[line 312]<br/>At GridFilesystemTest.java:[line 319]<br/>At Util.java:[line 1956]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66455');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66455" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.jgroups.blocks.GridFile<br/>In method org.jgroups.blocks.GridFile._list(Object)<br/>At GridFile.java:[line 205]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/jgroups/blocks/GridFile.name<br/>At GridFile.java:[line 205]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66534');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66534" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.jgroups.blocks.GridFile<br/>In method org.jgroups.blocks.GridFile._list(Object)<br/>At GridFile.java:[line 207]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/jgroups/blocks/Cache.getInternalMap()Ljava/util/concurrent/ConcurrentMap;<br/>Unknown source org/jgroups/blocks/Cache.map<br/>Unknown source java/util/concurrent/ConcurrentMap.keySet()Ljava/util/Set;<br/>Unknown source java/util/Iterator.next()Ljava/lang/Object;<br/>At Cache.java:[line 175]<br/>At GridFile.java:[line 199]<br/>At GridFile.java:[line 203]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66756');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66756" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.jgroups.conf.ClassConfigurator<br/>In method org.jgroups.conf.ClassConfigurator.readMappings(String)<br/>At ClassConfigurator.java:[line 245]<br/>Sink method java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/jgroups/conf/ClassConfigurator.readMappings(Ljava/lang/String;)Ljava/util/List; parameter 0<br/>At ClassConfigurator.java:[line 81]<br/>At ClassConfigurator.java:[line 102]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66903');">
<td>
<span class="priority-1">SECPTI</span>
</td>
<td>This API (java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66903" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.jgroups.conf.ConfiguratorFactory<br/>In method org.jgroups.conf.ConfiguratorFactory.getConfigStream(String)<br/>At ConfiguratorFactory.java:[line 130]<br/>Sink method java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/jgroups/conf/ConfiguratorFactory.getConfigStream(Ljava/lang/String;)Ljava/io/InputStream; parameter 0<br/>Method usage with tainted arguments detected<br/>At JChannel.java:[line 139]<br/>At PartitionedHashMap.java:[line 213]<br/>At ReplCache.java:[line 267]<br/>At ReplicatedTree.java:[line 73]<br/>At ReplicatedTree.java:[line 86]<br/>At ConfiguratorFactory.java:[line 93]<br/>At ConfiguratorFactory.java:[line 173]<br/>At ConfiguratorFactory.java:[line 210]<br/>At Chat.java:[line 33]<br/>At CounterServiceDemo.java:[line 19]<br/>At Draw.java:[line 57]<br/>At ExecutionServiceDemo.java:[line 111]<br/>At LockServiceDemo.java:[line 31]<br/>At PubSub.java:[line 43]<br/>At PubSub.java:[line 96]<br/>At QuoteServer.java:[line 59]<br/>At RelayDemo.java:[line 29]<br/>At RelayDemoRpc.java:[line 59]<br/>At ReplicatedHashMapDemo.java:[line 242]<br/>At Topology.java:[line 165]<br/>At TotalOrder.java:[line 231]<br/>At ViewDemo.java:[line 33]<br/>At DrawApplet.java:[line 57]<br/>At Whiteboard.java:[line 102]<br/>At Discovery.java:[line 266]<br/>At RELAY.java:[line 432]<br/>At RELAY2.java:[line 312]<br/>At RelayConfig.java:[line 211]<br/>At SUPERVISOR.java:[line 114]<br/>At SUPERVISOR.java:[line 238]<br/>At FlowControlTest.java:[line 22]<br/>At LargeState.java:[line 47]<br/>At MessageDispatcherSpeedTest.java:[line 39]<br/>At PingPong.java:[line 31]<br/>At RoundTripRpc.java:[line 39]<br/>At RpcDispatcherSpeedTest.java:[line 63]<br/>At TestToaOrder.java:[line 411]<br/>At UnicastTest.java:[line 42]<br/>At UnicastTestRpc.java:[line 63]<br/>At MPerf.java:[line 86]<br/>At MPerfRpc.java:[line 109]<br/>At UPerf.java:[line 90]<br/>At UUPerf.java:[line 86]<br/>At JGroupsTransport.java:[line 73]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68104');">
<td>
<span class="priority-1">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68104" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.jgroups.conf.XmlConfigurator<br/>In method org.jgroups.conf.XmlConfigurator.main(String[])<br/>At XmlConfigurator.java:[line 260]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Tainted source org/jgroups/conf/XmlConfigurator.main([Ljava/lang/String;)V parameter 0</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69724');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69724" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.jgroups.protocols.ENCRYPT<br/>In method org.jgroups.protocols.ENCRYPT.initConfiguredKey()<br/>At ENCRYPT.java:[line 299]<br/>Sink method java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/jgroups/protocols/ENCRYPT.keyStoreName<br/>At ENCRYPT.java:[line 299]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70181');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70181" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.jgroups.protocols.FILE_PING<br/>In method org.jgroups.protocols.FILE_PING.createRootDir()<br/>At FILE_PING.java:[line 164]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/jgroups/protocols/FILE_PING.location<br/>At FILE_PING.java:[line 164]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70260');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70260" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.jgroups.protocols.FILE_PING<br/>In method org.jgroups.protocols.FILE_PING.readAll(List, String, Responses)<br/>At FILE_PING.java:[line 228]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/jgroups/protocols/FILE_PING.readAll(Ljava/util/List;Ljava/lang/String;Lorg/jgroups/util/Responses;)V parameter 1<br/>At FILE_PING.java:[line 119]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70339');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70339" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.jgroups.protocols.FILE_PING<br/>In method org.jgroups.protocols.FILE_PING.remove(String, Address)<br/>At FILE_PING.java:[line 202]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/jgroups/protocols/FILE_PING.remove(Ljava/lang/String;Lorg/jgroups/Address;)V parameter 1<br/>At FILE_PING.java:[line 111]<br/>At FILE_PING.java:[line 185]<br/>At FILE_PING.java:[line 195]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70438');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70438" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.jgroups.protocols.FILE_PING<br/>In method org.jgroups.protocols.FILE_PING.remove(String, Address)<br/>At FILE_PING.java:[line 209]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/jgroups/protocols/FILE_PING.addressToFilename(Lorg/jgroups/Address;)Ljava/lang/String;<br/>Unknown source java/util/regex/Matcher.replaceAll(Ljava/lang/String;)Ljava/lang/String;<br/>At FILE_PING.java:[line 208]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70522');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70522" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.jgroups.protocols.FILE_PING<br/>In method org.jgroups.protocols.FILE_PING.removeAll(String)<br/>At FILE_PING.java:[line 217]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/jgroups/protocols/FILE_PING.removeAll(Ljava/lang/String;)V parameter 0<br/>At FILE_PING.java:[line 181]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70601');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70601" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.jgroups.protocols.FILE_PING<br/>In method org.jgroups.protocols.FILE_PING.write(List, String)<br/>At FILE_PING.java:[line 294]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/jgroups/protocols/FILE_PING.write(Ljava/util/List;Ljava/lang/String;)V parameter 0<br/>At FILE_PING.java:[line 123]<br/>At FILE_PING.java:[line 290]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70690');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70690" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.jgroups.protocols.FILE_PING<br/>In method org.jgroups.protocols.FILE_PING.write(List, String)<br/>At FILE_PING.java:[line 299]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/jgroups/protocols/FILE_PING.addressToFilename(Lorg/jgroups/Address;)Ljava/lang/String;<br/>Unknown source java/util/regex/Matcher.replaceAll(Ljava/lang/String;)Ljava/lang/String;<br/>At FILE_PING.java:[line 298]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70774');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70774" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.jgroups.protocols.FORK<br/>In method org.jgroups.protocols.FORK.getForkStream(String)<br/>At FORK.java:[line 322]<br/>Sink method java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/jgroups/protocols/FORK.getForkStream(Ljava/lang/String;)Ljava/io/InputStream; parameter 0<br/>At FORK.java:[line 92]<br/>At FORK.java:[line 253]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71441');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71441" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.jgroups.protocols.PDC<br/>In method org.jgroups.protocols.PDC.createDiskCacheFile()<br/>At PDC.java:[line 116]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/jgroups/protocols/PDC.cache_dir<br/>At PDC.java:[line 116]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71520');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71520" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.jgroups.protocols.PDC<br/>In method org.jgroups.protocols.PDC.removeNodeFromDisk(Address)<br/>At PDC.java:[line 254]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/jgroups/protocols/PDC.removeNodeFromDisk(Lorg/jgroups/Address;)V parameter 0<br/>Unknown source org/jgroups/protocols/PDC.addressAsString(Lorg/jgroups/Address;)Ljava/lang/String; parameter 0<br/>Unknown source java/lang/Object.toString()Ljava/lang/String;<br/>Unknown source org/jgroups/protocols/PDC.addressAsString(Lorg/jgroups/Address;)Ljava/lang/String;<br/>At Event.java:[line 95]<br/>At PDC.java:[line 93]<br/>At PDC.java:[line 95]<br/>At PDC.java:[line 102]<br/>At PDC.java:[line 103]<br/>At PDC.java:[line 105]<br/>At PDC.java:[line 253]<br/>At PDC.java:[line 254]<br/>At PDC.java:[line 263]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71694');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71694" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.jgroups.protocols.PDC<br/>In method org.jgroups.protocols.PDC.writeNodeToDisk(Address, PhysicalAddress)<br/>At PDC.java:[line 199]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/jgroups/protocols/PDC.writeNodeToDisk(Lorg/jgroups/Address;Lorg/jgroups/PhysicalAddress;)V parameter 1<br/>Unknown source org/jgroups/protocols/PDC.addressAsString(Lorg/jgroups/Address;)Ljava/lang/String; parameter 0<br/>Unknown source java/lang/Object.toString()Ljava/lang/String;<br/>Unknown source org/jgroups/protocols/PDC.addressAsString(Lorg/jgroups/Address;)Ljava/lang/String;<br/>At PDC.java:[line 89]<br/>At PDC.java:[line 189]<br/>At PDC.java:[line 199]<br/>At PDC.java:[line 263]<br/>At Tuple.java:[line 18]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71828');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71828" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.jgroups.protocols.PDC<br/>In method org.jgroups.protocols.PDC.writeToTempFile(File, Address, Address, String)<br/>At PDC.java:[line 232]<br/>Sink method java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;<br/>Sink parameter 0<br/>Unknown source org/jgroups/protocols/PDC.writeToTempFile(Ljava/io/File;Lorg/jgroups/Address;Lorg/jgroups/Address;Ljava/lang/String;)Ljava/io/File; parameter 3<br/>At PDC.java:[line 195]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N73152');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N73152" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.jgroups.protocols.SYM_ENCRYPT<br/>In method org.jgroups.protocols.SYM_ENCRYPT.readSecretKeyFromKeystore()<br/>At SYM_ENCRYPT.java:[line 95]<br/>Sink method java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/jgroups/protocols/SYM_ENCRYPT.keystore_name<br/>At SYM_ENCRYPT.java:[line 95]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N73405');">
<td>
<span class="priority-1">SECPTI</span>
</td>
<td>This API (java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N73405" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.jgroups.tests.CheckMonotonicallyIncreasingNumbers<br/>In method org.jgroups.tests.CheckMonotonicallyIncreasingNumbers.main(String[])<br/>At CheckMonotonicallyIncreasingNumbers.java:[line 57]<br/>Sink method java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Tainted source org/jgroups/tests/CheckMonotonicallyIncreasingNumbers.main([Ljava/lang/String;)V parameter 0</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N73474');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/FileReader.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N73474" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.jgroups.tests.CheckToaOrder<br/>In method org.jgroups.tests.CheckToaOrder.compareFiles(String, String, List)<br/>At CheckToaOrder.java:[line 93]<br/>Sink method java/io/FileReader.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/jgroups/tests/CheckToaOrder.compareFiles(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V parameter 1<br/>Unknown source java/lang/Thread.getName()Ljava/lang/String;<br/>Unknown source org/jgroups/tests/CheckToaOrder.compareFiles(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V parameter 2<br/>At CheckToaOrder.java:[line 91]<br/>At CheckToaOrder.java:[line 283]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N73573');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/FileReader.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N73573" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.jgroups.tests.CheckToaOrder<br/>In method org.jgroups.tests.CheckToaOrder.compareFiles(String, String, List)<br/>At CheckToaOrder.java:[line 102]<br/>Sink method java/io/FileReader.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/jgroups/tests/CheckToaOrder.compareFiles(Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V parameter 1<br/>At CheckToaOrder.java:[line 283]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N73652');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N73652" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.jgroups.tests.GridFilesystemTest$cd<br/>In method org.jgroups.tests.GridFilesystemTest$cd.execute(GridFilesystem, String[])<br/>At GridFilesystemTest.java:[line 249]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/jgroups/tests/GridFilesystemTest.current_dir<br/>At GridFilesystemTest.java:[line 249]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N73731');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N73731" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.jgroups.tests.GridFilesystemTest$down<br/>In method org.jgroups.tests.GridFilesystemTest$down.execute(GridFilesystem, String[])<br/>At GridFilesystemTest.java:[line 379]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/jgroups/tests/GridFilesystemTest.access$800([Ljava/lang/String;)[Ljava/lang/String;<br/>Unknown source org/jgroups/tests/GridFilesystemTest.HOME<br/>At GridFilesystemTest.java:[line 372]<br/>At GridFilesystemTest.java:[line 375]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N73825');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N73825" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.jgroups.tests.GridFilesystemTest$down<br/>In method org.jgroups.tests.GridFilesystemTest$down.execute(GridFilesystem, String[])<br/>At GridFilesystemTest.java:[line 395]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/jgroups/util/Util.components(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;<br/>Unknown source org/jgroups/util/Util.components(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; parameter 1<br/>Unknown source org/jgroups/tests/GridFilesystemTest.access$800([Ljava/lang/String;)[Ljava/lang/String;<br/>Unknown source org/jgroups/tests/GridFilesystemTest.HOME<br/>Unknown source org/jgroups/util/Util.components(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String; parameter 0<br/>At GridFilesystemTest.java:[line 372]<br/>At GridFilesystemTest.java:[line 375]<br/>At GridFilesystemTest.java:[line 386]<br/>At GridFilesystemTest.java:[line 388]<br/>At Util.java:[line 1956]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N73964');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N73964" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.jgroups.tests.GridFilesystemTest$up<br/>In method org.jgroups.tests.GridFilesystemTest$up.execute(GridFilesystem, String[])<br/>At GridFilesystemTest.java:[line 318]<br/>Sink method java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/jgroups/tests/GridFilesystemTest.access$800([Ljava/lang/String;)[Ljava/lang/String;<br/>Unknown source org/jgroups/tests/GridFilesystemTest.HOME<br/>At GridFilesystemTest.java:[line 296]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N74176');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N74176" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.jgroups.tests.ParseMessages<br/>In method new org.jgroups.tests.ParseMessages(String)<br/>At ParseMessages.java:[line 23]<br/>Sink method java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/jgroups/tests/ParseMessages.&lt;init&gt;(Ljava/lang/String;)V parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N74913');">
<td>
<span class="priority-1">SECPTI</span>
</td>
<td>This API (java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N74913" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.jgroups.tests.perf.MPerf<br/>In method org.jgroups.tests.perf.MPerf.findFile(String)<br/>At MPerf.java:[line 236]<br/>Sink method java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/jgroups/tests/perf/MPerf.findFile(Ljava/lang/String;)Ljava/io/InputStream; parameter 0<br/>Method usage with tainted arguments detected<br/>At MPerf.java:[line 205]<br/>At MPerf.java:[line 206]<br/>At Util.java:[line 1513]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N75017');">
<td>
<span class="priority-1">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N75017" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.jgroups.tests.perf.MPerf<br/>In method org.jgroups.tests.perf.MPerf.findFile(String)<br/>At MPerf.java:[line 238]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/jgroups/tests/perf/MPerf.findFile(Ljava/lang/String;)Ljava/io/InputStream; parameter 0<br/>Method usage with tainted arguments detected<br/>At MPerf.java:[line 205]<br/>At MPerf.java:[line 206]<br/>At Util.java:[line 1513]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N75121');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N75121" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.jgroups.tests.perf.MPerf<br/>In method org.jgroups.tests.perf.MPerf.findFile(String)<br/>At MPerf.java:[line 240]<br/>Sink method java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.getName()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N75190');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N75190" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.jgroups.tests.perf.MPerf<br/>In method org.jgroups.tests.perf.MPerf.findFile(String)<br/>At MPerf.java:[line 245]<br/>Sink method java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.getName()Ljava/lang/String;<br/>At MPerf.java:[line 244]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N75435');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N75435" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.jgroups.util.Base64<br/>In method org.jgroups.util.Base64.decodeFromFile(String)<br/>At Base64.java:[line 1483]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/jgroups/util/Base64.decodeFromFile(Ljava/lang/String;)[B parameter 0<br/>Method usage not detected<br/>At Base64.java:[line 1612]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N75519');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N75519" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.jgroups.util.Base64<br/>In method org.jgroups.util.Base64.encodeFromFile(String)<br/>At Base64.java:[line 1544]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/jgroups/util/Base64.encodeFromFile(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Method usage not detected<br/>At Base64.java:[line 1584]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N76575');">
<td>
<span class="priority-1">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N76575" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.jgroups.util.PropertiesToAsciidoc<br/>In method org.jgroups.util.PropertiesToAsciidoc.main(String[])<br/>At PropertiesToAsciidoc.java:[line 44]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Tainted source org/jgroups/util/PropertiesToAsciidoc.main([Ljava/lang/String;)V parameter 0<br/>At PropertiesToAsciidoc.java:[line 39]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N76654');">
<td>
<span class="priority-1">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N76654" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.jgroups.util.PropertiesToAsciidoc<br/>In method org.jgroups.util.PropertiesToAsciidoc.main(String[])<br/>At PropertiesToAsciidoc.java:[line 45]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Tainted source org/jgroups/util/PropertiesToAsciidoc.main([Ljava/lang/String;)V parameter 0<br/>At PropertiesToAsciidoc.java:[line 39]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N76733');">
<td>
<span class="priority-1">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N76733" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.jgroups.util.PropertiesToAsciidoc<br/>In method org.jgroups.util.PropertiesToAsciidoc.main(String[])<br/>At PropertiesToAsciidoc.java:[line 65]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Tainted source org/jgroups/util/PropertiesToAsciidoc.main([Ljava/lang/String;)V parameter 0<br/>At PropertiesToAsciidoc.java:[line 40]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N76812');">
<td>
<span class="priority-1">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N76812" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.jgroups.util.PropertiesToAsciidoc<br/>In method org.jgroups.util.PropertiesToAsciidoc.main(String[])<br/>At PropertiesToAsciidoc.java:[line 66]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Tainted source org/jgroups/util/PropertiesToAsciidoc.main([Ljava/lang/String;)V parameter 0<br/>At PropertiesToAsciidoc.java:[line 40]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N76999');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N76999" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.jgroups.util.Util<br/>In method org.jgroups.util.Util.readFile(String)<br/>At Util.java:[line 1436]<br/>Sink method java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/jgroups/util/Util.readFile(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Method usage not detected<br/>At MakeUnique.java:[line 19]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N77083');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N77083" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.jgroups.util.Util<br/>In method org.jgroups.util.Util.recurse(List, String, Class)<br/>At Util.java:[line 2746]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.list()[Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N77616');">
<td>
<span class="priority-1">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N77616" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.jgroups.util.XMLSchemaGenerator<br/>In method org.jgroups.util.XMLSchemaGenerator.main(String[])<br/>At XMLSchemaGenerator.java:[line 61]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V<br/>Sink parameter 1<br/>Tainted source org/jgroups/util/XMLSchemaGenerator.main([Ljava/lang/String;)V parameter 0</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68705');">
<td>
<span class="priority-1">SECPTO</span>
</td>
<td>This API (java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V) writes to a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68705" style="display: none;">
<a href="#PATH_TRAVERSAL_OUT">Bug type PATH_TRAVERSAL_OUT (click for details)</a>
<br/>In class org.jgroups.demos.KeyStoreGenerator<br/>In method org.jgroups.demos.KeyStoreGenerator.main(String[])<br/>At KeyStoreGenerator.java:[line 104]<br/>Sink method java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/jgroups/demos/KeyStoreGenerator.keyStoreName<br/>Tainted source org/jgroups/demos/KeyStoreGenerator.main([Ljava/lang/String;)V parameter 0<br/>At KeyStoreGenerator.java:[line 75]<br/>At KeyStoreGenerator.java:[line 95]<br/>At KeyStoreGenerator.java:[line 104]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69559');">
<td>
<span class="priority-2">SECPTO</span>
</td>
<td>This API (java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V) writes to a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69559" style="display: none;">
<a href="#PATH_TRAVERSAL_OUT">Bug type PATH_TRAVERSAL_OUT (click for details)</a>
<br/>In class org.jgroups.protocols.Discovery<br/>In method org.jgroups.protocols.Discovery.dumpCache(String)<br/>At Discovery.java:[line 285]<br/>Sink method java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/jgroups/protocols/Discovery.dumpCache(Ljava/lang/String;)V parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N74048');">
<td>
<span class="priority-2">SECPTO</span>
</td>
<td>This API (java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V) writes to a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N74048" style="display: none;">
<a href="#PATH_TRAVERSAL_OUT">Bug type PATH_TRAVERSAL_OUT (click for details)</a>
<br/>In class org.jgroups.tests.MakeUnique<br/>In method org.jgroups.tests.MakeUnique.start(String, String, String, Collection, boolean)<br/>At MakeUnique.java:[line 25]<br/>Sink method java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/jgroups/tests/MakeUnique.start(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Collection;Z)V parameter 3<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N74474');">
<td>
<span class="priority-2">SECPTO</span>
</td>
<td>This API (java/io/FileWriter.&lt;init&gt;(Ljava/lang/String;)V) writes to a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N74474" style="display: none;">
<a href="#PATH_TRAVERSAL_OUT">Bug type PATH_TRAVERSAL_OUT (click for details)</a>
<br/>In class org.jgroups.tests.TestToaOrder<br/>In method org.jgroups.tests.TestToaOrder.startTest()<br/>At TestToaOrder.java:[line 517]<br/>Sink method java/io/FileWriter.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/jgroups/JChannel.getAddressAsString()Ljava/lang/String;<br/>Unknown source org/jgroups/JChannel.local_addr<br/>Unknown source java/lang/Object.toString()Ljava/lang/String;<br/>At JChannel.java:[line 460]<br/>At TestToaOrder.java:[line 514]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N75603');">
<td>
<span class="priority-2">SECPTO</span>
</td>
<td>This API (java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V) writes to a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N75603" style="display: none;">
<a href="#PATH_TRAVERSAL_OUT">Bug type PATH_TRAVERSAL_OUT (click for details)</a>
<br/>In class org.jgroups.util.Base64<br/>In method org.jgroups.util.Base64.decodeFileToFile(String, String)<br/>At Base64.java:[line 1615]<br/>Sink method java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/jgroups/util/Base64.decodeFileToFile(Ljava/lang/String;Ljava/lang/String;)V parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N75677');">
<td>
<span class="priority-2">SECPTO</span>
</td>
<td>This API (java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V) writes to a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N75677" style="display: none;">
<a href="#PATH_TRAVERSAL_OUT">Bug type PATH_TRAVERSAL_OUT (click for details)</a>
<br/>In class org.jgroups.util.Base64<br/>In method org.jgroups.util.Base64.decodeToFile(String, String)<br/>At Base64.java:[line 1445]<br/>Sink method java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/jgroups/util/Base64.decodeToFile(Ljava/lang/String;Ljava/lang/String;)V parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N75751');">
<td>
<span class="priority-2">SECPTO</span>
</td>
<td>This API (java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V) writes to a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N75751" style="display: none;">
<a href="#PATH_TRAVERSAL_OUT">Bug type PATH_TRAVERSAL_OUT (click for details)</a>
<br/>In class org.jgroups.util.Base64<br/>In method org.jgroups.util.Base64.encodeFileToFile(String, String)<br/>At Base64.java:[line 1587]<br/>Sink method java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/jgroups/util/Base64.encodeFileToFile(Ljava/lang/String;Ljava/lang/String;)V parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N75825');">
<td>
<span class="priority-2">SECPTO</span>
</td>
<td>This API (java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V) writes to a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N75825" style="display: none;">
<a href="#PATH_TRAVERSAL_OUT">Bug type PATH_TRAVERSAL_OUT (click for details)</a>
<br/>In class org.jgroups.util.Base64<br/>In method org.jgroups.util.Base64.encodeToFile(byte[], String)<br/>At Base64.java:[line 1413]<br/>Sink method java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/jgroups/util/Base64.encodeToFile([BLjava/lang/String;)V parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N72722');">
<td>
<span class="priority-2">SECRD</span>
</td>
<td>The regular expression "^[a-z0-9]([a-z0-9\\-\\_]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9\\-\\_]*[a-z0-9])?)*$" is vulnerable to a denial of service attack (ReDOS)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N72722" style="display: none;">
<a href="#REDOS">Bug type REDOS (click for details)</a>
<br/>Value ^[a-z0-9]([a-z0-9\\-\\_]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9\\-\\_]*[a-z0-9])?)*$<br/>In class org.jgroups.protocols.S3_PING$Utils<br/>In method org.jgroups.protocols.S3_PING$Utils.isValidSubdomainBucketName(String)<br/>At S3_PING.java:[line 1854]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N77500');">
<td>
<span class="priority-2">SECSHA1</span>
</td>
<td>This API SHA (SHA-1) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N77500" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_SHA1">Bug type WEAK_MESSAGE_DIGEST_SHA1 (click for details)</a>
<br/>In class org.jgroups.util.Util<br/>In method org.jgroups.util.Util.createDigest(String, long, double)<br/>At Util.java:[line 385]<br/>Value SHA</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N77558');">
<td>
<span class="priority-2">SECSHA1</span>
</td>
<td>This API SHA (SHA-1) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N77558" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_SHA1">Bug type WEAK_MESSAGE_DIGEST_SHA1 (click for details)</a>
<br/>In class org.jgroups.util.Util<br/>In method org.jgroups.util.Util.sha(String)<br/>At Util.java:[line 4243]<br/>Value SHA</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70967');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70967" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.jgroups.protocols.JDBC_PING<br/>In method org.jgroups.protocols.JDBC_PING.attemptSchemaInitialization()<br/>At JDBC_PING.java:[line 303]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/jgroups/protocols/JDBC_PING.initialize_sql<br/>At JDBC_PING.java:[line 303]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71046');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71046" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.jgroups.protocols.JDBC_PING<br/>In method org.jgroups.protocols.JDBC_PING.clearTable()<br/>At JDBC_PING.java:[line 400]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/jgroups/protocols/JDBC_PING.clear_sql<br/>At JDBC_PING.java:[line 400]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71125');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71125" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.jgroups.protocols.JDBC_PING<br/>In method org.jgroups.protocols.JDBC_PING.contains(String, Address)<br/>At JDBC_PING.java:[line 226]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/jgroups/protocols/JDBC_PING.contains_sql<br/>At JDBC_PING.java:[line 226]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71204');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71204" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.jgroups.protocols.JDBC_PING<br/>In method org.jgroups.protocols.JDBC_PING.delete(Connection, String, String)<br/>At JDBC_PING.java:[line 370]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/jgroups/protocols/JDBC_PING.delete_single_sql<br/>At JDBC_PING.java:[line 370]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71283');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71283" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.jgroups.protocols.JDBC_PING<br/>In method org.jgroups.protocols.JDBC_PING.insert(Connection, PingData, String, String)<br/>At JDBC_PING.java:[line 360]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/jgroups/protocols/JDBC_PING.insert_single_sql<br/>At JDBC_PING.java:[line 360]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71362');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71362" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.jgroups.protocols.JDBC_PING<br/>In method org.jgroups.protocols.JDBC_PING.readAll(Connection, List, String, Responses)<br/>At JDBC_PING.java:[line 265]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/jgroups/protocols/JDBC_PING.select_all_pingdata_sql<br/>At JDBC_PING.java:[line 265]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67417');">
<td>
<span class="priority-1">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67417" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.jgroups.conf.ConfiguratorFactory<br/>In method org.jgroups.conf.ConfiguratorFactory.getConfigStream(String)<br/>At ConfiguratorFactory.java:[line 142]<br/>Sink method java/net/URL.openStream()Ljava/io/InputStream;<br/>Sink parameter 0<br/>Unknown source java/net/URL.&lt;init&gt;(Ljava/lang/String;)V<br/>Unknown source org/jgroups/conf/ConfiguratorFactory.getConfigStream(Ljava/lang/String;)Ljava/io/InputStream; parameter 0<br/>Method usage with tainted arguments detected<br/>At JChannel.java:[line 139]<br/>At PartitionedHashMap.java:[line 213]<br/>At ReplCache.java:[line 267]<br/>At ReplicatedTree.java:[line 73]<br/>At ReplicatedTree.java:[line 86]<br/>At ConfiguratorFactory.java:[line 93]<br/>At ConfiguratorFactory.java:[line 142]<br/>At ConfiguratorFactory.java:[line 173]<br/>At ConfiguratorFactory.java:[line 210]<br/>At Chat.java:[line 33]<br/>At CounterServiceDemo.java:[line 19]<br/>At Draw.java:[line 57]<br/>At ExecutionServiceDemo.java:[line 111]<br/>At LockServiceDemo.java:[line 31]<br/>At PubSub.java:[line 43]<br/>At PubSub.java:[line 96]<br/>At QuoteServer.java:[line 59]<br/>At RelayDemo.java:[line 29]<br/>At RelayDemoRpc.java:[line 59]<br/>At ReplicatedHashMapDemo.java:[line 242]<br/>At Topology.java:[line 165]<br/>At TotalOrder.java:[line 231]<br/>At ViewDemo.java:[line 33]<br/>At DrawApplet.java:[line 57]<br/>At Whiteboard.java:[line 102]<br/>At Discovery.java:[line 266]<br/>At RELAY.java:[line 432]<br/>At RELAY2.java:[line 312]<br/>At RelayConfig.java:[line 211]<br/>At SUPERVISOR.java:[line 114]<br/>At SUPERVISOR.java:[line 238]<br/>At FlowControlTest.java:[line 22]<br/>At LargeState.java:[line 47]<br/>At MessageDispatcherSpeedTest.java:[line 39]<br/>At PingPong.java:[line 31]<br/>At RoundTripRpc.java:[line 39]<br/>At RpcDispatcherSpeedTest.java:[line 63]<br/>At TestToaOrder.java:[line 411]<br/>At UnicastTest.java:[line 42]<br/>At UnicastTestRpc.java:[line 63]<br/>At MPerf.java:[line 86]<br/>At MPerfRpc.java:[line 109]<br/>At UPerf.java:[line 90]<br/>At UUPerf.java:[line 86]<br/>At JGroupsTransport.java:[line 73]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67946');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67946" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.jgroups.conf.ConfiguratorFactory<br/>In method org.jgroups.conf.ConfiguratorFactory.getConfigStream(Object)<br/>At ConfiguratorFactory.java:[line 165]<br/>Sink method java/net/URL.openStream()Ljava/io/InputStream;<br/>Sink parameter 0<br/>Unknown source org/jgroups/conf/ConfiguratorFactory.getConfigStream(Ljava/lang/Object;)Ljava/io/InputStream; parameter 0<br/>Method usage not detected<br/>At ConfiguratorFactory.java:[line 188]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68030');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68030" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.jgroups.conf.ConfiguratorFactory<br/>In method org.jgroups.conf.ConfiguratorFactory.getConfigStream(URL)<br/>At ConfiguratorFactory.java:[line 112]<br/>Sink method java/net/URL.openStream()Ljava/io/InputStream;<br/>Sink parameter 0<br/>Unknown source org/jgroups/conf/ConfiguratorFactory.getConfigStream(Ljava/net/URL;)Ljava/io/InputStream; parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68173');">
<td>
<span class="priority-1">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68173" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.jgroups.conf.XmlConfigurator<br/>In method org.jgroups.conf.XmlConfigurator.main(String[])<br/>At XmlConfigurator.java:[line 266]<br/>Sink method java/net/URL.openStream()Ljava/io/InputStream;<br/>Sink parameter 0<br/>Tainted source org/jgroups/conf/XmlConfigurator.main([Ljava/lang/String;)V parameter 0<br/>Tainted source java/net/URL.&lt;init&gt;(Ljava/lang/String;)V<br/>At XmlConfigurator.java:[line 266]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68257');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68257" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.jgroups.conf.XmlConfigurator<br/>In method org.jgroups.conf.XmlConfigurator.getInstance(URL, Boolean)<br/>At XmlConfigurator.java:[line 55]<br/>Sink method java/net/URL.openStream()Ljava/io/InputStream;<br/>Sink parameter 0<br/>Unknown source org/jgroups/conf/XmlConfigurator.getInstance(Ljava/net/URL;Ljava/lang/Boolean;)Lorg/jgroups/conf/XmlConfigurator; parameter 1<br/>Method usage not detected<br/>At JChannel.java:[line 129]<br/>At ConfiguratorFactory.java:[line 62]<br/>At XmlConfigurator.java:[line 43]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70863');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70863" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.jgroups.protocols.FORK<br/>In method org.jgroups.protocols.FORK.getForkStream(String)<br/>At FORK.java:[line 330]<br/>Sink method java/net/URL.openStream()Ljava/io/InputStream;<br/>Sink parameter 0<br/>Unknown source org/jgroups/protocols/FORK.getForkStream(Ljava/lang/String;)Ljava/io/InputStream; parameter 0<br/>Unknown source java/net/URL.&lt;init&gt;(Ljava/lang/String;)V<br/>At FORK.java:[line 92]<br/>At FORK.java:[line 253]<br/>At FORK.java:[line 330]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71907');">
<td>
<span class="priority-1">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71907" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.jgroups.protocols.RACKSPACE_PING$RackspaceClient$ConnBuilder<br/>In method new org.jgroups.protocols.RACKSPACE_PING$RackspaceClient$ConnBuilder(RACKSPACE_PING$RackspaceClient, RACKSPACE_PING$RackspaceClient$Credentials, String, String)<br/>At RACKSPACE_PING.java:[line 399]<br/>Sink method java/net/URL.openConnection()Ljava/net/URLConnection;<br/>Sink parameter 0<br/>Unknown source java/net/URL.&lt;init&gt;(Ljava/lang/String;)V<br/>Unknown source org/jgroups/protocols/RACKSPACE_PING$RackspaceClient$ConnBuilder.&lt;init&gt;(Lorg/jgroups/protocols/RACKSPACE_PING$RackspaceClient;Lorg/jgroups/protocols/RACKSPACE_PING$RackspaceClient$Credentials;Ljava/lang/String;Ljava/lang/String;)V parameter 0<br/>Unknown source org/jgroups/protocols/RACKSPACE_PING$RackspaceClient$ConnBuilder.&lt;init&gt;(Lorg/jgroups/protocols/RACKSPACE_PING$RackspaceClient;Lorg/jgroups/protocols/RACKSPACE_PING$RackspaceClient$Credentials;Ljava/lang/String;Ljava/lang/String;)V parameter 1<br/>Unknown source org/jgroups/protocols/RACKSPACE_PING$RackspaceClient$Credentials.storageURL<br/>Method usage with tainted arguments detected<br/>At RACKSPACE_PING.java:[line 67]<br/>At RACKSPACE_PING.java:[line 74]<br/>At RACKSPACE_PING.java:[line 75]<br/>At RACKSPACE_PING.java:[line 77]<br/>At RACKSPACE_PING.java:[line 98]<br/>At RACKSPACE_PING.java:[line 102]<br/>At RACKSPACE_PING.java:[line 111]<br/>At RACKSPACE_PING.java:[line 112]<br/>At RACKSPACE_PING.java:[line 117]<br/>At RACKSPACE_PING.java:[line 118]<br/>At RACKSPACE_PING.java:[line 119]<br/>At RACKSPACE_PING.java:[line 185]<br/>At RACKSPACE_PING.java:[line 195]<br/>At RACKSPACE_PING.java:[line 209]<br/>At RACKSPACE_PING.java:[line 219]<br/>At RACKSPACE_PING.java:[line 234]<br/>At RACKSPACE_PING.java:[line 245]<br/>At RACKSPACE_PING.java:[line 261]<br/>At RACKSPACE_PING.java:[line 269]<br/>At RACKSPACE_PING.java:[line 285]<br/>At RACKSPACE_PING.java:[line 293]<br/>At RACKSPACE_PING.java:[line 299]<br/>At RACKSPACE_PING.java:[line 395]<br/>At RACKSPACE_PING.java:[line 397]<br/>At RACKSPACE_PING.java:[line 399]<br/>At RACKSPACE_PING.java:[line 476]<br/>At RACKSPACE_PING.java:[line 477]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N72266');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N72266" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.jgroups.protocols.RACKSPACE_PING$RackspaceClient$ConnBuilder<br/>In method new org.jgroups.protocols.RACKSPACE_PING$RackspaceClient$ConnBuilder(RACKSPACE_PING$RackspaceClient, URL)<br/>At RACKSPACE_PING.java:[line 387]<br/>Sink method java/net/URL.openConnection()Ljava/net/URLConnection;<br/>Sink parameter 0<br/>Unknown source org/jgroups/protocols/RACKSPACE_PING$RackspaceClient$ConnBuilder.&lt;init&gt;(Lorg/jgroups/protocols/RACKSPACE_PING$RackspaceClient;Ljava/net/URL;)V parameter 0<br/>At RACKSPACE_PING.java:[line 158]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N72345');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N72345" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.jgroups.protocols.S3_PING$AWSAuthConnection<br/>In method org.jgroups.protocols.S3_PING$AWSAuthConnection.makePreSignedRequest(String, String, Map)<br/>At S3_PING.java:[line 858]<br/>Sink method java/net/URL.openConnection()Ljava/net/URLConnection;<br/>Sink parameter 0<br/>Unknown source org/jgroups/protocols/S3_PING$AWSAuthConnection.makePreSignedRequest(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/net/HttpURLConnection; parameter 1<br/>Unknown source java/net/URL.&lt;init&gt;(Ljava/lang/String;)V<br/>At S3_PING.java:[line 183]<br/>At S3_PING.java:[line 207]<br/>At S3_PING.java:[line 234]<br/>At S3_PING.java:[line 558]<br/>At S3_PING.java:[line 655]<br/>At S3_PING.java:[line 857]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N72479');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N72479" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.jgroups.protocols.S3_PING$AWSAuthConnection<br/>In method org.jgroups.protocols.S3_PING$AWSAuthConnection.makeRequest(String, String, String, Map, Map, S3_PING$S3Object)<br/>At S3_PING.java:[line 840]<br/>Sink method java/net/URL.openConnection()Ljava/net/URLConnection;<br/>Sink parameter 0<br/>Unknown source org/jgroups/protocols/S3_PING$CallingFormat.getURL(ZLjava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/util/Map;)Ljava/net/URL;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N72844');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N72844" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.jgroups.protocols.SWIFT_PING$ConnBuilder<br/>In method new org.jgroups.protocols.SWIFT_PING$ConnBuilder(URL)<br/>At SWIFT_PING.java:[line 357]<br/>Sink method java/net/URL.openConnection()Ljava/net/URLConnection;<br/>Sink parameter 0<br/>Unknown source org/jgroups/protocols/SWIFT_PING$ConnBuilder.&lt;init&gt;(Ljava/net/URL;)V parameter 0<br/>At SWIFT_PING.java:[line 290]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N72923');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N72923" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.jgroups.protocols.SWIFT_PING$ConnBuilder<br/>In method new org.jgroups.protocols.SWIFT_PING$ConnBuilder(SWIFT_PING$Credentials, String, String)<br/>At SWIFT_PING.java:[line 370]<br/>Sink method java/net/URL.openConnection()Ljava/net/URLConnection;<br/>Sink parameter 0<br/>Unknown source org/jgroups/protocols/SWIFT_PING$Credentials.storageUrl<br/>Unknown source org/jgroups/protocols/SWIFT_PING$ConnBuilder.&lt;init&gt;(Lorg/jgroups/protocols/SWIFT_PING$Credentials;Ljava/lang/String;Ljava/lang/String;)V parameter 0<br/>Unknown source org/jgroups/protocols/SWIFT_PING$ConnBuilder.&lt;init&gt;(Lorg/jgroups/protocols/SWIFT_PING$Credentials;Ljava/lang/String;Ljava/lang/String;)V parameter 1<br/>Unknown source java/net/URL.&lt;init&gt;(Ljava/lang/String;)V<br/>Method usage not detected<br/>At SWIFT_PING.java:[line 366]<br/>At SWIFT_PING.java:[line 368]<br/>At SWIFT_PING.java:[line 370]<br/>At SWIFT_PING.java:[line 477]<br/>At SWIFT_PING.java:[line 486]<br/>At SWIFT_PING.java:[line 503]<br/>At SWIFT_PING.java:[line 512]<br/>At SWIFT_PING.java:[line 530]<br/>At SWIFT_PING.java:[line 541]<br/>At SWIFT_PING.java:[line 561]<br/>At SWIFT_PING.java:[line 570]<br/>At SWIFT_PING.java:[line 589]<br/>At SWIFT_PING.java:[line 598]<br/>At SWIFT_PING.java:[line 609]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N72780');">
<td>
<span class="priority-2">SECUHE</span>
</td>
<td>Unsafe comparison of hash that are susceptible to timing attack</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N72780" style="display: none;">
<a href="#UNSAFE_HASH_EQUALS">Bug type UNSAFE_HASH_EQUALS (click for details)</a>
<br/>In class org.jgroups.protocols.S3_PING$Utils<br/>In method org.jgroups.protocols.S3_PING$Utils.makeCanonicalString(String, String, String, Map, Map, String)<br/>At S3_PING.java:[line 1608]<br/>Sink method java/lang/String.equals(Ljava/lang/Object;)Z<br/>Sink parameter 0</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N74855');">
<td>
<span class="priority-2">SECUS</span>
</td>
<td>Unencrypted socket to org.jgroups.tests.perf.JPerf (instead of SSLSocket)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N74855" style="display: none;">
<a href="#UNENCRYPTED_SOCKET">Bug type UNENCRYPTED_SOCKET (click for details)</a>
<br/>In class org.jgroups.tests.perf.JPerf<br/>In method org.jgroups.tests.perf.JPerf.start(boolean, int, int, String, int, String, int, int, int)<br/>At JPerf.java:[line 41]<br/>Value remote host</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N74362');">
<td>
<span class="priority-2">SECUS</span>
</td>
<td>Unencrypted socket to org.jgroups.tests.RoundTripTcp (instead of SSLSocket)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N74362" style="display: none;">
<a href="#UNENCRYPTED_SOCKET">Bug type UNENCRYPTED_SOCKET (click for details)</a>
<br/>In class org.jgroups.tests.RoundTripTcp<br/>In method org.jgroups.tests.RoundTripTcp.start(boolean, int, int, InetAddress, int)<br/>At RoundTripTcp.java:[line 60]<br/>Value remote host</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N75323');">
<td>
<span class="priority-2">SECUS</span>
</td>
<td>Unencrypted socket to org.jgroups.tests.rt.transports.TcpTransport (instead of SSLSocket)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N75323" style="display: none;">
<a href="#UNENCRYPTED_SOCKET">Bug type UNENCRYPTED_SOCKET (click for details)</a>
<br/>In class org.jgroups.tests.rt.transports.TcpTransport<br/>In method org.jgroups.tests.rt.transports.TcpTransport.start(String[])<br/>At TcpTransport.java:[line 93]<br/>Value remote host</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N74573');">
<td>
<span class="priority-2">SECUS</span>
</td>
<td>Unencrypted socket to org.jgroups.tests.UnicastTestTcp (instead of SSLSocket)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N74573" style="display: none;">
<a href="#UNENCRYPTED_SOCKET">Bug type UNENCRYPTED_SOCKET (click for details)</a>
<br/>In class org.jgroups.tests.UnicastTestTcp<br/>In method org.jgroups.tests.UnicastTestTcp.init(String, String, int, int)<br/>At UnicastTestTcp.java:[line 60]<br/>Value remote host</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N74685');">
<td>
<span class="priority-2">SECUS</span>
</td>
<td>Unencrypted socket to org.jgroups.tests.UnicastTestTcpRpc (instead of SSLSocket)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N74685" style="display: none;">
<a href="#UNENCRYPTED_SOCKET">Bug type UNENCRYPTED_SOCKET (click for details)</a>
<br/>In class org.jgroups.tests.UnicastTestTcpRpc<br/>In method org.jgroups.tests.UnicastTestTcpRpc.createSocket()<br/>At UnicastTestTcpRpc.java:[line 97]<br/>Value remote host</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N74743');">
<td>
<span class="priority-2">SECUS</span>
</td>
<td>Unencrypted socket to org.jgroups.tests.UnicastTestTcpSlow (instead of SSLSocket)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N74743" style="display: none;">
<a href="#UNENCRYPTED_SOCKET">Bug type UNENCRYPTED_SOCKET (click for details)</a>
<br/>In class org.jgroups.tests.UnicastTestTcpSlow<br/>In method org.jgroups.tests.UnicastTestTcpSlow.init(String, String, int, int)<br/>At UnicastTestTcpSlow.java:[line 55]<br/>Value remote host</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N76115');">
<td>
<span class="priority-2">SECUS</span>
</td>
<td>Unencrypted socket to org.jgroups.util.DefaultSocketFactory (instead of SSLSocket)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N76115" style="display: none;">
<a href="#UNENCRYPTED_SOCKET">Bug type UNENCRYPTED_SOCKET (click for details)</a>
<br/>In class org.jgroups.util.DefaultSocketFactory<br/>In method org.jgroups.util.DefaultSocketFactory.createSocket(String)<br/>At DefaultSocketFactory.java:[line 14]<br/>Value remote host</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N76173');">
<td>
<span class="priority-2">SECUS</span>
</td>
<td>Unencrypted socket to org.jgroups.util.DefaultSocketFactory (instead of SSLSocket)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N76173" style="display: none;">
<a href="#UNENCRYPTED_SOCKET">Bug type UNENCRYPTED_SOCKET (click for details)</a>
<br/>In class org.jgroups.util.DefaultSocketFactory<br/>In method org.jgroups.util.DefaultSocketFactory.createSocket(String, String, int)<br/>At DefaultSocketFactory.java:[line 18]<br/>Value remote host</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N76231');">
<td>
<span class="priority-2">SECUS</span>
</td>
<td>Unencrypted socket to org.jgroups.util.DefaultSocketFactory (instead of SSLSocket)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N76231" style="display: none;">
<a href="#UNENCRYPTED_SOCKET">Bug type UNENCRYPTED_SOCKET (click for details)</a>
<br/>In class org.jgroups.util.DefaultSocketFactory<br/>In method org.jgroups.util.DefaultSocketFactory.createSocket(String, String, int, InetAddress, int)<br/>At DefaultSocketFactory.java:[line 26]<br/>Value remote host</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N76289');">
<td>
<span class="priority-2">SECUS</span>
</td>
<td>Unencrypted socket to org.jgroups.util.DefaultSocketFactory (instead of SSLSocket)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N76289" style="display: none;">
<a href="#UNENCRYPTED_SOCKET">Bug type UNENCRYPTED_SOCKET (click for details)</a>
<br/>In class org.jgroups.util.DefaultSocketFactory<br/>In method org.jgroups.util.DefaultSocketFactory.createSocket(String, InetAddress, int)<br/>At DefaultSocketFactory.java:[line 22]<br/>Value remote host</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N76347');">
<td>
<span class="priority-2">SECUS</span>
</td>
<td>Unencrypted socket to org.jgroups.util.DefaultSocketFactory (instead of SSLSocket)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N76347" style="display: none;">
<a href="#UNENCRYPTED_SOCKET">Bug type UNENCRYPTED_SOCKET (click for details)</a>
<br/>In class org.jgroups.util.DefaultSocketFactory<br/>In method org.jgroups.util.DefaultSocketFactory.createSocket(String, InetAddress, int, InetAddress, int)<br/>At DefaultSocketFactory.java:[line 30]<br/>Value remote host</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66648');">
<td>
<span class="priority-2">SECUSS</span>
</td>
<td>Unencrypted server socket (instead of SSLServerSocket)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66648" style="display: none;">
<a href="#UNENCRYPTED_SERVER_SOCKET">Bug type UNENCRYPTED_SERVER_SOCKET (click for details)</a>
<br/>In class org.jgroups.blocks.MemcachedConnector<br/>In method org.jgroups.blocks.MemcachedConnector.start()<br/>At MemcachedConnector.java:[line 128]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N74801');">
<td>
<span class="priority-2">SECUSS</span>
</td>
<td>Unencrypted server socket (instead of SSLServerSocket)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N74801" style="display: none;">
<a href="#UNENCRYPTED_SERVER_SOCKET">Bug type UNENCRYPTED_SERVER_SOCKET (click for details)</a>
<br/>In class org.jgroups.tests.perf.JPerf<br/>In method org.jgroups.tests.perf.JPerf.start(boolean, int, int, String, int, String, int, int, int)<br/>At JPerf.java:[line 57]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N74308');">
<td>
<span class="priority-2">SECUSS</span>
</td>
<td>Unencrypted server socket (instead of SSLServerSocket)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N74308" style="display: none;">
<a href="#UNENCRYPTED_SERVER_SOCKET">Bug type UNENCRYPTED_SERVER_SOCKET (click for details)</a>
<br/>In class org.jgroups.tests.RoundTripTcp<br/>In method org.jgroups.tests.RoundTripTcp.start(boolean, int, int, InetAddress, int)<br/>At RoundTripTcp.java:[line 36]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N75269');">
<td>
<span class="priority-2">SECUSS</span>
</td>
<td>Unencrypted server socket (instead of SSLServerSocket)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N75269" style="display: none;">
<a href="#UNENCRYPTED_SERVER_SOCKET">Bug type UNENCRYPTED_SERVER_SOCKET (click for details)</a>
<br/>In class org.jgroups.tests.rt.transports.TcpTransport<br/>In method org.jgroups.tests.rt.transports.TcpTransport.start(String[])<br/>At TcpTransport.java:[line 81]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N74631');">
<td>
<span class="priority-2">SECUSS</span>
</td>
<td>Unencrypted server socket (instead of SSLServerSocket)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N74631" style="display: none;">
<a href="#UNENCRYPTED_SERVER_SOCKET">Bug type UNENCRYPTED_SERVER_SOCKET (click for details)</a>
<br/>In class org.jgroups.tests.UnicastTestTcpRpc<br/>In method org.jgroups.tests.UnicastTestTcpRpc.init(long, boolean, boolean, boolean, boolean, String, int, int)<br/>At UnicastTestTcpRpc.java:[line 62]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N75899');">
<td>
<span class="priority-2">SECUSS</span>
</td>
<td>Unencrypted server socket (instead of SSLServerSocket)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N75899" style="display: none;">
<a href="#UNENCRYPTED_SERVER_SOCKET">Bug type UNENCRYPTED_SERVER_SOCKET (click for details)</a>
<br/>In class org.jgroups.util.DefaultSocketFactory<br/>In method org.jgroups.util.DefaultSocketFactory.createServerSocket(String)<br/>At DefaultSocketFactory.java:[line 34]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N75953');">
<td>
<span class="priority-2">SECUSS</span>
</td>
<td>Unencrypted server socket (instead of SSLServerSocket)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N75953" style="display: none;">
<a href="#UNENCRYPTED_SERVER_SOCKET">Bug type UNENCRYPTED_SERVER_SOCKET (click for details)</a>
<br/>In class org.jgroups.util.DefaultSocketFactory<br/>In method org.jgroups.util.DefaultSocketFactory.createServerSocket(String, int)<br/>At DefaultSocketFactory.java:[line 38]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N76007');">
<td>
<span class="priority-2">SECUSS</span>
</td>
<td>Unencrypted server socket (instead of SSLServerSocket)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N76007" style="display: none;">
<a href="#UNENCRYPTED_SERVER_SOCKET">Bug type UNENCRYPTED_SERVER_SOCKET (click for details)</a>
<br/>In class org.jgroups.util.DefaultSocketFactory<br/>In method org.jgroups.util.DefaultSocketFactory.createServerSocket(String, int, int)<br/>At DefaultSocketFactory.java:[line 42]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N76061');">
<td>
<span class="priority-2">SECUSS</span>
</td>
<td>Unencrypted server socket (instead of SSLServerSocket)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N76061" style="display: none;">
<a href="#UNENCRYPTED_SERVER_SOCKET">Bug type UNENCRYPTED_SERVER_SOCKET (click for details)</a>
<br/>In class org.jgroups.util.DefaultSocketFactory<br/>In method org.jgroups.util.DefaultSocketFactory.createServerSocket(String, int, int, InetAddress)<br/>At DefaultSocketFactory.java:[line 46]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66845');">
<td>
<span class="priority-2">SECXXEDOC</span>
</td>
<td>The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66845" style="display: none;">
<a href="#XXE_DOCUMENT">Bug type XXE_DOCUMENT (click for details)</a>
<br/>In class org.jgroups.conf.ClassConfigurator<br/>In method org.jgroups.conf.ClassConfigurator.parse(InputStream)<br/>At ClassConfigurator.java:[line 253]<br/>Value DocumentBuilder.parse(...)</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68361');">
<td>
<span class="priority-2">SECXXEDOC</span>
</td>
<td>The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68361" style="display: none;">
<a href="#XXE_DOCUMENT">Bug type XXE_DOCUMENT (click for details)</a>
<br/>In class org.jgroups.conf.XmlConfigurator<br/>In method org.jgroups.conf.XmlConfigurator.parse(InputStream, Boolean)<br/>At XmlConfigurator.java:[line 162]<br/>Value DocumentBuilder.parse(...)</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69327');">
<td>
<span class="priority-2">SECXXEDOC</span>
</td>
<td>The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69327" style="display: none;">
<a href="#XXE_DOCUMENT">Bug type XXE_DOCUMENT (click for details)</a>
<br/>In class org.jgroups.fork.ForkConfig<br/>In method org.jgroups.fork.ForkConfig.parse(InputStream)<br/>At ForkConfig.java:[line 36]<br/>Value DocumentBuilder.parse(...)</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N73289');">
<td>
<span class="priority-2">SECXXEDOC</span>
</td>
<td>The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N73289" style="display: none;">
<a href="#XXE_DOCUMENT">Bug type XXE_DOCUMENT (click for details)</a>
<br/>In class org.jgroups.protocols.relay.config.RelayConfig<br/>In method org.jgroups.protocols.relay.config.RelayConfig.parse(InputStream, Map)<br/>At RelayConfig.java:[line 46]<br/>Value DocumentBuilder.parse(...)</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N73347');">
<td>
<span class="priority-2">SECXXEDOC</span>
</td>
<td>The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N73347" style="display: none;">
<a href="#XXE_DOCUMENT">Bug type XXE_DOCUMENT (click for details)</a>
<br/>In class org.jgroups.protocols.rules.SUPERVISOR<br/>In method org.jgroups.protocols.rules.SUPERVISOR.parseRules(InputStream)<br/>At SUPERVISOR.java:[line 250]<br/>Value DocumentBuilder.parse(...)</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N72548');">
<td>
<span class="priority-2">SECXXEREAD</span>
</td>
<td>The use of XMLReader.parse(...) (XMLReader) is vulnerable to XML External Entity attacks</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N72548" style="display: none;">
<a href="#XXE_XMLREADER">Bug type XXE_XMLREADER (click for details)</a>
<br/>In class org.jgroups.protocols.S3_PING$ListAllMyBucketsResponse<br/>In method new org.jgroups.protocols.S3_PING$ListAllMyBucketsResponse(HttpURLConnection)<br/>At S3_PING.java:[line 1395]<br/>Value XMLReader.parse(...)</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N72606');">
<td>
<span class="priority-2">SECXXEREAD</span>
</td>
<td>The use of XMLReader.parse(...) (XMLReader) is vulnerable to XML External Entity attacks</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N72606" style="display: none;">
<a href="#XXE_XMLREADER">Bug type XXE_XMLREADER (click for details)</a>
<br/>In class org.jgroups.protocols.S3_PING$ListBucketResponse<br/>In method new org.jgroups.protocols.S3_PING$ListBucketResponse(HttpURLConnection)<br/>At S3_PING.java:[line 1198]<br/>Value XMLReader.parse(...)</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N72664');">
<td>
<span class="priority-2">SECXXEREAD</span>
</td>
<td>The use of XMLReader.parse(...) (XMLReader) is vulnerable to XML External Entity attacks</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N72664" style="display: none;">
<a href="#XXE_XMLREADER">Bug type XXE_XMLREADER (click for details)</a>
<br/>In class org.jgroups.protocols.S3_PING$LocationResponse<br/>In method new org.jgroups.protocols.S3_PING$LocationResponse(HttpURLConnection)<br/>At S3_PING.java:[line 1057]<br/>Value XMLReader.parse(...)</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N77685');">
<td>
<span class="priority-2">SECXXETFDTD</span>
</td>
<td>The use of TransformerFactory.newInstance(...) (TransformerFactory) is vulnerable to XML External Entity attacks</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N77685" style="display: none;">
<a href="#XXE_DTD_TRANSFORM_FACTORY">Bug type XXE_DTD_TRANSFORM_FACTORY (click for details)</a>
<br/>In class org.jgroups.util.XMLSchemaGenerator<br/>In method org.jgroups.util.XMLSchemaGenerator.main(String[])<br/>At XMLSchemaGenerator.java:[line 89]<br/>Value TransformerFactory.newInstance(...)</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N77743');">
<td>
<span class="priority-2">SECXXETFXSLT</span>
</td>
<td>The use of TransformerFactory.newInstance(...) is vulnerable to XSLT External Entity attacks</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N77743" style="display: none;">
<a href="#XXE_XSLT_TRANSFORM_FACTORY">Bug type XXE_XSLT_TRANSFORM_FACTORY (click for details)</a>
<br/>In class org.jgroups.util.XMLSchemaGenerator<br/>In method org.jgroups.util.XMLSchemaGenerator.main(String[])<br/>At XMLSchemaGenerator.java:[line 89]<br/>Value TransformerFactory.newInstance(...)</p>
</td>
</tr>
</table>
<h1>
<a name="Details">Details</a>
</h1>
<h2>
<a name="INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE: Information Exposure Through An Error Message</a>
</h2>
            
<p>
The sensitive information may be valuable information on its own (such as a password), or it may be useful for launching other, more deadly attacks. If an attack fails, an attacker may use error information provided by the server to launch another more focused attack. For example, an attempt to exploit a path traversal weakness (CWE-22) might yield the full pathname of the installed application. In turn, this could be used to select the proper number of ".." sequences to navigate to the targeted file. An attack using SQL injection (CWE-89) might not initially succeed, but an error message could reveal the malformed query, which would expose query logic and possibly even passwords or other sensitive information used within the query.
</p>
<p>
    <b>Vulnerable Code:</b><br/>
<pre>try {
  out = httpResponse.getOutputStream()
} catch (Exception e) {
  e.printStackTrace(out);
}</pre>
</p>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/209.html">CWE-209: Information Exposure Through an Error Message</a><br/>
<a href="https://cwe.mitre.org/data/definitions/211.html">CWE-211: Information Exposure Through Externally-Generated Error Message</a><br/>
</p>
            
        
<h2>
<a name="COMMAND_INJECTION">COMMAND_INJECTION: Potential Command Injection</a>
</h2>
            
<p>The highlighted API is used to execute a system command. If unfiltered input is passed to this API, it can lead to arbitrary command execution.</p>
<br/>
<p>
    <b>Vulnerable Code:</b><br/>
<pre>import java.lang.Runtime;

Runtime r = Runtime.getRuntime();
r.exec("/bin/sh -c some_tool" + input);</pre>
</p>
<p>
<b>References</b><br/>
<a href="https://www.owasp.org/index.php/Command_Injection">OWASP: Command Injection</a><br/>
<a href="https://www.owasp.org/index.php/Top_10_2013-A1-Injection">OWASP: Top 10 2013-A1-Injection</a><br/>
<a href="https://cwe.mitre.org/data/definitions/78.html">CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')</a>
</p>

        
<h2>
<a name="HARD_CODE_PASSWORD">HARD_CODE_PASSWORD: Hard coded password</a>
</h2>
            
<p>
Passwords should not be kept in the source code. The source code can be widely shared in an enterprise environment, and is
certainly shared in open source. To be managed safely, passwords and secret keys should be stored in separate configuration files or keystores.
(Hard coded keys are reported separately by <i>Hard Coded Key</i> pattern)
</p>
<p>
<p><b>Vulnerable Code:</b><br/>

<pre>private String SECRET_PASSWORD = "letMeIn!";

Properties props = new Properties();
props.put(Context.SECURITY_CREDENTIALS, "p@ssw0rd");</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/259.html">CWE-259: Use of Hard-coded Password</a>
</p>

        
<h2>
<a name="WEAK_MESSAGE_DIGEST_MD5">WEAK_MESSAGE_DIGEST_MD5: MD2, MD4 and MD5 are weak hash functions</a>
</h2>
            
<p>The algorithms MD2, MD4 and MD5 are not a recommended MessageDigest. <b>PBKDF2</b> should be used to hash password for example.</p>

<blockquote>
    "The security of the MD5 hash function is severely compromised. A collision attack exists that can find collisions
    within seconds on a computer with a 2.6 GHz Pentium 4 processor (complexity of 2<sup>24.1</sup>).[1] Further, there is also a
    chosen-prefix collision attack that can produce a collision for two inputs with specified prefixes within hours, using
    off-the-shelf computing hardware (complexity 2<sup>39</sup>).[2]"<br/>
    - <a href="https://en.wikipedia.org/wiki/MD5#Security">Wikipedia: MD5 - Security</a>
</blockquote>

<blockquote>
    "<b>SHA-224, SHA-256, SHA-384, SHA-512, SHA-512/224, and SHA-512/256</b>:<br/>
    The use of these hash functions is acceptable for all hash function applications."<br/>
    - <a href="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-131Ar2.pdf">NIST: Transitioning the Use of Cryptographic Algorithms and Key Lengths p.15</a>
</blockquote>
<blockquote>
    "The main idea of a PBKDF is to slow dictionary or brute force attacks on the passwords by increasing the time
    needed to test each password. An attacker with a list of likely passwords can evaluate the PBKDF using the known
    iteration counter and the salt. Since an attacker has to spend a significant amount of computing time for each try,
    it becomes harder to apply the dictionary or brute force attacks."<br/>
- <a href="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-132.pdf">NIST: Recommendation for Password-Based Key Derivation  p.12</a>
</blockquote>
<br/>
<p>
    <b>Vulnerable Code:</b><br/>
    <pre>MessageDigest md5Digest = MessageDigest.getInstance("MD5");
    md5Digest.update(password.getBytes());
    byte[] hashValue = md5Digest.digest();</pre>
    <br/>
    <pre>byte[] hashValue = DigestUtils.getMd5Digest().digest(password.getBytes());</pre>
</p>
<br/>
<p>
    <b>Solution (Using bouncy castle):</b><br/>
    <pre>public static byte[] getEncryptedPassword(String password, byte[] salt) throws NoSuchAlgorithmException, InvalidKeySpecException {
    PKCS5S2ParametersGenerator gen = new PKCS5S2ParametersGenerator(new SHA256Digest());
    gen.init(password.getBytes("UTF-8"), salt.getBytes(), 4096);
    return ((KeyParameter) gen.generateDerivedParameters(256)).getKey();
}</pre>
    <br/>
    <b>Solution (Java 8 and later):</b><br/>
    <pre>public static byte[] getEncryptedPassword(String password, byte[] salt) throws NoSuchAlgorithmException, InvalidKeySpecException {
    KeySpec spec = new PBEKeySpec(password.toCharArray(), salt, 4096, 256 * 8);
    SecretKeyFactory f = SecretKeyFactory.getInstance("PBKDF2WithHmacSHA256");
    return f.generateSecret(spec).getEncoded();
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
[1] <a href="https://www.win.tue.nl/hashclash/On%20Collisions%20for%20MD5%20-%20M.M.J.%20Stevens.pdf">On Collisions for MD5</a>: Master Thesis by M.M.J. Stevens<br/>
[2] <a href="https://homepages.cwi.nl/~stevens/papers/stJOC%20-%20Chosen-Prefix%20Collisions%20for%20MD5%20and%20Applications.pdf">Chosen-prefix collisions for MD5 and applications</a>: Paper written by Marc Stevens<br/>
<a href="https://en.wikipedia.org/wiki/MD5">Wikipedia: MD5</a><br/>
<a href="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-131Ar2.pdf">NIST: Transitioning the Use of Cryptographic Algorithms and Key Lengths</a><br/>
<a href="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-132.pdf">NIST: Recommendation for Password-Based Key Derivation</a><br/>
<a href="https://stackoverflow.com/q/22580853/89769">Stackoverflow: Reliable implementation of PBKDF2-HMAC-SHA256 for Java</a><br/>
<a href="https://cwe.mitre.org/data/definitions/327.html">CWE-327: Use of a Broken or Risky Cryptographic Algorithm</a>
</p>

        
<h2>
<a name="OBJECT_DESERIALIZATION">OBJECT_DESERIALIZATION: Object deserialization is used in {1}</a>
</h2>
            
<p>
    Object deserialization of untrusted data can lead to remote code execution, if there is a class in classpath that allows
    the trigger of malicious operation.
</p>
<p>
    Libraries developers tend to fix class that provided potential malicious trigger. There are still classes that are
    known to trigger Denial of Service<sup>[1]</sup>.
</p>
<p>
    Deserialization is a sensible operation that has a great history of vulnerabilities. The web application might
    become vulnerable as soon as a new vulnerability is found in the Java Virtual Machine<sup>[2] [3]</sup>.
</p>

<p>
<b>Code at risk:</b><br/>
<pre>
public UserData deserializeObject(InputStream receivedFile) throws IOException, ClassNotFoundException {

    try (ObjectInputStream in = new ObjectInputStream(receivedFile)) {
        return (UserData) in.readObject();
    }
}
</pre>
</p>

<p>
<b>Solutions:</b><br/>
<p>
Avoid deserializing object provided by remote users.
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/502.html">CWE-502: Deserialization of Untrusted Data</a><br/>
<a href="https://www.owasp.org/index.php/Deserialization_of_untrusted_data">Deserialization of untrusted data</a><br/>
<a href="https://www.oracle.com/technetwork/java/seccodeguide-139067.html#8">Serialization and Deserialization </a><br/>
<a href="https://github.com/frohoff/ysoserial">A tool for generating payloads that exploit unsafe Java object deserialization</a><br/>
[1] <a href="https://gist.github.com/coekie/a27cc406fc9f3dc7a70d">Example of Denial of Service using the class <code>java.util.HashSet</code></a><br/>
[2] <a href="https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2015-2590">OpenJDK: Deserialization issue in ObjectInputStream.readSerialData() (CVE-2015-2590)</a><br/>
[3] <a href="https://www.rapid7.com/db/modules/exploit/multi/browser/java_calendar_deserialize">Rapid7: Sun Java Calendar Deserialization Privilege Escalation (CVE-2008-5353)</a>
</p>

        
<h2>
<a name="PREDICTABLE_RANDOM">PREDICTABLE_RANDOM: Predictable pseudorandom number generator</a>
</h2>
            
<p>The use of a predictable random value can lead to vulnerabilities when used in certain security critical contexts. For example, when the value is used as:</p>
<ul>
<li>a CSRF token: a predictable token can lead to a CSRF attack as an attacker will know the value of the token</li>
<li>a password reset token (sent by email): a predictable password token can lead to an account takeover, since an attacker will guess the URL of the "change password" form</li>
<li>any other secret value</li>
</ul>
<p>
A quick fix could be to replace the use of <code>java.util.Random</code> with something stronger, such as <code>java.security.SecureRandom</code>.
</p>
<p>
<b>Vulnerable Code:</b><br/>
<pre>String generateSecretToken() {
    Random r = new Random();
    return Long.toHexString(r.nextLong());
}</pre>
</p>
<p>
<b>Solution:</b>
<pre>import org.apache.commons.codec.binary.Hex;

String generateSecretToken() {
    SecureRandom secRandom = new SecureRandom();

    byte[] result = new byte[32];
    secRandom.nextBytes(result);
    return Hex.encodeHexString(result);
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://jazzy.id.au/2010/09/20/cracking_random_number_generators_part_1.html">Cracking Random Number Generators - Part 1 (https://jazzy.id.au)</a><br/>
<a href="https://www.securecoding.cert.org/confluence/display/java/MSC02-J.+Generate+strong+random+numbers">CERT: MSC02-J. Generate strong random numbers</a><br/>
<a href="https://cwe.mitre.org/data/definitions/330.html">CWE-330: Use of Insufficiently Random Values</a><br/>
<a href="https://blog.h3xstream.com/2014/12/predicting-struts-csrf-token-cve-2014.html">Predicting Struts CSRF Token (Example of real-life vulnerability and exploitation)</a>
</p>

        
<h2>
<a name="PATH_TRAVERSAL_IN">PATH_TRAVERSAL_IN: Potential Path Traversal (file read)</a>
</h2>
            
<p>A file is opened to read its content. The filename comes from an <b>input</b> parameter.
If an unfiltered parameter is passed to this file API, files from an arbitrary filesystem location could be read.</p>
<p>This rule identifies <b>potential</b> path traversal vulnerabilities. In many cases, the constructed file path cannot be controlled
by the user. If that is the case, the reported instance is a false positive.</p>
<br/>

<p>
    <b>Vulnerable Code:</b><br/>
<pre>@GET
@Path("/images/{image}")
@Produces("images/*")
public Response getImage(@javax.ws.rs.PathParam("image") String image) {
    File file = new File("resources/images/", image); //Weak point

    if (!file.exists()) {
        return Response.status(Status.NOT_FOUND).build();
    }

    return Response.ok().entity(new FileInputStream(file)).build();
}</pre>
</p>
<br/>

<p>
    <b>Solution:</b><br/>
<pre>import org.apache.commons.io.FilenameUtils;

@GET
@Path("/images/{image}")
@Produces("images/*")
public Response getImage(@javax.ws.rs.PathParam("image") String image) {
    File file = new File("resources/images/", FilenameUtils.getName(image)); //Fix

    if (!file.exists()) {
        return Response.status(Status.NOT_FOUND).build();
    }

    return Response.ok().entity(new FileInputStream(file)).build();
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="http://projects.webappsec.org/w/page/13246952/Path%20Traversal">WASC: Path Traversal</a><br/>
<a href="https://www.owasp.org/index.php/Path_Traversal">OWASP: Path Traversal</a><br/>
<a href="https://capec.mitre.org/data/definitions/126.html">CAPEC-126: Path Traversal</a><br/>
<a href="https://cwe.mitre.org/data/definitions/22.html">CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')</a>
</p>

        
<h2>
<a name="PATH_TRAVERSAL_OUT">PATH_TRAVERSAL_OUT: Potential Path Traversal (file write)</a>
</h2>
            
<p>A file is opened to write to its contents. The filename comes from an <b>input</b> parameter.
If an unfiltered parameter is passed to this file API, files at an arbitrary filesystem location could be modified.</p>
<p>This rule identifies <b>potential</b> path traversal vulnerabilities. In many cases, the constructed file path cannot be controlled
by the user. If that is the case, the reported instance is a false positive.</p>
<br/>
<p>
<b>References</b><br/>
<a href="http://projects.webappsec.org/w/page/13246952/Path%20Traversal">WASC-33: Path Traversal</a><br/>
<a href="https://www.owasp.org/index.php/Path_Traversal">OWASP: Path Traversal</a><br/>
<a href="https://capec.mitre.org/data/definitions/126.html">CAPEC-126: Path Traversal</a><br/>
<a href="https://cwe.mitre.org/data/definitions/22.html">CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')</a>
</p>

        
<h2>
<a name="REDOS">REDOS: Regex DOS (ReDOS)</a>
</h2>
            
<p>
    Regular expressions (Regex) are frequently subject to Denial of Service (DOS) attacks (called ReDOS). This is due to the fact that regex engines
    may take a large amount of time when analyzing certain strings, depending on how the regex is defined.
<p>
    For example, for the regex: <code>^(a+)+$</code>, the input "<code>aaaaaaaaaaaaaaaaX</code>" will cause the regex engine to analyze 65536
different paths.<sup>[1] Example taken from OWASP references</sup></p>
<p>
Therefore, it is possible that a single request may cause a large amount of computation on the server side.
The problem with this regex, and others like it, is that there are two different ways the same input character can be accepted by the
Regex due to the <code>+</code> (or a <code>*</code>) inside the parenthesis, and the <code>+</code> (or a <code>*</code>) outside the parenthesis. The way this is written, either <code>+</code> could
consume the character 'a'. To fix this, the regex should be rewritten to eliminate the ambiguity. For example, this could simply be
rewritten as: <code>^a+$</code>, which is presumably what the author meant anyway (any number of a's). Assuming that's what the original
regex meant, this new regex can be evaluated quickly, and is not subject to ReDOS.
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://sebastiankuebeck.wordpress.com/2011/03/01/detecting-and-preventing-redos-vulnerabilities/">Sebastian Kubeck's Weblog: Detecting and Preventing ReDoS Vulnerabilities</a><br/>
<sup>[1]</sup> <a href="https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS">OWASP: Regular expression Denial of Service</a><br/>
<a href="https://cwe.mitre.org/data/definitions/400.html">CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion')</a>
</p>

        
<h2>
<a name="WEAK_MESSAGE_DIGEST_SHA1">WEAK_MESSAGE_DIGEST_SHA1: SHA-1 is a weak hash function</a>
</h2>
            
<p>The algorithms SHA-1 is not a recommended algorithm for hash password, for signature verification and other
uses. <b>PBKDF2</b> should be used to hash password for example.</p>

<blockquote>
    "<b>SHA-1 for digital signature generation:</b><br/>
    SHA-1 may only be used for digital signature generation where specifically allowed by NIST protocol-specific guidance.
    For all other applications, <u>SHA-1 shall not be used for digital signature generation</u>.<br/>
    <b>SHA-1 for digital signature verification:</b><br/>
    For digital signature verification, <u>SHA-1 is allowed for legacy-use</u>.<br/>
    [...]<br/>
    <b>SHA-224, SHA-256, SHA-384, SHA-512, SHA-512/224, and SHA-512/256</b>:<br/>
    The use of these hash functions is acceptable for all hash function applications."<br/>
    - <a href="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-131Ar2.pdf">NIST: Transitioning the Use of Cryptographic Algorithms and Key Lengths p.15</a>
</blockquote>
<blockquote>
    "The main idea of a PBKDF is to slow dictionary or brute force attacks on the passwords by increasing the time
    needed to test each password. An attacker with a list of likely passwords can evaluate the PBKDF using the known
    iteration counter and the salt. Since an attacker has to spend a significant amount of computing time for each try,
    it becomes harder to apply the dictionary or brute force attacks."<br/>
- <a href="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-132.pdf">NIST: Recommendation for Password-Based Key Derivation  p.12</a>

</blockquote>
<br/>
<p>
    <b>Vulnerable Code:</b><br/>
    <pre>MessageDigest sha1Digest = MessageDigest.getInstance("SHA1");
    sha1Digest.update(password.getBytes());
    byte[] hashValue = sha1Digest.digest();</pre>
    <br/>
    <pre>byte[] hashValue = DigestUtils.getSha1Digest().digest(password.getBytes());</pre>
</p>
<br/>
<p>
    <b>Solution (Using bouncy castle):</b><br/>
    <pre>public static byte[] getEncryptedPassword(String password, byte[] salt) throws NoSuchAlgorithmException, InvalidKeySpecException {
    PKCS5S2ParametersGenerator gen = new PKCS5S2ParametersGenerator(new SHA256Digest());
    gen.init(password.getBytes("UTF-8"), salt.getBytes(), 4096);
    return ((KeyParameter) gen.generateDerivedParameters(256)).getKey();
}</pre>
    <br/>
    <b>Solution (Java 8 and later):</b><br/>
    <pre>public static byte[] getEncryptedPassword(String password, byte[] salt) throws NoSuchAlgorithmException, InvalidKeySpecException {
    KeySpec spec = new PBEKeySpec(password.toCharArray(), salt, 4096, 256 * 8);
    SecretKeyFactory f = SecretKeyFactory.getInstance("PBKDF2WithHmacSHA256");
    return f.generateSecret(spec).getEncoded();
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://community.qualys.com/blogs/securitylabs/2014/09/09/sha1-deprecation-what-you-need-to-know">Qualys blog: SHA1 Deprecation: What You Need to Know</a><br/>
<a href="https://googleonlinesecurity.blogspot.ca/2014/09/gradually-sunsetting-sha-1.html">Google Online Security Blog: Gradually sunsetting SHA-1</a><br/>
<a href="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-131Ar2.pdf">NIST: Transitioning the Use of Cryptographic Algorithms and Key Lengths</a><br/>
<a href="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-132.pdf">NIST: Recommendation for Password-Based Key Derivation</a><br/>
<a href="https://stackoverflow.com/q/22580853/89769">Stackoverflow: Reliable implementation of PBKDF2-HMAC-SHA256 for Java</a><br/>
<a href="https://cwe.mitre.org/data/definitions/327.html">CWE-327: Use of a Broken or Risky Cryptographic Algorithm</a>
</p>

        
<h2>
<a name="SQL_INJECTION_JDBC">SQL_INJECTION_JDBC: Potential JDBC Injection</a>
</h2>
            
<p>
The input values included in SQL queries need to be passed in safely.
Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection.
</p>

<p>
    <b>Vulnerable Code:</b><br/>
    <pre>Connection conn = [...];
Statement stmt = con.createStatement();
ResultSet rs = stmt.executeQuery("update COFFEES set SALES = "+nbSales+" where COF_NAME = '"+coffeeName+"'");</pre>
</p>
<p>
    <b>Solution:</b><br/>
    <pre>Connection conn = [...];
conn.prepareStatement("update COFFEES set SALES = ? where COF_NAME = ?");
updateSales.setInt(1, nbSales);
updateSales.setString(2, coffeeName);</pre>
</p>
<br/>

<b>References (JDBC)</b><br/>
<a href="https://docs.oracle.com/javase/tutorial/jdbc/basics/prepared.html">Oracle Documentation: The Java Tutorials &gt; Prepared Statements</a><br/>
<b>References (SQL injection)</b><br/>
<a href="http://projects.webappsec.org/w/page/13246963/SQL%20Injection">WASC-19: SQL Injection</a><br/>
<a href="https://capec.mitre.org/data/definitions/66.html">CAPEC-66: SQL Injection</a><br/>
<a href="https://cwe.mitre.org/data/definitions/89.html">CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')</a><br/>
<a href="https://www.owasp.org/index.php/Top_10_2013-A1-Injection">OWASP: Top 10 2013-A1-Injection</a><br/>
<a href="https://www.owasp.org/index.php/SQL_Injection_Prevention_Cheat_Sheet">OWASP: SQL Injection Prevention Cheat Sheet</a><br/>
<a href="https://www.owasp.org/index.php/Query_Parameterization_Cheat_Sheet">OWASP: Query Parameterization Cheat Sheet</a><br/>
</p>

        
<h2>
<a name="URLCONNECTION_SSRF_FD">URLCONNECTION_SSRF_FD: URLConnection Server-Side Request Forgery (SSRF) and File Disclosure</a>
</h2>
            
<p>
    Server-Side Request Forgery occur when a web server executes a request to a user supplied destination
    parameter that is not validated. Such vulnerabilities could allow an attacker to access internal services
    or to launch attacks from your web server.
</p>
<p>
    URLConnection can be used with file:// protocol or other protocols to access local filesystem and potentially other services.
<p>
    <b>Vulnerable Code:</b>
<pre>
new URL(String url).openConnection()
</pre>

<pre>
new URL(String url).openStream()
</pre>

<pre>
new URL(String url).getContent()
</pre>
</p>
<p>
    <b>Solution/Countermeasures:</b><br/>
    <ul>
        <li>Don't accept URL destinations from users</li>
        <li>Accept a destination key, and use it to look up the target destination associate with the key</li>
        <li>White list URLs (if possible)</li>
        <li>Validate that the beginning of the URL is part of a white list</li>
    </ul>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a><br/>
<a href="https://www.bishopfox.com/blog/2015/04/vulnerable-by-design-understanding-server-side-request-forgery/">Understanding Server-Side Request Forgery</a><br/>
<a href="https://cwe.mitre.org/data/definitions/73.html">CWE-73: External Control of File Name or Path</a><br/>
<a href="https://www.pwntester.com/blog/2013/11/28/abusing-jar-downloads/">Abusing jar:// downloads</a><br />
</p>
            
<h2>
<a name="UNSAFE_HASH_EQUALS">UNSAFE_HASH_EQUALS: Unsafe hash equals</a>
</h2>
            
<p>
An attacker might be able to detect the value of the secret hash due to the exposure of comparison timing. When the
functions <code>Arrays.equals()</code> or <code>String.equals()</code> are called, they will exit earlier if fewer
bytes are matched.
</p>
<p>
<p><b>Vulnerable Code:</b><br/>

<pre>
String actualHash = ...

if(userInput.equals(actualHash)) {
    ...
}</pre>
</p>
<p><b>Solution:</b><br/>

<pre>
String actualHash = ...

if(MessageDigest.isEqual(userInput.getBytes(),actualHash.getBytes())) {
    ...
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/203.html">CWE-203: Information Exposure Through DiscrepancyKey</a><br/>
</p>

        
<h2>
<a name="UNENCRYPTED_SOCKET">UNENCRYPTED_SOCKET: Unencrypted Socket</a>
</h2>
            
<p>
The communication channel used is not encrypted. The traffic could be read by an attacker intercepting the network traffic.
</p>
<p>
<b>Vulnerable Code:</b><br/>
Plain socket (Cleartext communication):
<pre>Socket soc = new Socket("www.google.com",80);</pre>
</p>
<p>
<b>Solution:</b><br/>
SSL Socket (Secure communication):
<pre>Socket soc = SSLSocketFactory.getDefault().createSocket("www.google.com", 443);</pre>
</p>
<p>Beyond using an SSL socket, you need to make sure your use of SSLSocketFactory does all the appropriate certificate validation checks to
make sure you are not subject to man-in-the-middle attacks. Please read the OWASP Transport Layer Protection Cheat Sheet for details on how
to do this correctly.
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://www.owasp.org/index.php/Top_10_2010-A9">OWASP: Top 10 2010-A9-Insufficient Transport Layer Protection</a><br/>
<a href="https://www.owasp.org/index.php/Top_10_2013-A6-Sensitive_Data_Exposure">OWASP: Top 10 2013-A6-Sensitive Data Exposure</a><br/>
<a href="https://www.owasp.org/index.php/Transport_Layer_Protection_Cheat_Sheet">OWASP: Transport Layer Protection Cheat Sheet</a><br/>
<a href="http://projects.webappsec.org/w/page/13246945/Insufficient%20Transport%20Layer%20Protection">WASC-04: Insufficient Transport Layer Protection</a><br/>
<a href="https://cwe.mitre.org/data/definitions/319.html">CWE-319: Cleartext Transmission of Sensitive Information</a>
</p>

        
<h2>
<a name="UNENCRYPTED_SERVER_SOCKET">UNENCRYPTED_SERVER_SOCKET: Unencrypted Server Socket</a>
</h2>
            
<p>
The communication channel used is not encrypted. The traffic could be read by an attacker intercepting the network traffic.
</p>
<p>
<b>Vulnerable Code:</b><br/>
Plain server socket (Cleartext communication):
<pre>ServerSocket soc = new ServerSocket(1234);</pre>
</p>
<p>
<b>Solution:</b><br/>
SSL Server Socket (Secure communication):
<pre>ServerSocket soc = SSLServerSocketFactory.getDefault().createServerSocket(1234);</pre>
</p>
<p>Beyond using an SSL server socket, you need to make sure your use of SSLServerSocketFactory does all the appropriate certificate validation checks to
make sure you are not subject to man-in-the-middle attacks. Please read the OWASP Transport Layer Protection Cheat Sheet for details on how
to do this correctly.
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://www.owasp.org/index.php/Top_10_2010-A9">OWASP: Top 10 2010-A9-Insufficient Transport Layer Protection</a><br/>
<a href="https://www.owasp.org/index.php/Top_10_2013-A6-Sensitive_Data_Exposure">OWASP: Top 10 2013-A6-Sensitive Data Exposure</a><br/>
<a href="https://www.owasp.org/index.php/Transport_Layer_Protection_Cheat_Sheet">OWASP: Transport Layer Protection Cheat Sheet</a><br/>
<a href="http://projects.webappsec.org/w/page/13246945/Insufficient%20Transport%20Layer%20Protection">WASC-04: Insufficient Transport Layer Protection</a><br/>
<a href="https://cwe.mitre.org/data/definitions/319.html">CWE-319: Cleartext Transmission of Sensitive Information</a>
</p>

        
<h2>
<a name="XXE_DOCUMENT">XXE_DOCUMENT: XML parsing vulnerable to XXE (DocumentBuilder)</a>
</h2>
            
<!--XXE_GENERIC_START-->
<h3>Attack</h3>
<p>XML External Entity (XXE) attacks can occur when an XML parser supports XML entities while processing XML received
from an untrusted source.</p>
<p><b>Risk 1: Expose local file content (XXE: <u>X</u>ML E<u>x</u>ternal <u>E</u>ntity)</b></p>
<p>
<pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;
&lt;!DOCTYPE foo [
   &lt;!ENTITY xxe SYSTEM &quot;file:///etc/passwd&quot; &gt; ]&gt;
&lt;foo&gt;&amp;xxe;&lt;/foo&gt;</pre>
</p>
<b>Risk 2: Denial of service (XEE: <u>X</u>ML <u>E</u>ntity <u>E</u>xpansion)</b>
<p>
<pre>
&lt;?xml version=&quot;1.0&quot;?&gt;
&lt;!DOCTYPE lolz [
 &lt;!ENTITY lol &quot;lol&quot;&gt;
 &lt;!ELEMENT lolz (#PCDATA)&gt;
 &lt;!ENTITY lol1 &quot;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&quot;&gt;
 &lt;!ENTITY lol2 &quot;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&quot;&gt;
 &lt;!ENTITY lol3 &quot;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&quot;&gt;
[...]
 &lt;!ENTITY lol9 &quot;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&quot;&gt;
]&gt;
&lt;lolz&gt;&amp;lol9;&lt;/lolz&gt;</pre>
</p>

<h3>Solution</h3>
<p>
In order to avoid exposing dangerous feature of the XML parser, you can do the following change to the code.
</p>
<!--XXE_GENERIC_END-->

<p><b>Vulnerable Code:</b></p>
<p>
<pre>
DocumentBuilder db = DocumentBuilderFactory.newInstance().newDocumentBuilder();

Document doc = db.parse(input);</pre>
</p>
<br/>
<p>
The following snippets show two available solutions. You can set one feature or both.
</p>

<p><b>Solution using "Secure processing" mode:</b></p>
<p>
This setting will protect you against Denial of Service attack and remote file access.
<pre>
DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
DocumentBuilder db = dbf.newDocumentBuilder();

Document doc = db.parse(input);</pre>
</p>

<p><b>Solution disabling DTD:</b></p>
<p>
By disabling DTD, almost all XXE attacks will be prevented.
<pre>
DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true);
DocumentBuilder db = dbf.newDocumentBuilder();

Document doc = db.parse(input);</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<!--XXE_GENERIC_START-->
<a href="https://cwe.mitre.org/data/definitions/611.html">CWE-611: Improper Restriction of XML External Entity Reference ('XXE')</a><br/>
<a href="https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=61702260">CERT: IDS10-J. Prevent XML external entity attacks</a><br/>
<a href="https://www.owasp.org/index.php/XML_External_Entity_%28XXE%29_Processing">OWASP.org: XML External Entity (XXE) Processing</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_Entity_Expansion">WS-Attacks.org: XML Entity Expansion</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_External_Entity_DOS">WS-Attacks.org: XML External Entity DOS</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_Entity_Reference_Attack">WS-Attacks.org: XML Entity Reference Attack</a><br/>
<a href="https://blog.h3xstream.com/2014/06/identifx-xml-external-entity.html">Identifx XML External Entity vulnerability (XXE)</a><br/>
<!--XXE_GENERIC_END-->
<a href="http://xerces.apache.org/xerces2-j/features.html">Xerces2 complete features list</a>
</p>

        
<h2>
<a name="XXE_XMLREADER">XXE_XMLREADER: XML parsing vulnerable to XXE (XMLReader)</a>
</h2>
            
<!--XXE_GENERIC_START-->
<h3>Attack</h3>
<p>XML External Entity (XXE) attacks can occur when an XML parser supports XML entities while processing XML received
from an untrusted source.</p>
<p><b>Risk 1: Expose local file content (XXE: <u>X</u>ML E<u>x</u>ternal <u>E</u>ntity)</b></p>
<p>
<pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;
&lt;!DOCTYPE foo [
   &lt;!ENTITY xxe SYSTEM &quot;file:///etc/passwd&quot; &gt; ]&gt;
&lt;foo&gt;&amp;xxe;&lt;/foo&gt;</pre>
</p>
<b>Risk 2: Denial of service (XEE: <u>X</u>ML <u>E</u>ntity <u>E</u>xpansion)</b>
<p>
<pre>
&lt;?xml version=&quot;1.0&quot;?&gt;
&lt;!DOCTYPE lolz [
 &lt;!ENTITY lol &quot;lol&quot;&gt;
 &lt;!ELEMENT lolz (#PCDATA)&gt;
 &lt;!ENTITY lol1 &quot;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&quot;&gt;
 &lt;!ENTITY lol2 &quot;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&quot;&gt;
 &lt;!ENTITY lol3 &quot;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&quot;&gt;
[...]
 &lt;!ENTITY lol9 &quot;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&quot;&gt;
]&gt;
&lt;lolz&gt;&amp;lol9;&lt;/lolz&gt;</pre>
</p>

<h3>Solution</h3>
<p>
In order to avoid exposing dangerous feature of the XML parser, you can do the following change to the code.
</p>
<!--XXE_GENERIC_END-->

<p><b>Vulnerable Code:</b></p>
<p>
<pre>
XMLReader reader = XMLReaderFactory.createXMLReader();
reader.setContentHandler(customHandler);
reader.parse(new InputSource(inputStream));</pre>
</p>
<br/>
<p>
The following snippets show two available solutions. You can set one property or both.
</p>

<p><b>Solution using "Secure processing" mode:</b></p>
<p>
This setting will protect you against Denial of Service attack and remote file access.
<pre>
XMLReader reader = XMLReaderFactory.createXMLReader();
reader.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
reader.setContentHandler(customHandler);

reader.parse(new InputSource(inputStream));</pre>
</p>

<p><b>Solution disabling DTD:</b></p>
<p>
By disabling DTD, almost all XXE attacks will be prevented.
<pre>
XMLReader reader = XMLReaderFactory.createXMLReader();
reader.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true);
reader.setContentHandler(customHandler);

reader.parse(new InputSource(inputStream));</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<!--XXE_GENERIC_START-->
<a href="https://cwe.mitre.org/data/definitions/611.html">CWE-611: Improper Restriction of XML External Entity Reference ('XXE')</a><br/>
<a href="https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=61702260">CERT: IDS10-J. Prevent XML external entity attacks</a><br/>
<a href="https://www.owasp.org/index.php/XML_External_Entity_%28XXE%29_Processing">OWASP.org: XML External Entity (XXE) Processing</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_Entity_Expansion">WS-Attacks.org: XML Entity Expansion</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_External_Entity_DOS">WS-Attacks.org: XML External Entity DOS</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_Entity_Reference_Attack">WS-Attacks.org: XML Entity Reference Attack</a><br/>
<a href="https://blog.h3xstream.com/2014/06/identifx-xml-external-entity.html">Identifx XML External Entity vulnerability (XXE)</a><br/>
<!--XXE_GENERIC_END-->
<a href="https://xerces.apache.org/xerces-j/features.html">Xerces complete features list</a>
</p>

        
<h2>
<a name="XXE_DTD_TRANSFORM_FACTORY">XXE_DTD_TRANSFORM_FACTORY: XML parsing vulnerable to XXE (TransformerFactory)</a>
</h2>
            
<!--XXE_GENERIC_START-->
<h3>Attack</h3>
<p>XML External Entity (XXE) attacks can occur when an XML parser supports XML entities while processing XML received
from an untrusted source.</p>
<p><b>Risk 1: Expose local file content (XXE: <u>X</u>ML E<u>x</u>ternal <u>E</u>ntity)</b></p>
<p>
<pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;
&lt;!DOCTYPE foo [
   &lt;!ENTITY xxe SYSTEM &quot;file:///etc/passwd&quot; &gt; ]&gt;
&lt;foo&gt;&amp;xxe;&lt;/foo&gt;</pre>
</p>
<b>Risk 2: Denial of service (XEE: <u>X</u>ML <u>E</u>ntity <u>E</u>xpansion)</b>
<p>
<pre>
&lt;?xml version=&quot;1.0&quot;?&gt;
&lt;!DOCTYPE lolz [
 &lt;!ENTITY lol &quot;lol&quot;&gt;
 &lt;!ELEMENT lolz (#PCDATA)&gt;
 &lt;!ENTITY lol1 &quot;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&quot;&gt;
 &lt;!ENTITY lol2 &quot;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&quot;&gt;
 &lt;!ENTITY lol3 &quot;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&quot;&gt;
[...]
 &lt;!ENTITY lol9 &quot;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&quot;&gt;
]&gt;
&lt;lolz&gt;&amp;lol9;&lt;/lolz&gt;</pre>
</p>

<h3>Solution</h3>
<p>
In order to avoid exposing dangerous feature of the XML parser, you can do the following change to the code.
</p>
<!--XXE_GENERIC_END-->

<p><b>Vulnerable Code:</b></p>
<p>
<pre>
Transformer transformer = TransformerFactory.newInstance().newTransformer();
transformer.transform(input, result);</pre>
</p>
<br/>
<p>
The following snippets show two available solutions. You can set one feature or both.
</p>

<p><b>Solution using "Secure processing" mode:</b></p>
<p>
This setting will protect you against remote file access but not denial of service.
<pre>
TransformerFactory factory = TransformerFactory.newInstance();
factory.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "all");
factory.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "all");

Transformer transformer = factory.newTransformer();
transformer.setOutputProperty(OutputKeys.INDENT, "yes");

transformer.transform(input, result);</pre>
</p>

<p><b>Solution disabling DTD:</b></p>
<p>
This setting will protect you against remote file access but not denial of service.
<pre>
TransformerFactory factory = TransformerFactory.newInstance();
factory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);

Transformer transformer = factory.newTransformer();
transformer.setOutputProperty(OutputKeys.INDENT, "yes");

transformer.transform(input, result);</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<!--XXE_GENERIC_START-->
<a href="https://cwe.mitre.org/data/definitions/611.html">CWE-611: Improper Restriction of XML External Entity Reference ('XXE')</a><br/>
<a href="https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=61702260">CERT: IDS10-J. Prevent XML external entity attacks</a><br/>
<a href="https://www.owasp.org/index.php/XML_External_Entity_%28XXE%29_Processing">OWASP.org: XML External Entity (XXE) Processing</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_Entity_Expansion">WS-Attacks.org: XML Entity Expansion</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_External_Entity_DOS">WS-Attacks.org: XML External Entity DOS</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_Entity_Reference_Attack">WS-Attacks.org: XML Entity Reference Attack</a><br/>
<a href="https://blog.h3xstream.com/2014/06/identifx-xml-external-entity.html">Identifx XML External Entity vulnerability (XXE)</a><br/>
<!--XXE_GENERIC_END-->
</p>

        
<h2>
<a name="XXE_XSLT_TRANSFORM_FACTORY">XXE_XSLT_TRANSFORM_FACTORY: XSLT parsing vulnerable to XXE (TransformerFactory)</a>
</h2>
            
<!--XXE_GENERIC_START-->
<h3>Attack</h3>
<p>XSLT External Entity (XXE) attacks can occur when an XSLT parser supports external entities while processing XSLT received
from an untrusted source.</p>
<p><b>Risk: Expose local file content (XXE: <u>X</u>ML E<u>x</u>ternal <u>E</u>ntity)</b></p>
<p>
<pre>
&lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;&gt;
   &lt;xsl:template match=&quot;/&quot;&gt;
       &lt;xsl:value-of select=&quot;document(&apos;/etc/passwd&apos;)&quot;&gt;
   &lt;/xsl:value-of&gt;&lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;</pre>
</p>

<h3>Solution</h3>
<p>
In order to avoid exposing dangerous feature of the XML parser, you can do the following change to the code.
</p>
<!--XXE_GENERIC_END-->

<p><b>Vulnerable Code:</b></p>
<p>
<pre>
Transformer transformer = TransformerFactory.newInstance().newTransformer();
transformer.transform(input, result);</pre>
</p>
<br/>
<p>
The following snippets show two available solutions. You can set one feature or both.
</p>
<p><b>Solution using "Secure processing" mode:</b></p>
<p>
This setting will protect you against remote file access but not denial of service.
<pre>
TransformerFactory factory = TransformerFactory.newInstance();
factory.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "all");
factory.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "all");

Transformer transformer = factory.newTransformer();
transformer.setOutputProperty(OutputKeys.INDENT, "yes");

transformer.transform(input, result);</pre>
</p>

<p><b>Solution disabling DTD:</b></p>
<p>
This setting will protect you against remote file access but not denial of service.
<pre>
TransformerFactory factory = TransformerFactory.newInstance();
factory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);

Transformer transformer = factory.newTransformer();
transformer.setOutputProperty(OutputKeys.INDENT, "yes");

transformer.transform(input, result);</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<!--XXE_GENERIC_START-->
<a href="https://cwe.mitre.org/data/definitions/611.html">CWE-611: Improper Restriction of XML External Entity Reference ('XXE')</a><br/>
<a href="https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=61702260">CERT: IDS10-J. Prevent XML external entity attacks</a><br/>
<a href="https://www.owasp.org/index.php/XML_External_Entity_%28XXE%29_Processing">OWASP.org: XML External Entity (XXE) Processing</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_Entity_Expansion">WS-Attacks.org: XML Entity Expansion</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_External_Entity_DOS">WS-Attacks.org: XML External Entity DOS</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_Entity_Reference_Attack">WS-Attacks.org: XML Entity Reference Attack</a><br/>
<a href="https://blog.h3xstream.com/2014/06/identifx-xml-external-entity.html">Identifx XML External Entity vulnerability (XXE)</a><br/>
<!--XXE_GENERIC_END-->
</p>

        </body>
</html>
