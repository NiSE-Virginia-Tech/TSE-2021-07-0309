<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>SpotBugs Report</title>
<style type="text/css">
		.tablerow0 {
			background: #EEEEEE;
		}

		.tablerow1 {
			background: white;
		}

		.detailrow0 {
			background: #EEEEEE;
		}

		.detailrow1 {
			background: white;
		}

		.tableheader {
			background: #b9b9fe;
			font-size: larger;
		}

		.tablerow0:hover, .tablerow1:hover {
			background: #aaffaa;
		}

		.priority-1 {
		    color: red;
		    font-weight: bold;
		}
		.priority-2 {
		    color: orange;
		    font-weight: bold;
		}
		.priority-3 {
		    color: green;
		    font-weight: bold;
		}
		.priority-4 {
		    color: blue;
		    font-weight: bold;
		}
		</style>
<script type="text/javascript">
			function toggleRow(elid) {
				if (document.getElementById) {
					element = document.getElementById(elid);
					if (element) {
						if (element.style.display == 'none') {
							element.style.display = 'block';
							//window.status = 'Toggle on!';
						} else {
							element.style.display = 'none';
							//window.status = 'Toggle off!';
						}
					}
				}
			}
		</script>
</head>
<body>
<h1>
<a href="https://spotbugs.github.io/">SpotBugs</a> Report</h1>
<h2>Project Information</h2>
<p>Project: 
		</p>
<p>SpotBugs version: 3.1.12</p>
<p>Code analyzed:</p>
<ul>
<li>/home/x/CryptoAPIDetect/dataset/group/activemq-artemis.git/dependency-check-core-1.4.3.jar</li>
</ul>
<p>
<br/>
<br/>
</p>
<h2>Metrics</h2>
<p>9806 lines of code analyzed,
	in 149 classes, 
	in 23 packages.</p>
<table width="500" cellpadding="5" cellspacing="2">
<tr class="tableheader">
<th align="left">Metric</th>
<th align="right">Total</th>
<th align="right">Density*</th>
</tr>
<tr class="tablerow0">
<td>High Priority Warnings</td>
<td align="right">2</td>
<td align="right">0.20</td>
</tr>
<tr class="tablerow1">
<td>Medium Priority Warnings</td>
<td align="right">78</td>
<td align="right">7.95</td>
</tr>
<tr class="$totalClass">
<td>
<b>Total Warnings</b>
</td>
<td align="right">
<b>80</b>
</td>
<td align="right">
<b>8.16</b>
</td>
</tr>
</table>
<p>
<i>(* Defects per Thousand lines of non-commenting source statements)</i>
</p>
<p>
<br/>
<br/>
</p>
<h2>Contents</h2>
<ul>
<li>
<a href="#Warnings_SECURITY">Security Warnings</a>
</li>
<li>
<a href="#Details">Details</a>
</li>
</ul>
<h1>Summary</h1>
<table width="500" cellpadding="5" cellspacing="2">
<tr class="tableheader">
<th align="left">Warning Type</th>
<th align="right">Number</th>
</tr>
<tr class="tablerow0">
<td>
<a href="#Warnings_SECURITY">Security Warnings</a>
</td>
<td align="right">80</td>
</tr>
<tr class="tablerow1">
<td>
<b>Total</b>
</td>
<td align="right">
<b>80</b>
</td>
</tr>
</table>
<h1>Warnings</h1>
<p>Click on a warning row to see full context information.</p>
<h2>
<a name="Warnings_SECURITY">Security Warnings</a>
</h2>
<table class="warningtable" width="100%" cellspacing="0">
<tr class="tableheader">
<th align="left">Code</th>
<th align="left">Warning</th>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71030');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71030" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class org.owasp.dependencycheck.exception.ExceptionCollection<br/>In method org.owasp.dependencycheck.exception.ExceptionCollection.printStackTrace(PrintStream)<br/>At ExceptionCollection.java:[line 203]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71084');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71084" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class org.owasp.dependencycheck.exception.ExceptionCollection<br/>In method org.owasp.dependencycheck.exception.ExceptionCollection.printStackTrace(PrintWriter)<br/>At ExceptionCollection.java:[line 188]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66420');">
<td>
<span class="priority-2">SECCI</span>
</td>
<td>This usage of java/lang/ProcessBuilder.&lt;init&gt;(Ljava/util/List;)V can be vulnerable to Command Injection</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66420" style="display: none;">
<a href="#COMMAND_INJECTION">Bug type COMMAND_INJECTION (click for details)</a>
<br/>In class org.owasp.dependencycheck.analyzer.AssemblyAnalyzer<br/>In method org.owasp.dependencycheck.analyzer.AssemblyAnalyzer.analyzeFileType(Dependency, Engine)<br/>At AssemblyAnalyzer.java:[line 126]<br/>Sink method java/lang/ProcessBuilder.&lt;init&gt;(Ljava/util/List;)V<br/>Sink parameter 0<br/>Unknown source org/owasp/dependencycheck/utils/Settings.getString(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/owasp/dependencycheck/dependency/Dependency.getActualFilePath()Ljava/lang/String;<br/>Unknown source org/owasp/dependencycheck/analyzer/AssemblyAnalyzer.buildArgumentList()Ljava/util/List;<br/>Unknown source org/owasp/dependencycheck/dependency/Dependency.actualFilePath<br/>Unknown source java/io/File.getPath()Ljava/lang/String;<br/>At AssemblyAnalyzer.java:[line 94]<br/>At AssemblyAnalyzer.java:[line 101]<br/>At AssemblyAnalyzer.java:[line 120]<br/>At AssemblyAnalyzer.java:[line 125]<br/>At Dependency.java:[line 201]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66559');">
<td>
<span class="priority-2">SECCI</span>
</td>
<td>This usage of java/lang/ProcessBuilder.&lt;init&gt;(Ljava/util/List;)V can be vulnerable to Command Injection</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66559" style="display: none;">
<a href="#COMMAND_INJECTION">Bug type COMMAND_INJECTION (click for details)</a>
<br/>In class org.owasp.dependencycheck.analyzer.AssemblyAnalyzer<br/>In method org.owasp.dependencycheck.analyzer.AssemblyAnalyzer.initializeFileTypeAnalyzer()<br/>At AssemblyAnalyzer.java:[line 253]<br/>Sink method java/lang/ProcessBuilder.&lt;init&gt;(Ljava/util/List;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.getPath()Ljava/lang/String;<br/>Unknown source org/owasp/dependencycheck/utils/Settings.getString(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/owasp/dependencycheck/analyzer/AssemblyAnalyzer.buildArgumentList()Ljava/util/List;<br/>At AssemblyAnalyzer.java:[line 94]<br/>At AssemblyAnalyzer.java:[line 101]<br/>At AssemblyAnalyzer.java:[line 235]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68058');">
<td>
<span class="priority-2">SECCI</span>
</td>
<td>This usage of java/lang/ProcessBuilder.&lt;init&gt;(Ljava/util/List;)V can be vulnerable to Command Injection</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68058" style="display: none;">
<a href="#COMMAND_INJECTION">Bug type COMMAND_INJECTION (click for details)</a>
<br/>In class org.owasp.dependencycheck.analyzer.RubyBundleAuditAnalyzer<br/>In method org.owasp.dependencycheck.analyzer.RubyBundleAuditAnalyzer.launchBundleAudit(File)<br/>At RubyBundleAuditAnalyzer.java:[line 121]<br/>Sink method java/lang/ProcessBuilder.&lt;init&gt;(Ljava/util/List;)V<br/>Sink parameter 0<br/>Unknown source org/owasp/dependencycheck/utils/Settings.getString(Ljava/lang/String;)Ljava/lang/String;<br/>At RubyBundleAuditAnalyzer.java:[line 118]<br/>At RubyBundleAuditAnalyzer.java:[line 119]<br/>At RubyBundleAuditAnalyzer.java:[line 120]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68157');">
<td>
<span class="priority-2">SECCRLFLOG</span>
</td>
<td>This use of org/slf4j/Logger.debug(Ljava/lang/String;)V might be used to include CRLF characters into log messages</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68157" style="display: none;">
<a href="#CRLF_INJECTION_LOGS">Bug type CRLF_INJECTION_LOGS (click for details)</a>
<br/>In class org.owasp.dependencycheck.analyzer.RubyBundleAuditAnalyzer<br/>In method org.owasp.dependencycheck.analyzer.RubyBundleAuditAnalyzer.addCriticalityToVulnerability(String, Vulnerability, String)<br/>At RubyBundleAuditAnalyzer.java:[line 442]<br/>Sink method org/slf4j/Logger.debug(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/owasp/dependencycheck/analyzer/RubyBundleAuditAnalyzer.addCriticalityToVulnerability(Ljava/lang/String;Lorg/owasp/dependencycheck/dependency/Vulnerability;Ljava/lang/String;)V parameter 0<br/>Unknown source org/owasp/dependencycheck/analyzer/RubyBundleAuditAnalyzer.addCriticalityToVulnerability(Ljava/lang/String;Lorg/owasp/dependencycheck/dependency/Vulnerability;Ljava/lang/String;)V parameter 2<br/>Method usage with tainted arguments detected<br/>At RubyBundleAuditAnalyzer.java:[line 342]<br/>At RubyBundleAuditAnalyzer.java:[line 358]<br/>At RubyBundleAuditAnalyzer.java:[line 442]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68266');">
<td>
<span class="priority-2">SECCRLFLOG</span>
</td>
<td>This use of org/slf4j/Logger.debug(Ljava/lang/String;)V might be used to include CRLF characters into log messages</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68266" style="display: none;">
<a href="#CRLF_INJECTION_LOGS">Bug type CRLF_INJECTION_LOGS (click for details)</a>
<br/>In class org.owasp.dependencycheck.analyzer.RubyBundleAuditAnalyzer<br/>In method org.owasp.dependencycheck.analyzer.RubyBundleAuditAnalyzer.addReferenceToVulnerability(String, Vulnerability, String)<br/>At RubyBundleAuditAnalyzer.java:[line 411]<br/>Sink method org/slf4j/Logger.debug(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/owasp/dependencycheck/analyzer/RubyBundleAuditAnalyzer.addReferenceToVulnerability(Ljava/lang/String;Lorg/owasp/dependencycheck/dependency/Vulnerability;Ljava/lang/String;)V parameter 2<br/>Unknown source org/owasp/dependencycheck/analyzer/RubyBundleAuditAnalyzer.addReferenceToVulnerability(Ljava/lang/String;Lorg/owasp/dependencycheck/dependency/Vulnerability;Ljava/lang/String;)V parameter 0<br/>Method usage with tainted arguments detected<br/>At RubyBundleAuditAnalyzer.java:[line 342]<br/>At RubyBundleAuditAnalyzer.java:[line 360]<br/>At RubyBundleAuditAnalyzer.java:[line 411]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68375');">
<td>
<span class="priority-2">SECCRLFLOG</span>
</td>
<td>This use of org/slf4j/Logger.warn(Ljava/lang/String;)V might be used to include CRLF characters into log messages</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68375" style="display: none;">
<a href="#CRLF_INJECTION_LOGS">Bug type CRLF_INJECTION_LOGS (click for details)</a>
<br/>In class org.owasp.dependencycheck.analyzer.RubyBundleAuditAnalyzer<br/>In method org.owasp.dependencycheck.analyzer.RubyBundleAuditAnalyzer.analyzeFileType(Dependency, Engine)<br/>At RubyBundleAuditAnalyzer.java:[line 299]<br/>Sink method org/slf4j/Logger.warn(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Tainted source java/io/BufferedReader.readLine()Ljava/lang/String;<br/>At RubyBundleAuditAnalyzer.java:[line 298]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68454');">
<td>
<span class="priority-2">SECCRLFLOG</span>
</td>
<td>This use of org/slf4j/Logger.debug(Ljava/lang/String;)V might be used to include CRLF characters into log messages</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68454" style="display: none;">
<a href="#CRLF_INJECTION_LOGS">Bug type CRLF_INJECTION_LOGS (click for details)</a>
<br/>In class org.owasp.dependencycheck.analyzer.RubyBundleAuditAnalyzer<br/>In method org.owasp.dependencycheck.analyzer.RubyBundleAuditAnalyzer.createVulnerability(String, Dependency, String, String)<br/>At RubyBundleAuditAnalyzer.java:[line 474]<br/>Sink method org/slf4j/Logger.debug(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/owasp/dependencycheck/analyzer/RubyBundleAuditAnalyzer.createVulnerability(Ljava/lang/String;Lorg/owasp/dependencycheck/dependency/Dependency;Ljava/lang/String;Ljava/lang/String;)Lorg/owasp/dependencycheck/dependency/Vulnerability; parameter 3<br/>Unknown source org/owasp/dependencycheck/analyzer/RubyBundleAuditAnalyzer.createVulnerability(Ljava/lang/String;Lorg/owasp/dependencycheck/dependency/Dependency;Ljava/lang/String;Ljava/lang/String;)Lorg/owasp/dependencycheck/dependency/Vulnerability; parameter 0<br/>Method usage with tainted arguments detected<br/>At RubyBundleAuditAnalyzer.java:[line 342]<br/>At RubyBundleAuditAnalyzer.java:[line 354]<br/>At RubyBundleAuditAnalyzer.java:[line 474]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68563');">
<td>
<span class="priority-2">SECCRLFLOG</span>
</td>
<td>This use of org/slf4j/Logger.warn(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V might be used to include CRLF characters into log messages</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68563" style="display: none;">
<a href="#CRLF_INJECTION_LOGS">Bug type CRLF_INJECTION_LOGS (click for details)</a>
<br/>In class org.owasp.dependencycheck.analyzer.RubyBundleAuditAnalyzer<br/>In method org.owasp.dependencycheck.analyzer.RubyBundleAuditAnalyzer.initializeFileTypeAnalyzer()<br/>At RubyBundleAuditAnalyzer.java:[line 187]<br/>Sink method org/slf4j/Logger.warn(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V<br/>Sink parameter 0<br/>Tainted source java/io/BufferedReader.readLine()Ljava/lang/String;<br/>At RubyBundleAuditAnalyzer.java:[line 185]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68642');">
<td>
<span class="priority-2">SECCRLFLOG</span>
</td>
<td>This use of org/slf4j/Logger.debug(Ljava/lang/String;)V might be used to include CRLF characters into log messages</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68642" style="display: none;">
<a href="#CRLF_INJECTION_LOGS">Bug type CRLF_INJECTION_LOGS (click for details)</a>
<br/>In class org.owasp.dependencycheck.analyzer.RubyBundleAuditAnalyzer<br/>In method org.owasp.dependencycheck.analyzer.RubyBundleAuditAnalyzer.processBundlerAuditOutput(Dependency, Engine, BufferedReader)<br/>At RubyBundleAuditAnalyzer.java:[line 352]<br/>Sink method org/slf4j/Logger.debug(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.getName()Ljava/lang/String;<br/>Tainted source java/io/BufferedReader.readLine()Ljava/lang/String;<br/>At RubyBundleAuditAnalyzer.java:[line 342]<br/>At RubyBundleAuditAnalyzer.java:[line 352]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68736');">
<td>
<span class="priority-2">SECCRLFLOG</span>
</td>
<td>This use of org/slf4j/Logger.debug(Ljava/lang/String;)V might be used to include CRLF characters into log messages</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68736" style="display: none;">
<a href="#CRLF_INJECTION_LOGS">Bug type CRLF_INJECTION_LOGS (click for details)</a>
<br/>In class org.owasp.dependencycheck.analyzer.RubyBundleAuditAnalyzer<br/>In method org.owasp.dependencycheck.analyzer.RubyBundleAuditAnalyzer.setVulnerabilityName(String, Dependency, Vulnerability, String)<br/>At RubyBundleAuditAnalyzer.java:[line 392]<br/>Sink method org/slf4j/Logger.debug(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/owasp/dependencycheck/analyzer/RubyBundleAuditAnalyzer.setVulnerabilityName(Ljava/lang/String;Lorg/owasp/dependencycheck/dependency/Dependency;Lorg/owasp/dependencycheck/dependency/Vulnerability;Ljava/lang/String;)V parameter 0<br/>Unknown source org/owasp/dependencycheck/analyzer/RubyBundleAuditAnalyzer.setVulnerabilityName(Ljava/lang/String;Lorg/owasp/dependencycheck/dependency/Dependency;Lorg/owasp/dependencycheck/dependency/Vulnerability;Ljava/lang/String;)V parameter 3<br/>Method usage with tainted arguments detected<br/>At RubyBundleAuditAnalyzer.java:[line 342]<br/>At RubyBundleAuditAnalyzer.java:[line 356]<br/>At RubyBundleAuditAnalyzer.java:[line 392]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69606');">
<td>
<span class="priority-2">SECCRLFLOG</span>
</td>
<td>This use of org/slf4j/Logger.debug(Ljava/lang/String;Ljava/lang/Object;)V might be used to include CRLF characters into log messages</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69606" style="display: none;">
<a href="#CRLF_INJECTION_LOGS">Bug type CRLF_INJECTION_LOGS (click for details)</a>
<br/>In class org.owasp.dependencycheck.data.nvdcve.ConnectionFactory<br/>In method org.owasp.dependencycheck.data.nvdcve.ConnectionFactory.ensureSchemaVersion(Connection)<br/>At ConnectionFactory.java:[line 386]<br/>Sink method org/slf4j/Logger.debug(Ljava/lang/String;Ljava/lang/Object;)V<br/>Sink parameter 0<br/>Tainted source java/sql/ResultSet.getString(I)Ljava/lang/String;<br/>At ConnectionFactory.java:[line 386]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70836');">
<td>
<span class="priority-2">SECCRLFLOG</span>
</td>
<td>This use of org/slf4j/Logger.warn(Ljava/lang/String;Ljava/lang/Object;)V might be used to include CRLF characters into log messages</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70836" style="display: none;">
<a href="#CRLF_INJECTION_LOGS">Bug type CRLF_INJECTION_LOGS (click for details)</a>
<br/>In class org.owasp.dependencycheck.dependency.VulnerableSoftware<br/>In method org.owasp.dependencycheck.dependency.VulnerableSoftware.setCpe(String)<br/>At VulnerableSoftware.java:[line 52]<br/>Sink method org/slf4j/Logger.warn(Ljava/lang/String;Ljava/lang/Object;)V<br/>Sink parameter 0<br/>Unknown source org/owasp/dependencycheck/dependency/VulnerableSoftware.setCpe(Ljava/lang/String;)V parameter 0<br/>Method usage with tainted arguments detected<br/>At CveDB.java:[line 217]<br/>At CveDB.java:[line 436]<br/>At CveDB.java:[line 439]<br/>At CveDB.java:[line 441]<br/>At NvdCve12Handler.java:[line 118]<br/>At NvdCve12Handler.java:[line 120]<br/>At NvdCve12Handler.java:[line 123]<br/>At NvdCve12Handler.java:[line 126]<br/>At NvdCve20Handler.java:[line 198]<br/>At NvdCve20Handler.java:[line 201]<br/>At Vulnerability.java:[line 158]<br/>At Vulnerability.java:[line 171]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69378');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in org.owasp.dependencycheck.data.cwe.CweDB.loadData()</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69378" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class org.owasp.dependencycheck.data.cwe.CweDB<br/>In method org.owasp.dependencycheck.data.cwe.CweDB.loadData()<br/>At CweDB.java:[line 63]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65635');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65635" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.owasp.dependencycheck.agent.DependencyCheckScanAgent<br/>In method org.owasp.dependencycheck.agent.DependencyCheckScanAgent.execute()<br/>At DependencyCheckScanAgent.java:[line 952]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/owasp/dependencycheck/agent/DependencyCheckScanAgent.reportOutputDirectory<br/>At DependencyCheckScanAgent.java:[line 952]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65714');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65714" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.owasp.dependencycheck.agent.DependencyCheckScanAgent<br/>In method org.owasp.dependencycheck.agent.DependencyCheckScanAgent.populateSettings()<br/>At DependencyCheckScanAgent.java:[line 908]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/security/CodeSource.getLocation()Ljava/net/URL;<br/>Unknown source java/net/URL.getPath()Ljava/lang/String;<br/>At DependencyCheckScanAgent.java:[line 908]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65798');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65798" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.owasp.dependencycheck.agent.DependencyCheckScanAgent<br/>In method org.owasp.dependencycheck.agent.DependencyCheckScanAgent.populateSettings()<br/>At DependencyCheckScanAgent.java:[line 911]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/owasp/dependencycheck/utils/Settings.getString(Ljava/lang/String;)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65867');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65867" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.owasp.dependencycheck.analyzer.AbstractSuppressionAnalyzer<br/>In method org.owasp.dependencycheck.analyzer.AbstractSuppressionAnalyzer.loadSuppressionData()<br/>At AbstractSuppressionAnalyzer.java:[line 132]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/owasp/dependencycheck/utils/Settings.getString(Ljava/lang/String;)Ljava/lang/String;<br/>At AbstractSuppressionAnalyzer.java:[line 122]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65946');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65946" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.owasp.dependencycheck.analyzer.ArchiveAnalyzer<br/>In method org.owasp.dependencycheck.analyzer.ArchiveAnalyzer.addDisguisedJarsToDependencies(Dependency, Engine)<br/>At ArchiveAnalyzer.java:[line 283]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/owasp/dependencycheck/dependency/Dependency.fileName<br/>Unknown source org/owasp/dependencycheck/dependency/Dependency.getFileName()Ljava/lang/String;<br/>At ArchiveAnalyzer.java:[line 279]<br/>At ArchiveAnalyzer.java:[line 283]<br/>At Dependency.java:[line 158]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66050');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66050" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.owasp.dependencycheck.analyzer.ArchiveAnalyzer<br/>In method org.owasp.dependencycheck.analyzer.ArchiveAnalyzer.analyzeFileType(Dependency, Engine)<br/>At ArchiveAnalyzer.java:[line 234]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/owasp/dependencycheck/dependency/Dependency.getActualFilePath()Ljava/lang/String;<br/>Unknown source org/owasp/dependencycheck/dependency/Dependency.actualFilePath<br/>At ArchiveAnalyzer.java:[line 234]<br/>At Dependency.java:[line 201]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66144');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66144" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.owasp.dependencycheck.analyzer.ArchiveAnalyzer<br/>In method org.owasp.dependencycheck.analyzer.ArchiveAnalyzer.extractArchive(ArchiveInputStream, File, Engine)<br/>At ArchiveAnalyzer.java:[line 469]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/commons/compress/archivers/ArchiveEntry.getName()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66213');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66213" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.owasp.dependencycheck.analyzer.ArchiveAnalyzer<br/>In method org.owasp.dependencycheck.analyzer.ArchiveAnalyzer.extractFiles(File, File, Engine)<br/>At ArchiveAnalyzer.java:[line 382]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/commons/compress/compressors/gzip/GzipUtils.getUncompressedFilename(Ljava/lang/String;)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66282');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66282" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.owasp.dependencycheck.analyzer.ArchiveAnalyzer<br/>In method org.owasp.dependencycheck.analyzer.ArchiveAnalyzer.extractFiles(File, File, Engine)<br/>At ArchiveAnalyzer.java:[line 388]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/commons/compress/compressors/bzip2/BZip2Utils.getUncompressedFilename(Ljava/lang/String;)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66351');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66351" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.owasp.dependencycheck.analyzer.ArchiveAnalyzer<br/>In method org.owasp.dependencycheck.analyzer.ArchiveAnalyzer.initializeFileTypeAnalyzer()<br/>At ArchiveAnalyzer.java:[line 185]<br/>Sink method java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;<br/>Sink parameter 0<br/>Unknown source org/owasp/dependencycheck/utils/Settings.getTempDirectory()Ljava/io/File;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66668');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66668" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.owasp.dependencycheck.analyzer.AssemblyAnalyzer<br/>In method org.owasp.dependencycheck.analyzer.AssemblyAnalyzer.initializeFileTypeAnalyzer()<br/>At AssemblyAnalyzer.java:[line 199]<br/>Sink method java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;<br/>Sink parameter 0<br/>Unknown source org/owasp/dependencycheck/utils/Settings.getTempDirectory()Ljava/io/File;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66911');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66911" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.owasp.dependencycheck.analyzer.CentralAnalyzer<br/>In method org.owasp.dependencycheck.analyzer.CentralAnalyzer.analyzeFileType(Dependency, Engine)<br/>At CentralAnalyzer.java:[line 218]<br/>Sink method java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;<br/>Sink parameter 0<br/>Unknown source org/owasp/dependencycheck/utils/Settings.getTempDirectory()Ljava/io/File;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66980');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66980" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.owasp.dependencycheck.analyzer.CocoaPodsAnalyzer<br/>In method org.owasp.dependencycheck.analyzer.CocoaPodsAnalyzer.setPackagePath(Dependency)<br/>At CocoaPodsAnalyzer.java:[line 199]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/owasp/dependencycheck/dependency/Dependency.getFilePath()Ljava/lang/String;<br/>Unknown source org/owasp/dependencycheck/dependency/Dependency.filePath<br/>At CocoaPodsAnalyzer.java:[line 199]<br/>At Dependency.java:[line 263]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67132');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67132" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.owasp.dependencycheck.analyzer.DependencyBundlingAnalyzer<br/>In method org.owasp.dependencycheck.analyzer.DependencyBundlingAnalyzer.hasSameBasePath(Dependency, Dependency)<br/>At DependencyBundlingAnalyzer.java:[line 306]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/owasp/dependencycheck/dependency/Dependency.getFilePath()Ljava/lang/String;<br/>Unknown source org/owasp/dependencycheck/dependency/Dependency.filePath<br/>At DependencyBundlingAnalyzer.java:[line 306]<br/>At Dependency.java:[line 263]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67226');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67226" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.owasp.dependencycheck.analyzer.DependencyBundlingAnalyzer<br/>In method org.owasp.dependencycheck.analyzer.DependencyBundlingAnalyzer.hasSameBasePath(Dependency, Dependency)<br/>At DependencyBundlingAnalyzer.java:[line 308]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/owasp/dependencycheck/dependency/Dependency.getFilePath()Ljava/lang/String;<br/>Unknown source org/owasp/dependencycheck/dependency/Dependency.filePath<br/>At DependencyBundlingAnalyzer.java:[line 308]<br/>At Dependency.java:[line 263]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67320');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67320" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.owasp.dependencycheck.analyzer.HintAnalyzer<br/>In method org.owasp.dependencycheck.analyzer.HintAnalyzer.loadHintRules()<br/>At HintAnalyzer.java:[line 315]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/owasp/dependencycheck/utils/Settings.getString(Ljava/lang/String;)Ljava/lang/String;<br/>At HintAnalyzer.java:[line 305]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67399');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67399" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.owasp.dependencycheck.analyzer.JarAnalyzer<br/>In method org.owasp.dependencycheck.analyzer.JarAnalyzer.analyzePOM(Dependency, List, Engine)<br/>At JarAnalyzer.java:[line 283]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/commons/io/FilenameUtils.removeExtension(Ljava/lang/String;)Ljava/lang/String;<br/>At JarAnalyzer.java:[line 282]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67478');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67478" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.owasp.dependencycheck.analyzer.JarAnalyzer<br/>In method org.owasp.dependencycheck.analyzer.JarAnalyzer.initializeFileTypeAnalyzer()<br/>At JarAnalyzer.java:[line 910]<br/>Sink method java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;<br/>Sink parameter 0<br/>Unknown source org/owasp/dependencycheck/utils/Settings.getTempDirectory()Ljava/io/File;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67547');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67547" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.owasp.dependencycheck.analyzer.JarAnalyzer<br/>In method org.owasp.dependencycheck.analyzer.JarAnalyzer.retrievePomListing(JarFile)<br/>At JarAnalyzer.java:[line 388]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/util/jar/JarEntry.getName()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67732');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67732" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.owasp.dependencycheck.analyzer.NexusAnalyzer<br/>In method org.owasp.dependencycheck.analyzer.NexusAnalyzer.analyzeFileType(Dependency, Engine)<br/>At NexusAnalyzer.java:[line 235]<br/>Sink method java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;<br/>Sink parameter 0<br/>Unknown source org/owasp/dependencycheck/utils/Settings.getTempDirectory()Ljava/io/File;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67801');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67801" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.owasp.dependencycheck.analyzer.NuspecAnalyzer<br/>In method org.owasp.dependencycheck.analyzer.NuspecAnalyzer.analyzeFileType(Dependency, Engine)<br/>At NuspecAnalyzer.java:[line 137]<br/>Sink method java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/owasp/dependencycheck/dependency/Dependency.getActualFilePath()Ljava/lang/String;<br/>Unknown source org/owasp/dependencycheck/dependency/Dependency.actualFilePath<br/>At NuspecAnalyzer.java:[line 137]<br/>At Dependency.java:[line 201]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67895');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67895" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.owasp.dependencycheck.analyzer.PythonDistributionAnalyzer<br/>In method org.owasp.dependencycheck.analyzer.PythonDistributionAnalyzer.collectMetadataFromArchiveFormat(Dependency, FilenameFilter, FilenameFilter)<br/>At PythonDistributionAnalyzer.java:[line 225]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/owasp/dependencycheck/dependency/Dependency.getActualFilePath()Ljava/lang/String;<br/>Unknown source org/owasp/dependencycheck/dependency/Dependency.actualFilePath<br/>At PythonDistributionAnalyzer.java:[line 225]<br/>At Dependency.java:[line 201]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67989');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67989" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.owasp.dependencycheck.analyzer.PythonDistributionAnalyzer<br/>In method org.owasp.dependencycheck.analyzer.PythonDistributionAnalyzer.initializeFileTypeAnalyzer()<br/>At PythonDistributionAnalyzer.java:[line 250]<br/>Sink method java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;<br/>Sink parameter 0<br/>Unknown source org/owasp/dependencycheck/utils/Settings.getTempDirectory()Ljava/io/File;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68845');">
<td>
<span class="priority-1">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68845" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.owasp.dependencycheck.analyzer.RubyBundleAuditAnalyzer<br/>In method org.owasp.dependencycheck.analyzer.RubyBundleAuditAnalyzer.createDependencyForGem(Engine, String, String, String, String)<br/>At RubyBundleAuditAnalyzer.java:[line 490]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/owasp/dependencycheck/analyzer/RubyBundleAuditAnalyzer.createDependencyForGem(Lorg/owasp/dependencycheck/Engine;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/owasp/dependencycheck/dependency/Dependency; parameter 0<br/>Method usage with tainted arguments detected<br/>At RubyBundleAuditAnalyzer.java:[line 342]<br/>At RubyBundleAuditAnalyzer.java:[line 347]<br/>At RubyBundleAuditAnalyzer.java:[line 349]<br/>At RubyBundleAuditAnalyzer.java:[line 490]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68959');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68959" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.owasp.dependencycheck.analyzer.RubyBundlerAnalyzer<br/>In method org.owasp.dependencycheck.analyzer.RubyBundlerAnalyzer.analyzeFileType(Dependency, Engine)<br/>At RubyBundlerAnalyzer.java:[line 127]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/owasp/dependencycheck/dependency/Dependency.getFilePath()Ljava/lang/String;<br/>Unknown source org/owasp/dependencycheck/dependency/Dependency.filePath<br/>At RubyBundlerAnalyzer.java:[line 127]<br/>At Dependency.java:[line 263]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69053');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69053" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.owasp.dependencycheck.analyzer.RubyBundlerAnalyzer<br/>In method org.owasp.dependencycheck.analyzer.RubyBundlerAnalyzer.analyzeFileType(Dependency, Engine)<br/>At RubyBundlerAnalyzer.java:[line 131]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.getName()Ljava/lang/String;<br/>At RubyBundlerAnalyzer.java:[line 103]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69132');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69132" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.owasp.dependencycheck.analyzer.RubyGemspecAnalyzer<br/>In method org.owasp.dependencycheck.analyzer.RubyGemspecAnalyzer.setPackagePath(Dependency)<br/>At RubyGemspecAnalyzer.java:[line 243]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/owasp/dependencycheck/dependency/Dependency.getFilePath()Ljava/lang/String;<br/>Unknown source org/owasp/dependencycheck/dependency/Dependency.filePath<br/>At RubyGemspecAnalyzer.java:[line 243]<br/>At Dependency.java:[line 263]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69226');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69226" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.owasp.dependencycheck.analyzer.SwiftPackageManagerAnalyzer<br/>In method org.owasp.dependencycheck.analyzer.SwiftPackageManagerAnalyzer.setPackagePath(Dependency)<br/>At SwiftPackageManagerAnalyzer.java:[line 186]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/owasp/dependencycheck/dependency/Dependency.getFilePath()Ljava/lang/String;<br/>Unknown source org/owasp/dependencycheck/dependency/Dependency.filePath<br/>At SwiftPackageManagerAnalyzer.java:[line 186]<br/>At Dependency.java:[line 263]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69685');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69685" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.owasp.dependencycheck.data.nvdcve.ConnectionFactory<br/>In method org.owasp.dependencycheck.data.nvdcve.ConnectionFactory.h2DataFileExists()<br/>At ConnectionFactory.java:[line 247]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/owasp/dependencycheck/utils/Settings.getString(Ljava/lang/String;)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69892');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69892" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.owasp.dependencycheck.data.nvdcve.DriverLoader<br/>In method org.owasp.dependencycheck.data.nvdcve.DriverLoader.load(String, String)<br/>At DriverLoader.java:[line 81]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/owasp/dependencycheck/data/nvdcve/DriverLoader.load(Ljava/lang/String;Ljava/lang/String;)Ljava/sql/Driver; parameter 0<br/>At ConnectionFactory.java:[line 113]<br/>At DriverLoader.java:[line 79]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69981');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69981" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.owasp.dependencycheck.data.update.CpeUpdater<br/>In method org.owasp.dependencycheck.data.update.CpeUpdater.downloadCpe()<br/>At CpeUpdater.java:[line 94]<br/>Sink method java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;<br/>Sink parameter 0<br/>Unknown source org/owasp/dependencycheck/utils/Settings.getTempDirectory()Ljava/io/File;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70050');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70050" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.owasp.dependencycheck.data.update.CpeUpdater<br/>In method org.owasp.dependencycheck.data.update.CpeUpdater.extractGzip(File)<br/>At CpeUpdater.java:[line 159]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.getPath()Ljava/lang/String;<br/>At CpeUpdater.java:[line 159]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70129');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70129" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.owasp.dependencycheck.data.update.CpeUpdater<br/>In method org.owasp.dependencycheck.data.update.CpeUpdater.extractGzip(File)<br/>At CpeUpdater.java:[line 167]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.getPath()Ljava/lang/String;<br/>At CpeUpdater.java:[line 159]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70266');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70266" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.owasp.dependencycheck.data.update.nvd.DownloadTask<br/>In method new org.owasp.dependencycheck.data.update.nvd.DownloadTask(NvdCveInfo, ExecutorService, CveDB, Settings)<br/>At DownloadTask.java:[line 73]<br/>Sink method java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;<br/>Sink parameter 0<br/>Unknown source org/owasp/dependencycheck/utils/Settings.getTempDirectory()Ljava/io/File;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70335');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70335" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.owasp.dependencycheck.data.update.nvd.DownloadTask<br/>In method new org.owasp.dependencycheck.data.update.nvd.DownloadTask(NvdCveInfo, ExecutorService, CveDB, Settings)<br/>At DownloadTask.java:[line 74]<br/>Sink method java/io/File.createTempFile(Ljava/lang/String;Ljava/lang/String;Ljava/io/File;)Ljava/io/File;<br/>Sink parameter 0<br/>Unknown source org/owasp/dependencycheck/utils/Settings.getTempDirectory()Ljava/io/File;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70404');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70404" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.owasp.dependencycheck.data.update.nvd.DownloadTask<br/>In method org.owasp.dependencycheck.data.update.nvd.DownloadTask.extractGzip(File)<br/>At DownloadTask.java:[line 269]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.getPath()Ljava/lang/String;<br/>At DownloadTask.java:[line 269]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70483');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70483" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.owasp.dependencycheck.data.update.nvd.DownloadTask<br/>In method org.owasp.dependencycheck.data.update.nvd.DownloadTask.extractGzip(File)<br/>At DownloadTask.java:[line 277]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.getPath()Ljava/lang/String;<br/>At DownloadTask.java:[line 269]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70678');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70678" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.owasp.dependencycheck.dependency.Dependency<br/>In method org.owasp.dependencycheck.dependency.Dependency.getActualFile()<br/>At Dependency.java:[line 210]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/owasp/dependencycheck/dependency/Dependency.actualFilePath<br/>At Dependency.java:[line 210]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70757');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70757" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.owasp.dependencycheck.dependency.Dependency<br/>In method org.owasp.dependencycheck.dependency.Dependency.setActualFilePath(String)<br/>At Dependency.java:[line 190]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/owasp/dependencycheck/dependency/Dependency.actualFilePath<br/>At Dependency.java:[line 190]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65551');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65551" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.owasp.dependencycheck.Engine<br/>In method org.owasp.dependencycheck.Engine.scan(String)<br/>At Engine.java:[line 205]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/owasp/dependencycheck/Engine.scan(Ljava/lang/String;)Ljava/util/List; parameter 0<br/>Method usage not detected<br/>At Engine.java:[line 188]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71138');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71138" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.owasp.dependencycheck.reporting.ReportGenerator<br/>In method org.owasp.dependencycheck.reporting.ReportGenerator.generateReport(String, String)<br/>At ReportGenerator.java:[line 303]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/owasp/dependencycheck/reporting/ReportGenerator.generateReport(Ljava/lang/String;Ljava/lang/String;)V parameter 0<br/>At DependencyCheckScanAgent.java:[line 886]<br/>At DependencyCheckScanAgent.java:[line 952]<br/>At ReportGenerator.java:[line 174]<br/>At ReportGenerator.java:[line 177]<br/>At ReportGenerator.java:[line 180]<br/>At ReportGenerator.java:[line 199]<br/>At ReportGenerator.java:[line 201]<br/>At ReportGenerator.java:[line 206]<br/>At ReportGenerator.java:[line 208]<br/>At ReportGenerator.java:[line 213]<br/>At ReportGenerator.java:[line 215]<br/>At ReportGenerator.java:[line 219]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71327');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71327" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.owasp.dependencycheck.reporting.ReportGenerator<br/>In method org.owasp.dependencycheck.reporting.ReportGenerator.generateReport(String, String)<br/>At ReportGenerator.java:[line 305]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/owasp/dependencycheck/reporting/ReportGenerator.generateReport(Ljava/lang/String;Ljava/lang/String;)V parameter 0<br/>At DependencyCheckScanAgent.java:[line 886]<br/>At DependencyCheckScanAgent.java:[line 952]<br/>At ReportGenerator.java:[line 174]<br/>At ReportGenerator.java:[line 177]<br/>At ReportGenerator.java:[line 180]<br/>At ReportGenerator.java:[line 199]<br/>At ReportGenerator.java:[line 201]<br/>At ReportGenerator.java:[line 206]<br/>At ReportGenerator.java:[line 208]<br/>At ReportGenerator.java:[line 213]<br/>At ReportGenerator.java:[line 215]<br/>At ReportGenerator.java:[line 219]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71516');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71516" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.owasp.dependencycheck.utils.ExtractionUtil<br/>In method org.owasp.dependencycheck.utils.ExtractionUtil.extractArchive(ArchiveInputStream, File, FilenameFilter)<br/>At ExtractionUtil.java:[line 184]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/commons/compress/archivers/ArchiveEntry.getName()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71585');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71585" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.owasp.dependencycheck.utils.ExtractionUtil<br/>In method org.owasp.dependencycheck.utils.ExtractionUtil.extractFile(ArchiveInputStream, File, FilenameFilter, ArchiveEntry)<br/>At ExtractionUtil.java:[line 215]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/apache/commons/compress/archivers/ArchiveEntry.getName()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71654');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71654" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.owasp.dependencycheck.utils.ExtractionUtil<br/>In method org.owasp.dependencycheck.utils.ExtractionUtil.extractFiles(File, File, Engine)<br/>At ExtractionUtil.java:[line 98]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/util/zip/ZipEntry.getName()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71723');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71723" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.owasp.dependencycheck.utils.ExtractionUtil<br/>In method org.owasp.dependencycheck.utils.ExtractionUtil.extractFiles(File, File, Engine)<br/>At ExtractionUtil.java:[line 104]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/util/zip/ZipEntry.getName()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67616');">
<td>
<span class="priority-2">SECRD</span>
</td>
<td>The regular expression "^([a-zA-Z0-9_#\\$\\*\\.]+\\s*[,;]\\s*)+([a-zA-Z0-9_#\\$\\*\\.]+\\s*)?$" is vulnerable to a denial of service attack (ReDOS)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67616" style="display: none;">
<a href="#REDOS">Bug type REDOS (click for details)</a>
<br/>Value ^([a-zA-Z0-9_#\\$\\*\\.]+\\s*[,;]\\s*)+([a-zA-Z0-9_#\\$\\*\\.]+\\s*)?$<br/>In class org.owasp.dependencycheck.analyzer.JarAnalyzer<br/>In method org.owasp.dependencycheck.analyzer.JarAnalyzer.isImportPackage(String, String)<br/>At JarAnalyzer.java:[line 951]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67674');">
<td>
<span class="priority-2">SECRD</span>
</td>
<td>The regular expression "^([a-zA-Z_][a-zA-Z0-9_\\$]*(\\.[a-zA-Z_][a-zA-Z0-9_\\$]*)*)?$" is vulnerable to a denial of service attack (ReDOS)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67674" style="display: none;">
<a href="#REDOS">Bug type REDOS (click for details)</a>
<br/>Value ^([a-zA-Z_][a-zA-Z0-9_\\$]*(\\.[a-zA-Z_][a-zA-Z0-9_\\$]*)*)?$<br/>In class org.owasp.dependencycheck.analyzer.JarAnalyzer<br/>In method org.owasp.dependencycheck.analyzer.JarAnalyzer.isPackage(String, String)<br/>At JarAnalyzer.java:[line 1083]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66853');">
<td>
<span class="priority-2">SECSHA1</span>
</td>
<td>This API SHA1 (SHA-1) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66853" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_SHA1">Bug type WEAK_MESSAGE_DIGEST_SHA1 (click for details)</a>
<br/>In class org.owasp.dependencycheck.analyzer.CMakeAnalyzer<br/>In method org.owasp.dependencycheck.analyzer.CMakeAnalyzer.&lt;static initializer for CMakeAnalyzer&gt;()<br/>At CMakeAnalyzer.java:[line 102]<br/>Value SHA1</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67074');">
<td>
<span class="priority-2">SECSHA1</span>
</td>
<td>This API SHA1 (SHA-1) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67074" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_SHA1">Bug type WEAK_MESSAGE_DIGEST_SHA1 (click for details)</a>
<br/>In class org.owasp.dependencycheck.analyzer.ComposerLockAnalyzer<br/>In method org.owasp.dependencycheck.analyzer.ComposerLockAnalyzer.initializeFileTypeAnalyzer()<br/>At ComposerLockAnalyzer.java:[line 88]<br/>Value SHA1</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69754');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.execute(Ljava/lang/String;)Z can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69754" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.owasp.dependencycheck.data.nvdcve.ConnectionFactory<br/>In method org.owasp.dependencycheck.data.nvdcve.ConnectionFactory.createTables(Connection)<br/>At ConnectionFactory.java:[line 268]<br/>Sink method java/sql/Statement.execute(Ljava/lang/String;)Z<br/>Sink parameter 0<br/>Unknown source org/apache/commons/io/IOUtils.toString(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69823');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Statement.execute(Ljava/lang/String;)Z can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69823" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.owasp.dependencycheck.data.nvdcve.ConnectionFactory<br/>In method org.owasp.dependencycheck.data.nvdcve.ConnectionFactory.updateSchema(Connection, DependencyVersion, DependencyVersion)<br/>At ConnectionFactory.java:[line 319]<br/>Sink method java/sql/Statement.execute(Ljava/lang/String;)Z<br/>Sink parameter 0<br/>Unknown source org/apache/commons/io/IOUtils.toString(Ljava/io/InputStream;Ljava/lang/String;)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66737');">
<td>
<span class="priority-2">SECXXEDOC</span>
</td>
<td>The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66737" style="display: none;">
<a href="#XXE_DOCUMENT">Bug type XXE_DOCUMENT (click for details)</a>
<br/>In class org.owasp.dependencycheck.analyzer.AssemblyAnalyzer<br/>In method org.owasp.dependencycheck.analyzer.AssemblyAnalyzer.analyzeFileType(Dependency, Engine)<br/>At AssemblyAnalyzer.java:[line 131]<br/>Value DocumentBuilder.parse(...)</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66795');">
<td>
<span class="priority-2">SECXXEDOC</span>
</td>
<td>The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66795" style="display: none;">
<a href="#XXE_DOCUMENT">Bug type XXE_DOCUMENT (click for details)</a>
<br/>In class org.owasp.dependencycheck.analyzer.AssemblyAnalyzer<br/>In method org.owasp.dependencycheck.analyzer.AssemblyAnalyzer.initializeFileTypeAnalyzer()<br/>At AssemblyAnalyzer.java:[line 258]<br/>Value DocumentBuilder.parse(...)</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69320');">
<td>
<span class="priority-2">SECXXEDOC</span>
</td>
<td>The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69320" style="display: none;">
<a href="#XXE_DOCUMENT">Bug type XXE_DOCUMENT (click for details)</a>
<br/>In class org.owasp.dependencycheck.data.central.CentralSearch<br/>In method org.owasp.dependencycheck.data.central.CentralSearch.searchSha1(String)<br/>At CentralSearch.java:[line 115]<br/>Value DocumentBuilder.parse(...)</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69432');">
<td>
<span class="priority-2">SECXXEDOC</span>
</td>
<td>The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69432" style="display: none;">
<a href="#XXE_DOCUMENT">Bug type XXE_DOCUMENT (click for details)</a>
<br/>In class org.owasp.dependencycheck.data.nexus.NexusSearch<br/>In method org.owasp.dependencycheck.data.nexus.NexusSearch.preflightRequest()<br/>At NexusSearch.java:[line 173]<br/>Value DocumentBuilder.parse(...)</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69490');">
<td>
<span class="priority-2">SECXXEDOC</span>
</td>
<td>The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69490" style="display: none;">
<a href="#XXE_DOCUMENT">Bug type XXE_DOCUMENT (click for details)</a>
<br/>In class org.owasp.dependencycheck.data.nexus.NexusSearch<br/>In method org.owasp.dependencycheck.data.nexus.NexusSearch.searchSha1(String)<br/>At NexusSearch.java:[line 113]<br/>Value DocumentBuilder.parse(...)</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69548');">
<td>
<span class="priority-2">SECXXEDOC</span>
</td>
<td>The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69548" style="display: none;">
<a href="#XXE_DOCUMENT">Bug type XXE_DOCUMENT (click for details)</a>
<br/>In class org.owasp.dependencycheck.data.nuget.XPathNuspecParser<br/>In method org.owasp.dependencycheck.data.nuget.XPathNuspecParser.parse(InputStream)<br/>At XPathNuspecParser.java:[line 59]<br/>Value DocumentBuilder.parse(...)</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71792');">
<td>
<span class="priority-2">SECXXEREAD</span>
</td>
<td>The use of XMLReader.parse(...) (XMLReader) is vulnerable to XML External Entity attacks</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71792" style="display: none;">
<a href="#XXE_XMLREADER">Bug type XXE_XMLREADER (click for details)</a>
<br/>In class org.owasp.dependencycheck.xml.hints.HintParser<br/>In method org.owasp.dependencycheck.xml.hints.HintParser.parseHints(InputStream)<br/>At HintParser.java:[line 124]<br/>Value XMLReader.parse(...)</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71850');">
<td>
<span class="priority-2">SECXXEREAD</span>
</td>
<td>The use of XMLReader.parse(...) (XMLReader) is vulnerable to XML External Entity attacks</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71850" style="display: none;">
<a href="#XXE_XMLREADER">Bug type XXE_XMLREADER (click for details)</a>
<br/>In class org.owasp.dependencycheck.xml.pom.PomParser<br/>In method org.owasp.dependencycheck.xml.pom.PomParser.parse(InputStream)<br/>At PomParser.java:[line 96]<br/>Value XMLReader.parse(...)</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71908');">
<td>
<span class="priority-2">SECXXEREAD</span>
</td>
<td>The use of XMLReader.parse(...) (XMLReader) is vulnerable to XML External Entity attacks</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71908" style="display: none;">
<a href="#XXE_XMLREADER">Bug type XXE_XMLREADER (click for details)</a>
<br/>In class org.owasp.dependencycheck.xml.suppression.SuppressionParser<br/>In method org.owasp.dependencycheck.xml.suppression.SuppressionParser.parseOldSuppressionRules(InputStream)<br/>At SuppressionParser.java:[line 198]<br/>Value XMLReader.parse(...)</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71966');">
<td>
<span class="priority-2">SECXXEREAD</span>
</td>
<td>The use of XMLReader.parse(...) (XMLReader) is vulnerable to XML External Entity attacks</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71966" style="display: none;">
<a href="#XXE_XMLREADER">Bug type XXE_XMLREADER (click for details)</a>
<br/>In class org.owasp.dependencycheck.xml.suppression.SuppressionParser<br/>In method org.owasp.dependencycheck.xml.suppression.SuppressionParser.parseSuppressionRules(InputStream)<br/>At SuppressionParser.java:[line 142]<br/>Value XMLReader.parse(...)</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70208');">
<td>
<span class="priority-2">SECXXESAX</span>
</td>
<td>The use of SAXParser.parse(...) (SAXParser) is vulnerable to XML External Entity attacks</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70208" style="display: none;">
<a href="#XXE_SAXPARSER">Bug type XXE_SAXPARSER (click for details)</a>
<br/>In class org.owasp.dependencycheck.data.update.CpeUpdater<br/>In method org.owasp.dependencycheck.data.update.CpeUpdater.processXML(File)<br/>At CpeUpdater.java:[line 122]<br/>Value SAXParser.parse(...)</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70562');">
<td>
<span class="priority-2">SECXXESAX</span>
</td>
<td>The use of SAXParser.parse(...) (SAXParser) is vulnerable to XML External Entity attacks</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70562" style="display: none;">
<a href="#XXE_SAXPARSER">Bug type XXE_SAXPARSER (click for details)</a>
<br/>In class org.owasp.dependencycheck.data.update.nvd.ProcessTask<br/>In method org.owasp.dependencycheck.data.update.nvd.ProcessTask.importXML(File, File)<br/>At ProcessTask.java:[line 144]<br/>Value SAXParser.parse(...)</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70620');">
<td>
<span class="priority-2">SECXXESAX</span>
</td>
<td>The use of SAXParser.parse(...) (SAXParser) is vulnerable to XML External Entity attacks</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70620" style="display: none;">
<a href="#XXE_SAXPARSER">Bug type XXE_SAXPARSER (click for details)</a>
<br/>In class org.owasp.dependencycheck.data.update.nvd.ProcessTask<br/>In method org.owasp.dependencycheck.data.update.nvd.ProcessTask.importXML(File, File)<br/>At ProcessTask.java:[line 150]<br/>Value SAXParser.parse(...)</p>
</td>
</tr>
</table>
<h1>
<a name="Details">Details</a>
</h1>
<h2>
<a name="INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE: Information Exposure Through An Error Message</a>
</h2>
            
<p>
The sensitive information may be valuable information on its own (such as a password), or it may be useful for launching other, more deadly attacks. If an attack fails, an attacker may use error information provided by the server to launch another more focused attack. For example, an attempt to exploit a path traversal weakness (CWE-22) might yield the full pathname of the installed application. In turn, this could be used to select the proper number of ".." sequences to navigate to the targeted file. An attack using SQL injection (CWE-89) might not initially succeed, but an error message could reveal the malformed query, which would expose query logic and possibly even passwords or other sensitive information used within the query.
</p>
<p>
    <b>Vulnerable Code:</b><br/>
<pre>try {
  out = httpResponse.getOutputStream()
} catch (Exception e) {
  e.printStackTrace(out);
}</pre>
</p>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/209.html">CWE-209: Information Exposure Through an Error Message</a><br/>
<a href="https://cwe.mitre.org/data/definitions/211.html">CWE-211: Information Exposure Through Externally-Generated Error Message</a><br/>
</p>
            
        
<h2>
<a name="COMMAND_INJECTION">COMMAND_INJECTION: Potential Command Injection</a>
</h2>
            
<p>The highlighted API is used to execute a system command. If unfiltered input is passed to this API, it can lead to arbitrary command execution.</p>
<br/>
<p>
    <b>Vulnerable Code:</b><br/>
<pre>import java.lang.Runtime;

Runtime r = Runtime.getRuntime();
r.exec("/bin/sh -c some_tool" + input);</pre>
</p>
<p>
<b>References</b><br/>
<a href="https://www.owasp.org/index.php/Command_Injection">OWASP: Command Injection</a><br/>
<a href="https://www.owasp.org/index.php/Top_10_2013-A1-Injection">OWASP: Top 10 2013-A1-Injection</a><br/>
<a href="https://cwe.mitre.org/data/definitions/78.html">CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')</a>
</p>

        
<h2>
<a name="CRLF_INJECTION_LOGS">CRLF_INJECTION_LOGS: Potential CRLF Injection for logs</a>
</h2>
            
<p>
    When data from an untrusted source is put into a logger and not neutralized correctly,
    an attacker could forge log entries or include malicious content.
    Inserted false entries could be used to skew statistics, distract the administrator
    or even to implicate another party in the commission of a malicious act.
    If the log file is processed automatically, the attacker can render the file unusable
    by corrupting the format of the file or injecting unexpected characters.
    An attacker may also inject code or other commands into the log file and take advantage
    of a vulnerability in the log processing utility (e.g. command injection or XSS).
</p>
<br/>
<p>
<b>Code at risk:</b><br/>
<pre>String val = request.getParameter("user");
String metadata = request.getParameter("metadata");
[...]
if(authenticated) {
    log.info("User " + val + " (" + metadata + ") was authenticated successfully");
}
else {
    log.info("User " + val + " (" + metadata + ") was not authenticated");
}
</pre>

A malicious user could send the metadata parameter with the value: <code>"Firefox) was authenticated successfully\r\n[INFO] User bbb (Internet Explorer"</code>.
</p>

<b>Solution:</b><br/>
<p>
You can manually sanitize each parameter.
<pre>
log.info("User " + val.replaceAll("[\r\n]","") + " (" + userAgent.replaceAll("[\r\n]","") + ") was not authenticated");
</pre>
</p>

<p>
You can also configure your logger service to replace new line for all message events. Here is sample configuration for LogBack <a href="https://logback.qos.ch/manual/layouts.html#replace">using the <code>replace</code> function</a>.
<pre>
&lt;pattern&gt;%-5level - %replace(%msg){'[\r\n]', ''}%n&lt;/pattern&gt;
</pre>
</p>

<p>
Finally, you can use a logger implementation that replace new line by spaces.
The project <a href="https://github.com/javabeanz/owasp-security-logging">OWASP Security Logging</a> has an implementation for Logback and Log4j.
</p>

<br/>
<p>
    <b>References</b><br/>
    <a href="https://cwe.mitre.org/data/definitions/117.html">CWE-117: Improper Output Neutralization for Logs</a><br/>
    <a href="https://cwe.mitre.org/data/definitions/93.html">CWE-93: Improper Neutralization of CRLF Sequences ('CRLF Injection')</a><br/>
    <a href="https://logback.qos.ch/manual/layouts.html#replace">CWE-93: Improper Neutralization of CRLF Sequences ('CRLF Injection')</a><br/>
    <a href="https://github.com/javabeanz/owasp-security-logging">OWASP Security Logging</a><br/>
</p>


        
<h2>
<a name="OBJECT_DESERIALIZATION">OBJECT_DESERIALIZATION: Object deserialization is used in {1}</a>
</h2>
            
<p>
    Object deserialization of untrusted data can lead to remote code execution, if there is a class in classpath that allows
    the trigger of malicious operation.
</p>
<p>
    Libraries developers tend to fix class that provided potential malicious trigger. There are still classes that are
    known to trigger Denial of Service<sup>[1]</sup>.
</p>
<p>
    Deserialization is a sensible operation that has a great history of vulnerabilities. The web application might
    become vulnerable as soon as a new vulnerability is found in the Java Virtual Machine<sup>[2] [3]</sup>.
</p>

<p>
<b>Code at risk:</b><br/>
<pre>
public UserData deserializeObject(InputStream receivedFile) throws IOException, ClassNotFoundException {

    try (ObjectInputStream in = new ObjectInputStream(receivedFile)) {
        return (UserData) in.readObject();
    }
}
</pre>
</p>

<p>
<b>Solutions:</b><br/>
<p>
Avoid deserializing object provided by remote users.
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/502.html">CWE-502: Deserialization of Untrusted Data</a><br/>
<a href="https://www.owasp.org/index.php/Deserialization_of_untrusted_data">Deserialization of untrusted data</a><br/>
<a href="https://www.oracle.com/technetwork/java/seccodeguide-139067.html#8">Serialization and Deserialization </a><br/>
<a href="https://github.com/frohoff/ysoserial">A tool for generating payloads that exploit unsafe Java object deserialization</a><br/>
[1] <a href="https://gist.github.com/coekie/a27cc406fc9f3dc7a70d">Example of Denial of Service using the class <code>java.util.HashSet</code></a><br/>
[2] <a href="https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2015-2590">OpenJDK: Deserialization issue in ObjectInputStream.readSerialData() (CVE-2015-2590)</a><br/>
[3] <a href="https://www.rapid7.com/db/modules/exploit/multi/browser/java_calendar_deserialize">Rapid7: Sun Java Calendar Deserialization Privilege Escalation (CVE-2008-5353)</a>
</p>

        
<h2>
<a name="PATH_TRAVERSAL_IN">PATH_TRAVERSAL_IN: Potential Path Traversal (file read)</a>
</h2>
            
<p>A file is opened to read its content. The filename comes from an <b>input</b> parameter.
If an unfiltered parameter is passed to this file API, files from an arbitrary filesystem location could be read.</p>
<p>This rule identifies <b>potential</b> path traversal vulnerabilities. In many cases, the constructed file path cannot be controlled
by the user. If that is the case, the reported instance is a false positive.</p>
<br/>

<p>
    <b>Vulnerable Code:</b><br/>
<pre>@GET
@Path("/images/{image}")
@Produces("images/*")
public Response getImage(@javax.ws.rs.PathParam("image") String image) {
    File file = new File("resources/images/", image); //Weak point

    if (!file.exists()) {
        return Response.status(Status.NOT_FOUND).build();
    }

    return Response.ok().entity(new FileInputStream(file)).build();
}</pre>
</p>
<br/>

<p>
    <b>Solution:</b><br/>
<pre>import org.apache.commons.io.FilenameUtils;

@GET
@Path("/images/{image}")
@Produces("images/*")
public Response getImage(@javax.ws.rs.PathParam("image") String image) {
    File file = new File("resources/images/", FilenameUtils.getName(image)); //Fix

    if (!file.exists()) {
        return Response.status(Status.NOT_FOUND).build();
    }

    return Response.ok().entity(new FileInputStream(file)).build();
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="http://projects.webappsec.org/w/page/13246952/Path%20Traversal">WASC: Path Traversal</a><br/>
<a href="https://www.owasp.org/index.php/Path_Traversal">OWASP: Path Traversal</a><br/>
<a href="https://capec.mitre.org/data/definitions/126.html">CAPEC-126: Path Traversal</a><br/>
<a href="https://cwe.mitre.org/data/definitions/22.html">CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')</a>
</p>

        
<h2>
<a name="REDOS">REDOS: Regex DOS (ReDOS)</a>
</h2>
            
<p>
    Regular expressions (Regex) are frequently subject to Denial of Service (DOS) attacks (called ReDOS). This is due to the fact that regex engines
    may take a large amount of time when analyzing certain strings, depending on how the regex is defined.
<p>
    For example, for the regex: <code>^(a+)+$</code>, the input "<code>aaaaaaaaaaaaaaaaX</code>" will cause the regex engine to analyze 65536
different paths.<sup>[1] Example taken from OWASP references</sup></p>
<p>
Therefore, it is possible that a single request may cause a large amount of computation on the server side.
The problem with this regex, and others like it, is that there are two different ways the same input character can be accepted by the
Regex due to the <code>+</code> (or a <code>*</code>) inside the parenthesis, and the <code>+</code> (or a <code>*</code>) outside the parenthesis. The way this is written, either <code>+</code> could
consume the character 'a'. To fix this, the regex should be rewritten to eliminate the ambiguity. For example, this could simply be
rewritten as: <code>^a+$</code>, which is presumably what the author meant anyway (any number of a's). Assuming that's what the original
regex meant, this new regex can be evaluated quickly, and is not subject to ReDOS.
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://sebastiankuebeck.wordpress.com/2011/03/01/detecting-and-preventing-redos-vulnerabilities/">Sebastian Kubeck's Weblog: Detecting and Preventing ReDoS Vulnerabilities</a><br/>
<sup>[1]</sup> <a href="https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS">OWASP: Regular expression Denial of Service</a><br/>
<a href="https://cwe.mitre.org/data/definitions/400.html">CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion')</a>
</p>

        
<h2>
<a name="WEAK_MESSAGE_DIGEST_SHA1">WEAK_MESSAGE_DIGEST_SHA1: SHA-1 is a weak hash function</a>
</h2>
            
<p>The algorithms SHA-1 is not a recommended algorithm for hash password, for signature verification and other
uses. <b>PBKDF2</b> should be used to hash password for example.</p>

<blockquote>
    "<b>SHA-1 for digital signature generation:</b><br/>
    SHA-1 may only be used for digital signature generation where specifically allowed by NIST protocol-specific guidance.
    For all other applications, <u>SHA-1 shall not be used for digital signature generation</u>.<br/>
    <b>SHA-1 for digital signature verification:</b><br/>
    For digital signature verification, <u>SHA-1 is allowed for legacy-use</u>.<br/>
    [...]<br/>
    <b>SHA-224, SHA-256, SHA-384, SHA-512, SHA-512/224, and SHA-512/256</b>:<br/>
    The use of these hash functions is acceptable for all hash function applications."<br/>
    - <a href="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-131Ar2.pdf">NIST: Transitioning the Use of Cryptographic Algorithms and Key Lengths p.15</a>
</blockquote>
<blockquote>
    "The main idea of a PBKDF is to slow dictionary or brute force attacks on the passwords by increasing the time
    needed to test each password. An attacker with a list of likely passwords can evaluate the PBKDF using the known
    iteration counter and the salt. Since an attacker has to spend a significant amount of computing time for each try,
    it becomes harder to apply the dictionary or brute force attacks."<br/>
- <a href="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-132.pdf">NIST: Recommendation for Password-Based Key Derivation  p.12</a>

</blockquote>
<br/>
<p>
    <b>Vulnerable Code:</b><br/>
    <pre>MessageDigest sha1Digest = MessageDigest.getInstance("SHA1");
    sha1Digest.update(password.getBytes());
    byte[] hashValue = sha1Digest.digest();</pre>
    <br/>
    <pre>byte[] hashValue = DigestUtils.getSha1Digest().digest(password.getBytes());</pre>
</p>
<br/>
<p>
    <b>Solution (Using bouncy castle):</b><br/>
    <pre>public static byte[] getEncryptedPassword(String password, byte[] salt) throws NoSuchAlgorithmException, InvalidKeySpecException {
    PKCS5S2ParametersGenerator gen = new PKCS5S2ParametersGenerator(new SHA256Digest());
    gen.init(password.getBytes("UTF-8"), salt.getBytes(), 4096);
    return ((KeyParameter) gen.generateDerivedParameters(256)).getKey();
}</pre>
    <br/>
    <b>Solution (Java 8 and later):</b><br/>
    <pre>public static byte[] getEncryptedPassword(String password, byte[] salt) throws NoSuchAlgorithmException, InvalidKeySpecException {
    KeySpec spec = new PBEKeySpec(password.toCharArray(), salt, 4096, 256 * 8);
    SecretKeyFactory f = SecretKeyFactory.getInstance("PBKDF2WithHmacSHA256");
    return f.generateSecret(spec).getEncoded();
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://community.qualys.com/blogs/securitylabs/2014/09/09/sha1-deprecation-what-you-need-to-know">Qualys blog: SHA1 Deprecation: What You Need to Know</a><br/>
<a href="https://googleonlinesecurity.blogspot.ca/2014/09/gradually-sunsetting-sha-1.html">Google Online Security Blog: Gradually sunsetting SHA-1</a><br/>
<a href="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-131Ar2.pdf">NIST: Transitioning the Use of Cryptographic Algorithms and Key Lengths</a><br/>
<a href="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-132.pdf">NIST: Recommendation for Password-Based Key Derivation</a><br/>
<a href="https://stackoverflow.com/q/22580853/89769">Stackoverflow: Reliable implementation of PBKDF2-HMAC-SHA256 for Java</a><br/>
<a href="https://cwe.mitre.org/data/definitions/327.html">CWE-327: Use of a Broken or Risky Cryptographic Algorithm</a>
</p>

        
<h2>
<a name="SQL_INJECTION_JDBC">SQL_INJECTION_JDBC: Potential JDBC Injection</a>
</h2>
            
<p>
The input values included in SQL queries need to be passed in safely.
Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection.
</p>

<p>
    <b>Vulnerable Code:</b><br/>
    <pre>Connection conn = [...];
Statement stmt = con.createStatement();
ResultSet rs = stmt.executeQuery("update COFFEES set SALES = "+nbSales+" where COF_NAME = '"+coffeeName+"'");</pre>
</p>
<p>
    <b>Solution:</b><br/>
    <pre>Connection conn = [...];
conn.prepareStatement("update COFFEES set SALES = ? where COF_NAME = ?");
updateSales.setInt(1, nbSales);
updateSales.setString(2, coffeeName);</pre>
</p>
<br/>

<b>References (JDBC)</b><br/>
<a href="https://docs.oracle.com/javase/tutorial/jdbc/basics/prepared.html">Oracle Documentation: The Java Tutorials &gt; Prepared Statements</a><br/>
<b>References (SQL injection)</b><br/>
<a href="http://projects.webappsec.org/w/page/13246963/SQL%20Injection">WASC-19: SQL Injection</a><br/>
<a href="https://capec.mitre.org/data/definitions/66.html">CAPEC-66: SQL Injection</a><br/>
<a href="https://cwe.mitre.org/data/definitions/89.html">CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')</a><br/>
<a href="https://www.owasp.org/index.php/Top_10_2013-A1-Injection">OWASP: Top 10 2013-A1-Injection</a><br/>
<a href="https://www.owasp.org/index.php/SQL_Injection_Prevention_Cheat_Sheet">OWASP: SQL Injection Prevention Cheat Sheet</a><br/>
<a href="https://www.owasp.org/index.php/Query_Parameterization_Cheat_Sheet">OWASP: Query Parameterization Cheat Sheet</a><br/>
</p>

        
<h2>
<a name="XXE_DOCUMENT">XXE_DOCUMENT: XML parsing vulnerable to XXE (DocumentBuilder)</a>
</h2>
            
<!--XXE_GENERIC_START-->
<h3>Attack</h3>
<p>XML External Entity (XXE) attacks can occur when an XML parser supports XML entities while processing XML received
from an untrusted source.</p>
<p><b>Risk 1: Expose local file content (XXE: <u>X</u>ML E<u>x</u>ternal <u>E</u>ntity)</b></p>
<p>
<pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;
&lt;!DOCTYPE foo [
   &lt;!ENTITY xxe SYSTEM &quot;file:///etc/passwd&quot; &gt; ]&gt;
&lt;foo&gt;&amp;xxe;&lt;/foo&gt;</pre>
</p>
<b>Risk 2: Denial of service (XEE: <u>X</u>ML <u>E</u>ntity <u>E</u>xpansion)</b>
<p>
<pre>
&lt;?xml version=&quot;1.0&quot;?&gt;
&lt;!DOCTYPE lolz [
 &lt;!ENTITY lol &quot;lol&quot;&gt;
 &lt;!ELEMENT lolz (#PCDATA)&gt;
 &lt;!ENTITY lol1 &quot;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&quot;&gt;
 &lt;!ENTITY lol2 &quot;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&quot;&gt;
 &lt;!ENTITY lol3 &quot;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&quot;&gt;
[...]
 &lt;!ENTITY lol9 &quot;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&quot;&gt;
]&gt;
&lt;lolz&gt;&amp;lol9;&lt;/lolz&gt;</pre>
</p>

<h3>Solution</h3>
<p>
In order to avoid exposing dangerous feature of the XML parser, you can do the following change to the code.
</p>
<!--XXE_GENERIC_END-->

<p><b>Vulnerable Code:</b></p>
<p>
<pre>
DocumentBuilder db = DocumentBuilderFactory.newInstance().newDocumentBuilder();

Document doc = db.parse(input);</pre>
</p>
<br/>
<p>
The following snippets show two available solutions. You can set one feature or both.
</p>

<p><b>Solution using "Secure processing" mode:</b></p>
<p>
This setting will protect you against Denial of Service attack and remote file access.
<pre>
DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
DocumentBuilder db = dbf.newDocumentBuilder();

Document doc = db.parse(input);</pre>
</p>

<p><b>Solution disabling DTD:</b></p>
<p>
By disabling DTD, almost all XXE attacks will be prevented.
<pre>
DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true);
DocumentBuilder db = dbf.newDocumentBuilder();

Document doc = db.parse(input);</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<!--XXE_GENERIC_START-->
<a href="https://cwe.mitre.org/data/definitions/611.html">CWE-611: Improper Restriction of XML External Entity Reference ('XXE')</a><br/>
<a href="https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=61702260">CERT: IDS10-J. Prevent XML external entity attacks</a><br/>
<a href="https://www.owasp.org/index.php/XML_External_Entity_%28XXE%29_Processing">OWASP.org: XML External Entity (XXE) Processing</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_Entity_Expansion">WS-Attacks.org: XML Entity Expansion</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_External_Entity_DOS">WS-Attacks.org: XML External Entity DOS</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_Entity_Reference_Attack">WS-Attacks.org: XML Entity Reference Attack</a><br/>
<a href="https://blog.h3xstream.com/2014/06/identifx-xml-external-entity.html">Identifx XML External Entity vulnerability (XXE)</a><br/>
<!--XXE_GENERIC_END-->
<a href="http://xerces.apache.org/xerces2-j/features.html">Xerces2 complete features list</a>
</p>

        
<h2>
<a name="XXE_XMLREADER">XXE_XMLREADER: XML parsing vulnerable to XXE (XMLReader)</a>
</h2>
            
<!--XXE_GENERIC_START-->
<h3>Attack</h3>
<p>XML External Entity (XXE) attacks can occur when an XML parser supports XML entities while processing XML received
from an untrusted source.</p>
<p><b>Risk 1: Expose local file content (XXE: <u>X</u>ML E<u>x</u>ternal <u>E</u>ntity)</b></p>
<p>
<pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;
&lt;!DOCTYPE foo [
   &lt;!ENTITY xxe SYSTEM &quot;file:///etc/passwd&quot; &gt; ]&gt;
&lt;foo&gt;&amp;xxe;&lt;/foo&gt;</pre>
</p>
<b>Risk 2: Denial of service (XEE: <u>X</u>ML <u>E</u>ntity <u>E</u>xpansion)</b>
<p>
<pre>
&lt;?xml version=&quot;1.0&quot;?&gt;
&lt;!DOCTYPE lolz [
 &lt;!ENTITY lol &quot;lol&quot;&gt;
 &lt;!ELEMENT lolz (#PCDATA)&gt;
 &lt;!ENTITY lol1 &quot;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&quot;&gt;
 &lt;!ENTITY lol2 &quot;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&quot;&gt;
 &lt;!ENTITY lol3 &quot;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&quot;&gt;
[...]
 &lt;!ENTITY lol9 &quot;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&quot;&gt;
]&gt;
&lt;lolz&gt;&amp;lol9;&lt;/lolz&gt;</pre>
</p>

<h3>Solution</h3>
<p>
In order to avoid exposing dangerous feature of the XML parser, you can do the following change to the code.
</p>
<!--XXE_GENERIC_END-->

<p><b>Vulnerable Code:</b></p>
<p>
<pre>
XMLReader reader = XMLReaderFactory.createXMLReader();
reader.setContentHandler(customHandler);
reader.parse(new InputSource(inputStream));</pre>
</p>
<br/>
<p>
The following snippets show two available solutions. You can set one property or both.
</p>

<p><b>Solution using "Secure processing" mode:</b></p>
<p>
This setting will protect you against Denial of Service attack and remote file access.
<pre>
XMLReader reader = XMLReaderFactory.createXMLReader();
reader.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
reader.setContentHandler(customHandler);

reader.parse(new InputSource(inputStream));</pre>
</p>

<p><b>Solution disabling DTD:</b></p>
<p>
By disabling DTD, almost all XXE attacks will be prevented.
<pre>
XMLReader reader = XMLReaderFactory.createXMLReader();
reader.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true);
reader.setContentHandler(customHandler);

reader.parse(new InputSource(inputStream));</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<!--XXE_GENERIC_START-->
<a href="https://cwe.mitre.org/data/definitions/611.html">CWE-611: Improper Restriction of XML External Entity Reference ('XXE')</a><br/>
<a href="https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=61702260">CERT: IDS10-J. Prevent XML external entity attacks</a><br/>
<a href="https://www.owasp.org/index.php/XML_External_Entity_%28XXE%29_Processing">OWASP.org: XML External Entity (XXE) Processing</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_Entity_Expansion">WS-Attacks.org: XML Entity Expansion</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_External_Entity_DOS">WS-Attacks.org: XML External Entity DOS</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_Entity_Reference_Attack">WS-Attacks.org: XML Entity Reference Attack</a><br/>
<a href="https://blog.h3xstream.com/2014/06/identifx-xml-external-entity.html">Identifx XML External Entity vulnerability (XXE)</a><br/>
<!--XXE_GENERIC_END-->
<a href="https://xerces.apache.org/xerces-j/features.html">Xerces complete features list</a>
</p>

        
<h2>
<a name="XXE_SAXPARSER">XXE_SAXPARSER: XML parsing vulnerable to XXE (SAXParser)</a>
</h2>
            
<!--XXE_GENERIC_START-->
<h3>Attack</h3>
<p>XML External Entity (XXE) attacks can occur when an XML parser supports XML entities while processing XML received
from an untrusted source.</p>
<p><b>Risk 1: Expose local file content (XXE: <u>X</u>ML E<u>x</u>ternal <u>E</u>ntity)</b></p>
<p>
<pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;
&lt;!DOCTYPE foo [
   &lt;!ENTITY xxe SYSTEM &quot;file:///etc/passwd&quot; &gt; ]&gt;
&lt;foo&gt;&amp;xxe;&lt;/foo&gt;</pre>
</p>
<b>Risk 2: Denial of service (XEE: <u>X</u>ML <u>E</u>ntity <u>E</u>xpansion)</b>
<p>
<pre>
&lt;?xml version=&quot;1.0&quot;?&gt;
&lt;!DOCTYPE lolz [
 &lt;!ENTITY lol &quot;lol&quot;&gt;
 &lt;!ELEMENT lolz (#PCDATA)&gt;
 &lt;!ENTITY lol1 &quot;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&quot;&gt;
 &lt;!ENTITY lol2 &quot;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&quot;&gt;
 &lt;!ENTITY lol3 &quot;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&quot;&gt;
[...]
 &lt;!ENTITY lol9 &quot;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&quot;&gt;
]&gt;
&lt;lolz&gt;&amp;lol9;&lt;/lolz&gt;</pre>
</p>

<h3>Solution</h3>
<p>
In order to avoid exposing dangerous feature of the XML parser, you can do the following change to the code.
</p>
<!--XXE_GENERIC_END-->

<p><b>Vulnerable Code:</b></p>
<p>
<pre>
SAXParser parser = SAXParserFactory.newInstance().newSAXParser();

parser.parse(inputStream, customHandler);</pre>
</p>
<br/>
<p>
The following snippets show two available solutions. You can set one feature or both.
</p>

<p><b>Solution using "Secure processing" mode:</b></p>
<p>
This setting will protect you against Denial of Service attack and remote file access.
<pre>
SAXParserFactory spf = SAXParserFactory.newInstance();
spf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
SAXParser parser = spf.newSAXParser();

parser.parse(inputStream, customHandler);</pre>
</p>

<p><b>Solution disabling DTD:</b></p>
<p>
By disabling DTD, almost all XXE attacks will be prevented.
<pre>
SAXParserFactory spf = SAXParserFactory.newInstance();
spf.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true);
SAXParser parser = spf.newSAXParser();

parser.parse(inputStream, customHandler);</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<!--XXE_GENERIC_START-->
<a href="https://cwe.mitre.org/data/definitions/611.html">CWE-611: Improper Restriction of XML External Entity Reference ('XXE')</a><br/>
<a href="https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=61702260">CERT: IDS10-J. Prevent XML external entity attacks</a><br/>
<a href="https://www.owasp.org/index.php/XML_External_Entity_%28XXE%29_Processing">OWASP.org: XML External Entity (XXE) Processing</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_Entity_Expansion">WS-Attacks.org: XML Entity Expansion</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_External_Entity_DOS">WS-Attacks.org: XML External Entity DOS</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_Entity_Reference_Attack">WS-Attacks.org: XML Entity Reference Attack</a><br/>
<a href="https://blog.h3xstream.com/2014/06/identifx-xml-external-entity.html">Identifx XML External Entity vulnerability (XXE)</a><br/>
<!--XXE_GENERIC_END-->
<a href="https://xerces.apache.org/xerces-j/features.html">Xerces complete features list</a>
</p>

        </body>
</html>
