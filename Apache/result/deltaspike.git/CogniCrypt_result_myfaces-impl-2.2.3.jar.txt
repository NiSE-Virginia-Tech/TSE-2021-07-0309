[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 940.8 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 22 analysis seeds within 2 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.04

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.09

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 24
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.13

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 24
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.17

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 24
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.21

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 24
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.25

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 25
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.28

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 25
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.32

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 25
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.36

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 27
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.37

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 28
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.39

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 28
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.43

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.43

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 14 of 31
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.45

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 15 of 32
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.47

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 16 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.48

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 17 of 34
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 18 of 35
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.51

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 19 of 36
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.53

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 20 of 37
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.54

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 21 of 38
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.55

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 22 of 38
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.58

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 23 of 38
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.61

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 24 of 38
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.63

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 25 of 38
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.66

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 26 of 38
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.68

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 27 of 38
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.71

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 28 of 38
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.74

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 29 of 38
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.76

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 30 of 38
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.79

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 31 of 38
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.82

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 32 of 38
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.84

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 33 of 38
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.87

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 34 of 38
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.89

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 35 of 38
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.92

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 36 of 38
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.95

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 37 of 38
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.97

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r5
		Type: byte[]
		Statement: virtualinvoke r3.<java.security.SecureRandom: void nextBytes(byte[])>(r5)
		Method: <org.apache.myfaces.lifecycle.TokenGenerator: long _getSeed()>
		SHA-256: e47314d21a126ea2ef23e60c14575c3a94bc6fb0a2024ccca08ff36092bc2581
		Secure: true
	Object:
		Variable: r20
		Type: java.lang.String
		Statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r14, r20)
		Method: <org.apache.myfaces.shared.util.StateUtils: void initSecret(javax.servlet.ServletContext)>
		SHA-256: 1a3f2cd9a1b59358a62bbae8404352cf5a2f339744c324c066a0c4a5d3d4a7d0
		Secure: false
	Object:
		Variable: r1
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, r1)
		Method: <org.apache.myfaces.shared.util.StateUtils: javax.crypto.SecretKey getMacSecret(javax.faces.context.ExternalContext)>
		SHA-256: cde20eb7604fbcbe0b5bd46f8c2931bbd0cdc69d83ae8f3068c14ea7358a497
		Secure: false
	Object:
		Variable: r1
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, r1)
		Method: <org.apache.myfaces.shared.util.StateUtils: void initSecret(javax.servlet.ServletContext)>
		SHA-256: fa453591e1084f4d113a5694d1269375d1c8fea1006a08a9acbca3172b32a1e
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, r1)
		Method: <org.apache.myfaces.shared.util.StateUtils: void initSecret(javax.servlet.ServletContext)>
		SHA-256: a0ed532c3508ad73eb4f868de509e6184ee42c17574dfa6effa8a5eb7a3e50b6
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, r1)
		Method: <org.apache.myfaces.shared.util.StateUtils: javax.crypto.SecretKey getMacSecret(javax.faces.context.ExternalContext)>
		SHA-256: d320753966a748cda059cc44fa9b609ec6475638d8e52319df5bb140f33743c5
		Secure: false
	Object:
		Variable: $r17
		Type: byte[]
		Statement: $r17 = virtualinvoke r8.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>(r0, varReplacer10963, $i3)
		Method: <org.apache.myfaces.shared.util.StateUtils: byte[] decrypt(byte[],javax.faces.context.ExternalContext)>
		SHA-256: 6465211b9c60b009457a9dd47c37804abee2d6171fd96fc28e1c1f62310e0b9d
		Secure: false
	Object:
		Variable: r52
		Type: java.security.SecureRandom
		Statement: r52 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer8801)
		Method: <org.apache.myfaces.application.viewstate.SessionIdGenerator: java.security.SecureRandom createSecureRandom()>
		SHA-256: f65e693901df2a3f8ef576592a281f7022ac559c799e88a781bb9cbac4cb7028
		Secure: true
	Object:
		Variable: r1
		Type: byte[]
		Statement: virtualinvoke r5.<java.security.SecureRandom: void nextBytes(byte[])>(r1)
		Method: <org.apache.myfaces.application.viewstate.SessionIdGenerator: void getRandomBytes(byte[])>
		SHA-256: e00d12ff779d34bdeaeeed8d8f89fba4b684a5b29eccb4e2a62314091a39929d
		Secure: true
	Object:
		Variable: $r14
		Type: java.security.SecureRandom
		Statement: specialinvoke $r14.<java.security.SecureRandom: void <init>()>()
		Method: <org.apache.myfaces.application.viewstate.SessionIdGenerator: java.security.SecureRandom createSecureRandom()>
		SHA-256: 6dd497f02425f976556b570b2cca6b1e4425f15c304a680cffac26b284069081
		Secure: true
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r17 = virtualinvoke r8.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>(r0, varReplacer10963, $i3)
		Method: <org.apache.myfaces.shared.util.StateUtils: byte[] decrypt(byte[],javax.faces.context.ExternalContext)>
		SHA-256: 3c25fa7b51789b107857d3b0336b551a6e6b484777641507e9ad106144117bd
		Secure: false
	Object:
		Variable: r9
		Type: byte[]
		Statement: i0 = virtualinvoke r8.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[])>(r0, varReplacer10950, $i4, r9)
		Method: <org.apache.myfaces.shared.util.StateUtils: byte[] encrypt(byte[],javax.faces.context.ExternalContext)>
		SHA-256: e63a654d92b3a42d56e41dee2aaef82110d6457d122b2a5f58759d31426615ea
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, r1)
		Method: <org.apache.myfaces.shared.util.StateUtils: javax.crypto.SecretKey getSecret(javax.faces.context.ExternalContext)>
		SHA-256: 54504f7bb296e71e0b3c18d98e4ddb39177da5811761ec31937ce3cbe48bdde1
		Secure: false
	Object:
		Variable: r1
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, r1)
		Method: <org.apache.myfaces.shared.util.StateUtils: javax.crypto.SecretKey getSecret(javax.faces.context.ExternalContext)>
		SHA-256: c733c9f8eca578287d533b91ca7ec4a85429b20f0b628e5deab400f8c582d695
		Secure: false
	Object:
		Variable: r3
		Type: java.security.SecureRandom
		Statement: r3 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer3324)
		Method: <org.apache.myfaces.view.impl.DefaultViewScopeHandler: long _getSeed()>
		SHA-256: f512771d6bb01d2bcebf2aa82b1e19f0b2361c87a73f542ee125b46acb46fcdd
		Secure: true
	Object:
		Variable: r5
		Type: byte[]
		Statement: virtualinvoke r3.<java.security.SecureRandom: void nextBytes(byte[])>(r5)
		Method: <org.apache.myfaces.view.impl.DefaultViewScopeHandler: long _getSeed()>
		SHA-256: b703c09ce1b59abdd2f1821900106f2f0de4477c301b8cbe0d3adf55c26ee467
		Secure: true
	Object:
		Variable: r30
		Type: javax.crypto.Mac
		Statement: r30 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(r7)
		Method: <org.apache.myfaces.shared.util.StateUtils: byte[] decrypt(byte[],javax.faces.context.ExternalContext)>
		SHA-256: 1952bf66cb0389a1215820c9107420a92c3daba9347a8f6f3d6d49dc884d677c
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.apache.myfaces.shared.context.flash.FlashImpl: long _getSeed()>
		SHA-256: e18ae1c944eeddfeaca8ebfb2810b6f673dce885be89df5ab2f6b8c2c457dd7
		Secure: true
	Object:
		Variable: r5
		Type: byte[]
		Statement: virtualinvoke r3.<java.security.SecureRandom: void nextBytes(byte[])>(r5)
		Method: <org.apache.myfaces.shared.context.flash.FlashImpl: long _getSeed()>
		SHA-256: 35ff5d89d42525490a92ec5dd632fa6a0edfa1ac526c87bc3334300ff10cd8d5
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.apache.myfaces.lifecycle.TokenGenerator: long _getSeed()>
		SHA-256: 162442bb9f345ac2a2865682c61010fd53c08ea220f7f6c1afd264d239e3049c
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKey
		Statement: $r4 = virtualinvoke r21.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.apache.myfaces.shared.util.StateUtils: byte[] findMacSecret(java.lang.String,java.lang.String)>
		SHA-256: c995f9a041663953c617e2d9b6b610de4a35da4c39fecf0fd2dad8aa17ecc2c7
		Secure: false
	Object:
		Variable: r8
		Type: javax.crypto.Cipher
		Statement: r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r14)
		Method: <org.apache.myfaces.shared.util.StateUtils: byte[] decrypt(byte[],javax.faces.context.ExternalContext)>
		SHA-256: a6f886616c99ad2f1e38443743b129915d5e1904661f06e068e0f7fdce823d8d
		Secure: false
	Object:
		Variable: r21
		Type: javax.crypto.KeyGenerator
		Statement: r21 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(r1)
		Method: <org.apache.myfaces.shared.util.StateUtils: byte[] findSecret(java.lang.String,java.lang.String)>
		SHA-256: 4b64cf404c51810a342d7bd71741ac05e39bb0ca38b71aeec2b3ff2df44012fa
		Secure: false
	Object:
		Variable: r8
		Type: javax.crypto.Cipher
		Statement: r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r14)
		Method: <org.apache.myfaces.shared.util.StateUtils: byte[] encrypt(byte[],javax.faces.context.ExternalContext)>
		SHA-256: 5ab4d0e746733f1fdd18881244b402c03ab9885140a6d8c3d88d7e37059c09d5
		Secure: false
	Object:
		Variable: r9
		Type: byte[]
		Statement: virtualinvoke r29.<javax.crypto.Mac: void doFinal(byte[],int)>(r9, i0)
		Method: <org.apache.myfaces.shared.util.StateUtils: byte[] encrypt(byte[],javax.faces.context.ExternalContext)>
		SHA-256: d05386d7d74db9019302b0d819a2e06beb047c635f2a04f7f64bfe49912a761c
		Secure: true
	Object:
		Variable: r52
		Type: java.security.SecureRandom
		Statement: r52 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>($r21, $r20)
		Method: <org.apache.myfaces.application.viewstate.SessionIdGenerator: java.security.SecureRandom createSecureRandom()>
		SHA-256: e059441112731324336bde1a48636ca1fb12aa7d4a7f1c6037204eb8ba4f3b51
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKey
		Statement: $r4 = virtualinvoke r21.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.apache.myfaces.shared.util.StateUtils: byte[] findSecret(java.lang.String,java.lang.String)>
		SHA-256: f73168261440a06188b4abce3daa87b60359780f2d8f56dad452277251d32cf9
		Secure: false
	Object:
		Variable: $r13
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r14, r20)
		Method: <org.apache.myfaces.shared.util.StateUtils: void initSecret(javax.servlet.ServletContext)>
		SHA-256: d20d474350bd8499350b28b8ba688873d52fbeb769747ae177cdca0eb8a666bd
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.apache.myfaces.view.impl.DefaultViewScopeHandler: long _getSeed()>
		SHA-256: 43018c77dedf88ec76e3f3f40a56425f98396f565141cd6f603a73543ab55ea7
		Secure: true
	Object:
		Variable: r9
		Type: byte[]
		Statement: r9 = virtualinvoke r30.<javax.crypto.Mac: byte[] doFinal()>()
		Method: <org.apache.myfaces.shared.util.StateUtils: byte[] decrypt(byte[],javax.faces.context.ExternalContext)>
		SHA-256: 14060b03096a3bb21846107eafe484aa83cd0470389109e4c755240206bf8b40
		Secure: true
	Object:
		Variable: r29
		Type: javax.crypto.Mac
		Statement: r29 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(r7)
		Method: <org.apache.myfaces.shared.util.StateUtils: byte[] encrypt(byte[],javax.faces.context.ExternalContext)>
		SHA-256: 24731c96787d3c92479ee4bcb46750f57959c56e60266a28888b04b6ca9aee61
		Secure: true
	Object:
		Variable: r21
		Type: javax.crypto.KeyGenerator
		Statement: r21 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(r1)
		Method: <org.apache.myfaces.shared.util.StateUtils: byte[] findMacSecret(java.lang.String,java.lang.String)>
		SHA-256: c1a85edbc0c224e2d18b8555595128dd1c38cb05da535d466019eed9e838ac3e
		Secure: false
	Object:
		Variable: r35
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r35.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r5)
		Method: <org.apache.myfaces.shared.util.StateUtils: byte[] decrypt(byte[],javax.faces.context.ExternalContext)>
		SHA-256: bca57171a21a53617517c432f829cb9d76eb09240fcdc0727630d60adba62b7c
		Secure: false
	Object:
		Variable: r3
		Type: java.security.SecureRandom
		Statement: r3 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer10427)
		Method: <org.apache.myfaces.lifecycle.TokenGenerator: long _getSeed()>
		SHA-256: e5fb3b69a1a12a5aa287f0552d033441060576d81d81304426cdd6d831c69cea
		Secure: true
	Object:
		Variable: r52
		Type: java.security.SecureRandom
		Statement: r52 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>($r18)
		Method: <org.apache.myfaces.application.viewstate.SessionIdGenerator: java.security.SecureRandom createSecureRandom()>
		SHA-256: e8f602085794603d813182c7a94c16c27fc6fac201e50f2d63dbff40cd3a1ff7
		Secure: true
	Object:
		Variable: r0
		Type: byte[]
		Statement: i0 = virtualinvoke r8.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[])>(r0, varReplacer10950, $i4, r9)
		Method: <org.apache.myfaces.shared.util.StateUtils: byte[] encrypt(byte[],javax.faces.context.ExternalContext)>
		SHA-256: 5f928b73f065b1852e29101db6078738a0acb752b7421f5890997e71bed6d642
		Secure: false
	Object:
		Variable: r3
		Type: java.security.SecureRandom
		Statement: r3 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer11565)
		Method: <org.apache.myfaces.shared.context.flash.FlashImpl: long _getSeed()>
		SHA-256: 299fa069084fe25122c04685fcbdf03dd28718022bf38640c75d1207c4710213
		Secure: true
	Object:
		Variable: r34
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r34.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r5)
		Method: <org.apache.myfaces.shared.util.StateUtils: byte[] encrypt(byte[],javax.faces.context.ExternalContext)>
		SHA-256: c7fe6ff3f591f98510d0de40399baf8240fa533dd4199e91b10d832b2838c8c0
		Secure: false

Findings in Java Class: org.apache.myfaces.shared.util.StateUtils

	 in Method: byte[] decrypt(byte[],javax.faces.context.ExternalContext)
		ForbiddenMethodError violating CrySL rule for javax.crypto.Cipher
			Detected call to forbidden method void init(int,java.security.Key) of class javax.crypto.Cipher. Instead, call method <javax.crypto.Cipher: void init(int,java.security.Key)>.
			at statement: virtualinvoke r8.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer10964, r2)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #a6f886616c99ad2f1e38443743b129915d5e1904661f06e068e0f7fdce823d8d)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer10958, r2, r31)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #a6f886616c99ad2f1e38443743b129915d5e1904661f06e068e0f7fdce823d8d)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r8.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer10964, r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared G C M
			at statement: virtualinvoke r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer10958, r2, r31)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer10958, r2, r31)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r35.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r5)


	 in Method: void initSecret(javax.servlet.ServletContext)
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #d20d474350bd8499350b28b8ba688873d52fbeb769747ae177cdca0eb8a666bd)
			Second parameter (with value "DES") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r13.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r14, r20)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #a0ed532c3508ad73eb4f868de509e6184ee42c17574dfa6effa8a5eb7a3e50b6)
			Second parameter (with value "HmacSHA1") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, r1)


	 in Method: javax.crypto.SecretKey getSecret(javax.faces.context.ExternalContext)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, r1)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #54504f7bb296e71e0b3c18d98e4ddb39177da5811761ec31937ce3cbe48bdde1)
			Second parameter (with value "DES") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, r1)


	 in Method: byte[] findSecret(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.KeyGenerator (on Object #4b64cf404c51810a342d7bd71741ac05e39bb0ca38b71aeec2b3ff2df44012fa)
			First parameter (with value "DES") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: r21 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(r1)


	 in Method: javax.crypto.SecretKey getMacSecret(javax.faces.context.ExternalContext)
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #d320753966a748cda059cc44fa9b609ec6475638d8e52319df5bb140f33743c5)
			Second parameter (with value "HmacSHA1") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, r1)


	 in Method: byte[] findMacSecret(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.KeyGenerator (on Object #c1a85edbc0c224e2d18b8555595128dd1c38cb05da535d466019eed9e838ac3e)
			First parameter (with value "HmacSHA1") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: r21 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(r1)


	 in Method: byte[] encrypt(byte[],javax.faces.context.ExternalContext)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer10943, r2, r30)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer10943, r2, r30)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r34.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared G C M
			at statement: virtualinvoke r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer10943, r2, r30)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 38

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 10
	IncompleteOperationError: 2
	ForbiddenMethodError: 1
	ConstraintError: 6
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 2 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 9.265 s

