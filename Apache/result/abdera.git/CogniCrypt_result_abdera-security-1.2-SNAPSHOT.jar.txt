[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 432.0 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 14 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 15
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.07

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 16
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.13

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.18

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.24

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.29

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.35

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 18
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.39

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 18
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.44

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 19
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.47

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 20
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 21
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.52

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 22
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.55

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.57

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 14 of 24
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.58

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 15 of 24
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.63

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 16 of 24
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 17 of 25
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.68

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 18 of 25
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.72

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 19 of 25
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.76

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 20 of 25
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.8

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 21 of 25
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.84

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 22 of 25
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.88

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 23 of 25
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.92

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 24 of 25
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.96

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r3
		Type: java.security.SecureRandom
		Statement: r3 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>(varReplacer55, r1)
		Method: <org.apache.abdera.security.util.KeyHelper: java.security.KeyPair generateKeyPair(java.lang.String,int,java.lang.String)>
		SHA-256: b18922d4d94251e3c101bab13159b6f242520a02813e315278dd3926583581a8
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.KeyPair
		Statement: $r7 = virtualinvoke r5.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <org.apache.abdera.security.util.DHContext: void init(java.math.BigInteger,java.math.BigInteger,int,byte[])>
		SHA-256: 826a766e962499a727b66861fd29f9e20abf3b1cf711fa1a59027d04841342ac
		Secure: true
	Object:
		Variable: r5
		Type: java.security.KeyPairGenerator
		Statement: r5 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer40)
		Method: <org.apache.abdera.security.util.DHContext: void init(java.math.BigInteger,java.math.BigInteger,int,byte[])>
		SHA-256: 2db50864b1ed0ade0bb04d9e79052fad7467c140a90340eecab633353aee8e76
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.KeyPair
		Statement: $r6 = virtualinvoke r4.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <org.apache.abdera.security.util.DHContext: void init()>
		SHA-256: 1049be7f88e65d020a27f0d26bb632c881b738802e2bda5019b1f2c2f32c9090
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.apache.abdera.security.util.KeyHelper: java.security.Key generateKey(java.lang.String)>
		SHA-256: a4555db63eb921c34584b0d1b8e39106c3dde289dbefe4caf7bb42d43b56491d
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.apache.abdera.security.util.KeyHelper: java.security.Key generateKey(java.lang.String)>
		SHA-256: cc087508470e62757ec351fb6c76069ee564de8b3f5236f988b2a5db0301857b
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.KeyPair
		Statement: $r7 = virtualinvoke r5.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <org.apache.abdera.security.util.DHContext: void init(java.math.BigInteger,java.math.BigInteger,int,byte[])>
		SHA-256: 5dab53b726a9bc381eae316c0991824418fc321db78e7d0cc0b4a39cb4c3d12f
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.apache.abdera.security.util.KeyHelper: javax.crypto.SecretKey generateSecretKey(java.lang.String,int,java.lang.String)>
		SHA-256: f2608ac04378d1079b5844a01b64f2da8bef5a115efdbc2f3cf3e93aa6734015
		Secure: true
	Object:
		Variable: r3
		Type: java.security.KeyStore
		Statement: r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(r0)
		Method: <org.apache.abdera.security.util.KeyHelper: java.security.KeyStore loadKeystore(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 9319dd8c4c57f81b9fe97735a61532a08e7fb9c3d385c87321f3b627012e244b
		Secure: false
	Object:
		Variable: r16
		Type: java.security.KeyStore
		Statement: r16 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer100)
		Method: <org.apache.abdera.security.util.filters.SignedResponseFilter: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 9fe5c6ab1766378136aecbd438183d59956719e8525a84a1f2276f7a90f1471b
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.KeyPair
		Statement: $r4 = virtualinvoke r2.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <org.apache.abdera.security.util.KeyHelper: java.security.KeyPair generateKeyPair(java.lang.String,int,java.lang.String)>
		SHA-256: 2569526be1bd32799bb9e83d07eb159e27fe08c254a47954af6c134f303cacfd
		Secure: true
	Object:
		Variable: $r11
		Type: java.security.Key
		Statement: $r11 = virtualinvoke r16.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>(r3, $r10)
		Method: <org.apache.abdera.security.util.filters.SignedResponseFilter: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: cef9fce40eebeda582a09b680ea608bc028ca5a8d1211155fac9ca500e9711b9
		Secure: false
	Object:
		Variable: r2
		Type: javax.crypto.KeyGenerator
		Statement: r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>(r0, r1)
		Method: <org.apache.abdera.security.util.KeyHelper: javax.crypto.SecretKey generateSecretKey(java.lang.String,int,java.lang.String)>
		SHA-256: e0358798d2dfd02f2d2fef524244ace7ab99d460eea81d0c80ad14e69454a0a6
		Secure: true
	Object:
		Variable: r1
		Type: javax.crypto.KeyGenerator
		Statement: r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(r0)
		Method: <org.apache.abdera.security.util.KeyHelper: java.security.Key generateKey(java.lang.String)>
		SHA-256: aff20ffa1a467872ef07a553b699c2cb39e5899f7bdbfcc809170032cbf41ae1
		Secure: true
	Object:
		Variable: r1
		Type: javax.crypto.KeyGenerator
		Statement: r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(r0)
		Method: <org.apache.abdera.security.util.KeyHelper: javax.crypto.SecretKey generateSecretKey(java.lang.String,int)>
		SHA-256: a295119cc9b5c6755f935e48abc25e3de5029ebebceaf2846373b8851c926a5e
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.KeyPair
		Statement: $r3 = virtualinvoke r1.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <org.apache.abdera.security.util.KeyHelper: java.security.KeyPair generateKeyPair(java.lang.String,int)>
		SHA-256: 65dc1080511f5e93ab1906eb84e2f302f6c7c6c3f954effc8dbace37d27d6b9e
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.SecretKey
		Statement: $r2 = virtualinvoke r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.apache.abdera.security.util.KeyHelper: javax.crypto.SecretKey generateSecretKey(java.lang.String,int)>
		SHA-256: e77ce6aba6fcaff7c9cc8a7a74ef29251e006d687cfef484005b1621a8939d2
		Secure: true
	Object:
		Variable: r2
		Type: java.security.KeyPairGenerator
		Statement: r2 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>(r0, r1)
		Method: <org.apache.abdera.security.util.KeyHelper: java.security.KeyPair generateKeyPair(java.lang.String,int,java.lang.String)>
		SHA-256: cffb1da2760eb402291f74fa4b5df0db8ea5805310f5c83a2dd7b13a6beeef9
		Secure: true
	Object:
		Variable: r1
		Type: java.security.KeyPairGenerator
		Statement: r1 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(r0)
		Method: <org.apache.abdera.security.util.KeyHelper: java.security.KeyPair generateKeyPair(java.lang.String,int)>
		SHA-256: fee7a060cb360d0b078cffb5579c9d87a0080b3c44d18aebb618a01b952a2032
		Secure: true
	Object:
		Variable: r2
		Type: java.security.KeyStore
		Statement: r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r3)
		Method: <org.apache.abdera.security.util.KeyHelper: java.security.KeyStore loadKeystore(java.lang.String,java.lang.String)>
		SHA-256: 2fc7c1b7b4d0b1087ef7b34d762e9fb042cf59c94acda649e6fa922d8f52910a
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.apache.abdera.security.util.KeyHelper: java.security.Key generateKey(java.lang.String)>
		SHA-256: 9097b7c1f1995d4f329927d9b66dced022f21bcd0e7a97963a3d1dd345aafbcc
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.PublicKey
		Statement: $r6 = virtualinvoke $r5.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <org.apache.abdera.security.util.DHContext: java.lang.String getResponseString()>
		SHA-256: 44014200bf357328dfbc8c5886f7c564032208e6544b61789ee52e02bb0b3885
		Secure: true
	Object:
		Variable: r4
		Type: java.security.KeyPairGenerator
		Statement: r4 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer29)
		Method: <org.apache.abdera.security.util.DHContext: void init()>
		SHA-256: 47acf833da579f0acf78f8237e80f4085ddf991ba624ee3aa9fcba0c3310773
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r6.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,int)>(r1, r2, i0)
		Method: <org.apache.abdera.security.util.DHContext: void init(java.math.BigInteger,java.math.BigInteger,int,byte[])>
		SHA-256: b2861d62b4b969ec97331977bd426840aed957f63de9de0c96938d0803bf9395
		Secure: true
	Object:
		Variable: r2
		Type: java.security.SecureRandom
		Statement: r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer54)
		Method: <org.apache.abdera.security.util.KeyHelper: java.security.KeyPair generateKeyPair(java.lang.String,int)>
		SHA-256: a210d257e38ca58be3e218a9d7b4e1e4fbdc34b4241fd66f4a24d610491d420e
		Secure: true

Findings in Java Class: org.apache.abdera.security.util.KeyHelper

	 in Method: java.security.KeyStore loadKeystore(java.lang.String,java.lang.String)
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #2fc7c1b7b4d0b1087ef7b34d762e9fb042cf59c94acda649e6fa922d8f52910a)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r2.<java.security.KeyStore: void load(java.io.InputStream,char[])>(r10, $r6)


	 in Method: java.security.KeyStore loadKeystore(java.lang.String,java.lang.String,java.lang.String)
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #9319dd8c4c57f81b9fe97735a61532a08e7fb9c3d385c87321f3b627012e244b)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r3.<java.security.KeyStore: void load(java.io.InputStream,char[])>(r10, $r6)


Findings in Java Class: org.apache.abdera.security.util.filters.SignedResponseFilter

	 in Method: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #9fe5c6ab1766378136aecbd438183d59956719e8525a84a1f2276f7a90f1471b)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r16.<java.security.KeyStore: void load(java.io.InputStream,char[])>(r7, $r9)


Findings in Java Class: org.apache.abdera.security.util.DHContext

	 in Method: void init()
		RequiredPredicateError violating CrySL rule for java.security.KeyPairGenerator
			First parameter was not properly generated as prepared D H
			at statement: virtualinvoke r4.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec)>(r3)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 25

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 1
	NeverTypeOfError: 3
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.553 s

