
Current Proejct: abdera-security-1.2-SNAPSHOT.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 432.0 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 14 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 15
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.07

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 16
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.13

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.18

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.24

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.29

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.35

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 18
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.39

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 18
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.44

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 19
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.47

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 20
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 21
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.52

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 22
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.55

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 23
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.57

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 14 of 24
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.58

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 15 of 24
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.63

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 16 of 24
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 17 of 25
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.68

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 18 of 25
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.72

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 19 of 25
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.76

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 20 of 25
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.8

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 21 of 25
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.84

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 22 of 25
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.88

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 23 of 25
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.92

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 24 of 25
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.96

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r3
		Type: java.security.SecureRandom
		Statement: r3 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>(varReplacer55, r1)
		Method: <org.apache.abdera.security.util.KeyHelper: java.security.KeyPair generateKeyPair(java.lang.String,int,java.lang.String)>
		SHA-256: b18922d4d94251e3c101bab13159b6f242520a02813e315278dd3926583581a8
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.KeyPair
		Statement: $r7 = virtualinvoke r5.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <org.apache.abdera.security.util.DHContext: void init(java.math.BigInteger,java.math.BigInteger,int,byte[])>
		SHA-256: 826a766e962499a727b66861fd29f9e20abf3b1cf711fa1a59027d04841342ac
		Secure: true
	Object:
		Variable: r5
		Type: java.security.KeyPairGenerator
		Statement: r5 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer40)
		Method: <org.apache.abdera.security.util.DHContext: void init(java.math.BigInteger,java.math.BigInteger,int,byte[])>
		SHA-256: 2db50864b1ed0ade0bb04d9e79052fad7467c140a90340eecab633353aee8e76
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.KeyPair
		Statement: $r6 = virtualinvoke r4.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <org.apache.abdera.security.util.DHContext: void init()>
		SHA-256: 1049be7f88e65d020a27f0d26bb632c881b738802e2bda5019b1f2c2f32c9090
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.apache.abdera.security.util.KeyHelper: java.security.Key generateKey(java.lang.String)>
		SHA-256: a4555db63eb921c34584b0d1b8e39106c3dde289dbefe4caf7bb42d43b56491d
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.apache.abdera.security.util.KeyHelper: java.security.Key generateKey(java.lang.String)>
		SHA-256: cc087508470e62757ec351fb6c76069ee564de8b3f5236f988b2a5db0301857b
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.KeyPair
		Statement: $r7 = virtualinvoke r5.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <org.apache.abdera.security.util.DHContext: void init(java.math.BigInteger,java.math.BigInteger,int,byte[])>
		SHA-256: 5dab53b726a9bc381eae316c0991824418fc321db78e7d0cc0b4a39cb4c3d12f
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.apache.abdera.security.util.KeyHelper: javax.crypto.SecretKey generateSecretKey(java.lang.String,int,java.lang.String)>
		SHA-256: f2608ac04378d1079b5844a01b64f2da8bef5a115efdbc2f3cf3e93aa6734015
		Secure: true
	Object:
		Variable: r3
		Type: java.security.KeyStore
		Statement: r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(r0)
		Method: <org.apache.abdera.security.util.KeyHelper: java.security.KeyStore loadKeystore(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 9319dd8c4c57f81b9fe97735a61532a08e7fb9c3d385c87321f3b627012e244b
		Secure: false
	Object:
		Variable: r16
		Type: java.security.KeyStore
		Statement: r16 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer100)
		Method: <org.apache.abdera.security.util.filters.SignedResponseFilter: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 9fe5c6ab1766378136aecbd438183d59956719e8525a84a1f2276f7a90f1471b
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.KeyPair
		Statement: $r4 = virtualinvoke r2.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <org.apache.abdera.security.util.KeyHelper: java.security.KeyPair generateKeyPair(java.lang.String,int,java.lang.String)>
		SHA-256: 2569526be1bd32799bb9e83d07eb159e27fe08c254a47954af6c134f303cacfd
		Secure: true
	Object:
		Variable: $r11
		Type: java.security.Key
		Statement: $r11 = virtualinvoke r16.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>(r3, $r10)
		Method: <org.apache.abdera.security.util.filters.SignedResponseFilter: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: cef9fce40eebeda582a09b680ea608bc028ca5a8d1211155fac9ca500e9711b9
		Secure: false
	Object:
		Variable: r2
		Type: javax.crypto.KeyGenerator
		Statement: r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>(r0, r1)
		Method: <org.apache.abdera.security.util.KeyHelper: javax.crypto.SecretKey generateSecretKey(java.lang.String,int,java.lang.String)>
		SHA-256: e0358798d2dfd02f2d2fef524244ace7ab99d460eea81d0c80ad14e69454a0a6
		Secure: true
	Object:
		Variable: r1
		Type: javax.crypto.KeyGenerator
		Statement: r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(r0)
		Method: <org.apache.abdera.security.util.KeyHelper: java.security.Key generateKey(java.lang.String)>
		SHA-256: aff20ffa1a467872ef07a553b699c2cb39e5899f7bdbfcc809170032cbf41ae1
		Secure: true
	Object:
		Variable: r1
		Type: javax.crypto.KeyGenerator
		Statement: r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(r0)
		Method: <org.apache.abdera.security.util.KeyHelper: javax.crypto.SecretKey generateSecretKey(java.lang.String,int)>
		SHA-256: a295119cc9b5c6755f935e48abc25e3de5029ebebceaf2846373b8851c926a5e
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.KeyPair
		Statement: $r3 = virtualinvoke r1.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <org.apache.abdera.security.util.KeyHelper: java.security.KeyPair generateKeyPair(java.lang.String,int)>
		SHA-256: 65dc1080511f5e93ab1906eb84e2f302f6c7c6c3f954effc8dbace37d27d6b9e
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.SecretKey
		Statement: $r2 = virtualinvoke r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.apache.abdera.security.util.KeyHelper: javax.crypto.SecretKey generateSecretKey(java.lang.String,int)>
		SHA-256: e77ce6aba6fcaff7c9cc8a7a74ef29251e006d687cfef484005b1621a8939d2
		Secure: true
	Object:
		Variable: r2
		Type: java.security.KeyPairGenerator
		Statement: r2 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>(r0, r1)
		Method: <org.apache.abdera.security.util.KeyHelper: java.security.KeyPair generateKeyPair(java.lang.String,int,java.lang.String)>
		SHA-256: cffb1da2760eb402291f74fa4b5df0db8ea5805310f5c83a2dd7b13a6beeef9
		Secure: true
	Object:
		Variable: r1
		Type: java.security.KeyPairGenerator
		Statement: r1 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(r0)
		Method: <org.apache.abdera.security.util.KeyHelper: java.security.KeyPair generateKeyPair(java.lang.String,int)>
		SHA-256: fee7a060cb360d0b078cffb5579c9d87a0080b3c44d18aebb618a01b952a2032
		Secure: true
	Object:
		Variable: r2
		Type: java.security.KeyStore
		Statement: r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r3)
		Method: <org.apache.abdera.security.util.KeyHelper: java.security.KeyStore loadKeystore(java.lang.String,java.lang.String)>
		SHA-256: 2fc7c1b7b4d0b1087ef7b34d762e9fb042cf59c94acda649e6fa922d8f52910a
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.apache.abdera.security.util.KeyHelper: java.security.Key generateKey(java.lang.String)>
		SHA-256: 9097b7c1f1995d4f329927d9b66dced022f21bcd0e7a97963a3d1dd345aafbcc
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.PublicKey
		Statement: $r6 = virtualinvoke $r5.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <org.apache.abdera.security.util.DHContext: java.lang.String getResponseString()>
		SHA-256: 44014200bf357328dfbc8c5886f7c564032208e6544b61789ee52e02bb0b3885
		Secure: true
	Object:
		Variable: r4
		Type: java.security.KeyPairGenerator
		Statement: r4 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer29)
		Method: <org.apache.abdera.security.util.DHContext: void init()>
		SHA-256: 47acf833da579f0acf78f8237e80f4085ddf991ba624ee3aa9fcba0c3310773
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r6.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,int)>(r1, r2, i0)
		Method: <org.apache.abdera.security.util.DHContext: void init(java.math.BigInteger,java.math.BigInteger,int,byte[])>
		SHA-256: b2861d62b4b969ec97331977bd426840aed957f63de9de0c96938d0803bf9395
		Secure: true
	Object:
		Variable: r2
		Type: java.security.SecureRandom
		Statement: r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer54)
		Method: <org.apache.abdera.security.util.KeyHelper: java.security.KeyPair generateKeyPair(java.lang.String,int)>
		SHA-256: a210d257e38ca58be3e218a9d7b4e1e4fbdc34b4241fd66f4a24d610491d420e
		Secure: true

Findings in Java Class: org.apache.abdera.security.util.KeyHelper

	 in Method: java.security.KeyStore loadKeystore(java.lang.String,java.lang.String)
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #2fc7c1b7b4d0b1087ef7b34d762e9fb042cf59c94acda649e6fa922d8f52910a)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r2.<java.security.KeyStore: void load(java.io.InputStream,char[])>(r10, $r6)


	 in Method: java.security.KeyStore loadKeystore(java.lang.String,java.lang.String,java.lang.String)
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #9319dd8c4c57f81b9fe97735a61532a08e7fb9c3d385c87321f3b627012e244b)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r3.<java.security.KeyStore: void load(java.io.InputStream,char[])>(r10, $r6)


Findings in Java Class: org.apache.abdera.security.util.filters.SignedResponseFilter

	 in Method: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #9fe5c6ab1766378136aecbd438183d59956719e8525a84a1f2276f7a90f1471b)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r16.<java.security.KeyStore: void load(java.io.InputStream,char[])>(r7, $r9)


Findings in Java Class: org.apache.abdera.security.util.DHContext

	 in Method: void init()
		RequiredPredicateError violating CrySL rule for java.security.KeyPairGenerator
			First parameter was not properly generated as prepared D H
			at statement: virtualinvoke r4.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec)>(r3)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 25

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 1
	NeverTypeOfError: 3
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.553 s

Current Proejct: abdera-extensions-oauth-1.2-SNAPSHOT.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 435.2 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 4 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 5
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.2

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 6
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 8
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.38

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 10
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.4

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 10
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 10
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.6

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 10
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.7

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 10
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.8

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 10
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.9

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r4
		Type: javax.crypto.KeyGenerator
		Statement: r4 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(r45)
		Method: <org.apache.abdera.ext.oauth.OAuthScheme: java.lang.String sign(java.lang.String,java.lang.String,java.security.cert.Certificate)>
		SHA-256: 575c8498caad89c1335dd4a4d44f4d1732b2de8e49d1e948091007ae7f0e866f
		Secure: true
	Object:
		Variable: r47
		Type: javax.crypto.Cipher
		Statement: r47 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer53)
		Method: <org.apache.abdera.ext.oauth.OAuthScheme: java.lang.String sign(java.lang.String,java.lang.String,java.security.cert.Certificate)>
		SHA-256: 53a3bd3e693898c8c36b6c34929663ba575342e1cfd36349b04b2ef6ed25b6ff
		Secure: true
	Object:
		Variable: r1
		Type: byte[]
		Statement: virtualinvoke r8.<java.security.SecureRandom: void nextBytes(byte[])>(r1)
		Method: <org.apache.abdera.ext.oauth.OAuthScheme: java.lang.String generateNonce()>
		SHA-256: e49edeaa4a1a418068c3a80d817910f0914c9652ea62da2287f94be0d0ba1b7a
		Secure: true
	Object:
		Variable: r8
		Type: java.security.SecureRandom
		Statement: r8 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer48)
		Method: <org.apache.abdera.ext.oauth.OAuthScheme: java.lang.String generateNonce()>
		SHA-256: 45b7c12312b40cef1754a470ea05192716d67666be383c3171935ec45aedc383
		Secure: true
	Object:
		Variable: $r20
		Type: byte[]
		Statement: r6 = virtualinvoke r5.<javax.crypto.Mac: byte[] doFinal(byte[])>($r20)
		Method: <org.apache.abdera.ext.oauth.OAuthScheme: java.lang.String sign(java.lang.String,java.lang.String,java.security.cert.Certificate)>
		SHA-256: 5c11d55c4fbae3d22fe642bda977677c0b2ccf91ea4840f21892ba3fce3c7e0a
		Secure: true
	Object:
		Variable: $r19
		Type: javax.crypto.SecretKey
		Statement: $r19 = virtualinvoke r4.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.apache.abdera.ext.oauth.OAuthScheme: java.lang.String sign(java.lang.String,java.lang.String,java.security.cert.Certificate)>
		SHA-256: 371e4cb16540d722412de16bb393790b6a5bc47ce5541b97a4c3c34062acb4e8
		Secure: true
	Object:
		Variable: $r28
		Type: byte[]
		Statement: r48 = virtualinvoke r47.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r28)
		Method: <org.apache.abdera.ext.oauth.OAuthScheme: java.lang.String sign(java.lang.String,java.lang.String,java.security.cert.Certificate)>
		SHA-256: cc3b460bfcf026838d11741c2e7610b05dd9db4bfe5b08dddad76840f640cc76
		Secure: true
	Object:
		Variable: r48
		Type: byte[]
		Statement: r48 = virtualinvoke r47.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r28)
		Method: <org.apache.abdera.ext.oauth.OAuthScheme: java.lang.String sign(java.lang.String,java.lang.String,java.security.cert.Certificate)>
		SHA-256: ceac9c88d595b398db487a724e8f574e0981c83b82fa18bf3bf011b56dc1880e
		Secure: true
	Object:
		Variable: r5
		Type: javax.crypto.Mac
		Statement: r5 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r18)
		Method: <org.apache.abdera.ext.oauth.OAuthScheme: java.lang.String sign(java.lang.String,java.lang.String,java.security.cert.Certificate)>
		SHA-256: ba7e3ef4b711d4e2cca3f19bc3919b6940148a6181a090205d494d64e0b77c89
		Secure: true
	Object:
		Variable: r6
		Type: byte[]
		Statement: r6 = virtualinvoke r5.<javax.crypto.Mac: byte[] doFinal(byte[])>($r20)
		Method: <org.apache.abdera.ext.oauth.OAuthScheme: java.lang.String sign(java.lang.String,java.lang.String,java.security.cert.Certificate)>
		SHA-256: 3fd828ce96fa98300d24a78d3099f09a4f64a8bac04a5af2498704d06ed3b173
		Secure: true

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 10
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.282 s

Current Proejct: abdera-extensions-rss-1.2-SNAPSHOT.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 403.7 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.314 s

Current Proejct: ant-junit.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 427.1 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.586 s

Current Proejct: abdera-client-1.2-SNAPSHOT.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 444.9 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 4 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 4
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.25

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 5
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.4

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 5
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.6

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 5
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.8

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r18
		Type: javax.net.ssl.KeyManagerFactory
		Statement: r18 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r7)
		Method: <org.apache.abdera.protocol.client.util.ClientAuthSSLProtocolSocketFactory: java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int,org.apache.commons.httpclient.params.HttpConnectionParams)>
		SHA-256: c8cea3848e9a8cd9092f39d00f94d9b73dd8735c14508e7b97f15d3c04ac8ac8
		Secure: false
	Object:
		Variable: r4
		Type: javax.net.ssl.SSLContext
		Statement: r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r6)
		Method: <org.apache.abdera.protocol.client.util.ClientAuthSSLProtocolSocketFactory: java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int,org.apache.commons.httpclient.params.HttpConnectionParams)>
		SHA-256: 60e3396a65dfa66e48496ecc494a9534936010810e85985f449085845cd0f5dc
		Secure: false
	Object:
		Variable: $r12
		Type: javax.net.ssl.KeyManager[]
		Statement: $r12 = virtualinvoke r18.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <org.apache.abdera.protocol.client.util.ClientAuthSSLProtocolSocketFactory: java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int,org.apache.commons.httpclient.params.HttpConnectionParams)>
		SHA-256: 91e277bfd25db39f336132f1d1a988ca523d9ec2e1c9962314d85ba3654b82a6
		Secure: false
	Object:
		Variable: r7
		Type: java.security.KeyStore
		Statement: r7 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(r1)
		Method: <org.apache.abdera.protocol.client.util.ClientAuthSSLProtocolSocketFactory: java.security.KeyStore initKeyStore(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: d1c9cff83bd9bfeddedf6c9f14052ed62c75dbb139dac221ff94652eb2fc7bbc
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer219)
		Method: <org.apache.abdera.protocol.client.util.SimpleSSLProtocolSocketFactory: void init(javax.net.ssl.TrustManager)>
		SHA-256: 23012e1b2c37142bb09d549fec8a215c8fd7392f7fdf91abd8d65c81b48b6e64
		Secure: false

Findings in Java Class: org.apache.abdera.protocol.client.util.ClientAuthSSLProtocolSocketFactory

	 in Method: java.security.KeyStore initKeyStore(java.lang.String,java.lang.String,java.lang.String)
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #d1c9cff83bd9bfeddedf6c9f14052ed62c75dbb139dac221ff94652eb2fc7bbc)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r7.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r4, $r5)


	 in Method: java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int,org.apache.commons.httpclient.params.HttpConnectionParams)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r12, r25, varReplacer127)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #c8cea3848e9a8cd9092f39d00f94d9b73dd8735c14508e7b97f15d3c04ac8ac8)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r18.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r10, $r11)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r12, r25, varReplacer127)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r18.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r10, $r11)


Findings in Java Class: org.apache.abdera.protocol.client.util.SimpleSSLProtocolSocketFactory

	 in Method: void init(javax.net.ssl.TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer220, $r4, varReplacer220)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer220, $r4, varReplacer220)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #23012e1b2c37142bb09d549fec8a215c8fd7392f7fdf91abd8d65c81b48b6e64)
			First parameter (with value "SSL") should be any of {TLSv1.2}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer219)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 5

	CogniCrypt found the following violations. For details see description above.
	NeverTypeOfError: 2
	ConstraintError: 1
	RequiredPredicateError: 5
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.471 s

Current Proejct: abdera-extensions-geo-1.2-SNAPSHOT.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 507.2 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.341 s

Current Proejct: abdera-spring-1.2-SNAPSHOT.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 460.9 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.304 s

Current Proejct: abdera-examples-1.2-SNAPSHOT.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 425.4 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 2 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 3
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 4
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 4
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.75

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r1
		Type: java.security.KeyStore
		Statement: r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer253)
		Method: <org.apache.abdera.examples.security.DSig: void main(java.lang.String[])>
		SHA-256: 6ba15ceae80b5968374bb47b90ce05e82be57da54fb71666079f49e25560bd6e
		Secure: false
	Object:
		Variable: $r18
		Type: java.security.Key
		Statement: $r18 = virtualinvoke r1.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>(varReplacer254, $r17)
		Method: <org.apache.abdera.examples.security.DSig: void main(java.lang.String[])>
		SHA-256: 26a4f781bd7578eef855ecbd244ade2af5759e68ce0040d3e88fec070ef4103d
		Secure: false
	Object:
		Variable: r32
		Type: javax.crypto.SecretKey
		Statement: r32 = virtualinvoke r31.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.apache.abdera.examples.security.Enc: void main(java.lang.String[])>
		SHA-256: 3277a68a6209f908897dd0bc96632fe3ce198118a6c06eafb0566f315083aee
		Secure: true
	Object:
		Variable: r31
		Type: javax.crypto.KeyGenerator
		Statement: r31 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(r30)
		Method: <org.apache.abdera.examples.security.Enc: void main(java.lang.String[])>
		SHA-256: 9d2d8144913a46c9d42aa8c9eea09ed3e44d04ef2c0baace59bd505edf598f89
		Secure: true

Findings in Java Class: org.apache.abdera.examples.security.DSig

	 in Method: void main(java.lang.String[])
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #6ba15ceae80b5968374bb47b90ce05e82be57da54fb71666079f49e25560bd6e)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r1.<java.security.KeyStore: void load(java.io.InputStream,char[])>(r2, $r15)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 4

	CogniCrypt found the following violations. For details see description above.
	NeverTypeOfError: 1
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.734 s

Current Proejct: abdera-parser-1.2-SNAPSHOT.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 426.8 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.778 s

Current Proejct: wstx-asl.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 482.3 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 3.872 s

Current Proejct: abdera-extensions-sharing-1.2-SNAPSHOT.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 521.7 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.489 s

Current Proejct: idea-junit.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 783.5 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 2.727 s

Current Proejct: commons-httpclient.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 494.4 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 4 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 12
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.08

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 14
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.14

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 16
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.19

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.24

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.29

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.35

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.41

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.47

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.53

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.59

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.65

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.71

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.76

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 14 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.82

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 15 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.88

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 16 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.94

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: $r81
		Type: byte[]
		Statement: $r82 = virtualinvoke r9.<java.security.MessageDigest: byte[] digest(byte[])>($r81)
		Method: <org.apache.commons.httpclient.auth.DigestScheme: java.lang.String createDigest(java.lang.String,java.lang.String)>
		SHA-256: 4a48774724a93bb8c96ac89ca705513c0cf6f13c80b8038f90c534dfcc54fb00
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke r1.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <org.apache.commons.httpclient.auth.DigestScheme: java.lang.String createCnonce()>
		SHA-256: 49279efe36cfbce5e89fae4ce3d77da6f81597be6bc85837de7f6fd4708ab7a9
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r10, varReplacer2058)
		Method: <org.apache.commons.httpclient.auth.NTLM: javax.crypto.Cipher getCipher(byte[])>
		SHA-256: fbdf004ec925a9577e1135171f692e4b8850c9056f8f336a45f843edcb450a03
		Secure: false
	Object:
		Variable: $r82
		Type: byte[]
		Statement: $r82 = virtualinvoke r9.<java.security.MessageDigest: byte[] digest(byte[])>($r81)
		Method: <org.apache.commons.httpclient.auth.DigestScheme: java.lang.String createDigest(java.lang.String,java.lang.String)>
		SHA-256: 8f9350673163056cda0429edf7d63751211f26fbb94eecd5b1cb6efaaec44502
		Secure: false
	Object:
		Variable: r9
		Type: java.security.MessageDigest
		Statement: r9 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1972)
		Method: <org.apache.commons.httpclient.auth.DigestScheme: java.lang.String createDigest(java.lang.String,java.lang.String)>
		SHA-256: 8ec408f19bc91f3944503b1723b70ef06c372d0cd67a7eb04601f5ac3515276a
		Secure: false
	Object:
		Variable: $r24
		Type: byte[]
		Statement: $r24 = virtualinvoke r9.<java.security.MessageDigest: byte[] digest(byte[])>($r23)
		Method: <org.apache.commons.httpclient.auth.DigestScheme: java.lang.String createDigest(java.lang.String,java.lang.String)>
		SHA-256: c5eeb8a21720b699f7376c6811eebfd093311141142f58a123b9c0628707839d
		Secure: false
	Object:
		Variable: $r23
		Type: byte[]
		Statement: $r24 = virtualinvoke r9.<java.security.MessageDigest: byte[] digest(byte[])>($r23)
		Method: <org.apache.commons.httpclient.auth.DigestScheme: java.lang.String createDigest(java.lang.String,java.lang.String)>
		SHA-256: 9b83413faf38dbce757cbe4c9757d470b7f50d1e91128ae27dc90a82df87cb68
		Secure: false
	Object:
		Variable: r1
		Type: java.security.MessageDigest
		Statement: r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2005)
		Method: <org.apache.commons.httpclient.auth.DigestScheme: java.lang.String createCnonce()>
		SHA-256: 4a642ed7c171c9b41463723f663bc27ce57c67f4b447b0ca4e0a4b6fb596318a
		Secure: false
	Object:
		Variable: r8
		Type: byte[]
		Statement: r8 = virtualinvoke r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r2)
		Method: <org.apache.commons.httpclient.auth.NTLM: byte[] encrypt(byte[],byte[])>
		SHA-256: bd265b394300b77ddc92cf6ff5f22baaae91897ea8788637237fdecf7f2011a
		Secure: false
	Object:
		Variable: $r61
		Type: byte[]
		Statement: $r61 = virtualinvoke r9.<java.security.MessageDigest: byte[] digest(byte[])>($r60)
		Method: <org.apache.commons.httpclient.auth.DigestScheme: java.lang.String createDigest(java.lang.String,java.lang.String)>
		SHA-256: 10c7446279881755ff4ab5feff7d36b4f409bb645c9e8c4b793b99dd3e0b3feb
		Secure: false
	Object:
		Variable: varReplacer2058
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r10, varReplacer2058)
		Method: <org.apache.commons.httpclient.auth.NTLM: javax.crypto.Cipher getCipher(byte[])>
		SHA-256: e966798546c0e28783dfd502cea17ae79071490cec718d8c8d6a4b07007cf92c
		Secure: false
	Object:
		Variable: $r60
		Type: byte[]
		Statement: $r61 = virtualinvoke r9.<java.security.MessageDigest: byte[] digest(byte[])>($r60)
		Method: <org.apache.commons.httpclient.auth.DigestScheme: java.lang.String createDigest(java.lang.String,java.lang.String)>
		SHA-256: 51cdf56ca62447d324bbe8fdedccdfe3b1a85172ebfae73ebec48438bdc45e12
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r5 = virtualinvoke r1.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <org.apache.commons.httpclient.auth.DigestScheme: java.lang.String createCnonce()>
		SHA-256: ad2aad47d38e36e8e4b531880f371a5107b9c2e9e2fb8cba8ac7a2575abad356
		Secure: false
	Object:
		Variable: $r88
		Type: byte[]
		Statement: $r89 = virtualinvoke r9.<java.security.MessageDigest: byte[] digest(byte[])>($r88)
		Method: <org.apache.commons.httpclient.auth.DigestScheme: java.lang.String createDigest(java.lang.String,java.lang.String)>
		SHA-256: 1f21d079438d0806fa3384120d1a0dfc3605e198d8b6410c50c70865b97b4465
		Secure: false
	Object:
		Variable: r2
		Type: byte[]
		Statement: r8 = virtualinvoke r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r2)
		Method: <org.apache.commons.httpclient.auth.NTLM: byte[] encrypt(byte[],byte[])>
		SHA-256: d140285075be76cea6460350db3f3a6466a028470925b4aa96de138e4c7a9226
		Secure: false
	Object:
		Variable: r9
		Type: javax.crypto.Cipher
		Statement: r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2057)
		Method: <org.apache.commons.httpclient.auth.NTLM: javax.crypto.Cipher getCipher(byte[])>
		SHA-256: 2428a91187d162c7b6945efac723d02f35919d2a728d2d6d519a75eaba0dd45e
		Secure: false
	Object:
		Variable: $r89
		Type: byte[]
		Statement: $r89 = virtualinvoke r9.<java.security.MessageDigest: byte[] digest(byte[])>($r88)
		Method: <org.apache.commons.httpclient.auth.DigestScheme: java.lang.String createDigest(java.lang.String,java.lang.String)>
		SHA-256: ede6a96c8c1e9db7f2e49ed65bd17f243ee9be0f199eeaef4146837a3fdbf75f
		Secure: false

Findings in Java Class: org.apache.commons.httpclient.auth.DigestScheme

	 in Method: java.lang.String createDigest(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #8ec408f19bc91f3944503b1723b70ef06c372d0cd67a7eb04601f5ac3515276a)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r9 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1972)


	 in Method: java.lang.String createCnonce()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #4a642ed7c171c9b41463723f663bc27ce57c67f4b447b0ca4e0a4b6fb596318a)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2005)


Findings in Java Class: org.apache.commons.httpclient.auth.NTLM

	 in Method: javax.crypto.Cipher getCipher(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r10, varReplacer2058)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #2428a91187d162c7b6945efac723d02f35919d2a728d2d6d519a75eaba0dd45e)
			First parameter (with value "DES/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: r9 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2057)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #fbdf004ec925a9577e1135171f692e4b8850c9056f8f336a45f843edcb450a03)
			Second parameter (with value "DES") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r10, varReplacer2058)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r9.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2055, $r1)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 17

	CogniCrypt found the following violations. For details see description above.
	RequiredPredicateError: 2
	ConstraintError: 4
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 2.877 s

Current Proejct: commons-logging.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 515.0 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.531 s

Current Proejct: abdera-extensions-media-1.2-SNAPSHOT.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 403.6 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.178 s

Current Proejct: abdera-jcr-1.2-SNAPSHOT.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 780.0 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 2.074 s

Current Proejct: axiom-impl.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 403.1 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.517 s

Current Proejct: ant-commons-logging.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 410.4 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.080 s

Current Proejct: axiom-api.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 520.3 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 6 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 7
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.14

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 8
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.25

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 9
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 10
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.4

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.45

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 12
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 12
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.58

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 12
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 12
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.75

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 12
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.83

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 12
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.92

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r14
		Type: java.security.MessageDigest
		Statement: r14 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r2)
		Method: <org.apache.axiom.om.util.DigestGenerator: byte[] getDigest(org.apache.axiom.om.OMAttribute,java.lang.String)>
		SHA-256: 7a81b575787daf4623df8dcb953a00ebf1a521abbca4b8c4171ee0052f3b479a
		Secure: true
	Object:
		Variable: r23
		Type: byte[]
		Statement: r23 = virtualinvoke r21.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.axiom.om.util.UUIDGenerator: java.lang.String getInitialUUID()>
		SHA-256: 84baa38213353ed7016c1dc66dc538e312495b1708cf492b80488c58882a3834
		Secure: false
	Object:
		Variable: r22
		Type: byte[]
		Statement: r22 = virtualinvoke r21.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.axiom.om.util.DigestGenerator: byte[] getDigest(org.apache.axiom.om.OMDocument,java.lang.String)>
		SHA-256: 5892be60e4f5431b9c7771d3d649cbd0aa2747bd42d3f29a64c82894267afd95
		Secure: true
	Object:
		Variable: r12
		Type: java.security.MessageDigest
		Statement: r12 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r2)
		Method: <org.apache.axiom.om.util.DigestGenerator: byte[] getDigest(org.apache.axiom.om.OMProcessingInstruction,java.lang.String)>
		SHA-256: 88021ae9a2bc39d792cd4f0050e519740ac201018ca61dd1d72aa1ee23e631bf
		Secure: true
	Object:
		Variable: r21
		Type: java.security.MessageDigest
		Statement: r21 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1322)
		Method: <org.apache.axiom.om.util.UUIDGenerator: java.lang.String getInitialUUID()>
		SHA-256: f6dba9110c5786cfc35779172ddfc2796e8daf0edb559be5a6c542536e763670
		Secure: false
	Object:
		Variable: r10
		Type: java.security.MessageDigest
		Statement: r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r2)
		Method: <org.apache.axiom.om.util.DigestGenerator: byte[] getDigest(org.apache.axiom.om.OMText,java.lang.String)>
		SHA-256: d3070bf9baee143d64ba7e8f4dbb1cf9cb8ff925cbace434b78cf54ad60a4167
		Secure: true
	Object:
		Variable: r13
		Type: byte[]
		Statement: r13 = virtualinvoke r12.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.axiom.om.util.DigestGenerator: byte[] getDigest(org.apache.axiom.om.OMProcessingInstruction,java.lang.String)>
		SHA-256: 7e7f429fa8c09d9a1f2aa1095985902b43b4e3a67a797054d5172e599f483732
		Secure: true
	Object:
		Variable: r21
		Type: java.security.MessageDigest
		Statement: r21 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r2)
		Method: <org.apache.axiom.om.util.DigestGenerator: byte[] getDigest(org.apache.axiom.om.OMDocument,java.lang.String)>
		SHA-256: 2791f5ffdb3f69b483dc9cf9f537bd43c0c5e0d5933c91f9eada84562e9301b7
		Secure: true
	Object:
		Variable: r21
		Type: java.security.MessageDigest
		Statement: r21 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r2)
		Method: <org.apache.axiom.om.util.DigestGenerator: byte[] getDigest(org.apache.axiom.om.OMElement,java.lang.String)>
		SHA-256: 2791f5ffdb3f69b483dc9cf9f537bd43c0c5e0d5933c91f9eada84562e9301b7
		Secure: true
	Object:
		Variable: r11
		Type: byte[]
		Statement: r11 = virtualinvoke r10.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.axiom.om.util.DigestGenerator: byte[] getDigest(org.apache.axiom.om.OMText,java.lang.String)>
		SHA-256: c7ccd2694033c506508aed7758eef0502d96affae5d34d17aa8dfdbfb1211599
		Secure: true
	Object:
		Variable: r25
		Type: byte[]
		Statement: r25 = virtualinvoke r21.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.axiom.om.util.DigestGenerator: byte[] getDigest(org.apache.axiom.om.OMElement,java.lang.String)>
		SHA-256: c6a1f5974a928805d5b7014688e1a775927e8e32ff7c7f7d863b4620c7685bee
		Secure: true
	Object:
		Variable: r13
		Type: byte[]
		Statement: r13 = virtualinvoke r14.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.axiom.om.util.DigestGenerator: byte[] getDigest(org.apache.axiom.om.OMAttribute,java.lang.String)>
		SHA-256: fa62dcc854091e0c2960102e1ac94599ced47e13cc71e1909e589734128ced3c
		Secure: true

Findings in Java Class: org.apache.axiom.om.util.UUIDGenerator

	 in Method: java.lang.String getInitialUUID()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #f6dba9110c5786cfc35779172ddfc2796e8daf0edb559be5a6c542536e763670)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r21 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1322)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 12

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 1
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 2.912 s

Current Proejct: kotlin-test-junit.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 415.4 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.123 s

Current Proejct: abdera-extensions-wsse-1.2-SNAPSHOT.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 478.1 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 2 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 4
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.25

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 5
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.4

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 5
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.6

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 5
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.8

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r1
		Type: byte[]
		Statement: virtualinvoke r8.<java.security.SecureRandom: void nextBytes(byte[])>(r1)
		Method: <org.apache.abdera.ext.wsse.WSSEAuthScheme: java.lang.String generateNonce()>
		SHA-256: 9d6d4bfad6bd39b14d8a3a9036147ce10100838bfd6ae9b126abbaae62956886
		Secure: true
	Object:
		Variable: $r11
		Type: byte[]
		Statement: $r12 = virtualinvoke r17.<java.security.MessageDigest: byte[] digest(byte[])>($r11)
		Method: <org.apache.abdera.ext.wsse.WSSEAuthScheme: java.lang.String generatePasswordDigest(java.lang.String,java.lang.String,org.apache.abdera.model.AtomDate)>
		SHA-256: a4ab9583bf478a72be660b46620ce586c2835ca944b9699ace1051967f1ccf8b
		Secure: false
	Object:
		Variable: $r12
		Type: byte[]
		Statement: $r12 = virtualinvoke r17.<java.security.MessageDigest: byte[] digest(byte[])>($r11)
		Method: <org.apache.abdera.ext.wsse.WSSEAuthScheme: java.lang.String generatePasswordDigest(java.lang.String,java.lang.String,org.apache.abdera.model.AtomDate)>
		SHA-256: b8628c7350b774d5e08874c54183b8de5b9e4db1e95887b60029887ba2851ab8
		Secure: false
	Object:
		Variable: r17
		Type: java.security.MessageDigest
		Statement: r17 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10)
		Method: <org.apache.abdera.ext.wsse.WSSEAuthScheme: java.lang.String generatePasswordDigest(java.lang.String,java.lang.String,org.apache.abdera.model.AtomDate)>
		SHA-256: 742eef597ee01145df9ec5c829da2661cf32e7d29ae571b315024f0268da7c7c
		Secure: false
	Object:
		Variable: r8
		Type: java.security.SecureRandom
		Statement: r8 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer11)
		Method: <org.apache.abdera.ext.wsse.WSSEAuthScheme: java.lang.String generateNonce()>
		SHA-256: aa93654365c297cfd9b287030f1fb132480b011c50ca77141137c28ae363b341
		Secure: true

Findings in Java Class: org.apache.abdera.ext.wsse.WSSEAuthScheme

	 in Method: java.lang.String generatePasswordDigest(java.lang.String,java.lang.String,org.apache.abdera.model.AtomDate)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #742eef597ee01145df9ec5c829da2661cf32e7d29ae571b315024f0268da7c7c)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r17 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 5

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 1
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.426 s

Current Proejct: abdera-i18n-1.2-SNAPSHOT.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 480.6 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 1 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 1 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 4.515 s

Current Proejct: servlet-api.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 467.4 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.297 s

Current Proejct: abdera-core-1.2-SNAPSHOT.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 477.1 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 1 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 2
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r12
		Type: java.security.MessageDigest
		Statement: r12 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1121)
		Method: <org.apache.abdera.util.EntityTag: org.apache.abdera.util.EntityTag generate(java.lang.String[])>
		SHA-256: 4c8b7403f4ea269ee30968fb7110ee855f65ba6ff89efb9aa5a14e9522cca81d
		Secure: false
	Object:
		Variable: r14
		Type: byte[]
		Statement: r14 = virtualinvoke r12.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.abdera.util.EntityTag: org.apache.abdera.util.EntityTag generate(java.lang.String[])>
		SHA-256: 9285a3e95040acc81cd7f7da09bb9b57a493dfdb84e468fad29fb972c5b88ca
		Secure: false

Findings in Java Class: org.apache.abdera.util.EntityTag

	 in Method: org.apache.abdera.util.EntityTag generate(java.lang.String[])
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #4c8b7403f4ea269ee30968fb7110ee855f65ba6ff89efb9aa5a14e9522cca81d)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: r14 = virtualinvoke r12.<java.security.MessageDigest: byte[] digest()>()

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #4c8b7403f4ea269ee30968fb7110ee855f65ba6ff89efb9aa5a14e9522cca81d)
			First parameter (with value "md5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r12 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1121)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 2

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 1
	TypestateError: 1
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.843 s

Current Proejct: abdera-extensions-gdata-1.2-SNAPSHOT.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 651.1 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 5 analysis seeds within 1 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 5
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.2

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 6
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 6
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 6
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 7
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.71

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 7
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.86

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r18
		Type: javax.net.ssl.KeyManagerFactory
		Statement: r18 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r7)
		Method: <org.apache.abdera.protocol.client.util.ClientAuthSSLProtocolSocketFactory: java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int,org.apache.commons.httpclient.params.HttpConnectionParams)>
		SHA-256: c8cea3848e9a8cd9092f39d00f94d9b73dd8735c14508e7b97f15d3c04ac8ac8
		Secure: false
	Object:
		Variable: r4
		Type: javax.net.ssl.SSLContext
		Statement: r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r6)
		Method: <org.apache.abdera.protocol.client.util.ClientAuthSSLProtocolSocketFactory: java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int,org.apache.commons.httpclient.params.HttpConnectionParams)>
		SHA-256: 60e3396a65dfa66e48496ecc494a9534936010810e85985f449085845cd0f5dc
		Secure: false
	Object:
		Variable: $r12
		Type: javax.net.ssl.KeyManager[]
		Statement: $r12 = virtualinvoke r18.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <org.apache.abdera.protocol.client.util.ClientAuthSSLProtocolSocketFactory: java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int,org.apache.commons.httpclient.params.HttpConnectionParams)>
		SHA-256: 91e277bfd25db39f336132f1d1a988ca523d9ec2e1c9962314d85ba3654b82a6
		Secure: false
	Object:
		Variable: r7
		Type: java.security.KeyStore
		Statement: r7 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(r1)
		Method: <org.apache.abdera.protocol.client.util.ClientAuthSSLProtocolSocketFactory: java.security.KeyStore initKeyStore(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: d1c9cff83bd9bfeddedf6c9f14052ed62c75dbb139dac221ff94652eb2fc7bbc
		Secure: false
	Object:
		Variable: r14
		Type: byte[]
		Statement: r14 = virtualinvoke r12.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.abdera.util.EntityTag: org.apache.abdera.util.EntityTag generate(java.lang.String[])>
		SHA-256: 9285a3e95040acc81cd7f7da09bb9b57a493dfdb84e468fad29fb972c5b88ca
		Secure: false
	Object:
		Variable: r12
		Type: java.security.MessageDigest
		Statement: r12 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9872)
		Method: <org.apache.abdera.util.EntityTag: org.apache.abdera.util.EntityTag generate(java.lang.String[])>
		SHA-256: 36d140b8eb1a88b9a6dd2a760b51bbd135face4cc6779966fef2e87e78f8076e
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer8858)
		Method: <org.apache.abdera.protocol.client.util.SimpleSSLProtocolSocketFactory: void init(javax.net.ssl.TrustManager)>
		SHA-256: 9c50c45923b61a513836a495e92d698f8a4f47e63cf73abd8037d48b5037553b
		Secure: false

Findings in Java Class: org.apache.abdera.protocol.client.util.ClientAuthSSLProtocolSocketFactory

	 in Method: java.security.KeyStore initKeyStore(java.lang.String,java.lang.String,java.lang.String)
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #d1c9cff83bd9bfeddedf6c9f14052ed62c75dbb139dac221ff94652eb2fc7bbc)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r7.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r4, $r5)


	 in Method: java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int,org.apache.commons.httpclient.params.HttpConnectionParams)
		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #c8cea3848e9a8cd9092f39d00f94d9b73dd8735c14508e7b97f15d3c04ac8ac8)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r18.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r10, $r11)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r12, r25, varReplacer8766)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r12, r25, varReplacer8766)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r18.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r10, $r11)


Findings in Java Class: org.apache.abdera.protocol.client.util.SimpleSSLProtocolSocketFactory

	 in Method: void init(javax.net.ssl.TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer8859, $r4, varReplacer8859)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer8859, $r4, varReplacer8859)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #9c50c45923b61a513836a495e92d698f8a4f47e63cf73abd8037d48b5037553b)
			First parameter (with value "SSL") should be any of {TLSv1.2}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer8858)


Findings in Java Class: org.apache.abdera.util.EntityTag

	 in Method: org.apache.abdera.util.EntityTag generate(java.lang.String[])
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #36d140b8eb1a88b9a6dd2a760b51bbd135face4cc6779966fef2e87e78f8076e)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: r14 = virtualinvoke r12.<java.security.MessageDigest: byte[] digest()>()

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #36d140b8eb1a88b9a6dd2a760b51bbd135face4cc6779966fef2e87e78f8076e)
			First parameter (with value "md5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r12 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer9872)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 7

	CogniCrypt found the following violations. For details see description above.
	NeverTypeOfError: 2
	ConstraintError: 2
	RequiredPredicateError: 5
	TypestateError: 1
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 1 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 6.661 s

Current Proejct: xercesImpl.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 745.6 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 1 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 1 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 9.594 s

Current Proejct: abdera-server-1.2-SNAPSHOT.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 451.3 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.644 s

Current Proejct: abdera-jdbc-1.2-SNAPSHOT.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 527.3 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.467 s

Current Proejct: abdera-bundle-1.2-SNAPSHOT.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 875.4 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 25 analysis seeds within 1 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 25
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.04

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 26
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.08

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 26
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.12

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 26
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.15

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 27
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.19

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 28
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.21

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 29
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.24

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.27

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.3

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 30
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.37

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 31
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.39

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 31
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.42

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 14 of 32
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.44

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 15 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.45

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 16 of 34
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.47

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 17 of 35
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.49

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 18 of 36
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 19 of 37
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.51

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 20 of 38
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.53

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 21 of 39
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.54

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 22 of 41
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.54

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 23 of 43
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.53

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 24 of 45
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.53

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 25 of 46
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.54

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 26 of 46
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.57

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 27 of 46
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.59

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 28 of 46
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.61

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 29 of 46
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.63

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 30 of 47
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.64

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 31 of 47
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.66

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 32 of 47
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.68

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 33 of 47
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.7

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 34 of 47
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.72

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 35 of 47
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.74

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 36 of 47
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.77

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 37 of 47
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.79

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 38 of 47
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.81

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 39 of 47
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.83

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 40 of 47
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.85

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 41 of 47
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.87

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 42 of 47
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.89

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 43 of 47
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.91

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 44 of 47
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.94

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 45 of 47
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.96

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 46 of 47
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.98

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r17
		Type: java.security.MessageDigest
		Statement: r17 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer12346)
		Method: <org.apache.abdera.ext.wsse.WSSEAuthScheme: java.lang.String generatePasswordDigest(java.lang.String,java.lang.String,org.apache.abdera.model.AtomDate)>
		SHA-256: 7b34e334c912e77d02d404dc650cae216ae4973cd6808f29ba9767f4231ab4c7
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.SecretKey
		Statement: $r2 = virtualinvoke r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.apache.abdera.security.util.KeyHelper: javax.crypto.SecretKey generateSecretKey(java.lang.String,int)>
		SHA-256: e77ce6aba6fcaff7c9cc8a7a74ef29251e006d687cfef484005b1621a8939d2
		Secure: true
	Object:
		Variable: r4
		Type: java.security.KeyPairGenerator
		Statement: r4 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer11115)
		Method: <org.apache.abdera.security.util.DHContext: void init()>
		SHA-256: 8fe94e3f434af459dfb6b2c068127cac9c680486e463ed2a5b01194c1160d8a1
		Secure: false
	Object:
		Variable: r5
		Type: java.security.KeyPairGenerator
		Statement: r5 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer11126)
		Method: <org.apache.abdera.security.util.DHContext: void init(java.math.BigInteger,java.math.BigInteger,int,byte[])>
		SHA-256: b26023c4611ef30c20997f5bc9ebbf06db7313b3eb44a7418deabdd9ae8df161
		Secure: true
	Object:
		Variable: r5
		Type: javax.crypto.Mac
		Statement: r5 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r18)
		Method: <org.apache.abdera.ext.oauth.OAuthScheme: java.lang.String sign(java.lang.String,java.lang.String,java.security.cert.Certificate)>
		SHA-256: ba7e3ef4b711d4e2cca3f19bc3919b6940148a6181a090205d494d64e0b77c89
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r6.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,int)>(r1, r2, i0)
		Method: <org.apache.abdera.security.util.DHContext: void init(java.math.BigInteger,java.math.BigInteger,int,byte[])>
		SHA-256: b2861d62b4b969ec97331977bd426840aed957f63de9de0c96938d0803bf9395
		Secure: true
	Object:
		Variable: r12
		Type: java.security.MessageDigest
		Statement: r12 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1342)
		Method: <org.apache.abdera.util.EntityTag: org.apache.abdera.util.EntityTag generate(java.lang.String[])>
		SHA-256: 221bcc7034987b2bbe4c50aefa53e93560f38c4f9ee04797eee8dab5dad7e5f8
		Secure: false
	Object:
		Variable: r2
		Type: java.security.KeyStore
		Statement: r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r3)
		Method: <org.apache.abdera.security.util.KeyHelper: java.security.KeyStore loadKeystore(java.lang.String,java.lang.String)>
		SHA-256: 2fc7c1b7b4d0b1087ef7b34d762e9fb042cf59c94acda649e6fa922d8f52910a
		Secure: false
	Object:
		Variable: r2
		Type: java.security.SecureRandom
		Statement: r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer11140)
		Method: <org.apache.abdera.security.util.KeyHelper: java.security.KeyPair generateKeyPair(java.lang.String,int)>
		SHA-256: b3685d77a3f12b620e8d4f8394c1a6b61a28e05b76ade5305be2144ca940f24e
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.KeyPair
		Statement: $r6 = virtualinvoke r4.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <org.apache.abdera.security.util.DHContext: void init()>
		SHA-256: 1049be7f88e65d020a27f0d26bb632c881b738802e2bda5019b1f2c2f32c9090
		Secure: false
	Object:
		Variable: r6
		Type: byte[]
		Statement: r6 = virtualinvoke r5.<javax.crypto.Mac: byte[] doFinal(byte[])>($r20)
		Method: <org.apache.abdera.ext.oauth.OAuthScheme: java.lang.String sign(java.lang.String,java.lang.String,java.security.cert.Certificate)>
		SHA-256: 3fd828ce96fa98300d24a78d3099f09a4f64a8bac04a5af2498704d06ed3b173
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.KeyPair
		Statement: $r7 = virtualinvoke r5.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <org.apache.abdera.security.util.DHContext: void init(java.math.BigInteger,java.math.BigInteger,int,byte[])>
		SHA-256: 826a766e962499a727b66861fd29f9e20abf3b1cf711fa1a59027d04841342ac
		Secure: true
	Object:
		Variable: r1
		Type: byte[]
		Statement: virtualinvoke r8.<java.security.SecureRandom: void nextBytes(byte[])>(r1)
		Method: <org.apache.abdera.ext.oauth.OAuthScheme: java.lang.String generateNonce()>
		SHA-256: e49edeaa4a1a418068c3a80d817910f0914c9652ea62da2287f94be0d0ba1b7a
		Secure: true
	Object:
		Variable: r4
		Type: javax.crypto.KeyGenerator
		Statement: r4 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(r45)
		Method: <org.apache.abdera.ext.oauth.OAuthScheme: java.lang.String sign(java.lang.String,java.lang.String,java.security.cert.Certificate)>
		SHA-256: 575c8498caad89c1335dd4a4d44f4d1732b2de8e49d1e948091007ae7f0e866f
		Secure: true
	Object:
		Variable: $r12
		Type: javax.net.ssl.KeyManager[]
		Statement: $r12 = virtualinvoke r18.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <org.apache.abdera.protocol.client.util.ClientAuthSSLProtocolSocketFactory: java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int,org.apache.commons.httpclient.params.HttpConnectionParams)>
		SHA-256: 91e277bfd25db39f336132f1d1a988ca523d9ec2e1c9962314d85ba3654b82a6
		Secure: false
	Object:
		Variable: $r20
		Type: byte[]
		Statement: r6 = virtualinvoke r5.<javax.crypto.Mac: byte[] doFinal(byte[])>($r20)
		Method: <org.apache.abdera.ext.oauth.OAuthScheme: java.lang.String sign(java.lang.String,java.lang.String,java.security.cert.Certificate)>
		SHA-256: 5c11d55c4fbae3d22fe642bda977677c0b2ccf91ea4840f21892ba3fce3c7e0a
		Secure: true
	Object:
		Variable: r7
		Type: java.security.KeyStore
		Statement: r7 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(r1)
		Method: <org.apache.abdera.protocol.client.util.ClientAuthSSLProtocolSocketFactory: java.security.KeyStore initKeyStore(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: d1c9cff83bd9bfeddedf6c9f14052ed62c75dbb139dac221ff94652eb2fc7bbc
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.KeyPair
		Statement: $r7 = virtualinvoke r5.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <org.apache.abdera.security.util.DHContext: void init(java.math.BigInteger,java.math.BigInteger,int,byte[])>
		SHA-256: 5dab53b726a9bc381eae316c0991824418fc321db78e7d0cc0b4a39cb4c3d12f
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: virtualinvoke r8.<java.security.SecureRandom: void nextBytes(byte[])>(r1)
		Method: <org.apache.abdera.ext.wsse.WSSEAuthScheme: java.lang.String generateNonce()>
		SHA-256: 9d6d4bfad6bd39b14d8a3a9036147ce10100838bfd6ae9b126abbaae62956886
		Secure: true
	Object:
		Variable: r1
		Type: javax.crypto.KeyGenerator
		Statement: r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(r0)
		Method: <org.apache.abdera.security.util.KeyHelper: java.security.Key generateKey(java.lang.String)>
		SHA-256: aff20ffa1a467872ef07a553b699c2cb39e5899f7bdbfcc809170032cbf41ae1
		Secure: true
	Object:
		Variable: r8
		Type: java.security.SecureRandom
		Statement: r8 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer11990)
		Method: <org.apache.abdera.ext.oauth.OAuthScheme: java.lang.String generateNonce()>
		SHA-256: 26ee9f4d5494cadb4221da907e9dc3a0969c8436ea169f3d97d9ee11e3ad35f2
		Secure: true
	Object:
		Variable: r47
		Type: javax.crypto.Cipher
		Statement: r47 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer12000)
		Method: <org.apache.abdera.ext.oauth.OAuthScheme: java.lang.String sign(java.lang.String,java.lang.String,java.security.cert.Certificate)>
		SHA-256: c398d79bba50b89c5575ab5f5e0767ff2d42cd8fe219a016ae189a20c1f0cfb3
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.KeyPair
		Statement: $r4 = virtualinvoke r2.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <org.apache.abdera.security.util.KeyHelper: java.security.KeyPair generateKeyPair(java.lang.String,int,java.lang.String)>
		SHA-256: 2569526be1bd32799bb9e83d07eb159e27fe08c254a47954af6c134f303cacfd
		Secure: true
	Object:
		Variable: r4
		Type: javax.net.ssl.SSLContext
		Statement: r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r6)
		Method: <org.apache.abdera.protocol.client.util.ClientAuthSSLProtocolSocketFactory: java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int,org.apache.commons.httpclient.params.HttpConnectionParams)>
		SHA-256: 60e3396a65dfa66e48496ecc494a9534936010810e85985f449085845cd0f5dc
		Secure: false
	Object:
		Variable: r48
		Type: byte[]
		Statement: r48 = virtualinvoke r47.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r28)
		Method: <org.apache.abdera.ext.oauth.OAuthScheme: java.lang.String sign(java.lang.String,java.lang.String,java.security.cert.Certificate)>
		SHA-256: ceac9c88d595b398db487a724e8f574e0981c83b82fa18bf3bf011b56dc1880e
		Secure: true
	Object:
		Variable: r3
		Type: java.security.SecureRandom
		Statement: r3 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.lang.String)>(varReplacer11141, r1)
		Method: <org.apache.abdera.security.util.KeyHelper: java.security.KeyPair generateKeyPair(java.lang.String,int,java.lang.String)>
		SHA-256: e5bcf7ed5444086eeb03726e77923c514ee4c57bef3e2c0ced610235dfe05126
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.apache.abdera.security.util.KeyHelper: java.security.Key generateKey(java.lang.String)>
		SHA-256: 9097b7c1f1995d4f329927d9b66dced022f21bcd0e7a97963a3d1dd345aafbcc
		Secure: false
	Object:
		Variable: r16
		Type: java.security.KeyStore
		Statement: r16 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer11185)
		Method: <org.apache.abdera.security.util.filters.SignedResponseFilter: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: f50d4e888489c8b8fc99793e689d9c2eb0d84a242fe8f338f249cd0dd1591c80
		Secure: false
	Object:
		Variable: r2
		Type: java.security.KeyPairGenerator
		Statement: r2 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>(r0, r1)
		Method: <org.apache.abdera.security.util.KeyHelper: java.security.KeyPair generateKeyPair(java.lang.String,int,java.lang.String)>
		SHA-256: cffb1da2760eb402291f74fa4b5df0db8ea5805310f5c83a2dd7b13a6beeef9
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.apache.abdera.security.util.KeyHelper: java.security.Key generateKey(java.lang.String)>
		SHA-256: cc087508470e62757ec351fb6c76069ee564de8b3f5236f988b2a5db0301857b
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.apache.abdera.security.util.KeyHelper: java.security.Key generateKey(java.lang.String)>
		SHA-256: a4555db63eb921c34584b0d1b8e39106c3dde289dbefe4caf7bb42d43b56491d
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer221)
		Method: <org.apache.abdera.protocol.client.util.SimpleSSLProtocolSocketFactory: void init(javax.net.ssl.TrustManager)>
		SHA-256: b0a65bcf70474ac2b92409baab3b2fa356c6a40ac1da9f816e0649063ea5bab8
		Secure: false
	Object:
		Variable: r3
		Type: java.security.KeyStore
		Statement: r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(r0)
		Method: <org.apache.abdera.security.util.KeyHelper: java.security.KeyStore loadKeystore(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 9319dd8c4c57f81b9fe97735a61532a08e7fb9c3d385c87321f3b627012e244b
		Secure: false
	Object:
		Variable: r18
		Type: javax.net.ssl.KeyManagerFactory
		Statement: r18 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r7)
		Method: <org.apache.abdera.protocol.client.util.ClientAuthSSLProtocolSocketFactory: java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int,org.apache.commons.httpclient.params.HttpConnectionParams)>
		SHA-256: c8cea3848e9a8cd9092f39d00f94d9b73dd8735c14508e7b97f15d3c04ac8ac8
		Secure: false
	Object:
		Variable: $r28
		Type: byte[]
		Statement: r48 = virtualinvoke r47.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r28)
		Method: <org.apache.abdera.ext.oauth.OAuthScheme: java.lang.String sign(java.lang.String,java.lang.String,java.security.cert.Certificate)>
		SHA-256: cc3b460bfcf026838d11741c2e7610b05dd9db4bfe5b08dddad76840f640cc76
		Secure: true
	Object:
		Variable: r8
		Type: java.security.SecureRandom
		Statement: r8 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer12347)
		Method: <org.apache.abdera.ext.wsse.WSSEAuthScheme: java.lang.String generateNonce()>
		SHA-256: aa034d707353b1d9e7aada0f8d2f9bcde6f2ea040bcfb40374ab37a31ae2ecce
		Secure: true
	Object:
		Variable: r1
		Type: javax.crypto.KeyGenerator
		Statement: r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(r0)
		Method: <org.apache.abdera.security.util.KeyHelper: javax.crypto.SecretKey generateSecretKey(java.lang.String,int)>
		SHA-256: a295119cc9b5c6755f935e48abc25e3de5029ebebceaf2846373b8851c926a5e
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.KeyPair
		Statement: $r3 = virtualinvoke r1.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <org.apache.abdera.security.util.KeyHelper: java.security.KeyPair generateKeyPair(java.lang.String,int)>
		SHA-256: 65dc1080511f5e93ab1906eb84e2f302f6c7c6c3f954effc8dbace37d27d6b9e
		Secure: true
	Object:
		Variable: $r11
		Type: java.security.Key
		Statement: $r11 = virtualinvoke r16.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>(r3, $r10)
		Method: <org.apache.abdera.security.util.filters.SignedResponseFilter: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: cef9fce40eebeda582a09b680ea608bc028ca5a8d1211155fac9ca500e9711b9
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.PublicKey
		Statement: $r6 = virtualinvoke $r5.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <org.apache.abdera.security.util.DHContext: java.lang.String getResponseString()>
		SHA-256: 44014200bf357328dfbc8c5886f7c564032208e6544b61789ee52e02bb0b3885
		Secure: true
	Object:
		Variable: r14
		Type: byte[]
		Statement: r14 = virtualinvoke r12.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.abdera.util.EntityTag: org.apache.abdera.util.EntityTag generate(java.lang.String[])>
		SHA-256: 9285a3e95040acc81cd7f7da09bb9b57a493dfdb84e468fad29fb972c5b88ca
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.apache.abdera.security.util.KeyHelper: javax.crypto.SecretKey generateSecretKey(java.lang.String,int,java.lang.String)>
		SHA-256: f2608ac04378d1079b5844a01b64f2da8bef5a115efdbc2f3cf3e93aa6734015
		Secure: true
	Object:
		Variable: $r11
		Type: byte[]
		Statement: $r12 = virtualinvoke r17.<java.security.MessageDigest: byte[] digest(byte[])>($r11)
		Method: <org.apache.abdera.ext.wsse.WSSEAuthScheme: java.lang.String generatePasswordDigest(java.lang.String,java.lang.String,org.apache.abdera.model.AtomDate)>
		SHA-256: a4ab9583bf478a72be660b46620ce586c2835ca944b9699ace1051967f1ccf8b
		Secure: false
	Object:
		Variable: r2
		Type: javax.crypto.KeyGenerator
		Statement: r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>(r0, r1)
		Method: <org.apache.abdera.security.util.KeyHelper: javax.crypto.SecretKey generateSecretKey(java.lang.String,int,java.lang.String)>
		SHA-256: e0358798d2dfd02f2d2fef524244ace7ab99d460eea81d0c80ad14e69454a0a6
		Secure: true
	Object:
		Variable: $r12
		Type: byte[]
		Statement: $r12 = virtualinvoke r17.<java.security.MessageDigest: byte[] digest(byte[])>($r11)
		Method: <org.apache.abdera.ext.wsse.WSSEAuthScheme: java.lang.String generatePasswordDigest(java.lang.String,java.lang.String,org.apache.abdera.model.AtomDate)>
		SHA-256: b8628c7350b774d5e08874c54183b8de5b9e4db1e95887b60029887ba2851ab8
		Secure: false
	Object:
		Variable: r1
		Type: java.security.KeyPairGenerator
		Statement: r1 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(r0)
		Method: <org.apache.abdera.security.util.KeyHelper: java.security.KeyPair generateKeyPair(java.lang.String,int)>
		SHA-256: fee7a060cb360d0b078cffb5579c9d87a0080b3c44d18aebb618a01b952a2032
		Secure: true
	Object:
		Variable: $r19
		Type: javax.crypto.SecretKey
		Statement: $r19 = virtualinvoke r4.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <org.apache.abdera.ext.oauth.OAuthScheme: java.lang.String sign(java.lang.String,java.lang.String,java.security.cert.Certificate)>
		SHA-256: 371e4cb16540d722412de16bb393790b6a5bc47ce5541b97a4c3c34062acb4e8
		Secure: true

Findings in Java Class: org.apache.abdera.protocol.client.util.ClientAuthSSLProtocolSocketFactory

	 in Method: java.security.KeyStore initKeyStore(java.lang.String,java.lang.String,java.lang.String)
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #d1c9cff83bd9bfeddedf6c9f14052ed62c75dbb139dac221ff94652eb2fc7bbc)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r7.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r4, $r5)


	 in Method: java.net.Socket createSocket(java.lang.String,int,java.net.InetAddress,int,org.apache.commons.httpclient.params.HttpConnectionParams)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r12, r25, varReplacer127)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #c8cea3848e9a8cd9092f39d00f94d9b73dd8735c14508e7b97f15d3c04ac8ac8)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r18.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r10, $r11)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r12, r25, varReplacer127)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r18.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r10, $r11)


Findings in Java Class: org.apache.abdera.protocol.client.util.SimpleSSLProtocolSocketFactory

	 in Method: void init(javax.net.ssl.TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer219, $r4, varReplacer219)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer219, $r4, varReplacer219)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #b0a65bcf70474ac2b92409baab3b2fa356c6a40ac1da9f816e0649063ea5bab8)
			First parameter (with value "SSL") should be any of {TLSv1.2}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer221)


Findings in Java Class: org.apache.abdera.util.EntityTag

	 in Method: org.apache.abdera.util.EntityTag generate(java.lang.String[])
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #221bcc7034987b2bbe4c50aefa53e93560f38c4f9ee04797eee8dab5dad7e5f8)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: r14 = virtualinvoke r12.<java.security.MessageDigest: byte[] digest()>()

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #221bcc7034987b2bbe4c50aefa53e93560f38c4f9ee04797eee8dab5dad7e5f8)
			First parameter (with value "md5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r12 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1342)


Findings in Java Class: org.apache.abdera.security.util.KeyHelper

	 in Method: java.security.KeyStore loadKeystore(java.lang.String,java.lang.String)
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #2fc7c1b7b4d0b1087ef7b34d762e9fb042cf59c94acda649e6fa922d8f52910a)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r2.<java.security.KeyStore: void load(java.io.InputStream,char[])>(r10, $r6)


	 in Method: java.security.KeyStore loadKeystore(java.lang.String,java.lang.String,java.lang.String)
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #9319dd8c4c57f81b9fe97735a61532a08e7fb9c3d385c87321f3b627012e244b)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r3.<java.security.KeyStore: void load(java.io.InputStream,char[])>(r10, $r6)


Findings in Java Class: org.apache.abdera.security.util.filters.SignedResponseFilter

	 in Method: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #f50d4e888489c8b8fc99793e689d9c2eb0d84a242fe8f338f249cd0dd1591c80)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r16.<java.security.KeyStore: void load(java.io.InputStream,char[])>(r7, $r9)


Findings in Java Class: org.apache.abdera.ext.wsse.WSSEAuthScheme

	 in Method: java.lang.String generatePasswordDigest(java.lang.String,java.lang.String,org.apache.abdera.model.AtomDate)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #7b34e334c912e77d02d404dc650cae216ae4973cd6808f29ba9767f4231ab4c7)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r17 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer12346)


Findings in Java Class: org.apache.abdera.security.util.DHContext

	 in Method: void init()
		RequiredPredicateError violating CrySL rule for java.security.KeyPairGenerator
			First parameter was not properly generated as prepared D H
			at statement: virtualinvoke r4.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec)>(r3)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 47

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 3
	TypestateError: 1
	RequiredPredicateError: 6
	NeverTypeOfError: 5
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 2 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 7.884 s

Current Proejct: original-abdera-bundle-1.2-SNAPSHOT.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 497.7 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.210 s

Current Proejct: abdera-extensions-serializer-1.2-SNAPSHOT.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 421.5 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.271 s

Current Proejct: abdera-extensions-json-1.2-SNAPSHOT.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 409.6 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.237 s

Current Proejct: arquillian-junit.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 527.8 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.266 s

Current Proejct: abdera-extensions-html-1.2-SNAPSHOT.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 439.8 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.145 s

Current Proejct: abdera-filesystem-1.2-SNAPSHOT.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 511.8 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.397 s

Current Proejct: abdera-extensions-features-1.2-SNAPSHOT.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 413.2 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.133 s

Current Proejct: abdera-extensions-main-1.2-SNAPSHOT.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 428.2 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.196 s

Current Proejct: abdera-extensions-opensearch-1.2-SNAPSHOT.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 463.6 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.343 s

Current Proejct: commons-codec.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 399.9 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 1 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 5
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.2

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 5
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.4

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 5
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.6

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 5
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.8

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <org.apache.commons.codec.digest.DigestUtils: byte[] md5(byte[])>
		SHA-256: a4b7e841fc462f8d73a506e9805cd4d1408ef7266e8613db710f40ddac41b158
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <org.apache.commons.codec.digest.DigestUtils: byte[] md5(byte[])>
		SHA-256: 4a4dd18e6187b325d9cb47c1cd7cc8489f28760532723e1ba285d1f23b4d1c9d
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r0)
		Method: <org.apache.commons.codec.digest.DigestUtils: java.security.MessageDigest getDigest(java.lang.String)>
		SHA-256: e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337
		Secure: false
	Object:
		Variable: r0
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <org.apache.commons.codec.digest.DigestUtils: byte[] sha(byte[])>
		SHA-256: 9fa58850892e4912611f0ae44f0e3f2633efc2e19a1b89ae59ee3d47cebea811
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>(r0)
		Method: <org.apache.commons.codec.digest.DigestUtils: byte[] sha(byte[])>
		SHA-256: a857946cfb971a6a666a25c2e3477c877e2f7589100ab4644c7210284daad93e
		Secure: false

Findings in Java Class: org.apache.commons.codec.digest.DigestUtils

	 in Method: java.security.MessageDigest getDigest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			First parameter (with value "SHA") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r0)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e94efa5cd6a074cbc7f340e6b0489579fadcb1ac712ddde46b23e0f79b389337)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r0)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 5

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 2
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.418 s

Current Proejct: junit.jar
[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 459.0 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 0 analysis seeds within 0 seconds!
Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 

======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 0
No violation of any of the rules found.=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.876 s
