[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 438.9 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 2 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 2
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 3
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: $r5 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer235)
		Method: <org.glassfish.jersey.client.authentication.DigestAuthenticator: void <init>(org.glassfish.jersey.client.authentication.HttpAuthenticationFilter$Credentials,int)>
		SHA-256: 64683638c25a9eb4cd9c8e41d5951cecec2b41b63d04752c34cd488a788e0161
		Secure: true
	Object:
		Variable: r14
		Type: java.security.MessageDigest
		Statement: r14 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer280)
		Method: <org.glassfish.jersey.client.authentication.DigestAuthenticator: java.lang.String md5(java.lang.String[])>
		SHA-256: e87af90096bb98792ce3cb1a60f455e382dacf8254c3f6747535750c11716c9
		Secure: false
	Object:
		Variable: r16
		Type: byte[]
		Statement: r16 = virtualinvoke r14.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.glassfish.jersey.client.authentication.DigestAuthenticator: java.lang.String md5(java.lang.String[])>
		SHA-256: 90829e2f0f1888ba5bd45a4dbbf2ed9f630f574666c82ebb3fcae9594ba3c0b8
		Secure: false

Findings in Java Class: org.glassfish.jersey.client.authentication.DigestAuthenticator

	 in Method: java.lang.String md5(java.lang.String[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e87af90096bb98792ce3cb1a60f455e382dacf8254c3f6747535750c11716c9)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: r14 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer280)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 3

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 1
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 1.821 s

