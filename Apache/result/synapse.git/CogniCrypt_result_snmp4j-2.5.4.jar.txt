[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 488.3 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 16 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.06

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 17
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.12

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 18
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.17

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 19
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.21

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 20
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.25

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 21
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.29

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 31
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.23

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 31
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.26

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 33
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.27

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 34
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.29

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 34
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.32

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 12 of 36
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 13 of 37
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.35

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 14 of 37
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.38

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 15 of 37
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.41

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 16 of 38
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.42

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 17 of 38
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.45

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 18 of 38
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.47

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 19 of 38
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 20 of 38
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.53

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 21 of 38
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.55

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 22 of 38
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.58

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 23 of 38
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.61

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 24 of 38
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.63

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 25 of 38
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.66

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 26 of 38
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.68

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 27 of 38
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.71

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 28 of 38
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.74

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 29 of 38
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.76

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 30 of 38
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.79

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 31 of 38
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.82

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 32 of 38
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.84

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 33 of 38
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.87

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 34 of 38
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.89

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 35 of 38
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.92

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 36 of 38
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.95

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 37 of 38
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.97

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r2)
		Method: <org.snmp4j.security.PrivacyGeneric: javax.crypto.Cipher doInit(byte[],byte[])>
		SHA-256: d201935da625698a3993a9f210d9b105ccc433d66ede080d63fc5d06ab6f8e14
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>(r1, varReplacer2403, $i0, $r7)
		Method: <org.snmp4j.security.PrivacyGeneric: javax.crypto.Cipher doInit(byte[],byte[])>
		SHA-256: 6d61b6962e7f9ba87f7266b44c2841dab057e95b96bc70fb30289ac26e125168
		Secure: false
	Object:
		Variable: $r11
		Type: javax.net.ssl.TrustManager[]
		Statement: $r11 = virtualinvoke r3.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <org.snmp4j.transport.TLSTM$DefaultSSLEngineConfiguration: javax.net.ssl.SSLContext getSSLContext(boolean,org.snmp4j.TransportStateReference)>
		SHA-256: d9a2aec13c3217af4ffc164d52931be62bc9820d87fbf52ff63b288d792b0462
		Secure: false
	Object:
		Variable: r15
		Type: byte[]
		Statement: r15 = virtualinvoke r16.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>(r1, i0, i1)
		Method: <org.snmp4j.security.PrivacyGeneric: byte[] doDecrypt(byte[],int,int,byte[],byte[])>
		SHA-256: 1ded6b100475c0bfbb69652d40453ddd4636d86b2c305d5d05416de2a88df951
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: r7 = virtualinvoke r4.<java.security.MessageDigest: byte[] digest(byte[])>(r1)
		Method: <org.snmp4j.security.AuthGeneric: boolean authenticate(byte[],byte[],int,int,org.snmp4j.security.ByteArrayWindow)>
		SHA-256: 63d9d97e710ed533bb07435f9958d85ceed9e8989ea594afcaa2a231f3f24908
		Secure: true
	Object:
		Variable: r26
		Type: byte[]
		Statement: r26 = virtualinvoke r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.snmp4j.security.AuthGeneric: byte[] passwordToKey(org.snmp4j.smi.OctetString,byte[])>
		SHA-256: 61a8059cdc38fd3bbbfb565b622d3f07bf5bbdbaae935e4a5f960cdf9d78b5ff
		Secure: true
	Object:
		Variable: r1
		Type: byte[]
		Statement: r57 = virtualinvoke r58.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>(r1, i0, i1)
		Method: <org.snmp4j.security.PrivAES: byte[] encrypt(byte[],int,int,byte[],long,long,org.snmp4j.security.DecryptParams)>
		SHA-256: 9d7a6acb0abf1c573bbb35c390aecde5d432d05d965a2585a4e8b4700e3b07f8
		Secure: false
	Object:
		Variable: $r17
		Type: javax.net.ssl.SSLEngine
		Statement: $r17 = virtualinvoke r5.<javax.net.ssl.SSLContext: javax.net.ssl.SSLEngine createSSLEngine(java.lang.String,int)>($r16, $i4)
		Method: <org.snmp4j.transport.TLSTM$SocketEntry: void <init>(org.snmp4j.transport.TLSTM,org.snmp4j.smi.TcpAddress,java.net.Socket,boolean,org.snmp4j.TransportStateReference)>
		SHA-256: e23ef86e71c68b705710227e10075b5133f4b150d4d5c913880a13ae29a4aa4c
		Secure: false
	Object:
		Variable: r51
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke r51.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>(r1, varReplacer2418, $i2, $r6)
		Method: <org.snmp4j.security.PrivacyGeneric: boolean isSupported()>
		SHA-256: 225b1584e819d9927e657979a45fed9d465413f5860886fb917b3c5b6ab571b3
		Secure: false
	Object:
		Variable: r5
		Type: javax.net.ssl.KeyManagerFactory
		Statement: r5 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(varReplacer1839)
		Method: <org.snmp4j.transport.TLSTM$DefaultSSLEngineConfiguration: javax.net.ssl.SSLContext getSSLContext(boolean,org.snmp4j.TransportStateReference)>
		SHA-256: 1b039ec7ba11207fe6a2c78942207e1d229c79c82dbb920dbd82a134ed0e17e2
		Secure: false
	Object:
		Variable: r7
		Type: byte[]
		Statement: r7 = virtualinvoke r4.<java.security.MessageDigest: byte[] digest(byte[])>(r1)
		Method: <org.snmp4j.security.AuthGeneric: boolean authenticate(byte[],byte[],int,int,org.snmp4j.security.ByteArrayWindow)>
		SHA-256: 3234cdb6c5561bb5787fea35ac7d4645ac0d515d9c3598ff19fc118a6e2c8226
		Secure: true
	Object:
		Variable: $r11
		Type: byte[]
		Statement: $r11 = virtualinvoke r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.snmp4j.security.AuthGeneric: byte[] changeDelta(byte[],byte[],byte[])>
		SHA-256: ed294b578ec20ca7d479386deab24635db5dc24f4b3da4819860b51825110bba
		Secure: true
	Object:
		Variable: r10
		Type: javax.crypto.Cipher
		Statement: r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r9)
		Method: <org.snmp4j.security.PrivacyGeneric: javax.crypto.Cipher doInit(byte[],byte[])>
		SHA-256: 1dc3e8e3304bad266ffe666a6ecb52f5fbaf29c001692bed4852ad1f9ec14b5d
		Secure: false
	Object:
		Variable: r8
		Type: byte[]
		Statement: r8 = virtualinvoke r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.snmp4j.security.AuthGeneric: boolean authenticate(byte[],byte[],int,int,org.snmp4j.security.ByteArrayWindow)>
		SHA-256: 1ecf1226c9ba1f5833d8b7c4f0582bf3162782b297f38cb8bb493dd192b00169
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.snmp4j.security.AuthGeneric: byte[] hash(byte[],int,int)>
		SHA-256: 6d76a4f73e6e43694a7ac95c0da89770627d420c41429c9c7b065ddb163f484e
		Secure: true
	Object:
		Variable: r14
		Type: java.security.SecureRandom
		Statement: r14 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer2337)
		Method: <org.snmp4j.security.Salt: void <init>()>
		SHA-256: 724c6087eab203fa45deb95a960dd383db67b35cf47155b7d4cbf829a9308f0c
		Secure: true
	Object:
		Variable: r1
		Type: java.security.MessageDigest
		Statement: r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r24)
		Method: <org.snmp4j.transport.TLSTM: org.snmp4j.smi.OctetString getFingerprint(java.security.cert.X509Certificate)>
		SHA-256: d02cb4da1b4571f321665cf09ccd55c4630264d249b632caf78694ecea3a5861
		Secure: true
	Object:
		Variable: r1
		Type: byte[]
		Statement: virtualinvoke r14.<java.security.SecureRandom: void nextBytes(byte[])>(r1)
		Method: <org.snmp4j.security.Salt: void <init>()>
		SHA-256: f30872e381e97117fb1d3b1ab05eb192121cafa3d7af15e63a365c452dbeed11
		Secure: true
	Object:
		Variable: $r13
		Type: javax.net.ssl.KeyManager[]
		Statement: $r13 = virtualinvoke r5.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <org.snmp4j.transport.TLSTM$DefaultSSLEngineConfiguration: javax.net.ssl.SSLContext getSSLContext(boolean,org.snmp4j.TransportStateReference)>
		SHA-256: 530c8e131c1578cbb563b9944acebd8a090a535285c7cfcbdd7a385796f2e1ff
		Secure: false
	Object:
		Variable: $r7
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>(r1, varReplacer2403, $i0, $r7)
		Method: <org.snmp4j.security.PrivacyGeneric: javax.crypto.Cipher doInit(byte[],byte[])>
		SHA-256: fe78418a3aa34eb271baebff2dc7ace2a59bf6ec0f5958b3263dd11665f1db69
		Secure: false
	Object:
		Variable: r16
		Type: javax.crypto.Cipher
		Statement: r16 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r11)
		Method: <org.snmp4j.security.PrivacyGeneric: byte[] doDecrypt(byte[],int,int,byte[],byte[])>
		SHA-256: 3ebfd6fa2532640a42902a5eb17e1b8b911f9fe223165f4f5408702371ead7e6
		Secure: false
	Object:
		Variable: r52
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke r52.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r46)
		Method: <org.snmp4j.security.PrivacyGeneric: boolean isSupported()>
		SHA-256: 8d55280cec0a39bd0bc88a4b160033ebf5d587c5978a9f39928eb1d45c5e5ce9
		Secure: false
	Object:
		Variable: r57
		Type: byte[]
		Statement: r57 = virtualinvoke r58.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>(r1, i0, i1)
		Method: <org.snmp4j.security.PrivAES: byte[] encrypt(byte[],int,int,byte[],long,long,org.snmp4j.security.DecryptParams)>
		SHA-256: bc6e705650fa581eb684caeb7eb4baa741b49c1e3a5e240f7e502f51b4fd8df4
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.snmp4j.security.AuthGeneric: byte[] hash(byte[])>
		SHA-256: 6d76a4f73e6e43694a7ac95c0da89770627d420c41429c9c7b065ddb163f484e
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.snmp4j.transport.TLSTM: org.snmp4j.smi.OctetString getFingerprint(java.security.cert.X509Certificate)>
		SHA-256: 3e772dbae2ed09fef7ef552862311b6fdb37b2ead25b917f2072b2c6df46d038
		Secure: true
	Object:
		Variable: $r6
		Type: java.lang.String
		Statement: specialinvoke r51.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>(r1, varReplacer2418, $i2, $r6)
		Method: <org.snmp4j.security.PrivacyGeneric: boolean isSupported()>
		SHA-256: 50905a858e6972eac3e5b4d4e68b6a5fb7e231a343cd9ab95a5788ad7675082
		Secure: false
	Object:
		Variable: r1
		Type: byte[]
		Statement: r15 = virtualinvoke r16.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>(r1, i0, i1)
		Method: <org.snmp4j.security.PrivacyGeneric: byte[] doDecrypt(byte[],int,int,byte[],byte[])>
		SHA-256: c0dc873c4218d0bc29c5c068f833361eeb9347d7368bc5609bad2c45874decb1
		Secure: false
	Object:
		Variable: r2
		Type: javax.net.ssl.SSLContext
		Statement: r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(r105)
		Method: <org.snmp4j.transport.TLSTM$DefaultSSLEngineConfiguration: javax.net.ssl.SSLContext getSSLContext(boolean,org.snmp4j.TransportStateReference)>
		SHA-256: 16fe07db4586370ad6748e902bb0d184e055d5c0e1f3990ed304fdd702d99edc
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r3)
		Method: <org.snmp4j.security.PrivacyGeneric: byte[] doDecrypt(byte[],int,int,byte[],byte[])>
		SHA-256: 1269710f04ef4ebfb6256c2d39a00509c94742ef6073898dac24aac1b6b24b14
		Secure: false
	Object:
		Variable: r45
		Type: javax.crypto.Cipher
		Statement: r45 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r8)
		Method: <org.snmp4j.security.PrivacyGeneric: boolean isSupported()>
		SHA-256: 7f5f7d7fe48db48baa353f7f4ab463b644c4173796054e5e015efc87afabbf82
		Secure: false
	Object:
		Variable: $r25
		Type: byte[]
		Statement: $r25 = virtualinvoke r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.snmp4j.security.AuthGeneric: byte[] changeDelta(byte[],byte[],byte[])>
		SHA-256: 7a2d20d6fe9862489f4be10cffa376fbe0d01503e6dcbeeb115eb60cad48f078
		Secure: true
	Object:
		Variable: r27
		Type: byte[]
		Statement: r27 = virtualinvoke r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.snmp4j.security.AuthGeneric: byte[] passwordToKey(org.snmp4j.smi.OctetString,byte[])>
		SHA-256: 29c9b8649c6b75c07e7ae810c5ea8b73248e03ffa65bbc60ca5f8b4f7c61b853
		Secure: true
	Object:
		Variable: r9
		Type: byte[]
		Statement: r9 = virtualinvoke r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.snmp4j.security.AuthGeneric: boolean authenticate(byte[],byte[],int,int,org.snmp4j.security.ByteArrayWindow)>
		SHA-256: fa1806b55b03d8359bfae1bb5b6165b2552eea511c6c9b32b23046c11be003c1
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>(r2, varReplacer2407, $i2, $r8)
		Method: <org.snmp4j.security.PrivacyGeneric: byte[] doDecrypt(byte[],int,int,byte[],byte[])>
		SHA-256: 7b0dbd29197090bece6d2529593f1a61529500be5c26e726a23cd65c9931736c
		Secure: false
	Object:
		Variable: $r8
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>(r2, varReplacer2407, $i2, $r8)
		Method: <org.snmp4j.security.PrivacyGeneric: byte[] doDecrypt(byte[],int,int,byte[],byte[])>
		SHA-256: 6c775f9d4ee168de4ba554ba9c1dd451cd35cd8bc4359ee12203ce56cbaae262
		Secure: false
	Object:
		Variable: r3
		Type: javax.net.ssl.TrustManagerFactory
		Statement: r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(varReplacer1834)
		Method: <org.snmp4j.transport.TLSTM$DefaultSSLEngineConfiguration: javax.net.ssl.SSLContext getSSLContext(boolean,org.snmp4j.TransportStateReference)>
		SHA-256: aa7217e5aeeb1b9d9287c51ae27590da58a78485aacc96fa912e32fd20169966
		Secure: false
	Object:
		Variable: r106
		Type: java.security.KeyStore
		Statement: r106 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer1835)
		Method: <org.snmp4j.transport.TLSTM$DefaultSSLEngineConfiguration: javax.net.ssl.SSLContext getSSLContext(boolean,org.snmp4j.TransportStateReference)>
		SHA-256: febe6b21df3c481da75cd1a9402de8076d0adb21d0956dd82fc9fdf3f85849f7
		Secure: false
	Object:
		Variable: r1
		Type: java.security.MessageDigest
		Statement: r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)
		Method: <org.snmp4j.security.AuthGeneric: java.security.MessageDigest getDigestObject()>
		SHA-256: 24a8997783c830625eb1de7ec5aa7736d67cc4fe2089577a85489d9524017319
		Secure: false

Findings in Java Class: org.snmp4j.transport.TLSTM$DefaultSSLEngineConfiguration

	 in Method: javax.net.ssl.SSLContext getSSLContext(boolean,org.snmp4j.TransportStateReference)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r3.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(r106)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #16fe07db4586370ad6748e902bb0d184e055d5c0e1f3990ed304fdd702d99edc)
			First parameter (with value "TLSv1") should be any of {TLSv1.2}
			at statement: r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(r105)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generated Trust Manager
			at statement: virtualinvoke r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r13, r131, varReplacer1832)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #1b039ec7ba11207fe6a2c78942207e1d229c79c82dbb920dbd82a134ed0e17e2)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r5.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r106, $r113)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generated Key Store
			at statement: virtualinvoke r5.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r106, $r113)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #febe6b21df3c481da75cd1a9402de8076d0adb21d0956dd82fc9fdf3f85849f7)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke r106.<java.security.KeyStore: void load(java.io.InputStream,char[])>(r4, $r112)

		ConstraintError violating CrySL rule for javax.net.ssl.TrustManagerFactory (on Object #aa7217e5aeeb1b9d9287c51ae27590da58a78485aacc96fa912e32fd20169966)
			First parameter (with value "SunPKIX") should be any of {PKIX, SunX509}
			at statement: r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(varReplacer1834)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generated Key Manager
			at statement: virtualinvoke r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r13, r131, varReplacer1832)


Findings in Java Class: org.snmp4j.security.AuthGeneric

	 in Method: byte[] passwordToKey(org.snmp4j.smi.OctetString,byte[])
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #24a8997783c830625eb1de7ec5aa7736d67cc4fe2089577a85489d9524017319)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: r26 = virtualinvoke r3.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: org.snmp4j.security.PrivacyGeneric

	 in Method: boolean isSupported()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke r52.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r46)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke r51.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>(r1, varReplacer2418, $i2, $r6)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #7f5f7d7fe48db48baa353f7f4ab463b644c4173796054e5e015efc87afabbf82)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke r45.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2410, r2, r3)


	 in Method: javax.crypto.Cipher doInit(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>(r1, varReplacer2403, $i0, $r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r10.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2404, r3, r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared G C M
			at statement: virtualinvoke r10.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2404, r3, r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared I V
			at statement: virtualinvoke r10.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2404, r3, r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r2)


	 in Method: byte[] doDecrypt(byte[],int,int,byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as prepared G C M
			at statement: virtualinvoke r16.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2408, r4, r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r16.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2408, r4, r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],int,int,java.lang.String)>(r2, varReplacer2407, $i2, $r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r3)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 38

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 2
	IncompleteOperationError: 1
	NeverTypeOfError: 2
	TypestateError: 1
	RequiredPredicateError: 15
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 2 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 5.686 s

