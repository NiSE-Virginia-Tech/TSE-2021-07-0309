<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>SpotBugs Report</title>
<style type="text/css">
		.tablerow0 {
			background: #EEEEEE;
		}

		.tablerow1 {
			background: white;
		}

		.detailrow0 {
			background: #EEEEEE;
		}

		.detailrow1 {
			background: white;
		}

		.tableheader {
			background: #b9b9fe;
			font-size: larger;
		}

		.tablerow0:hover, .tablerow1:hover {
			background: #aaffaa;
		}

		.priority-1 {
		    color: red;
		    font-weight: bold;
		}
		.priority-2 {
		    color: orange;
		    font-weight: bold;
		}
		.priority-3 {
		    color: green;
		    font-weight: bold;
		}
		.priority-4 {
		    color: blue;
		    font-weight: bold;
		}
		</style>
<script type="text/javascript">
			function toggleRow(elid) {
				if (document.getElementById) {
					element = document.getElementById(elid);
					if (element) {
						if (element.style.display == 'none') {
							element.style.display = 'block';
							//window.status = 'Toggle on!';
						} else {
							element.style.display = 'none';
							//window.status = 'Toggle off!';
						}
					}
				}
			}
		</script>
</head>
<body>
<h1>
<a href="https://spotbugs.github.io/">SpotBugs</a> Report</h1>
<h2>Project Information</h2>
<p>Project: 
		</p>
<p>SpotBugs version: 3.1.12</p>
<p>Code analyzed:</p>
<ul>
<li>/home/x/CryptoAPIDetect/dataset/group/synapse.git/saxon.jar</li>
</ul>
<p>
<br/>
<br/>
</p>
<h2>Metrics</h2>
<p>24648 lines of code analyzed,
	in 352 classes, 
	in 18 packages.</p>
<table width="500" cellpadding="5" cellspacing="2">
<tr class="tableheader">
<th align="left">Metric</th>
<th align="right">Total</th>
<th align="right">Density*</th>
</tr>
<tr class="tablerow0">
<td>High Priority Warnings</td>
<td align="right">4</td>
<td align="right">0.16</td>
</tr>
<tr class="tablerow1">
<td>Medium Priority Warnings</td>
<td align="right">16</td>
<td align="right">0.65</td>
</tr>
<tr class="$totalClass">
<td>
<b>Total Warnings</b>
</td>
<td align="right">
<b>20</b>
</td>
<td align="right">
<b>0.81</b>
</td>
</tr>
</table>
<p>
<i>(* Defects per Thousand lines of non-commenting source statements)</i>
</p>
<p>
<br/>
<br/>
</p>
<h2>Contents</h2>
<ul>
<li>
<a href="#Warnings_SECURITY">Security Warnings</a>
</li>
<li>
<a href="#Details">Details</a>
</li>
</ul>
<h1>Summary</h1>
<table width="500" cellpadding="5" cellspacing="2">
<tr class="tableheader">
<th align="left">Warning Type</th>
<th align="right">Number</th>
</tr>
<tr class="tablerow0">
<td>
<a href="#Warnings_SECURITY">Security Warnings</a>
</td>
<td align="right">20</td>
</tr>
<tr class="tablerow1">
<td>
<b>Total</b>
</td>
<td align="right">
<b>20</b>
</td>
</tr>
</table>
<h1>Warnings</h1>
<p>Click on a warning row to see full context information.</p>
<h2>
<a name="Warnings_SECURITY">Security Warnings</a>
</h2>
<table class="warningtable" width="100%" cellspacing="0">
<tr class="tableheader">
<th align="left">Code</th>
<th align="left">Warning</th>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66702');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.lang.Math.random()) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66702" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class com.icl.saxon.exslt.Math<br/>In method com.icl.saxon.exslt.Math.random()<br/>At Math.java:[line 166]<br/>Value java.lang.Math.random()</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66818');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66818" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class com.icl.saxon.output.GeneralOutputter<br/>In method com.icl.saxon.output.GeneralOutputter.makeFileOutputStream(String, String, boolean)<br/>At GeneralOutputter.java:[line 136]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/icl/saxon/output/GeneralOutputter.makeFileOutputStream(Ljava/lang/String;Ljava/lang/String;Z)Ljava/io/FileOutputStream; parameter 1<br/>At GeneralOutputter.java:[line 94]<br/>At GeneralOutputter.java:[line 101]<br/>At GeneralOutputter.java:[line 103]<br/>At GeneralOutputter.java:[line 105]<br/>At GeneralOutputter.java:[line 107]<br/>At GeneralOutputter.java:[line 109]<br/>At GeneralOutputter.java:[line 111]<br/>At GeneralOutputter.java:[line 113]<br/>At GeneralOutputter.java:[line 115]<br/>At GeneralOutputter.java:[line 117]<br/>At GeneralOutputter.java:[line 121]<br/>At GeneralOutputter.java:[line 315]<br/>At GeneralOutputter.java:[line 376]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67017');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67017" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class com.icl.saxon.output.GeneralOutputter<br/>In method com.icl.saxon.output.GeneralOutputter.makeFileOutputStream(String, String, boolean)<br/>At GeneralOutputter.java:[line 141]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/lang/reflect/Constructor.newInstance([Ljava/lang/Object;)Ljava/lang/Object;<br/>Unknown source com/icl/saxon/output/GeneralOutputter.makeFileOutputStream(Ljava/lang/String;Ljava/lang/String;Z)Ljava/io/FileOutputStream; parameter 2<br/>Unknown source com/icl/saxon/output/GeneralOutputter.urlToFileName(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source com/icl/saxon/output/GeneralOutputter.urlToFileName(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/io/File.toString()Ljava/lang/String;<br/>At GeneralOutputter.java:[line 94]<br/>At GeneralOutputter.java:[line 101]<br/>At GeneralOutputter.java:[line 103]<br/>At GeneralOutputter.java:[line 105]<br/>At GeneralOutputter.java:[line 107]<br/>At GeneralOutputter.java:[line 109]<br/>At GeneralOutputter.java:[line 111]<br/>At GeneralOutputter.java:[line 113]<br/>At GeneralOutputter.java:[line 115]<br/>At GeneralOutputter.java:[line 117]<br/>At GeneralOutputter.java:[line 121]<br/>At GeneralOutputter.java:[line 139]<br/>At GeneralOutputter.java:[line 315]<br/>At GeneralOutputter.java:[line 376]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67246');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67246" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class com.icl.saxon.output.GeneralOutputter<br/>In method com.icl.saxon.output.GeneralOutputter.makeFileOutputStream(String, String, boolean)<br/>At GeneralOutputter.java:[line 142]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/icl/saxon/output/GeneralOutputter.makeFileOutputStream(Ljava/lang/String;Ljava/lang/String;Z)Ljava/io/FileOutputStream; parameter 1<br/>At GeneralOutputter.java:[line 94]<br/>At GeneralOutputter.java:[line 101]<br/>At GeneralOutputter.java:[line 103]<br/>At GeneralOutputter.java:[line 105]<br/>At GeneralOutputter.java:[line 107]<br/>At GeneralOutputter.java:[line 109]<br/>At GeneralOutputter.java:[line 111]<br/>At GeneralOutputter.java:[line 113]<br/>At GeneralOutputter.java:[line 115]<br/>At GeneralOutputter.java:[line 117]<br/>At GeneralOutputter.java:[line 121]<br/>At GeneralOutputter.java:[line 315]<br/>At GeneralOutputter.java:[line 376]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67445');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67445" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class com.icl.saxon.output.GeneralOutputter<br/>In method com.icl.saxon.output.GeneralOutputter.makeFileOutputStream(String, String, boolean)<br/>At GeneralOutputter.java:[line 149]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.getParent()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67693');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67693" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class com.icl.saxon.style.XSLDocument<br/>In method com.icl.saxon.style.XSLDocument.process(Context)<br/>At XSLDocument.java:[line 88]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/icl/saxon/expr/Value.asString()Ljava/lang/String;<br/>Unknown source com/icl/saxon/expr/Expression.evaluateAsString(Lcom/icl/saxon/Context;)Ljava/lang/String;<br/>At XSLDocument.java:[line 86]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67777');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67777" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class com.icl.saxon.style.XSLDocument<br/>In method com.icl.saxon.style.XSLDocument.process(Context)<br/>At XSLDocument.java:[line 92]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.getParent()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65667');">
<td>
<span class="priority-1">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65667" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class com.icl.saxon.StyleSheet<br/>In method com.icl.saxon.StyleSheet.doMain(String[], StyleSheet, String)<br/>At StyleSheet.java:[line 257]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/icl/saxon/StyleSheet.doMain([Ljava/lang/String;Lcom/icl/saxon/StyleSheet;Ljava/lang/String;)V parameter 2<br/>Method usage with tainted arguments detected<br/>At WinStyleSheet.java:[line 41]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65751');">
<td>
<span class="priority-1">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65751" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class com.icl.saxon.StyleSheet<br/>In method com.icl.saxon.StyleSheet.doMain(String[], StyleSheet, String)<br/>At StyleSheet.java:[line 268]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/icl/saxon/StyleSheet.doMain([Ljava/lang/String;Lcom/icl/saxon/StyleSheet;Ljava/lang/String;)V parameter 2<br/>Method usage with tainted arguments detected<br/>At WinStyleSheet.java:[line 41]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65835');">
<td>
<span class="priority-1">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65835" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class com.icl.saxon.StyleSheet<br/>In method com.icl.saxon.StyleSheet.doMain(String[], StyleSheet, String)<br/>At StyleSheet.java:[line 281]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/icl/saxon/StyleSheet.doMain([Ljava/lang/String;Lcom/icl/saxon/StyleSheet;Ljava/lang/String;)V parameter 2<br/>Method usage with tainted arguments detected<br/>At WinStyleSheet.java:[line 41]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65919');">
<td>
<span class="priority-1">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65919" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class com.icl.saxon.StyleSheet<br/>In method com.icl.saxon.StyleSheet.doMain(String[], StyleSheet, String)<br/>At StyleSheet.java:[line 307]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/icl/saxon/StyleSheet.doMain([Ljava/lang/String;Lcom/icl/saxon/StyleSheet;Ljava/lang/String;)V parameter 2<br/>Method usage with tainted arguments detected<br/>At WinStyleSheet.java:[line 41]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66003');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66003" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class com.icl.saxon.StyleSheet<br/>In method com.icl.saxon.StyleSheet.makeOutputFile(File, String, Templates)<br/>At StyleSheet.java:[line 404]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source com/icl/saxon/StyleSheet.makeOutputFile(Ljava/io/File;Ljava/lang/String;Ljavax/xml/transform/Templates;)Ljava/io/File; parameter 1<br/>Unknown source java/lang/StringBuffer.toString()Ljava/lang/String;<br/>Unknown source java/lang/StringBuffer.append(Ljava/lang/String;)Ljava/lang/StringBuffer;<br/>At StyleSheet.java:[line 371]<br/>At StyleSheet.java:[line 402]<br/>At StyleSheet.java:[line 404]<br/>At StyleSheet.java:[line 432]<br/>At StyleSheet.java:[line 470]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66132');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66132" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class com.icl.saxon.StyleSheet<br/>In method com.icl.saxon.StyleSheet.processDirectory(File, Templates, File, ParameterSet)<br/>At StyleSheet.java:[line 466]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.list()[Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66201');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66201" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class com.icl.saxon.StyleSheet<br/>In method com.icl.saxon.StyleSheet.processDirectoryAssoc(File, File, ParameterSet)<br/>At StyleSheet.java:[line 365]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.list()[Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67514');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67514" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class com.icl.saxon.sql.SQLInsert<br/>In method com.icl.saxon.sql.SQLInsert.process(Context)<br/>At SQLInsert.java:[line 98]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source com/icl/saxon/sql/SQLColumn.getColumnName()Ljava/lang/String;<br/>Unknown source com/icl/saxon/sql/SQLInsert.table<br/>Unknown source com/icl/saxon/tree/ElementWithAttributes.getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source java/lang/StringBuffer.toString()Ljava/lang/String;<br/>Unknown source com/icl/saxon/tree/AttributeCollection.getValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source java/lang/StringBuffer.append(Ljava/lang/String;)Ljava/lang/StringBuffer;<br/>Unknown source com/icl/saxon/tree/AttributeCollection.list<br/>At SQLColumn.java:[line 47]<br/>At SQLInsert.java:[line 70]<br/>At SQLInsert.java:[line 79]<br/>At SQLInsert.java:[line 80]<br/>At SQLInsert.java:[line 84]<br/>At SQLInsert.java:[line 98]<br/>At AttributeCollection.java:[line 327]<br/>At ElementWithAttributes.java:[line 268]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66328');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66328" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class com.icl.saxon.aelfred.XmlParser<br/>In method com.icl.saxon.aelfred.XmlParser.pushURL(String, String, String, Reader, InputStream, String, boolean)<br/>At XmlParser.java:[line 3616]<br/>Sink method java/net/URL.openConnection()Ljava/net/URLConnection;<br/>Sink parameter 0<br/>Unknown source java/net/URL.toString()Ljava/lang/String;<br/>Unknown source java/io/InputStreamReader.&lt;init&gt;(Ljava/io/InputStream;Ljava/lang/String;)V<br/>Unknown source java/lang/StringBuffer.toString()Ljava/lang/String;<br/>Unknown source com/icl/saxon/aelfred/XmlParser.pushURL(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/io/Reader;Ljava/io/InputStream;Ljava/lang/String;Z)V parameter 4<br/>Unknown source java/net/URL.&lt;init&gt;(Ljava/lang/String;)V<br/>Unknown source com/icl/saxon/aelfred/SAXDriver.resolveEntity(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;<br/>Unknown source org/xml/sax/InputSource.getSystemId()Ljava/lang/String;<br/>Unknown source org/xml/sax/InputSource.getByteStream()Ljava/io/InputStream;<br/>Unknown source java/net/URLConnection.getURL()Ljava/net/URL;<br/>Unknown source java/lang/Throwable.getMessage()Ljava/lang/String;<br/>Unknown source org/xml/sax/InputSource.getCharacterStream()Ljava/io/Reader;<br/>Unknown source java/lang/StringBuffer.append(Ljava/lang/String;)Ljava/lang/StringBuffer;<br/>Unknown source java/net/URL.&lt;init&gt;(Ljava/net/URL;Ljava/lang/String;)V<br/>Unknown source com/icl/saxon/aelfred/SAXDriver.tryToExpand(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source com/icl/saxon/aelfred/XmlParser.baseURI<br/>Unknown source com/icl/saxon/aelfred/SAXDriver.tryToExpand(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>At SAXDriver.java:[line 554]<br/>At SAXDriver.java:[line 563]<br/>At SAXDriver.java:[line 591]<br/>At XmlParser.java:[line 159]<br/>At XmlParser.java:[line 874]<br/>At XmlParser.java:[line 901]<br/>At XmlParser.java:[line 1790]<br/>At XmlParser.java:[line 1841]<br/>At XmlParser.java:[line 2373]<br/>At XmlParser.java:[line 2392]<br/>At XmlParser.java:[line 2398]<br/>At XmlParser.java:[line 2402]<br/>At XmlParser.java:[line 2418]<br/>At XmlParser.java:[line 2535]<br/>At XmlParser.java:[line 3153]<br/>At XmlParser.java:[line 3161]<br/>At XmlParser.java:[line 3162]<br/>At XmlParser.java:[line 3557]<br/>At XmlParser.java:[line 3559]<br/>At XmlParser.java:[line 3564]<br/>At XmlParser.java:[line 3574]<br/>At XmlParser.java:[line 3577]<br/>At XmlParser.java:[line 3614]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65551');">
<td>
<span class="priority-2">SECXXEREAD</span>
</td>
<td>The use of XMLReader.parse(...) (XMLReader) is vulnerable to XML External Entity attacks</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65551" style="display: none;">
<a href="#XXE_XMLREADER">Bug type XXE_XMLREADER (click for details)</a>
<br/>In class com.icl.saxon.IdentityTransformer<br/>In method com.icl.saxon.IdentityTransformer.transform(Source, Result)<br/>At IdentityTransformer.java:[line 59]<br/>Value XMLReader.parse(...)</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65609');">
<td>
<span class="priority-2">SECXXEREAD</span>
</td>
<td>The use of XMLReader.parse(...) (XMLReader) is vulnerable to XML External Entity attacks</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65609" style="display: none;">
<a href="#XXE_XMLREADER">Bug type XXE_XMLREADER (click for details)</a>
<br/>In class com.icl.saxon.IdentityTransformer<br/>In method com.icl.saxon.IdentityTransformer.transform(Source, Result)<br/>At IdentityTransformer.java:[line 90]<br/>Value XMLReader.parse(...)</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66760');">
<td>
<span class="priority-2">SECXXEREAD</span>
</td>
<td>The use of XMLReader.parse(...) (XMLReader) is vulnerable to XML External Entity attacks</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66760" style="display: none;">
<a href="#XXE_XMLREADER">Bug type XXE_XMLREADER (click for details)</a>
<br/>In class com.icl.saxon.om.Builder<br/>In method com.icl.saxon.om.Builder.build(SAXSource)<br/>At Builder.java:[line 265]<br/>Value XMLReader.parse(...)</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66270');">
<td>
<span class="priority-2">SECXXEREAD</span>
</td>
<td>The use of XMLReader.parse(...) (XMLReader) is vulnerable to XML External Entity attacks</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66270" style="display: none;">
<a href="#XXE_XMLREADER">Bug type XXE_XMLREADER (click for details)</a>
<br/>In class com.icl.saxon.TransformerFactoryImpl<br/>In method com.icl.saxon.TransformerFactoryImpl.getAssociatedStylesheet(Source, String, String, String)<br/>At TransformerFactoryImpl.java:[line 233]<br/>Value XMLReader.parse(...)</p>
</td>
</tr>
</table>
<h1>
<a name="Details">Details</a>
</h1>
<h2>
<a name="PREDICTABLE_RANDOM">PREDICTABLE_RANDOM: Predictable pseudorandom number generator</a>
</h2>
            
<p>The use of a predictable random value can lead to vulnerabilities when used in certain security critical contexts. For example, when the value is used as:</p>
<ul>
<li>a CSRF token: a predictable token can lead to a CSRF attack as an attacker will know the value of the token</li>
<li>a password reset token (sent by email): a predictable password token can lead to an account takeover, since an attacker will guess the URL of the "change password" form</li>
<li>any other secret value</li>
</ul>
<p>
A quick fix could be to replace the use of <code>java.util.Random</code> with something stronger, such as <code>java.security.SecureRandom</code>.
</p>
<p>
<b>Vulnerable Code:</b><br/>
<pre>String generateSecretToken() {
    Random r = new Random();
    return Long.toHexString(r.nextLong());
}</pre>
</p>
<p>
<b>Solution:</b>
<pre>import org.apache.commons.codec.binary.Hex;

String generateSecretToken() {
    SecureRandom secRandom = new SecureRandom();

    byte[] result = new byte[32];
    secRandom.nextBytes(result);
    return Hex.encodeHexString(result);
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://jazzy.id.au/2010/09/20/cracking_random_number_generators_part_1.html">Cracking Random Number Generators - Part 1 (https://jazzy.id.au)</a><br/>
<a href="https://www.securecoding.cert.org/confluence/display/java/MSC02-J.+Generate+strong+random+numbers">CERT: MSC02-J. Generate strong random numbers</a><br/>
<a href="https://cwe.mitre.org/data/definitions/330.html">CWE-330: Use of Insufficiently Random Values</a><br/>
<a href="https://blog.h3xstream.com/2014/12/predicting-struts-csrf-token-cve-2014.html">Predicting Struts CSRF Token (Example of real-life vulnerability and exploitation)</a>
</p>

        
<h2>
<a name="PATH_TRAVERSAL_IN">PATH_TRAVERSAL_IN: Potential Path Traversal (file read)</a>
</h2>
            
<p>A file is opened to read its content. The filename comes from an <b>input</b> parameter.
If an unfiltered parameter is passed to this file API, files from an arbitrary filesystem location could be read.</p>
<p>This rule identifies <b>potential</b> path traversal vulnerabilities. In many cases, the constructed file path cannot be controlled
by the user. If that is the case, the reported instance is a false positive.</p>
<br/>

<p>
    <b>Vulnerable Code:</b><br/>
<pre>@GET
@Path("/images/{image}")
@Produces("images/*")
public Response getImage(@javax.ws.rs.PathParam("image") String image) {
    File file = new File("resources/images/", image); //Weak point

    if (!file.exists()) {
        return Response.status(Status.NOT_FOUND).build();
    }

    return Response.ok().entity(new FileInputStream(file)).build();
}</pre>
</p>
<br/>

<p>
    <b>Solution:</b><br/>
<pre>import org.apache.commons.io.FilenameUtils;

@GET
@Path("/images/{image}")
@Produces("images/*")
public Response getImage(@javax.ws.rs.PathParam("image") String image) {
    File file = new File("resources/images/", FilenameUtils.getName(image)); //Fix

    if (!file.exists()) {
        return Response.status(Status.NOT_FOUND).build();
    }

    return Response.ok().entity(new FileInputStream(file)).build();
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="http://projects.webappsec.org/w/page/13246952/Path%20Traversal">WASC: Path Traversal</a><br/>
<a href="https://www.owasp.org/index.php/Path_Traversal">OWASP: Path Traversal</a><br/>
<a href="https://capec.mitre.org/data/definitions/126.html">CAPEC-126: Path Traversal</a><br/>
<a href="https://cwe.mitre.org/data/definitions/22.html">CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')</a>
</p>

        
<h2>
<a name="SQL_INJECTION_JDBC">SQL_INJECTION_JDBC: Potential JDBC Injection</a>
</h2>
            
<p>
The input values included in SQL queries need to be passed in safely.
Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection.
</p>

<p>
    <b>Vulnerable Code:</b><br/>
    <pre>Connection conn = [...];
Statement stmt = con.createStatement();
ResultSet rs = stmt.executeQuery("update COFFEES set SALES = "+nbSales+" where COF_NAME = '"+coffeeName+"'");</pre>
</p>
<p>
    <b>Solution:</b><br/>
    <pre>Connection conn = [...];
conn.prepareStatement("update COFFEES set SALES = ? where COF_NAME = ?");
updateSales.setInt(1, nbSales);
updateSales.setString(2, coffeeName);</pre>
</p>
<br/>

<b>References (JDBC)</b><br/>
<a href="https://docs.oracle.com/javase/tutorial/jdbc/basics/prepared.html">Oracle Documentation: The Java Tutorials &gt; Prepared Statements</a><br/>
<b>References (SQL injection)</b><br/>
<a href="http://projects.webappsec.org/w/page/13246963/SQL%20Injection">WASC-19: SQL Injection</a><br/>
<a href="https://capec.mitre.org/data/definitions/66.html">CAPEC-66: SQL Injection</a><br/>
<a href="https://cwe.mitre.org/data/definitions/89.html">CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')</a><br/>
<a href="https://www.owasp.org/index.php/Top_10_2013-A1-Injection">OWASP: Top 10 2013-A1-Injection</a><br/>
<a href="https://www.owasp.org/index.php/SQL_Injection_Prevention_Cheat_Sheet">OWASP: SQL Injection Prevention Cheat Sheet</a><br/>
<a href="https://www.owasp.org/index.php/Query_Parameterization_Cheat_Sheet">OWASP: Query Parameterization Cheat Sheet</a><br/>
</p>

        
<h2>
<a name="URLCONNECTION_SSRF_FD">URLCONNECTION_SSRF_FD: URLConnection Server-Side Request Forgery (SSRF) and File Disclosure</a>
</h2>
            
<p>
    Server-Side Request Forgery occur when a web server executes a request to a user supplied destination
    parameter that is not validated. Such vulnerabilities could allow an attacker to access internal services
    or to launch attacks from your web server.
</p>
<p>
    URLConnection can be used with file:// protocol or other protocols to access local filesystem and potentially other services.
<p>
    <b>Vulnerable Code:</b>
<pre>
new URL(String url).openConnection()
</pre>

<pre>
new URL(String url).openStream()
</pre>

<pre>
new URL(String url).getContent()
</pre>
</p>
<p>
    <b>Solution/Countermeasures:</b><br/>
    <ul>
        <li>Don't accept URL destinations from users</li>
        <li>Accept a destination key, and use it to look up the target destination associate with the key</li>
        <li>White list URLs (if possible)</li>
        <li>Validate that the beginning of the URL is part of a white list</li>
    </ul>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a><br/>
<a href="https://www.bishopfox.com/blog/2015/04/vulnerable-by-design-understanding-server-side-request-forgery/">Understanding Server-Side Request Forgery</a><br/>
<a href="https://cwe.mitre.org/data/definitions/73.html">CWE-73: External Control of File Name or Path</a><br/>
<a href="https://www.pwntester.com/blog/2013/11/28/abusing-jar-downloads/">Abusing jar:// downloads</a><br />
</p>
            
<h2>
<a name="XXE_XMLREADER">XXE_XMLREADER: XML parsing vulnerable to XXE (XMLReader)</a>
</h2>
            
<!--XXE_GENERIC_START-->
<h3>Attack</h3>
<p>XML External Entity (XXE) attacks can occur when an XML parser supports XML entities while processing XML received
from an untrusted source.</p>
<p><b>Risk 1: Expose local file content (XXE: <u>X</u>ML E<u>x</u>ternal <u>E</u>ntity)</b></p>
<p>
<pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;
&lt;!DOCTYPE foo [
   &lt;!ENTITY xxe SYSTEM &quot;file:///etc/passwd&quot; &gt; ]&gt;
&lt;foo&gt;&amp;xxe;&lt;/foo&gt;</pre>
</p>
<b>Risk 2: Denial of service (XEE: <u>X</u>ML <u>E</u>ntity <u>E</u>xpansion)</b>
<p>
<pre>
&lt;?xml version=&quot;1.0&quot;?&gt;
&lt;!DOCTYPE lolz [
 &lt;!ENTITY lol &quot;lol&quot;&gt;
 &lt;!ELEMENT lolz (#PCDATA)&gt;
 &lt;!ENTITY lol1 &quot;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&quot;&gt;
 &lt;!ENTITY lol2 &quot;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&quot;&gt;
 &lt;!ENTITY lol3 &quot;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&quot;&gt;
[...]
 &lt;!ENTITY lol9 &quot;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&quot;&gt;
]&gt;
&lt;lolz&gt;&amp;lol9;&lt;/lolz&gt;</pre>
</p>

<h3>Solution</h3>
<p>
In order to avoid exposing dangerous feature of the XML parser, you can do the following change to the code.
</p>
<!--XXE_GENERIC_END-->

<p><b>Vulnerable Code:</b></p>
<p>
<pre>
XMLReader reader = XMLReaderFactory.createXMLReader();
reader.setContentHandler(customHandler);
reader.parse(new InputSource(inputStream));</pre>
</p>
<br/>
<p>
The following snippets show two available solutions. You can set one property or both.
</p>

<p><b>Solution using "Secure processing" mode:</b></p>
<p>
This setting will protect you against Denial of Service attack and remote file access.
<pre>
XMLReader reader = XMLReaderFactory.createXMLReader();
reader.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
reader.setContentHandler(customHandler);

reader.parse(new InputSource(inputStream));</pre>
</p>

<p><b>Solution disabling DTD:</b></p>
<p>
By disabling DTD, almost all XXE attacks will be prevented.
<pre>
XMLReader reader = XMLReaderFactory.createXMLReader();
reader.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true);
reader.setContentHandler(customHandler);

reader.parse(new InputSource(inputStream));</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<!--XXE_GENERIC_START-->
<a href="https://cwe.mitre.org/data/definitions/611.html">CWE-611: Improper Restriction of XML External Entity Reference ('XXE')</a><br/>
<a href="https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=61702260">CERT: IDS10-J. Prevent XML external entity attacks</a><br/>
<a href="https://www.owasp.org/index.php/XML_External_Entity_%28XXE%29_Processing">OWASP.org: XML External Entity (XXE) Processing</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_Entity_Expansion">WS-Attacks.org: XML Entity Expansion</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_External_Entity_DOS">WS-Attacks.org: XML External Entity DOS</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_Entity_Reference_Attack">WS-Attacks.org: XML Entity Reference Attack</a><br/>
<a href="https://blog.h3xstream.com/2014/06/identifx-xml-external-entity.html">Identifx XML External Entity vulnerability (XXE)</a><br/>
<!--XXE_GENERIC_END-->
<a href="https://xerces.apache.org/xerces-j/features.html">Xerces complete features list</a>
</p>

        </body>
</html>
