<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>SpotBugs Report</title>
<style type="text/css">
		.tablerow0 {
			background: #EEEEEE;
		}

		.tablerow1 {
			background: white;
		}

		.detailrow0 {
			background: #EEEEEE;
		}

		.detailrow1 {
			background: white;
		}

		.tableheader {
			background: #b9b9fe;
			font-size: larger;
		}

		.tablerow0:hover, .tablerow1:hover {
			background: #aaffaa;
		}

		.priority-1 {
		    color: red;
		    font-weight: bold;
		}
		.priority-2 {
		    color: orange;
		    font-weight: bold;
		}
		.priority-3 {
		    color: green;
		    font-weight: bold;
		}
		.priority-4 {
		    color: blue;
		    font-weight: bold;
		}
		</style>
<script type="text/javascript">
			function toggleRow(elid) {
				if (document.getElementById) {
					element = document.getElementById(elid);
					if (element) {
						if (element.style.display == 'none') {
							element.style.display = 'block';
							//window.status = 'Toggle on!';
						} else {
							element.style.display = 'none';
							//window.status = 'Toggle off!';
						}
					}
				}
			}
		</script>
</head>
<body>
<h1>
<a href="https://spotbugs.github.io/">SpotBugs</a> Report</h1>
<h2>Project Information</h2>
<p>Project: 
		</p>
<p>SpotBugs version: 3.1.12</p>
<p>Code analyzed:</p>
<ul>
<li>/home/x/CryptoAPIDetect/dataset/group/synapse.git/rhino-1.7R5.jar</li>
</ul>
<p>
<br/>
<br/>
</p>
<h2>Metrics</h2>
<p>50034 lines of code analyzed,
	in 461 classes, 
	in 23 packages.</p>
<table width="500" cellpadding="5" cellspacing="2">
<tr class="tableheader">
<th align="left">Metric</th>
<th align="right">Total</th>
<th align="right">Density*</th>
</tr>
<tr class="tablerow0">
<td>High Priority Warnings</td>
<td align="right">8</td>
<td align="right">0.16</td>
</tr>
<tr class="tablerow1">
<td>Medium Priority Warnings</td>
<td align="right">39</td>
<td align="right">0.78</td>
</tr>
<tr class="$totalClass">
<td>
<b>Total Warnings</b>
</td>
<td align="right">
<b>47</b>
</td>
<td align="right">
<b>0.94</b>
</td>
</tr>
</table>
<p>
<i>(* Defects per Thousand lines of non-commenting source statements)</i>
</p>
<p>
<br/>
<br/>
</p>
<h2>Contents</h2>
<ul>
<li>
<a href="#Warnings_SECURITY">Security Warnings</a>
</li>
<li>
<a href="#Details">Details</a>
</li>
</ul>
<h1>Summary</h1>
<table width="500" cellpadding="5" cellspacing="2">
<tr class="tableheader">
<th align="left">Warning Type</th>
<th align="right">Number</th>
</tr>
<tr class="tablerow0">
<td>
<a href="#Warnings_SECURITY">Security Warnings</a>
</td>
<td align="right">47</td>
</tr>
<tr class="tablerow1">
<td>
<b>Total</b>
</td>
<td align="right">
<b>47</b>
</td>
</tr>
</table>
<h1>Warnings</h1>
<p>Click on a warning row to see full context information.</p>
<h2>
<a name="Warnings_SECURITY">Security Warnings</a>
</h2>
<table class="warningtable" width="100%" cellspacing="0">
<tr class="tableheader">
<th align="left">Code</th>
<th align="left">Warning</th>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65551');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65551" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class org.mozilla.javascript.Context<br/>In method org.mozilla.javascript.Context.reportWarning(String, Throwable)<br/>At Context.java:[line 851]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65641');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65641" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class org.mozilla.javascript.Interpreter<br/>In method org.mozilla.javascript.Interpreter.exitFrame(Context, Interpreter$CallFrame, Object)<br/>At Interpreter.java:[line 2926]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65695');">
<td>
<span class="priority-2">ERRMSG</span>
</td>
<td>Possible information exposure through an error message</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65695" style="display: none;">
<a href="#INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">Bug type INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE (click for details)</a>
<br/>In class org.mozilla.javascript.Interpreter<br/>In method org.mozilla.javascript.Interpreter.interpretLoop(Context, Interpreter$CallFrame, Object)<br/>At Interpreter.java:[line 1929]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68407');">
<td>
<span class="priority-2">SECCI</span>
</td>
<td>This usage of java/lang/Runtime.exec([Ljava/lang/String;)Ljava/lang/Process; can be vulnerable to Command Injection</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68407" style="display: none;">
<a href="#COMMAND_INJECTION">Bug type COMMAND_INJECTION (click for details)</a>
<br/>In class org.mozilla.javascript.tools.shell.Global<br/>In method org.mozilla.javascript.tools.shell.Global.runProcess(String[], String[], InputStream, OutputStream, OutputStream)<br/>At Global.java:[line 923]<br/>Sink method java/lang/Runtime.exec([Ljava/lang/String;)Ljava/lang/Process;<br/>Sink parameter 0<br/>Unknown source org/mozilla/javascript/tools/shell/Global.runProcess([Ljava/lang/String;[Ljava/lang/String;Ljava/io/InputStream;Ljava/io/OutputStream;Ljava/io/OutputStream;)I parameter 4<br/>Method usage not detected<br/>At Context.java:[line 1562]<br/>At DToA.java:[line 272]<br/>At DToA.java:[line 355]<br/>At ScriptRuntime.java:[line 753]<br/>At ScriptRuntime.java:[line 758]<br/>At ScriptRuntime.java:[line 767]<br/>At ScriptRuntime.java:[line 804]<br/>At ScriptRuntime.java:[line 808]<br/>At ScriptRuntime.java:[line 813]<br/>At ScriptRuntime.java:[line 814]<br/>At ScriptRuntime.java:[line 3550]<br/>At ScriptRuntime.java:[line 3555]<br/>At Undefined.java:[line 18]<br/>At Undefined.java:[line 26]<br/>At WrapFactory.java:[line 47]<br/>At WrapFactory.java:[line 54]<br/>At Global.java:[line 714]<br/>At Global.java:[line 731]<br/>At Global.java:[line 735]<br/>At Global.java:[line 739]<br/>At FastDtoa.java:[line 497]<br/>At FastDtoaBuilder.java:[line 49]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68701');">
<td>
<span class="priority-2">SECCI</span>
</td>
<td>This usage of java/lang/Runtime.exec([Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Process; can be vulnerable to Command Injection</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68701" style="display: none;">
<a href="#COMMAND_INJECTION">Bug type COMMAND_INJECTION (click for details)</a>
<br/>In class org.mozilla.javascript.tools.shell.Global<br/>In method org.mozilla.javascript.tools.shell.Global.runProcess(String[], String[], InputStream, OutputStream, OutputStream)<br/>At Global.java:[line 925]<br/>Sink method java/lang/Runtime.exec([Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/Process;<br/>Sink parameter 0<br/>Unknown source org/mozilla/javascript/tools/shell/Global.runProcess([Ljava/lang/String;[Ljava/lang/String;Ljava/io/InputStream;Ljava/io/OutputStream;Ljava/io/OutputStream;)I parameter 3<br/>At BaseFunction.java:[line 334]<br/>At BaseFunction.java:[line 435]<br/>At Context.java:[line 292]<br/>At Context.java:[line 1052]<br/>At Context.java:[line 1139]<br/>At Context.java:[line 1475]<br/>At Context.java:[line 1503]<br/>At DToA.java:[line 272]<br/>At DToA.java:[line 355]<br/>At FunctionObject.java:[line 437]<br/>At FunctionObject.java:[line 441]<br/>At FunctionObject.java:[line 459]<br/>At IRFactory.java:[line 852]<br/>At ImporterTopLevel.java:[line 167]<br/>At ImporterTopLevel.java:[line 180]<br/>At Interpreter.java:[line 844]<br/>At Interpreter.java:[line 861]<br/>At Interpreter.java:[line 2812]<br/>At Interpreter.java:[line 2826]<br/>At Interpreter.java:[line 3037]<br/>At JavaAdapter.java:[line 94]<br/>At NativeArray.java:[line 813]<br/>At NativeArray.java:[line 876]<br/>At NativeArray.java:[line 889]<br/>At NativeArray.java:[line 906]<br/>At NativeArray.java:[line 964]<br/>At NativeArray.java:[line 1071]<br/>At NativeArray.java:[line 1102]<br/>At NativeArray.java:[line 1121]<br/>At NativeArray.java:[line 1146]<br/>At NativeArray.java:[line 1272]<br/>At NativeArray.java:[line 1464]<br/>At NativeArray.java:[line 1563]<br/>At NativeArray.java:[line 1570]<br/>At NativeArray.java:[line 1620]<br/>At NativeArray.java:[line 1630]<br/>At NativeArray.java:[line 1712]<br/>At NativeArray.java:[line 976]<br/>At NativeArray.java:[line 977]<br/>At NativeArray.java:[line 978]<br/>At NativeCall.java:[line 46]<br/>At NativeCall.java:[line 63]<br/>At NativeCall.java:[line 65]<br/>At NativeError.java:[line 145]<br/>At NativeError.java:[line 152]<br/>At NativeError.java:[line 153]<br/>At NativeError.java:[line 172]<br/>At NativeGenerator.java:[line 135]<br/>At NativeGenerator.java:[line 139]<br/>At NativeGenerator.java:[line 140]<br/>At NativeGenerator.java:[line 147]<br/>At NativeGenerator.java:[line 163]<br/>At NativeGenerator.java:[line 187]<br/>At NativeIterator.java:[line 139]<br/>At NativeIterator.java:[line 142]<br/>At NativeJavaMethod.java:[line 246]<br/>At NativeJavaObject.java:[line 413]<br/>At NativeObject.java:[line 120]<br/>At NativeObject.java:[line 210]<br/>At NativeObject.java:[line 230]<br/>At NativeObject.java:[line 237]<br/>At NativeObject.java:[line 262]<br/>At NativeObject.java:[line 266]<br/>At NativeObject.java:[line 272]<br/>At NativeObject.java:[line 282]<br/>At NativeObject.java:[line 292]<br/>At NativeObject.java:[line 297]<br/>At NativeObject.java:[line 300]<br/>At NativeObject.java:[line 304]<br/>At NativeObject.java:[line 306]<br/>At NativeObject.java:[line 307]<br/>At NativeObject.java:[line 314]<br/>At NativeObject.java:[line 320]<br/>At NativeObject.java:[line 327]<br/>At NativeObject.java:[line 329]<br/>At NativeObject.java:[line 336]<br/>At NativeObject.java:[line 343]<br/>At NativeObject.java:[line 353]<br/>At NativeObject.java:[line 368]<br/>At NativeObject.java:[line 385]<br/>At NativeObject.java:[line 401]<br/>At ObjToIntMap.java:[line 209]<br/>At ScriptRuntime.java:[line 318]<br/>At ScriptRuntime.java:[line 359]<br/>At ScriptRuntime.java:[line 638]<br/>At ScriptRuntime.java:[line 746]<br/>At ScriptRuntime.java:[line 753]<br/>At ScriptRuntime.java:[line 758]<br/>At ScriptRuntime.java:[line 767]<br/>At ScriptRuntime.java:[line 804]<br/>At ScriptRuntime.java:[line 808]<br/>At ScriptRuntime.java:[line 813]<br/>At ScriptRuntime.java:[line 814]<br/>At ScriptRuntime.java:[line 824]<br/>At ScriptRuntime.java:[line 853]<br/>At ScriptRuntime.java:[line 946]<br/>At ScriptRuntime.java:[line 960]<br/>At ScriptRuntime.java:[line 1007]<br/>At ScriptRuntime.java:[line 1049]<br/>At ScriptRuntime.java:[line 1217]<br/>At ScriptRuntime.java:[line 1456]<br/>At ScriptRuntime.java:[line 1498]<br/>At ScriptRuntime.java:[line 1513]<br/>At ScriptRuntime.java:[line 1545]<br/>At ScriptRuntime.java:[line 2417]<br/>At ScriptRuntime.java:[line 2422]<br/>At ScriptRuntime.java:[line 2434]<br/>At ScriptRuntime.java:[line 2435]<br/>At ScriptRuntime.java:[line 2468]<br/>At ScriptRuntime.java:[line 2507]<br/>At ScriptRuntime.java:[line 2517]<br/>At ScriptRuntime.java:[line 2770]<br/>At ScriptRuntime.java:[line 2771]<br/>At ScriptRuntime.java:[line 2847]<br/>At ScriptRuntime.java:[line 2855]<br/>At ScriptRuntime.java:[line 2882]<br/>At ScriptRuntime.java:[line 2916]<br/>At ScriptRuntime.java:[line 3167]<br/>At ScriptRuntime.java:[line 3171]<br/>At ScriptRuntime.java:[line 3555]<br/>At ScriptableObject.java:[line 572]<br/>At ScriptableObject.java:[line 756]<br/>At ScriptableObject.java:[line 782]<br/>At ScriptableObject.java:[line 784]<br/>At ScriptableObject.java:[line 1564]<br/>At ScriptableObject.java:[line 1824]<br/>At ScriptableObject.java:[line 1835]<br/>At ScriptableObject.java:[line 1843]<br/>At ScriptableObject.java:[line 1848]<br/>At ScriptableObject.java:[line 1923]<br/>At ScriptableObject.java:[line 2449]<br/>At ScriptableObject.java:[line 2478]<br/>At ScriptableObject.java:[line 3098]<br/>At Undefined.java:[line 18]<br/>At Undefined.java:[line 26]<br/>At WrapFactory.java:[line 47]<br/>At WrapFactory.java:[line 54]<br/>At NativeRegExp.java:[line 177]<br/>At NativeRegExp.java:[line 187]<br/>At NativeRegExp.java:[line 271]<br/>At NativeRegExp.java:[line 2418]<br/>At NativeRegExp.java:[line 2468]<br/>At Dim.java:[line 648]<br/>At Dim.java:[line 655]<br/>At Dim.java:[line 665]<br/>At Dim.java:[line 857]<br/>At Global.java:[line 597]<br/>At Global.java:[line 670]<br/>At Global.java:[line 677]<br/>At Global.java:[line 681]<br/>At Global.java:[line 684]<br/>At Global.java:[line 686]<br/>At Global.java:[line 739]<br/>At Global.java:[line 760]<br/>At Global.java:[line 762]<br/>At Global.java:[line 842]<br/>At FastDtoa.java:[line 497]<br/>At FastDtoaBuilder.java:[line 49]<br/>At Namespace.java:[line 190]<br/>At QName.java:[line 258]<br/>At XMLCtor.java:[line 224]<br/>At XMLCtor.java:[line 232]<br/>At XMLList.java:[line 399]<br/>At XMLList.java:[line 1145]<br/>At XMLList.java:[line 1164]<br/>At XMLName.java:[line 91]<br/>At XMLName.java:[line 100]<br/>At XMLObjectImpl.java:[line 178]<br/>At XMLObjectImpl.java:[line 328]<br/>At XMLObjectImpl.java:[line 638]<br/>At XMLObjectImpl.java:[line 678]<br/>At XMLObjectImpl.java:[line 681]<br/>At XMLObjectImpl.java:[line 695]<br/>At XMLObjectImpl.java:[line 700]<br/>At XMLObjectImpl.java:[line 727]<br/>At Namespace.java:[line 148]<br/>At Namespace.java:[line 286]<br/>At Namespace.java:[line 295]<br/>At QName.java:[line 275]<br/>At QName.java:[line 281]<br/>At QName.java:[line 287]<br/>At QName.java:[line 316]<br/>At QName.java:[line 332]<br/>At XML.java:[line 182]<br/>At XMLCtor.java:[line 235]<br/>At XMLCtor.java:[line 243]<br/>At XMLLibImpl.java:[line 133]<br/>At XMLLibImpl.java:[line 159]<br/>At XMLLibImpl.java:[line 182]<br/>At XMLLibImpl.java:[line 240]<br/>At XMLLibImpl.java:[line 394]<br/>At XMLLibImpl.java:[line 425]<br/>At XMLLibImpl.java:[line 520]<br/>At XMLLibImpl.java:[line 561]<br/>At XMLList.java:[line 178]<br/>At XMLList.java:[line 546]<br/>At XMLList.java:[line 552]<br/>At XMLList.java:[line 561]<br/>At XMLName.java:[line 324]<br/>At XMLName.java:[line 333]<br/>At XMLObjectImpl.java:[line 236]<br/>At XMLObjectImpl.java:[line 377]<br/>At XMLObjectImpl.java:[line 643]<br/>At XMLObjectImpl.java:[line 651]<br/>At XMLObjectImpl.java:[line 666]<br/>At XMLObjectImpl.java:[line 715]<br/>At XMLObjectImpl.java:[line 719]<br/>At XMLObjectImpl.java:[line 722]<br/>At XMLObjectImpl.java:[line 728]<br/>At XMLObjectImpl.java:[line 779]<br/>At XMLObjectImpl.java:[line 809]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65605');">
<td>
<span class="priority-2">SECDESGAD</span>
</td>
<td>This class could make application using serialization vulnerable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65605" style="display: none;">
<a href="#DESERIALIZATION_GADGET">Bug type DESERIALIZATION_GADGET (click for details)</a>
<br/>In class org.mozilla.javascript.FunctionObject<br/>At FunctionObject.java:[lines 84-523]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65911');">
<td>
<span class="priority-2">SECDESGAD</span>
</td>
<td>This class could make application using serialization vulnerable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65911" style="display: none;">
<a href="#DESERIALIZATION_GADGET">Bug type DESERIALIZATION_GADGET (click for details)</a>
<br/>In class org.mozilla.javascript.MemberBox<br/>At MemberBox.java:[lines 31-334]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66109');">
<td>
<span class="priority-2">SECDESGAD</span>
</td>
<td>This class could make application using serialization vulnerable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66109" style="display: none;">
<a href="#DESERIALIZATION_GADGET">Bug type DESERIALIZATION_GADGET (click for details)</a>
<br/>In class org.mozilla.javascript.NativeJavaObject<br/>At NativeJavaObject.java:[lines 29-963]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66203');">
<td>
<span class="priority-2">SECDESGAD</span>
</td>
<td>This class could make application using serialization vulnerable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66203" style="display: none;">
<a href="#DESERIALIZATION_GADGET">Bug type DESERIALIZATION_GADGET (click for details)</a>
<br/>In class org.mozilla.javascript.ScriptableObject<br/>At ScriptableObject.java:[lines 47-3103]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N72068');">
<td>
<span class="priority-1">SECMD5</span>
</td>
<td>This API MD5 (MDX) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N72068" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_MD5">Bug type WEAK_MESSAGE_DIGEST_MD5 (click for details)</a>
<br/>In class org.mozilla.javascript.tools.shell.Main<br/>In method org.mozilla.javascript.tools.shell.Main.getDigest(Object)<br/>At Main.java:[line 615]<br/>Value MD5</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65749');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in org.mozilla.javascript.JavaAdapter.readAdapterObject(Scriptable, ObjectInputStream)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65749" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class org.mozilla.javascript.JavaAdapter<br/>In method org.mozilla.javascript.JavaAdapter.readAdapterObject(Scriptable, ObjectInputStream)<br/>At JavaAdapter.java:[line 265]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65803');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in org.mozilla.javascript.JavaAdapter.readAdapterObject(Scriptable, ObjectInputStream)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65803" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class org.mozilla.javascript.JavaAdapter<br/>In method org.mozilla.javascript.JavaAdapter.readAdapterObject(Scriptable, ObjectInputStream)<br/>At JavaAdapter.java:[line 267]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65857');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in org.mozilla.javascript.JavaAdapter.readAdapterObject(Scriptable, ObjectInputStream)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65857" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class org.mozilla.javascript.JavaAdapter<br/>In method org.mozilla.javascript.JavaAdapter.readAdapterObject(Scriptable, ObjectInputStream)<br/>At JavaAdapter.java:[line 273]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65947');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in org.mozilla.javascript.MemberBox.readMember(ObjectInputStream)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65947" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class org.mozilla.javascript.MemberBox<br/>In method org.mozilla.javascript.MemberBox.readMember(ObjectInputStream)<br/>At MemberBox.java:[line 264]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66001');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in org.mozilla.javascript.MemberBox.readMember(ObjectInputStream)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66001" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class org.mozilla.javascript.MemberBox<br/>In method org.mozilla.javascript.MemberBox.readMember(ObjectInputStream)<br/>At MemberBox.java:[line 265]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66055');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in org.mozilla.javascript.MemberBox.readParameters(ObjectInputStream)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66055" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class org.mozilla.javascript.MemberBox<br/>In method org.mozilla.javascript.MemberBox.readParameters(ObjectInputStream)<br/>At MemberBox.java:[line 329]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70880');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in org.mozilla.javascript.tools.shell.Global.deserialize(Context, Scriptable, Object[], Function)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70880" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class org.mozilla.javascript.tools.shell.Global<br/>In method org.mozilla.javascript.tools.shell.Global.deserialize(Context, Scriptable, Object[], Function)<br/>At Global.java:[line 365]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66145');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.lang.Math.random()) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66145" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.mozilla.javascript.NativeMath<br/>In method org.mozilla.javascript.NativeMath.execIdCall(IdFunctionObject, Context, Scriptable, Scriptable, Object[])<br/>At NativeMath.java:[line 181]<br/>Value java.lang.Math.random()</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66239');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66239" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.mozilla.javascript.commonjs.module.provider.ModuleSourceProviderBase<br/>In method org.mozilla.javascript.commonjs.module.provider.ModuleSourceProviderBase.loadFromPathArray(String, Scriptable, Object)<br/>At ModuleSourceProviderBase.java:[line 76]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/mozilla/javascript/commonjs/module/provider/ModuleSourceProviderBase.ensureTrailingSlash(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/mozilla/javascript/ScriptableObject.getTypedProperty(Lorg/mozilla/javascript/Scriptable;ILjava/lang/Class;)Ljava/lang/Object;<br/>Unknown source java/lang/Class.cast(Ljava/lang/Object;)Ljava/lang/Object;<br/>Unknown source org/mozilla/javascript/commonjs/module/provider/ModuleSourceProviderBase.ensureTrailingSlash(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>At ModuleSourceProviderBase.java:[line 71]<br/>At ModuleSourceProviderBase.java:[line 92]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66840');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66840" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.mozilla.javascript.tools.debugger.Dim<br/>In method org.mozilla.javascript.tools.debugger.Dim.loadSource(String)<br/>At Dim.java:[line 285]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/mozilla/javascript/tools/debugger/Dim.loadSource(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>At Dim.java:[line 241]<br/>At Dim.java:[line 246]<br/>At Dim.java:[line 272]<br/>At Dim.java:[line 284]<br/>At Dim.java:[line 437]<br/>At Dim.java:[line 439]<br/>At Dim.java:[line 443]<br/>At Dim.java:[line 445]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66989');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66989" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.mozilla.javascript.tools.debugger.Dim<br/>In method org.mozilla.javascript.tools.debugger.Dim.loadSource(String)<br/>At Dim.java:[line 285]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/security/AccessController.doPrivileged(Ljava/security/PrivilegedAction;)Ljava/lang/Object;<br/>Unknown source org/mozilla/javascript/SecurityUtilities.getSystemProperty(Ljava/lang/String;)Ljava/lang/String;<br/>At Dim.java:[line 282]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67073');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67073" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.mozilla.javascript.tools.debugger.Dim<br/>In method org.mozilla.javascript.tools.debugger.Dim.loadSource(String)<br/>At Dim.java:[line 292]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/mozilla/javascript/tools/debugger/Dim.loadSource(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>At Dim.java:[line 241]<br/>At Dim.java:[line 246]<br/>At Dim.java:[line 272]<br/>At Dim.java:[line 437]<br/>At Dim.java:[line 439]<br/>At Dim.java:[line 443]<br/>At Dim.java:[line 445]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67396');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67396" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.mozilla.javascript.tools.debugger.SwingGui<br/>In method org.mozilla.javascript.tools.debugger.SwingGui.chooseFile(String)<br/>At SwingGui.java:[line 639]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/security/AccessController.doPrivileged(Ljava/security/PrivilegedAction;)Ljava/lang/Object;<br/>Unknown source org/mozilla/javascript/SecurityUtilities.getSystemProperty(Ljava/lang/String;)Ljava/lang/String;<br/>At SwingGui.java:[line 637]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67480');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/FileReader.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67480" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.mozilla.javascript.tools.debugger.SwingGui<br/>In method org.mozilla.javascript.tools.debugger.SwingGui.readFile(String)<br/>At SwingGui.java:[line 725]<br/>Sink method java/io/FileReader.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/mozilla/javascript/tools/debugger/SwingGui.readFile(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>At SwingGui.java:[line 647]<br/>At SwingGui.java:[line 825]<br/>At SwingGui.java:[line 827]<br/>At SwingGui.java:[line 836]<br/>At SwingGui.java:[line 838]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67599');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67599" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.mozilla.javascript.tools.idswitch.Main<br/>In method org.mozilla.javascript.tools.idswitch.Main.process_file(String)<br/>At Main.java:[line 64]<br/>Sink method java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/mozilla/javascript/tools/idswitch/Main.process_file(Ljava/lang/String;)V parameter 0<br/>Method usage not detected<br/>At Main.java:[line 468]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67767');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67767" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.mozilla.javascript.tools.jsc.Main<br/>In method org.mozilla.javascript.tools.jsc.Main.getOutputFile(File, String)<br/>At Main.java:[line 298]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/mozilla/javascript/tools/jsc/Main.getOutputFile(Ljava/io/File;Ljava/lang/String;)Ljava/io/File; parameter 0<br/>At ClassFileWriter.java:[line 4309]<br/>At ClassFileWriter.java:[line 4310]<br/>At ClassFileWriter.java:[line 4311]<br/>At ClassFileWriter.java:[line 4314]<br/>At ClassFileWriter.java:[line 4316]<br/>At ClassFileWriter.java:[line 4317]<br/>At ClassFileWriter.java:[line 4318]<br/>At ClassFileWriter.java:[line 4319]<br/>At ClassFileWriter.java:[line 4320]<br/>At ClassFileWriter.java:[line 4364]<br/>At ClassFileWriter.java:[line 4365]<br/>At ClassFileWriter.java:[line 4366]<br/>At ClassFileWriter.java:[line 4368]<br/>At ClassFileWriter.java:[line 4369]<br/>At ClassFileWriter.java:[line 2793]<br/>At ClassCompiler.java:[line 112]<br/>At ClassCompiler.java:[line 150]<br/>At ClassCompiler.java:[line 155]<br/>At Codegen.java:[line 166]<br/>At Codegen.java:[line 323]<br/>At Main.java:[line 232]<br/>At Main.java:[line 236]<br/>At Main.java:[line 239]<br/>At Main.java:[line 242]<br/>At Main.java:[line 261]<br/>At Main.java:[line 296]<br/>At Main.java:[line 297]<br/>At Main.java:[line 331]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68116');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68116" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.mozilla.javascript.tools.jsc.Main<br/>In method org.mozilla.javascript.tools.jsc.Main.getOutputFile(File, String)<br/>At Main.java:[line 301]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.getParent()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68185');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68185" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.mozilla.javascript.tools.jsc.Main<br/>In method org.mozilla.javascript.tools.jsc.Main.processSource(String[])<br/>At Main.java:[line 228]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/mozilla/javascript/tools/jsc/Main.processSource([Ljava/lang/String;)V parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68259');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68259" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.mozilla.javascript.tools.jsc.Main<br/>In method org.mozilla.javascript.tools.jsc.Main.processSource(String[])<br/>At Main.java:[line 251]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/mozilla/javascript/tools/jsc/Main.destinationDir<br/>At Main.java:[line 251]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68338');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68338" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.mozilla.javascript.tools.jsc.Main<br/>In method org.mozilla.javascript.tools.jsc.Main.processSource(String[])<br/>At Main.java:[line 255]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.getParent()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70934');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70934" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.mozilla.javascript.tools.shell.Global<br/>In method org.mozilla.javascript.tools.shell.Global.deserialize(Context, Scriptable, Object[], Function)<br/>At Global.java:[line 362]<br/>Sink method java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/mozilla/javascript/Context.toString(Ljava/lang/Object;)Ljava/lang/String; parameter 0<br/>Unknown source java/lang/Object.toString()Ljava/lang/String;<br/>Unknown source org/mozilla/javascript/v8dtoa/FastDtoa.numberToString(D)Ljava/lang/String;<br/>Unknown source org/mozilla/javascript/Context.toString(Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/mozilla/javascript/v8dtoa/FastDtoaBuilder.format()Ljava/lang/String;<br/>Unknown source java/math/BigInteger.toString(I)Ljava/lang/String;<br/>Unknown source org/mozilla/javascript/tools/shell/Global.deserialize(Lorg/mozilla/javascript/Context;Lorg/mozilla/javascript/Scriptable;[Ljava/lang/Object;Lorg/mozilla/javascript/Function;)Ljava/lang/Object; parameter 1<br/>Unknown source org/mozilla/javascript/ScriptRuntime.toString(Ljava/lang/Object;)Ljava/lang/String; parameter 0<br/>Unknown source org/mozilla/javascript/DToA.JS_dtobasestr(ID)Ljava/lang/String;<br/>Unknown source org/mozilla/javascript/ScriptRuntime.numberToString(DI)Ljava/lang/String;<br/>Unknown source org/mozilla/javascript/ScriptRuntime.toString(Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/mozilla/javascript/Scriptable.getDefaultValue(Ljava/lang/Class;)Ljava/lang/Object;<br/>Method usage not detected<br/>At Context.java:[line 1606]<br/>At DToA.java:[line 272]<br/>At DToA.java:[line 355]<br/>At ScriptRuntime.java:[line 753]<br/>At ScriptRuntime.java:[line 758]<br/>At ScriptRuntime.java:[line 767]<br/>At ScriptRuntime.java:[line 804]<br/>At ScriptRuntime.java:[line 808]<br/>At ScriptRuntime.java:[line 813]<br/>At ScriptRuntime.java:[line 814]<br/>At Global.java:[line 361]<br/>At FastDtoa.java:[line 497]<br/>At FastDtoaBuilder.java:[line 49]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71193');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71193" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.mozilla.javascript.tools.shell.Global<br/>In method org.mozilla.javascript.tools.shell.Global.readUrl(String, String, boolean)<br/>At Global.java:[line 1079]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/mozilla/javascript/tools/shell/Global.readUrl(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String; parameter 2<br/>Method usage not detected<br/>At DToA.java:[line 272]<br/>At DToA.java:[line 355]<br/>At ScriptRuntime.java:[line 753]<br/>At ScriptRuntime.java:[line 758]<br/>At ScriptRuntime.java:[line 767]<br/>At ScriptRuntime.java:[line 804]<br/>At ScriptRuntime.java:[line 808]<br/>At ScriptRuntime.java:[line 813]<br/>At ScriptRuntime.java:[line 814]<br/>At Global.java:[line 797]<br/>At Global.java:[line 803]<br/>At Global.java:[line 827]<br/>At Global.java:[line 833]<br/>At FastDtoa.java:[line 497]<br/>At FastDtoaBuilder.java:[line 49]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71915');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71915" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.mozilla.javascript.tools.shell.JSConsole<br/>In method org.mozilla.javascript.tools.shell.JSConsole.chooseFile()<br/>At JSConsole.java:[line 39]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/security/AccessController.doPrivileged(Ljava/security/PrivilegedAction;)Ljava/lang/Object;<br/>Unknown source org/mozilla/javascript/SecurityUtilities.getSystemProperty(Ljava/lang/String;)Ljava/lang/String;<br/>At JSConsole.java:[line 37]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71999');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71999" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.mozilla.javascript.tools.shell.JSConsole<br/>In method org.mozilla.javascript.tools.shell.JSConsole.chooseFile()<br/>At JSConsole.java:[line 49]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.getParent()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66507');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66507" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.mozilla.javascript.tools.SourceReader<br/>In method org.mozilla.javascript.tools.SourceReader.readFileOrUrl(String, boolean, String)<br/>At SourceReader.java:[line 49]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/mozilla/javascript/tools/SourceReader.readFileOrUrl(Ljava/lang/String;ZLjava/lang/String;)Ljava/lang/Object; parameter 2<br/>At Main.java:[line 284]<br/>At JavaPolicySecurity.java:[line 119]<br/>At JavaPolicySecurity.java:[line 122]<br/>At Main.java:[line 527]<br/>At Main.java:[line 533]<br/>At Main.java:[line 556]<br/>At Main.java:[line 567]<br/>At Main.java:[line 697]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67683');">
<td>
<span class="priority-2">SECPTO</span>
</td>
<td>This API (java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V) writes to a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67683" style="display: none;">
<a href="#PATH_TRAVERSAL_OUT">Bug type PATH_TRAVERSAL_OUT (click for details)</a>
<br/>In class org.mozilla.javascript.tools.idswitch.Main<br/>In method org.mozilla.javascript.tools.idswitch.Main.process_file(String)<br/>At Main.java:[line 80]<br/>Sink method java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/mozilla/javascript/tools/idswitch/Main.process_file(Ljava/lang/String;)V parameter 0<br/>Method usage not detected<br/>At Main.java:[line 468]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71417');">
<td>
<span class="priority-2">SECPTO</span>
</td>
<td>This API (java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V) writes to a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71417" style="display: none;">
<a href="#PATH_TRAVERSAL_OUT">Bug type PATH_TRAVERSAL_OUT (click for details)</a>
<br/>In class org.mozilla.javascript.tools.shell.Global<br/>In method org.mozilla.javascript.tools.shell.Global.serialize(Context, Scriptable, Object[], Function)<br/>At Global.java:[line 346]<br/>Sink method java/io/FileOutputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/mozilla/javascript/Context.toString(Ljava/lang/Object;)Ljava/lang/String; parameter 0<br/>Unknown source java/lang/Object.toString()Ljava/lang/String;<br/>Unknown source org/mozilla/javascript/v8dtoa/FastDtoa.numberToString(D)Ljava/lang/String;<br/>Unknown source org/mozilla/javascript/Context.toString(Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/mozilla/javascript/v8dtoa/FastDtoaBuilder.format()Ljava/lang/String;<br/>Unknown source java/math/BigInteger.toString(I)Ljava/lang/String;<br/>Unknown source org/mozilla/javascript/ScriptRuntime.toString(Ljava/lang/Object;)Ljava/lang/String; parameter 0<br/>Unknown source org/mozilla/javascript/DToA.JS_dtobasestr(ID)Ljava/lang/String;<br/>Unknown source org/mozilla/javascript/ScriptRuntime.numberToString(DI)Ljava/lang/String;<br/>Unknown source org/mozilla/javascript/ScriptRuntime.toString(Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/mozilla/javascript/Scriptable.getDefaultValue(Ljava/lang/Class;)Ljava/lang/Object;<br/>Unknown source org/mozilla/javascript/tools/shell/Global.serialize(Lorg/mozilla/javascript/Context;Lorg/mozilla/javascript/Scriptable;[Ljava/lang/Object;Lorg/mozilla/javascript/Function;)V parameter 1<br/>Method usage not detected<br/>At Context.java:[line 1606]<br/>At DToA.java:[line 272]<br/>At DToA.java:[line 355]<br/>At ScriptRuntime.java:[line 753]<br/>At ScriptRuntime.java:[line 758]<br/>At ScriptRuntime.java:[line 767]<br/>At ScriptRuntime.java:[line 804]<br/>At ScriptRuntime.java:[line 808]<br/>At ScriptRuntime.java:[line 813]<br/>At ScriptRuntime.java:[line 814]<br/>At Global.java:[line 345]<br/>At FastDtoa.java:[line 497]<br/>At FastDtoaBuilder.java:[line 49]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66343');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66343" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider<br/>In method org.mozilla.javascript.commonjs.module.provider.UrlModuleSourceProvider.openUrlConnection(URL)<br/>At UrlModuleSourceProvider.java:[line 236]<br/>Sink method java/net/URL.openConnection()Ljava/net/URLConnection;<br/>Sink parameter 0<br/>Unknown source org/mozilla/javascript/commonjs/module/provider/UrlModuleSourceProvider.openUrlConnection(Ljava/net/URL;)Ljava/net/URLConnection; parameter 0<br/>Method usage not detected<br/>At UrlModuleSourceProvider.java:[line 93]<br/>At UrlModuleSourceProvider.java:[line 101]<br/>At UrlModuleSourceProvider.java:[line 111]<br/>At UrlModuleSourceProvider.java:[line 112]<br/>At UrlModuleSourceProvider.java:[line 126]<br/>At UrlModuleSourceProvider.java:[line 127]<br/>At UrlModuleSourceProvider.java:[line 130]<br/>At UrlModuleSourceProvider.java:[line 137]<br/>At UrlModuleSourceProvider.java:[line 139]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67212');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67212" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.mozilla.javascript.tools.debugger.Dim<br/>In method org.mozilla.javascript.tools.debugger.Dim.loadSource(String)<br/>At Dim.java:[line 308]<br/>Sink method java/net/URL.openStream()Ljava/io/InputStream;<br/>Sink parameter 0<br/>Unknown source java/net/URL.&lt;init&gt;(Ljava/lang/String;)V<br/>Unknown source org/mozilla/javascript/tools/debugger/Dim.loadSource(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>At Dim.java:[line 241]<br/>At Dim.java:[line 246]<br/>At Dim.java:[line 272]<br/>At Dim.java:[line 300]<br/>At Dim.java:[line 302]<br/>At Dim.java:[line 304]<br/>At Dim.java:[line 308]<br/>At Dim.java:[line 437]<br/>At Dim.java:[line 439]<br/>At Dim.java:[line 443]<br/>At Dim.java:[line 445]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71676');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71676" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.mozilla.javascript.tools.shell.Global<br/>In method org.mozilla.javascript.tools.shell.Global.readUrl(String, String, boolean)<br/>At Global.java:[line 1067]<br/>Sink method java/net/URL.openConnection()Ljava/net/URLConnection;<br/>Sink parameter 0<br/>Unknown source java/net/URL.&lt;init&gt;(Ljava/lang/String;)V<br/>Unknown source org/mozilla/javascript/tools/shell/Global.readUrl(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String; parameter 2<br/>Method usage not detected<br/>At DToA.java:[line 272]<br/>At DToA.java:[line 355]<br/>At ScriptRuntime.java:[line 753]<br/>At ScriptRuntime.java:[line 758]<br/>At ScriptRuntime.java:[line 767]<br/>At ScriptRuntime.java:[line 804]<br/>At ScriptRuntime.java:[line 808]<br/>At ScriptRuntime.java:[line 813]<br/>At ScriptRuntime.java:[line 814]<br/>At Global.java:[line 797]<br/>At Global.java:[line 803]<br/>At Global.java:[line 827]<br/>At Global.java:[line 833]<br/>At Global.java:[line 1066]<br/>At FastDtoa.java:[line 497]<br/>At FastDtoaBuilder.java:[line 49]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66656');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66656" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.mozilla.javascript.tools.SourceReader<br/>In method org.mozilla.javascript.tools.SourceReader.readFileOrUrl(String, boolean, String)<br/>At SourceReader.java:[line 54]<br/>Sink method java/net/URL.openConnection()Ljava/net/URLConnection;<br/>Sink parameter 0<br/>Unknown source org/mozilla/javascript/tools/SourceReader.readFileOrUrl(Ljava/lang/String;ZLjava/lang/String;)Ljava/lang/Object; parameter 2<br/>Unknown source java/net/URL.&lt;init&gt;(Ljava/lang/String;)V<br/>Unknown source org/mozilla/javascript/tools/SourceReader.toUrl(Ljava/lang/String;)Ljava/net/URL;<br/>Unknown source org/mozilla/javascript/tools/SourceReader.toUrl(Ljava/lang/String;)Ljava/net/URL; parameter 0<br/>At SourceReader.java:[line 30]<br/>At SourceReader.java:[line 41]<br/>At Main.java:[line 284]<br/>At JavaPolicySecurity.java:[line 119]<br/>At JavaPolicySecurity.java:[line 122]<br/>At Main.java:[line 527]<br/>At Main.java:[line 533]<br/>At Main.java:[line 556]<br/>At Main.java:[line 567]<br/>At Main.java:[line 697]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N72126');">
<td>
<span class="priority-2">SECUHE</span>
</td>
<td>Unsafe comparison of hash that are susceptible to timing attack</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N72126" style="display: none;">
<a href="#UNSAFE_HASH_EQUALS">Bug type UNSAFE_HASH_EQUALS (click for details)</a>
<br/>In class org.mozilla.javascript.tools.shell.Main$ScriptCache<br/>In method org.mozilla.javascript.tools.shell.Main$ScriptCache.get(String, byte[])<br/>At Main.java:[line 734]<br/>Sink method java/util/Arrays.equals([B[B)Z<br/>Sink parameter 0<br/>Unknown source org/mozilla/javascript/tools/shell/Main$ScriptReference.digest<br/>At Main.java:[line 734]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N72205');">
<td>
<span class="priority-2">SECXXEDOC</span>
</td>
<td>The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N72205" style="display: none;">
<a href="#XXE_DOCUMENT">Bug type XXE_DOCUMENT (click for details)</a>
<br/>In class org.mozilla.javascript.xmlimpl.XmlProcessor<br/>In method org.mozilla.javascript.xmlimpl.XmlProcessor.toXml(String, String)<br/>At XmlProcessor.java:[line 225]<br/>Value DocumentBuilder.parse(...)</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N72263');">
<td>
<span class="priority-2">SECXXETFDTD</span>
</td>
<td>The use of TransformerFactory.newInstance(...) (TransformerFactory) is vulnerable to XML External Entity attacks</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N72263" style="display: none;">
<a href="#XXE_DTD_TRANSFORM_FACTORY">Bug type XXE_DTD_TRANSFORM_FACTORY (click for details)</a>
<br/>In class org.mozilla.javascript.xmlimpl.XmlProcessor<br/>In method new org.mozilla.javascript.xmlimpl.XmlProcessor()<br/>At XmlProcessor.java:[line 78]<br/>Value TransformerFactory.newInstance(...)</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N72321');">
<td>
<span class="priority-2">SECXXETFDTD</span>
</td>
<td>The use of TransformerFactory.newInstance(...) (TransformerFactory) is vulnerable to XML External Entity attacks</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N72321" style="display: none;">
<a href="#XXE_DTD_TRANSFORM_FACTORY">Bug type XXE_DTD_TRANSFORM_FACTORY (click for details)</a>
<br/>In class org.mozilla.javascript.xmlimpl.XmlProcessor<br/>In method org.mozilla.javascript.xmlimpl.XmlProcessor.readObject(ObjectInputStream)<br/>At XmlProcessor.java:[line 46]<br/>Value TransformerFactory.newInstance(...)</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N72379');">
<td>
<span class="priority-2">SECXXETFXSLT</span>
</td>
<td>The use of TransformerFactory.newInstance(...) is vulnerable to XSLT External Entity attacks</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N72379" style="display: none;">
<a href="#XXE_XSLT_TRANSFORM_FACTORY">Bug type XXE_XSLT_TRANSFORM_FACTORY (click for details)</a>
<br/>In class org.mozilla.javascript.xmlimpl.XmlProcessor<br/>In method new org.mozilla.javascript.xmlimpl.XmlProcessor()<br/>At XmlProcessor.java:[line 78]<br/>Value TransformerFactory.newInstance(...)</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N72437');">
<td>
<span class="priority-2">SECXXETFXSLT</span>
</td>
<td>The use of TransformerFactory.newInstance(...) is vulnerable to XSLT External Entity attacks</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N72437" style="display: none;">
<a href="#XXE_XSLT_TRANSFORM_FACTORY">Bug type XXE_XSLT_TRANSFORM_FACTORY (click for details)</a>
<br/>In class org.mozilla.javascript.xmlimpl.XmlProcessor<br/>In method org.mozilla.javascript.xmlimpl.XmlProcessor.readObject(ObjectInputStream)<br/>At XmlProcessor.java:[line 46]<br/>Value TransformerFactory.newInstance(...)</p>
</td>
</tr>
</table>
<h1>
<a name="Details">Details</a>
</h1>
<h2>
<a name="INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE">INFORMATION_EXPOSURE_THROUGH_AN_ERROR_MESSAGE: Information Exposure Through An Error Message</a>
</h2>
            
<p>
The sensitive information may be valuable information on its own (such as a password), or it may be useful for launching other, more deadly attacks. If an attack fails, an attacker may use error information provided by the server to launch another more focused attack. For example, an attempt to exploit a path traversal weakness (CWE-22) might yield the full pathname of the installed application. In turn, this could be used to select the proper number of ".." sequences to navigate to the targeted file. An attack using SQL injection (CWE-89) might not initially succeed, but an error message could reveal the malformed query, which would expose query logic and possibly even passwords or other sensitive information used within the query.
</p>
<p>
    <b>Vulnerable Code:</b><br/>
<pre>try {
  out = httpResponse.getOutputStream()
} catch (Exception e) {
  e.printStackTrace(out);
}</pre>
</p>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/209.html">CWE-209: Information Exposure Through an Error Message</a><br/>
<a href="https://cwe.mitre.org/data/definitions/211.html">CWE-211: Information Exposure Through Externally-Generated Error Message</a><br/>
</p>
            
        
<h2>
<a name="COMMAND_INJECTION">COMMAND_INJECTION: Potential Command Injection</a>
</h2>
            
<p>The highlighted API is used to execute a system command. If unfiltered input is passed to this API, it can lead to arbitrary command execution.</p>
<br/>
<p>
    <b>Vulnerable Code:</b><br/>
<pre>import java.lang.Runtime;

Runtime r = Runtime.getRuntime();
r.exec("/bin/sh -c some_tool" + input);</pre>
</p>
<p>
<b>References</b><br/>
<a href="https://www.owasp.org/index.php/Command_Injection">OWASP: Command Injection</a><br/>
<a href="https://www.owasp.org/index.php/Top_10_2013-A1-Injection">OWASP: Top 10 2013-A1-Injection</a><br/>
<a href="https://cwe.mitre.org/data/definitions/78.html">CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')</a>
</p>

        
<h2>
<a name="DESERIALIZATION_GADGET">DESERIALIZATION_GADGET: This class could be used as deserialization gadget</a>
</h2>
            
<p>
Deserialization gadget are class that could be used by an attacker to take advantage of a remote API using Native Serialization.
This class is either adding custom behavior to deserialization with the <code>readObject</code> method (Serializable) or can be called
 from a serialized object (InvocationHandler).
</p>
<p>
This detector is intended to be used mostly by researcher. The real issue is using deserialization for remote operation.
Removing gadget is a hardening practice to reduce the risk of being exploited.
</p>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/502.html">CWE-502: Deserialization of Untrusted Data</a><br/>
<a href="https://www.owasp.org/index.php/Deserialization_of_untrusted_data">Deserialization of untrusted data</a><br/>
<a href="https://www.oracle.com/technetwork/java/seccodeguide-139067.html#8">Serialization and Deserialization </a><br/>
<a href="https://github.com/frohoff/ysoserial">A tool for generating payloads that exploit unsafe Java object deserialization</a><br/>
[1] <a href="https://gist.github.com/coekie/a27cc406fc9f3dc7a70d">Example of Denial of Service using the class <code>java.util.HashSet</code></a><br/>
[2] <a href="https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2015-2590">OpenJDK: Deserialization issue in ObjectInputStream.readSerialData() (CVE-2015-2590)</a><br/>
[3] <a href="https://www.rapid7.com/db/modules/exploit/multi/browser/java_calendar_deserialize">Rapid7: Sun Java Calendar Deserialization Privilege Escalation (CVE-2008-5353)</a>
</p>

        
<h2>
<a name="WEAK_MESSAGE_DIGEST_MD5">WEAK_MESSAGE_DIGEST_MD5: MD2, MD4 and MD5 are weak hash functions</a>
</h2>
            
<p>The algorithms MD2, MD4 and MD5 are not a recommended MessageDigest. <b>PBKDF2</b> should be used to hash password for example.</p>

<blockquote>
    "The security of the MD5 hash function is severely compromised. A collision attack exists that can find collisions
    within seconds on a computer with a 2.6 GHz Pentium 4 processor (complexity of 2<sup>24.1</sup>).[1] Further, there is also a
    chosen-prefix collision attack that can produce a collision for two inputs with specified prefixes within hours, using
    off-the-shelf computing hardware (complexity 2<sup>39</sup>).[2]"<br/>
    - <a href="https://en.wikipedia.org/wiki/MD5#Security">Wikipedia: MD5 - Security</a>
</blockquote>

<blockquote>
    "<b>SHA-224, SHA-256, SHA-384, SHA-512, SHA-512/224, and SHA-512/256</b>:<br/>
    The use of these hash functions is acceptable for all hash function applications."<br/>
    - <a href="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-131Ar2.pdf">NIST: Transitioning the Use of Cryptographic Algorithms and Key Lengths p.15</a>
</blockquote>
<blockquote>
    "The main idea of a PBKDF is to slow dictionary or brute force attacks on the passwords by increasing the time
    needed to test each password. An attacker with a list of likely passwords can evaluate the PBKDF using the known
    iteration counter and the salt. Since an attacker has to spend a significant amount of computing time for each try,
    it becomes harder to apply the dictionary or brute force attacks."<br/>
- <a href="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-132.pdf">NIST: Recommendation for Password-Based Key Derivation  p.12</a>
</blockquote>
<br/>
<p>
    <b>Vulnerable Code:</b><br/>
    <pre>MessageDigest md5Digest = MessageDigest.getInstance("MD5");
    md5Digest.update(password.getBytes());
    byte[] hashValue = md5Digest.digest();</pre>
    <br/>
    <pre>byte[] hashValue = DigestUtils.getMd5Digest().digest(password.getBytes());</pre>
</p>
<br/>
<p>
    <b>Solution (Using bouncy castle):</b><br/>
    <pre>public static byte[] getEncryptedPassword(String password, byte[] salt) throws NoSuchAlgorithmException, InvalidKeySpecException {
    PKCS5S2ParametersGenerator gen = new PKCS5S2ParametersGenerator(new SHA256Digest());
    gen.init(password.getBytes("UTF-8"), salt.getBytes(), 4096);
    return ((KeyParameter) gen.generateDerivedParameters(256)).getKey();
}</pre>
    <br/>
    <b>Solution (Java 8 and later):</b><br/>
    <pre>public static byte[] getEncryptedPassword(String password, byte[] salt) throws NoSuchAlgorithmException, InvalidKeySpecException {
    KeySpec spec = new PBEKeySpec(password.toCharArray(), salt, 4096, 256 * 8);
    SecretKeyFactory f = SecretKeyFactory.getInstance("PBKDF2WithHmacSHA256");
    return f.generateSecret(spec).getEncoded();
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
[1] <a href="https://www.win.tue.nl/hashclash/On%20Collisions%20for%20MD5%20-%20M.M.J.%20Stevens.pdf">On Collisions for MD5</a>: Master Thesis by M.M.J. Stevens<br/>
[2] <a href="https://homepages.cwi.nl/~stevens/papers/stJOC%20-%20Chosen-Prefix%20Collisions%20for%20MD5%20and%20Applications.pdf">Chosen-prefix collisions for MD5 and applications</a>: Paper written by Marc Stevens<br/>
<a href="https://en.wikipedia.org/wiki/MD5">Wikipedia: MD5</a><br/>
<a href="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-131Ar2.pdf">NIST: Transitioning the Use of Cryptographic Algorithms and Key Lengths</a><br/>
<a href="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-132.pdf">NIST: Recommendation for Password-Based Key Derivation</a><br/>
<a href="https://stackoverflow.com/q/22580853/89769">Stackoverflow: Reliable implementation of PBKDF2-HMAC-SHA256 for Java</a><br/>
<a href="https://cwe.mitre.org/data/definitions/327.html">CWE-327: Use of a Broken or Risky Cryptographic Algorithm</a>
</p>

        
<h2>
<a name="OBJECT_DESERIALIZATION">OBJECT_DESERIALIZATION: Object deserialization is used in {1}</a>
</h2>
            
<p>
    Object deserialization of untrusted data can lead to remote code execution, if there is a class in classpath that allows
    the trigger of malicious operation.
</p>
<p>
    Libraries developers tend to fix class that provided potential malicious trigger. There are still classes that are
    known to trigger Denial of Service<sup>[1]</sup>.
</p>
<p>
    Deserialization is a sensible operation that has a great history of vulnerabilities. The web application might
    become vulnerable as soon as a new vulnerability is found in the Java Virtual Machine<sup>[2] [3]</sup>.
</p>

<p>
<b>Code at risk:</b><br/>
<pre>
public UserData deserializeObject(InputStream receivedFile) throws IOException, ClassNotFoundException {

    try (ObjectInputStream in = new ObjectInputStream(receivedFile)) {
        return (UserData) in.readObject();
    }
}
</pre>
</p>

<p>
<b>Solutions:</b><br/>
<p>
Avoid deserializing object provided by remote users.
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/502.html">CWE-502: Deserialization of Untrusted Data</a><br/>
<a href="https://www.owasp.org/index.php/Deserialization_of_untrusted_data">Deserialization of untrusted data</a><br/>
<a href="https://www.oracle.com/technetwork/java/seccodeguide-139067.html#8">Serialization and Deserialization </a><br/>
<a href="https://github.com/frohoff/ysoserial">A tool for generating payloads that exploit unsafe Java object deserialization</a><br/>
[1] <a href="https://gist.github.com/coekie/a27cc406fc9f3dc7a70d">Example of Denial of Service using the class <code>java.util.HashSet</code></a><br/>
[2] <a href="https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2015-2590">OpenJDK: Deserialization issue in ObjectInputStream.readSerialData() (CVE-2015-2590)</a><br/>
[3] <a href="https://www.rapid7.com/db/modules/exploit/multi/browser/java_calendar_deserialize">Rapid7: Sun Java Calendar Deserialization Privilege Escalation (CVE-2008-5353)</a>
</p>

        
<h2>
<a name="PREDICTABLE_RANDOM">PREDICTABLE_RANDOM: Predictable pseudorandom number generator</a>
</h2>
            
<p>The use of a predictable random value can lead to vulnerabilities when used in certain security critical contexts. For example, when the value is used as:</p>
<ul>
<li>a CSRF token: a predictable token can lead to a CSRF attack as an attacker will know the value of the token</li>
<li>a password reset token (sent by email): a predictable password token can lead to an account takeover, since an attacker will guess the URL of the "change password" form</li>
<li>any other secret value</li>
</ul>
<p>
A quick fix could be to replace the use of <code>java.util.Random</code> with something stronger, such as <code>java.security.SecureRandom</code>.
</p>
<p>
<b>Vulnerable Code:</b><br/>
<pre>String generateSecretToken() {
    Random r = new Random();
    return Long.toHexString(r.nextLong());
}</pre>
</p>
<p>
<b>Solution:</b>
<pre>import org.apache.commons.codec.binary.Hex;

String generateSecretToken() {
    SecureRandom secRandom = new SecureRandom();

    byte[] result = new byte[32];
    secRandom.nextBytes(result);
    return Hex.encodeHexString(result);
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://jazzy.id.au/2010/09/20/cracking_random_number_generators_part_1.html">Cracking Random Number Generators - Part 1 (https://jazzy.id.au)</a><br/>
<a href="https://www.securecoding.cert.org/confluence/display/java/MSC02-J.+Generate+strong+random+numbers">CERT: MSC02-J. Generate strong random numbers</a><br/>
<a href="https://cwe.mitre.org/data/definitions/330.html">CWE-330: Use of Insufficiently Random Values</a><br/>
<a href="https://blog.h3xstream.com/2014/12/predicting-struts-csrf-token-cve-2014.html">Predicting Struts CSRF Token (Example of real-life vulnerability and exploitation)</a>
</p>

        
<h2>
<a name="PATH_TRAVERSAL_IN">PATH_TRAVERSAL_IN: Potential Path Traversal (file read)</a>
</h2>
            
<p>A file is opened to read its content. The filename comes from an <b>input</b> parameter.
If an unfiltered parameter is passed to this file API, files from an arbitrary filesystem location could be read.</p>
<p>This rule identifies <b>potential</b> path traversal vulnerabilities. In many cases, the constructed file path cannot be controlled
by the user. If that is the case, the reported instance is a false positive.</p>
<br/>

<p>
    <b>Vulnerable Code:</b><br/>
<pre>@GET
@Path("/images/{image}")
@Produces("images/*")
public Response getImage(@javax.ws.rs.PathParam("image") String image) {
    File file = new File("resources/images/", image); //Weak point

    if (!file.exists()) {
        return Response.status(Status.NOT_FOUND).build();
    }

    return Response.ok().entity(new FileInputStream(file)).build();
}</pre>
</p>
<br/>

<p>
    <b>Solution:</b><br/>
<pre>import org.apache.commons.io.FilenameUtils;

@GET
@Path("/images/{image}")
@Produces("images/*")
public Response getImage(@javax.ws.rs.PathParam("image") String image) {
    File file = new File("resources/images/", FilenameUtils.getName(image)); //Fix

    if (!file.exists()) {
        return Response.status(Status.NOT_FOUND).build();
    }

    return Response.ok().entity(new FileInputStream(file)).build();
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="http://projects.webappsec.org/w/page/13246952/Path%20Traversal">WASC: Path Traversal</a><br/>
<a href="https://www.owasp.org/index.php/Path_Traversal">OWASP: Path Traversal</a><br/>
<a href="https://capec.mitre.org/data/definitions/126.html">CAPEC-126: Path Traversal</a><br/>
<a href="https://cwe.mitre.org/data/definitions/22.html">CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')</a>
</p>

        
<h2>
<a name="PATH_TRAVERSAL_OUT">PATH_TRAVERSAL_OUT: Potential Path Traversal (file write)</a>
</h2>
            
<p>A file is opened to write to its contents. The filename comes from an <b>input</b> parameter.
If an unfiltered parameter is passed to this file API, files at an arbitrary filesystem location could be modified.</p>
<p>This rule identifies <b>potential</b> path traversal vulnerabilities. In many cases, the constructed file path cannot be controlled
by the user. If that is the case, the reported instance is a false positive.</p>
<br/>
<p>
<b>References</b><br/>
<a href="http://projects.webappsec.org/w/page/13246952/Path%20Traversal">WASC-33: Path Traversal</a><br/>
<a href="https://www.owasp.org/index.php/Path_Traversal">OWASP: Path Traversal</a><br/>
<a href="https://capec.mitre.org/data/definitions/126.html">CAPEC-126: Path Traversal</a><br/>
<a href="https://cwe.mitre.org/data/definitions/22.html">CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')</a>
</p>

        
<h2>
<a name="URLCONNECTION_SSRF_FD">URLCONNECTION_SSRF_FD: URLConnection Server-Side Request Forgery (SSRF) and File Disclosure</a>
</h2>
            
<p>
    Server-Side Request Forgery occur when a web server executes a request to a user supplied destination
    parameter that is not validated. Such vulnerabilities could allow an attacker to access internal services
    or to launch attacks from your web server.
</p>
<p>
    URLConnection can be used with file:// protocol or other protocols to access local filesystem and potentially other services.
<p>
    <b>Vulnerable Code:</b>
<pre>
new URL(String url).openConnection()
</pre>

<pre>
new URL(String url).openStream()
</pre>

<pre>
new URL(String url).getContent()
</pre>
</p>
<p>
    <b>Solution/Countermeasures:</b><br/>
    <ul>
        <li>Don't accept URL destinations from users</li>
        <li>Accept a destination key, and use it to look up the target destination associate with the key</li>
        <li>White list URLs (if possible)</li>
        <li>Validate that the beginning of the URL is part of a white list</li>
    </ul>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a><br/>
<a href="https://www.bishopfox.com/blog/2015/04/vulnerable-by-design-understanding-server-side-request-forgery/">Understanding Server-Side Request Forgery</a><br/>
<a href="https://cwe.mitre.org/data/definitions/73.html">CWE-73: External Control of File Name or Path</a><br/>
<a href="https://www.pwntester.com/blog/2013/11/28/abusing-jar-downloads/">Abusing jar:// downloads</a><br />
</p>
            
<h2>
<a name="UNSAFE_HASH_EQUALS">UNSAFE_HASH_EQUALS: Unsafe hash equals</a>
</h2>
            
<p>
An attacker might be able to detect the value of the secret hash due to the exposure of comparison timing. When the
functions <code>Arrays.equals()</code> or <code>String.equals()</code> are called, they will exit earlier if fewer
bytes are matched.
</p>
<p>
<p><b>Vulnerable Code:</b><br/>

<pre>
String actualHash = ...

if(userInput.equals(actualHash)) {
    ...
}</pre>
</p>
<p><b>Solution:</b><br/>

<pre>
String actualHash = ...

if(MessageDigest.isEqual(userInput.getBytes(),actualHash.getBytes())) {
    ...
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/203.html">CWE-203: Information Exposure Through DiscrepancyKey</a><br/>
</p>

        
<h2>
<a name="XXE_DOCUMENT">XXE_DOCUMENT: XML parsing vulnerable to XXE (DocumentBuilder)</a>
</h2>
            
<!--XXE_GENERIC_START-->
<h3>Attack</h3>
<p>XML External Entity (XXE) attacks can occur when an XML parser supports XML entities while processing XML received
from an untrusted source.</p>
<p><b>Risk 1: Expose local file content (XXE: <u>X</u>ML E<u>x</u>ternal <u>E</u>ntity)</b></p>
<p>
<pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;
&lt;!DOCTYPE foo [
   &lt;!ENTITY xxe SYSTEM &quot;file:///etc/passwd&quot; &gt; ]&gt;
&lt;foo&gt;&amp;xxe;&lt;/foo&gt;</pre>
</p>
<b>Risk 2: Denial of service (XEE: <u>X</u>ML <u>E</u>ntity <u>E</u>xpansion)</b>
<p>
<pre>
&lt;?xml version=&quot;1.0&quot;?&gt;
&lt;!DOCTYPE lolz [
 &lt;!ENTITY lol &quot;lol&quot;&gt;
 &lt;!ELEMENT lolz (#PCDATA)&gt;
 &lt;!ENTITY lol1 &quot;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&quot;&gt;
 &lt;!ENTITY lol2 &quot;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&quot;&gt;
 &lt;!ENTITY lol3 &quot;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&quot;&gt;
[...]
 &lt;!ENTITY lol9 &quot;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&quot;&gt;
]&gt;
&lt;lolz&gt;&amp;lol9;&lt;/lolz&gt;</pre>
</p>

<h3>Solution</h3>
<p>
In order to avoid exposing dangerous feature of the XML parser, you can do the following change to the code.
</p>
<!--XXE_GENERIC_END-->

<p><b>Vulnerable Code:</b></p>
<p>
<pre>
DocumentBuilder db = DocumentBuilderFactory.newInstance().newDocumentBuilder();

Document doc = db.parse(input);</pre>
</p>
<br/>
<p>
The following snippets show two available solutions. You can set one feature or both.
</p>

<p><b>Solution using "Secure processing" mode:</b></p>
<p>
This setting will protect you against Denial of Service attack and remote file access.
<pre>
DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
DocumentBuilder db = dbf.newDocumentBuilder();

Document doc = db.parse(input);</pre>
</p>

<p><b>Solution disabling DTD:</b></p>
<p>
By disabling DTD, almost all XXE attacks will be prevented.
<pre>
DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true);
DocumentBuilder db = dbf.newDocumentBuilder();

Document doc = db.parse(input);</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<!--XXE_GENERIC_START-->
<a href="https://cwe.mitre.org/data/definitions/611.html">CWE-611: Improper Restriction of XML External Entity Reference ('XXE')</a><br/>
<a href="https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=61702260">CERT: IDS10-J. Prevent XML external entity attacks</a><br/>
<a href="https://www.owasp.org/index.php/XML_External_Entity_%28XXE%29_Processing">OWASP.org: XML External Entity (XXE) Processing</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_Entity_Expansion">WS-Attacks.org: XML Entity Expansion</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_External_Entity_DOS">WS-Attacks.org: XML External Entity DOS</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_Entity_Reference_Attack">WS-Attacks.org: XML Entity Reference Attack</a><br/>
<a href="https://blog.h3xstream.com/2014/06/identifx-xml-external-entity.html">Identifx XML External Entity vulnerability (XXE)</a><br/>
<!--XXE_GENERIC_END-->
<a href="http://xerces.apache.org/xerces2-j/features.html">Xerces2 complete features list</a>
</p>

        
<h2>
<a name="XXE_DTD_TRANSFORM_FACTORY">XXE_DTD_TRANSFORM_FACTORY: XML parsing vulnerable to XXE (TransformerFactory)</a>
</h2>
            
<!--XXE_GENERIC_START-->
<h3>Attack</h3>
<p>XML External Entity (XXE) attacks can occur when an XML parser supports XML entities while processing XML received
from an untrusted source.</p>
<p><b>Risk 1: Expose local file content (XXE: <u>X</u>ML E<u>x</u>ternal <u>E</u>ntity)</b></p>
<p>
<pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;
&lt;!DOCTYPE foo [
   &lt;!ENTITY xxe SYSTEM &quot;file:///etc/passwd&quot; &gt; ]&gt;
&lt;foo&gt;&amp;xxe;&lt;/foo&gt;</pre>
</p>
<b>Risk 2: Denial of service (XEE: <u>X</u>ML <u>E</u>ntity <u>E</u>xpansion)</b>
<p>
<pre>
&lt;?xml version=&quot;1.0&quot;?&gt;
&lt;!DOCTYPE lolz [
 &lt;!ENTITY lol &quot;lol&quot;&gt;
 &lt;!ELEMENT lolz (#PCDATA)&gt;
 &lt;!ENTITY lol1 &quot;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&quot;&gt;
 &lt;!ENTITY lol2 &quot;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&quot;&gt;
 &lt;!ENTITY lol3 &quot;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&quot;&gt;
[...]
 &lt;!ENTITY lol9 &quot;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&quot;&gt;
]&gt;
&lt;lolz&gt;&amp;lol9;&lt;/lolz&gt;</pre>
</p>

<h3>Solution</h3>
<p>
In order to avoid exposing dangerous feature of the XML parser, you can do the following change to the code.
</p>
<!--XXE_GENERIC_END-->

<p><b>Vulnerable Code:</b></p>
<p>
<pre>
Transformer transformer = TransformerFactory.newInstance().newTransformer();
transformer.transform(input, result);</pre>
</p>
<br/>
<p>
The following snippets show two available solutions. You can set one feature or both.
</p>

<p><b>Solution using "Secure processing" mode:</b></p>
<p>
This setting will protect you against remote file access but not denial of service.
<pre>
TransformerFactory factory = TransformerFactory.newInstance();
factory.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "all");
factory.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "all");

Transformer transformer = factory.newTransformer();
transformer.setOutputProperty(OutputKeys.INDENT, "yes");

transformer.transform(input, result);</pre>
</p>

<p><b>Solution disabling DTD:</b></p>
<p>
This setting will protect you against remote file access but not denial of service.
<pre>
TransformerFactory factory = TransformerFactory.newInstance();
factory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);

Transformer transformer = factory.newTransformer();
transformer.setOutputProperty(OutputKeys.INDENT, "yes");

transformer.transform(input, result);</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<!--XXE_GENERIC_START-->
<a href="https://cwe.mitre.org/data/definitions/611.html">CWE-611: Improper Restriction of XML External Entity Reference ('XXE')</a><br/>
<a href="https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=61702260">CERT: IDS10-J. Prevent XML external entity attacks</a><br/>
<a href="https://www.owasp.org/index.php/XML_External_Entity_%28XXE%29_Processing">OWASP.org: XML External Entity (XXE) Processing</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_Entity_Expansion">WS-Attacks.org: XML Entity Expansion</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_External_Entity_DOS">WS-Attacks.org: XML External Entity DOS</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_Entity_Reference_Attack">WS-Attacks.org: XML Entity Reference Attack</a><br/>
<a href="https://blog.h3xstream.com/2014/06/identifx-xml-external-entity.html">Identifx XML External Entity vulnerability (XXE)</a><br/>
<!--XXE_GENERIC_END-->
</p>

        
<h2>
<a name="XXE_XSLT_TRANSFORM_FACTORY">XXE_XSLT_TRANSFORM_FACTORY: XSLT parsing vulnerable to XXE (TransformerFactory)</a>
</h2>
            
<!--XXE_GENERIC_START-->
<h3>Attack</h3>
<p>XSLT External Entity (XXE) attacks can occur when an XSLT parser supports external entities while processing XSLT received
from an untrusted source.</p>
<p><b>Risk: Expose local file content (XXE: <u>X</u>ML E<u>x</u>ternal <u>E</u>ntity)</b></p>
<p>
<pre>
&lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;&gt;
   &lt;xsl:template match=&quot;/&quot;&gt;
       &lt;xsl:value-of select=&quot;document(&apos;/etc/passwd&apos;)&quot;&gt;
   &lt;/xsl:value-of&gt;&lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;</pre>
</p>

<h3>Solution</h3>
<p>
In order to avoid exposing dangerous feature of the XML parser, you can do the following change to the code.
</p>
<!--XXE_GENERIC_END-->

<p><b>Vulnerable Code:</b></p>
<p>
<pre>
Transformer transformer = TransformerFactory.newInstance().newTransformer();
transformer.transform(input, result);</pre>
</p>
<br/>
<p>
The following snippets show two available solutions. You can set one feature or both.
</p>
<p><b>Solution using "Secure processing" mode:</b></p>
<p>
This setting will protect you against remote file access but not denial of service.
<pre>
TransformerFactory factory = TransformerFactory.newInstance();
factory.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, "all");
factory.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, "all");

Transformer transformer = factory.newTransformer();
transformer.setOutputProperty(OutputKeys.INDENT, "yes");

transformer.transform(input, result);</pre>
</p>

<p><b>Solution disabling DTD:</b></p>
<p>
This setting will protect you against remote file access but not denial of service.
<pre>
TransformerFactory factory = TransformerFactory.newInstance();
factory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);

Transformer transformer = factory.newTransformer();
transformer.setOutputProperty(OutputKeys.INDENT, "yes");

transformer.transform(input, result);</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<!--XXE_GENERIC_START-->
<a href="https://cwe.mitre.org/data/definitions/611.html">CWE-611: Improper Restriction of XML External Entity Reference ('XXE')</a><br/>
<a href="https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=61702260">CERT: IDS10-J. Prevent XML external entity attacks</a><br/>
<a href="https://www.owasp.org/index.php/XML_External_Entity_%28XXE%29_Processing">OWASP.org: XML External Entity (XXE) Processing</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_Entity_Expansion">WS-Attacks.org: XML Entity Expansion</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_External_Entity_DOS">WS-Attacks.org: XML External Entity DOS</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_Entity_Reference_Attack">WS-Attacks.org: XML Entity Reference Attack</a><br/>
<a href="https://blog.h3xstream.com/2014/06/identifx-xml-external-entity.html">Identifx XML External Entity vulnerability (XXE)</a><br/>
<!--XXE_GENERIC_END-->
</p>

        </body>
</html>
