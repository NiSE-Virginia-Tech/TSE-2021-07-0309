<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>SpotBugs Report</title>
<style type="text/css">
		.tablerow0 {
			background: #EEEEEE;
		}

		.tablerow1 {
			background: white;
		}

		.detailrow0 {
			background: #EEEEEE;
		}

		.detailrow1 {
			background: white;
		}

		.tableheader {
			background: #b9b9fe;
			font-size: larger;
		}

		.tablerow0:hover, .tablerow1:hover {
			background: #aaffaa;
		}

		.priority-1 {
		    color: red;
		    font-weight: bold;
		}
		.priority-2 {
		    color: orange;
		    font-weight: bold;
		}
		.priority-3 {
		    color: green;
		    font-weight: bold;
		}
		.priority-4 {
		    color: blue;
		    font-weight: bold;
		}
		</style>
<script type="text/javascript">
			function toggleRow(elid) {
				if (document.getElementById) {
					element = document.getElementById(elid);
					if (element) {
						if (element.style.display == 'none') {
							element.style.display = 'block';
							//window.status = 'Toggle on!';
						} else {
							element.style.display = 'none';
							//window.status = 'Toggle off!';
						}
					}
				}
			}
		</script>
</head>
<body>
<h1>
<a href="https://spotbugs.github.io/">SpotBugs</a> Report</h1>
<h2>Project Information</h2>
<p>Project: 
		</p>
<p>SpotBugs version: 3.1.12</p>
<p>Code analyzed:</p>
<ul>
<li>/home/x/CryptoAPIDetect/dataset/group/synapse.git/quartz-2.2.0.jar</li>
</ul>
<p>
<br/>
<br/>
</p>
<h2>Metrics</h2>
<p>22789 lines of code analyzed,
	in 349 classes, 
	in 31 packages.</p>
<table width="500" cellpadding="5" cellspacing="2">
<tr class="tableheader">
<th align="left">Metric</th>
<th align="right">Total</th>
<th align="right">Density*</th>
</tr>
<tr class="tablerow0">
<td>High Priority Warnings</td>
<td align="right">14</td>
<td align="right">0.61</td>
</tr>
<tr class="tablerow1">
<td>Medium Priority Warnings</td>
<td align="right">157</td>
<td align="right">6.89</td>
</tr>
<tr class="$totalClass">
<td>
<b>Total Warnings</b>
</td>
<td align="right">
<b>171</b>
</td>
<td align="right">
<b>7.50</b>
</td>
</tr>
</table>
<p>
<i>(* Defects per Thousand lines of non-commenting source statements)</i>
</p>
<p>
<br/>
<br/>
</p>
<h2>Contents</h2>
<ul>
<li>
<a href="#Warnings_SECURITY">Security Warnings</a>
</li>
<li>
<a href="#Details">Details</a>
</li>
</ul>
<h1>Summary</h1>
<table width="500" cellpadding="5" cellspacing="2">
<tr class="tableheader">
<th align="left">Warning Type</th>
<th align="right">Number</th>
</tr>
<tr class="tablerow0">
<td>
<a href="#Warnings_SECURITY">Security Warnings</a>
</td>
<td align="right">171</td>
</tr>
<tr class="tablerow1">
<td>
<b>Total</b>
</td>
<td align="right">
<b>171</b>
</td>
</tr>
</table>
<h1>Warnings</h1>
<p>Click on a warning row to see full context information.</p>
<h2>
<a name="Warnings_SECURITY">Security Warnings</a>
</h2>
<table class="warningtable" width="100%" cellspacing="0">
<tr class="tableheader">
<th align="left">Code</th>
<th align="left">Warning</th>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65551');">
<td>
<span class="priority-2">SECCRLFLOG</span>
</td>
<td>This use of org/slf4j/Logger.info(Ljava/lang/String;)V might be used to include CRLF characters into log messages</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65551" style="display: none;">
<a href="#CRLF_INJECTION_LOGS">Bug type CRLF_INJECTION_LOGS (click for details)</a>
<br/>In class org.quartz.core.QuartzScheduler<br/>In method new org.quartz.core.QuartzScheduler(QuartzSchedulerResources, long, long)<br/>At QuartzScheduler.java:[line 249]<br/>Sink method org/slf4j/Logger.info(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/quartz/core/QuartzScheduler.getVersionMinor()Ljava/lang/String;<br/>Tainted source java/util/Properties.getProperty(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/core/QuartzScheduler.VERSION_ITERATION<br/>Unknown source org/quartz/core/QuartzScheduler.VERSION_MINOR<br/>Tainted source org/quartz/core/QuartzScheduler.getVersionMajor()Ljava/lang/String;<br/>Tainted source org/quartz/core/QuartzScheduler.getVersionIteration()Ljava/lang/String;<br/>Unknown source org/quartz/core/QuartzScheduler.VERSION_MAJOR<br/>Tainted source org/quartz/core/QuartzScheduler.getVersion()Ljava/lang/String;<br/>Tainted source java/util/Properties.load(Ljava/io/InputStream;)V<br/>At QuartzScheduler.java:[line 119]<br/>At QuartzScheduler.java:[line 120]<br/>At QuartzScheduler.java:[line 122]<br/>At QuartzScheduler.java:[line 249]<br/>At QuartzScheduler.java:[line 336]<br/>At QuartzScheduler.java:[line 341]<br/>At QuartzScheduler.java:[line 353]<br/>At QuartzScheduler.java:[line 357]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65856');">
<td>
<span class="priority-2">SECCRLFLOG</span>
</td>
<td>This use of org/slf4j/Logger.info(Ljava/lang/String;)V might be used to include CRLF characters into log messages</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65856" style="display: none;">
<a href="#CRLF_INJECTION_LOGS">Bug type CRLF_INJECTION_LOGS (click for details)</a>
<br/>In class org.quartz.impl.DirectSchedulerFactory<br/>In method org.quartz.impl.DirectSchedulerFactory.createScheduler(String, String, ThreadPool, ThreadExecutor, JobStore, Map, String, int, long, long, boolean, String, int, long)<br/>At DirectSchedulerFactory.java:[line 522]<br/>Sink method org/slf4j/Logger.info(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/quartz/core/QuartzScheduler.getVersionMinor()Ljava/lang/String;<br/>Tainted source java/util/Properties.getProperty(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/core/QuartzScheduler.VERSION_ITERATION<br/>Unknown source org/quartz/core/QuartzScheduler.VERSION_MINOR<br/>Tainted source org/quartz/core/QuartzScheduler.getVersionMajor()Ljava/lang/String;<br/>Tainted source org/quartz/core/QuartzScheduler.getVersionIteration()Ljava/lang/String;<br/>Unknown source org/quartz/core/QuartzScheduler.VERSION_MAJOR<br/>Tainted source org/quartz/core/QuartzScheduler.getVersion()Ljava/lang/String;<br/>Tainted source java/util/Properties.load(Ljava/io/InputStream;)V<br/>At QuartzScheduler.java:[line 119]<br/>At QuartzScheduler.java:[line 120]<br/>At QuartzScheduler.java:[line 122]<br/>At QuartzScheduler.java:[line 336]<br/>At QuartzScheduler.java:[line 341]<br/>At QuartzScheduler.java:[line 353]<br/>At QuartzScheduler.java:[line 357]<br/>At DirectSchedulerFactory.java:[line 522]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66045');">
<td>
<span class="priority-2">SECCRLFLOG</span>
</td>
<td>This use of org/slf4j/Logger.info(Ljava/lang/String;)V might be used to include CRLF characters into log messages</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66045" style="display: none;">
<a href="#CRLF_INJECTION_LOGS">Bug type CRLF_INJECTION_LOGS (click for details)</a>
<br/>In class org.quartz.impl.StdSchedulerFactory<br/>In method org.quartz.impl.StdSchedulerFactory.instantiate()<br/>At StdSchedulerFactory.java:[line 1343]<br/>Sink method org/slf4j/Logger.info(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/quartz/core/QuartzScheduler.getVersionMinor()Ljava/lang/String;<br/>Tainted source java/util/Properties.getProperty(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/core/QuartzScheduler.VERSION_ITERATION<br/>Unknown source org/quartz/core/QuartzScheduler.VERSION_MINOR<br/>Tainted source org/quartz/core/QuartzScheduler.getVersionMajor()Ljava/lang/String;<br/>Tainted source org/quartz/core/QuartzScheduler.getVersionIteration()Ljava/lang/String;<br/>Unknown source org/quartz/core/QuartzScheduler.VERSION_MAJOR<br/>Tainted source org/quartz/core/QuartzScheduler.getVersion()Ljava/lang/String;<br/>Tainted source java/util/Properties.load(Ljava/io/InputStream;)V<br/>At QuartzScheduler.java:[line 119]<br/>At QuartzScheduler.java:[line 120]<br/>At QuartzScheduler.java:[line 122]<br/>At QuartzScheduler.java:[line 336]<br/>At QuartzScheduler.java:[line 341]<br/>At QuartzScheduler.java:[line 353]<br/>At QuartzScheduler.java:[line 357]<br/>At StdSchedulerFactory.java:[line 1343]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N85265');">
<td>
<span class="priority-2">SECCRLFLOG</span>
</td>
<td>This use of org/slf4j/Logger.info(Ljava/lang/String;)V might be used to include CRLF characters into log messages</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N85265" style="display: none;">
<a href="#CRLF_INJECTION_LOGS">Bug type CRLF_INJECTION_LOGS (click for details)</a>
<br/>In class org.quartz.utils.UpdateChecker<br/>In method org.quartz.utils.UpdateChecker.doCheck()<br/>At UpdateChecker.java:[line 60]<br/>Sink method org/slf4j/Logger.info(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Tainted source java/util/Properties.getProperty(Ljava/lang/String;)Ljava/lang/String;<br/>Tainted source java/util/Properties.load(Ljava/io/InputStream;)V<br/>Tainted source org/quartz/utils/UpdateChecker.getUpdateProperties(Ljava/net/URL;)Ljava/util/Properties;<br/>At UpdateChecker.java:[line 56]<br/>At UpdateChecker.java:[line 58]<br/>At UpdateChecker.java:[line 102]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N85374');">
<td>
<span class="priority-2">SECCRLFLOG</span>
</td>
<td>This use of org/slf4j/Logger.info(Ljava/lang/String;)V might be used to include CRLF characters into log messages</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N85374" style="display: none;">
<a href="#CRLF_INJECTION_LOGS">Bug type CRLF_INJECTION_LOGS (click for details)</a>
<br/>In class org.quartz.utils.UpdateChecker<br/>In method org.quartz.utils.UpdateChecker.doCheck()<br/>At UpdateChecker.java:[line 64]<br/>Sink method org/slf4j/Logger.info(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Tainted source java/util/Properties.getProperty(Ljava/lang/String;)Ljava/lang/String;<br/>Tainted source java/util/Properties.load(Ljava/io/InputStream;)V<br/>Tainted source org/quartz/utils/UpdateChecker.getUpdateProperties(Ljava/net/URL;)Ljava/util/Properties;<br/>At UpdateChecker.java:[line 56]<br/>At UpdateChecker.java:[line 62]<br/>At UpdateChecker.java:[line 102]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N85483');">
<td>
<span class="priority-2">SECCRLFLOG</span>
</td>
<td>This use of org/slf4j/Logger.info(Ljava/lang/String;)V might be used to include CRLF characters into log messages</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N85483" style="display: none;">
<a href="#CRLF_INJECTION_LOGS">Bug type CRLF_INJECTION_LOGS (click for details)</a>
<br/>In class org.quartz.utils.UpdateChecker<br/>In method org.quartz.utils.UpdateChecker.doCheck()<br/>At UpdateChecker.java:[line 84]<br/>Sink method org/slf4j/Logger.info(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Tainted source java/util/Properties.getProperty(Ljava/lang/String;)Ljava/lang/String;<br/>Tainted source java/util/Properties.load(Ljava/io/InputStream;)V<br/>Tainted source org/quartz/utils/UpdateChecker.getUpdateProperties(Ljava/net/URL;)Ljava/util/Properties;<br/>At UpdateChecker.java:[line 56]<br/>At UpdateChecker.java:[line 66]<br/>At UpdateChecker.java:[line 69]<br/>At UpdateChecker.java:[line 71]<br/>At UpdateChecker.java:[line 73]<br/>At UpdateChecker.java:[line 75]<br/>At UpdateChecker.java:[line 76]<br/>At UpdateChecker.java:[line 78]<br/>At UpdateChecker.java:[line 79]<br/>At UpdateChecker.java:[line 80]<br/>At UpdateChecker.java:[line 84]<br/>At UpdateChecker.java:[line 102]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N86098');">
<td>
<span class="priority-2">SECCRLFLOG</span>
</td>
<td>This use of org/slf4j/Logger.info(Ljava/lang/String;)V might be used to include CRLF characters into log messages</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N86098" style="display: none;">
<a href="#CRLF_INJECTION_LOGS">Bug type CRLF_INJECTION_LOGS (click for details)</a>
<br/>In class org.terracotta.quartz.UpdateChecker<br/>In method org.terracotta.quartz.UpdateChecker.doCheck()<br/>At UpdateChecker.java:[line 78]<br/>Sink method org/slf4j/Logger.info(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Tainted source java/util/Properties.getProperty(Ljava/lang/String;)Ljava/lang/String;<br/>Tainted source org/terracotta/quartz/UpdateChecker.getUpdateProperties(Ljava/net/URL;)Ljava/util/Properties;<br/>Tainted source java/util/Properties.load(Ljava/io/InputStream;)V<br/>At UpdateChecker.java:[line 74]<br/>At UpdateChecker.java:[line 76]<br/>At UpdateChecker.java:[line 119]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N86207');">
<td>
<span class="priority-2">SECCRLFLOG</span>
</td>
<td>This use of org/slf4j/Logger.info(Ljava/lang/String;)V might be used to include CRLF characters into log messages</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N86207" style="display: none;">
<a href="#CRLF_INJECTION_LOGS">Bug type CRLF_INJECTION_LOGS (click for details)</a>
<br/>In class org.terracotta.quartz.UpdateChecker<br/>In method org.terracotta.quartz.UpdateChecker.doCheck()<br/>At UpdateChecker.java:[line 82]<br/>Sink method org/slf4j/Logger.info(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Tainted source java/util/Properties.getProperty(Ljava/lang/String;)Ljava/lang/String;<br/>Tainted source org/terracotta/quartz/UpdateChecker.getUpdateProperties(Ljava/net/URL;)Ljava/util/Properties;<br/>Tainted source java/util/Properties.load(Ljava/io/InputStream;)V<br/>At UpdateChecker.java:[line 74]<br/>At UpdateChecker.java:[line 80]<br/>At UpdateChecker.java:[line 119]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N86316');">
<td>
<span class="priority-2">SECCRLFLOG</span>
</td>
<td>This use of org/slf4j/Logger.info(Ljava/lang/String;)V might be used to include CRLF characters into log messages</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N86316" style="display: none;">
<a href="#CRLF_INJECTION_LOGS">Bug type CRLF_INJECTION_LOGS (click for details)</a>
<br/>In class org.terracotta.quartz.UpdateChecker<br/>In method org.terracotta.quartz.UpdateChecker.doCheck()<br/>At UpdateChecker.java:[line 102]<br/>Sink method org/slf4j/Logger.info(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Tainted source java/util/Properties.getProperty(Ljava/lang/String;)Ljava/lang/String;<br/>Tainted source org/terracotta/quartz/UpdateChecker.getUpdateProperties(Ljava/net/URL;)Ljava/util/Properties;<br/>Tainted source java/util/Properties.load(Ljava/io/InputStream;)V<br/>At UpdateChecker.java:[line 74]<br/>At UpdateChecker.java:[line 84]<br/>At UpdateChecker.java:[line 87]<br/>At UpdateChecker.java:[line 89]<br/>At UpdateChecker.java:[line 91]<br/>At UpdateChecker.java:[line 93]<br/>At UpdateChecker.java:[line 94]<br/>At UpdateChecker.java:[line 96]<br/>At UpdateChecker.java:[line 97]<br/>At UpdateChecker.java:[line 98]<br/>At UpdateChecker.java:[line 102]<br/>At UpdateChecker.java:[line 119]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66417');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in org.quartz.impl.jdbcjobstore.CacheDelegate.getObjectFromBlob(ResultSet, String)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66417" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.CacheDelegate<br/>In method org.quartz.impl.jdbcjobstore.CacheDelegate.getObjectFromBlob(ResultSet, String)<br/>At CacheDelegate.java:[line 84]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66363');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in org.quartz.impl.jdbcjobstore.CUBRIDDelegate.getObjectFromBlob(ResultSet, String)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66363" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.CUBRIDDelegate<br/>In method org.quartz.impl.jdbcjobstore.CUBRIDDelegate.getObjectFromBlob(ResultSet, String)<br/>At CUBRIDDelegate.java:[line 64]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67223');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in org.quartz.impl.jdbcjobstore.HSQLDBDelegate.getObjectFromBlob(ResultSet, String)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67223" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.HSQLDBDelegate<br/>In method org.quartz.impl.jdbcjobstore.HSQLDBDelegate.getObjectFromBlob(ResultSet, String)<br/>At HSQLDBDelegate.java:[line 74]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67277');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in org.quartz.impl.jdbcjobstore.MSSQLDelegate.getObjectFromBlob(ResultSet, String)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67277" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.MSSQLDelegate<br/>In method org.quartz.impl.jdbcjobstore.MSSQLDelegate.getObjectFromBlob(ResultSet, String)<br/>At MSSQLDelegate.java:[line 72]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N83500');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in org.quartz.impl.jdbcjobstore.oracle.OracleDelegate.getObjectFromBlob(ResultSet, String)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N83500" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.oracle.OracleDelegate<br/>In method org.quartz.impl.jdbcjobstore.oracle.OracleDelegate.getObjectFromBlob(ResultSet, String)<br/>At OracleDelegate.java:[line 141]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67331');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in org.quartz.impl.jdbcjobstore.PointbaseDelegate.getObjectFromBlob(ResultSet, String)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67331" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.PointbaseDelegate<br/>In method org.quartz.impl.jdbcjobstore.PointbaseDelegate.getObjectFromBlob(ResultSet, String)<br/>At PointbaseDelegate.java:[line 416]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67868');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in org.quartz.impl.jdbcjobstore.PostgreSQLDelegate.getObjectFromBlob(ResultSet, String)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67868" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.PostgreSQLDelegate<br/>In method org.quartz.impl.jdbcjobstore.PostgreSQLDelegate.getObjectFromBlob(ResultSet, String)<br/>At PostgreSQLDelegate.java:[line 73]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68874');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in org.quartz.impl.jdbcjobstore.StdJDBCDelegate.getObjectFromBlob(ResultSet, String)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68874" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.getObjectFromBlob(ResultSet, String)<br/>At StdJDBCDelegate.java:[line 3158]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N83244');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in org.quartz.impl.jdbcjobstore.SybaseDelegate.getObjectFromBlob(ResultSet, String)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N83244" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.SybaseDelegate<br/>In method org.quartz.impl.jdbcjobstore.SybaseDelegate.getObjectFromBlob(ResultSet, String)<br/>At SybaseDelegate.java:[line 76]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N83446');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in org.quartz.impl.jdbcjobstore.WebLogicDelegate.getObjectFromBlob(ResultSet, String)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N83446" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.WebLogicDelegate<br/>In method org.quartz.impl.jdbcjobstore.WebLogicDelegate.getObjectFromBlob(ResultSet, String)<br/>At WebLogicDelegate.java:[line 79]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N86789');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in org.terracotta.quartz.collections.SerializationHelper.deserialize(byte[])</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N86789" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class org.terracotta.quartz.collections.SerializationHelper<br/>In method org.terracotta.quartz.collections.SerializationHelper.deserialize(byte[])<br/>At SerializationHelper.java:[line 37]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N86843');">
<td>
<span class="priority-1">SECOBDES</span>
</td>
<td>Object deserialization is used in org.terracotta.quartz.collections.SerializationHelper.deserializeFromString(String)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N86843" style="display: none;">
<a href="#OBJECT_DESERIALIZATION">Bug type OBJECT_DESERIALIZATION (click for details)</a>
<br/>In class org.terracotta.quartz.collections.SerializationHelper<br/>In method org.terracotta.quartz.collections.SerializationHelper.deserializeFromString(String)<br/>At SerializationHelper.java:[line 48]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65740');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65740" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.quartz.core.QuartzScheduler<br/>In method new org.quartz.core.QuartzScheduler(QuartzSchedulerResources, long, long)<br/>At QuartzScheduler.java:[line 177]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65798');">
<td>
<span class="priority-2">SECPR</span>
</td>
<td>This random generator (java.util.Random) is predictable</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65798" style="display: none;">
<a href="#PREDICTABLE_RANDOM">Bug type PREDICTABLE_RANDOM (click for details)</a>
<br/>In class org.quartz.core.QuartzSchedulerThread<br/>In method new org.quartz.core.QuartzSchedulerThread(QuartzScheduler, QuartzSchedulerResources, boolean, int)<br/>At QuartzSchedulerThread.java:[line 69]<br/>Value java.util.Random</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66234');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66234" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.quartz.impl.StdSchedulerFactory<br/>In method org.quartz.impl.StdSchedulerFactory.initialize(String)<br/>At StdSchedulerFactory.java:[line 529]<br/>Sink method java/io/FileInputStream.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/StdSchedulerFactory.initialize(Ljava/lang/String;)V parameter 0<br/>At QuartzService.java:[line 232]<br/>At QuartzInitializerListener.java:[line 167]<br/>At QuartzInitializerListener.java:[line 242]<br/>At QuartzInitializerServlet.java:[line 183]<br/>At QuartzInitializerServlet.java:[line 251]<br/>At StdSchedulerFactory.java:[line 338]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N85003');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N85003" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.quartz.plugins.xml.XMLSchedulingDataProcessorPlugin$JobFile<br/>In method org.quartz.plugins.xml.XMLSchedulingDataProcessorPlugin$JobFile.initialize()<br/>At XMLSchedulingDataProcessorPlugin.java:[line 375]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/quartz/plugins/xml/XMLSchedulingDataProcessorPlugin$JobFile.fileName<br/>Unknown source org/quartz/plugins/xml/XMLSchedulingDataProcessorPlugin$JobFile.getFileName()Ljava/lang/String;<br/>At XMLSchedulingDataProcessorPlugin.java:[line 355]<br/>At XMLSchedulingDataProcessorPlugin.java:[line 375]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N85097');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N85097" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.quartz.plugins.xml.XMLSchedulingDataProcessorPlugin$JobFile<br/>In method org.quartz.plugins.xml.XMLSchedulingDataProcessorPlugin$JobFile.initialize()<br/>At XMLSchedulingDataProcessorPlugin.java:[line 384]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/net/URLDecoder.decode(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/spi/ClassLoadHelper.getResource(Ljava/lang/String;)Ljava/net/URL;<br/>Unknown source java/net/URL.getPath()Ljava/lang/String;<br/>At XMLSchedulingDataProcessorPlugin.java:[line 380]<br/>At XMLSchedulingDataProcessorPlugin.java:[line 382]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66471');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66471" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.CronTriggerPersistenceDelegate<br/>In method org.quartz.impl.jdbcjobstore.CronTriggerPersistenceDelegate.deleteExtendedTriggerProperties(Connection, TriggerKey)<br/>At CronTriggerPersistenceDelegate.java:[line 40]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/CronTriggerPersistenceDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/CronTriggerPersistenceDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At CronTriggerPersistenceDelegate.java:[line 40]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66590');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66590" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.CronTriggerPersistenceDelegate<br/>In method org.quartz.impl.jdbcjobstore.CronTriggerPersistenceDelegate.insertExtendedTriggerProperties(Connection, OperableTrigger, String, JobDetail)<br/>At CronTriggerPersistenceDelegate.java:[line 57]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/CronTriggerPersistenceDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/CronTriggerPersistenceDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At CronTriggerPersistenceDelegate.java:[line 57]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66709');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66709" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.CronTriggerPersistenceDelegate<br/>In method org.quartz.impl.jdbcjobstore.CronTriggerPersistenceDelegate.loadExtendedTriggerProperties(Connection, TriggerKey)<br/>At CronTriggerPersistenceDelegate.java:[line 75]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/CronTriggerPersistenceDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/CronTriggerPersistenceDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At CronTriggerPersistenceDelegate.java:[line 75]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66828');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66828" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.CronTriggerPersistenceDelegate<br/>In method org.quartz.impl.jdbcjobstore.CronTriggerPersistenceDelegate.updateExtendedTriggerProperties(Connection, OperableTrigger, String, JobDetail)<br/>At CronTriggerPersistenceDelegate.java:[line 106]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/CronTriggerPersistenceDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/CronTriggerPersistenceDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At CronTriggerPersistenceDelegate.java:[line 106]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66947');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66947" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.DB2v6Delegate<br/>In method org.quartz.impl.jdbcjobstore.DB2v6Delegate.selectNumCalendars(Connection)<br/>At DB2v6Delegate.java:[line 133]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/DB2v6Delegate.rtp(Ljava/lang/String;)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67016');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67016" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.DB2v6Delegate<br/>In method org.quartz.impl.jdbcjobstore.DB2v6Delegate.selectNumJobs(Connection)<br/>At DB2v6Delegate.java:[line 69]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/DB2v6Delegate.rtp(Ljava/lang/String;)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67085');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67085" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.DB2v6Delegate<br/>In method org.quartz.impl.jdbcjobstore.DB2v6Delegate.selectNumTriggers(Connection)<br/>At DB2v6Delegate.java:[line 112]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/DB2v6Delegate.rtp(Ljava/lang/String;)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67154');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67154" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.DB2v6Delegate<br/>In method org.quartz.impl.jdbcjobstore.DB2v6Delegate.selectNumTriggersForJob(Connection, JobKey)<br/>At DB2v6Delegate.java:[line 89]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/DB2v6Delegate.rtp(Ljava/lang/String;)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N83554');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N83554" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.oracle.OracleDelegate<br/>In method org.quartz.impl.jdbcjobstore.oracle.OracleDelegate.insertCalendar(Connection, String, Calendar)<br/>At OracleDelegate.java:[line 480]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/oracle/OracleDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N83623');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N83623" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.oracle.OracleDelegate<br/>In method org.quartz.impl.jdbcjobstore.oracle.OracleDelegate.insertCalendar(Connection, String, Calendar)<br/>At OracleDelegate.java:[line 486]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/oracle/OracleDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N83692');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N83692" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.oracle.OracleDelegate<br/>In method org.quartz.impl.jdbcjobstore.oracle.OracleDelegate.insertCalendar(Connection, String, Calendar)<br/>At OracleDelegate.java:[line 493]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/oracle/OracleDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N83761');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N83761" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.oracle.OracleDelegate<br/>In method org.quartz.impl.jdbcjobstore.oracle.OracleDelegate.insertJobDetail(Connection, JobDetail)<br/>At OracleDelegate.java:[line 160]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/oracle/OracleDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N83830');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N83830" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.oracle.OracleDelegate<br/>In method org.quartz.impl.jdbcjobstore.oracle.OracleDelegate.insertJobDetail(Connection, JobDetail)<br/>At OracleDelegate.java:[line 173]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/oracle/OracleDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N83899');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N83899" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.oracle.OracleDelegate<br/>In method org.quartz.impl.jdbcjobstore.oracle.OracleDelegate.insertJobDetail(Connection, JobDetail)<br/>At OracleDelegate.java:[line 191]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/oracle/OracleDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N83968');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N83968" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.oracle.OracleDelegate<br/>In method org.quartz.impl.jdbcjobstore.oracle.OracleDelegate.insertTrigger(Connection, OperableTrigger, String, JobDetail)<br/>At OracleDelegate.java:[line 286]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/oracle/OracleDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N84037');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N84037" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.oracle.OracleDelegate<br/>In method org.quartz.impl.jdbcjobstore.oracle.OracleDelegate.insertTrigger(Connection, OperableTrigger, String, JobDetail)<br/>At OracleDelegate.java:[line 325]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/oracle/OracleDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N84106');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N84106" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.oracle.OracleDelegate<br/>In method org.quartz.impl.jdbcjobstore.oracle.OracleDelegate.insertTrigger(Connection, OperableTrigger, String, JobDetail)<br/>At OracleDelegate.java:[line 332]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/oracle/OracleDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N84175');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N84175" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.oracle.OracleDelegate<br/>In method org.quartz.impl.jdbcjobstore.oracle.OracleDelegate.insertTrigger(Connection, OperableTrigger, String, JobDetail)<br/>At OracleDelegate.java:[line 348]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/oracle/OracleDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N84244');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N84244" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.oracle.OracleDelegate<br/>In method org.quartz.impl.jdbcjobstore.oracle.OracleDelegate.updateCalendar(Connection, String, Calendar)<br/>At OracleDelegate.java:[line 520]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/oracle/OracleDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N84313');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N84313" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.oracle.OracleDelegate<br/>In method org.quartz.impl.jdbcjobstore.oracle.OracleDelegate.updateCalendar(Connection, String, Calendar)<br/>At OracleDelegate.java:[line 527]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/oracle/OracleDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N84382');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N84382" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.oracle.OracleDelegate<br/>In method org.quartz.impl.jdbcjobstore.oracle.OracleDelegate.updateJobData(Connection, JobDetail)<br/>At OracleDelegate.java:[line 556]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/oracle/OracleDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N84451');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N84451" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.oracle.OracleDelegate<br/>In method org.quartz.impl.jdbcjobstore.oracle.OracleDelegate.updateJobData(Connection, JobDetail)<br/>At OracleDelegate.java:[line 566]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/oracle/OracleDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N84520');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N84520" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.oracle.OracleDelegate<br/>In method org.quartz.impl.jdbcjobstore.oracle.OracleDelegate.updateJobDetail(Connection, JobDetail)<br/>At OracleDelegate.java:[line 230]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/oracle/OracleDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N84589');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N84589" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.oracle.OracleDelegate<br/>In method org.quartz.impl.jdbcjobstore.oracle.OracleDelegate.updateJobDetail(Connection, JobDetail)<br/>At OracleDelegate.java:[line 243]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/oracle/OracleDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N84658');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N84658" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.oracle.OracleDelegate<br/>In method org.quartz.impl.jdbcjobstore.oracle.OracleDelegate.updateJobDetail(Connection, JobDetail)<br/>At OracleDelegate.java:[line 253]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/oracle/OracleDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N84727');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N84727" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.oracle.OracleDelegate<br/>In method org.quartz.impl.jdbcjobstore.oracle.OracleDelegate.updateTrigger(Connection, OperableTrigger, String, JobDetail)<br/>At OracleDelegate.java:[line 388]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/oracle/OracleDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N84796');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N84796" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.oracle.OracleDelegate<br/>In method org.quartz.impl.jdbcjobstore.oracle.OracleDelegate.updateTrigger(Connection, OperableTrigger, String, JobDetail)<br/>At OracleDelegate.java:[line 431]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/oracle/OracleDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N84865');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N84865" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.oracle.OracleDelegate<br/>In method org.quartz.impl.jdbcjobstore.oracle.OracleDelegate.updateTrigger(Connection, OperableTrigger, String, JobDetail)<br/>At OracleDelegate.java:[line 438]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/oracle/OracleDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N84934');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N84934" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.oracle.OracleDelegate<br/>In method org.quartz.impl.jdbcjobstore.oracle.OracleDelegate.updateTrigger(Connection, OperableTrigger, String, JobDetail)<br/>At OracleDelegate.java:[line 446]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/oracle/OracleDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67385');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67385" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.PointbaseDelegate<br/>In method org.quartz.impl.jdbcjobstore.PointbaseDelegate.insertCalendar(Connection, String, Calendar)<br/>At PointbaseDelegate.java:[line 336]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/PointbaseDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67454');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67454" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.PointbaseDelegate<br/>In method org.quartz.impl.jdbcjobstore.PointbaseDelegate.insertJobDetail(Connection, JobDetail)<br/>At PointbaseDelegate.java:[line 76]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/PointbaseDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67523');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67523" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.PointbaseDelegate<br/>In method org.quartz.impl.jdbcjobstore.PointbaseDelegate.insertTrigger(Connection, OperableTrigger, String, JobDetail)<br/>At PointbaseDelegate.java:[line 153]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/PointbaseDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67592');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67592" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.PointbaseDelegate<br/>In method org.quartz.impl.jdbcjobstore.PointbaseDelegate.updateCalendar(Connection, String, Calendar)<br/>At PointbaseDelegate.java:[line 372]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/PointbaseDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67661');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67661" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.PointbaseDelegate<br/>In method org.quartz.impl.jdbcjobstore.PointbaseDelegate.updateJobData(Connection, JobDetail)<br/>At PointbaseDelegate.java:[line 290]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/PointbaseDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67730');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67730" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.PointbaseDelegate<br/>In method org.quartz.impl.jdbcjobstore.PointbaseDelegate.updateJobDetail(Connection, JobDetail)<br/>At PointbaseDelegate.java:[line 121]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/PointbaseDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67799');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67799" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.PointbaseDelegate<br/>In method org.quartz.impl.jdbcjobstore.PointbaseDelegate.updateTrigger(Connection, OperableTrigger, String, JobDetail)<br/>At PointbaseDelegate.java:[line 215]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/PointbaseDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67922');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67922" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.SimplePropertiesTriggerPersistenceDelegateSupport<br/>In method org.quartz.impl.jdbcjobstore.SimplePropertiesTriggerPersistenceDelegateSupport.deleteExtendedTriggerProperties(Connection, TriggerKey)<br/>At SimplePropertiesTriggerPersistenceDelegateSupport.java:[line 90]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/SimplePropertiesTriggerPersistenceDelegateSupport.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/SimplePropertiesTriggerPersistenceDelegateSupport.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At SimplePropertiesTriggerPersistenceDelegateSupport.java:[line 90]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68041');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68041" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.SimplePropertiesTriggerPersistenceDelegateSupport<br/>In method org.quartz.impl.jdbcjobstore.SimplePropertiesTriggerPersistenceDelegateSupport.insertExtendedTriggerProperties(Connection, OperableTrigger, String, JobDetail)<br/>At SimplePropertiesTriggerPersistenceDelegateSupport.java:[line 107]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/SimplePropertiesTriggerPersistenceDelegateSupport.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/SimplePropertiesTriggerPersistenceDelegateSupport.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At SimplePropertiesTriggerPersistenceDelegateSupport.java:[line 107]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68160');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68160" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.SimplePropertiesTriggerPersistenceDelegateSupport<br/>In method org.quartz.impl.jdbcjobstore.SimplePropertiesTriggerPersistenceDelegateSupport.loadExtendedTriggerProperties(Connection, TriggerKey)<br/>At SimplePropertiesTriggerPersistenceDelegateSupport.java:[line 134]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/SimplePropertiesTriggerPersistenceDelegateSupport.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/SimplePropertiesTriggerPersistenceDelegateSupport.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At SimplePropertiesTriggerPersistenceDelegateSupport.java:[line 134]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68279');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68279" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.SimplePropertiesTriggerPersistenceDelegateSupport<br/>In method org.quartz.impl.jdbcjobstore.SimplePropertiesTriggerPersistenceDelegateSupport.updateExtendedTriggerProperties(Connection, OperableTrigger, String, JobDetail)<br/>At SimplePropertiesTriggerPersistenceDelegateSupport.java:[line 171]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/SimplePropertiesTriggerPersistenceDelegateSupport.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/SimplePropertiesTriggerPersistenceDelegateSupport.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At SimplePropertiesTriggerPersistenceDelegateSupport.java:[line 171]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68398');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68398" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.SimpleTriggerPersistenceDelegate<br/>In method org.quartz.impl.jdbcjobstore.SimpleTriggerPersistenceDelegate.deleteExtendedTriggerProperties(Connection, TriggerKey)<br/>At SimpleTriggerPersistenceDelegate.java:[line 39]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/SimpleTriggerPersistenceDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/SimpleTriggerPersistenceDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At SimpleTriggerPersistenceDelegate.java:[line 39]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68517');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68517" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.SimpleTriggerPersistenceDelegate<br/>In method org.quartz.impl.jdbcjobstore.SimpleTriggerPersistenceDelegate.insertExtendedTriggerProperties(Connection, OperableTrigger, String, JobDetail)<br/>At SimpleTriggerPersistenceDelegate.java:[line 56]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/SimpleTriggerPersistenceDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/SimpleTriggerPersistenceDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At SimpleTriggerPersistenceDelegate.java:[line 56]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68636');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68636" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.SimpleTriggerPersistenceDelegate<br/>In method org.quartz.impl.jdbcjobstore.SimpleTriggerPersistenceDelegate.loadExtendedTriggerProperties(Connection, TriggerKey)<br/>At SimpleTriggerPersistenceDelegate.java:[line 75]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/SimpleTriggerPersistenceDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/SimpleTriggerPersistenceDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At SimpleTriggerPersistenceDelegate.java:[line 75]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N68755');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N68755" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.SimpleTriggerPersistenceDelegate<br/>In method org.quartz.impl.jdbcjobstore.SimpleTriggerPersistenceDelegate.updateExtendedTriggerProperties(Connection, OperableTrigger, String, JobDetail)<br/>At SimpleTriggerPersistenceDelegate.java:[line 109]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/SimpleTriggerPersistenceDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/SimpleTriggerPersistenceDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At SimpleTriggerPersistenceDelegate.java:[line 109]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N68928');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N68928" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.calendarExists(Connection, String)<br/>At StdJDBCDelegate.java:[line 2268]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 2268]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69082');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69082" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.calendarIsReferenced(Connection, String)<br/>At StdJDBCDelegate.java:[line 2340]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 2340]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69236');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69236" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.clearData(Connection)<br/>At StdJDBCDelegate.java:[line 558]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 558]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69390');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69390" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.clearData(Connection)<br/>At StdJDBCDelegate.java:[line 561]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 561]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69544');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69544" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.clearData(Connection)<br/>At StdJDBCDelegate.java:[line 564]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 564]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N69698');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N69698" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.clearData(Connection)<br/>At StdJDBCDelegate.java:[line 567]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 567]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N69852');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N69852" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.clearData(Connection)<br/>At StdJDBCDelegate.java:[line 570]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 570]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70006');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70006" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.clearData(Connection)<br/>At StdJDBCDelegate.java:[line 573]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 573]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70160');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70160" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.clearData(Connection)<br/>At StdJDBCDelegate.java:[line 576]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 576]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70314');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70314" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.clearData(Connection)<br/>At StdJDBCDelegate.java:[line 579]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 579]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70468');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70468" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.countMisfiredTriggersInState(Connection, String, long)<br/>At StdJDBCDelegate.java:[line 390]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 390]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70622');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70622" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.deleteAllPausedTriggerGroups(Connection)<br/>At StdJDBCDelegate.java:[line 2136]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 2136]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N70776');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N70776" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.deleteBlobTrigger(Connection, TriggerKey)<br/>At StdJDBCDelegate.java:[line 1536]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 1536]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N70930');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N70930" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.deleteCalendar(Connection, String)<br/>At StdJDBCDelegate.java:[line 2371]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 2371]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71084');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71084" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.deleteFiredTrigger(Connection, String)<br/>At StdJDBCDelegate.java:[line 2868]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 2868]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71238');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71238" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.deleteFiredTriggers(Connection)<br/>At StdJDBCDelegate.java:[line 523]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 523]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71392');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71392" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.deleteFiredTriggers(Connection, String)<br/>At StdJDBCDelegate.java:[line 536]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 536]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71546');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71546" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.deleteJobDetail(Connection, JobKey)<br/>At StdJDBCDelegate.java:[line 723]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 723]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N71700');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N71700" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.deletePausedTriggerGroup(Connection, String)<br/>At StdJDBCDelegate.java:[line 2106]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 2106]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N71854');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N71854" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.deletePausedTriggerGroup(Connection, GroupMatcher)<br/>At StdJDBCDelegate.java:[line 2121]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 2121]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N72008');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N72008" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.deleteSchedulerState(Connection, String)<br/>At StdJDBCDelegate.java:[line 2915]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 2915]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N72162');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N72162" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.deleteTrigger(Connection, TriggerKey)<br/>At StdJDBCDelegate.java:[line 1561]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 1561]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N72316');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N72316" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.hasMisfiredTriggersInState(Connection, String, long, int, List)<br/>At StdJDBCDelegate.java:[line 353]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 353]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N72470');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N72470" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.insertBlobTrigger(Connection, OperableTrigger)<br/>At StdJDBCDelegate.java:[line 1130]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 1130]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N72624');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N72624" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.insertCalendar(Connection, String, Calendar)<br/>At StdJDBCDelegate.java:[line 2209]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 2209]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N72778');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N72778" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.insertFiredTrigger(Connection, OperableTrigger, String, JobDetail)<br/>At StdJDBCDelegate.java:[line 2602]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 2602]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N72932');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N72932" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.insertJobDetail(Connection, JobDetail)<br/>At StdJDBCDelegate.java:[line 613]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 613]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N73086');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N73086" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.insertPausedTriggerGroup(Connection, String)<br/>At StdJDBCDelegate.java:[line 2091]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 2091]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N73240');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N73240" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.insertSchedulerState(Connection, String, long, long)<br/>At StdJDBCDelegate.java:[line 2900]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 2900]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N73394');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N73394" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.insertTrigger(Connection, OperableTrigger, String, JobDetail)<br/>At StdJDBCDelegate.java:[line 1053]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 1053]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N73548');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N73548" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.isExistingTriggerGroup(Connection, String)<br/>At StdJDBCDelegate.java:[line 2168]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 2168]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N73702');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N73702" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.isJobNonConcurrent(Connection, JobKey)<br/>At StdJDBCDelegate.java:[line 746]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 746]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N73856');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N73856" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.isTriggerGroupPaused(Connection, String)<br/>At StdJDBCDelegate.java:[line 2151]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 2151]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N74010');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N74010" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.jobExists(Connection, JobKey)<br/>At StdJDBCDelegate.java:[line 773]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 773]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N74164');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N74164" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.selectCalendar(Connection, String)<br/>At StdJDBCDelegate.java:[line 2305]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 2304]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N74318');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N74318" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.selectCalendars(Connection)<br/>At StdJDBCDelegate.java:[line 2424]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 2424]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N74472');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N74472" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.selectFiredTriggerInstanceNames(Connection)<br/>At StdJDBCDelegate.java:[line 2839]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 2839]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N74626');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N74626" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.selectFiredTriggerRecords(Connection, String, String)<br/>At StdJDBCDelegate.java:[line 2690]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 2690]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N74780');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N74780" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.selectFiredTriggerRecords(Connection, String, String)<br/>At StdJDBCDelegate.java:[line 2694]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 2694]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N74934');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N74934" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.selectFiredTriggerRecordsByJob(Connection, String, String)<br/>At StdJDBCDelegate.java:[line 2742]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 2742]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N75088');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N75088" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.selectFiredTriggerRecordsByJob(Connection, String, String)<br/>At StdJDBCDelegate.java:[line 2746]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 2746]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N75242');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N75242" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.selectInstancesFiredTriggerRecords(Connection, String)<br/>At StdJDBCDelegate.java:[line 2788]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 2788]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N75396');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N75396" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.selectJobDetail(Connection, JobKey, ClassLoadHelper)<br/>At StdJDBCDelegate.java:[line 839]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 839]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N75550');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N75550" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.selectJobExecutionCount(Connection, JobKey)<br/>At StdJDBCDelegate.java:[line 2882]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 2882]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N75704');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N75704" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.selectJobForTrigger(Connection, ClassLoadHelper, TriggerKey)<br/>At StdJDBCDelegate.java:[line 1629]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 1629]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N75858');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N75858" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.selectJobGroups(Connection)<br/>At StdJDBCDelegate.java:[line 940]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 940]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N76012');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N76012" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.selectJobsInGroup(Connection, GroupMatcher)<br/>At StdJDBCDelegate.java:[line 973]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 973]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N76166');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N76166" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.selectJobsInGroup(Connection, GroupMatcher)<br/>At StdJDBCDelegate.java:[line 977]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 977]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N76320');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N76320" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.selectMisfiredTriggers(Connection, long)<br/>At StdJDBCDelegate.java:[line 258]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 258]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N76474');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N76474" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.selectMisfiredTriggersInGroupInState(Connection, String, String, long)<br/>At StdJDBCDelegate.java:[line 423]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 423]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N76628');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N76628" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.selectMisfiredTriggersInState(Connection, String, long)<br/>At StdJDBCDelegate.java:[line 314]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 314]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N76782');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N76782" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.selectNextFireTime(Connection)<br/>At StdJDBCDelegate.java:[line 2458]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 2458]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N76936');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N76936" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.selectNumCalendars(Connection)<br/>At StdJDBCDelegate.java:[line 2395]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 2395]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N77090');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N77090" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.selectNumJobs(Connection)<br/>At StdJDBCDelegate.java:[line 912]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 912]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N77244');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N77244" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.selectNumTriggers(Connection)<br/>At StdJDBCDelegate.java:[line 1983]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 1983]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N77398');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N77398" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.selectNumTriggersForJob(Connection, JobKey)<br/>At StdJDBCDelegate.java:[line 1595]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 1595]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N77552');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N77552" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.selectPausedTriggerGroups(Connection)<br/>At StdJDBCDelegate.java:[line 3210]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At StdJDBCDelegate.java:[line 3210]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N77706');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N77706" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.selectSchedulerStateRecords(Connection, String)<br/>At StdJDBCDelegate.java:[line 2946]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 2946]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N77860');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N77860" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.selectSchedulerStateRecords(Connection, String)<br/>At StdJDBCDelegate.java:[line 2949]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 2949]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N78014');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N78014" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.selectTrigger(Connection, TriggerKey)<br/>At StdJDBCDelegate.java:[line 1735]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 1735]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N78168');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N78168" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.selectTrigger(Connection, TriggerKey)<br/>At StdJDBCDelegate.java:[line 1779]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 1779]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N78322');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N78322" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.selectTriggerForFireTime(Connection, long)<br/>At StdJDBCDelegate.java:[line 2491]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 2491]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N78476');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N78476" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.selectTriggerGroups(Connection)<br/>At StdJDBCDelegate.java:[line 2011]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 2011]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N78630');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N78630" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.selectTriggerGroups(Connection, GroupMatcher)<br/>At StdJDBCDelegate.java:[line 2031]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 2031]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N78784');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N78784" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.selectTriggerJobDataMap(Connection, String, String)<br/>At StdJDBCDelegate.java:[line 1857]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 1857]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N78938');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N78938" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.selectTriggerKeysForJob(Connection, JobKey)<br/>At StdJDBCDelegate.java:[line 688]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 688]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N79092');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N79092" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.selectTriggerState(Connection, TriggerKey)<br/>At StdJDBCDelegate.java:[line 1903]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 1903]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N79246');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N79246" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.selectTriggerStatus(Connection, TriggerKey)<br/>At StdJDBCDelegate.java:[line 1939]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 1939]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N79400');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N79400" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.selectTriggerToAcquire(Connection, long, long, int)<br/>At StdJDBCDelegate.java:[line 2556]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 2556]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N79554');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N79554" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.selectTriggersForCalendar(Connection, String)<br/>At StdJDBCDelegate.java:[line 1702]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 1702]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N79708');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N79708" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.selectTriggersForJob(Connection, JobKey)<br/>At StdJDBCDelegate.java:[line 1675]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 1675]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N79862');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N79862" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.selectTriggersForRecoveringJobs(Connection)<br/>At StdJDBCDelegate.java:[line 469]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 469]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N80016');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N80016" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.selectTriggersInGroup(Connection, GroupMatcher)<br/>At StdJDBCDelegate.java:[line 2065]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 2065]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N80170');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N80170" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.selectTriggersInGroup(Connection, GroupMatcher)<br/>At StdJDBCDelegate.java:[line 2069]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 2069]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N80324');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N80324" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.selectTriggersInState(Connection, String)<br/>At StdJDBCDelegate.java:[line 292]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 292]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N80478');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N80478" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.triggerExists(Connection, TriggerKey)<br/>At StdJDBCDelegate.java:[line 1287]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 1287]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N80632');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N80632" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.updateBlobTrigger(Connection, OperableTrigger)<br/>At StdJDBCDelegate.java:[line 1259]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 1259]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N80786');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N80786" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.updateCalendar(Connection, String, Calendar)<br/>At StdJDBCDelegate.java:[line 2241]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 2241]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N80940');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N80940" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.updateFiredTrigger(Connection, OperableTrigger, String, JobDetail)<br/>At StdJDBCDelegate.java:[line 2646]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 2646]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N81094');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N81094" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.updateJobData(Connection, JobDetail)<br/>At StdJDBCDelegate.java:[line 807]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 807]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N81248');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N81248" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.updateJobDetail(Connection, JobDetail)<br/>At StdJDBCDelegate.java:[line 654]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 654]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N81402');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N81402" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.updateSchedulerState(Connection, String, long)<br/>At StdJDBCDelegate.java:[line 2928]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 2928]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N81556');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N81556" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.updateTrigger(Connection, OperableTrigger, String, JobDetail)<br/>At StdJDBCDelegate.java:[line 1171]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 1171]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N81710');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N81710" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.updateTrigger(Connection, OperableTrigger, String, JobDetail)<br/>At StdJDBCDelegate.java:[line 1173]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 1173]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N81864');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N81864" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.updateTriggerGroupStateFromOtherState(Connection, GroupMatcher, String, String)<br/>At StdJDBCDelegate.java:[line 1465]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 1465]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N82018');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N82018" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.updateTriggerGroupStateFromOtherStates(Connection, GroupMatcher, String, String, String, String)<br/>At StdJDBCDelegate.java:[line 1396]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 1396]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N82172');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N82172" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.updateTriggerState(Connection, TriggerKey, String)<br/>At StdJDBCDelegate.java:[line 1319]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 1319]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N82326');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N82326" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.updateTriggerStateFromOtherState(Connection, TriggerKey, String, String)<br/>At StdJDBCDelegate.java:[line 1430]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 1430]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N82480');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N82480" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.updateTriggerStateFromOtherStates(Connection, TriggerKey, String, String, String, String)<br/>At StdJDBCDelegate.java:[line 1355]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 1355]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N82634');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N82634" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.updateTriggerStatesForJob(Connection, JobKey, String)<br/>At StdJDBCDelegate.java:[line 1493]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 1493]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N82788');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N82788" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.updateTriggerStatesForJobFromOtherState(Connection, JobKey, String, String)<br/>At StdJDBCDelegate.java:[line 1510]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 1510]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N82942');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N82942" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdJDBCDelegate<br/>In method org.quartz.impl.jdbcjobstore.StdJDBCDelegate.updateTriggerStatesFromOtherStates(Connection, String, String, String)<br/>At StdJDBCDelegate.java:[line 231]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 2<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 1<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source java/text/MessageFormat.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.getSchedulerNameLiteral()Ljava/lang/String;<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.tablePrefix<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.rtp(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdJDBCDelegate.schedNameLiteral<br/>Unknown source org/quartz/impl/jdbcjobstore/Util.rtp(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;<br/>At StdJDBCDelegate.java:[line 231]<br/>At StdJDBCDelegate.java:[line 2986]<br/>At StdJDBCDelegate.java:[line 2993]<br/>At Util.java:[line 68]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N83096');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N83096" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdRowLockSemaphore<br/>In method org.quartz.impl.jdbcjobstore.StdRowLockSemaphore.executeSQL(Connection, String, String, String)<br/>At StdRowLockSemaphore.java:[line 88]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdRowLockSemaphore.executeSQL(Ljava/sql/Connection;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V parameter 1<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N83170');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N83170" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.StdRowLockSemaphore<br/>In method org.quartz.impl.jdbcjobstore.StdRowLockSemaphore.executeSQL(Connection, String, String, String)<br/>At StdRowLockSemaphore.java:[line 105]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/StdRowLockSemaphore.executeSQL(Ljava/sql/Connection;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N83298');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N83298" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphore<br/>In method org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphore.executeSQL(Connection, String, String, String)<br/>At UpdateLockRowSemaphore.java:[line 87]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/UpdateLockRowSemaphore.executeSQL(Ljava/sql/Connection;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V parameter 1<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N83372');">
<td>
<span class="priority-2">SECSQLIJDBC</span>
</td>
<td>This use of java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement; can be vulnerable to SQL injection (with JDBC)</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N83372" style="display: none;">
<a href="#SQL_INJECTION_JDBC">Bug type SQL_INJECTION_JDBC (click for details)</a>
<br/>In class org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphore<br/>In method org.quartz.impl.jdbcjobstore.UpdateLockRowSemaphore.executeSQL(Connection, String, String, String)<br/>At UpdateLockRowSemaphore.java:[line 104]<br/>Sink method java/sql/Connection.prepareStatement(Ljava/lang/String;)Ljava/sql/PreparedStatement;<br/>Sink parameter 0<br/>Unknown source org/quartz/impl/jdbcjobstore/UpdateLockRowSemaphore.executeSQL(Ljava/sql/Connection;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V parameter 0<br/>Method usage not detected</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N85196');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N85196" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.quartz.plugins.xml.XMLSchedulingDataProcessorPlugin$JobFile<br/>In method org.quartz.plugins.xml.XMLSchedulingDataProcessorPlugin$JobFile.initialize()<br/>At XMLSchedulingDataProcessorPlugin.java:[line 386]<br/>Sink method java/net/URL.openStream()Ljava/io/InputStream;<br/>Sink parameter 0<br/>Unknown source org/quartz/spi/ClassLoadHelper.getResource(Ljava/lang/String;)Ljava/net/URL;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N85682');">
<td>
<span class="priority-1">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N85682" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.quartz.utils.UpdateChecker<br/>In method org.quartz.utils.UpdateChecker.getUpdateProperties(URL)<br/>At UpdateChecker.java:[line 97]<br/>Sink method java/net/URL.openConnection()Ljava/net/URLConnection;<br/>Sink parameter 0<br/>Unknown source org/quartz/utils/UpdateChecker.getUpdateProperties(Ljava/net/URL;)Ljava/util/Properties; parameter 0<br/>Method usage with tainted arguments detected<br/>At QuartzScheduler.java:[line 119]<br/>At QuartzScheduler.java:[line 120]<br/>At QuartzScheduler.java:[line 122]<br/>At QuartzScheduler.java:[line 341]<br/>At QuartzScheduler.java:[line 353]<br/>At QuartzScheduler.java:[line 357]<br/>At UpdateChecker.java:[line 55]<br/>At UpdateChecker.java:[line 56]<br/>At UpdateChecker.java:[line 92]<br/>At UpdateChecker.java:[line 114]<br/>At UpdateChecker.java:[line 130]<br/>At UpdateChecker.java:[line 131]<br/>At UpdateChecker.java:[line 132]<br/>At UpdateChecker.java:[line 133]<br/>At UpdateChecker.java:[line 134]<br/>At UpdateChecker.java:[line 135]<br/>At UpdateChecker.java:[line 137]<br/>At UpdateChecker.java:[line 138]<br/>At UpdateChecker.java:[line 139]<br/>At UpdateChecker.java:[line 156]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N85956');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N85956" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.quartz.xml.XMLSchedulingDataProcessor<br/>In method org.quartz.xml.XMLSchedulingDataProcessor.getSystemIdForFileName(String)<br/>At XMLSchedulingDataProcessor.java:[line 412]<br/>Sink method java/net/URL.openStream()Ljava/io/InputStream;<br/>Sink parameter 0<br/>Unknown source org/quartz/xml/XMLSchedulingDataProcessor.getURL(Ljava/lang/String;)Ljava/net/URL;<br/>Unknown source org/quartz/spi/ClassLoadHelper.getResource(Ljava/lang/String;)Ljava/net/URL;<br/>At XMLSchedulingDataProcessor.java:[line 404]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N86515');">
<td>
<span class="priority-1">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N86515" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.terracotta.quartz.UpdateChecker<br/>In method org.terracotta.quartz.UpdateChecker.getUpdateProperties(URL)<br/>At UpdateChecker.java:[line 115]<br/>Sink method java/net/URL.openConnection()Ljava/net/URLConnection;<br/>Sink parameter 0<br/>Unknown source org/terracotta/quartz/UpdateChecker.getUpdateProperties(Ljava/net/URL;)Ljava/util/Properties; parameter 0<br/>Method usage with tainted arguments detected<br/>At QuartzScheduler.java:[line 119]<br/>At QuartzScheduler.java:[line 120]<br/>At QuartzScheduler.java:[line 122]<br/>At QuartzScheduler.java:[line 341]<br/>At QuartzScheduler.java:[line 353]<br/>At QuartzScheduler.java:[line 357]<br/>At UpdateChecker.java:[line 73]<br/>At UpdateChecker.java:[line 74]<br/>At UpdateChecker.java:[line 110]<br/>At UpdateChecker.java:[line 131]<br/>At UpdateChecker.java:[line 147]<br/>At UpdateChecker.java:[line 148]<br/>At UpdateChecker.java:[line 149]<br/>At UpdateChecker.java:[line 150]<br/>At UpdateChecker.java:[line 151]<br/>At UpdateChecker.java:[line 152]<br/>At UpdateChecker.java:[line 154]<br/>At UpdateChecker.java:[line 155]<br/>At UpdateChecker.java:[line 156]<br/>At UpdateChecker.java:[line 173]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N86040');">
<td>
<span class="priority-2">SECXXEDOC</span>
</td>
<td>The use of DocumentBuilder.parse(...) (DocumentBuilder) is vulnerable to XML External Entity attacks</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N86040" style="display: none;">
<a href="#XXE_DOCUMENT">Bug type XXE_DOCUMENT (click for details)</a>
<br/>In class org.quartz.xml.XMLSchedulingDataProcessor<br/>In method org.quartz.xml.XMLSchedulingDataProcessor.process(InputSource)<br/>At XMLSchedulingDataProcessor.java:[line 525]<br/>Value DocumentBuilder.parse(...)</p>
</td>
</tr>
</table>
<h1>
<a name="Details">Details</a>
</h1>
<h2>
<a name="CRLF_INJECTION_LOGS">CRLF_INJECTION_LOGS: Potential CRLF Injection for logs</a>
</h2>
            
<p>
    When data from an untrusted source is put into a logger and not neutralized correctly,
    an attacker could forge log entries or include malicious content.
    Inserted false entries could be used to skew statistics, distract the administrator
    or even to implicate another party in the commission of a malicious act.
    If the log file is processed automatically, the attacker can render the file unusable
    by corrupting the format of the file or injecting unexpected characters.
    An attacker may also inject code or other commands into the log file and take advantage
    of a vulnerability in the log processing utility (e.g. command injection or XSS).
</p>
<br/>
<p>
<b>Code at risk:</b><br/>
<pre>String val = request.getParameter("user");
String metadata = request.getParameter("metadata");
[...]
if(authenticated) {
    log.info("User " + val + " (" + metadata + ") was authenticated successfully");
}
else {
    log.info("User " + val + " (" + metadata + ") was not authenticated");
}
</pre>

A malicious user could send the metadata parameter with the value: <code>"Firefox) was authenticated successfully\r\n[INFO] User bbb (Internet Explorer"</code>.
</p>

<b>Solution:</b><br/>
<p>
You can manually sanitize each parameter.
<pre>
log.info("User " + val.replaceAll("[\r\n]","") + " (" + userAgent.replaceAll("[\r\n]","") + ") was not authenticated");
</pre>
</p>

<p>
You can also configure your logger service to replace new line for all message events. Here is sample configuration for LogBack <a href="https://logback.qos.ch/manual/layouts.html#replace">using the <code>replace</code> function</a>.
<pre>
&lt;pattern&gt;%-5level - %replace(%msg){'[\r\n]', ''}%n&lt;/pattern&gt;
</pre>
</p>

<p>
Finally, you can use a logger implementation that replace new line by spaces.
The project <a href="https://github.com/javabeanz/owasp-security-logging">OWASP Security Logging</a> has an implementation for Logback and Log4j.
</p>

<br/>
<p>
    <b>References</b><br/>
    <a href="https://cwe.mitre.org/data/definitions/117.html">CWE-117: Improper Output Neutralization for Logs</a><br/>
    <a href="https://cwe.mitre.org/data/definitions/93.html">CWE-93: Improper Neutralization of CRLF Sequences ('CRLF Injection')</a><br/>
    <a href="https://logback.qos.ch/manual/layouts.html#replace">CWE-93: Improper Neutralization of CRLF Sequences ('CRLF Injection')</a><br/>
    <a href="https://github.com/javabeanz/owasp-security-logging">OWASP Security Logging</a><br/>
</p>


        
<h2>
<a name="OBJECT_DESERIALIZATION">OBJECT_DESERIALIZATION: Object deserialization is used in {1}</a>
</h2>
            
<p>
    Object deserialization of untrusted data can lead to remote code execution, if there is a class in classpath that allows
    the trigger of malicious operation.
</p>
<p>
    Libraries developers tend to fix class that provided potential malicious trigger. There are still classes that are
    known to trigger Denial of Service<sup>[1]</sup>.
</p>
<p>
    Deserialization is a sensible operation that has a great history of vulnerabilities. The web application might
    become vulnerable as soon as a new vulnerability is found in the Java Virtual Machine<sup>[2] [3]</sup>.
</p>

<p>
<b>Code at risk:</b><br/>
<pre>
public UserData deserializeObject(InputStream receivedFile) throws IOException, ClassNotFoundException {

    try (ObjectInputStream in = new ObjectInputStream(receivedFile)) {
        return (UserData) in.readObject();
    }
}
</pre>
</p>

<p>
<b>Solutions:</b><br/>
<p>
Avoid deserializing object provided by remote users.
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/502.html">CWE-502: Deserialization of Untrusted Data</a><br/>
<a href="https://www.owasp.org/index.php/Deserialization_of_untrusted_data">Deserialization of untrusted data</a><br/>
<a href="https://www.oracle.com/technetwork/java/seccodeguide-139067.html#8">Serialization and Deserialization </a><br/>
<a href="https://github.com/frohoff/ysoserial">A tool for generating payloads that exploit unsafe Java object deserialization</a><br/>
[1] <a href="https://gist.github.com/coekie/a27cc406fc9f3dc7a70d">Example of Denial of Service using the class <code>java.util.HashSet</code></a><br/>
[2] <a href="https://bugzilla.redhat.com/show_bug.cgi?id=CVE-2015-2590">OpenJDK: Deserialization issue in ObjectInputStream.readSerialData() (CVE-2015-2590)</a><br/>
[3] <a href="https://www.rapid7.com/db/modules/exploit/multi/browser/java_calendar_deserialize">Rapid7: Sun Java Calendar Deserialization Privilege Escalation (CVE-2008-5353)</a>
</p>

        
<h2>
<a name="PREDICTABLE_RANDOM">PREDICTABLE_RANDOM: Predictable pseudorandom number generator</a>
</h2>
            
<p>The use of a predictable random value can lead to vulnerabilities when used in certain security critical contexts. For example, when the value is used as:</p>
<ul>
<li>a CSRF token: a predictable token can lead to a CSRF attack as an attacker will know the value of the token</li>
<li>a password reset token (sent by email): a predictable password token can lead to an account takeover, since an attacker will guess the URL of the "change password" form</li>
<li>any other secret value</li>
</ul>
<p>
A quick fix could be to replace the use of <code>java.util.Random</code> with something stronger, such as <code>java.security.SecureRandom</code>.
</p>
<p>
<b>Vulnerable Code:</b><br/>
<pre>String generateSecretToken() {
    Random r = new Random();
    return Long.toHexString(r.nextLong());
}</pre>
</p>
<p>
<b>Solution:</b>
<pre>import org.apache.commons.codec.binary.Hex;

String generateSecretToken() {
    SecureRandom secRandom = new SecureRandom();

    byte[] result = new byte[32];
    secRandom.nextBytes(result);
    return Hex.encodeHexString(result);
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://jazzy.id.au/2010/09/20/cracking_random_number_generators_part_1.html">Cracking Random Number Generators - Part 1 (https://jazzy.id.au)</a><br/>
<a href="https://www.securecoding.cert.org/confluence/display/java/MSC02-J.+Generate+strong+random+numbers">CERT: MSC02-J. Generate strong random numbers</a><br/>
<a href="https://cwe.mitre.org/data/definitions/330.html">CWE-330: Use of Insufficiently Random Values</a><br/>
<a href="https://blog.h3xstream.com/2014/12/predicting-struts-csrf-token-cve-2014.html">Predicting Struts CSRF Token (Example of real-life vulnerability and exploitation)</a>
</p>

        
<h2>
<a name="PATH_TRAVERSAL_IN">PATH_TRAVERSAL_IN: Potential Path Traversal (file read)</a>
</h2>
            
<p>A file is opened to read its content. The filename comes from an <b>input</b> parameter.
If an unfiltered parameter is passed to this file API, files from an arbitrary filesystem location could be read.</p>
<p>This rule identifies <b>potential</b> path traversal vulnerabilities. In many cases, the constructed file path cannot be controlled
by the user. If that is the case, the reported instance is a false positive.</p>
<br/>

<p>
    <b>Vulnerable Code:</b><br/>
<pre>@GET
@Path("/images/{image}")
@Produces("images/*")
public Response getImage(@javax.ws.rs.PathParam("image") String image) {
    File file = new File("resources/images/", image); //Weak point

    if (!file.exists()) {
        return Response.status(Status.NOT_FOUND).build();
    }

    return Response.ok().entity(new FileInputStream(file)).build();
}</pre>
</p>
<br/>

<p>
    <b>Solution:</b><br/>
<pre>import org.apache.commons.io.FilenameUtils;

@GET
@Path("/images/{image}")
@Produces("images/*")
public Response getImage(@javax.ws.rs.PathParam("image") String image) {
    File file = new File("resources/images/", FilenameUtils.getName(image)); //Fix

    if (!file.exists()) {
        return Response.status(Status.NOT_FOUND).build();
    }

    return Response.ok().entity(new FileInputStream(file)).build();
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="http://projects.webappsec.org/w/page/13246952/Path%20Traversal">WASC: Path Traversal</a><br/>
<a href="https://www.owasp.org/index.php/Path_Traversal">OWASP: Path Traversal</a><br/>
<a href="https://capec.mitre.org/data/definitions/126.html">CAPEC-126: Path Traversal</a><br/>
<a href="https://cwe.mitre.org/data/definitions/22.html">CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')</a>
</p>

        
<h2>
<a name="SQL_INJECTION_JDBC">SQL_INJECTION_JDBC: Potential JDBC Injection</a>
</h2>
            
<p>
The input values included in SQL queries need to be passed in safely.
Bind variables in prepared statements can be used to easily mitigate the risk of SQL injection.
</p>

<p>
    <b>Vulnerable Code:</b><br/>
    <pre>Connection conn = [...];
Statement stmt = con.createStatement();
ResultSet rs = stmt.executeQuery("update COFFEES set SALES = "+nbSales+" where COF_NAME = '"+coffeeName+"'");</pre>
</p>
<p>
    <b>Solution:</b><br/>
    <pre>Connection conn = [...];
conn.prepareStatement("update COFFEES set SALES = ? where COF_NAME = ?");
updateSales.setInt(1, nbSales);
updateSales.setString(2, coffeeName);</pre>
</p>
<br/>

<b>References (JDBC)</b><br/>
<a href="https://docs.oracle.com/javase/tutorial/jdbc/basics/prepared.html">Oracle Documentation: The Java Tutorials &gt; Prepared Statements</a><br/>
<b>References (SQL injection)</b><br/>
<a href="http://projects.webappsec.org/w/page/13246963/SQL%20Injection">WASC-19: SQL Injection</a><br/>
<a href="https://capec.mitre.org/data/definitions/66.html">CAPEC-66: SQL Injection</a><br/>
<a href="https://cwe.mitre.org/data/definitions/89.html">CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')</a><br/>
<a href="https://www.owasp.org/index.php/Top_10_2013-A1-Injection">OWASP: Top 10 2013-A1-Injection</a><br/>
<a href="https://www.owasp.org/index.php/SQL_Injection_Prevention_Cheat_Sheet">OWASP: SQL Injection Prevention Cheat Sheet</a><br/>
<a href="https://www.owasp.org/index.php/Query_Parameterization_Cheat_Sheet">OWASP: Query Parameterization Cheat Sheet</a><br/>
</p>

        
<h2>
<a name="URLCONNECTION_SSRF_FD">URLCONNECTION_SSRF_FD: URLConnection Server-Side Request Forgery (SSRF) and File Disclosure</a>
</h2>
            
<p>
    Server-Side Request Forgery occur when a web server executes a request to a user supplied destination
    parameter that is not validated. Such vulnerabilities could allow an attacker to access internal services
    or to launch attacks from your web server.
</p>
<p>
    URLConnection can be used with file:// protocol or other protocols to access local filesystem and potentially other services.
<p>
    <b>Vulnerable Code:</b>
<pre>
new URL(String url).openConnection()
</pre>

<pre>
new URL(String url).openStream()
</pre>

<pre>
new URL(String url).getContent()
</pre>
</p>
<p>
    <b>Solution/Countermeasures:</b><br/>
    <ul>
        <li>Don't accept URL destinations from users</li>
        <li>Accept a destination key, and use it to look up the target destination associate with the key</li>
        <li>White list URLs (if possible)</li>
        <li>Validate that the beginning of the URL is part of a white list</li>
    </ul>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a><br/>
<a href="https://www.bishopfox.com/blog/2015/04/vulnerable-by-design-understanding-server-side-request-forgery/">Understanding Server-Side Request Forgery</a><br/>
<a href="https://cwe.mitre.org/data/definitions/73.html">CWE-73: External Control of File Name or Path</a><br/>
<a href="https://www.pwntester.com/blog/2013/11/28/abusing-jar-downloads/">Abusing jar:// downloads</a><br />
</p>
            
<h2>
<a name="XXE_DOCUMENT">XXE_DOCUMENT: XML parsing vulnerable to XXE (DocumentBuilder)</a>
</h2>
            
<!--XXE_GENERIC_START-->
<h3>Attack</h3>
<p>XML External Entity (XXE) attacks can occur when an XML parser supports XML entities while processing XML received
from an untrusted source.</p>
<p><b>Risk 1: Expose local file content (XXE: <u>X</u>ML E<u>x</u>ternal <u>E</u>ntity)</b></p>
<p>
<pre>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;
&lt;!DOCTYPE foo [
   &lt;!ENTITY xxe SYSTEM &quot;file:///etc/passwd&quot; &gt; ]&gt;
&lt;foo&gt;&amp;xxe;&lt;/foo&gt;</pre>
</p>
<b>Risk 2: Denial of service (XEE: <u>X</u>ML <u>E</u>ntity <u>E</u>xpansion)</b>
<p>
<pre>
&lt;?xml version=&quot;1.0&quot;?&gt;
&lt;!DOCTYPE lolz [
 &lt;!ENTITY lol &quot;lol&quot;&gt;
 &lt;!ELEMENT lolz (#PCDATA)&gt;
 &lt;!ENTITY lol1 &quot;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&amp;lol;&quot;&gt;
 &lt;!ENTITY lol2 &quot;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&amp;lol1;&quot;&gt;
 &lt;!ENTITY lol3 &quot;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&amp;lol2;&quot;&gt;
[...]
 &lt;!ENTITY lol9 &quot;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&amp;lol8;&quot;&gt;
]&gt;
&lt;lolz&gt;&amp;lol9;&lt;/lolz&gt;</pre>
</p>

<h3>Solution</h3>
<p>
In order to avoid exposing dangerous feature of the XML parser, you can do the following change to the code.
</p>
<!--XXE_GENERIC_END-->

<p><b>Vulnerable Code:</b></p>
<p>
<pre>
DocumentBuilder db = DocumentBuilderFactory.newInstance().newDocumentBuilder();

Document doc = db.parse(input);</pre>
</p>
<br/>
<p>
The following snippets show two available solutions. You can set one feature or both.
</p>

<p><b>Solution using "Secure processing" mode:</b></p>
<p>
This setting will protect you against Denial of Service attack and remote file access.
<pre>
DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);
DocumentBuilder db = dbf.newDocumentBuilder();

Document doc = db.parse(input);</pre>
</p>

<p><b>Solution disabling DTD:</b></p>
<p>
By disabling DTD, almost all XXE attacks will be prevented.
<pre>
DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
dbf.setFeature("http://apache.org/xml/features/disallow-doctype-decl", true);
DocumentBuilder db = dbf.newDocumentBuilder();

Document doc = db.parse(input);</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<!--XXE_GENERIC_START-->
<a href="https://cwe.mitre.org/data/definitions/611.html">CWE-611: Improper Restriction of XML External Entity Reference ('XXE')</a><br/>
<a href="https://www.securecoding.cert.org/confluence/pages/viewpage.action?pageId=61702260">CERT: IDS10-J. Prevent XML external entity attacks</a><br/>
<a href="https://www.owasp.org/index.php/XML_External_Entity_%28XXE%29_Processing">OWASP.org: XML External Entity (XXE) Processing</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_Entity_Expansion">WS-Attacks.org: XML Entity Expansion</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_External_Entity_DOS">WS-Attacks.org: XML External Entity DOS</a><br/>
<a href="https://www.ws-attacks.org/index.php/XML_Entity_Reference_Attack">WS-Attacks.org: XML Entity Reference Attack</a><br/>
<a href="https://blog.h3xstream.com/2014/06/identifx-xml-external-entity.html">Identifx XML External Entity vulnerability (XXE)</a><br/>
<!--XXE_GENERIC_END-->
<a href="http://xerces.apache.org/xerces2-j/features.html">Xerces2 complete features list</a>
</p>

        </body>
</html>
