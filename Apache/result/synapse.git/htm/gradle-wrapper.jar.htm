<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>SpotBugs Report</title>
<style type="text/css">
		.tablerow0 {
			background: #EEEEEE;
		}

		.tablerow1 {
			background: white;
		}

		.detailrow0 {
			background: #EEEEEE;
		}

		.detailrow1 {
			background: white;
		}

		.tableheader {
			background: #b9b9fe;
			font-size: larger;
		}

		.tablerow0:hover, .tablerow1:hover {
			background: #aaffaa;
		}

		.priority-1 {
		    color: red;
		    font-weight: bold;
		}
		.priority-2 {
		    color: orange;
		    font-weight: bold;
		}
		.priority-3 {
		    color: green;
		    font-weight: bold;
		}
		.priority-4 {
		    color: blue;
		    font-weight: bold;
		}
		</style>
<script type="text/javascript">
			function toggleRow(elid) {
				if (document.getElementById) {
					element = document.getElementById(elid);
					if (element) {
						if (element.style.display == 'none') {
							element.style.display = 'block';
							//window.status = 'Toggle on!';
						} else {
							element.style.display = 'none';
							//window.status = 'Toggle off!';
						}
					}
				}
			}
		</script>
</head>
<body>
<h1>
<a href="https://spotbugs.github.io/">SpotBugs</a> Report</h1>
<h2>Project Information</h2>
<p>Project: 
		</p>
<p>SpotBugs version: 3.1.12</p>
<p>Code analyzed:</p>
<ul>
<li>/home/x/CryptoAPIDetect/dataset/group/synapse.git/gradle-wrapper.jar</li>
</ul>
<p>
<br/>
<br/>
</p>
<h2>Metrics</h2>
<p>1156 lines of code analyzed,
	in 41 classes, 
	in 2 packages.</p>
<table width="500" cellpadding="5" cellspacing="2">
<tr class="tableheader">
<th align="left">Metric</th>
<th align="right">Total</th>
<th align="right">Density*</th>
</tr>
<tr class="tablerow0">
<td>High Priority Warnings</td>
<td align="right">1</td>
<td align="right">0.87</td>
</tr>
<tr class="tablerow1">
<td>Medium Priority Warnings</td>
<td align="right">16</td>
<td align="right">13.84</td>
</tr>
<tr class="$totalClass">
<td>
<b>Total Warnings</b>
</td>
<td align="right">
<b>17</b>
</td>
<td align="right">
<b>14.71</b>
</td>
</tr>
</table>
<p>
<i>(* Defects per Thousand lines of non-commenting source statements)</i>
</p>
<p>
<br/>
<br/>
</p>
<h2>Contents</h2>
<ul>
<li>
<a href="#Warnings_SECURITY">Security Warnings</a>
</li>
<li>
<a href="#Details">Details</a>
</li>
</ul>
<h1>Summary</h1>
<table width="500" cellpadding="5" cellspacing="2">
<tr class="tableheader">
<th align="left">Warning Type</th>
<th align="right">Number</th>
</tr>
<tr class="tablerow0">
<td>
<a href="#Warnings_SECURITY">Security Warnings</a>
</td>
<td align="right">17</td>
</tr>
<tr class="tablerow1">
<td>
<b>Total</b>
</td>
<td align="right">
<b>17</b>
</td>
</tr>
</table>
<h1>Warnings</h1>
<p>Click on a warning row to see full context information.</p>
<h2>
<a name="Warnings_SECURITY">Security Warnings</a>
</h2>
<table class="warningtable" width="100%" cellspacing="0">
<tr class="tableheader">
<th align="left">Code</th>
<th align="left">Warning</th>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66130');">
<td>
<span class="priority-2">SECBHC</span>
</td>
<td>Leading zeros are omitted in the concatenation increasing collision potential</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66130" style="display: none;">
<a href="#BAD_HEXA_CONVERSION">Bug type BAD_HEXA_CONVERSION (click for details)</a>
<br/>In class org.gradle.wrapper.Install<br/>In method org.gradle.wrapper.Install.calculateSha256Sum(File)<br/>At Install.java:[lines 88-109]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66184');">
<td>
<span class="priority-2">SECCI</span>
</td>
<td>This usage of java/lang/ProcessBuilder.&lt;init&gt;([Ljava/lang/String;)V can be vulnerable to Command Injection</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66184" style="display: none;">
<a href="#COMMAND_INJECTION">Bug type COMMAND_INJECTION (click for details)</a>
<br/>In class org.gradle.wrapper.Install<br/>In method org.gradle.wrapper.Install.setExecutablePermissions(File)<br/>At Install.java:[line 166]<br/>Sink method java/lang/ProcessBuilder.&lt;init&gt;([Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.getCanonicalPath()Ljava/lang/String;<br/>Unknown source java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>At Install.java:[line 163]<br/>At Install.java:[line 166]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N67121');">
<td>
<span class="priority-1">SECMD5</span>
</td>
<td>This API MD5 (MDX) is not a recommended cryptographic hash function</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N67121" style="display: none;">
<a href="#WEAK_MESSAGE_DIGEST_MD5">Bug type WEAK_MESSAGE_DIGEST_MD5 (click for details)</a>
<br/>In class org.gradle.wrapper.PathAssembler<br/>In method org.gradle.wrapper.PathAssembler.getHash(String)<br/>At PathAssembler.java:[line 65]<br/>Value MD5</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65700');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65700" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.gradle.wrapper.ExclusiveFileAccessManager<br/>In method org.gradle.wrapper.ExclusiveFileAccessManager.access(File, Callable)<br/>At ExclusiveFileAccessManager.java:[line 39]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.getName()Ljava/lang/String;<br/>At ExclusiveFileAccessManager.java:[line 39]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65779');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65779" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.gradle.wrapper.GradleUserHomeLookup<br/>In method org.gradle.wrapper.GradleUserHomeLookup.gradleUserHome()<br/>At GradleUserHomeLookup.java:[line 34]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/gradle/wrapper/GradleUserHomeLookup.DEFAULT_GRADLE_USER_HOME<br/>At GradleUserHomeLookup.java:[line 34]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N65858');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N65858" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.gradle.wrapper.GradleWrapperMain<br/>In method org.gradle.wrapper.GradleWrapperMain.gradleUserHome(ParsedCommandLine)<br/>At GradleWrapperMain.java:[line 117]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/gradle/cli/ParsedCommandLineOption.values<br/>Unknown source org/gradle/cli/ParsedCommandLineOption.getValue()Ljava/lang/String;<br/>At ParsedCommandLineOption.java:[line 31]<br/>At GradleWrapperMain.java:[line 117]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65952');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65952" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.gradle.wrapper.GradleWrapperMain<br/>In method org.gradle.wrapper.GradleWrapperMain.wrapperJar()<br/>At GradleWrapperMain.java:[line 90]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/net/URI.getPath()Ljava/lang/String;<br/>Unknown source java/security/CodeSource.getLocation()Ljava/net/URL;<br/>Unknown source java/net/URL.toURI()Ljava/net/URI;<br/>At GradleWrapperMain.java:[line 83]<br/>At GradleWrapperMain.java:[line 90]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66051');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66051" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.gradle.wrapper.GradleWrapperMain<br/>In method org.gradle.wrapper.GradleWrapperMain.wrapperProperties(File)<br/>At GradleWrapperMain.java:[line 77]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.getName()Ljava/lang/String;<br/>At GradleWrapperMain.java:[line 77]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66278');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66278" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.gradle.wrapper.Install<br/>In method org.gradle.wrapper.Install.deleteDir(File)<br/>At Install.java:[line 202]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.list()[Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66347');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66347" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.gradle.wrapper.Install<br/>In method org.gradle.wrapper.Install.unzip(File, File)<br/>At Install.java:[line 224]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/util/zip/ZipEntry.getName()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66416');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66416" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.gradle.wrapper.Install<br/>In method org.gradle.wrapper.Install.unzip(File, File)<br/>At Install.java:[line 228]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/util/zip/ZipEntry.getName()Ljava/lang/String;</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66485');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66485" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.gradle.wrapper.Install$1<br/>In method org.gradle.wrapper.Install$1.call()<br/>At Install.java:[line 50]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.getName()Ljava/lang/String;<br/>At Install.java:[line 50]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66564');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66564" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.gradle.wrapper.Install$1<br/>In method org.gradle.wrapper.Install$1.call()<br/>At Install.java:[line 59]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source java/io/File.getName()Ljava/lang/String;<br/>At Install.java:[line 59]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N66643');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N66643" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.gradle.wrapper.PathAssembler<br/>In method org.gradle.wrapper.PathAssembler.getDistribution(WrapperConfiguration)<br/>At PathAssembler.java:[line 43]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/gradle/wrapper/PathAssembler.rootDirName(Ljava/lang/String;Lorg/gradle/wrapper/WrapperConfiguration;)Ljava/lang/String;<br/>Unknown source org/gradle/wrapper/PathAssembler.getDistName(Ljava/net/URI;)Ljava/lang/String;<br/>Unknown source java/math/BigInteger.toString(I)Ljava/lang/String;<br/>Unknown source java/net/URI.getPath()Ljava/lang/String;<br/>Unknown source org/gradle/wrapper/PathAssembler.rootDirName(Ljava/lang/String;Lorg/gradle/wrapper/WrapperConfiguration;)Ljava/lang/String; parameter 1<br/>Unknown source org/gradle/wrapper/WrapperConfiguration.distributionPath<br/>Unknown source org/gradle/wrapper/WrapperConfiguration.getDistributionPath()Ljava/lang/String;<br/>Unknown source org/gradle/wrapper/WrapperConfiguration.getDistribution()Ljava/net/URI;<br/>Unknown source org/gradle/wrapper/PathAssembler.removeExtension(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/gradle/wrapper/WrapperConfiguration.distribution<br/>Unknown source org/gradle/wrapper/PathAssembler.getDistName(Ljava/net/URI;)Ljava/lang/String; parameter 0<br/>Unknown source org/gradle/wrapper/PathAssembler.getHash(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/gradle/wrapper/PathAssembler.removeExtension(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>At PathAssembler.java:[line 40]<br/>At PathAssembler.java:[line 41]<br/>At PathAssembler.java:[line 42]<br/>At PathAssembler.java:[line 43]<br/>At PathAssembler.java:[line 49]<br/>At PathAssembler.java:[line 50]<br/>At PathAssembler.java:[line 79]<br/>At PathAssembler.java:[line 83]<br/>At PathAssembler.java:[line 88]<br/>At WrapperConfiguration.java:[line 29]<br/>At WrapperConfiguration.java:[line 45]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N66882');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N66882" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.gradle.wrapper.PathAssembler<br/>In method org.gradle.wrapper.PathAssembler.getDistribution(WrapperConfiguration)<br/>At PathAssembler.java:[line 44]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/gradle/wrapper/PathAssembler.rootDirName(Ljava/lang/String;Lorg/gradle/wrapper/WrapperConfiguration;)Ljava/lang/String;<br/>Unknown source org/gradle/wrapper/PathAssembler.getDistName(Ljava/net/URI;)Ljava/lang/String;<br/>Unknown source org/gradle/wrapper/WrapperConfiguration.getZipPath()Ljava/lang/String;<br/>Unknown source java/math/BigInteger.toString(I)Ljava/lang/String;<br/>Unknown source java/net/URI.getPath()Ljava/lang/String;<br/>Unknown source org/gradle/wrapper/PathAssembler.rootDirName(Ljava/lang/String;Lorg/gradle/wrapper/WrapperConfiguration;)Ljava/lang/String; parameter 1<br/>Unknown source org/gradle/wrapper/WrapperConfiguration.getDistribution()Ljava/net/URI;<br/>Unknown source org/gradle/wrapper/WrapperConfiguration.zipPath<br/>Unknown source org/gradle/wrapper/PathAssembler.removeExtension(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/gradle/wrapper/WrapperConfiguration.distribution<br/>Unknown source org/gradle/wrapper/PathAssembler.getDistName(Ljava/net/URI;)Ljava/lang/String; parameter 0<br/>Unknown source org/gradle/wrapper/PathAssembler.getHash(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/gradle/wrapper/PathAssembler.removeExtension(Ljava/lang/String;)Ljava/lang/String; parameter 0<br/>At PathAssembler.java:[line 40]<br/>At PathAssembler.java:[line 41]<br/>At PathAssembler.java:[line 42]<br/>At PathAssembler.java:[line 44]<br/>At PathAssembler.java:[line 49]<br/>At PathAssembler.java:[line 50]<br/>At PathAssembler.java:[line 79]<br/>At PathAssembler.java:[line 83]<br/>At PathAssembler.java:[line 88]<br/>At WrapperConfiguration.java:[line 29]<br/>At WrapperConfiguration.java:[line 69]</p>
</td>
</tr>
<tr class="tablerow0" onclick="toggleRow('N67179');">
<td>
<span class="priority-2">SECPTI</span>
</td>
<td>This API (java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V) reads a file whose location might be specified by user input</td>
</tr>
<tr class="detailrow0">
<td/>
<td>
<p id="N67179" style="display: none;">
<a href="#PATH_TRAVERSAL_IN">Bug type PATH_TRAVERSAL_IN (click for details)</a>
<br/>In class org.gradle.wrapper.WrapperExecutor<br/>In method org.gradle.wrapper.WrapperExecutor.prepareDistributionUri()<br/>At WrapperExecutor.java:[line 70]<br/>Sink method java/io/File.&lt;init&gt;(Ljava/io/File;Ljava/lang/String;)V<br/>Sink parameter 0<br/>Unknown source org/gradle/wrapper/WrapperExecutor.getProperty(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;<br/>Unknown source org/gradle/wrapper/WrapperExecutor.reportMissingProperty(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/gradle/wrapper/WrapperExecutor.properties<br/>Unknown source org/gradle/wrapper/WrapperExecutor.getProperty(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/gradle/wrapper/WrapperExecutor.getProperty(Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String; parameter 1<br/>Unknown source java/net/URI.&lt;init&gt;(Ljava/lang/String;)V<br/>Unknown source java/util/Properties.getProperty(Ljava/lang/String;)Ljava/lang/String;<br/>Unknown source org/gradle/wrapper/WrapperExecutor.readDistroUrl()Ljava/net/URI;<br/>Unknown source java/net/URI.getSchemeSpecificPart()Ljava/lang/String;<br/>At WrapperExecutor.java:[line 67]<br/>At WrapperExecutor.java:[line 70]<br/>At WrapperExecutor.java:[line 80]<br/>At WrapperExecutor.java:[line 112]<br/>At WrapperExecutor.java:[line 120]</p>
</td>
</tr>
<tr class="tablerow1" onclick="toggleRow('N65551');">
<td>
<span class="priority-2">SECSSSRFUC</span>
</td>
<td>This web server request could be used by an attacker to expose internal services and filesystem.</td>
</tr>
<tr class="detailrow1">
<td/>
<td>
<p id="N65551" style="display: none;">
<a href="#URLCONNECTION_SSRF_FD">Bug type URLCONNECTION_SSRF_FD (click for details)</a>
<br/>In class org.gradle.wrapper.Download<br/>In method org.gradle.wrapper.Download.downloadInternal(URI, File)<br/>At Download.java:[line 62]<br/>Sink method java/net/URL.openConnection()Ljava/net/URLConnection;<br/>Sink parameter 0<br/>Unknown source java/net/URI.getHost()Ljava/lang/String;<br/>Unknown source org/gradle/wrapper/Download.safeUri(Ljava/net/URI;)Ljava/net/URI;<br/>Unknown source org/gradle/wrapper/Download.safeUri(Ljava/net/URI;)Ljava/net/URI; parameter 0<br/>Unknown source java/net/URI.getFragment()Ljava/lang/String;<br/>Unknown source java/net/URI.getPath()Ljava/lang/String;<br/>Unknown source java/net/URI.toURL()Ljava/net/URL;<br/>Unknown source org/gradle/wrapper/Download.downloadInternal(Ljava/net/URI;Ljava/io/File;)V parameter 1<br/>Unknown source java/net/URI.getScheme()Ljava/lang/String;<br/>Unknown source java/net/URI.&lt;init&gt;(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V<br/>Unknown source java/net/URI.getQuery()Ljava/lang/String;<br/>Method usage not detected<br/>At Download.java:[line 51]<br/>At Download.java:[line 60]<br/>At Download.java:[line 106]</p>
</td>
</tr>
</table>
<h1>
<a name="Details">Details</a>
</h1>
<h2>
<a name="BAD_HEXA_CONVERSION">BAD_HEXA_CONVERSION: Bad hexadecimal concatenation</a>
</h2>
            
<p>When converting a byte array containing a hash signature to a human readable string, a conversion mistake can be made if
the array is read byte by byte. The following sample illustrates the use of the method <code>Integer.toHexString()</code> which will trim any leading zeroes
from each byte of the computed hash value.
<pre>
MessageDigest md = MessageDigest.getInstance("SHA-256");
byte[] resultBytes = md.digest(password.getBytes("UTF-8"));

StringBuilder stringBuilder = new StringBuilder();
for(byte b :resultBytes) {
    stringBuilder.append( Integer.toHexString( b & 0xFF ) );
}

return stringBuilder.toString();</pre>
</p>
<p>
This mistake weakens the hash value computed since it introduces more collisions.
For example, the hash values "0x0679" and "0x6709" would both output as "679" for the above function.
</p>

<p>
In this situation, the method <code>Integer.toHexString()</code> should be replaced with <code>String.format()</code> as follows:
<pre>stringBuilder.append( String.format( "%02X", b ) );</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/704.html">CWE-704: Incorrect Type Conversion or Cast</a>
</p>

        
<h2>
<a name="COMMAND_INJECTION">COMMAND_INJECTION: Potential Command Injection</a>
</h2>
            
<p>The highlighted API is used to execute a system command. If unfiltered input is passed to this API, it can lead to arbitrary command execution.</p>
<br/>
<p>
    <b>Vulnerable Code:</b><br/>
<pre>import java.lang.Runtime;

Runtime r = Runtime.getRuntime();
r.exec("/bin/sh -c some_tool" + input);</pre>
</p>
<p>
<b>References</b><br/>
<a href="https://www.owasp.org/index.php/Command_Injection">OWASP: Command Injection</a><br/>
<a href="https://www.owasp.org/index.php/Top_10_2013-A1-Injection">OWASP: Top 10 2013-A1-Injection</a><br/>
<a href="https://cwe.mitre.org/data/definitions/78.html">CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')</a>
</p>

        
<h2>
<a name="WEAK_MESSAGE_DIGEST_MD5">WEAK_MESSAGE_DIGEST_MD5: MD2, MD4 and MD5 are weak hash functions</a>
</h2>
            
<p>The algorithms MD2, MD4 and MD5 are not a recommended MessageDigest. <b>PBKDF2</b> should be used to hash password for example.</p>

<blockquote>
    "The security of the MD5 hash function is severely compromised. A collision attack exists that can find collisions
    within seconds on a computer with a 2.6 GHz Pentium 4 processor (complexity of 2<sup>24.1</sup>).[1] Further, there is also a
    chosen-prefix collision attack that can produce a collision for two inputs with specified prefixes within hours, using
    off-the-shelf computing hardware (complexity 2<sup>39</sup>).[2]"<br/>
    - <a href="https://en.wikipedia.org/wiki/MD5#Security">Wikipedia: MD5 - Security</a>
</blockquote>

<blockquote>
    "<b>SHA-224, SHA-256, SHA-384, SHA-512, SHA-512/224, and SHA-512/256</b>:<br/>
    The use of these hash functions is acceptable for all hash function applications."<br/>
    - <a href="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-131Ar2.pdf">NIST: Transitioning the Use of Cryptographic Algorithms and Key Lengths p.15</a>
</blockquote>
<blockquote>
    "The main idea of a PBKDF is to slow dictionary or brute force attacks on the passwords by increasing the time
    needed to test each password. An attacker with a list of likely passwords can evaluate the PBKDF using the known
    iteration counter and the salt. Since an attacker has to spend a significant amount of computing time for each try,
    it becomes harder to apply the dictionary or brute force attacks."<br/>
- <a href="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-132.pdf">NIST: Recommendation for Password-Based Key Derivation  p.12</a>
</blockquote>
<br/>
<p>
    <b>Vulnerable Code:</b><br/>
    <pre>MessageDigest md5Digest = MessageDigest.getInstance("MD5");
    md5Digest.update(password.getBytes());
    byte[] hashValue = md5Digest.digest();</pre>
    <br/>
    <pre>byte[] hashValue = DigestUtils.getMd5Digest().digest(password.getBytes());</pre>
</p>
<br/>
<p>
    <b>Solution (Using bouncy castle):</b><br/>
    <pre>public static byte[] getEncryptedPassword(String password, byte[] salt) throws NoSuchAlgorithmException, InvalidKeySpecException {
    PKCS5S2ParametersGenerator gen = new PKCS5S2ParametersGenerator(new SHA256Digest());
    gen.init(password.getBytes("UTF-8"), salt.getBytes(), 4096);
    return ((KeyParameter) gen.generateDerivedParameters(256)).getKey();
}</pre>
    <br/>
    <b>Solution (Java 8 and later):</b><br/>
    <pre>public static byte[] getEncryptedPassword(String password, byte[] salt) throws NoSuchAlgorithmException, InvalidKeySpecException {
    KeySpec spec = new PBEKeySpec(password.toCharArray(), salt, 4096, 256 * 8);
    SecretKeyFactory f = SecretKeyFactory.getInstance("PBKDF2WithHmacSHA256");
    return f.generateSecret(spec).getEncoded();
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
[1] <a href="https://www.win.tue.nl/hashclash/On%20Collisions%20for%20MD5%20-%20M.M.J.%20Stevens.pdf">On Collisions for MD5</a>: Master Thesis by M.M.J. Stevens<br/>
[2] <a href="https://homepages.cwi.nl/~stevens/papers/stJOC%20-%20Chosen-Prefix%20Collisions%20for%20MD5%20and%20Applications.pdf">Chosen-prefix collisions for MD5 and applications</a>: Paper written by Marc Stevens<br/>
<a href="https://en.wikipedia.org/wiki/MD5">Wikipedia: MD5</a><br/>
<a href="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-131Ar2.pdf">NIST: Transitioning the Use of Cryptographic Algorithms and Key Lengths</a><br/>
<a href="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-132.pdf">NIST: Recommendation for Password-Based Key Derivation</a><br/>
<a href="https://stackoverflow.com/q/22580853/89769">Stackoverflow: Reliable implementation of PBKDF2-HMAC-SHA256 for Java</a><br/>
<a href="https://cwe.mitre.org/data/definitions/327.html">CWE-327: Use of a Broken or Risky Cryptographic Algorithm</a>
</p>

        
<h2>
<a name="PATH_TRAVERSAL_IN">PATH_TRAVERSAL_IN: Potential Path Traversal (file read)</a>
</h2>
            
<p>A file is opened to read its content. The filename comes from an <b>input</b> parameter.
If an unfiltered parameter is passed to this file API, files from an arbitrary filesystem location could be read.</p>
<p>This rule identifies <b>potential</b> path traversal vulnerabilities. In many cases, the constructed file path cannot be controlled
by the user. If that is the case, the reported instance is a false positive.</p>
<br/>

<p>
    <b>Vulnerable Code:</b><br/>
<pre>@GET
@Path("/images/{image}")
@Produces("images/*")
public Response getImage(@javax.ws.rs.PathParam("image") String image) {
    File file = new File("resources/images/", image); //Weak point

    if (!file.exists()) {
        return Response.status(Status.NOT_FOUND).build();
    }

    return Response.ok().entity(new FileInputStream(file)).build();
}</pre>
</p>
<br/>

<p>
    <b>Solution:</b><br/>
<pre>import org.apache.commons.io.FilenameUtils;

@GET
@Path("/images/{image}")
@Produces("images/*")
public Response getImage(@javax.ws.rs.PathParam("image") String image) {
    File file = new File("resources/images/", FilenameUtils.getName(image)); //Fix

    if (!file.exists()) {
        return Response.status(Status.NOT_FOUND).build();
    }

    return Response.ok().entity(new FileInputStream(file)).build();
}</pre>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="http://projects.webappsec.org/w/page/13246952/Path%20Traversal">WASC: Path Traversal</a><br/>
<a href="https://www.owasp.org/index.php/Path_Traversal">OWASP: Path Traversal</a><br/>
<a href="https://capec.mitre.org/data/definitions/126.html">CAPEC-126: Path Traversal</a><br/>
<a href="https://cwe.mitre.org/data/definitions/22.html">CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')</a>
</p>

        
<h2>
<a name="URLCONNECTION_SSRF_FD">URLCONNECTION_SSRF_FD: URLConnection Server-Side Request Forgery (SSRF) and File Disclosure</a>
</h2>
            
<p>
    Server-Side Request Forgery occur when a web server executes a request to a user supplied destination
    parameter that is not validated. Such vulnerabilities could allow an attacker to access internal services
    or to launch attacks from your web server.
</p>
<p>
    URLConnection can be used with file:// protocol or other protocols to access local filesystem and potentially other services.
<p>
    <b>Vulnerable Code:</b>
<pre>
new URL(String url).openConnection()
</pre>

<pre>
new URL(String url).openStream()
</pre>

<pre>
new URL(String url).getContent()
</pre>
</p>
<p>
    <b>Solution/Countermeasures:</b><br/>
    <ul>
        <li>Don't accept URL destinations from users</li>
        <li>Accept a destination key, and use it to look up the target destination associate with the key</li>
        <li>White list URLs (if possible)</li>
        <li>Validate that the beginning of the URL is part of a white list</li>
    </ul>
</p>
<br/>
<p>
<b>References</b><br/>
<a href="https://cwe.mitre.org/data/definitions/918.html">CWE-918: Server-Side Request Forgery (SSRF)</a><br/>
<a href="https://www.bishopfox.com/blog/2015/04/vulnerable-by-design-understanding-server-side-request-forgery/">Understanding Server-Side Request Forgery</a><br/>
<a href="https://cwe.mitre.org/data/definitions/73.html">CWE-73: External Control of File Name or Path</a><br/>
<a href="https://www.pwntester.com/blog/2013/11/28/abusing-jar-downloads/">Abusing jar:// downloads</a><br />
</p>
            </body>
</html>
