[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 575.2 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 4 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 7
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.14

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 8
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.25

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 11
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.27

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 12
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.33

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 12
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.42

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 12
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.5

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 7 of 12
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.58

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 8 of 12
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 9 of 12
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.75

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 10 of 12
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.83

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 11 of 12
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.92

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: r5
		Type: byte[]
		Statement: $i3 = virtualinvoke r4.<javax.crypto.Cipher: int doFinal(byte[],int)>(r5, i4)
		Method: <org.apache.commons.vfs2.util.DefaultCryptor: java.lang.String encrypt(java.lang.String)>
		SHA-256: c98746e7ff5a5c136fae4a2ecf3fa27c153805261e9571b0b29cec81a9b027e4
		Secure: false
	Object:
		Variable: varReplacer1703
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer1703)
		Method: <org.apache.commons.vfs2.util.DefaultCryptor: java.lang.String encrypt(java.lang.String)>
		SHA-256: cf945d74d0a35b45d1474b7a32daa08b1dd659d871f154e924ef6bd82e268070
		Secure: false
	Object:
		Variable: r4
		Type: byte[]
		Statement: i4 = virtualinvoke r3.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>(r4, varReplacer1706, $i2, r5, varReplacer1706)
		Method: <org.apache.commons.vfs2.util.DefaultCryptor: java.lang.String decrypt(java.lang.String)>
		SHA-256: fbaf3fd21bf0dae50f1c4f5260735144f97fdbe31b2afbeb725dcb5bd8c4b091
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer1703)
		Method: <org.apache.commons.vfs2.util.DefaultCryptor: java.lang.String encrypt(java.lang.String)>
		SHA-256: ecd5c408f46431765132cdf6ddca0d6bbfb6484fc5856cf80bd8d71f883d0da3
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer1705)
		Method: <org.apache.commons.vfs2.util.DefaultCryptor: java.lang.String decrypt(java.lang.String)>
		SHA-256: 7270f2e1d9197fbd93cb135fa7fe697da7fa4b428fcf61a8a11f2aa4ac2111c9
		Secure: false
	Object:
		Variable: varReplacer1705
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer1705)
		Method: <org.apache.commons.vfs2.util.DefaultCryptor: java.lang.String decrypt(java.lang.String)>
		SHA-256: 60cc074d0967ccfca85cf0f5d088c518594e0b4f9641603349506f971d461c3a
		Secure: false
	Object:
		Variable: r3
		Type: javax.crypto.Cipher
		Statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1708)
		Method: <org.apache.commons.vfs2.util.DefaultCryptor: java.lang.String decrypt(java.lang.String)>
		SHA-256: 28bb8f90baec1f1ffacfe91c305ceeebd61ba3441786372c48079c250f70c213
		Secure: false
	Object:
		Variable: r5
		Type: byte[]
		Statement: $i3 = virtualinvoke r3.<javax.crypto.Cipher: int doFinal(byte[],int)>(r5, i4)
		Method: <org.apache.commons.vfs2.util.DefaultCryptor: java.lang.String decrypt(java.lang.String)>
		SHA-256: a7fbe4a5669d0e36505adc09c32a4311818caed3a5d9132c1810aeedc34cb98d
		Secure: false
	Object:
		Variable: r5
		Type: byte[]
		Statement: i4 = virtualinvoke r4.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>(r2, varReplacer1701, $i2, r5, varReplacer1701)
		Method: <org.apache.commons.vfs2.util.DefaultCryptor: java.lang.String encrypt(java.lang.String)>
		SHA-256: 98a04e2e658aae0bbc66e92de4ce2bdc52d4990ba34a7be8f851202f60a14941
		Secure: false
	Object:
		Variable: r4
		Type: javax.crypto.Cipher
		Statement: r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1704)
		Method: <org.apache.commons.vfs2.util.DefaultCryptor: java.lang.String encrypt(java.lang.String)>
		SHA-256: 7023dbba54e652b1053b0fbbb55d39da57c69a663c4d12b991b7c7eb929bba38
		Secure: false
	Object:
		Variable: r2
		Type: byte[]
		Statement: i4 = virtualinvoke r4.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>(r2, varReplacer1701, $i2, r5, varReplacer1701)
		Method: <org.apache.commons.vfs2.util.DefaultCryptor: java.lang.String encrypt(java.lang.String)>
		SHA-256: 24356a7d3622a0f3bcf773121b6c1a24c3ab2c517c13c8cc9c6f04474acc1d3c
		Secure: false
	Object:
		Variable: r5
		Type: byte[]
		Statement: i4 = virtualinvoke r3.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>(r4, varReplacer1706, $i2, r5, varReplacer1706)
		Method: <org.apache.commons.vfs2.util.DefaultCryptor: java.lang.String decrypt(java.lang.String)>
		SHA-256: 7ba3278e4c1c6fd644d2cb10b52fcb3594df756c01f00980796024ea7816188f
		Secure: false

Findings in Java Class: org.apache.commons.vfs2.util.DefaultCryptor

	 in Method: java.lang.String encrypt(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #7023dbba54e652b1053b0fbbb55d39da57c69a663c4d12b991b7c7eb929bba38)
			First parameter (with value "AES") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1704)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1700, r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer1703)


	 in Method: java.lang.String decrypt(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer1705)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #28bb8f90baec1f1ffacfe91c305ceeebd61ba3441786372c48079c250f70c213)
			First parameter (with value "AES") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1708)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generated Key
			at statement: virtualinvoke r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1709, r2)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 12

	CogniCrypt found the following violations. For details see description above.
	ConstraintError: 2
	RequiredPredicateError: 4
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 0 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 3.266 s

