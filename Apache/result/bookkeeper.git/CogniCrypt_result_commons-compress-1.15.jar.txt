[main] INFO crypto.HeadlessCryptoScanner - Using call graph algorithm CHA
[main] INFO crypto.HeadlessCryptoScanner - Analysis soot setup done in 484.6 ms 
[main] INFO crypto.analysis.CryptoScanner - Searching fo Seeds for analysis!
[main] INFO crypto.analysis.CryptoScanner - Discovered 5 analysis seeds within 0 seconds!
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 1 of 5
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.2

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 2 of 5
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.4

[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.lz77support.AbstractLZ77CompressorInputStream: int readLiteral(byte[],int,int)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.CompressorInputStream: void count(int)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.CompressorInputStream: void count(long)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.lz77support.AbstractLZ77CompressorInputStream: void startLiteral(long)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.lz77support.AbstractLZ77CompressorInputStream: void startBackReference(int,long)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.lz77support.AbstractLZ77CompressorInputStream: void startBackReference(int,long)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.lz77support.AbstractLZ77CompressorInputStream: void startBackReference(int,long)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.CompressorInputStream: void count(int)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.CompressorInputStream: void count(int)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.tar.TarArchiveInputStream: boolean isAtEOF()> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.CompressorInputStream: void count(int)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: void pushedBackBytes(long)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: void count(int)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: void count(int)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.archivers.ArchiveInputStream: void count(int)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.CompressorInputStream: void count(int)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.utils.CountingInputStream: void count(long)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.CompressorInputStream: void count(int)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.CompressorInputStream: void count(int)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.CompressorInputStream: void count(long)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.CompressorInputStream: void count(int)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.CompressorInputStream: void pushedBackBytes(long)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.CompressorInputStream: void count(long)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.CompressorInputStream: void count(int)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.CompressorInputStream: void count(long)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.CompressorInputStream: void count(int)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.CompressorInputStream: void count(long)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.CompressorInputStream: void count(int)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.CompressorInputStream: void count(int)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.CompressorInputStream: void count(int)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.CompressorInputStream: void count(int)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.CompressorInputStream: void count(int)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.CompressorInputStream: void count(int)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.CompressorInputStream: void count(int)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.compressors.CompressorInputStream: void count(int)> for class java.io.ByteArrayInputStream
[main] ERROR boomerang.callgraph.ObservableDynamicICFG - Did not find method <org.apache.commons.compress.utils.CountingInputStream: void count(long)> for class java.io.ByteArrayInputStream
[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 3 of 5
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.6

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 4 of 6
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.67

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 5 of 7
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.71

[main] INFO crypto.analysis.CryptoScanner - Analyzed Objects: 6 of 7
[main] INFO crypto.analysis.CryptoScanner - Percentage Completed: 0.86

Ruleset: 
	java.security.AlgorithmParameters
	javax.net.ssl.SSLParameters
	java.security.DigestOutputStream
	java.security.spec.RSAKeyGenParameterSpec
	javax.net.ssl.CertPathTrustManagerParameters
	javax.net.ssl.SSLEngine
	java.security.cert.PKIXParameters
	javax.net.ssl.TrustManagerFactory
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.DHGenParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.crypto.SecretKeyFactory
	javax.crypto.CipherOutputStream
	java.security.cert.PKIXBuilderParameters
	javax.crypto.spec.GCMParameterSpec
	java.security.KeyStore
	javax.net.ssl.KeyManagerFactory
	javax.net.ssl.SSLContext
	java.security.spec.DSAGenParameterSpec
	javax.crypto.KeyGenerator
	javax.crypto.spec.IvParameterSpec
	java.security.spec.DSAParameterSpec
	javax.crypto.Cipher
	java.security.cert.TrustAnchor
	java.security.SecureRandom
	javax.crypto.CipherInputStream
	java.security.Key
	javax.crypto.spec.PBEKeySpec
	javax.crypto.Mac
	void
	javax.crypto.SecretKey
	java.security.Signature
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.KeyPairGenerator
	java.security.DigestInputStream
	java.security.MessageDigest
	java.security.KeyPair
	javax.crypto.spec.SecretKeySpec
	javax.crypto.spec.DHParameterSpec

Analyzed Objects: 
	Object:
		Variable: $r15
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r15.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r2)
		Method: <org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder$1: javax.crypto.CipherInputStream init()>
		SHA-256: b9f4cf33ee378d60a7d9ad1db589551078cd38e416540aee65b99c27f213cf9c
		Secure: false
	Object:
		Variable: $r16
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r16.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r17, r40)
		Method: <org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder$1: javax.crypto.CipherInputStream init()>
		SHA-256: 5aaf850e31af58e5b7e7c97920c267393795b7dbb004cd5f63b227561d713327
		Secure: false
	Object:
		Variable: $r14
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r14.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r35, varReplacer1888)
		Method: <org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder$1: javax.crypto.CipherInputStream init()>
		SHA-256: 9c9c3f08c224e9f6c963e2bb3d8deb26b4f452906cb658946244ad725f827d6f
		Secure: false
	Object:
		Variable: r35
		Type: byte[]
		Statement: r35 = virtualinvoke r36.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder$1: javax.crypto.CipherInputStream init()>
		SHA-256: 2d3f6872b4a6b139549764a4ba3b2cdbe4a4ffe9ffa4dd97d76fda1c757d3338
		Secure: true
	Object:
		Variable: r40
		Type: javax.crypto.Cipher
		Statement: r40 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1894)
		Method: <org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder$1: javax.crypto.CipherInputStream init()>
		SHA-256: ad77163c824e8bd791e54e947824f937b74fde78f4b1c60f2175ec856d7842ba
		Secure: false
	Object:
		Variable: r36
		Type: java.security.MessageDigest
		Statement: r36 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1887)
		Method: <org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder$1: javax.crypto.CipherInputStream init()>
		SHA-256: d5abc547af08d6094a8446a99ca185568d4dcd69592723e6ad8c593481428eca
		Secure: false
	Object:
		Variable: varReplacer1888
		Type: java.lang.String
		Statement: specialinvoke $r14.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r35, varReplacer1888)
		Method: <org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder$1: javax.crypto.CipherInputStream init()>
		SHA-256: 16cb89021e4b397029f17334704f16e21d9aa6de8a42583b0d8a087880755b05
		Secure: false

Findings in Java Class: org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder$1

	 in Method: javax.crypto.CipherInputStream init()
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #d5abc547af08d6094a8446a99ca185568d4dcd69592723e6ad8c593481428eca)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: r35 = virtualinvoke r36.<java.security.MessageDigest: byte[] digest()>()

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as prepared Key Material
			at statement: specialinvoke $r14.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>(r35, varReplacer1888)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r15.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>(r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #ad77163c824e8bd791e54e947824f937b74fde78f4b1c60f2175ec856d7842ba)
			First parameter (with value "AES/CBC/NoPadding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: r40 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1894)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #ad77163c824e8bd791e54e947824f937b74fde78f4b1c60f2175ec856d7842ba)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: specialinvoke $r16.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r17, r40)


Findings in Java Class: org.apache.commons.compress.archivers.arj.ArjArchiveInputStream

	 in Method: org.apache.commons.compress.archivers.arj.ArjArchiveEntry getNextEntry()
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #5aaf850e31af58e5b7e7c97920c267393795b7dbb004cd5f63b227561d713327)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: staticinvoke <org.apache.commons.compress.utils.IOUtils: long skip(java.io.InputStream,long)>($r14, varReplacer406)


	 in Method: int read(byte[],int,int)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #5aaf850e31af58e5b7e7c97920c267393795b7dbb004cd5f63b227561d713327)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to java.io.InputStream: int read(byte[],int,int), javax.crypto.CipherInputStream: int read(), java.io.InputStream: int read(byte[]), java.io.FilterInputStream: int read(byte[],int,int), javax.crypto.CipherInputStream: int read(byte[]), java.io.InputStream: int read(), java.io.FilterInputStream: int read(byte[]), java.io.FilterInputStream: int read(), javax.crypto.CipherInputStream: int read(byte[],int,int)
			at statement: $i3 = virtualinvoke $r4.<java.io.InputStream: int read(byte[],int,int)>(r1, i0, i1)


Findings in Java Class: org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream

	 in Method: void fill()
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #5aaf850e31af58e5b7e7c97920c267393795b7dbb004cd5f63b227561d713327)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: i22 = virtualinvoke r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int readOneByte()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #5aaf850e31af58e5b7e7c97920c267393795b7dbb004cd5f63b227561d713327)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: i26 = virtualinvoke r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int readOneByte()>()


	 in Method: int readLiteralLength(int)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #5aaf850e31af58e5b7e7c97920c267393795b7dbb004cd5f63b227561d713327)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: i5 = virtualinvoke r0.<org.apache.commons.compress.compressors.snappy.SnappyCompressorInputStream: int readOneByte()>()


Findings in Java Class: org.apache.commons.compress.compressors.lzma.LZMACompressorInputStream

	 in Method: int read(byte[],int,int)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #5aaf850e31af58e5b7e7c97920c267393795b7dbb004cd5f63b227561d713327)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to java.io.InputStream: int read(byte[],int,int), javax.crypto.CipherInputStream: int read(), java.io.InputStream: int read(byte[]), java.io.FilterInputStream: int read(byte[],int,int), javax.crypto.CipherInputStream: int read(byte[]), java.io.InputStream: int read(), java.io.FilterInputStream: int read(byte[]), java.io.FilterInputStream: int read(), javax.crypto.CipherInputStream: int read(byte[],int,int)
			at statement: i2 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>(r1, i0, i1)


Findings in Java Class: org.apache.commons.compress.utils.CountingInputStream

	 in Method: int read(byte[],int,int)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #5aaf850e31af58e5b7e7c97920c267393795b7dbb004cd5f63b227561d713327)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to java.io.InputStream: int read(byte[],int,int), javax.crypto.CipherInputStream: int read(), java.io.InputStream: int read(byte[]), java.io.FilterInputStream: int read(byte[],int,int), javax.crypto.CipherInputStream: int read(byte[]), java.io.InputStream: int read(), java.io.FilterInputStream: int read(byte[]), java.io.FilterInputStream: int read(), javax.crypto.CipherInputStream: int read(byte[],int,int)
			at statement: i2 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>(r1, i0, i1)


Findings in Java Class: org.apache.commons.compress.archivers.zip.ZipArchiveInputStream

	 in Method: void drainCurrentEntryData()
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #5aaf850e31af58e5b7e7c97920c267393795b7dbb004cd5f63b227561d713327)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to java.io.InputStream: int read(byte[],int,int), javax.crypto.CipherInputStream: int read(), java.io.InputStream: int read(byte[]), java.io.FilterInputStream: int read(byte[],int,int), javax.crypto.CipherInputStream: int read(byte[]), java.io.InputStream: int read(), java.io.FilterInputStream: int read(byte[]), java.io.FilterInputStream: int read(), javax.crypto.CipherInputStream: int read(byte[],int,int)
			at statement: $i8 = virtualinvoke $r5.<java.io.InputStream: int read(byte[],int,int)>($r6, varReplacer941, $i7)


	 in Method: void realSkip(long)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #5aaf850e31af58e5b7e7c97920c267393795b7dbb004cd5f63b227561d713327)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to java.io.InputStream: int read(byte[],int,int), javax.crypto.CipherInputStream: int read(), java.io.InputStream: int read(byte[]), java.io.FilterInputStream: int read(byte[],int,int), javax.crypto.CipherInputStream: int read(byte[]), java.io.InputStream: int read(), java.io.FilterInputStream: int read(byte[]), java.io.FilterInputStream: int read(), javax.crypto.CipherInputStream: int read(byte[],int,int)
			at statement: i2 = virtualinvoke $r5.<java.io.InputStream: int read(byte[],int,int)>($r4, varReplacer954, $i9)


Findings in Java Class: org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStream

	 in Method: int read(byte[],int,int)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #5aaf850e31af58e5b7e7c97920c267393795b7dbb004cd5f63b227561d713327)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to java.io.InputStream: int read(byte[],int,int), javax.crypto.CipherInputStream: int read(), java.io.InputStream: int read(byte[]), java.io.FilterInputStream: int read(byte[],int,int), javax.crypto.CipherInputStream: int read(byte[]), java.io.InputStream: int read(), java.io.FilterInputStream: int read(byte[]), java.io.FilterInputStream: int read(), javax.crypto.CipherInputStream: int read(byte[],int,int)
			at statement: i2 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>(r1, i0, i1)


Findings in Java Class: org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStream

	 in Method: int skipSkippableFrame(byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #5aaf850e31af58e5b7e7c97920c267393795b7dbb004cd5f63b227561d713327)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: l1 = staticinvoke <org.apache.commons.compress.utils.IOUtils: long skip(java.io.InputStream,long)>($r3, l0)


Findings in Java Class: org.apache.commons.compress.archivers.zip.ZipArchiveInputStream$BoundedInputStream

	 in Method: int read(byte[],int,int)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #5aaf850e31af58e5b7e7c97920c267393795b7dbb004cd5f63b227561d713327)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to java.io.InputStream: int read(byte[],int,int), javax.crypto.CipherInputStream: int read(), java.io.InputStream: int read(byte[]), java.io.FilterInputStream: int read(byte[],int,int), javax.crypto.CipherInputStream: int read(byte[]), java.io.InputStream: int read(), java.io.FilterInputStream: int read(byte[]), java.io.FilterInputStream: int read(), javax.crypto.CipherInputStream: int read(byte[],int,int)
			at statement: i3 = virtualinvoke $r3.<java.io.InputStream: int read(byte[],int,int)>(r1, i0, $i8)


Findings in Java Class: org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStream

	 in Method: void skipBlock()
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #5aaf850e31af58e5b7e7c97920c267393795b7dbb004cd5f63b227561d713327)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: l1 = staticinvoke <org.apache.commons.compress.utils.IOUtils: long skip(java.io.InputStream,long)>($r1, $l2)


Findings in Java Class: org.apache.commons.compress.utils.ChecksumVerifxInputStream

	 in Method: int read(byte[],int,int)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #5aaf850e31af58e5b7e7c97920c267393795b7dbb004cd5f63b227561d713327)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to java.io.InputStream: int read(byte[],int,int), javax.crypto.CipherInputStream: int read(), java.io.InputStream: int read(byte[]), java.io.FilterInputStream: int read(byte[],int,int), javax.crypto.CipherInputStream: int read(byte[]), java.io.InputStream: int read(), java.io.FilterInputStream: int read(byte[]), java.io.FilterInputStream: int read(), javax.crypto.CipherInputStream: int read(byte[],int,int)
			at statement: i2 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>(r1, i0, i1)


======================= CogniCrypt Summary ==========================
	Number of CrySL rules: 39
	Number of Objects Analyzed: 7

	CogniCrypt found the following violations. For details see description above.
	IncompleteOperationError: 15
	RequiredPredicateError: 2
	ConstraintError: 1
	TypestateError: 1
=====================================================================
[main] INFO crypto.analysis.CryptoScanner - Static Analysis took 43 seconds!
[main] INFO crypto.HeadlessCryptoScanner - Analysis finished in 46.07 s

